@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 571 484 620 660 659 665  55  88  60 485  16 655  73 451 540  71 457 606 558 528  28 110 149 140  42  30
 181 617 529 626 672 629  50 504 125 598  93 638  64  54 578  90 526 594 281 403  10  74  19  18 670 158
 201 666 667 126 378 635 644 615  14 180  47  22  41  91 388 165 564 651 583 621 153  92 301 676 236  44
 123 335 582 441  37  67 588 611 142 610  17 663  96 400 592  52 609 618 551 508  99 185 599 146 117  13
 160 194 531 539  46 191  89 553  80 507 164 536  36 675 577 127 515 639 562 493 280 645 202 246  27 187
 161 500 612 431 148 114 255 147  70 632 460 664  35 627 155 325 556 444 603 465 657 105 205 144 154 132
 206 647 492 120 674 113 213 661 159 625  94 203 207 596 501 101 521 503 586 652  85 134 223  61 189 235
 239 671 584 605 102 317 384 550 249 184 200 422  58 563 554  83 572 261 668 442 106 357 104  68 386  72
 141 633 217 654 247 298 199  65 580 275 150 264 219 579 266 167 656 262 597 653 198 252 293 287 283 366
 268 487 222 511 212 250 226 648 231 669 210 276 133 321 209 673 258 538 573 170 233 339 591 176 143 234
 424 178 265 533 338 359 240 641 300 278 292 254 346 291 344 216 156 270 356 454 296 324 349 372 640 285
 314 368 227 330 461 279 289 162 452 490 631 188 650 332 331 295 257 341 439 272 251 302 430 179 327 204
 435 220 476 437 350 428 175 337 345 334 311 248 215 259 263 463 315 244 322 282 587 370 306 367 369 343
 316 379 307 243 221 253 256 333 390 416 365 297 340 525 602 358 409 309 385 224 299 103 320 406 394 351
 412 395 128 417 342 396 353 319 438 355 323 391 375  45 361 410 267 570 304 310 336 328 197 389 286 354
 415 456 407 238 308 360 371 393 414 260 245 458 329   5 139 174 326 229 111 362 419 535 567 432 305 543
 516 271 173 137 373 523 363  53 473 290 505 273 482 427 121 405 284 408  84 115 489 397 468 398 232 541
 471 109 392 347 312 466 382 376 510 502 377 413 514  51  62 374  57 171 288  79 462 274 418 459 555 380
 478  82  49  33 399 506 499  34 429 381 387 519 447 177  95 491  86 426   9 208 498 455 453 494 601 565
 443 136 269 425 520 560  20 477 474   1 546 157 574 100   6 470 195  15 182 421 513 434 469 496 448 450
 585 152 172 190 530  21 472 193 522 138 557 192 595 524  87 512 186  75  97   7 404 545 313 608 575 549
 467  11 364  29 383 446 509 169 135 402 495 352 630 420 303 475  40  63 237 118 532 145 589 637 449 401
  59 445 318 411 566 166 481 196 423  39 479 486 613 527 440 436 108 211 122  26 480 628  66 464  69 542
 593 112   2  43  32 131 518 214 600  98 622  76 547 183 576 642 277 241  23 218 225 590 548 433 614 643
 619 228 119 124   8 616 534 294 552   4 569 130 559 230 107 658 116  31  38 163 537 581 544 649 129 662
   3  25  77 151 483  12 636 168 634  48 646  24 623 348 604 568 488  81 242 607 624 497  78  56 561 517

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00556e+07us (= 10055.6ms, 10.0556s)
Satisfaction error: 1
Number of search iterations: 4464
Number of local moves: 1334 (including on plateau: 559)
Number of local minimum: 385 (including on plateau: 56)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 0: 571 617 667 441 46 114 213 550 580 669 292 188 215 525 361 174 284 171 9 421 404 145 66 433 129 517 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  68 663  35 642 660  57 123  41 565 632 519 662  50 100  64  79 554 645 437  81 617  74  32 615 110 676
 106 609  85 658 144  34 467  46 673 544 114 153 216  43 130 667 400 641 592  47 652  31 165 654 477 453
 528  37 406 549  61 588 204  98 223 630  40 669 659  44 126 599  88 631 256 240 625  27  24 675 102 672
 440  83 671 119  52  39 218  38 357 648 127 387 107 521  87 587 194 585 525  94 607 569 583 514 493 156
 643 116 137  86  54 602  92  96 308 431 151 499 574  84 163 561  63 113 610  45 523 657 485 566 536 606
 653  26  97 164 174 480 497 131 620 530 656 668 158 135 188 196 232  95 637 175 495 103 253 362 556 520
 540 169 297  91 132  99 529 187 533 664 231 517 674 184 392 155 296 122 473 605 618 203 179 140 263 508
 571 628 193 234 157 301 239 589 268 527 343 304 209 276 608 171 258 199 655  55 515 181 573 237 267 243
 245 185 246 286 211 281 633 614 496 531 212 434 205 138 340 148 207 611 612 221 459 259 257 172 622 176
 219 173 274 250 300 167 616 333 577 478 260 332 298 195 145 338 651 190 636 269 324 430 290 139 580 337
 316 118 133 227 325 213 310 341 262 410 277 670 328 217 233 273 241 182 339 647 516 666 374 665 229 289
 407 381 380 208 303 288 383 150 405 192 661 445 329 307 360 265 315 646 305 318 320 291 271 323 264 284
 287 261 346 249 295 344 200 352 292 327 285 401 369 299 302 238 420 558 359 446 386 354 278 505 272 376
 342 488 242 361 351 248  49 331 230 366 581 389 427 358 375 326 414 368 226 330 215 378 348 317 294 447
 393 309 247 312 356 373 435 421 111 225 394 149 464 372 105 475 282 489 152 422 280 365 456 494 336 384
 388 413 377 390 355 251 255 314  66 121 236 367 345 463 399 425 408 482  48 417 275 403 313 418 448 424
  77 559 396 451 570 170  89 416  56   4 535 347 522 244 423 460 180 539 270 391 363 349 438 513   3 436
  75 371 639 541 450 471 101 490  93 398 382 426 461 385 486 334  17  23 311 552 166 104 567 428 415 115
 441 468 432 439 504 429 411 224  60  51 492 202 579 370 412 433 484  21 449 319  65 409 534  80 364 129
 419 452 404 397 476 542   7 487 146 228 442 191 444 500 454 335   2 108  67 472  30 547 465 222 455 509
  19 457 503 543 512  10 443 613 220 124  25  12 177 626 601 524 553 498  18 545  78 350 538 506 189 117
 507 564 584 546  16 518 481 557 469 162 462 161 479 532 572  22 214  62  53 483 206 474 402  73  82 120
 502 619 603 306 627 526 582 201 600   1 210 198 128 624 511  20 604 575 178 578 143  28  71  70 254  42
 136 638  13  59 635 491 283 596 379 235 591  14 555 550 576 568 548   5 321 353 125 279 563  15 197  76
 186   6 501 551 623 650 644 537 470 183 109  36  11 640 154 593 590 147 112 562  58 649  90  29 598  72
 293   8 560 142 458 629 510 597 322 159 466 168  33 594 595   9 586 266 160 134 141 621 252  69 395 634

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00526e+07us (= 10052.6ms, 10.0526s)
Satisfaction error: 2
Number of search iterations: 2761
Number of local moves: 1027 (including on plateau: 440)
Number of local minimum: 230 (including on plateau: 69)
Number of resets: 1
Number of restarts: 0

Problem in column 8: 41 46 98 38 96 131 187 589 614 333 341 150 352 331 421 314 416 490 224 487 613 557 201 596 537 597 => the sum is 8800 rather than 8801
Problem in column 21: 617 652 625 607 523 495 618 515 459 324 516 320 386 215 280 275 363 166 65 30 78 206 143 125 58 141 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 671 240 139  72 554 564 534  95 521  32 485 545 118 205 158 582 607 356 558 159 107 235 597 523 138   6
 585 154  12 624 586 530 621 471 602 622 286  92 278  11 641 426 614  35 527  99  17  73  24 655  82 134
 498  64  25 180 615  58 214 438 551  70 610  38 105 592 639 632 555 541 496   9 272 295   4 434 593 274
 594 384 191 157 517 601  48  27 580 543 189  69 481 231 596 587 609  21 264  68 557 222  56 542 518 149
 603   1 468 188 599 209 579 112 528 525 327 600  15  78 645 571 490  22 589  84  44  10 620 659 199  36
 316  18  47 360 566  30 565 215 561 131 266 617 465 115 519 520 298 473 500 135   5  53 644 608 478 296
 476 259 484 474 381 575 318 207 431 637  66 535   3 152 292 531 537 437   8 232  23 156 399 572 450 166
 544 119 445 550 538 367  98 604 442 368 162 456  86 182 410 416  19 427   7  80 346 184 509 433 529 480
 337 226 522 396 354 472 453 161 423 514  83 432  14  96 553 563 401  26 424 176 477  60 459 513 363 303
 104   2 494 443 364 457 581 403 463 441  89 497 140  79 448 483 451 559 160 341 540 224 351 350  91 246
 452 454 526  61 619 466  37 392 239 508 187 380 325 173 510 253 353 447 407 164 361 326 369 413 238 141
 301 323 383 262 306 486 435 339 129 263  65 429 297 436 314 338 342 310 332 244 460 252 503 402 395 455
 458 281 397 345 385 357 280 358 440 201 290  13 366 340 334 425 393 284 317 446 336 319 343 352 324 417
 312 117 275 277 374 414 347 411 577 309 505 213 387 304 242 400 348 422 372 206 506 449 261 404 267 102
 234 415 321 172 291 322 406 220 405 391 606 676 371 389 169 260 167 233 375 329 110 269 305 344 556 464
 270 273 265 409 349 376 299 203 294 461 390 237 656 328 313 379 377 251 408 420 335 293 308 254 365 288
 359 670 289 181 257 217 227 268 114 640 669 311 470 428 175 208 177 243 515 475 287 491 111 150 330 539
 333 533 211 256 279 125 178 570 398 228 590 258 247 613 249 307 225 626 179 479 285 532 195 190 271 444
 245 493 643 196 144 283 186 664 204 302 562 132 618 573 223 255 229 103 611 627  49 502 230 171 236 320
 193 548 124 210 155 241 633 501 174 145 378 646 569 552  88 194 121 419 198 630 591 499  71  20 546 355
  85 629 667 663 218 675 495 489  31 148 282 113 137 516 183 216  50 665 133 660 122 567 126  59 219 653
 108 642 136 248  39 142 672 507 163 331 504 657 439 547 200  57  33 153 418 388 487 386 616 151 631 146
 101 250  43 661  87  63 370 382 276  93 549 635 560 576 165  40 588 130 147 536 625 652 116 197 492 467
 143 651 628 170  55  62  97  41  90 221  75  77 574 362 673  42 638 482 469 636 598 524 666 128  94 605
 106 421 412 662 123 658  54 511 120 648 192  67 568 300  28 100 127 462 202 583 612 578 430 109  81 647
 373 634 654 584  46  51  74 212  45  29 394  76 512 623  34  16  52 674 185 595 649 650 488 168 315 668

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00539e+07us (= 10053.9ms, 10.0539s)
Satisfaction error: 2
Number of search iterations: 2755
Number of local moves: 699 (including on plateau: 221)
Number of local minimum: 252 (including on plateau: 25)
Number of resets: 2
Number of restarts: 0

Problem in row 3: 498 64 25 180 615 58 214 438 551 70 610 38 105 592 639 632 555 541 496 9 272 295 4 434 593 274 => the sum is 8802 rather than 8801
Problem in row 15: 234 415 321 172 291 322 406 220 405 391 606 676 371 389 169 260 167 233 375 329 110 269 305 344 556 464 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 623 156 209 444 665 614 445 582  99 676 143 544 651 108  43 589  35  63 613 479  19  37 103 117 652  92
 384  62 675 648  61 563 411 588 435 373 179 467  95 184  83 640  70  90 566 641 147  25 195 644 436 139
 423 163 109 666 188 447 497 473 141 601  86 639  78 606  26 409 653  56 607 668 100 124 152 275 492 122
 490 662  84 553  51  85 596 580  67 643  60 424 541 522  50 104 112  36 527 192 669 136 453 107 472 585
 550  72  87 649 673 178 545 660 120 183  65 532 150 575 102 422  79 198 464 127 129 555 584 177 484 441
 603 158 306 261 116 190 547 504 151 604 259 476 402 605 128 210 165 144 646 220 401  94 138 298 598 577
 276 248 232 664 115  91 656 502 243 189 454 650 638 125 169 417 194 205 524 510 362 196 204 164 546 227
 320 160 123 305 155 173 405 225 265 612 443 594 658 263 293 659 357 217 519 670 361 130 113 370 187 224
 462 281 181 351 137 300 591 564  98 394 255 561 330 185 289 637 250 631 559 244 241  88 212 148 645 167
 671 266 231 491  58 230 533 421 222 106 314 586 416 294 186 663 672 262 287 349 202 176 235 199 271 460
 617 239 487 258 299 161 336 307 368 268 327 377 234 301 174 674 316 365 267 387 282 415 291 395 228 428
 322 214 355 318 338 352 374 512 295 363 339 288 364 180 642 221 203 359 340 344 452 285 304 388 219 430
 347 410 273 236 242 389 574 215 465 390 326 354 376 383 321 315 253 360 211 343 342 333 249 459 238 397
 317 207 279 269 319 297 310 309 398 448 254 466 332 303 378 302 367 233 400 270 337 542 379 311 345 429
 346 509 392 396 200 313 229 486 264 372 432  81 292 434 375 197 371 414 508 193 403 280 206 369 246 493
 457 404 480 237 525 407 168 110 240 498  30 385 382 260 427 391 182 458 312 308 208 425   3 450 506 548
 290 325 356  42 286 334 140 517 463   5 471 135 437 353 420 451 331 433 456 499 216 413 461 393 175 399
  57 386 418 118 470 537 507 278  82 126 515  74 514 431 469  34 616 442 247 474 440 539 478 408  52  89
  77 477 439 438 245 583 133 296 632 328  68  40  44 531 341 348 426 482 251 501 518 495 381 218   4 505
  45 581 350  75 557 358  47 256 619 119 412  64  20 496 521  69 572 257 134 633 406 526 615 528  73 468
  76 535 599   1 554  21  41  22 565 159 449 166 516   8 503  53 609 455  59 494 567 602 511 551 523 162
 329 579 335 154 569 570 213  48 171 366 446  27 489  14 578 380 560 277  24 172 661 600 573 593   2  71
  80 481 540 625 500 419 105 131 636 153 592  39  23 552 597  54 272 558 114  10 655  66  55 520 488 536
 283 624 101 149 620 529  15  17 549 121 618 576 483 543 621 142  29 610  32   6   9 562 654  16 284 608
  33  46 513 252 223  31 157 170 626 611 630 111 324 534 475 146 485 628  38  18 667 627 595 132 538 191
 323 556 647 201 635 629 226  28 587  93 634 145  12  11 590 274 622 568  96  49   7 530 657 571  97  13

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.98894e+06us (= 3988.94ms, 3.98894s)
Wall-clock time (full program): 4.04228e+06us (= 4042.28ms, 4.04228s)
Satisfaction error: 0
Number of search iterations: 650
Number of local moves: 430 (including on plateau: 83)
Number of local minimum: 38 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   9 198 615  62 223 636 149  12 662 233 134 126 639 566 649 573 336  11 588  25 607 333  77 589 265 484
 637   2  21  38 135 319  50 554 581 569 346  10 616 411 592 583 515 206 311 600  90   8 647 177 158 625
 604 235  39 205 139 186  18  66 558 268 553 286 488 123 511 660 593 124   5 516   6 528 548 643 289 610
 587  93 618  13 159  73  27  80 543  17  22 458 505 110 603 601 575 152 582 474 612 500  37 308 430 622
 576 153 191 460  78  82  19  89  74 204 128 574 551 602 629 513 584   3  49 368 591  31 544 510 560 638
 495 443  43  26 276  15 415 549 424   4  23 414 497 195 376 518 464 422 454 478  99 568 441 462 105 595
 416 585 283 113 101 185   7 315 439 523  16 499 559 236 493 520 381 102 561   1 486 440 476  95 444 525
 517 400 154 219  32  64 535 434 502  41 157 371 466  60 557 452 498 164 331 479 532 296 526  14 450 550
 527 524  63 125  96  36 387  71 425 468 386 306 496 552 540 507 377 176 451 449 463 388 485 121  42 340
 426 446 168 391  81 100 483 418 173 347  72 297 521 506 489 252 428 477 407 409 389 509 412 228  55 317
 362 410 118 473 264 107 338 538 432 365 421 405 537 188 373 320 355 470 423 370 190 431 395 258  83 175
 307 530  35  28  65 229 453 438 459 372 284 358 353 445 247  56 534 357 363 312 398 403 455 501 471 348
 417 404 447 269 342 413 226 232 390 442 302 337 214 261 324 394 334 350 419 202 490 367 406 248 240 330
 378 239 299 461 482 280 380 396 231 480 420 322 343 427 314 385 277 325 272 344 295 408  92 241 327 383
 339 167 642 246 364 300 243 345 341 278 294 270 238 632 397 352 129 193 318 313 263 457 335 539 369 437
 323 224 304 360 329 654 366 310 393 349 255 275 179 290 199 271 429 326 305 170 316 285 260 512 645 472
 109 298 435 279 669 519 250 332 249 619 620 257 117 262 293 187 650 448 208 216 328 215 132 555 266 288
 281 212 594 545 533 529 292 273 644 237 580 151 287 571 245 200 301 161 207  84 201 242 359 606 256 210
 303 136 658 508 653 542  87 567 120 234 309 617 133 503 197 203 196 536 663 274 183 189 150 475 148 217
 220 115 374 267 433 401 666 611 598 627 624 112 379 487 211 291 184 282 244 562 142 182 225 174 172 218
  61 659 382 628 674 676 640  98 145 163 570 140 147 230 165 130 103 614 254 155 657 209 652 144 399 106
 171 531 541 609 375 631 646  94  68 351 456 162 146 119 222  54 221 621 504 668 143 667 166 227 384  24
  79 630 613 514 633 469 579 675  58 259 253 108 156 361  47 137 169 596 111 141 563  85 665 321 465 114
  20 122 138 635 494 522 546 605 181 547 648 634 160  86  46 178  45 564  57 127 577 590  88 626 491  75
 586 467 670 656 572 641 402  91  44 673 436 661  34  97  30 251  70 565  59 392 104 354 180  33 664  69
  51 578 356 671 599 192 597 608  67 131 492 651  40 481  52 213  53 556 655 672  76 116  48 194 623  29

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00538e+07us (= 10053.8ms, 10.0538s)
Satisfaction error: 2
Number of search iterations: 2305
Number of local moves: 785 (including on plateau: 322)
Number of local minimum: 181 (including on plateau: 38)
Number of resets: 1
Number of restarts: 0

Problem in row 13: 417 404 447 269 342 413 226 232 390 442 302 337 214 261 324 394 334 350 419 202 490 367 406 248 240 330 => the sum is 8800 rather than 8801
Problem in row 24: 20 122 138 635 494 522 546 605 181 547 648 634 160 86 46 178 45 564 57 127 577 590 88 626 491 75 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   1 351  80 569  11 518 145 653 124 309 541 312 556 100 607 622 171 535 505  47 619 532 105 594  71 123
 614   2 610 633  53 523 578 613  16 632 611  73 538  64 140 355 162 153 211  20 583  66   8 631 297 615
 597 168 388 570 219 144 540 609  74 598 608  31 553  55 604 528 512  77 121  51 642  79  61 221 222 529
 626 155 547   7 188 159 127 617 287 589 537 136 391 151 554 460 561 510  76  21 485  90 333 576  18 600
 508 235 530 175 226 308 260 566  17 582 471  89 268 202 517 557  65 545 555 165 559  98  59 534 142 568
 585  92 307 242  91 458 134 533 516 479 577  93 437 491 266 417 571 509 494  22  14 499 150 101 137 586
 513  83  30 326  78  39 599 200  15 524 454 483 432 478 212 495 484 521 515  19 506 531 131 503 130 500
 605  10 498  70  41 438  67 519 446 371 562 433 422 394 560 425  69 468  12 424 456 481 157 497   4 372
 447 164 251 174 462 504   9 420 236 453 482 536 469 493 320 190  36   6 539 215 448 452 389 461 195 450
 507   3 445 113 411 384 181 439 470 487 403 429  34 339  52 120 464 331 442 393 426 340 365 526 208 489
 356 376 434 350 428 407 128 373 440 401 423 264 122 353 501  28 349 415 398 368 475 302 166 310 256 378
   5 492 409 169 392 362 441 347 386 457 410 300 408 421  58  57 334 427 380 336 396 345 402 390 361 316
 369 549 283 414 430 399 383 106 451 364  13 342 379 385 330 387 296 346 311 343 374 348 354 274 276 295
 263 360 220 258 290 289 238 341 321 413 206 436 314 572 179 313 377 271 616 563 189 328 327 367 412 338
 418 292 322 270 641 275 261 232 335 318 319 363 301 294 225 645 659 366 198 279 229 357 381 332 280 209
 323 325 267 273 239 305 285 303 241 298 668 579 606 230 278 272 147 584 247 205 246 152 463 370 652 243
 194 466 551 552 240 170 546 337 324 644 207 299 182 259 675 288 244 180 184 455 250 315 359 245 344 291
 293 543 581 602 224 567 467 282 204 254 304 183 213 167 558 476 252 262 154 486 163 199 281 265 587 234
 233 618 119 419 624 593 201 574 161 197 317 104 375 217 216 196 249 227 625 473 255 257 664 218 416 253
 129 431 286 405 651 277 657  87 665 116 141 490 193 647 117 139 592  88  96 656 231 135 564 228 620 160
 148 237  81 477 472 672 514 269 621  32 178 527 108 591 480 223 158 118  95 629 186 210 565 676 511  23
  97 601  75 192 595 110 496  60 590 112 172 548 627 649 667 522 214 143 550 176 177  42 658 102 435 191
  86 474 669  85 103 580 443  33 628  29  84 655 133 185 109 623 634 114 650 640 156 662 284  63 654  25
  45 648 663 352 542 132 465 203 525  26  27 382  54 306 358  44 397 596 639 635  38 674 329 125 502  94
 173 638  56 660 520 138 449  35 646  48  46 126 575 115 146 395 400 603 107 636  37 670 573 149 612 248
 666 488  99 444 630  50 187  49  62  68  40 588 111 643  72  24 404 406  82 544 661 637 673  43 459 671

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00527e+07us (= 10052.7ms, 10.0527s)
Satisfaction error: 2
Number of search iterations: 2302
Number of local moves: 915 (including on plateau: 393)
Number of local minimum: 179 (including on plateau: 53)
Number of resets: 1
Number of restarts: 0

Problem in column 8: 653 613 609 617 566 533 200 519 420 439 373 347 106 341 232 303 337 282 574 87 269 60 33 203 35 49 => the sum is 8800 rather than 8801
Problem in column 19: 505 211 121 76 555 494 515 12 539 442 398 380 311 616 198 247 184 154 625 96 95 550 650 639 107 82 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   6 634 546 655  54  79 659  96 118  19 588 190  14 273 102 592 527 251  89 590 631  20 616 630 153 669
 593 368  10 632  21 497 605   8 135 648 120 636 206 501 514 578 104 184 330 521 289  57  40 635   2 567
  32  94  18 594  37 650 625 191 110 562 454  33 155 247 614 566 478   7 177 607 545  36 653 502 204 610
 189 643 440 119 340  17 470  31 222 608  35 122 485 198 656 647  56 188  93 523 542  70 663 571 233 640
 128 541 613 529 438 568 584   3  76 572 160 275 210 620 510 586  82 152  29 196 549 371 587 132 193  97
 127 528  47 646 173 254 547  41 162 583  84  39 509 228 534 559 221 111 504 508 518 113 633 482 161 489
 392 475   1 548 431 517 390  26 149 595 286 530 520 140 458 500 437  67 457  15 532 154 496  43  44 598
 436 483   9 310 415 516 486 257  95 601  12 544 432 112 505 466 239   5 159 487 561 100 606 506  13 446
 117   4 387 499 308 441 474 492 409 319 452 456 372 476 423 449 414 229 533  49  11 116 103 405 462 401
 375 443 406 411 396 442 365 362 262  16 573  62 512  38 422 348  27 346 503 439 407 263 169 453 297 464
  66 495 395 399 290 361 324 531 226 321  92 359 555 129 402 178 444 303 170 434 429 250 461 412 381 394
 460 494 277 331 377 455 420 360 176 281 389 366 373 334 388 358 264 309 307 342 272 123 343 410 145 447
 355 364 322 370 426 327 280 469 356 352 421 413 203 296 382 249 316 367 386 347 344 248 393 259 282 274
 451 333 283 320 552 384 427 404 292 242 185 276 450 258 418 424 332 564 336 255 156 345 219 279 304 312
 430 378 266 235 305 338 363 353 493 329 267 398 357 326 237 211 416 337 602 232 208 467 252 244 403 354
 270 435 339 574 179 335 379 194 433 417 317 192 491 311 325 261 380 425 315 225 299 428 341 214 488 234
 158 253 350 468 278 227 323 580 479 136 186 556 557 649 287 291 668 397 150 180 241 553 223 171 265 175
 349 218 197 207 181 182 295 391 230 313 224 383 665 522 238 195 202 481 660 243 674 551 463 220 246 271
 288 285 560  63 314 268 121 591 385 374 199 269 107 408 298 484 644 318 369 301 217 585 294 138 621 300
 465 256 167 134 213 236  74 626 581 231 654 165  71 675 302 200 212 569 558 617 240 472 133 183 604 163
 515  24 209  61 101 596  80 628 576 157 477 629 141 543 164 108 599 400 507 115 611 471 205  65 513 306
 670 130 612 328 539  77 201 622 519  90 419 642  50 582 125 131 293 575  64  72 215 445  78 637 498 187
 480  91 603 166 525 216  68 657 511 284 570 245  51 351 260 142 137 537 550 126 148 615 658  45 651 114
 672  88 565  60 589 146  42 143 666 172 524 536 638 448 105 151 526 535 144  85  52 627  53 597 538  99
 139  83 600  86 667 624  75 664 577 554 490 376  59  30  98  58 174 473 147 673  87 645  73 540 641 168
 639 661 579  55 652  48 124  81 563  25 623 109 618 106  34  69 609 671 662 619  23 676  46  28 459  22

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00539e+07us (= 10053.9ms, 10.0539s)
Satisfaction error: 2
Number of search iterations: 2403
Number of local moves: 966 (including on plateau: 436)
Number of local minimum: 171 (including on plateau: 47)
Number of resets: 1
Number of restarts: 0

Problem in column 1: 6 593 32 189 128 127 392 436 117 375 66 460 355 451 430 270 158 349 288 465 515 670 480 672 139 639 => the sum is 8802 rather than 8801
Problem in column 4: 655 632 594 119 529 646 548 310 499 411 399 331 370 320 235 574 468 207 63 134 61 328 166 60 86 55 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 199 626  10   9 181 123 650  41 446 614 173 632 105 163 131 657 652 257   4   6 609 649 670 396 277 521
  55 578 549  86  71 559 189   1 607 582 599 633 155  51 584 174 585 495  40  68 620  52 644 583  11 230
 587 592 602  13   2 200 603  39 209 580 434 557  92 498 149 478 616 266  27  50 615 621 558   5 244 164
 541 543 646 447  20 480 510 113 560 305 151 545  94  43  83 505 623 115  85 472 662   8  16 600 222 412
 579  15 597  32 201 507  14 167 569 533 514 502  88 146 231 179 556 477   7 519 659 409 629 444  74 153
 608 531 538 518 121  17 501 152 217 455 270 605 413 544 159  30 520 188 162  34  18 637 289 526 198 550
 508 398 606 540  24 154 448 258 532 537 190 467 363 210  33  57 523  49 182 456 612  26 588 416 171 453
 493 308 490 503   3 437 516  64 475 461 133 497 402 471 506 424  19  23  12 330 439 591 517 528  75  84
 482 400 387  82 332 342 378  28 411 504 426 590 451 351 184 405 462  25 423 377 185 479  53 435 491 118
 460 487 534 450 522 109 372 294 306  46 347 422 530  80 551 535 355  93 383 464  87 143 323 278 165 465
 418 340 359 489 458 486 352 242 401 322  78  29 485 499 463  72 406  97 484 459 452  66 368 394 243 339
 337 315 365 248 404 415 255 410 474 274 260 376 119 392 419 366 469 326 397 325  21 431 345 317 428 313
 252 350 442 430 438 329 299 319 281 287 232 389 373 310 282 440 286 349 318 297 407 371 314 212 427 367
 280 432 358 393 399 261 256 344 382 208 361 388 375 390 362 293 304 346 268 436 334 328 265 307 288 443
 235 420 341 356 384 336 236 529 640 206 403 353 320 348 247 324 250 273 515 295 251 275 272 246 525 221
 309 298 284 316 279 160 302 429 421 147 374 338 224 357 433 360 395 301 473 292 391 225 380 186 572 555
 276 220 202 311 321 364 290 655 303 628 651 229 136 227 283 476 331 622 214 300 233 269 249 254 512 245
 379 262 195 573 228 425 107 470 611 566 312 240 175 176 414 156 291 454 617 127 285 215 150 219 524 630
 223 166  96 565 668 263 117 492 264 333 643 238 271 625 180 237 335 571 327 226 488 130  69 158 562 554
 216 194 193  98 610 267 673 445 137 142 619 187 511 253 639 548 110 494 369 664 129 183 666 157 177 120
  95 241 259 205 595 635 116 500 138 141 239 139 642 627 546  77 196 536 636 112 381 207  35 197 665 641
 132 122 296 660 483 624 108 553 106 457 354  45 575 570 654 128  60 594 589 563  63 449 161  38 386  31
 192 213 168 102 234 539 170 466  81 172 527 145 663 675  99 672 218 542 370 674 125 568 496 144 343 203
 135  70 111 631 576 204  90 574  76 191 408  73 101 104 634 613 148 513 596 604  89 441 671 552 385 211
 134 658 114  91 661 509 648 618 100  62  61  79 577 567  67 417  44 669 647  58  65 547  37 564 169 638
 676  22  59 653 586  56 601 598  54  48  42 103 561 124 468 178  47 126 656 593 581 481  36 645 667 140

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00535e+07us (= 10053.5ms, 10.0535s)
Satisfaction error: 2
Number of search iterations: 2413
Number of local moves: 753 (including on plateau: 282)
Number of local minimum: 214 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 199 578 602 447 201 17 448 64 411 46 78 376 373 390 247 360 331 454 327 664 381 449 496 552 169 140 => the sum is 8800 rather than 8801
Problem in diagonal 1: 521 11 5 16 409 18 456 12 25 355 72 419 310 375 353 374 628 611 492 673 635 483 102 111 658 676 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 663 636  66 645 498 149 173 302  93 624 570 252 609  68 673 394  23 662 355   1   7 384 434 278 221  21
  17 543 593 675 218  59  18  76 526 539 618  90  20 587  87 577 573 579   6  89 648   2 639 247 154 621
  45 550  69 140  88  67 625 561 541 441   9 576 234 222 511 304 647 489 546 578 272  14 127 566  25 554
 352 562  72 297 469  92 405 613 438 617  58 412 599  95  37 131 637 572 638 466   3 133  40 306 151 606
  77  35 200 584  22 311  11 596  16 386 268 280 581 253 569 448 506 619 230 564 660 650 130 211 220 374
 547 568 282 143 185 338  53 373 478 508  36 525  42 668  91 119 614 555 455 470  48  19 612 531  64 476
 528 545  81  31 424 238 203 620 416 486  55 468 600 114 305  62 530 556 452 642  38 205 475  44 146 537
 214 383 223 512  12 442 495 436 503 103 451 490 601  71 571 404 574 310 111 166 464 349 389  83 358  86
 397 520 152   8 172 522 284 439 375 449  60 514 516  99 413 117 517  24 430 437 492 319 482 339 295 429
 400 632 357 398  10  54 540 176 266 330 216 422 362 551 461 322 300 236 509  57 369 420 510 118 379 407
 524 575 124 329 421 473 314 262 597 229 419 410 390 335 323 191 125 521 396 327 243 370 325 102 326 150
 471 148 292 395 301 634 500 356 444 281 488 288 447 165  85 367 156 456 340 496 315 348 321 108 594   5
 232 481   4 391 286 443 458 328 359 313 336 387 450 363 501 494 320 308 392 457 343 365 257  50 137 346
 350 622 275 377 299 342 493 273 382 210 337 344 385  29 445 535 207 360 265 255 353 276 228 283 224 652
 267  75 157 403 431 378 467 258 402 162 174 676 361 368 296 264 393 186 287 277 318 270 388 552 317 674
 240 433 474 128 274 324 294 293 179 256 519 589 462 591 249 415 242 285 334 175 426 144 341 527 298 309
 354 406 483 428 588 244 208 261 177 199 626 184 239 401 333 513 423 289 192 204 246 231 479 627 279 187
 259 164 585 171 595 139 237 263 366 269 658 141 248 399 502 659  49  13 225 411 371 351 303 542 672 209
 201 115 480 667 598 250 372 669 533 168 212 113 206 260 155 217  51 380 169 147 160 536 477 586 671 408
 183 112 623 245 193 644 307 454 135  33 608 628 312 472 241 463 136 110  96 641 440 194 198 465 653 215
 553 170 544 640 607 558 583 161 235 163 233 459  52 538 104 271 251 120 226  94 123 523 167 432 649 345
 615  26 446 106 347 656 153  73 159 643 487 190  32 484 188 197 181 534 654  79 557 646  61 560 611 116
 196 158 629 515 529 138 418 195 635 592 290  97 126  74 497 499  43 202 548 381 485 219 504 376 414  41
  46 182 532  78 604 602 435  84 453 142 101 121 178 460 666 549 590 291 331 655 180 661 227 332 254  47
 565  28 491 425 213 559 122 664  63 631 563  65 651 518 364 189  56  39  34 129 630 665 605 109 107 316
 505 132 567  70 417 145 633  15  30  27 409  80  98 616 134 100 657 105 580 603 610 507  82 427 582 670

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00027e+07us (= 10002.7ms, 10.0027s)
Wall-clock time (full program): 1.0056e+07us (= 10056ms, 10.056s)
Satisfaction error: 2
Number of search iterations: 2307
Number of local moves: 722 (including on plateau: 302)
Number of local minimum: 201 (including on plateau: 46)
Number of resets: 1
Number of restarts: 0

Problem in row 6: 547 568 282 143 185 338 53 373 478 508 36 525 42 668 91 119 614 555 455 470 48 19 612 531 64 476 => the sum is 8800 rather than 8801
Problem in row 10: 400 632 357 398 10 54 540 176 266 330 216 422 362 551 461 322 300 236 509 57 369 420 510 118 379 407 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 577  19  18   4 207 600 127 135  74 191 662  53 643 568 639 570 630 548  92 101 652  87 564 483 545  12
 611  26 621  27  86 137 368 205  15  68 629 596 490 116 307 471 584 532 400  89 582  78 659 607  64 433
  34 524 520 156 242   8 499 230  43 265 655 522 606   2 497 589 197   3 586 194 649  52 565  10 599 554
 487 187 631 129  69 645  76 539 381 151 441 580 581 125 131 602 558   5 553  24 409 114 359 466 537  21
 136 467 374  36 269  13 366 113 121 290 510 501 587   7 124 562 566 505 547 535 521 294 288 533  42 494
 270 597 443  49 204   6 511 339  75 170 567 525 552 447  11 634 238 354 561 476  16 185 544  23 485 519
 232 526 376 179 229 542  30  95 469 107 647 428 557 152  94 572 571 474 574  17 456  71 318  58 538 489
 161 556 528 468 226 573 103  14 246 118 172 590 628  81 370 623 453 529  31 100 228  50 591 348 518 496
  98 423 461 495  62 481 168  90  32 154 462 405 541 488 517 203 508  84 465 418 551 130 569  33 500 463
 173 372 513 480 132 563 259 363 442   1 472 440 498 157 380 484 394 247 460 245 444 219 277 412  40 334
 457 385 576 417  73 527 452 347 324 435 449 403 321 371 305 512 362  77 286 196 278 342 182 212  54 458
 384 392 310 407 251 165 429 155 459 379 330  28 382 422 375 411 199 491 450 364 325 430 241 432 244 346
 239 410 289 351 296 475 276 377 297 192 398 415 404 295 206 393 322 389 231 360 373 395 356 280 357 425
 464 388 335 332 358 340 451 275 268 426 333 260 218 240 437 343 256 478 301 397 273 313 309 319 408 279
 323 243 386 193 546 176 550 146 257 349 320 190 641 439 250 217 258 209 378 304 414 282 329 365 667 369
 585 261 302 390 448 224 236 345 235 473 619 291  97 413 287 406 223 284 110 142 234 416 352 618 455 355
 341 263 353 300 420 396 266 338 624 534 221 169 140 233 128 171 575 189 638 271 167 660 598 367 158 281
 445 328 298 267 470 308 264 292 578 515 315 227 102 644 311 225 262 616 293 493 317 431 177 336 106 181
 421 255 237 610 671 178 180 665 186 531 133 252  67 595 198 213 661 174 594 560 195 401  85 201 477  61
 163 211 216 337 663 314 502 316 664 615  47 215 108 303 642 111 327 601 139 454 614 593 175 162 126 183
 514 149 249 143 486 674 220 612  88 592 147 115 144 326 299 159 160 283  65 637 675 424 306 622 633  79
 654 210  82 523 344 200 608 559 651 446  51 150 254 438 188  99 134 120 605 331 222 650 145 555  66 516
  70 672 248 666 673 434 507 503 604 214   9  96  29 648 670  22  45 208  80 504  20 530 312 285  83 669
  57 202 274 613 391 656 626 636 617 658 148  72  63 166 627 123 153 112 104 588  35 579 109 635 419 138
 506 676 105 609 549  44 543 509 383 387  25 625  93 646 536  48  46 657 141 361  60 583  41  37 427 164
 399  59  56 620 436 122 184 603 668 540  39 653  55 479 272  38 119 632 117 640  91 492 350 402 253 482

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00539e+07us (= 10053.9ms, 10.0539s)
Satisfaction error: 1
Number of search iterations: 2401
Number of local moves: 1039 (including on plateau: 437)
Number of local minimum: 194 (including on plateau: 54)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 12 64 10 359 294 16 17 31 84 394 512 375 295 218 190 619 534 578 665 502 674 344 666 274 676 399 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 670 400 587  94 623 604 613 549 247 472  73  68 180 675  69  43 138 118 181 103 598 516  42  67 665 406
 466 672 548 542 498 600 544  39 102 363 122 101 195 647 117  38 606  75 602 133 438  98  65  57 673 460
  76 412 137 631 543 625 537 123 500 457 119 125 256 642 190  92 546  61 250 664 532  88  62 337 379 417
 322 145 495 668 132 521 671 505 121 540  58 155  64 674 220  53 469 170 584 502 279  86 388   1 562 416
 169  87 407 162 669 660 573 204 192 545 126 142 263 171 120  46  83 213 608 566 633 666  89 131 618 658
 624 153 617 519 187 309 526 667 202 641 194 129 172 528 477 159 229 257 596 104 443  93 106  72 157 640
 124 269 661  97 649 160 488 207 302 553 100 134 621  79 599 167 482 154 619 345 655 158 146 179 191 662
 156 273 225 348 236 676 605 614 149 645 188 278 185 271 136 226 289 307 353 110 652 139 168 422 565 585
 113 248 471 281 637 219 536 151 656 430 369 166 115 109 274 201 161 657 147 577 563 198 362 323 178 659
 186 206 644 535 324 210 615 293 275 392 261 200 196 332 593 485 299 561 326 334 468  78 266 264 214 244
 316 163 437 308 426 152 515 164 329 592 291 429 648 404 233 360 224 184 357 594 267 319 341 141 312 295
 409 262 346 297 321 215 484 487 284 254 391 283 320 327 420 365 227 296 361 304 411 352 335 368 344 338
 298 387 491 350 464 265 336 217 249 441 315 518 386 328 175 230 189 305 408 280 241 397 343 442 364 382
 301 349 286  20 425 303 333 451 396 351 243 260  44 419 470 458 440 465 252 347 285 306 493 514 290 300
 384 454 270 432 433 448 208 234 475 288 292 421 258 398 418 216 359 395 509  59 428 245 354 568 238  17
 405 375 394 434 259 371 240 331 401 380 355 235 372 311 381 325 463 403 410 462 367  26 399 242 445  15
 478 356 176 444 277 510  95  33 415  77 435 569 413 467 378 597 246 452 385 144  45 481 523 377 414  14
 294 232 383 424 456 389  48 313  21 314 499 390 525 239 393 342 522 107 177  37 130 534 423 609 494 506
  47 317 373 209 287 374  12 461 492  71 511 450 449 483  90 538 459 564   2 550 358 330 572 496  84 222
 512 589 199 135 105  80 340 582  82  49 513 446 547 504 508 376 473 497 276 108 182 503 439 627  18 111
 591 476 218  55 447 527   3 370 431 127 507 480 611  91 453 626  51 402 529  96  13 455 474  25 520 223
 489 530  66 610  27  70 173 554 575 114 581 479 541  34 231 579 629  11  35 650  31 339 552 639 212  50
  23 663 140   5  99 165  28 560 533 251 531 622 427 601 205 576  41 571 590 211  32 616   6 567 501 237
 634 646 116 556  30   8 255 555 272 228 559 636 221  29 436 643  24 366  36 310 282 551 653 112  85 558
  63  81  40 638  54 197   4   9 583  52 588 490 539  22 603 574 524 578  60 557 318 620 570 586 268 183
 651  56  74   7 193 143  19 128 517 174 580 595 253  16 612 486 628 632 148 654 150 607 630 635  10 203

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.8375e+06us (= 4837.5ms, 4.8375s)
Wall-clock time (full program): 4.88884e+06us (= 4888.84ms, 4.88884s)
Satisfaction error: 0
Number of search iterations: 809
Number of local moves: 679 (including on plateau: 214)
Number of local minimum: 22 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 629 138 450  95 343 103 526 437 519 576  11 587  56 589 198 112 657 109 644 521 636  40  73  60 604  88
  47 660 435 108 141  31  80 532 530 599 647 615  39 362 652 154 269 314 195 274 397 210  65 132 668 645
 170  57 431 676  67 131 168 403 561 174 511  91 104  90 338 156 221 672 603  59 605 674  77 667 522 573
 628 159 544 665  81  66  87 467 565 601 197 147  50 478 312 448 151 177 464 306 420  96 659 244 627 162
  55 203  82  68 626 654 119 607 354 121 570 625 189 242 614 222 358 201 588  53 367 571  71 578 548 115
 142 623 597 130 251 666 136 650 646 125 148  97 199 489 633 500  54 268 252 143 663 401 137 167 568 116
 128 173 641  44 471  32 675 575 590  79 200 331 664 583 169 155 419 184 514 640 289 126 220 135 619 145
 215 106 658 160 525 205 217 380 655 213 232 110 105 582 538 669 196 267 671 400 496 164 255 186 402 194
 584 283 158 133 648 226 218 539 673 239 192 412  92 635 279 247 152 243 399 320 632 219 278 341 493 166
 234 178 190 182 580 348 240 470 179 553  63 209 150 662 670 567 241 100 564 225 492 149 328 193 617 417
 146 248 208 323 508 261 114 560 557 293 118 223  85 421 535 256 453 266 520 392 595 270 409 316 430 294
 309 288 418 393 296 432 353 345 304 180 303 405 344 297 340 202 369 425 518 368 153 321 407 307 479 245
 329 347 472 381 355 188 282 335 441 376 301 308 259 339 502 504 310 275 231 350 424 330 185 319 386 272
 286 191 531  18 398 302 356 456 276 373 281 378 574 475 257 346 284 408 254 357 387 250 204 516 237 406
 438 317 337 486 206  41 227 352 305 322 439 351 249  99  16 549 463 507 271 542 365 415 410 484 111 499
 461 363 246 447 433 389 452 238 134 295 395 260 300 230 229 298 547 332 382 443 214 280 384 311 364 374
 324 360 342 440 172 333 434 366 349 436 527 396 579  27 315 258  22 473 379 541  37 411 404 235 129 512
 444 455 277 361 139 372 144 236 299 414 253 533 624 187 375 513 505   1 127 377  75 460 426 477 175 552
 385 446  26 454 318 370 462  17  42 334 488 466 388 313  89  62 585 413   5 524 336 534 609 491  51 593
 459 554  70 610 458 631  20  43 163 211 390 487 427 510 117  74 481 618 416   4 140 555 423 359  86 495
 474 581  35 545  64 540 546  29  38 551 371 391 445 161  93 422 428 600 292  72  24 469 613 620 124 273
 494 490 480 265  12 596 485  36  15 501 457 429 558 165 262  61 497 651  98 498  34  23 536 559  84 515
 591 606 263   9 287 634 572 181 176 468 465  30 612 264 482 157 529 113 290 224 451 503 325 517  19  33
 285 602  49 608 394 506 616 120  14 550 556 611 543 122  52 639  25 594  58  10 171 449 598   2   6 621
 537  46 212 563 586 216 642 101 183 123  48 102 523 476  78 569 509 562  45 566 291 228 622 577 383  13
   7 327 649 637 442 528 630 326 233  94 638 207 643   3 656 661  76  28  21 592 107 653  83   8  69 483

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.304e+06us (= 6304ms, 6.304s)
Wall-clock time (full program): 6.35783e+06us (= 6357.83ms, 6.35783s)
Satisfaction error: 0
Number of search iterations: 1243
Number of local moves: 767 (including on plateau: 358)
Number of local minimum: 59 (including on plateau: 47)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 534 582 648 138 602 637 622  58  75 435 109 543  85 631 102  53 530  71 121  73  77 670  82 183 464 676
  29 632 104  61 610 552 668 479 112 604  46 420  93 526 123  27 470  31 658 161 140 674 317 615 608  41
  51 402 627 243 380 585 665 171 204 651 129 590 119 613 116 212 548 628  62 535  69 463 103 187 267 181
 203 671 132  92 508 581 653  90 642 517  39 469 177 209 634  20 493 118 490 272 195 645  18 223 542 168
  54 580  57 486 644 524 650 368  97 639 131 568 189 523 640  42 292  22  72 255 239 355 146  70 509 649
 117 254 482 487 562 643 592 107 507 488  96  83 244 495 106 328 673 155 184 170 660 484 154 384 207 139
 390 136  68 655 528 100 500  43 626 629 163 190 148 657 285 126 510  74 360 664 201 501 125 289 166 667
 675 153 345 283 478 560 458 313 151 273 236 149 162 426 337  98 574 206 652 178 472 429 338 241 558  56
 229 213 160 193 661 477 672 179 666 525 113 156 385 341 394 200 611 536 274 228 142 473 157 364 158 294
 237 224 319 185 656 448 208 538 336 659 263 324 180 606 214 310 617 293 352 351 221 399 182 143 249 287
 152 346 120 245 415 331 270 646 286 268 669 307 220 374 605 290 564 365 202 279 247 350 344 316 375 215
 450 347 447 303 172 222 266 312 198 457 498 357 275 332 335 369 378 192 412 246 343 638 306 356 326 264
 663 300 291 366 334 127 256 444 377 235 231 199 440 210 654 311 238 465 296 280 400 276 386 217 423 382
 371 302 396 483 227 261 318 349 218 298 417 315 518 329 437 455 258 309 416 196  26 432 389 234 471 376
  86 262 325 462 297 322 370 354 271 387 367 363  52 446  78 453 419 425 320 466 392 240 314 449 467 414
 305 124 253 353 421 301 413 511 321 308 502 257 476 340 383 205 265 398 330  30 491 333 454 359 260 408
 404 618 395 295 269  19 515  49 411 252 397 342 388 373 284 424 174 521 323 348 492 242 438 128 361 339
 422 381 405 546  79 248 211 393 165 133 407 433 372  37 566 410 144  17 612  36 614 167 504 512 506 481
 474 544 259 427 226 251  89 281 230 327 551 578 434 135 250 554 108 531  40 459 499 194 299 539   8 514
 304 443 445 522 130 439  10 110 431  81 601 406 520 159 403 537 115 556 541  44 489 169 428 503   6 409
 391 475 401   9  65 176  21 559  48 191 461 570 616 441 505 603 101 576 496 607  66 186 362 418 452   5
 451  80 442 588  25 122  91 480 609  23 468  88 598  12 533 456 282 567 513 591 547  99 595 529   1  11
 497  64 620 134 197 277  50 561 647 219 593 430 579 111   4 527  87   7  38 594 485  63 662 583 232 540
 623 599 460 596 288  15  34 358   3  95 573  35 555 175 278 586  59 557 225 550  94 114 494 233 569 633
 584   2 572 625  13 147 145 516 621  47 164  76 379 216 519 575 150 636 188 587 565  32 641 137  45 619
 105  67  28  24  14 436  55 532 549  60 577 553 597  84  16 630 141 545 624 600 635 173 563 589 571  33

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00536e+07us (= 10053.6ms, 10.0536s)
Satisfaction error: 2
Number of search iterations: 2314
Number of local moves: 961 (including on plateau: 432)
Number of local minimum: 189 (including on plateau: 52)
Number of resets: 1
Number of restarts: 0

Problem in column 7: 622 668 665 653 650 592 500 458 672 208 270 266 256 318 370 413 515 211 89 10 21 91 50 34 145 55 => the sum is 8802 rather than 8801
Problem in column 20: 73 161 535 272 255 170 664 178 228 351 279 246 280 196 466 30 348 36 459 44 607 591 594 550 587 600 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 669 136 492 672 631 244 552 129 623 115  50  51  45  95 198  59  78  69  47 632 617 601 596 191 616 593
 494 399 180 108 610 215 405 434 535  85 141 238 603  76  71 111 653  52 124 572 488 676  79 582 329 541
 508 670 588 585 589 149 619  68 635 122  36 181 146  64 179 165  44  46  82 661  84 148 564 657 571 640
 444 643 337 668 350 442 658  77 583 207  92  29 219 103  61 591 131 114 534 555  94 190 463 594  90 532
 546 613 199 218 648 106 660 427 481  66 307  53  74 101 117 278 166 134  67 587 638 581 621 167 533 413
 615 674 650  99 184 649 144 641 484 573 192 120  98 109  57  49 257  75 160 531 664 118 169 607 249 633
 456 673 654 116 142 266 236 459 611 259 227 100 528 176 214  88 104 223 209 599 614 233 221 296 666 431
 545 645 150 217 433 618 523 262 625 368 283 235 286 178 330 152 380 317 225 477 220 128  97 455 170 482
 524 376 172 254 186 567 298 586 630 230 232 310 590 161 258 140 263 667  43 509 157 216 250 671 241 270
 486 110 251 123 305 419 208 622 525 384 253 362 512 119 156 147 652 290 287 454 353 279 323 496 289 396
 312 247 256 168 319 322 386 574 504 280 440 246 393 347 260 480 379 365 195 378 284 255 210 548 359 294
 377 175 299 416 211 154 155 450 277 495 357 348 320 226 578 333 381 466 358 429 316 340 389 420 291 240
 374 675 438 361 308 473 261 274 212 234 313 268 162 327 196 472 335 352 273 410 500 300 447 133 402 301
 391 185 309 344 231 446 182 479 293 382 324 338 321 417 363 276 288 441 364 418 349 341 159 360 412 388
 426 383 328 428 366 370 239 435 285 204 369 354 476 394 387 408 375 521 390 153 395  56 295 334 367  63
 311 269  48 194  19 406 302 303 516 518 164 437 432 336 451 264 304 292 411 315 422 561 430 171 460 465
 228 113 404 397  18 474 439 332 158 342 272 343 423 385 403 398 346 339 461 252 331 271 401 297 457 517
 105 306 275 558 373 506 443 174 213  58 400 414 407 467 189 483 314  23 445 163 436 575 553 229 499 193
 202 490  87 478 487  80 356  83 188 372 468 665 267 634 514 245 566 507  41 135 415 281 143 485 606   6
 127  73 449 511 121 475  15 224   5 540 318 326  86 605 520 636 519 580 505 325 527 355  89 248  93 529
  65 137 565 539 549  14  28 345   3 604 471 563 448 602 421  11 409 469 595  21 130 424 556 183 139 510
 107 351 568 522   1  81  40 453 177 243 651 547 489 543 530 493 554 132 627  16 655  42 515  31 425   8
  54 125 560  55 584 513 138 265   4 371 538 600 462 576 608 646   9 551 470  33  38 458 503  37 501 102
  72  39  96 536  20 173 526 222   2 498 647 464 452 624 570 656 620 637 598  24  22 592 639  30  10  32
 126  91 242 200 579 569 491 282 206 609 644 659 502 577 544 663 112 597 628   7  35 151  62 187  13  25
 237 203 205  34 537  70 497 201  26 642 612 550  60 559 626 557 562 542 662 145  17 629  27 392  12 197

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00525e+07us (= 10052.5ms, 10.0525s)
Satisfaction error: 2
Number of search iterations: 2965
Number of local moves: 1041 (including on plateau: 478)
Number of local minimum: 280 (including on plateau: 58)
Number of resets: 1
Number of restarts: 0

Problem in column 3: 492 180 588 337 199 650 654 150 172 251 256 299 438 309 328 48 404 275 87 449 565 568 560 96 242 205 => the sum is 8802 rather than 8801
Problem in column 25: 616 329 571 90 533 249 666 170 241 289 359 291 402 412 367 460 457 499 606 93 139 425 501 10 13 12 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 128 349 602 566  69   4 135 675 403 604 113 129 643  29 146 649 537 559  88  60 285 659 580  68 668  53
  57 631 106 365  19  50  81 300 584  48 210 558 617  15  18 493 369 599  45 673 613 585 624 239 595 307
 151 623 211 664 291   5 635  85  91  51 138 405 598 398  97 603  16  42  56 413 632 619 224 591 618 544
 428 470 561   8 112 130 249 542 577 233 143 478 575  93 190 588  10 298 513 482 228 504 263 429 535 162
  54 650 517 609 390 168 387 383 608   7  20 564 593  58 412 550  52 557  31 104 555  22 622  83 663 142
 217 404 536  80 139 172  27 115 534 212 234 607 337 397 116 541 621 523 554 494 191 605 545 238 148 214
 283 530 546  77 149 445  43 505 472 109 223 126 533 524 117 500 547 484 496  41 483 589 528 178 179  94
 553 434 395 132  71 520 492  30 503 161 230 455 457 388 462 521 432 376 346 475 333 489  40 208  46 252
  59 450 571 463 271 174 511 406 363 512 256 279 451  99  84 444 456 248 515 471 480 359 122 215 361 181
 461  65 356 466 415 187 459 302  96 443 189 408 257 477 431 549 137 326 481 540 594 105 488  67 392 110
 308 487 418 315 206  11 420 452   1 246 582 427 396 491 438 328 314 407  74 458 373 270 417 240 280 442
 399 331 449 610 192 118 570 393 281 343 447 114 426 424 131 231 401 568 400 268 421 269  32 305 262 416
 464 386 374 389 357 360 350 321  78 325 354 381 243 409 344 384 441 275 250 276 278 410 334 375 330 313
 316 385 508 439 367 382 236 329 310 347 290 324 364 425 241 309 379 342 284 341 318 303 352 255 323 332
  21 574  14 640 436 358 322 362 260 368 339 293 306 274 348 340 336 435 266 288 319 378 345 440 320 419
 264 213  26 592 433 366 394 502 294 519   3 579 119 423 620  24  44 304 625  25 185 637 551 355  89 615
 497 245  61 312 448 380 627 200 216 506 402 265 612 229 656 335 446  13 204 209 272 175 258 597 486 150
 516 170 171 226 430 498 169 176 586 186 552 261 286 237 556 287 277 194 218 183 140 123 639 507 543 670
 377 253 242  35 628 467 205 273 353 538 372 173  12 188 164 219 141 601 411 660 569 251 196 514 499 460
 267 124 203 155 476 474 654 111 222 606 600 145 144 221 674 244 153 596 154 669  87 195 539 454 220 414
 296 160 522 199 648 468 133 227 370 653 573 125  95 672  34  76 529 197 225 198 518 156 351 662 235 479
 527 159 152 465   6 634 158 562 661 525 667 108  64 232 676 103 184  38 647 292 254 437 167 422  28 633
 311 121 509 611 485 526 532 630 127 136 642 202 157 641  73  47 576 565 636  23  66  92 193 247 163 490
 563 147 645 166 652 666 614 644 177 338 182  86  55 572 473 102 560  62 107  90 581 100 289 531  82 317
 638 391  36 180 616 583 101  75 165 207 453 651 134 626 629 301 548  72 510 501   9 371  63 282 657   2
 646  49  70  37 495 655 297 201 469 578 587 658 327 259 671  33 295 120 665 567  17  98  39 299  79 590

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.53733e+06us (= 7537.33ms, 7.53733s)
Wall-clock time (full program): 7.58987e+06us (= 7589.87ms, 7.58987s)
Satisfaction error: 0
Number of search iterations: 2127
Number of local moves: 681 (including on plateau: 182)
Number of local minimum: 172 (including on plateau: 29)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 585 625  72 568  10 612 548 112  73 622 144   5  13 596 581  81 567  17 151   8 609 608 653 643  11 287
  45  54 117  56 557 191 640  93   9   3 587 617  37 632 578 660 593  62 645 261 606 129 624 639 330  36
 111 571  34 490  16 647 605 126 350  12  46 644 569 536 249  20 237 423 502   7 627 598 531 208 486 156
  44 576  21  22 508 650 420  96 148 534  86 582 570 506 137 309  19 146 488 425 590 583 166 579 541  55
 121 545  24 535  49 523 413 128  57 370 594 635  52 634 500   6 267 558 473  67 429  26 533 610 498 154
 152 553 343 633 543 505 556  32 477 177  53 138   1 495 481 115 436 279 524 175   2 496 575 469 517  74
  97 530  91 511  65 325 493 133  76 439 513 116 131 527 186 515 470 125 551 259 521 415 467 494 529 222
 141 386 442 426 540 572 544 185 472 547 463 464 516 419 255  64   4 422  50  59 342 503  28 430 378 149
 110 522  84 447 504 607 526 179 157 219 449 528 456 440  18 501 336  15 375 127 458 491 176 471 492 113
 200 510 550 427 445 435 437 206 210  35 172 485 403 412 499 134 143 214 318 483 446 431  14 354 519 319
 297 409 475 417 280 320 209 277 407 465 362 390 405 455  79 132 406 452 368 183 462 367 361 358 250 215
 299 307 271 514 384 301 383 334 324 323 416 305 380 421 170 315 410 251 444 395 364 389 345 328 193 235
 291 262 308 269 457 300 274 293 546 434 365 285 306 296 232 373 448 258 404 461 357 340 314 381 295 252
 388 332 240 322 379 223 377 372 382 385 396 248 264 333 387 453 230 344 303 247 321 397 366 408 391 313
 478 286 276 414 648 335 393 398 266 263 302 236 374 418 284 304 349 317 669 244 331 292  68 290 207 359
 438 337 509 278 224 234 150 394 189 356 525 352 281 268 329 204 564 674 392 347 171 142 194 659 242 348
 489 466 229  70 221 360 188 665 282 562 162 338 316 273 327 629 597 371 197 260 289 122 294 245 233 616
 428 140 353 275 217 346 256 507 573 651 212 238 253 174 672 326 270 618 363 312 231 288 257 192 195 454
 549 164 482 187 225  94 239 339 254 241 158 652 182 199 664 211 355 468 631 311 167 298 537 130 621 443
 595 160 178 265  82 145 614 673 218 181 205 213 168 201 542 663 283 173 135 615 402 227 351 220 636 656
 602 123 603 159 561 676  75 580 497 539 369 202 611 272  85 310 203 108 180 637 114 198 109 196 226 566
 480 107 649 136 577 120  98 654 589  69 124 642 184  78 399 401 161 560 216 559 165 655 341 190  63 584
 459 119 641 628  83  99  30 484 626  60 668 155 552  51 555 592 460 243 228 604 101 441 246  95  61 520
 591  31 662  92 646  77 147 451 586 588 658  88 563  27  41 554 432 376  47 630  42 102 565 118 169 518
 411 661 671 620 106  38  33 666 600 103 105 104 613  48  39 479  29 670  89 638  80 163 599  23 675 538
 400  25 476  40 474  66 153 424 433 623 667 139 601  90 512 450 532 657  58 487 574 100  87  71  43 619

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.21312e+06us (= 4213.12ms, 4.21312s)
Wall-clock time (full program): 4.26518e+06us (= 4265.18ms, 4.26518s)
Satisfaction error: 0
Number of search iterations: 703
Number of local moves: 443 (including on plateau: 97)
Number of local minimum: 27 (including on plateau: 13)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  15  25 634  97  14 245 633 274 592 206 648 594  36  26 563 611 572 566 642 153 602 331  83  10 598  31
 561   2 569 214 339  42 472 154 534 225 480 660 101 106 102 549 593  40 616 490 568 599 116 114 483  72
 125 105 521 175 465 119 607 630 257 129 519 628 230   9 575 571 588  76 650 552   5 159  51 564  12 479
 585   3  55  21 559 168 499 520  46 103 579 524  91 199 147 612 590 587 613 343 557 609 287 271   6 227
 551  77 404  39 577 619 617 450 267  84 492 596  73  74   8 601 586 581 614   7 567  60  20 218 597  22
  16 121 484 537 158 211 584 338 463  66 431 517  29 504 306 505 447 126 529 507 284 547 156  13 511 411
  44   4 536 151 385 434  75 433 276 425 427 554 482 429 498 506 523 514 622  18 539 406 188 172  35 124
 436 348 424  78  27 508 277 112 512 161 558 455  85  50 530 651 375 535   1 562 475 589 205 446 390  11
 544 510 437  93  69 458 531 491  64 157 453 464 219 407 400 509 576  17 460 354 231 371 128 107 493 258
 428 358 342 394 397 528  48 294 185  28 278 474 363 380 457 500 249 445 391 462 324 412 247 135 443 239
 452 366 413 127  96 377 605 213 242 352 321  19 488 309 467  68 485 414 533 398 409 408  81 461 259 438
 489 418 421 367 382 422 356 402 396 299 313 235 285 329 279  54 336 334 296 444 351 252  56 526 442 317
 410 191 468 430 262 389 216 345 365 383 470 454 244 376 293 322 232 401 241 246 221 292 355 381 477 337
 251 325 372 451 344 448 384 393 359 295 314 374 386 275 197 297 346 316 308 298 364 163 326 417 332 466
 361 604 273 426 311 378  80 240 525 518 183 261 350 209 318 392 280 349 190 203 268 556 469 253 307 497
 335 226 369 212 673 370 440 305 301 615 269 237 288 328 248 362 186 303 405 360 603 204 502 123 238 300
 281 473 368 290 264  88 347 340 224 432 387 439 115 234 353 302 663 286 148 527 532 333 580 131 178 486
 327 546 319 638 330 315 423 229 618 655 233 236 198 193 573 164 196 173 310 304 228 250 419 104 282 538
 194 256 220 357 662 165 189 555 671 606  70 323 608 636 136 181  53 255 260 646 111 312 379 560 179 217
 263 522 166 591 170 291 182 644 118 550 141 167 640 621 265  82 130 117 184 667 289 210 513 583 201 494
 415 545 138 649 180 137 272 496 449 629 109 132 652 160  92 174  99 146  52 270 675 162 624 478 565 501
  79 171  63 610 668 669 155 110  61 625 192  23 664 635  95 388  43 600 133 120 187 645 553 647 266 399
 215 656  65 676 456 100 283 152 672 540  89  86 543 578 631 113 150 641  33 144  71 177 653 503 139 435
 143 674 637 420 202 595 254 515  24 441  45  94 548 403 570 108 320 341  57 200  87 169 670 487 140 657
 661 643  62 176 416  98 223 134 373  34 142  47 542 665 639 149 145 516 476  67 195 495 481 626 574 222
 620 632  41 582 395 627  49  32 207 243 658 208 541 666  59  30  38 122  37 459  58  90 659 471 654 623

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0003e+07us (= 10003ms, 10.003s)
Wall-clock time (full program): 1.00554e+07us (= 10055.4ms, 10.0554s)
Satisfaction error: 2
Number of search iterations: 2270
Number of local moves: 860 (including on plateau: 385)
Number of local minimum: 172 (including on plateau: 30)
Number of resets: 1
Number of restarts: 0

Problem in row 7: 44 4 536 151 385 434 75 433 276 425 427 554 482 429 498 506 523 514 622 18 539 406 188 172 35 124 => the sum is 8800 rather than 8801
Problem in row 16: 335 226 369 212 673 370 440 305 301 615 269 237 288 328 248 362 186 303 405 360 603 204 502 123 238 300 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 573  75 295 652 572  80 641  33 177 475 656 453 489 611 634 202  63  39 209  43 505 240 446 553  49  36
 673 322  27 609 143 574  53 548 375 590  81  82 559 191  70 111  58 655 632 172  51 665 647  97 664 152
 355 247 541 619 171 511 463 566 670  77 151  99 585 523 460 408  55 338  86  85 563 662  62 300  38 166
   6 496 135 591 461  83 136 607 482 311 116 123 613 578 384 466 556  72 580 114 158 207 668 450 104 304
  95 117 139 237 627 199 122 617 254 633 630 620 380  90 396 558 277 643 650 106 636  17 103 120 167 368
  88 219 615 320 186 576 110 536  93 603 132 671 582  96 649 178 155 138 203 215 674 654 390 253 317 148
 119 406 108 485 509  52 667 642 156 109 153 250 265  65 124 547 432 537 518 638 622 332 129 568 168 200
 183 134 210 441 628 661 154 469 180 361 217 272 626  66 474 555 170 246 105 455 185 666 181 648  79 435
  15 188 204 234 274 658 381 433 640 220  60 102 600 141 373 644 221 610 231 606 266 157 362 535 145 501
 248 379 329  89 285 269 411 522 243 557 478 307 198 273 334 676 245 288 302 292 190  34 520 312 458 562
 393 164 324 159 261 427 586 519  68 223 347 282 358 376 342 472 214 352 359 545 309 303 276 290 238 614
 597 163 259 293 341 325 348 531 308 356 328 333  47 284 205 392  87  64 588 201 569 672 227 451 497 335
 228 313 263 298 305 339 287 366 351 233 481 169 330 222 239 663 343 421 275 331 371 385 229 444 499 416
 297 346 345 161 382 344 278 175 418 367 268 471 318 225 279 182 319 357 400 389 340 561 306 431 414 428
 194 439 350 364 452 448 174 133 323 502 417 337 438 255 327 235  26 399 372 208 504 314 316 457 412 405
 410 467 349 383 386 280 271   2 365 353  46 391 260 498 377 244 447 581 510 388 374  24 571 401 409  14
 370 299 492 443 459 142 425  84 419 552 369 515 310 422  28 397 176 477 326 270 249 264 479  42 530 262
   9 599 486 445 456  13 315 532 395  41 426 551 465 415  69 128 521  16 577 413 360 236 192 637 464  40
 546 251 126  67  57 524 449 267  78 512 454 539 493 429  11  35 514 480  44 430 500 653 473  61 507 301
 529 436 533 354 575 232 213  31 294 387 490 495   7 468 226  22 621 404 517  19  98 675  50  23 564 538
 596 437 394 434  48 336 107 149 484  73 645 565 179 592 173  91 631 554 491 257  30 218 527 420 258 112
 601 570 605  54 567 487 296 100 534 252 508 281 137 230 470 378 587  56 113 440 286 321  25 140 165 598
 612 476   5  18   1 189 623 147 544 516 483 184  45 659 424 407 206 560  12 506 669 193   4 241 589 488
 121 583 584  10 494 579 624 503 224 398 150 162 242 593 513 187 595 101 127 602  59  20 442   3 629 256
 660  29 543 618 130  71 125  94 608  92  76 144 160  37 616 549 625 197 363 550 212 131 651 635 291 594
 283 646 540 423  32 402 542 195 118   8 639 403 115 462 604  74 657 216 211 526  21 196 525 289 146 528

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00539e+07us (= 10053.9ms, 10.0539s)
Satisfaction error: 2
Number of search iterations: 2240
Number of local moves: 923 (including on plateau: 391)
Number of local minimum: 216 (including on plateau: 45)
Number of resets: 1
Number of restarts: 0

Problem in column 5: 572 143 171 461 627 186 509 628 274 285 261 341 305 382 452 386 459 456 57 575 48 567 1 494 130 32 => the sum is 8802 rather than 8801
Problem in column 22: 240 665 662 207 17 654 332 666 157 34 303 672 385 561 314 24 264 236 653 675 218 321 193 20 131 196 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 666 655 653 538  74  79 435 652 213  36  51 446  55  24 145 661 479 490 600 170  85 551 355  47  48 593
  59 676 631 566  38 616 527 337 526  94  46 251  62 391 117 587 503  84 536  82  28 613 103  95 668 565
  71 670 529 549 114 663 474 347  58 623  98 408 111 105 127 548 633 140 187 132 590 477 118 674 205 150
  65 469 506 540  66 486 589 608  96 523  77 639 217  30 136 496 124  40 487 142 607 667 671 152 158 210
 597 578 184 561 675 534 476 630 171 306  56 665  80  83 161 141 123 239 629 649 169 564 164  93  73 200
 129 113 485 367 542 646 556 612 577 179  69 583 121 125 209 154 598 120 185 620 622 128 207 528 104 222
 194 122 293 621 102 439 354 662 307 579  67 634 335 654 208 143 553 232 220 458 190 160  49 636 295 294
  43 215 271 254 299 560 328 484 139 441 133 627 514 250 206 109 669 221 610 557 156 614 233 533 197 138
 320 267 151 569 216 199 573 480 635 449 193 379 428 186 350 131 282 672 256 501 264 234 276 270 236 284
 314 168 283 323 315 252 137 650 212 280 383 229 659 371 291 403 658 149 244 673 298 410 331 183 390 195
 230 144 257 202 204 387 644 545 436 419 660 265 148 273 421 332 245 638 246 559 287 167 373 192 218 309
 325 370 365 304 279 515 272 369 316 470 443 281 395 319 305 253 329 274 289 226 364 288 372 424 342 312
 300 237 471 493 345 303 311 296 247 360 227 460 356 310 400 275 248 277 491 483 420 302 228 349 334 278
 330 333 318 386 382 321 341 339 584 266 166 366 317 381 414 285 258 286 313 269 308 429 249 411 340 409
 377 242  31 348 219 155 497 404 378 407 592 434 358 398  21 445 433  92 376 338 240 478 431 422 393 292
 353 224 562 452 417 388 196  26 322 201 241 461 238 363 535 426 544 326 537 336 259 464 412  78   8 432
 290 467 385 455 594 450 162 100 425  33 427 177  87 172 351 324  17 405 423 343 521 492 489 344 466 402
 468 231 415 516 438 456 106 203  76 255 568 361 163 357 362 459  39   4 481 268 525 457 454 346 418 375
 442 394 453  25 543  75  89 261 451 130 591  86 524 262 327 520 498 595  15 174 547 510  32 494 389 374
 656 406 500 134 447 108 101  50 198 214 440 191 601 465 546  29  34 522 413  61 599 112 416 401 648 509
 508 392  81 223 462  11  88 165 297 126 505 301 225 511 444 399 499 555 384 263   5  45 626 512 563 611
 518 645  10 110  72 115 235 135 437 624 397  97 572 539 463 586 243 472   9 260   6   1 580 502 632 541
 396  90 651   7 618 647 606  91  53 532 628 107 637 554 615  19 558 188 147 359  22  63  13  68 619 513
 588 575  35  99 495 176  60 146 448 119 605  57 482 380 488 585 159 574 504 153 517 352 530 642  18  14
 550  64 211   2 664  42  27 189 596 531 571 116 643 641 640  16  23 625 175 173 570 182 507  37 430 576
  12  54  70 157 181 178 617  20 603 604 567 180 473 657 519 475  52 581  44 552 602  41 582 368 609   3

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.67609e+06us (= 5676.09ms, 5.67609s)
Wall-clock time (full program): 5.72807e+06us (= 5728.07ms, 5.72807s)
Satisfaction error: 0
Number of search iterations: 1281
Number of local moves: 692 (including on plateau: 284)
Number of local minimum: 79 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 211 558 631  77 590 118 206  24 620  58 584 614 653 132   8 285 596 560   9 432   3 544 625 618  26  19
  72  33 628 519 536 543 651  31 130  34 658 550 627  69   6  32 482 616  12  71 124 524 581 626 474 172
  55 598  14 534  94 587 442 142 621 656 579 513 594 110 538  45 469 175   5  39 107 636 650   1   4 593
  70  99 563  17 214 599 115  20 509 510 522  27 609  92 518 439 567 526  36 261  52 647 611 532 153 493
  18 546  30 494   7 607 507  46 435 649 612 622 551 104 207 284 602 575  11 136  23  15 601 501 145 473
 116 585 421 537 554  13 499  56 152 564 525 606 425  83  61 471 533 341 103 236   2 227 623 483 134 451
 200  89 568 372 176 535  16 315 523  78 468 394 437 419 409 243 514 190 417 257 362 608 562 199  49 401
 208  41 557 400 452 496  75 337 582 572 540 344 527 448 570  57 379  43 182 197 389 410 150 154 373 318
 128 424 559 505  79 449 500 218 350 322 512 349 355 251 461 174 492 144 334  95  73 502 565 213 232 515
  64 427 376 470 491 520 327 121 440  10 408 485 358 475 521 377  21  88 390 143 453 414 411 252 321 438
 171 233 588 476 407 397 146 286 270 399 396 328 416 426 347 217 295 445 450 170 316 189 489  86 422 436
 248 403 298 384 388 472 308  90 269 385 392 300 457 387 262 281 302 430 428 260 222 345 405 486 179 420
 477 310 378 495 180 224 488 329 371 406 447 325 433 271 268 312 326 353 395 291 354 106 246 402 303 311
 386 275 367 283 202 255 319 363 324 454 338 305 125 462 646 287 375 506 231 357 364 314 187 289 413 374
 313 342 219 280 254 320 351 404 205 369 139 516 343 330 415 274 340 301 331 459 348 668 292 463 290 235
 370 309 574 220 317 359 380 464 247 185 323 346 264 230 267 360 245 272 226 576 591 253 191 391 553 288
 674 250 108 304 352 238 225 529 676 456 169 332 423 265 120 296 503 465 366 545 293 198 147 335 368 164
 458 237 336 229 240 173 278 466 673 307 183 167 228 184 446 434 194 633 196 497 460 339 113 578 455 297
 480  97 258 263 273 276 641 652 122 188 155 256 195 114 484 555 216 547 490 589 306 135 279 356 259 615
 530 504 109 141 161  76 361 541  51 333 277 123 131 644  81 511 151 517 630 671 642 223  53 129 566 645
 542 638 193 159 137 629 661 444 181 112 105 234  82 595 203 619 549 242 539 431 663 241  42 102 266 192
 654 160 210 158 597  44 294 624 672 119 221  67 239 657 100 675  85  25 561 381 443 365 249 592 571  38
 418 643  74 639 498 178 209 478 148  80 126 212  63 204 664 556 157 244 667 580 481 140 383 299 632  28
 655 487 583 637 604  22 177 634  59 429  35  84 127 635 586 186 149  54 617 382 479 201 166 393 282 138
 613 101  66  40 398 573 508 610  60 659  50 640  91 552 548 162  96  68 569 215 603 528 133 165 666  87
 670 412  93 168 600  98 117 577 111 467  37  62  48 662  65 669 163 441 605 531 648  29  47 156 665 660

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00543e+07us (= 10054.3ms, 10.0543s)
Satisfaction error: 2
Number of search iterations: 2410
Number of local moves: 806 (including on plateau: 269)
Number of local minimum: 196 (including on plateau: 35)
Number of resets: 1
Number of restarts: 0

Problem in column 19: 9 12 5 36 11 103 417 182 334 390 450 428 395 231 331 226 366 196 490 630 539 561 667 617 569 605 => the sum is 8800 rather than 8801
Problem in column 20: 432 71 39 261 136 236 257 197 95 143 170 260 291 357 459 576 545 497 589 671 431 381 580 382 215 531 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 456 562  68 614  33 501 605 465 642 657 561  92  34 105 130  32  40 639  42 446 672  56  89 556  60 644
 656 117 138 191 426 661 646  30 635 674 627  66  53  49  12 592  61 551  71 638 608 400  75 431 273 120
 670 350 668 589 420 618 545  44 118  67 468 121  85 357 516 104  36 484 531  58 675 478 124 579  50  46
 590  82 128 673 603  90 330  95 574 136 430 392 160 141 388 102 100 419 632 112 582 457 201 617 619 148
 154  83 111 539 374 565 600 140 106  76 560 622 340 530 653 436 180 534 514 115 652 356  80 151 183 147
 602  97 103 174 583 613 487  81 122 253 671 248 196 495 439 172  84 654 156 161 594 667 113 643 211 182
 212 586 219 133 153 170 566 203 135 157 664 145 554 466 462 665  87 511 143 637 197 581 206 655 216  78
 549 519 319 659 190 178 500 322 159  91 252 163 271 497 473 676  98 543 192 316 355 588 179 229 241 242
 236 244 215 142 648 224 548 193 669 228 186 239 525 609 376 502 173 522 264  70 207 482 347 575 132 245
 223 509 221 282 641 155 358 210 243 520 247 150 555 572 492 177 634 471 233 287 213 404 312 285 205 202
 277 523 274 352 354 231 327 290 532 131 393 662 448 234 259 368 222 450 232 269 266 476 279 309 320 323
 297 385 306 267 255 294 332 336 254 208 249 334 296 295 261 343 625 365 302 666 246 663 345 226 379 272
 308 339 658 382 415 265 289 299 270 278 364 318 328 344 366 280 325 281 321 311 408 301 292 288 346 425
 371 317 283  55 331 333 399 384 396 391 353 315 305 401 403 335 258 349 342 298 447 389 251 314 418 363
 304 369 341 428 101 459 291 397 378 362 373 390 372 370 348 275 386 268 337 435  45 263 381 445 359 324
 412  51 394 326 417 469 184 458 256 407 383 433 129 119 181 293 284 257 387 411 416 432 424 451 429 398
 409 442 488 410 395 503 380 351 427 508 406 489  96  10  14 144 479 209 361 467 367   6 533  59 414 434
 454 421 463 438  21 524  52 449   5 444 423  63 240 235 166 164 470 313 475 528 544 375 504  38 507 485
 461 200 480 453  19 578 422  27 490 377 518 513 225  77  54 584 443 165  39 498 116  99 405 483 598 477
  72 167 481 496 452 564 176 494 510 506  18 441 360  93 185 413 538  94 486  65 230 286 596  57 491 529
 493 300 552  74   1  23 329 526 547 541  29 460 537 217 171  43 580  20 464 597  35 260 437 455 505 606
 187 472 149 557 559  31  25 585 338 521  26 303 402 188  69 611 563 204 568 553 440  73 536 276  15 550
 162 515 595 168 109 540  62 558 152 628 139  86 591 542 623 125 636 169 499  16 307 195 137 108 569 570
 110 599 626 189 512  24  11 593 571 630 194 577 474 629 573 158 199 107   8 238  28 237 645 227 601  41
 127  17 517 146 262  13 214 624 250   7  47 546 604 616 567 576 649  88 615 607  37 198 660 126  48 640
   9 535   4  64 527 175 123 647  22   3 220 633 621 610 620 631 651 134 587   2 114  79 650 218 612 310

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00031e+07us (= 10003.1ms, 10.0031s)
Wall-clock time (full program): 1.00554e+07us (= 10055.4ms, 10.0554s)
Satisfaction error: 2
Number of search iterations: 2648
Number of local moves: 754 (including on plateau: 275)
Number of local minimum: 203 (including on plateau: 33)
Number of resets: 1
Number of restarts: 0

Problem in row 20: 72 167 481 496 452 564 176 494 510 506 18 441 360 93 185 413 538 94 486 65 230 286 596 57 491 529 => the sum is 8800 rather than 8801
Problem in row 21: 493 300 552 74 1 23 329 526 547 541 29 460 537 217 171 43 580 20 464 597 35 260 437 455 505 606 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 234 582  85 111 640  45 633 630  56 580 534  76 146 483 675  57 554  41 620  80 568 273  37 557 178 326
  90 514  49 277  17 182 126 605 109 581 142 498 124 383 158 161 657 457 513 552 520 589 152 656  38 651
 157  91 536 411  79 151 296 648  87 550 177 458 154 428  60  53 477 453 538 169 661 614  30 547 635 341
 125  82 119 666 176 197 188 600 103 642 372 412 117 269  88 139 673 592 639 609 228 626  63  71 446 559
 134  74  48 662  70 166  89 507 167 415  58 463 615 567 149  22 618 367 516 492 205 606 641 110 658 382
 123 217 224 301 222 676  99 409  33 219 452 674 671 495 214 203  95 593 623 193 335 225 140 237 475 653
 202  96  94 410  73 137 668 663  59 232 664 576  84 570 148 186 667 236 508 469 241 602  72 290 659 195
  40 249 238 613 548 323 303 655 314 206 386 533 198 669 377 244 114 672 479 590 215 128 113 286 143 165
 171 261 175 591 259  50 632 556 670 289 569 553 368 621 262 189  54 660 352 278 263 242  35 257 201 243
 308 295 164 598 339 132 130 440 184 310 601 350 274 544 333 194 417 512 456 346 334 271 218 155 246 650
 665 270 320 340 159 619 304 381 369 252 313 251 288 279 355 312 321 190 439 264 179 551 329 299 373 379
 388 199 220 291 476 283 374 503 555 248 530 342 172 254 266 486 204 226 466 604 223 347 192 349 390 213
 348 302 337 256 250 281 268 356 275 322 397 282 345 387 316 196 461 359 306 436 366 272 441 445 375 422
 396  77 400 376 216 393 285 319 455 318 351 389 300 353 509 297 101 284 451 227 586 420 467 406  81 344
 354 402 357 378 255 293 380 331 370 485 144 309 403 384 332 276 245 287 408 265 131 392 336 517 437 330
 365 444  65 298 364 358 360 170 343 338 324 235 413 104 433 294 168 645 258 465 482 311 385 307 434 438
 459 362 371  75 447 490 414 100 363 407 107 435 499 325 449 401 426  86   9  51 399 391 425 394 443 473
 506 395 424 156 539 497  69 240 631 209 163 135 468  27 472 474 488 191 230 160 404 421 416 429 510 147
 562 487 521  68 317 527  55 253 525 494 231 247 564  21 405 431 535 493   7  64 150  78 398 529 524 315
 267 532 500  29 511 471 200 180 549 418  20  42 423 112 484 577 522 208 229  18 579 448 481  14 560 427
 563 537 519   2 480 212 454 136 491 489 361  93 565 327 502 528  43 181 138 578   4 432 501 127  15 523
 583 566 496 221  66 574 596  31 588  62 187 122 649 174   8 611 603  46 129 541 572 115 558 478 133  92
 540 573 617 464 634 597 625  12 260  25 545 118   3 211 654 652  16 644 233 305  10 120 505 280  61  97
 571 585 637 239 627  13  98  19 599 575 419 470 292 162  47 594 141  39 116 584  44  24 622 546 636 102
 624  67 638 450 430 608 612  23 610  83 646 531 105 210 462 629 173 185 106   1 515 121 628  11   5 328
  26 542 647 518 607 526 543  34  36  52 108 207 561 442 643 595  28 153  32 460 587 183 616 504 145   6

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00027e+07us (= 10002.7ms, 10.0027s)
Wall-clock time (full program): 1.00544e+07us (= 10054.4ms, 10.0544s)
Satisfaction error: 2
Number of search iterations: 2278
Number of local moves: 750 (including on plateau: 381)
Number of local minimum: 180 (including on plateau: 46)
Number of resets: 1
Number of restarts: 0

Problem in column 18: 41 457 453 592 367 593 236 672 660 512 190 226 359 284 287 645 86 191 493 208 181 46 644 39 185 153 => the sum is 8800 rather than 8801
Problem in column 22: 273 589 614 626 606 225 602 128 242 271 551 347 272 420 392 311 391 421 78 448 432 115 120 24 121 183 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 236 161  27 621 506 624  51 432  67  53 594 643 674  47  66 666  54 591  46 385 196  76 599 190 545 651
  28 609 141 603 179  49 226 664 650  29 653 646  88  38 604 665  36 659 663 146  43  31 587 370 309  85
 117 430 649 410 185 632   9 619 276 107 415 433  41 655 131 412 134 387 676 118  57 102 553 670 423 160
 220 182 263 660  56  73 622 644 562 148 512 642  83  48 623 205  59 534 555 181  37  68 616 540 634  34
 139 636  97 620 480 422 293 585 631  89 461 638 158 120 188 576  77 110 184 242  50 668 627 135 550  25
  74 364 195 214 239 673 186 411 366 224 437 508 223  70 333 458 152 648 462 111 669 211 521 403 499 150
  79 322 130 168 255 342 625 583 578 159 446 593 162 219 586 451 319 404 210 615 163 246 116 145 641 244
 198 317 331 606 313 193 652 380 284 232 612 497 266 215 355 584 115 450 529 221 225 166 123 285 488 164
 299 608 566 147 531 105 173 671 477 222 561 667 189  58 231 207  64 516 209 264 217 626 180 251 568 194
 658 378 270 348 551 213 137 473 297 230 197 234 300 192 496 201 268 431 675 132 114 265 645 227 541 328
 303 414 235 208 672 203 420 407 229 311 254 406 341 318 408 589 218 206 202 294 243 438 106 332 427 617
 257 312 483 321 174 324 435 374 187 323 253 579 272 240 344 425 569 464 298 165 383 247 465 305 353 249
 346 349 314 330 191 418 421 409 252 343 416 337 371 347 228 476 384 345 334 273 170 302 470 325 373 277
 390 327 241 381 445 363 386 463 280 394 245 365 352 274 258 340 382 351 307 402 514 358 315 238 424   6
 495  21 304 467 359 471 350 283 157 339  32 129 542 546 149 108 336 290 419 399 367 391 469 547 282 549
 538 405 288 395 360 375 256 171 393 444 167 354 454 316  15 326 468 491 100 260   4 447 434 501 296 543
 456 548 267 362 281 357 250  16 440 356 237 199 439 494 306 308 507 401 413 460 248 287 271   7 295 596
 388 428 503 338 128 544 442 335  75 443  98 204 278 637 452 169 126 127  19 466 533 377 426 528 262 475
 453  24 376  81 482 398 392  45 292 455 151 178 580 275 511 498 361 109  17 301 582 448 536 588 155 513
 389 490  82 133 530 400 200 138 397 493 259  84 633 563 532 379 525  12 486  92 618 575  94  63 153 481
 449  90 510  52 233   5 522 176  65 571  39  99 647 611 509  60 629 484 372 489 329 436 310 478 177 459
 279 565 518   8  33  10 485  80 474 520  44  23 472 535 487 216 590 143 505 527 614 320  86 559 113 595
 526 492 523  55  20 517 556  95  93 662 140  62 592 368  40 172 539 269 417 605 573 396  11 479  35 564
 661 144 286 156 441 429  30 121 567 558 657 112 639 457 369 122 656 261  42 537 654 607  71 119 104   1
 640 124 602 613 597 574 125  72 212 524 630  91   2 577 554 175 598  22 142 601 570 103  69  14  18 552
 183  61 600 504 560  87 557 154 500 572 291  78   3 581  26  13 635  96 519 515 628 610 101 502 136 289

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.91265e+06us (= 5912.65ms, 5.91265s)
Wall-clock time (full program): 5.96538e+06us (= 5965.38ms, 5.96538s)
Satisfaction error: 0
Number of search iterations: 1280
Number of local moves: 682 (including on plateau: 171)
Number of local minimum: 92 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 271 675  90 392 102 670 428 406 656 554 121 443 435  19 482 635 604 652 643  94  68  11  96 109  27 118
 143 647 177 536  67  91  46  79 660 528  76 651 491  36 327 517 367 469 397 543 391  23 559  33 457 490
  26 599 624 418  60  63 481  48 446 580 134 612 558  83  18 625 606  62  95  12 572  13 633 642 618 173
 181 671  39 510 146  29  80 101 673 605 503 619 190 148 152 598 674 597 104 139 664  88 629 382 204  75
 150 110 117 634 107 169 113 226 657 553 467 609 638  59 140 592 616 666 425  22 600  47 127 591 136 230
 195 672 208 250 281 585 155 175 153 537 667 507 512 220 166 216 663  61 184 168 669 233 477 526 186 135
 125 246 231 614 161 194 552 182 555 615 262 499 521 265 232 588 376 157 305 582 593 234 151 227 149 185
 272 158 196 608 193  89 176 115 532 646 628 575 617 261 165 545 450  86 497 123 613 122 171 452 269 242
 363 295 156 276 163 199 626 251 188 291 668 214 573 221 630 601 401 596 160 255 513 202 456 225  78 200
 336 154 192 650 210 197 640 501 541 207 340 159 239 243 256 219 676 332 294 297 611 201 433 203 393 277
 351 240 268 303 209 205 252 187 245 375 603 414 547 361 390 549 334 218 383 162 286 645 280 355 380 259
 191 394 344 264 353 648 229 468 275 654 270 217 318 290 338 287 313 653 378 325 308 211 138 358 324 253
 282 189 301 381 314 312 470 331 487 288 359 323 384 298 299 106 236 515 343 389 283 447 432 387 289 356
 368 292 431 357 248 316 420 274 398 222 263 444 212 362 339 348 309 337 441 306 278 310 370 438 408 311
 486 388 133 326 365 224 409 304 300 352 379 103 500 345 349 419 350 285 458 403 410 320 228 164 402 399
 464 260 426 328 581 333 317 369 395 377 131 412 516 480  38 284  70 341 373 437 439 386 330  71 322 321
 405 476 498  25 535 315 342 465  54  15 346 466 440 451 241 474  20 360 442 472  45 421  77 493 489 434
 364 461 422  41 462 449 415 571  64 130 215 492 247 400 527 213 302  30 296 471 237 429 385 396 319 463
 307 436 366 120 372 413 424   9 371 206 404  40   1 564 254 266 520 473 524 407 105 574 570 170 427 478
 522 551 347 485 417 514   7 534 258 111 129  65  87 494 423   4  85 546 484  14 257 453 508 519 533 454
 495 529 509 124 659 496  69 531  66  44  32 445 132 561 126 244 523 560  81 506  10 540 293 145 542 539
 655 179 511 238 430 538 273 578 198  82 374  52  73 661 544  58   8  51 488 530  56 460 116 479 562 607
 583  21 502 595 525 548 174 267 141 335 411   5 183 649 504 142 108 167 455 459  37 637 566 180  17 590
 587  93 568  42 623 563 577 565 354  99 128  84  55   3 576  35  43 483 448 557 329 631 114 584 636  24
 622  16 589 147 639  74 505 620 100 172 475  72  97 665 627 144  28  98  50 518 178 569 550 641   2 602
  57  49 556 137 579 567 621 644  34 223 416 279 235 662 658  92 119   6  53 610 249 594 112  31 632 586

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00472e+07us (= 10047.2ms, 10.0472s)
Satisfaction error: 2
Number of search iterations: 2314
Number of local moves: 756 (including on plateau: 311)
Number of local minimum: 166 (including on plateau: 32)
Number of resets: 1
Number of restarts: 0

Problem in row 14: 368 292 431 357 248 316 420 274 398 222 263 444 212 362 339 348 309 337 441 306 278 310 370 438 408 311 => the sum is 8802 rather than 8801
Problem in row 25: 622 16 589 147 639 74 505 620 100 172 475 72 97 665 627 144 28 98 50 518 178 569 550 641 2 602 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 561 507 661 595  54  64 643  58  85 667  82 636 656 620 565 650  94 182  61  53  79  93  47 146 607 335
  20 140 393 647 598 113 538  33 160 477 115 577 475 589  96 559  84  14 258 673  57 128 102 675 608 672
 116 572 668 611  63  92 145  48 336 583  91 629 558 410 549  81  88 101 472  41  98 563 129 671 602 484
 180 587 171  40  69 621 524 107 396 157 403 562 662 489 676 103  80 152  70 167 551  90 669 147 575 553
 105 659 628 554 622  36 119  39 381 664 124 155 654 532 615 190  89 431 163  71  60 112 263 674 290 571
  95 609 174 233 207 640 253 134 624 660 579 386 666 644 588 202 252 120 187 135 173 121 238 141 453 287
 196 606 474 168 212 151 648 275 523 567 125 557 591 639 186 651 422  83  78 150 130 183 298 236 452 200
 214 465 139 281 219 148 142 670 637 411 220 216 531 454 266 227 539 376 282 310 284 319 203 590 409 249
 292 211 533 605 511 117 327 330 442 623 273 354 436 213 343 189 144 503 164 293 297 332  44 401 490 334
 277 325 388 209 257 663 177 342 548 645 205 175 206 184 315 406 492 333 154 482 294 245 268 530 466 215
 331 231 136 166 210 445 311 348 566 237 635 295 264 373 191 309 230 618 265 370 379 302 226 665 413 285
 305 458 347 170 449 256 224 340 448 446 204 505 228 358 390 378 223 405 239 308 394 259 357 283 483 344
 269 303 320 232 655 242 322 397 515 255 404 316 193 280 356 229 326 593 384 313 329 365 278 324 355 246
 337 306 353 428 369 198 414 488 375 222 427 501  51 398 217 100 300 380 374 459 276 407 419 201 372 429
 481 377 518 221 470 400 389 161 508 244  19 421 262 321 351 391 339 267 350 361 522 362 323 496 218  29
 382 417 476 473 208 437 447 412  87 243 279 387 498 366 441  32 402 197 360 440 399 111 271 418 185 433
 432 176  55 464 392 395 368 435  86  12 537 416 516  68  74 443 270 363 544 345 364 500 359 423 250 514
 513 520 467 463 383 341 434 296 304 367   4 104  34 132 545 527 172   3 420 485 317 450 535 301 299 385
 525 156 118  50 260 471 542 349 106  17 546 425 158 469 519 461 528 162  27 495 497 426 502 248 251 493
 491 137  65 408   8 430  49 512 149 274 603 415 127 122 444 479 312 521 480 288 462 438 455 456 126 550
 468  38 234 486 499 541  67 352 616  42 552  66  46 181  45 576 658 592 560 457 114 509 494 314 195  99
 578  26 131 610 529 596  11 439  97 123 517  28 619  59  35 510 556 241 574 617 536  10 534 133 188 504
 555 178 487  16 109 286 424 626 261 169 633  24 138 478  73 604 585 573 586 165 289 638 600  30  75 199
   2 192 630 582 526 570 612 581  62 110  31  13  23  22 307  43 646 601 540 597 631 634 614   1  72 159
 451  21  56  52 594   5  18 460 235 240 613   6  15 247 506 318 371 652 641 649 642 657 564 272 291 225
 625 584 179  37 328 543 653 569 254 346 580 632 194 153 108 143 599 338 568  77 627 547   9  25  76   7

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.72668e+06us (= 5726.68ms, 5.72668s)
Wall-clock time (full program): 5.77905e+06us (= 5779.05ms, 5.77905s)
Satisfaction error: 0
Number of search iterations: 1124
Number of local moves: 677 (including on plateau: 271)
Number of local minimum: 69 (including on plateau: 39)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  79 540 661  57 662 273  62 174  36  41 652 656 147 545  86 157 524 655 161  42 551 124 525 617 109 665
  60 397 305 169 143 673 520 674  68 645 324 671  26 364 639  54  46 457 123  81 506 650  87 432 659  28
 128 611 664  51 160 530  52 131 443  44 125 654 646 598 640 409 138 601  22  59 632 207 586 510  56 104
 542 553 566 666  96 606  63  76  65 142 629 532  45 657 574 242 287 615 239 156 485  49 129 584  93 110
 385  25 515  53 203 321 643 651 636 190 195 576 228 178 627 616  94 600 132 116 642  78 377 491 117 113
 667 638 504 114 145 670 668 464 100 136 118 315  88 222 355 135 604 625 200 205 663 146 173 441 149 256
 676 264 500 230 658 367 253 133 177 119 206 215  73 628  91 148 541 404 251 637 620 320 258 201 159 672
 400 635 564 204 115 555  92 158 254 653 621 278 267 120 622 271 308 423 641  43 285 194 191 484 179 244
 248 224 554 144 151 548 175 265 199 263 208 226 233 348 489 237 585 347 420 647 496 225 559 546 281 183
 614 552 176 633 217 378 140 211 283 164 198 302 167 231 234 301 478 593 163 352 493 185 570 595 243 328
 589 370 307 236 192 526 290 209 284 335 410 277 261 455 634 218 312 631 186 309 266 398 249 279 247 331
 337 270 223 407 306 275 238 255 669 421 396 323 180 415 212 272 408 382 422 292 299 182 376 660 288 293
 193 411 479 235 262 430 384 451 440 336 391 260 360 494 351 311 332 257 313 314 298 184 330 346 282 357
 368 381 453 339 327  14 549 250 363 472 342 181 296 388 220 329 289 375 246 456 294 245 433 350 322 518
 361 221 274 499 166 107 436  47 437 463 414 349 434 371 316 358 403 268 326 416  24 483 519 295 390 424
 297 359  55 319 445 105 401 197 338 468 459 509 345 392 418 497 340 276 447 353 487 344  58 300 333 259
 108  37 154 417 495 291 476 449 474 439 372 426 428 535 252 374 444   5 380 448 232 394 111 153 446 461
 269 171 170 471 343 168 556 387  34 393 514 373 334  97 202 458 435 310 303 406 466 431 429 189 465 427
 462  72  67 477 533 101 501 442 438 386 536  40 317 383 219 379 369 318 354 573  77 557  64 155 562 419
 356 523  75 425 362 399  32 325 529 413  38 537 469 538 405 588 470   2 365   9 165 544 152 112 460 508
 134 521 213 571 528  21 402 580 579  18 473 103 648 505  33  17  30   3 583 482  85 581 481  48 539 623
 412  82 503 513  69 531 609 454 582 517 395 127 502  84 475  90  50  71 527  20 126 560 522 572  19 389
  83  95  31 341 511  13 480 594   7 563 486  89 490  35 450 612  61 121 565 592  74 603 675  29 599 602
 366 240   1 590 608 137 452 613 130   6  27 488 618 141 210 516 492  10 567 597 304 498  70  23 630 467
 587 507 229 534 561 187 139 512 610 569 122 196 550  66   8 568 214 172 241 577  15 607 286 162 578   4
  80 102 558 106 543 575 188  99 626 605 150  98 649  11  39 644 547 280 624 619 216  12 591 227 596  16

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00519e+07us (= 10051.9ms, 10.0519s)
Satisfaction error: 2
Number of search iterations: 2822
Number of local moves: 911 (including on plateau: 370)
Number of local minimum: 212 (including on plateau: 37)
Number of resets: 1
Number of restarts: 0

Problem in row 5: 385 25 515 53 203 321 643 651 636 190 195 576 228 178 627 616 94 600 132 116 642 78 377 491 117 113 => the sum is 8802 rather than 8801
Problem in row 14: 368 381 453 339 327 14 549 250 363 472 342 181 296 388 220 329 289 375 246 456 294 245 433 350 322 518 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 630  37 560 582  71 202 124 632 378 607 654 611  24 576 618 208 577 571 181 198 602  72   1  30  45  10
 606   7 661  56 496 634  53 615 569 645 604 638  29 629 628 647 566 167  47 264   9  11  48  38 120  14
 665  41 153 636 605 340 146 559 540 567 664 551 586 613 543  79  42  99  40 191 489 213   3 354  28  54
  22  33 541 653 542 588  80 609 497 562 478 595 619 397 494 126 547 102 141 237 303  95  49  43 313 135
 518  20 575   6 156 488 268 608 650 600 585 561 579 648 583 106 556  58 161 100 544  65  92 114  44 116
 623 505  13 234 479  12 382 507 475 527 211 563 637 549 599  57 485 570 105 233  35 169 111  34 149 537
 523 499 438 462 512 454  31 282 451 610 197   4 564 520 466  97 554 380 238  77 431 194 235  52 372 158
 434 513 428 104 515 452 290   8 472 297 493 572 480 495 400 117 524  88  27 177 522 210 533 137  78 435
 412 516  62 432 501 552 160 367 446 376 364 587 502 391 261 369 455 596  39 358 311  73  17  16 152 486
 546 558 504 389 133 521  51 408 365 315 348   2 316 248 441 445 190 122 338 393 503 510 456  15 273 411
 468 490 535 328 415 247 530 437 333   5  19 401  32 407 404 314 491 557 417 278 176 398 319 323  83 394
  46 447 359 353  25 444 337 172 439 381 283 277 422 392 325 413 427 308 355 360 339 318 532 300 284 463
 384  69 312 370 517 458 301 396 266 341 306 298 383 414 402 371 498 218 361 322 399 258 287 212 271 387
 347 433 250 260 410 423 453 324 377 304 356 357 450 334 302 363 195 342 296 279 292 317 344 420 274 299
 239 216 321 143 189 246 374 327 272 430 418 470 390 240 332 267 350 366 421 416 395 335 345 514 465 320
 242 166 482 388 343 115 424 179 241 229 406 252 225 221 253 622 326 243 442 655 386 436 375 443 448 259
 207 285 192 286 464 151 249 256 373 426 255 461 128 307 329 471 220 506 617 305 336 565 269 457 460 226
 262 368 236 531 265 245 309 125 667  55 673 230 362 101  70 288 171 425 624 597 144 295 440 459 675 184
 263 291 183 200 352 148 173 403 275 203 642 281 196 251 280 555 134 206 346 676 330 548 474 529 674 188
 294 293 175 590 536 145 409 174 113 193 199 150 204 127 254 534 155 568 573 257 182 620 487 473 469 627
 209 205 187 656 223 660 525 349 214 185 138 110  74 119  61 481 215 641 405 476 621 449 270 659 483 186
 224 639 162 217 616 159 593 484  60  63 165 140 123 132 201 508 157 584 594 528  96 227 589 581 467 492
  85 649 154 603  91 178 663 222  90  94  67 429 614  59 228 147 231 164 658 244 163 651 592 612 539 574
  75 591 385 168 232 289 580 219  93  36 108 129  89 130 112 121  66 633 419 538 635 626 668 671 526 662
  98 351 657  18  26 519 644  21  81 666  86  23 103 331  76 545 601 107 310 142 509 477 625 643 511 631
 379 578 276 136  87 131 652 118  64  84  82 109 670 170 139 550  68 180 646 500  50 669 640 672 598 553

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00529e+07us (= 10052.9ms, 10.0529s)
Satisfaction error: 2
Number of search iterations: 2649
Number of local moves: 1077 (including on plateau: 563)
Number of local minimum: 198 (including on plateau: 70)
Number of resets: 0
Number of restarts: 0

Problem in column 2: 37 7 41 33 20 505 499 513 516 558 490 447 69 433 216 166 285 368 291 293 205 639 649 591 351 578 => the sum is 8800 rather than 8801
Problem in column 21: 602 9 489 303 544 35 431 522 311 503 176 339 399 292 395 386 336 144 330 182 621 96 163 635 509 50 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 591 296 604  43  30 111 570  33  68 503 630 657 145 146 502  64 114 292 583 584 626 567 148  63 367 464
 162 465 172 644 452 496  37 400 128  71 594 675  70  85 343 580  94 631  45 665 329 532 267 132 651  81
 238 658 143 551 442  24  39 653 113 387 508  21 562 177 485 125  96 515 531 202 176 646 197 640 649  23
 546 608 221 327  61  17  50 598 100 358 529  82 605  77 545 549  92 572 131 130 468 588 269 273 500 505
 559 612 150 219 671 526 182 536 228 617 656 165 189 667 582 645  56 409 227  79 195 242  90 168 124   7
 159 520 208  60 196 673 210 493  80 473 587 425 170 118 391 295 308 455 624 156 385 652  84 229 556 294
 240 577 291  16 194 110 637  69 139 537 499 167 160 523 621 573 660 398 171 625 178 373 237 261 222 323
 429 467  49 271 234 284  97 451  88 571 525 104 432 151 636 205 486 440 618 107 288 484 596 289 290 209
 453 457 249 550 380 193 220 318 256 448 521  44 299 166 592  83 361 382 120 410 676 593 475  15 233 307
 275 488 336 199 280 180 254 154 158 136 615 231 213 407 402 434 272 552 401 214 668 489 388 424 311 320
 163 445 316 348 350 297 428 175 527 286 341 379 638 223 225 349  11 575 395 200 672 419 433 356  95 155
 239 441 102 215 460 191 252  52 212 463 257 474 611 601 186 326 266 389 375 610 247 454 446 561  57 314
 411 412 461 206 392 230 403 362 235 360 374 262 325 342 522 332 417 357  55 250 244 232 416 304 359 538
 334 119 270 293   9 371 245 312 544 203 408 381 346 664 603 602 477 116 557 211 404 265  42 337 333 355
 268 377 331  65 641 313 519 384 674 449 353 393 140 253 365 276 243 310 217  36  99 443 643 328 126 555
 399 279 498 352 188 344 322 303 506 364 251 414 309 447 421 207 248 482 192 306 347 164 504 134 394 426
 345 246 437 450  12 363 423 415 405 372 183 190 301 366 300 478   5 258 509 427 338 204 469 378 369 558
 476 149 282 462 435 431 480 438 439  87 259 600 397  38   2 302 236 305 319 560 497 174 274 418 142 599
 490 101 368 420 466 184 470  20 619  18 112 383 586 181  72 574 661 321 278  48 396 108 579 459 370 517
 436  10 650 386  35 654  34 138 510 135  41 495 494 622 260  75 585 117 581 456 122 179 458 472 539 317
 390 540 669 406 606 335 471 444 153 285   3 568 129 187  76 413 512 277 198  19 157  29 283 481 542 628
  53   4 635 576 339 648 507 513 590 226 121 564  13 663 141   8 607  46   6 492  66 255 487 620 281 340
  93  98 483   1 569  62 287 264 647 137 152 185 633 105 216 554 659 241 547 642 511 133 351 533 595 103
  67  28 201 514 524 639 548 479 422 127 144 376  91 632 173 161 629 218 541 609  27 528  47  59 501 516
 670 330 597 613 666 491 553 534 298 623  32  31 589 430  25  73  51  54  14 616  58  22 578 543  86 224
 315  74  78 614 169 634 563 263 662 565 106 535 354 530 115 518 655  89 566 147 627  26  40 324 109 123

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.39509e+06us (= 8395.09ms, 8.39509s)
Wall-clock time (full program): 8.44745e+06us (= 8447.45ms, 8.44745s)
Satisfaction error: 0
Number of search iterations: 2264
Number of local moves: 870 (including on plateau: 343)
Number of local minimum: 178 (including on plateau: 37)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  70 665 661  63 470  69 671 436 469 144 490 255 593 241 480 666 641  79  15 347 587  86  43  42 118 399
 501 670  72 419  11 668 458 561  92  91 515  75 402 456 162 654 614 130  25 667 630  28  61  21 392 426
 657  85 676 157 172 477 115 429  30  99 625 517 520 642 437 556 645 108  23 452 628  33  80 397  95 146
 485  53 247 669  39 188 265 650  83 461 498 137 590 552 145 664 647  84 114 616 176  54 639  24  62 659
  94 171 135 565 660  81 153 652 217 121 643 122 649 435 568 535 522 196 199 675 194 173 133  90 156 662
 101 136 238 105 494 631 170 476  55 216 595 573 525 526 351 180 221  64 266 599 375 291 673 158 154 629
 111 132 129 190 533  67 634 615 138 125 601 204 627 635 316 541 596 202 345 605 181 186 197  66 258 567
 127 279 233 655 508 151 119 237 214 232 559 251 416 224 252 578 534 213 549 430 619  89 357 177 152 646
 303 308 301 594 271 240 290 633 143 206 234 566 607 609 343 270 229 603 269 450 175 141 336 227 160 293
 261 166 134 183 193 189 354 542 356 223 230 576 597 623 514 250 370 184 169 396 304 674 239 329 243 502
 215 231 385 371 583 378 220 403 131 264 275 518 211 441 610 349 359 219 320 555 386 453 149 226 358 191
 317 315 325 242 468 369 277 447 344 296 178 285 400 355 663 286 413 438 376 457 284 139 248 209 340 330
 235 305 222 546 294 366 195 337 363 297 384 454 282 507 328 314 267 249 321 443 256 388 262 245 481 460
 326 274 479 311 295 445  74 273 379 313 428 352 309 374 407 489 148 411 410 306 253 512 464 318  68 383
 373 299  10 259 302 380 185 331 339 394 140 283 278 335 372 406 398 462 408 365 427 393 421 348 475 418
 459 327 307 417 174 382 425 323 334 288 210  73 272 404  97 353 483 482 350 300 527 367 395 465 530  57
 434 346 442 446 440 390 338 257 474  52 401  88 322 168 319 225 433 361 422 218 412 389 432 312 391 289
 540 466 513  29 207 387 463  49  27 505 109 364 110  50 150 536 444 582 298 260 424 497 473 499 341 478
 545 528 471  26 423 167 547 377 560 543 126 368  12 292   8 360 495  18 511 246 503 362 448 451 405   9
 492 491 539 100  77 333  48 187 570 658 487 147 198  87 102 106  58 449 532   2 332 472 574 620 656 484
 488 622 537 486  17  65 420  22 591 531 280 155 103 116 519 128  78 618 577 142   4 624 409 504 553 212
 638 550 579 592 415 529 506   5 581 467 124 200 123 287 236 179  38 612   3 159 228   6 524 648 516  56
 244 431 523 324 509 602 606 112 558 562  96 551  44  93 163  45  59 640 644  14 276 557   7 563 538  40
  82 617  13 493 381 165 439  60 569 496 208 548 254 120 161  34   1 521 637  20 554 600 544 588 589 107
 117  71 611 104 281 572 626 182 613 632 164 575 310 192 598  46  76 268 414  41  31 636 580 621  98 342
 586 263  19 455 584 510 203 205 571 585 201 564  47  37 500  51  32 608 604  36  35 651 113 653 672  16

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00033e+07us (= 10003.3ms, 10.0033s)
Wall-clock time (full program): 1.00557e+07us (= 10055.7ms, 10.0557s)
Satisfaction error: 2
Number of search iterations: 2529
Number of local moves: 987 (including on plateau: 459)
Number of local minimum: 166 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

Problem in row 1: 70 665 661 63 470 69 671 436 469 144 490 255 593 241 480 666 641 79 15 347 587 86 43 42 118 399 => the sum is 8800 rather than 8801
Problem in row 6: 101 136 238 105 494 631 170 476 55 216 595 573 525 526 351 180 221 64 266 599 375 291 673 158 154 629 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 671  12 655 591 321 250 566  94 538 648 109 599  20 559 152 611  86 590  34 669 216 384  40 131 202  53
 526  23 520 142 302 586 583 118 460 605 543 596 607  33  38 549  89 608 337 532 105  27 148 297  16 411
  54 637  43 578 352  11 546 220 294 450 144 114 414   2 518 548 191 567  18 568 156 561 574 473 545 224
 563 647 521 192  79 594 601 115 553 642  48 233  42 146  13 555 176 527  14 645 634 149 536   4 444 128
 326 554  52 380   6 361 510 415 269 540   3 479 113 638 480 398 483 511  93 508 569   8 478 179 426  22
 497 476 390 560 133 228   5  21 593 366  19 498 455 646 320 457 446 501 155 595  36 358 445 284 147 170
 465 530 534 600 199 475  72 436 469 470 172 471 466 525  51 509 120 183 212  31 523 205  80 421 371 211
 298 362 572 542 143 495 452 257  71 512 424 100 502 407 260 550  32 435   1 486 513  88 462 344 448  45
 392 632 386 541 206 614 453 160  35 628 329 447 491 412 552 633  29 387  10 463  26 151 103 404  99 218
 307 349 517 539  60 399 402 408  66   7 409 522 425 431 458 354 377 301 161 617 429 201 263 341  84 374
 141 588 232 437  83 484 395 519 140 416 237 499 482 428 467 440  68 258 382 378 472 171  73 346 356 309
 410 394 419 340 323 393 587 290 441 270   9 313 306 379 507 267 305 406 104 430  59 355 396 348 345 405
 331 418 265 291 162 286 367 283 277 423 339 442 359 310 347 281 427 334 295 316 487 388 322 400 364 287
 311 319 235 397 350 333 493 186 383 401 365 376 230 468 481 304 461 351 268 369 215 280 252 357 363 253
 200 325 531 289 338 612 312 303 315 169 138 385 248 368 330 259 256 649 474 597 159 496 217 278 327 226
 529 343 381 353 577 180 308 262 285 221 293 296 225 242 485 279 266 621 403 210 222 644 275 254 274 373
 477 246 328 116 544 124 188 207 247 515 168 219 314 245 504 332 494  62 573  97 194 528 576 288 640 575
 203 127 145 182 506 244 318 189 650  58 582 132 661  75 229  65 500 673 434 136 174 488 564 335 551 579
 223  55 372 163 490 195 154 656 317 238 674 108 227 135 150 107 659  37 625 190 658 535 516 580 102 635
 261 241 264 276 492  95 618 662 624 158 117 208 231 240 213 165 570 193 489  70 657 299 271 610 272 505
 251 234 236 125 604 443  81 370 166  91 589 249 134 255 181 654 665 178 619 110 643 198 101 636 464 524
 196 273 503 129 375  41  77 565 360 324 606 197 243 121 137 177 556  15 620  87 413 547 584 603 598 454
  76 157 451 653 456 592  24 558 391  49 668 631 675 184  56  46 449 167 623 432 336 119 664 164 106  74
 300 175  63  78 670 651 153 422 439  44 630  57 204 214 652 122 420 139 626  28 533 417  67 562 676 459
 130  82  90 282 389  30 438 514 126 123 629 613 111 666 639  92 615  39 609  64 187 667 585 112 342 627
 663 602  96  25 641  85  98 571 292 433 557  17 616 672 581  47  61  69 622 173 185 537 209  50 239 660

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00533e+07us (= 10053.3ms, 10.0533s)
Satisfaction error: 3
Number of search iterations: 2684
Number of local moves: 795 (including on plateau: 271)
Number of local minimum: 219 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

Problem in row 3: 54 637 43 578 352 11 546 220 294 450 144 114 414 2 518 548 191 567 18 568 156 561 574 473 545 224 => the sum is 8802 rather than 8801
Problem in row 18: 203 127 145 182 506 244 318 189 650 58 582 132 661 75 229 65 500 673 434 136 174 488 564 335 551 579 => the sum is 8800 rather than 8801
Problem in diagonal 0: 671 23 43 192 6 228 72 257 35 7 237 313 359 468 330 279 494 673 625 70 643 547 664 562 342 660 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 497  13 672  50 675 301 650 633 670  20 376  62 610 146 613 177  56 621 390 120 611  66  64 649  16  43
 580   4 652  57 606 646 601 572 642  72  32   9 559 538 644  22   8  70 560  82 231 302 215 662 405  30
 637 641 643 129 358 619 614  27 180 423  51 487 305 575 625 127  53 511 655 271 627  21  11  23 113  75
 586 631 640  37 359   3 574 296 541   2 109 556 435 485 616 191  24 582 636 561  58 178 148 145 118 290
 503 635 505  90  54 517 539 583 581  34 107 563 482 568 567  83   6  36 566 577  77 193 132 607  45 151
 526 564 443 112 592  94 532 557 571  46 184 449  95 343 602  31 558 480 459 501  12  40  28 499 240 243
 546 587 534 284 434 328  52 508 292 476  26 510 220 447 470 506 549 527  81 208 544 140  39   1 225 267
   7 523 446 179 396 493 428  38 401 241 192 569 535 512 520  67 411 367 377 536 164 455  85 167 197 495
 552 489 388 103 522 436 442 382  14 438  17 473 444 547 414 371 398  76 565 345 481 462  93 147  71 131
 530 573 121 238 395 457 504 450 453 496  18  25 467 319 418 274 420 250 440 207 408 142 431 429 262  74
 533 347 304  10 354   5  48 491 413 456 346 348 351 315 548 323 391 468 349 372 406 307 361 387 229 339
  63 316 507 402 407 424 410 158 433 379 294 364 381 488 383 373 394 399 370  29 287 311 325 166 317 421
 314 216 291 362 355 235 310 397 248 490 322 369 463 353 286 332 350 360 340 357 363 217 415 285 352 419
 288 272 278 432 198 141 334 298 335 308 608 303 439 422 356 312 445 331 321 474 276 366 392 202 426 244
 327 338 269 297 393 404 236 380 295 409 416 336 479 384 247 486 255 270 341 374 213 280 259 605 281 227
 256 155 249 514 273 293 218 609 365 333 368 337 545 168  73 342 126 206 214 622 254 251 584 324 448 674
 266 196 232 389 188 252 344 318 257 578 656 246 187 282 260 264 430 400 130 475 253 543 386 221 472 576
 226 205 320 661 200 412 283 300 626 170 521 154 181  87 228 330 268 663 242 500 199 519 454 219 570 263
 189 279 223 466 245 222 157 502 135 313 537 275 209 289 265 299 258 134 461 329 277 612 673 588 555 309
 165 149 194 618 375 224 484 171 239 115 624 230 531 645 105 417 211 152 173 634 104 237 562 492 498 452
 190  65 153 551  59 653 261 136 203 175 590 169 111 161  60 509 595 554 114 201 676 516 460 458 553 628
  61 186 137 528 306 133 117  55 464 483 494 599 478 233 159 594 234 195 116 122 669 657 465 176 469 671
  91  88 110 427 160 632 150 183 204 477 550  99  98 102  44 525 651 403 174 579 451 647 471 665 664 156
 106 660 326 540 138 125  86 597  69 617 210 604  33 172  97 600 585 441  42 128 385 620 630  47 425 518
 623 654  96 667 615 163  49  41  78 591 524 542  79 185 100 648 596 143  19 108 593  80 603 124 212 668
 139  15  68 658 144 589 378 119  92 659 629 123  84  35 101 598 529 162 666  89 182 639 515 513 638 437

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00026e+07us (= 10002.6ms, 10.0026s)
Wall-clock time (full program): 1.00547e+07us (= 10054.7ms, 10.0547s)
Satisfaction error: 1
Number of search iterations: 2240
Number of local moves: 830 (including on plateau: 283)
Number of local minimum: 182 (including on plateau: 33)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 43 405 23 148 193 12 208 377 76 420 323 383 353 439 336 368 578 626 502 484 653 306 427 326 654 139 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 646  91  30 576 590 107 224 181  26 658 582 234 570  25 624 189 183  11 634 636 626 622  43  21 663   9
 417   6 413 552 457  31 103 613  74 579 648  61  42 196  36 375  81 594 314 352 557 580 606 589 506  20
 431 607 539 571 176  64 172 542  96 535 578 200 128  58 620 630   2 154 291 297 633  60 182  48 623 564
 595 625 232   7  83  92  41 544 472 499 591  97  17 509 565 157 545 612  23 351 532 335   1 599 491 186
   3 581 492 521 486 250 339 574  27 653 616  34  44 210 528 514 114 592  39  76 519   8 517 484 470 110
 500 567 118 566 438  10 263 480 169 452 638  69  37 123 461 560 164 635 265 141  56 501 445 585 469  89
 561 415 101 618 572 198  72 468 218 554 374 126 135 302 282 439 212 488 345  28 197 353 611 568 496  68
 426 533 167 475 473 463 295  12 161 593  84  14 243 201 466 615 489 494   4 139 587 327 458  47 515 520
 527 409 140 424  52 108 109 448 119 462 627 391 602 191 460  65 550 416 444  45 428 451 471 524 248  90
 349 435  19 447 490 419 306 294 549  15 540 478 280  51 330  71 362 493  18 404 149 400 511 464 531 396
 513 207 350 383 402 434 188 382 423 504  63 336 328 505 377 381 363 446  46  22 394 420 333 324 168 508
 432 368 366 429 530 219 437 384 454 474 226  16 321 367 387 365 342 153 354  54 348 476 326 441 216 316
 285 459 388 292 341 369 319 427  13 386 322 399 332 361 240 455 346 277 171 412 278 389 343 311 433 453
 408 329 440 288 256 371 315 355 301 312 407 199 662 364 310 244 331 268 270 307 264 425 442 257 422 254
 252 271 283 156 376 260 414 228 665 241 231 325 253 652 631 190 158 174 378 299 320 600 347 411 373 313
 393 450 456 274 392 344 395 245 317 357 340 296 337 220 124 204 309 303 563 651 145 619 211 279 259 318
 390 184 230 225 242 223 575 202 358 147 405 655 236 547 165 674 403 258 597 645 269 177 305 290 214 185
 273 647 479 235 334 276 534 209 238 266 267 670 205 359 104 227 251 644 654 323  86 298 229 308 102 583
  87 148 536 106 657 556 287 643 516  40 160 605 192 584 155 146 272  38 667 632 127 217 398 170 187 675
  29 159 526 163 206 596 601 247 443  79 105 558 482 284 193 672 510  93 669 660 122  99 666 152 372 115
 137 134 529 162 281 525 609 203 237 379 144 562 641 356 179 671 138 111 541 208 449 300 246 136 255 668
 121 131 275 293 637 553 385 249 640 112 117 617 430 495 178  78 577  82 512 483 397 498  73  62 304 502
 173 133 503 194 151 537 604  70 485 166 221 338 523 586 656 150 573  95 129 477 555  55 661 421 213 132
 100 175 673 195  94 569 548 261 614  88 406 538 543 222 113 239 603 664 143 608  49  57 180 650  33 436
 125 621 418 507  32 676 380  59 588  35  24 465 659 546 497 410 522 629 370 262  75  67 130  50   5 649
 628 116  98 142  53 551 286 481 598 215  85 518 559 487 120  80 401  77 360 289 639 467  66 610 233 642

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00541e+07us (= 10054.1ms, 10.0541s)
Satisfaction error: 2
Number of search iterations: 2551
Number of local moves: 928 (including on plateau: 466)
Number of local minimum: 178 (including on plateau: 66)
Number of resets: 1
Number of restarts: 0

Problem in row 2: 417 6 413 552 457 31 103 613 74 579 648 61 42 196 36 375 81 594 314 352 557 580 606 589 506 20 => the sum is 8802 rather than 8801
Problem in row 11: 513 207 350 383 402 434 188 382 423 504 63 336 328 505 377 381 363 446 46 22 394 420 333 324 168 508 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  13 517 646 486 269 334  79 403 293 162  88 664 624 668  30 626  86 185  45 547 359  44 545 522 107 459
 126 373 287 341 553 632  68  82  20 623 432 539 132 521  24 470  77 633  29 566 500 122  95 527 637 392
 503 634 636 174 108 507 549 139  46 372 550 670 579 671  89 554  90 477  63  27 114  75 120 379 101 574
 585 417 315 474 458 199 110  80 138 112 168 625 427 619   1 155 618 468 206 540  96 178 525 430 236 621
  69 484 499   4 589 488 231 210  91 145  78 617 235 612 416 347  52 576 104 513 329 631 127 639 100 615
 445 352 586 117 673 151 510  56 216  19 147 607 601 113 303 467 340 226 406 662 348 152 133 240 674 257
 597 442 194 451  40 663 676 111 304 343 118 161 590 140 587 250 149 228 512 613 551 144 143 535 103 156
 669 600  25 173 211 433 183 654 189  54 659 166 583 252  83 616  34 219 665 391 374  76 518 529 276 169
 534 660 154 411 192 184 205 666 524 402 193 171 476 157  97 129 563 572 440  36 208 327 248 591 400 261
 322 506 233  16 125 479 644 291 650 148 384 450 239 658 258 361 200 153  65 475 536 485 290 170 333 330
 603 461 163 584 629 182 286 299 321 449 357 244 215 281 243 469 421 268 453 454  62 266 232 301  92 466
 389 332 196 407 643  38 277 289 230 395 648 446 463 223 270 188 415 292 354 657 283 251 242 381 203 288
 297 207 462 353 349 410 360 137 342 245 300 396 429 377 425 302 363 284 198 370 263 408 285 383 638 218
 319 294 278 355 581 478 309 455 259 256 314  43 320 176 331 280 328 480 362 419 358 325 483 316 356 326
 335 265 436  66 159 418 306 369 386 249 571 295 364 367  48 323 502 385 533 255 212 493 456 229 397 382
 428 247 312 401  99 167 365 387 482 264  14 197 260 439 452  98 492 448 273 393 675 420 339 298 473 378
 131 179 661 337  57 642 422 190 181 267 505 465 426 201 435 345 310 346 628 220  81 405 366 246 351 404
  50 202 498 438 158 544 457 520 376 431 552 336 496 380 222 472 398 307 224 105 443  18 490 135 102 447
 495  37  72 653 523 423 209   9 491 238  67 134 371 130 497 324 313 464 641  35 649 622 489 305 487 123
 667  15  23 186 460 146   2 569 317 546  71 350  41 388 519  49 610 567 627 311 165 582 494  32 561 504
  33 234 279   7 543 274 414 508 511 531  53 253 109 413 538 213 532   5 164 204 651 412 559 241 605 515
   6  47 187 541 338 471 556 611 565 272 548 106 441 609 645 516 375 577 368   3  26 560   8 195 175  55
 262 254 528  10 434 136 509 394 570 593 555  59  51 160 557  70 630 409 640  84 318 588  12 227 526 225
 344 172  39 596 399  11 444 141 620 606 602 191  94  58 573 514 390 124 558 121 655 608 564  64 271  42
 142 275 530 568 150 214 599 575 594 598 647 542 119  73 580  28 217  87 221 128 308  17 424 604  60 501
 437 595 562 652  61 177  31 656  85 481 180  74 116 115 578 635 296  21  22 672 237 592 614 282 537  93

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00525e+07us (= 10052.5ms, 10.0525s)
Satisfaction error: 2
Number of search iterations: 2243
Number of local moves: 931 (including on plateau: 394)
Number of local minimum: 169 (including on plateau: 54)
Number of resets: 1
Number of restarts: 0

Problem in row 12: 389 332 196 407 643 38 277 289 230 395 648 446 463 223 270 188 415 292 354 657 283 251 242 381 203 288 => the sum is 8800 rather than 8801
Problem in row 20: 667 15 23 186 460 146 2 569 317 546 71 350 41 388 519 49 610 567 627 311 165 582 494 32 561 504 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  76 240 505  69  61 122 636  80 546  64 664 559 110 618 643 365  73 206  68 607 624  26 511 615  57 656
 646 668 140 356  48  32 641 561 645  47  60 473 328 398  84 151  87  35 267 503 649  66 617 179 603 517
 144  31 644 658 611 650  43  58  51 146 609 510  77 630  74  40 126  95 450 535 581 114 543 622 666  93
 103 160 159 665 201  92 420 167 569  90 195 667 413 625 184  37 541  23  86 647 556 671 352 619 107 452
  88 141 634 657 676 125 129 238 549 472 423 158 248 588 147  98  59  56 182 115 563 655 570 558 128 544
 287 169 584 448  71 596 545 175 633 149 213 597 431 112 199 307 674 188 198 186 675 119 384 210  79 572
 178 161  96 500 127 329 629 251 560 154 261 513 358 242 637 211 190 202 218 672 577 255 419 183 270 608
 294 256 174 614 224 302 189 661 461  99 177 286 527 283 333 243 244 444 669 274 221 220 533 275 589 209
 620 284 208 404 354 131 142 227 427 106 231 323 631 153 157 301 281 600 339 232 548 265 673 253 313 598
 327 156 135 359 376 364 258 318 564 662 366 259 565 331 269 109 616 332 346 540 194 124 403 300 282 246
 289 205 234 337 436 163 250 164 635 320 245 460 521 288 236 430 176 262 280 411 586 371 602 314 357 229
 263 293 252 652 117 217 334 228 459 155 638 321 554 197 309 383 298 399 401 138 319 386 463 165 391 469
 458 406 297 370 235 355 439 271 290 445 285 299 338 361 148 226 291 429 342 134 308 455 373 547 324 375
 254 350 343 488 316 612 120 325 502 305 168 377 304 150 368 239 315 306 317 493 468 351 405 330 322 273
 296 396 402 272 417 447 382 379 279 418 474 219 393 162 392 378 407 389 310 477  10 454 416  38 241 353
 367 475 395 222 340 512 326 385 414 362  46 424  78 380 506  22 464 457 390 276 410 341 132 268 344 465
 442 409 372 397 400 336 260 432 116 196 348 462 347 530 381 215 295 446  34 449 515  85 180 497 453 204
 467 508 480 102 421 425 408 481  24 487 529 152  39 489 428 471  27  15 223  55 495 394 137 578 523 443
 173 387 507 171 415 524 422  63 230 438 434  50 118 537 552 491 345 111 369 266 130 492 278 604 494 200
 466  21 435  14 514 433 104 349 187 573 555  52 249 476 456 579 550 440 478   1   5 484 185 499 557 139
 214 516 601 133 594  18 388 542 113 501 437 531  29 136 482 575 574 587 426  54   8 470 101 105 485 181
 536 532 534  97  41 593 363 639 170 621  12  83 257 519  67 605 525 539 576 479  25 303  91  30 520  44
 441 606 571 233  16 567  70 585  65 496 108  62 292   9 490 642 590 412 526  36 225 522 216 599 145 277
 518 660   7  82 509 451 207 591   6 632 653 121 613 580  53 538 143 595 486 551  13 592  72  20  19  89
 651 123  75 335 627 212 528  49 264 626 659 360 670   4 566 562 663 610 192 498  94  33 100  81  28 191
 203 648  17 166 654 193 568 582  42 237  11 483 311   3 640 583 247 623 628 172   2 553  45 312 504 374

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.56589e+06us (= 4565.89ms, 4.56589s)
Wall-clock time (full program): 4.61722e+06us (= 4617.22ms, 4.61722s)
Satisfaction error: 0
Number of search iterations: 769
Number of local moves: 496 (including on plateau: 105)
Number of local minimum: 32 (including on plateau: 11)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  62 107 559  15  58 146 621 606 339 599 648 509  56 602 100 613 383 617 161 636 108 123 637  32  45 419
  92 174 652  37 150 141 568  54 138 616 643 147 346 635 119 594 334 601  59 590 250 598 586  80   8 589
 552  22   6  72 576 623 162   7  13 656 650 615 503 661 264  20  88 495 165 633 374  24 467 488 134 531
 566 153 473  51  10 564 127 520 475 276 556  68 306 582 219 660  33 242 284 607 113  48 622  21 620 605
 500 446 646 307 537 662  85   4  61 555 624 178  18 491  40  57  31 417   5 548 506  11 541 434 465 632
 612  90 431  14 534  34 205 544  17 263 513 336  46 618 274 567  64 278 481 631 554 512  16 135 459 573
 545 169 420 255 494 611 164 507 198 461 526 305  26 486 142  28 159 522 149  38 265 470 479 454 429 499
 335   9  12 182 580 385 490 298 213 367 386 477 197 441 140 430 425 129 543 442 469 413 540  29 549 320
 584 382 436  91 515 532 440 517 114 396 448 115  52 378 247 504  77  71  94 423 317 362 322 451 432 501
 563 373 409 498 445 360  50 371 358 167 595 131 209 487   3 410 437  60 426 439 456 286 352 354  43 519
 395 458 380 350  25 303 414 408 337 463 468  55  35 357 415  98 402 224 406 387 497 384 353 368 375 444
 216 361 474 355 325 294 296 328 308 453 288 421 309 365   2 389 333 464 323 302 163 472 455 449 356 300
 521 478 342 390 399 270 388 340 332 405   1 484 447 116 443 514 230 272 428  79 341 403 299 433 427  19
 485 416 319 672 330 313 157 275 326 268 338 260 316 282 510 233 256 412 349 289 285 363 392 359 248 348
 379 345 435 364 411 236 639 344 407 376 315 310 327 297 232 394 347 525 324 221 273 279 246 283 249 243
 377 238 331 261 418 671 218 489 366 401 400 608 329 231 391 253 217 625 227  70 553 239 203 206 280 199
 176 277 271 665 137 143 587 301 675 558 208 539 321 201 658 287 561 237 172 211 535 166 452 222 188  53
 311 214 259 619 258 154 641 125 583 291 314 370 530 207 560 343 674 565 225 223 369 194 186 105 252 229
  67 571 177 551 257 179 210 293 597 304 130 596 462 312 570 184 550 281 574 318 609 168 267 240 269  65
 110 251  27 215 588 192 669 200 676 234  83 659 651 151 516 145 666 457 592 262 156 175  99 542 195 290
 254 518 212 579  81 424 614 158 398 193 109 511 627 189 569 266 397 103 508 538 667 191 139 128 183 245
  66 630  96 536 132 124 173 196 292  41 204 438 581 160 644 505 664 372 603 170 524 422  30 546 181 471
 185 220  75 235  49 673 144 575 460  87 121 404 482 187 244 450 523 381 180  93 112 528 657 600 634 502
 529 640 654 190 604 202 126 628  23 101 118  82 577 102 591 117  74 241 480 466 136 670 228 626 527  69
 148 649  42 655 593  73 493  84 562  44  76  97 572 152 557 645 483 106 496  63 133 647  78 638 668  47
 171 610 663 642 295 492 120 629 533 226  39  86 476 111 351  95 393 104 547 122  36 653 155 578 585  89

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.57833e+06us (= 3578.33ms, 3.57833s)
Wall-clock time (full program): 3.63007e+06us (= 3630.07ms, 3.63007s)
Satisfaction error: 0
Number of search iterations: 481
Number of local moves: 400 (including on plateau: 116)
Number of local minimum: 15 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  29 287 139 108 666 477 607 136 640 625   6  72 627 175  56 164 192 525  36 524 586  97 639 144 568 676
  42  83 590  66 106 395 634 193 522 521 319 668  58 102 483 499 603  85  81 644 349  80 588 559 393 138
  40 210 641 242 502 663 423 170 355 595 548  92  47 141 490 130 421  90 194 613 456  43 520 675 272 228
  99 216 334 647 214 503 145 137 239 599 560 448 435  91 538 585 637 126 114 654 218  45 278 181 593 165
 429 109 173 302 235 649  31 642 576 540 478  93 550 201 432 577 156 187  77 177 484 674 598  67 229 135
 162  96 104 554 149 657 670 208 629 296 617 103 415 185 570 669 552  63  46 205 368 100 495 118 580 190
 117 155 122 178 259 510 606 528 227 632 633 128 406 119 616 517 281 120  86 650 624  70 623  69 225 300
 143 129 274 101 189 437 154 167 200 354 569 245 209 254 600 589 555 234 672 147 662 233 658 159 618 249
 352 283 223 322 198 410 338 314 665 673 558 238  74 112 612 614 262 251  57 289 217 247 463 240 621 168
 480 386 163 151 459 505 280 257 221 460 462 277 279 284 513 496 231 171 146 179 601 250 492 309 529 220
 256 455 236 244 134 537 204 202 195 212 265 626 531 310 533  78 508 353 327 255 622 176 400 267 611 264
 419 232 313 341 142 350 539 328 285 348 418 311 174 364 420 652 434 304 441 275 183 318 450 271 276 213
 260 403 366 293 315 335 370 206 303 261 301 333 199 468 472 374 324 226 378 326 466 345 408 337 416 316
 305 365 436 294 414 188 336 377 361 362 367 464 237 291 152 263 486 329 266 243 269 347 258 567 398 426
 282 445 339 394 321 131  20 388 487 298 391 407 382 383 371 389 372 306  65 356 392 405 307 546 273 351
 470 148 454 412 308  59 544 417 342 317 312 369 107  26 440 471 111 380 373 473 379 519 290 493 197 390
 381 563 442 384 376 157 121 630 433 150 446  75 172 425  13 430 332 397 424 444  88 475  68 387 527 461
 404 565 323 422 409 297 476 457 443 447  44 396 211 591  62 241  30  32 458 491 113 515 375 506  19 474
 344 485 359 268 320 453 343   4 465 331  23 402 158 399 385 161 500 516 509 360 246 535 166 514 127 428
 230 526 579 557 530  64 346 452  34  94 219 479 449 504 340 196 222 536 596  25  95 467  21 451 288 501
 566 248 295 497 583  24 481 549 124 153  18 357 489 413  38 184 541 582 562 252  53 532  76 605   7 572
 482 518 602 169 292  60 411 628  35 160 439 469 667 573 358 299 133 661 645  16 253 671  27   8 186  39
 574 655 578  14  54  55 564 512 488  84 115 123 553 597  52   1 140 587 494   3 330 575 438 507  73 635
 651 660  79 584 615 224  10 523  37 207  82 427 561 592  89  49  98 534 571 646 286 511 105  12 643   5
 653  28 604 638 610   2  87  51 363  71 180 656 203 620  50 125 498 542 547 545 270 556  17 215  22 648
 631 551  33 619 401 659  61 325 132  11 431 543 608 581 116  48 182 664 636   9 191  15  41 594 110 609

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.6618e+06us (= 4661.8ms, 4.6618s)
Wall-clock time (full program): 4.71431e+06us (= 4714.31ms, 4.71431s)
Satisfaction error: 0
Number of search iterations: 809
Number of local moves: 542 (including on plateau: 203)
Number of local minimum: 37 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 291  43 660  41 473  72  48 672 510 453  49 670  76 666 531  42  79 220 643 671 552 481  91  73  26 668
  83 384 172  52 123 511 174 104 627  74  97 580 129 438 658  92 659 115 550 558 471 650 604 116 669 111
  33 128 605  70 556 138 166 667 585 400 134 470 124 601 527  71  51 119 603 613 592 598 113 675  59 103
 518  30 664 676  82 582 125  57 394 654  37 480 110 648 596  31 211 195 663 674 429 117 579 105 120  24
 114 187 651 208 375 569 188 130 626 122 665 459  81 545 490 151 229 423 554  61 609 581 158 202 196 227
  39 140  40 599 647 491 118 175 649 621 108 617 139 566 448 277  69 519 515 184 311 641  99 149 513 127
 162  32 141 656 217 206 512 218 624  90 136 673 597 451 629 253  68 567 662 133 426 142 171 156 355 524
 192 315 299 147 652 378 368 661 260 360 101 565 223 636 433 235  87 376 176 264 653 182 222 262 508 246
 288 216 165 131 226 640 137 212 329 631 221 517 197 551 442 334 181 619 436 325 586 238 371 191 372 245
 369 314 251 465 318 562 328 243 324 361 258 365 231 180 270 285 535 607 454 210 563 306 255 268 272 207
 612 322 143 286 310 493 203 135 386 237 399 307 646 269 276 301 348 244 525 327 373 404 298 340 321 296
 274 214 317 252 254 625 198 419 332 177 275 593 204 333 402 472 266 294 444 250 561 441 370 154 290 390
 418 289 331 320 367 482 292 358 293 356 297 190 303 215 431 337 382 283 479 319 377 395 343 336 366 242
 239 359 284 403 350 282 447 434 392 241 179 257 339 357 338 385 228 381 233 406 362 330 363 388 397 427
 387 313 335 379   8 240 498 341 474 193 374 261 304 267 305 509 494 428 302 391 224 416 421 345 194 398
 271 449 495 352 409 178 435 415 316 439 280 455 279 411 287 145 309  56 295 488 265 430 414 389 213 326
 407 344 446 249 460 186 342 437  19 259 520 440 496 354 199 526 458  13  65 353  85 425 410 445 467 396
 456 422 263 537 464  29  86 452 144  50 393 200 499 159 432 364 523 247 312 380 102 466 564 507 349 401
 539 588 461  38  18 146 635 543   7   5 347  93 420  95 405 536 450 417  53 521  89 475 573 477 408 462
 413 642 500 201 412  63  16 501 167 591 504 163 530 152  12 502 468 183 300   1 109 557 546 469 189 610
 443 615  80 323 576 278 476 522 595 578 614 107  94  27   6 383 205 225 112 161  14 248 487 489 568 575
 570 157 645 478  17 528 577 351   4 132 533  44 516 273  46 483 587 209  78 608 281   2  88 590 463 541
 534 611 600  98 173  75 514  96 457 549 497 164 492 160 236 644 628 560 232  66  35 148  28 548 153 503
 532 547  36 632  64 540 657  15  77 121 542   9 572  47  67 553 594 571  21 583 308  25 589 486 559  54
 606 655  62 574 620 484 622  10 126 505 618  22 616 170 185 346  55 506  60  20 256  58 538   3 555 529
  11 485 155 634 630  23 639 633  84 602 623 100 584 230 150 544 637 424  34 234 168  45 106 638 219 169

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0003e+07us (= 10003ms, 10.003s)
Wall-clock time (full program): 1.00548e+07us (= 10054.8ms, 10.0548s)
Satisfaction error: 1
Number of search iterations: 2473
Number of local moves: 928 (including on plateau: 450)
Number of local minimum: 214 (including on plateau: 49)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 291 384 605 676 375 491 512 661 329 361 399 593 303 357 305 145 458 247 53 1 14 2 28 486 555 169 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 651 415  98 662 486  56 333 667 581 615  68 325  30 236 111 520  57 541 143  45 672 337 227 125 137 663
  39 357 148 553 654 117 529 546 646 582  86 353  58  99  88 171 131 636 244 509 670 101 149  32 639 664
 152 530 112 641 614  15 609 205 658 673  78 594  74  93 221 559  34 622 157 123 120 483  52 655  84 643
 130 424  17  27 474  14 442 201 238 648  70 573 642 439 105 536 134 545 608  73 106 441 650  25 604 635
  38 618  59 583 668  54 450 649 319 260 155 324  96 467 127 475 124 517 676 181 233 630 162 259  21 656
 168 587 136 628 274 113 505 194 215 675 104 638 167 595  76 665 100 550 599  63 571 453 118 200 150 257
 165 151 558 445 661 461 657 246 116 251 296 576 145 495  95 533 191 464 288 262 139 562 178 309 140 417
 245 534 141 564 487 307 580 230 173 214 190 313 350 302 659 563  81 429 590 176 146  94 189 210 368 666
 186 242 286 237 506 298 507 652 660 556 300 625 318 579 114 234 240 226 160 213 107 531 110 208 278 427
  41 252 273 247 258 294 528 323 248 669 122 540 170 575 180 142 653 574 220 389 135 606 216 280 192 674
 503 115 334 320 363 455  90 516 183 289 404 268 377 440 153 671 365 409 264 301 387 430 254 182 291 437
 481 156 356 504 314  83 327 340 398 358 403 449 269 305 235 198 362 304 228 393 544 382 284 446 335 347
 154 311 346 212 253 386 330 211 371 452 501 421 187 299 241 402 317 263 460 390 352 470 383 271 329 489
 229 266 354 411 169 372 328 400 223 355 370 436 166 384 395 239 326 416  42 413 586 426 344 412 401 338
 310 164 293 321 331 425 277 282 399 275 373 261 364 316 484 255 374 322 525 341 469 380 351 308 336 265
 283 552 359 349 217 526  91 133 202 405 342  50  55 423 433 360 369 391 432 548 410 428 332 519 343 249
 549 396 367 414 375 465 161 397 479 218 339  65 292 315 447 420 392 185 463 482 232  89 473 348 376  62
 388 538 408 243 204 199  51 591   9 472 566 225 444  36 459 466 451 108 510 366 345 188 434 500 497 103
 511 512 560 496 184 522 303  23 491 196 438  71 422  72 462 476 418   4 379 394 468 195 477 287 361  79
 616  11 498 231 163 478  75 499 494  12 448 250 600 480 634  80 431  92 454  43 458 290 551 197 435 281
 569 471 577 502  64 270 203 144  49 407 224  44 585 206 588  37 626 488 492 568 276 207 514 555  33 102
 385 518 644  69   5 535  35 109  28  31 508  60 617 378 524 129 593 279  53 578 222 406 633 596 610 256
 521 126 640   8 490 647 158 119 209  61 557 312 554  66 381 175 485  97 172 602 567  77 603 537 597  40
 619 132 128   1  48 565  85 493 572  13 607 179 627 443 515 456 637  24 272 598   3 419 584 159 605  18
 601 285 539  87 457 513 624  19 621  67 632 543 547 611 532  10 613  20 177 121  22   2 527 589  16  26
 267 138 570  46  82 631 523 612 219  47 620 306 645 147 542  29 297 295 193 629 561 174   6 592 623   7

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00032e+07us (= 10003.2ms, 10.0032s)
Wall-clock time (full program): 1.00566e+07us (= 10056.6ms, 10.0566s)
Satisfaction error: 2
Number of search iterations: 2234
Number of local moves: 688 (including on plateau: 212)
Number of local minimum: 181 (including on plateau: 23)
Number of resets: 1
Number of restarts: 0

Problem in row 9: 186 242 286 237 506 298 507 652 660 556 300 625 318 579 114 234 240 226 160 213 107 531 110 208 278 427 => the sum is 8800 rather than 8801
Problem in row 24: 619 132 128 1 48 565 85 493 572 13 607 179 627 443 515 456 637 24 272 598 3 419 584 159 605 18 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 223 513 192 635 544  50  36 182 520 675  71 237 429 144 581 106 240 605 634  67 670  21 582  62 663 119
   4 597 578  92 601  20  17  85 639 600 178 177 296 336 343  18 116 652 586 591 608 637 575  94 147 214
  37 561   7 614 564  45  80 247 553 621 171  15 111  54 164 531  39 631 616 584 488 626 537 154 658  93
 290 620 445 185 536 510  87  31 494 486  66  90 219 131 208 541  84 656 554 602 617 550  14 130 471 184
 124 549  88 560 424 555  34 205 519 563 207  98  75  27 165 196 502 421 249 526 540 547 497 474 446 210
 331 595 568  70 593  73 528   3 559 464 277 258  83 100 167  13 399 562 557 442 451 456 461 113 475 203
 376 589 571  56 503 527   2  74 579 573 532 281  79  29 224 648  68 396 419 187 551 428 480 102 401 126
 232 599 301 115 583 498  10 286 465 592 333 243  61 103  19 509  11 261 450 606 511 467 416 469 565  96
 576 254 548 397 322 504 370 137 248 525  40  46 391 349 517 121 125 418 500 364 487 435 501 175 392  59
 274 415 299 483 324 443 444 294 408  12 323 409  72 273   5 371 516 425 482 524 422 386 463 466  43 225
  28 326 447 317 293 291 420 220 433 414 302 407 457 332  89   8 495 505 362 347 569 350 312 460 372 245
 351 346 454 492 431 458 152  26 394 423 380 369 231 367 384 300 410 365 235 448 344 449 400 239 241 112
 398 359 496 385 303 426 387 403 382 462 328 353 168 342 272 341 206 288 402 405 297 262 375 430   1 330
 530 238 337 269 366 311 489 432 213 379 159 256 373 484 259 650 335 437 358 246 305 321 216 176 284 378
 440 141 345 276 250 406 455 338 275 266 354 662 390 356 363 233 436 295 320 314 251 315 279 368 360 313
 640 441 307 198 413 427 355 522 340 308 543 377 268 191 566 329 298 270  99 244 304 117 306 325 202 411
 476 318 438 163 310 383 128 412 211 160 292 153 660 659 604 319 357 242 172 533 252 166 162 352 260 619
 666 348 109 229 199 477 512 567 181 221 263 327 594 622 478 523 264 282 148 271 227 212 228 222 197 434
 587  81 287 468 265 668 588 515 538 339 134 285 395 204 381 114 183 200 649 255 132 236 389 215 289 404
 170 283 180 278  30 146 491 643 158 142 590 596 661 334 598 143 545  65 136 646 190 151 234 572 155 664
 374 186 105 157  35  22 607 585 201 193 253 657 558 574 615 393 508 139  58 280 150 230  47 552 671 651
 479 110 189 570 514 118 673 485 173  33 628 577 535 506 257 453 580 140  91  51 195 641 169 188 179 267
  82  52 613 209 218  77 647 309 149  49 665 672 417 618 452  76 470 217  78  69  48 127 556 653 642 636
 108 101 629 654  16 104 138 627  38  63 493 623 603 388 473 676 546 129 612  53  55  32 120 625 226 669
 361 122 135 439 123 624 630 499 107 174 610 161 194 645   6 655 529 156   9  60  95 542 459 518 316 632
 644  57 133 490  41 638 521 674  24  64 609 472 481 633 611 534 539  44  25  86  42  97  23 667 145 507

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00736e+07us (= 10073.6ms, 10.0736s)
Satisfaction error: 1
Number of search iterations: 2494
Number of local moves: 790 (including on plateau: 347)
Number of local minimum: 226 (including on plateau: 53)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 119 147 154 14 547 451 187 450 418 516 8 384 342 373 662 543 160 181 515 491 22 514 209 629 122 644 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 660  90  44 486 103 581  69  77 545 627  87 556 473  71  21 670 665 624  22  57 515  35 505 640 160 418
  46 668 526 424 621 465  67 111 567 189  95 485  64  53  89  15  61 664 474 527 532  76 666 609 675  32
 562 674 514 288  94 657  80 630 603 628 186 464 123  27  43  65 394 672 667 181 592  79  24 356  34 164
 131  37 614 673 128 593 109 142 631 597  74 491 615 101  70  60 516 577 487 134 654  66 676 439 114  72
 634 158 637 440 604 568  26 430 569 584 149 501 120  38 204 146 150 608 183 454 172 538  91 606 155  36
 187 153 546 650 151 457 148 188 651 126 284 644 655 171  85 105 611 467 649  62 632 194 129 534 122 200
 102 124 523 478 108 591 544 165 658 349 215 635 623 211 154 185 176 506 557 652 157 206 156 533  63 130
 184 255 494 629 671 426 225 286 415 616 218 229 192 252 207 141 421 510 618 205 437 170 159 530 116 195
 555 138 595 643 219 620 222 607 261 411 472 443  98 272 193 191 163 382 209 493 199 210 239 580 213 173
 247 119 341 410 280 517 339 147 436 435 277 301 232 175 259 178 551 458 241 240 642 576 198 663 254 285
 224 375 334 521 237 294 333 305 250 401 293 260 278 279 297 661 303 251 352 274 659 208 243 578 249 342
 283 321 309 233 345 351 322 372 217 331 373 291 360 304 669 216 346 361 236 368 330 622 281 314 319 327
 648 275 324 329 268 354 307 431 306 263 248 347 348 265 226 313 271 312 369 282 246 362 340 413 292 662
 383 311 262 364 316 335 287 429 384 299 230 296 358 409 395 318 379 343 422 308 408 317 203 310 365 370
 396 381 462 374 167 441 332 390 366  92 325   7 448 425 359 477  93 338 433 336 350 357 459 264 385 344
 377 423 400 107 353 446 300 326 201 320  75 453 386 393 290 315 456 328 405 376 404 388 337 302 242 398
 380 298 214 269 417 245 427 212 387   6 391 267 449 484 480 407  54 144 438 371 392 528 414 257 419 451
 469 412  14  99 468 121 602 106   5 196 504 100 367 461 434 460 509  83 524 445 470 432 479 174 420 447
 531 483 179 227 444 190 482 450 258 416 397  86  17 476 406 498 503 132  19  59 403 507 553 139 428 518
 540 475 452 378 481   4 273 471 112 389 529 228 499 508 488 489  50 266   2  47 125 162 587 127 656 463
 525 497 169  31 496  10 289  28  55 220 492  29 559 542 564 549 490 399 511  41  51 495 536 166 537 520
 253 565 177 221  23 136 579 363 118 573 535 582 238 466 575 543 601  97  52 539  49 276   9  78 612 541
  18 570 133   8 583  11 617 561  58  33 598 110 550 563 513 548 610 143 168 502  82 519  16  88 645 554
 140 585 256 235 512  84 571 558 231 455 566 161 572 588 633 638 113  39  42 619 202 295 552  25 117  12
 323 234 145  40 152 223 605 574 115  48 599 653  73 641 522 600  45  96 135 639  68 636 355  20 613 647
   3 180 137 244 560  81 646 442 402 197 589 182 104 626 625  13 270   1 586 590  30 547 594  56 596 500

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.17881e+06us (= 6178.81ms, 6.17881s)
Wall-clock time (full program): 6.23096e+06us (= 6230.96ms, 6.23096s)
Satisfaction error: 0
Number of search iterations: 1185
Number of local moves: 798 (including on plateau: 344)
Number of local minimum: 60 (including on plateau: 34)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   4  30  16 570  65  49 151 583 593 119  84 551 626  54 592 267 622 619 183 227  47 645 606 655 587 256
   9 577 154 223 229 103 521 550  83  48  86 637 640  90 641 180 576 584  74 428 117 647 560 516   1 527
 520 280 292  66 411   8 567 575  39  73 582 589 623 537 616  52 424 149  32  36 128 632 447  19 568 536
 572 164 554 293  70  13 511 116 126 235 471 648 642  67 621 110 500  12   2 531 115 639   3 629 594 563
 166 234  21 599  29  60 409 612 429 195 558 507 501 184 608 480 591 179   7 466   5 302  69 574 510 506
 109  93 503 257 141 297 425 472  15  42 564 519 505 490 555 530 638  89 311 216 273 308 404 456 498  91
 218 430 228  22 482 221 284 336 287 130 452 548 636 458 514 134 442  58 451  59 158 460 455 483 434 421
 200 277 547 432 339 105 240 188 385  46 598 475 307 556 437 122 533  38 518  27 129 379 559 486 481 397
 269  26 343 553 453 206 169 410 504 162 565 387 433 546 423 414 449  14  28  57  82 441 487 378 586 416
  87 186 477 191 398 254 357 538 488 344 473 394 359 448 495 295 294  10  64 341 185 426 290 443 524 440
 153 199 367 457 289 150 231 390 479 276 309 403 389 540 325 296 494 362 383 137 286 360 427 246 417 436
  68 211 392 108 299 310 147 320 464 402 493 288 476 364 301 335 422 347 431 474 252 388 375 365 368 401
 381 346 217 324 305 314 349 418 386 369 353 255 303 374 370 315 438 263 358 283 371 348 270 382 265 444
 329 350 459 337 532 323 332 412 345 285 291 361 306 312 331 318 415 316 366 209 413 399 194 247 226 393
 328 212 237 282 363 445 313 672 334 321 342 338 241 407 219 146 245 661 467 327 469 330 249 236 298 319
 609 541 279 513 268 562 602 171 165 326 377 322 281 197 340 496 144 259 132 454 492 190 352 124 373 232
 376 213 189 224 588 463 502 175 251 264 356 204 248 239 253 157 127 557 569 512 543 517 230 274 145 625
 529 470 351 525 624 484 596 509 573 497 187 272 220 121 222 135 355 173 205 261 419  92 275 260 168 278
 667 266 468 243 203 462 391 201 193 491 198 380  63 244 163 208 333 508 439 585 515 178 262 250 665 225
 604 659 552 396 181 528 590  31 207 535 242 202 258 118 238 489 174 663 671 630 461  11  97  33  95 136
 304 317 112 600 620 395 215  50 571 610 644 104 120 160 192 615 139 542 662 634 435 210 152 176  45 177
 406 478 617 102 485 523 155 664 597 653 156  20  80 613  79 618 148 628 214 384 643 142 131 143  85  37
 660 400 140 654 101 603 233 107  17 635 167 133 354 100 196 675  72 446 669 581 408 611 656  77  25  81
 450 499 580 646  75 666 372 161 579 534 106 170  34 405  23 676  24 633 465  98 657  71 607 159  56  55
 125 670 595 123 650 605  61  44 614 631  53  43  18 651  41 172 114 420 561 544 549  40  99 522 674 182
 658 673 111  62 601 652  78  96  76 578  94  51 138 526   6 566  88 271 539 300 649  35 545 668 113 627

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00543e+07us (= 10054.3ms, 10.0543s)
Satisfaction error: 2
Number of search iterations: 2275
Number of local moves: 947 (including on plateau: 398)
Number of local minimum: 184 (including on plateau: 45)
Number of resets: 1
Number of restarts: 0

Problem in column 4: 570 223 66 293 599 257 22 432 553 191 457 108 324 337 282 513 224 525 243 396 600 102 654 646 123 62 => the sum is 8802 rather than 8801
Problem in column 9: 593 83 39 126 429 15 287 385 504 488 479 464 386 345 334 165 251 573 193 207 571 597 17 579 614 76 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   3 554 642 183 348  97 191 634 638 621  53 227 652 590 541 115 509 109 637  73   5 603  30 151 543  52
  33   4 566  40 197 124 246 564 537 593 625 596 635  39 611 354 525 120 511 323 101 609 619  13   2 214
 107 126   8 486  42 163  14 612 588 618 570 456 649 145 575  61 587 130 640 268 535 595 600  56  68 102
 275 232 571   6 311 189  99 641 201 471   7 589 556 108 547 503 476 482 551 548  16 182  29 169 572 470
  84 544 651 594 242 176  35 231 430 473 504   1 623  18  80  71 508  10 597 478 591  19 491 458 353 540
 132 463 573 429 208 302  55 630  22 539 424 560  12 148 557 499 626  11 500  65  48 467 526  17 419 569
  34 468 485 604  51  62 322 532 501 521 507 137 444 105 125  41 574  74 492 100 472 417 481 269 518 465
 347 598 494 506 175  44 315 422 489 425 599 493 546  89  94 367 502 339  83  21  95 475 497 171 496 119
 523 380 317 461  88 129 149 452  25 515 428 410 459 446 206  81 474 558 288 368 383 528 488  23 139 483
 254 423  60 480  85 253 223  37 415 455 512 369 405 393 114 441 285 420 490 453 366 513 404 356 337 258
 466 342 460 416 144 127 188  50 464 377  90 431 220 527 209 567 350 413 408 287 397 391 357 193 411 516
 440 495 436 510 190 276 306 531 304 187 448  47 384 402 138 314 477 239 309 283 457 104 385 349 396 394
 438 352 272 277 336 445 326 378 498 365 177 519 168 301 530 320 398 330 332 181 387 338 375 217 250 291
 401 421 372 316 427 360 344 318 324 451 162 319 333 297 399 343 390 173 382 281 409 454 263 345 371 146
 331 284 286 267 280 389 362 310 238 233 340 273 434 321 359 158 341 608 373 358 335 216 229 479 672 325
 647 676 298 296 614 312 376 247 274 313 346 290 178 308 407 328 294 643 123 185 363 222 265 329 218 249
 443 240 142 211 657 631 550 257 327 653 245 299 235 278 592 355 334 202 226 255 289 140 293 520 167 260
 300 236 243 200 351 403 392 225 215 203 379 271 205 433 400 668 204 639 256 606 583 435  86 561 150 157
 251 184 262 196 667 633 406 538  77 244 361 536 307 524 172 529 136 156 364 248 279 155 568 484 143 381
 234 133 228 264 292 295 636 224 629 159 154 426 160 665 517 622  76 241 386 670 487 219 282 447 237 117
 270 106 666 601 442 662 660  70 186  15 213 131 179 118 450 615 199 439 161 581 669 112  36 555  79 586
 644 261  92 134 545 432 418  75 164 210 221 602 128 659 542 656  58 628 192 522  96 675  59 469 166 153
 648 113  69 673 605 565 577  66  26  63 645 266 198 580 259 449  32 141 116 207 632 194 663 613  98 303
 230 462 388 180 576 553 549 212 616  24  43 437 552 147  27 110 170 584 195 252 122 627 103 374 658 610
 620 655 174  57 395 562 412  31 585   9 661  78  72 582  45  82 165 607 135 534 563  91  93 559 664 370
 646  49  46 414 533 617 650 514  28  64  87  38  67 578 305 152 111 505  54 654 121  20 579 624 674 671

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00036e+07us (= 10003.6ms, 10.0036s)
Wall-clock time (full program): 1.00566e+07us (= 10056.6ms, 10.0566s)
Satisfaction error: 2
Number of search iterations: 2252
Number of local moves: 1038 (including on plateau: 429)
Number of local minimum: 185 (including on plateau: 56)
Number of resets: 1
Number of restarts: 0

Problem in row 5: 84 544 651 594 242 176 35 231 430 473 504 1 623 18 80 71 508 10 597 478 591 19 491 458 353 540 => the sum is 8802 rather than 8801
Problem in row 20: 234 133 228 264 292 295 636 224 629 159 154 426 160 665 517 622 76 241 386 670 487 219 282 447 237 117 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 668 193  91  85 582  56 585  55 142 552  71 481 645  49  69 152 502 492  57 497 661 231 531 621  97 636
 318 673  78 517 583  63 676  76 459 527  87 487  46  95 171  75 207 631  58 505 670 446 579  61 625  88
 630 451 596 660 368 138 587  50  44 575  60 469  68  96 580 130  84 635  48 618 563  94 478  20 127 632
 571 633 659 339 646 537 129 109 101 609 444 602 115  82  98  64 422 557 144 509 628 400 125 100 104  74
 148 572 317 131 675 121 674 150 102 650  65 592  59 122 654 390 427 352 163 663 643 669 198 116 106  42
 565 209 157 126 432 381 177 139 199 528 155 607 118 135 649 187 545 653  93 666 576 450 210 147 560 137
 508 506 648  83 546 189 271  79 197 629 172 644 202 149 215 191 627 299 226 539 464 378 300 250 238 251
 219 156 153 170 510 195 108 603 120 578 282 641 154 227 214 247 558 640 665 249 408 476 639 213 284  92
 581 180 217 166 453 306 239 136 667 491 259 544 119 141 344 232 626 474 264 176 562 483 289 320 225 307
 190 179 196 258 514 200 228 263 409 396 312 244 610 262 275 206 671 298 267 535 370 577 542 292 235 272
 283 254 313 341 212 280 297 204 181 266 664 243 287 252 291 294 536 346 314 672 479 662 295 268 273 293
 316 321 330 241 358 304 222 290 637 285 221 442 277 223 303 324 353 363 309 612 522 331 240 257 371 349
 276 332 308 328 327 356 393 265 343 279 322 399 376 335 361 377 288 350 281 242 348 436 366 296 419 398
 286 333 301 384 338 315 351 414 256 269 323 386 305 310 357 383 373 302 397 395 278 255 431 360 334 365
 367 401 429 236 245 134 403 466 160 425 364 448 374 413 354 253 421 461 473 201 185  77 375 342 355 439
 504 458 434 391 438 359 372 178 452 467 424 188 379 385   9  37 388 387 394 326 164  62 470 329 404 402
 449 362 454 389  90 435 392 440 218 208 417 186 471 488 410 325 167 246 437 274  39 234 462 512 480 216
 405 412 441 498 182 465 415 455  38 183 457 159 340 447 477 369 145 165 567 260 194 211 407  45 501 564
 237 519 484 530 261 532 433 485 511 192 203  40 495 520 426 569  33 468  13 113 162 184   2 525 382 482
 472  72  10 529 110 593 443 553 551  73 168 107 411 524 493 518  34 423 589   7 123 336  47 526 573 516
  99 146 496  52 430  21 617 556 489  32 463 248 595 533 515 538 445   5 460  81 233  67  28 507 540 605
  89  15 548 591   8 521 500 337 623  66 486  53 503 600 543 534 224  36 588 319 158   6 347 561  51 494
 499 161 513 456  27 608 111 586 428 117 615  29 594 549 132 523 230  26 568  31 143 652  24 570  35 574
  80 638   3 598 205 554  23 614 380  70 620 345  30 566  54 601 124  17 416  43  41 655 599 420 555 550
  25  14 613 112 175 541 133 642 475 229 657 103 606 647 634 658 151   1 604 140 169  11 547 584 311  19
  16 611  12 590  86 597  22 656 619 105 490 114 622 651 173 624 220 174 406 128  18 418 270 559 616   4

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00025e+07us (= 10002.5ms, 10.0025s)
Wall-clock time (full program): 1.00542e+07us (= 10054.2ms, 10.0542s)
Satisfaction error: 3
Number of search iterations: 2179
Number of local moves: 1054 (including on plateau: 408)
Number of local minimum: 150 (including on plateau: 58)
Number of resets: 1
Number of restarts: 0

Problem in row 11: 283 254 313 341 212 280 297 204 181 266 664 243 287 252 291 294 536 346 314 672 479 662 295 268 273 293 => the sum is 8800 rather than 8801
Problem in row 18: 405 412 441 498 182 465 415 455 38 183 457 159 340 447 477 369 145 165 567 260 194 211 407 45 501 564 => the sum is 8802 rather than 8801
Problem in diagonal 0: 668 673 596 339 675 381 271 603 667 396 664 442 376 310 354 37 167 165 13 7 233 6 24 420 311 4 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 465  24  93 665 391 619 629 507 668  45  34 545 429 448  30  38  43  64 312 585  44  86 669  67 674 627
 531 651  29 663 664  78 650 574 597  81  72 439  88 634  13  74  52  77 100 570  40  28 654 242 613 587
 606  26 647 670 659   7 616 152 560  17  35 502 494 442 106 232 130  55  65 576  79  94 652 108 672 599
 518 661 123 561 492 463 389  99 605 167 143 301 127 592  87  69  60 138 113 666 540 175 625 508 185 394
 509 171 102 168 555  92 639 354 202 129 117 156 162 676 308  71 121 197 655 657 646 598 172 523 226 595
 552  54 191 660 653 612 632 198 675 358 230 546 194 533  68 126 155 154 148 565 503  42 153  76 364 359
 673 173  89 104 496 483 575 641 199 207 122 645 643 588 109 470  80 150 141 339 419 179 134 517 163 462
 149 209 276 215 551 247 638 228 472 180 285 608 212 151 205 145 476 635 195 544 430  97 206 622 210 615
 261 133 184 201 489 166 384 491 305 227 264 169 238 610 157 581 196 584 240 423 631 218 338 532 216 563
 519 223 281 257 444 306 404 213 284 542 189 283 208 222 268 144 541 256 182 534 512 262 365 614 263 485
 233 277 236 649 500 237 307 190 252 480 401 375 415 311 291 224 178 405 374 498 386 249 403 244 293 393
 300 548 288 286 398 328 600 296 289 361 378 214 259 310 456 323 315 254 290 350 357 341 302 299 280 379
 239 253 304 248 554 360 274 424 318 282 279 671 297 327 260 275 267 343 413 370 255 295 362 273 481 377
 329 372 278 345 231 316 324 385 321 251 342 330 352 347 337 406 334 408 366 229 355 382 332 331 402 396
 422 411 392 371 246 322 319 373 335 333 344 176 426 435 159 353 407 387 336 220 340 428 309 356 409 192
 397 368 484 417 234 346 363 367 395 317  12 450 399 111 487 132 493 369 431 292 181 400 313 432 486 125
 388 451 348  10 221 381 271 412 420 115 427 446 326 414 376 443 203 416 425 170 164 447 479 410 421 217
 461 455 452 440 158 478  62 418 161 471 467 515  83  51 458  66 468 475 349 193  61 459 474 469 438 219
 464 351 457 520 137 383  14  96 445 535 547 506 477  41 454 433 325 298  21 245 449 390 453 258 314 188
 107 537 586 437 114 526   1  25 120 577 569 510  48  95 602 539 460 243 525 269 241 499 490 147 511  23
  84 441 637 136 186  85  33 543 434 235 488 146 174 524 571 529 482 473 131 165 505 211 516 514 495  63
 105 538 596   8 272 187  32 466  70 557 513  98 528   5 609 617 568 550 582 116  47 501 139 112 549 436
   3 607 527 294   2 558 204  20 504 521 656  18 536 101 580 658 630 572 530  19 118 626  36 225   6 250
 142  46 589 320   4 559  15 604  27 662 628  11 553 380 579 640 601 624 611  22 265 594 103  16  82 124
  57 621 562  37  59 522 266 135  53 573 623 110 567 270 564 620 633 177 618  56 591 644  73 303   9  58
 287 200  50 119  91 140 160 590  90 578 636  31 566 183 667 593 583 497 648 128 642 556  49 603  39  75

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.26595e+06us (= 4265.95ms, 4.26595s)
Wall-clock time (full program): 4.31779e+06us (= 4317.79ms, 4.31779s)
Satisfaction error: 0
Number of search iterations: 692
Number of local moves: 532 (including on plateau: 128)
Number of local minimum: 21 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  59 271 664 579  75 597 644  94 606 674 596  58  90 675 508 112 172 438 127 107 102 668 130 149  52 554
  17 558 604 622 292 670  64  20 583 166  19 468  62 623 511 595 187 542  43  44  34 377 615 612 435  38
  93  65 661  96 154 380 415 216 672 257 626  68  78 153 539 272 608 571 164 145 555 639 110 569  26 669
 167 101 174 665 150 119 533 461 656  98 584 350 117  53 437 650 212 586 141 548 197 413 638 629  46  76
 182 143 219 191 405  57  73 600 585 340 570 422 302 428 630 549 218 505 465 120 337 566  95 560 206  33
 352 535 481 443 214 434 454  63   9 261 392 445 263 509 529 462 406 449 134 237 563  28  84 618 147 289
 281  77 487 483 192 157 466 161 624 241 552 374 151 390  82 642 567 277 379 676 304 236 295 323 144 240
 279  83 208 256  81 128 168 572 580  25 252 384 564 651 116 550 347 501 620 131 160 617 658 283 354 233
 220 201 259 244 195 203 270 440 522 138 469 648 202 510 268 492 631 493 371 264 530 221 369 165 286 190
 297 223 188 232 156 514 200  55 436 659 538 137 211 477 611 673 663 479 177 226 355 426 209  56 305 298
 319 140 299 260 274 546 178 285 296 258 598 321 124 324 217 411 504 234 641 660 249 290 276 456 255 386
 410 231 450 643 306 346 607 266 578 366 180 444 310 135 254 588 326  22 318 158 376 442 294 175 330 246
 357 300 316 173 204 313 269 396 409 251 222 388 667 345 284 243 358 636 341 225 433 459 517  66 301 328
 314 303 159 265 421 317 329 210 559 649 382 238 414  27 230 247 460 309 628 229 446 291 315 432 619   8
 338 397 224 418 378 359 322 189  92 431 425 408 562 364 293  39 133 287 312 389 400 441 385 273 427 515
 605 439 129 470 491 325 108 327 333 401 348  11 646 344 391 282 109 372 419 336  74 334 339 360 311 497
 528 363 404 248 351 632  16 498  21  70 308 581 368 115 463 267 170 520 367 373 114 480 275 353 343 573
 398 525  50 494 544 361 471 496  10 399 362 181 540 381 205 121 162 416 288 424 488 176   4 335 423 547
 146 536 458 395 502 532 394  37 464 183 653 235 507 245 106 227 126 420  88 472 500 179 457 169 531 239
 474 592 485 451 365  91  47 521   5 482  79 467 455 171  60  35 476  41 207 100 556 534 486 527 647 447
 625 633 671 307 587  13 242 452 193 512  48 342 662 132 125 213  42 253 163 577 104  30 603 417 262 593
 478 541 429  14 490 557 599 519  97 403  18 518  85 142  69   3 123  87 614 475 228   6 640 627 523 516
 602 194 136  15 489 506 543 575  45 503 199  51 393 387 513 526 453  23 473 553 484  54   1 430  32 621
 654 645  67  61 652 568 383 148   7 278 152 320 576 370  89 331 589 122 666 545  31 215  99  29 613 591
 582  71  80 590 637  36 412 565 407 601 118 332 349 448 655 185 198 113 280 250 657 184 356  49 574  72
  24 634 499 186 196  40 594 635  12 155 111 610 103 402 616  86 561 105 375 537 524 495 551 139 609   2

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00534e+07us (= 10053.4ms, 10.0534s)
Satisfaction error: 1
Number of search iterations: 2778
Number of local moves: 893 (including on plateau: 290)
Number of local minimum: 260 (including on plateau: 43)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 59 558 661 665 405 434 466 572 522 659 598 444 667 27 293 282 170 416 88 100 104 6 1 29 574 2 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 251 643  98 118 438 618 286 562  81  63 602 637  21  54 592 156 507 651 621 214 465  40  42 598  78 365
 639 662 670  68 564 308  94 275  60 626 674 115  82  25 608  76 342 568 601 112  38  39  84 574 278 619
 663  44 422 125 502 344 122 590  57 114 665 605  49  93  73  62 604 579 586 667 505 224 646 233  26 201
 170 563 123 659 558 119 348 653  43  32 596 137 103 134 395  36 440 129 539 613 483 190 496 655 550  37
 591 225 606  96 603 204 566 198 202 195 671  53  61  70 253 106 580 650 425 442 228 676 197 611  71 221
 178 148 143  86 454 519 273 627 658  64 109  79 139 128 458 172 629 660 649 529 537 162 599 515 133 153
 136 160 147 131 631 581 661 656  92  85  52 132 130 161 600 657 612  99 597 675 582 227 107 490 237 163
 628 171 144 265 271 669 512 666 124 222 261 127 101 141 245 165 475 205 673 511 575 587 213 408 329 113
 594 281 270 372 642 616 255 284 633 303 189 105 379 287 181 180 437 668 411 538 187 188 135 239 209 218
 175 155 294 630 459 672 419 358 158 330 282 298 391 285 309  80 272 388 447 485 654 295 223 242 300 200
 320 297 117 323 264 567 274 585 247 470 238 258 276 339 244 377 664 217 368 337 607 307 174 413 166 352
 279 288 138 167 208 313 378 302 262 635 384 293 445 304 332 393 409 364 341 363 460 401 544 280 250 268
 319 243 154 145 407 185 427 392 269  41 347 360 362 479 343 311 410 444 455 385 357 240 420 426 468 412
 183 361 624 199 211 336 290 310 390 277 249 263 296 432 478 404 451 375 354 334 415 335 260 403 345 226
 291 400 326 394 399   2 439 292 359 318 283 517 312 433  88 314 431 530  90 471 315 305 380 374 389 349
  10 338 324 418 473 416 234 322 257 355 370 350 526 331 327 406   4 351 248 424 382 369 457 383 405 321
 299 397 168 325  83 429 501 340 469 434 414 514 428 259  97 376 192 443 102 207 177 387 467 421 476 396
 520 521 210 610 184  28 151 220 495 346 381 398 565 417 386 527 193  35  75 256 448 503 462 333  31 506
 449 371 500 482  13 252 487  12 402 306 430 317 373 441 559 518  56 533 267  47 215 356 367  74 488 486
 104 553 546 528  72 266 206  29 509 452 212 436 504 576 450 513 126 489  77 146 236 560 366 108 561 176
 510 353 524 463  20  69 453 446 541 216 522 456 484 534 494 229   9  23 149  87   1 481 466 116 578 577
 525 508 498 570   3 491 152 159 556 492  24 532 573 536 531 474  58  18 100 423  55 191 231 111 497 493
 589 472 540 289 316 232   6  59 614 547  95 572 499 516   5 480 121   7 194  34 230 543 583  33 641 584
 110  22  14 571 182 328 464 196 203 595 542  15 523 554 548 622  67  65 142 435 461 555 301  30 636 620
 241   8 549 593 235 186 246 179 551 645 164 644 545 640  48 552  66 219 150  50  19 623 535 477  11 625
  27 617 652 173 609  51 557  89 569 638  45 588 634 632 157 615 647  91 140  16 169  17  46 254 648 120

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00031e+07us (= 10003.1ms, 10.0031s)
Wall-clock time (full program): 1.00556e+07us (= 10055.6ms, 10.0556s)
Satisfaction error: 2
Number of search iterations: 2157
Number of local moves: 858 (including on plateau: 275)
Number of local minimum: 162 (including on plateau: 45)
Number of resets: 1
Number of restarts: 0

Problem in column 4: 118 68 125 659 96 86 131 265 372 630 323 167 145 199 394 418 325 610 482 528 463 570 289 571 593 173 => the sum is 8800 rather than 8801
Problem in column 17: 507 342 604 440 580 629 612 475 437 272 664 409 410 451 431 4 192 193 56 126 9 58 121 67 66 647 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  31 635  93   2 515 496 603 299 565 618 101 600 493 562 351 619 572 497 163 100 142 209  11 487  33   4
 629  21 125 557 175 661 343 379 503 566  30 608 658 155 477  22 554  19 116  41   8 675 301 556 355 267
 507 580 216 540 567 588 346 610   6 637  63 534 407  34 623 636  17  75 153  74  27 454 131  59 648 269
 571 502 105  10 123 265 583 256  20 599  12 470 606 290 385 574 111 655 113 485  36 337 313 446 463 471
 621 654  37 579   3 578 612  24   7 628 229 381 513 472 591 613  32 504  69 214 541  67  18 207 550  57
 172 495 251 551 480  47 644 456  87 527  46 352 561 511 651 394 129 529 185 103  16  91 102 509 555 357
 126 518 187 532 514 586 118 244 631 633 387 548 398 137 587 168 360 525  45  56 169 241 114 445 443  89
  68  13 195 435 304 167  15 130 547 499 552 144 531 476 560 558 331 484 479 450 122 453 115 617 474  82
 121 449 166 393 143 358  95  62 523 421 521 307 389  29 383 542 261 475 469 367 228 549 213 498 349 490
 339 432 645 150 374   1 138 391 516 289 231  52 392  60 282 524  80 563 424 464 659  92 626 274 570 233
 287  72 221 305 327 439 345 433 451 382 595 405 402 419 422 441 488 219 537  26 397 328 285 104 315 156
 481 418 444 350 423 396 403 199 436 356 306 627 281 250 329 139 277 254 247 298 417 363 119 478 218 292
 384 604 334 377 473 236 257 320 202 324 132 371 288 270 338 399 395 162 447 386 317 222 204 359 638 362
 152 353 230 295 462 468 544 348 245 340 400 582 225 154 263 296 437 368 248 217 286 366 201 347 559 415
 326 283 364 309 596 535 140 276 303 411 268 512 237 426 656 341 293 330 370 193 181 333 206 459 178 275
 642 319 663 149 361 354 136 577 302 188 252 372  70 483 205 434 380 243 203 373 321 332 425 279 318 420
 508 278 634 335 235 312 482  77  14 365 440 291 200 466 174 159 676 226 227 215 526 585 506 388 262 220
 624 266 428 510 273 198 240 592 669  88 494 145 530 284 158 194 376 264 568 223 272  71 452 311 322 249
  78 316 528  35 197 224 232 620  64 133 375 164 657 308 106 184 486 246 630 581 616 429 609 161 170 652
 545  40 520 260 192 300 646 180 186 234 255 110 124 573 190 412 325 165 191 671 589 605 546 182 176 584
 491 430 650 602 109 369 461 427 128 211 622  43 147 611 112  73 108 120 564 416 196 210 517 460 134 590
 442  61 414 271 601  49 259 505 390  44 160 148 253 177  85 662 593 410 501 625 607   5 406 238 297 598
  23 614 594 667 674 310 342 157  84  48 670 107 141 489  28  66  97 665 597 553 615 242 668 117  25 208
 171  65 183  53 455 127 179 212 647 151 660  81  50 457 672  51 438  99 467 673 569 575 538 641 173 413
  58 344 294  86 135 639 146 649 643  54 336 533   9 189  94  42 409 666 323 458 401 536 522  96 500 640
 404  39 280 448  90  98 492 378 632  55 664 314 239 519  79 258 576  38 465 539 543 431 653  83  76 408

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00526e+07us (= 10052.6ms, 10.0526s)
Satisfaction error: 2
Number of search iterations: 2843
Number of local moves: 848 (including on plateau: 247)
Number of local minimum: 251 (including on plateau: 32)
Number of resets: 2
Number of restarts: 0

Problem in row 24: 171 65 183 53 455 127 179 212 647 151 660 81 50 457 672 51 438 99 467 673 569 575 538 641 173 413 => the sum is 8800 rather than 8801
Problem in row 25: 58 344 294 86 135 639 146 649 643 54 336 533 9 189 94 42 409 666 323 458 401 536 522 96 500 640 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  33   1 648 294 610  80 426 590 519 387 574 553 636 115 620 588 455   8 462 551  24  66 162 212  65 122
 640 263  56 489 569 147  11 305 633 589 502 600 593 592 513 152 145 143   6 452  72 629 474  90  34 102
  47 208 406 607 191 135  52 528 268 511 615 606 614 625 616 582  67  39 535 545  35 107 564 137  86  75
 220  16 665  26  51 181 530 315 124 572 510 599 334 173 517 522  45 649 546  44   5  85 202 668 583 619
 639 336  38 501  83 125  21 638 626 577 494 541 483 514 526 632 507  18  30  40 377   2 134 627  79 213
 516 357  91 236 570 217  49 260 401 481 521 504 524 465 552 566 118  98 187 397 281 460 464  84 192 210
 392 628 197  55 458 642 183 400 492 463 477 534 418 509 428 226 468 174 126  77  63 444 120 587  60 180
 272 440 133 518 490 605 515  36 108 344 414 386 389 353 499 493 485 148 189 567 128  81 487 456 116 149
 341 411 246 558 395 113 371  23  14 542 538 503 631 529 403 155 422 286  17 505  71 603 448 467 109 100
 579 408 310 604   9 146  13 321 585 311 449 476 405 335 248 158 531  15 375 496 219 451 431 349 417 160
 410 345 214 239 351 650 399 129 355 471 432 469 258 482 618 316 427 339 186 300  87 207 398 289 356  74
 376 425  70 439 352 361 576 266 459 150 374 368 369 188 279 298 486 326 381 265 523 416 472 278 275  29
 430 660 322 543 288 424 549 314 500 347 271 287  69 169 433 256  59 396  42 393 573 332 247 363  97 437
 304 421 388 235 302 346 307 167 380 273 201 293 667 461 337 370 390 301 407 350 318 532 402 285  82 282
 366  64 340  46 252 309 227 383 385 292 338 297 382 312 547  54 216 420 429 284 441 645 251 617 596 308
 198 373  76 209 168 320 473 176 412 655 231 241 163 419 190 203 647 664 450 166 540 106 466 185 613 457
 329 111 508 254 479 548 274 438 175 290 244 205 323 359 342 348 253 539 270 378 475 327 104 132 512 584
 221 296 624 232 259 409 280 520 578 184 211 331 204 313 299 164 291 330 601 653 644 206 215  92 119 525
  22 591 562 117 224 595 317 435 488 101 277 218 157 670 195 255 141 656 391 354 434 171 199 193 602 436
 443 597 127 506 262 550 676 571 230 165 131 196 200 121 178 179 112 225 238 559 560 276 554 123 544 478
 194 303 555 237 295 222 527 358 110 130 250 139 234 228 140  88 556 662 622  62 658 103 240 634 608 646
 114 379 343 442 657 453 365  78 154  93 153  99 360 257 229 161 242 362 491  96 586 661 669 264 557 536
 233 533 325 666  53  58 641 594  94 156 404  37 144 177  48 651 138 654 170  57 635 659 384 283 470 537
 249  20 413 394 328 447 267   4 269 245 159 136 142  43   7 637 565 643 612 630 445 575  95 663 480 333
 561 372 563 182 621 495 306 498  19 367   3 151  41 324  12 674 364  31 415 261  27 568  10 673 652 611
 672 243 581 172 484 223 446 454 423 105  28  32  61  68  25  73 671 675 623 319 580  89 609  50 497 598

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.878e+06us (= 9878ms, 9.878s)
Wall-clock time (full program): 9.93016e+06us (= 9930.16ms, 9.93016s)
Satisfaction error: 0
Number of search iterations: 2373
Number of local moves: 1086 (including on plateau: 427)
Number of local minimum: 198 (including on plateau: 49)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  51 599  67 143  99 641 648  40  45 501  26 565 258  52 659 260 621 199 597 553 508 381 622  19 639   8
 636 201 532 149 447 610 623 118 203 518  29 602 119 541  37 575 591 140 194  97 101 137 624  68 657 252
 653   9 512 312 574  10 490  81  63 147 637 502  78 339   7 631 158 208 583 122 608 170 652 605 632  18
   6 611 538  13 539 129 581  57 592 438 626 554 471  71  58 579 638 139 589 536  55 114 155  44 466 202
 563 504  50 171 542 633 444 645  47 127  61 427 169 349  72 644 606 505 478 476 387 566  39 165  75  56
 551  22  16 223 571   2 437 593  27 222 568 630 108 509 487 489 480  42 419 519  11 126 517 535 612  85
 561 284 236 224 572 530  12 358 494  15 527 521 348 157 441 463 531 172 160   1 187  21 522 455 454 555
 540 607 547 186 464 475 436  20  35 270 534 296  36 135 308 545 514  70  77 492 293 288 484 458 513 178
 429 238 333  94  23 578 646 352   4 377 549 516 415 190 526 435 384  14 461 402  69 336 485 397 425 123
 300  79 409 112 424 432 459 291 356  87 474 401 360  82 341 462 503 507 369 469 148 141 443 372 330 450
 353 340 250 166 338 361 285 407 394 225  33 385 343 390 357 428 315 299 482 392 283 347 414 448 403 363
 332 386 342 257 472 497 344 325 335 183 486 322 481 294 295 277 316 370 276 242 232   5 500 346 329 557
 421 281 310 334 395 266 467 373 327 491 319 337 477 365   3 423 439 302 452 331  30 309 391 274 431 253
 212 251 241 311 345 411 515 326 282 498 449 227 451 245 364 243 378 371 468 173 355 362 351 354 206 412
 255 380 287 389 301 303 297 280 264 453 408 366 374 543 313 247 150 268 200 290 537 379 433 261 279 544
 323 420 396 510 321  88 398 210 430 590 271 213 234 275 304 655 156 235 594 215 440 604 198 233 216 272
 616 598 217 465 262 298 317 185 376 400 181 442 625 426 596 193 131 456 265  73 496 417 218 133 204 211
 128 457 324 524 269 375 259 306 328 405 382 249 318 546 307 239 586 567 146 237 603 399 179 229 191 248
 159 350 404 640 588 289 144 263 188 564 182 434 110 528 416  91 220 660 629 246 460 511 164 273  62 226
 314 152 562 669 214 174 177 670 292 359 189 168 154 620 240 121  43 595 221 600 576 506 256 244 192 493
 109 305 619 654 161 618  92 672 665  98 162 205 573 418 254 175 656 107 196 413 367 488  28 207 383 176
 151 184 406 446 132 145  59 393 662 614 320 124 136 209 584 142  80 560 556 286 650 368 197 634  89 674
 228 671 570 278 125 153 102 529 615  34  83 103 569 219 552 104 100 483 231 230 587 651 675 134 195 580
 106 180 523 445 495 130  65 550 658 520  84  32 533 422 668 117  41 559  46 601 613  48 113 661  66 525
 138 643  86 676  54  76 473 664 649  38 663  60 582 609  64  96 111 388  17 163  90 499  25 617 647 673
 666  49  24 410  74 577  31  93 470 627 558 120 479 267 548 167  53 585  95 642 115 628 116 635 105 667

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.61084e+06us (= 3610.84ms, 3.61084s)
Wall-clock time (full program): 3.66345e+06us (= 3663.45ms, 3.66345s)
Satisfaction error: 0
Number of search iterations: 729
Number of local moves: 529 (including on plateau: 147)
Number of local minimum: 31 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 665 645 148 566 520 125  98 647 157 578 504  96 178  73  51  62 118 603 575 607 123 462 166 592  64 378
 613 568 109 543  57  60  16  31 670 633 615 119 539 110 113 198 136 634 437 205 598  55  89 653 427 573
 667 659 675 611 403 145 102 343 673 544 111  52 663  82  61 143  41 170 388 483  71 374  76 614  99 551
 538 664 648 400 616  83 161  70 590 103 243 644 420  81 128  54 501 168 228  90  86 630 457 471  77 650
 621 192 276 468 423 624 133 389 112 579 662 221 230 137 116 257 210 594 392  67 155 322 227 587 649 158
 402 124 135 660 239 595 177 643 212  79 339 189 572 172 293  56 179 556 134 140 606 604 342 656  68 629
 444 600 203 121  78 410 651 482 131 165 256  53 626 283 206 334 249 666 609 461 101 638 199 479 183 173
 467 244 282 608 152 310 105 313 174 217 272 204 672 215 620 303 508 494 625 258 151 646  85 559  97 220
 408 287 226 384 196 187 234 269 529 184 236 197 619  84 493 265 359 411 676 252 377 530 398 496 279 225
 348 235 191 641 323 297 242 387 248 610 372 262 254 223 328 193 655 599 219 284 180 305 292 668 167 278
 433 120 327 318 266 417 139 642 335 319 214 288 280 200 290 358 347 474 241 238 491 513 320 640 383 208
 537 354 285 209 612 237 260 671 341 267 218 299 188 353 232 351 202 419 470 246 195 349 317 574 344 271
 213 304 186 275 321 546 451 385 512 250 296 350 458 332 376 308 435 380 277 294 333 259 164 345 370 381
 330 176 371 337 311 367 306 446 247 369 169 507 307 362 255 382 407 325 326 270 263 404 315 489 459 301
 312 314 418  88 366 465 295  34 302 363 361 422 412 253 415 375 355 324 229 511 338 449 356  87 541 416
 147 448 424 413 505 368 425 289 346 481 443 622 336 514 440 476   6 394 441  63 430  46 160  14 138 432
 159 460 535 485 477 352 536 231 291  35 298 438 233 316 268 373   7 331 472 488 473 106 436  95 454 452
 245 445  13 428 439 365 553 146   3 150 340 274 450 531 216 605 207 142 395 391 453 498 429 100 455 528
  59 524 503 414 495   4 434  48 405 447 499 674 518 497 264   5 122 261   9 421 506 360 487  47 401 397
  37 379  21  22 510  93 406 475 463 582 525 480  32 519 561 509 601  17  65  10 550 273 563 129 523 456
 309  38 484  50 540  29 464 182 426   8 500 565 211 533 562 300 442 201 132 517 534 357 596 144 162 515
 117  40 390  75 286 589 532 163 409 399 576 628  12 557 661 602 554  72  45  33 547 181 542  39 567 185
  58 156 637 386  80 521 654 393  20 516  24 564 153 588 115 652 527  44 478 658 581  36  43  42 635 240
 364 108  26  15  23 490 569 526 639 502  30 585 114 586 560 570 584 175 224 555 104 141 558 154 571  28
  27 251 657  94 552 577 636 469  74 396 549   2 194 583 597 548 431  18  91 632 486  92 593 126  19 107
 281 466 631 190  11 545 222 127 492  25 149  66 130 617 580 522 618 329 623 627  69 171 591   1 669  49

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.16595e+06us (= 5165.95ms, 5.16595s)
Wall-clock time (full program): 5.21778e+06us (= 5217.78ms, 5.21778s)
Satisfaction error: 0
Number of search iterations: 910
Number of local moves: 583 (including on plateau: 154)
Number of local minimum: 51 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   3 601 519 268 207 594 457 606 155 525 132  34 617 361  76 116  95 551 572 632 603  10  15 383 639  30
 638 105  99 538 291 619 461 664 234 620  42 586 605  25 249   4 161 627 381   5 641 527 112  22  83 462
 272 628 315 584 324 557 506 623 126  61 175 561 509  66 590 625   2 200 142 274  65   7 156 286 533 614
 598 649 136 273 145 673 103 321  59   6  35 667 552 169 582 178 592 522 211 239 554 348 146  27 365 651
 531 593 143 266 492 493 485  18 438   8 309  51 532 264 571 616 514 537  63  29  90 245 453  60 505 495
 374 487  56 566  62  74 418  11 428 323 465 569 426 215 490 521  58 469 528 597 180 536 104 163 467 214
 530 580 176  36  38 290 546 391  98  37  67 545 573 231 621 553  32 307 415 549  84 479  12 576 523 512
 340   9  94 543 282 455 568 118 564 459 475 382 454 562 430 611 473 634  14 435 157  71 295  89  86 201
 447 529 190 129  19 248 259  87 622 497 481 138 482 437 507 456 488  16 414 373  24 518 417 224 313 486
 524 366 158  45 503 534 100 403 228 412 401 376 252 491 440 541 446 520 425 380  75 483 131 172 293 102
 429  40 472 500 209  26 436 398 499 504 375 471 416 368 341 420 422 254 331 395 445 127 173 198 255 297
 277 385 404 326 108 468 253 339 369 278  31 260 335 350 410 439 424 513 480 372 389 449 474 250 337  81
 195 364 394 478 344 289  68   1 450 354 355  21 343 643 306 613 397 433 363 661 123 319 303 181 345 458
 238 346 329 388 352 308 359 244 333 353 312 275 367 318 298 196 386 336 271 243 227 332 610 646 139 595
 347 489 128 351 317 236 242 220 393 360 402 292 283 276 589 633 320 362 387  91 413 114 322 470 657 107
 171 431 349 432 666 330 232 270 192 357 540 267  97 644 377 304 217 342 194 148 294 305 448 113 409 672
 316 407 647 588 665 263 501 256 574 656 300 265 328  52 199 206 237 188 164 258 334 311 565 160 153 208
 279 168 575 671 547 122 167 284 441 240 170  93 257 670 233  28 202 663 213 193 577 662 477 555 222  92
 115 218 585 325 559 185 299 390 212 241 655 378  50 591 262 203 421 133  13 612 535 150 556 463 216 434
 191 302 563 251 631 466 676 119 288 659 510 149 110 570 183  54  77 140 197 636 508  85 419 443 130 444
 285 230 652  55 223  64 660 658 162 496 635 261 229 111 124 205 314 134 405 246 464 578 539 460 219 392
 225 280 423 151 452 121 370 607 406 204 310 338  96 221 101 408 579 147 653 109 630 226 511 442 674 117
 567  44 451 411 542 184  72 516 645  73 396 399 154 187  41 137 544  53 669 247 515 600 327 587  69 371
  46  17 189 583 558 626 174 596  82 668 624 550  49 182 135  33 615  48 650 494 358  70 642 608 165  39
 484 476 152  23 106 498  88  80 166 141 427 356 125 179 502  47 599 629 526 296 281 640 384 548 400 648
 379  57 602  20 159  78 301 581 637 269 177 517 560 618 144 654 186  43 120 287 235 609 210 675 604  79

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00527e+07us (= 10052.7ms, 10.0527s)
Satisfaction error: 1
Number of search iterations: 3246
Number of local moves: 1095 (including on plateau: 511)
Number of local minimum: 279 (including on plateau: 50)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 3 105 315 273 492 74 546 118 622 412 375 260 343 318 589 304 237 663 13 636 464 226 327 608 400 79 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 675 183 179 633 646  67 491 669  83 567  52  20  50 387 666 606  94  81  30 444  65 643 101 665 552 152
 240 651 479 554 628 109  48 642 111 392  89  80 582 425  43  64 373  32 506 604  61 654 526 143 657 108
 663 655 662 495 614 105  73  63 132 234 145  62 667 542 645 605 125 440  16 149  25 176  95 599 650 164
 188  68 661 285 629 186 128 502 337  41 586  38 229 571 543 671  88  86 668 458 672 175  84 170 122 615
 275 174 610 658 674  78 103 659 292 528  57 118 569  85 555 509 147 153  39 620 144 624 190 130 639 171
 358 123 529 497 481 676  75 104 201 545  99 185  58 673 632 484 286 223 168 579 647 462 224 203 189 100
 531 151 163 488 459  71 664 304 161 670 321 162 221 576 119 611 225 148  96 335 598 513 195 617 235 167
 603 142 133 413 395 159 236 140 255 501 129  82 315 660 649 616 139 226 631 609 206 499 126 264  98 575
 154 197 243 652 241 310 245 233 585 514 476 383 307 211 283 218 106 626 182 556 209 580 280 217 231 562
 468 181 208 544 641 261 324 202 430 470 256 212 400 428 200 298 309 230 214 621 216 503 346 306 305 228
 249 656 187 547 258 336 253 246 204 437 414 207 433 102 330 483 301 312 267 263 320 410 299 474 352 461
 265 257 325 302 369 359 277 295 382 568 367 441 384 362 238 345 371 342 313 434 237 273 276 244 323 452
 254 420 317 399 391 340 405 354 341 300 247 319 270 385 314 426 381 417 397 293 402 259 327 334 222 288
 297 284 368 347 287 169 419 220 268 338 326 442 393 390 215 333 409 360 453 423 160 472 386 404 281 357
 112 471 266 311 351 289 421 177 363 274 534 279 272 378 199 349 408 344 398 291 339 262 412 407 443 451
 456 252 296 294 184 424 271 239 332 429 322 356 411 251 361 477 331 353 375 278 374 364 372 343 290 366
 447 498 465  56   5 396 370 365  35 329 355 496 519 157 416 446  24 450 478 113 454  74 532 466 467 388
 520 269 536 248 124 522 550 508  49 155 401 507 376  17 415  31 232  33 510 141 482 193 558 500 403 521
  87 348 590 194  44 448 587  27 389  60 436 512 439  29 527 219 422 464   4 282 494 205 505 460 489 540
  72 318  70 110 445 541   2 455 469 166 573 648 449  37 432   3 546 438 515 308 524 165 566 553  19 377
 406 518  91 150 107 613 435 594 380  54  53 485 146 557  34 473 574  97 593 114  12 127 600 492 592 504
  92  42 328  45   1 551 588 427 625  55 537 516 548  77 523 115 618 517 596 121 535 379 418  11  79 457
 173 533 463 260 303  36 591  69 619 210 350 487 131 475 158 120 581 634 607 136 138   8  23 530 627 539
 623 602   6 156  28 601 525 191 637 192 490 578  46 549  66 196 538 653  51 213 431 172 644  93 511   9
  21 178  18 116 316 584 137 480 635 638 597 564  26 250 198  90 561 565 559 394 563 595 640  59  10   7
 572 630 608  47 180 570 583 636 486 134 589 622 560 227  40  13 612 577 135  22 493  14  76 117  15 242

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00037e+07us (= 10003.7ms, 10.0037s)
Wall-clock time (full program): 1.00568e+07us (= 10056.8ms, 10.0568s)
Satisfaction error: 2
Number of search iterations: 3016
Number of local moves: 992 (including on plateau: 408)
Number of local minimum: 258 (including on plateau: 60)
Number of resets: 2
Number of restarts: 0

Problem in row 13: 254 420 317 399 391 340 405 354 341 300 247 319 270 385 314 426 381 417 397 293 402 259 327 334 222 288 => the sum is 8802 rather than 8801
Problem in row 26: 572 630 608 47 180 570 583 636 486 134 589 622 560 227 40 13 612 577 135 22 493 14 76 117 15 242 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 346 648 597 112 132 561  78 553 126 438 136 674  79  37 572 110 589  75  46 179 316  47 643 647 388 672
 654 670 566 532 492 633 573 191 354 659 171 671  32  57  56  59 118  89 115 611 106  40 631  87 558  76
  93 663 551  58 637 549  86 514 632 642  44 653 184  74 501  80  94  77 130 488  96  42 591 635 548 139
 509  95 550 154 419 594  64 186 641 657  91 668  39 271 187 107 665 138 168 655 177 565 296 234 619  52
 233 127 581 124 669 667  85 156 365 617 103 406 160 123 157 108 608 146 510 588 133 638 627 323 485  62
 599 224 190 219 266 661  88 593 662 574 200 142 166  48 456 192 664  49 182 230 660 432 569 169 391 175
 174 222 194 214 546 442 262 634 386 651 261 122 267 129 198 167 564 164 143 512 236 560 675 384 495 199
 607 232 658 165 238 555 204 673 339 598 220 155 462 251 427 256 242 245 610 211 268 161 381 270 226 147
 205 150 185 244 315 239 196 530 440 293 252 104 494 153 392 330 601 652 250 468 522 227 414 450 393 302
 258 148 474 297 280 235 202 650 207 482 113 307 380 215 645 260 189 255 197 606 279 507 416 467 537 195
 135 294 221 387 321 312 309 525 310 410 329 515 281 223 331 585 461 373 334 287 289 314 404 247 361 243
 358 274 322 340 295 228 162 423 298 183 332 523 254 676 368 352 237 305 273 366 248 422 554 333 301 374
 350 356 304 403 500 317 338 448 158 269 362 343 299 193 433 283 216 320 328 300 443 282 344 263 486 463
 341 290 399 259 318 208 349 337 426 324 335 363 379 345 497 275 367 285 504 325 531 421 201 144 360 218
 395 401 292 351 377 464 327  23 431 364 284  72 378 396 246 308 428 411 479 319 225 407 359 455 306 303
 483 286 348 511 276 408 370 389 326 355 415 390 277 383 481   5 288 369 311 398 372 342 210  66 385 357
 469 420 188 453 526 347 520 125 499   6 452 405 353 376 120 418 159 459 424 413 412 471 163 265  67 291
 375 425 466 454 447 212 435 176  43 249 542  99 434 475  83 439 436 240 567 472 441 117 209 400 105 460
 528 313  60 451 519 121 556  24 100  97 516 571 547 580  90 446 604 498  29 152 429 449 473  10 151 487
 470 480  12 336 437 417  13  92 458 371 502 582 489 517 137 540 491 533 397 102 563 241  45 513  61   2
 382 503 543 457  19   8 649 444  68  38 583 616 541 527 402 539   1 181 409 521  18 529 149   3 206 465
 445 584 170 524  11  81 625 111  30 264 394 140 493 484  36 620 614 545 579  71 640  70  55 552  41 622
  26  50 172 590  27 128 544 534 636 119 490 231 575 505 576 656  22 508  33 173 180 570 141 595  54 666
 229 496 624 518 145 278 628 131 213  53 478  25  98 506 577 536  14 626 557  31 615 477  34 134 178 600
 109  20  69 639 568  73 603  82  35   4 609   7 578 644 203 538  15 646 605  51 586 217 116 559 623 602
  28 430  65   9  21  63 535 257 618  84 587  17 562 613 630 592 114 612 621 272  16 253 101 596 476 629

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00448e+07us (= 10044.8ms, 10.0448s)
Satisfaction error: 1
Number of search iterations: 2740
Number of local moves: 829 (including on plateau: 292)
Number of local minimum: 224 (including on plateau: 45)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 346 670 551 154 669 661 262 673 440 482 329 523 299 345 246 5 159 240 29 102 18 70 141 134 623 629 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 583 663  69  50 626 571  39 564 619 102  76 239 171 657  24  93  83 146 341 540 638 660 584  55 596  12
  43 189 116  92 536 566 243 579 569 204  27 648 165 606  13 137 156 164 555 178 611 504 630 124 568 578
 153 512 132  11 138 530 113 308 229 353  59 315 516 585 628  89  78  17 634 560 624 573 463  40 559 582
 207 607 234  91 182 281  63 190 527   4  30 269 610 661 134   5 349 362 601   7 562 588 485 620 543 589
  23 613  15 565 577 457 120 328 314   8 554 106 546 487 635  57  42 520 591  61 592   6 179 217 535 653
 282  66 478  14 533   3 143 553 572  44 140 110 574 557 545 218 544 506 507 114  26 524 451 450 500 347
  45  64  16 499 115 491 295 283 455 467 444 486   9 433 509 503 422  21 561 149 154 605 330 482 475 488
 111 331 429 537 464 523 188  28 266 431 498  37 550 449 445 493 130 510   2 466 470 483  35 355 517  53
  96 412 484 556  88 513  29 468  32 497 415 529 447 418 465 398 441  18 268 361 368  20 474 411 390 203
 247 532 357 260 396 202 270 421 385 410 365 501 437 402 480 515  25  60 403 454  10 521 175 471 408  94
 432 147 351 472 342 492 163 481 426 378  97 494 416 382 425   1 460  22 380 400 360 427 442 434 209 168
 381 367 392 490 387 279 258 459 391 354 350 293 254 320 423 389 160 371 275 117 407 462 417 251 159 395
 453 420 273 241 344 232 310 339 285 265 456 304 352 337 345 406 290 343 327 375 370 473 196 359 430 276
 356 301 477 394 259 210 332 631 439 287 192 452 399 405 263 369 298 316 256 271 313 277 334 329 317 324
 318 458 446 384 419 346 388 230 278 199 335 272 379 373 267 289 198 306 366 319 292 340 629 409 264 297
 206 302 307 221 662 336 374 157 205 291 673 348 201 311 312 376 476 245 166 300 286 237 644 252 338 575
 322 325 305 219 303 215 424 191 233 581 257 563 383 238 244 358 526 549 296 321 284 231 414 212 288 519
 576 100 208 326 220 413 469 600 597 250 428 122 183 309 174 235 176 593 665 262 255 211 280 142 621 386
 586 184 240 129 152 227 372 618 186 155 225 650 172 150 671 435 531 617 636 299 246 261 570 177 131 181
 622 599 228 609 496 249 674 670 641 253 161 323 108 223 200 169 167 637 141 401 222 224 226 158 213 187
 534 145 658 105 180 548 604 216 274 173 502 598 651 109 185 248 236 612  49 127 525 133 148 654  98 489
 436 214 664 112 580 128 377  79  95 633 121 162 667  72 139 640 608 479  84 652 616 195 448 151  85 364
 668 170 123 675  67 294 642 194  87 587 602 645  31 126  62 643 551 404 495 590 135  75 107 632  52 144
 514  80 627 659 518  81 595 125 508 594 505  77  90  34  36 646 615 440 103 528 333 136  46 676  38 197
 539 397 558 552  99 541 669  33  70 656 666  65  47  71 522 547 672  82  58 438  54 393  19 639 363  51
  68 603 614 538 119  73 647  56 118 625 623 193 443  86 655 542 567 461  41 511  48 242  74 101 104 649

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00536e+07us (= 10053.6ms, 10.0536s)
Satisfaction error: 2
Number of search iterations: 2627
Number of local moves: 1052 (including on plateau: 502)
Number of local minimum: 210 (including on plateau: 73)
Number of resets: 1
Number of restarts: 0

Problem in column 5: 626 536 138 182 577 533 115 464 88 396 342 387 344 259 419 662 303 220 152 496 180 580 67 518 99 119 => the sum is 8802 rather than 8801
Problem in column 23: 584 630 463 485 179 451 330 35 474 175 442 417 196 334 629 644 414 280 570 226 148 448 107 46 19 74 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 141 600  77  90 611 242 631 226 257 618 574 616 430 658 118 635 632 473 263  48  86  52  23  64 620  16
 145  21 110 627 642  99   1 111 617 529 628 641  49 572   8 643 446 633 546 106 423  18  12 132 498 544
 205 561 136 650 639  25 200 569 101 623 538 583  34 666   9 397 541 614 213 168 527  33   5  71 613  80
 142 630   3  22 608 147 563 606  35 216 507 591 566 581 636 272 134 545 169 576  42  96 345 150 580  39
 554 562  63 550  11 107 530 575 256 505 398 528 557 590 565 500  87 558  85  31  76 167 249 148 477  72
  82 605  84 594 453  67 540 578  57 514 202 503 511 492 537 553 123 571 138 534  13 475   6 441  14 114
  26 394 232 506 531  29  45 470  59 513 518 589 502 508 485 548 478 126 459  30  62 420 137 191 455 488
 482  28 116 490 431 254 489  10 386 466 523 469 560 468 474 442 387 515  32  79 122 186 227 390 276 499
 484 487  88 462 404 225 437 433 113 250 483 379 376 450 457 413 486  20 424 331 519 275 139 401 165 100
 479 504   2 396 381 161 393  24 289   7 174 375 517 465 418 409 476 406 428 372 509 271 187 395 318 445
 371 364 196 427 463  17 429 368 367 461 464 399 419 378   4 349 408 135 456 336 377 382  19 356 451 405
 347 385 160 258 411 415 204 334 328 339 392 305 365 348 247 295 221 410 361 332 380 416 352 366 447 383
 239 335 362 353 341 338 384 344 360 407 314 374 308 326 355 439 373 351 313 290 370 340 426 402  15 342
 363 330 449 197 298 412 444 333 425 259 245 317 414 266 264 323 604 369 238 300 343 327 388 346 218 329
 294 307 584 303 293 304 261 354 319 350 320 312 496 252 458 676 236 230 324 301 302 229 357 274 448 217
 325 220 660 240 270 283 267 288 337 260 599 273 284 358 296 655 211 280 322 210 403 568 435 170 281 306
 277 228 525 299 286 422 311 282 536 652 297 248 183 251 389 215 522 155 219 209 185 552 438 321 555 244
 237 189 615 140 279 497 310 268 452 315 622 292 262 253 316 159 255 587 573 212 208 521 491 175 359 214
 588 195 501 287 184 493 162 664 152 421 156 207 178 188 278 223 547 172 638 647 549 181 592 201 164 233
 241 198 556 231 269 454 651 158 624 234 128 224 243 182 153  89 656 179 440 663 176 400 495 291 194 672
 222 154 559 119  51 648 143 151 586 265 163 180 667 120 206  95 199 659 626 177 654 640 417 520  41 539
 460 480 598  61 171 669  78 309 436 157 235 133 612 124 146 127  97 131 564 653 173 432 629 645 130 551
 657 149 670 673 121 619 516 117 494  73 129 104  92  83  98 115 471  56 109 668 665 192 596 532 193 609
 570  94 246 108  60 610  81 674 577  65  37  40  47 102 662 166 103 512 533 443 644 510 675 649  58 535
 285 144 607 625 524 671  70  74 595 190 105  75  38  66 601  36  53  68 125 543 526 646 579 567 597 391
 585 637 602  93  69 593 661 481  43 112  50  44  91  54 621  27  55  46 203 542 467 472 582 603 634 434

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.79113e+06us (= 4791.13ms, 4.79113s)
Wall-clock time (full program): 4.84339e+06us (= 4843.39ms, 4.84339s)
Satisfaction error: 0
Number of search iterations: 1024
Number of local moves: 619 (including on plateau: 129)
Number of local minimum: 58 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 564 334 140 294 622 626 260 652 632 459 301 131 356 220  96 525 147  43 165 617 593  48 619  94 174  89
 361   6 606 246  10 416   9  52 602 452 648 116 572 567  26 644 162   3 252 528 643 544 609 423 155 149
   8 214 592 502 605 642 439 217 483 337 181  14 156 454 571  99  31 103  59 621 578 579 589 113 488 126
 566  87 568  88 513 551 321 581 576 613 261 151  90  70 373 624 598  33 522 470 371 514  23 120  95  22
 608  20 633  40 561 563 427 531 338 482 289 218 250 125  56 650  16 451  55 520 627  79 580 549 121  12
 574 163 426  19 533 535  75 524 600 446  77 122  45 236 275 433 569 529  51 385  30 497 646 538 437  36
  13 238 555 154 548 435 167 559 558 239 422  91 413 102 556 501   1 390 314 425 461 447 456 545  24 187
 628 487 462 552 465 512 424 481 317  34  65 146 136 143 287 604  81 562   5 614 368 489  46 418 285 190
 365 105   7 323 595 547 448 443 370  27  41 518  97  71 182 346 404   2 478 389 473 479 635 477 521 458
 430 269 463 342  21 304 353 460  11 118  49 493 498 491  28 415 503 403 315 406 386 396 441 355 325 526
 436 471 379  25 500 408 492 344 431 307  37 383  44 138 417 241  54 546 349 421 326 350 475 377 400 450
 420 232 395 336 318 484 449 237 494 242 247 309 359 233 265  17 464 438 407 445 476 193 280 472 367 222
 362 474 402 266 352 324 343 399 490   4  69 185 335 466 256 508 354 397 345 360 429 328 290 228 434 401
 381 391 251 419 268 327 384 375 244 206 469 255 504 316 455 357 144 453 340 198 292 519 333 300 254 366
 243 283 409 279 358 305 387 270 225 364 641 297 306 164 639 291 432 284 515 302 496 329 211 264 221 286
 672 331 195 560 311 380 303 376 293 428 296 457 660 210 442 637 332 259  66 227 249 200 231 171 258 257
 351 313 184 319 139 175 245 374 272 655 480 330 661 575 410 372 532 229 288 119 310 271 312 168 207 510
 263 625 253 347 212 308 208 369 670 623 657 267 601 597 378 153 320 216 135 205 169  82 157 129 203 654
 107 506 192 248 234 145 667 671  76 662 591 273 276 536 611 132 178 299 573 235 240 160 213 176 197 603
 130 674 298 166  62 215 620  92 339 440 539 590 394 541 540 209  93 141 640 177  61 150 194 647 527 322
 278 509 106 607 274  15 170 224 180 295 599 523 585 158 188  72 658 405 645 196 341 161 398 202 363 649
 173 610 204 516 666  50 659 111 189 219 348 583 172 499 612 201 565 629 584  39  47  64 110 137 277 537
  63 542 199 636 191 128 148 262 186 100 444 588 230 486 152 115 582  98 468 653  84 553  29 634 676 554
 101 382 638 388  58 114  78  53  83 511 414 615 412 517 631  80 570 594 109  67 534 124 117 485 530 596
  35  68 226 543 281 159 665 112  85 127  86 495 507 223  73 392 393 664 505  74  38 577 673 656 587 557
 669 467  18 586 104 133  60  32  57 411 550 651 142 663 282 183 618 630 616 108 179 668 134 123 675  42

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.18541e+06us (= 7185.41ms, 7.18541s)
Wall-clock time (full program): 7.23827e+06us (= 7238.27ms, 7.23827s)
Satisfaction error: 0
Number of search iterations: 1531
Number of local moves: 680 (including on plateau: 389)
Number of local minimum: 110 (including on plateau: 43)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 429  49 585 547 275  58 574  20 645  56 459 587  42 110 455  57 671 476  37 638 107 656 641  83 485  59
  94 670  46  52 660 509  13 496 564 103 115 563  36  15 451  53 502 125 596 675 436 654 674  64 174 461
 183  90 535  24  75 632 159 513 639  81 664 588 171  99 515 447 601  91  67 626  95 105 619  47 647 488
 109  69  48 665 117 569 345  26 555 141 640 580  97 492 577 178 610 190 154 592  73 606 149  21 570 628
  60 184 489 143 636 343 394  25 151  16 668 272  93 251 625 147 558 167  80 553 163 591 666 285 595 646
 518 168  31 113 140 631 393 218 548 391 144 230 130 204 662 133 579  76 229 602 644 267 609 197 315 630
  89 536 494 539  84 165 669 128 608 277 600 194 388 186 635 102 467 582 241 448 153  92 198 121 238 567
 179 157 566 243 181 676 552 652 512 233 263 129 196 135 607 217 356 245 560 399 304 136 216 182 242 663
 303 424 559 338 169 213 618 246 583 262 541 221 301 132 340 220 454 487 224 375 189 187 219 206 629 361
 231 158 598 450 260 209 613 180 357 667 239 232 162 240 202 329 550 416 270 425 294 287 307 324 332 469
 208 603 473 247 355 226 449 292 276 323 456 410 274 286 248 297 360 380 415 620 265 264 341 152 195 385
 337 252 597 540 176 266 365 309 291 290 289 235 431 389 185 284 432 491 223 673 404 259 331 250 150 352
 249 271 418 237 327 256 311 347 366 376 254 299 288 317 342 349 406 359 295 253 321 444 318 655 395 348
 334 333 161 353 282 298 422 281 325 201 296 273 316 371 481 300 336 280 396 312 306 533 330 519 427 335
 310 269 363 308 433 398 390 381 278 351  18 428 397 386 369 302 225 261 407 320 378 408 435 319 354 313
 402 419 414 293 346 339  63 465 137 326 377 400 392 423 305  23 283 520 405  70 458 483 362 379 510 207
 420 462 268 364 370  55 131 314 384  74  82 383 482  41 111 545 328 490 413 191 551 501 470 411 486 474
  87 368 146 412 528 479 199 372 493 367 160 446 460 441 401 403 114  34   3 244 373 453 516 409 430 463
 505 557 442 457 517  45  61  12 434 437  62 565 480 439  32 543 236 322   8 172 426 514 471 504 506  54
 382 537 155  96  17 466 443 374 193 211 503 576 192 507  22 358 116 234 529  44 500 464 584 499 571 228
 452 484 101 554 549  71 166 649 138 642 575 126 562 497  77 578 112 188 521 127  29 421  50 593 417 122
 477 200 258 522 623 475 203 118   4 650 561  68 614 527 170 472   7 531 661 214 594  66  38 440  98 210
 478 573 164   2 544 495  43 498  28 637 511 525 627 581 255 621  33 556 227  88 615  27  35 572   1  65
 634 468 438 148 134 605 657 643 100 530 205 106 524 538  51 599 124 534 617   6 523 212   5 350  11  39
 659 344 279 532 387 145 123 589 120 526  79 108 542 648 508 586 222 142 612 104 590  86  78 568   9 215
 672 156 173 622 616 177 445 653  72 633  40 257 604 546 175 658 119 624 611  30  10  85 139 651  14  19

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00544e+07us (= 10054.4ms, 10.0544s)
Satisfaction error: 2
Number of search iterations: 2228
Number of local moves: 768 (including on plateau: 242)
Number of local minimum: 181 (including on plateau: 28)
Number of resets: 1
Number of restarts: 0

Problem in row 6: 518 168 31 113 140 631 393 218 548 391 144 230 130 204 662 133 579 76 229 602 644 267 609 197 315 630 => the sum is 8802 rather than 8801
Problem in row 11: 208 603 473 247 355 226 449 292 276 323 456 410 274 286 248 297 360 380 415 620 265 264 341 152 195 385 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  86 616 594  50 122 676 568 657 154  72 144 112 601 552 108  98 132 648 110 569  37  88 388 651 334 634
 647 650 192  69 151 668 437 625 145 103 476  87  81 674  73 299 562 487 527 563 466  21 519 142  79  58
 557 498 309 640  95 672 433 121 607  41 165 100 183 464  20  61 155 323  46 610  89 539 652 666 664  91
 159 176 624 659  96 675 529 431 545 217 116 135  84 185 207 446 526 258  66 512  68 638 669 587 134  59
 604 101 599  76  83 516 268 597 517 551 190  78 633 267  77  19 623 532 166 470 209 199 549 612 102 163
 261 104 230 315 240 286 460 137 171 136 655 150 461 153  18 585 658 662 231 641 656 152 502 263 432 242
 338 178 671  90 251 550 665 158 574 120 295 125 157 164  55 555 235 583 201 660 361 123 566 547 179 400
 221 639 147 109 478 317 224 673 139 250 177 181 237 169 167 572 608 245 663 642  64  99 631 282 654 213
 200 161 149 627 301 559 451 371 510 126 255 333 212 206 270 396 637 578 357 312 429 416 355 208 222 160
 407 277 214 538 528 220 326 260 188 336 215 226 311 252 223 626 297 570 310 442 272 320 349 236 537 321
 143 303 459 189 211 276 289 300 643 360 374 239 204 247 670 661 316 269 331 501 194 198 363 279 533 249
 285 148 385 477 287 218 254 328 232 345 271 592 314 335 241 376 447 409 347 418 278 288 667 362 184 313
 406 348 203 346 283 318 275 266 543 339 441 403 387 365 265 319 329  52 417 425 307 180 354 373 344 513
 398 293 399 256 262 325  74 468  33 243 434 370 430 350 509 367 352 342 419 246 364 369 273 340 423 462
 291 292 106 366 414 375 554 410 428 353 341 395 305 556 383 330  49 294 296 518 421 389 284 274 368   9
  12 495 440 438 324 453 394 259 298 444 186 489 372  92 392 216 455 422 290  56 472 620  54 448 253 427
 415 524 332 469 452  97 124 488 467  15 356 420 411 450 380 402 131 530 426 257   2 456 175 359 117 546
   8 413 378 412 405 474 465 384 227 337 386 505 565  34 506 191 445 397 390 233 486   5 210 229 308 408
 382 483 351 248 544 548 105  75 507 475 424 503 404 458 590  25 379  42  11 133 471 393  48 473 225 504
 500 113 609  24 156 127   7 482 439 449 593 327 493 479 514 187 497 244 586 174  32 541  62 114 481 571
 401 358 457 584 598  13 146  39  40 635  67 564 443 522 603 140 128 141 377 129 485 575  29 535 197 595
 490 561  93 454 381 119  80  60 138 558 606 540 484 644 264 391  70 115 508  45 553  16 205 238 560 628
 632 492 600 162 579  44  43 588  22 567 614  35 494 107 534 304 193  94 496  51 536 629 302   1  71 611
 646 280 219 581 617 182 576  38 499 621 202 613  30 511 515  57 173  53 521  82 525 322 228  26 111 573
   6  17  31   3 463  65 618 523 130 577 622 649  14 542 602 596 170 168 591  27 435 580 195 520 653   4
 306 281  10 619 480  28 436  63 605 531 196 630 491  23 615 582 234 343 118  85 589 645 172  36 636  47

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.03068e+06us (= 6030.68ms, 6.03068s)
Wall-clock time (full program): 6.08277e+06us (= 6082.77ms, 6.08277s)
Satisfaction error: 0
Number of search iterations: 1317
Number of local moves: 682 (including on plateau: 289)
Number of local minimum: 86 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 173 352 469  32 363  33 644  63 591 584  75 201 527 620 245 501 619  48  60 654  66 598  17 633 628   5
 136   8 519  43 585  11 559 318 508 186 141 227 488 562 605 566 347 482 139 665 152 606 632  99 214   3
 175  49 471   1  62 220 601 529 571  25 587 254 574 631 635 423 609 212 176  91 205  29 525 658  21 467
 532 553 484  12 334  89 428 432  26  73 177  27 603 405 623 166  14 493 454 629 157 451 308 146 618 567
 235 208 594  95 292  82  93 165 238 543 163 119 533 607 359 590 216 197 427 624 324 284 408 202 610 593
  87 551 625 196 289 537 510 351 462 530 138 143  37 546  57 426 171 500 317 442  46 447  69 162 570 592
 194 480 581 102 483  35   7 103 404 552  55 252 617 369 561 438  88 415 109 448 233 436 465 206 579 589
 244 563 446 170 514 188 144 266  31 313 137 358 497 535 134 555 439 473 210 611 282  19 526 164 370 612
 191 466 379 413 464 204 440 115 474  13 149 107 396 498 507 412 478 237 441 468 247 512 346 172  72 600
 198 536 397 511 520  20 395  41 355 424 117 657 494 122 455  22 391 453  76  39 470 599 490 232 326 461
 251 509 518 418 332 557 616  44 580 344 330 354 429 362  67  47 411 372 333 131 343   6 374 307 382 384
 242 547 287 531 223 185 272 378 321 513 291 390 409 320 229 388 398 577 286 368 158 419 431 181 399  58
 259 270 499 615 293 306 105 316 298 274 400 671 360 402 430 218 263 357 261 349 299 367 265 248 339 337
 264 345 178 371 443 187 338 328 377 492 310 257 311   4 249   2 602 417 667 506 534 348 250  18 479 524
 116 275 297 290 435 486 651 262 329 381 386 135 236 301 303 361 528 269 380 276 151 649 211 463 406 224
 353 383 596 190 283 578 356 558 296 221 153 267 312  53 309 226 350 192 636  97 544 491 652 231 271 203
 608 255 335 445 477 516 523 240 278 373 505 664 331 550 253  70 281 128 193 241 437 215 213 294  34 342
 456  81 156 154 450 319 325 626  36 234 515 140 127 401 273 295 522 653 630 189 444 179 336 521 305 434
 621 167 300 279  23 476 239 659 132 106 394 219 502  56 459 556 489  51 661 230 475 414 246 302 460 285
 120 366  65 549  15 472 675 322 209 225 560 228 487  84 199 256 548 148 656 327 576 393 159 568 280 314
 643 147 180 365 130 420 125 387 614 217 458 421 118 389 504 650  52 588 403 315 160 207 258 582 268 200
 425 565  54 638 663 503  96 407 668 184 541 670 104 133 174 376  90  92 222 113 452 572 195 485 341  38
 642 182  78 517 100 645 340 569 323 639 573 108  24 142 145 622 542 539  83  98 422  85 647 604  71  61
 545  86 111 660 655 646 168 449  45 481 385 662  16 540  74 583 126 161 375  80 554 121 669 433  64 112
 496 674 123 564   9 676 101 457 243 288 634 673 155 129 304  10  77 637  68 169 575  94  30 277 666 672
 595 183  59 640 364 410  50 416 392 586 627 597 114  40 648  42 150 110 538 641 495 260  79 613  28 124

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.83123e+06us (= 9831.23ms, 9.83123s)
Wall-clock time (full program): 9.88364e+06us (= 9883.64ms, 9.88364s)
Satisfaction error: 0
Number of search iterations: 2356
Number of local moves: 1131 (including on plateau: 480)
Number of local minimum: 168 (including on plateau: 67)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 668 129  66 631 150  43 645  98 665  59 604 487  68 165  15  51 637 480  34  21 592 493 102 630 652 616
  29 676 673 662 114  83 361 526 437  74 658 494 108 369  62  78  73 145 463  91 529 667  25 512 230 661
  84 103 454 619  67 622 558 585 559  63 505 284  61 632  77  20 132  28 459  57 549 544  99 327 656 657
 140 100  36 449 528 126 104 115 669 159 581 620 139 510 116 101 608 196 600  85 154 183 659 533 618 672
  96 112 209 629 602 539 105 118 663 188 142 527 271 436 111 324 141  71 352 124 550 671 617 576 490 137
 148 164 244 195 197 481 175 633 153 413 569 615 486 537 208  80 212 567 640 120 624 149 162 514 301 214
 136 675 128 610 281 152 452 587 166 210 207 593 536 509 228 143 109 292 601 113 540 224 184 406 562 157
  72 205  70 144 172 641 340 325 194 225 185 248 398 650 213 171 163 169 655 272 501 647 507 519 564 551
 130 220 261 215 293 594 240 288 546 251 250 233 606 636 264 147  90 674 391 239 223 260 268 621 431 430
 192 237 187 277 198 660 161 282 218 664 280 350 317 279 117 206 670 221 625 552 186 190 386 409 648 289
 294 316 234 424 247 235 168 421 464 377 310 334 246 245 332 300 339 219 446 336 275 666 341 654 257 321
 309 258 499 249 414 534 311 338 302 238 305 265 313 304 432 276 204 364 407 274 639 291 298 335 266 376
 358 390 255 404 290 374 199 119 580 286 343 368 307 267 297 333 362 344 371 236 360 419 423 315 445 356
 387 252 269 285 170 177 242 411 389 359 366 379 295 320 367 412 375 312 458 471 259 322 378 399 393 354
 342 329 337 357 383 439  56 417 444 370 348 262 384 355 385 372 303 241 318 243 428 425 323 420 319 201
 456 394 416 438 400 466  48  14 522 328 392 381 382 483 283 270 401 443  64 299 415 326 353 182 156 489
 441 402 418 365 388 457 217 530 373  16 410   9 174  47 465 468  82 429 346 314 470 513 462 127 396 482
 345 476 351 498 532 405 517 306 167 403 503  69 160  31 478 573 397  19  86 518 408 442 263 110 203 541
 563 506 395 496 511 422 485 434 256 440 461 578   3 232 521 492 426  27 193 586  41  65  18  92 347 211
 473 495 570 106 575 179  52 474 488 469 447  50 222 123 477 453 433 491  97 278 229 435 472  46 125 542
 450 448 590 331 467  12 508 504  49 287 176  81 460 231 614 524 556 545   7 638 107 497 555 134  13  17
 475 596 380  88   4 180 548  45 349 584 554 557 553  26 455 582 500 516  40 635  38 135 591 273  37  60
 451 543 572 189 565 254 515  55  24 520  11 226 502 158 538 603 646 642 566 605 181 121   6  87 146  75
 484 627   1  54 133 308 611  58  10 628  33 579 653 651 535 649 589 155 191 597 200  89 122 479 363   2
 634  95 609  44 525 202 623 547  79 607  30 173 531 178 643 561 330 598 253 574 227   5 599   8  32  94
 644  53 577  42 595 216 560 571  35 583 131  39 626 427 568 612  23 613 138 523  76  22 588  93 151 296

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00531e+07us (= 10053.1ms, 10.0531s)
Satisfaction error: 2
Number of search iterations: 2607
Number of local moves: 779 (including on plateau: 266)
Number of local minimum: 232 (including on plateau: 32)
Number of resets: 1
Number of restarts: 0

Problem in row 2: 29 676 673 662 114 83 361 526 437 74 658 494 108 369 62 78 73 145 463 91 529 667 25 512 230 661 => the sum is 8800 rather than 8801
Problem in row 26: 644 53 577 42 595 216 560 571 35 583 131 39 626 427 568 612 23 613 138 523 76 22 588 93 151 296 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   1 236 627  32  49  56 601 613 583 533  61 602 207 151   3 642 159  27 167 577 171 641 218 610 646 588
 559   5 537 632  77 605   8 600 594 472 615 609 149 101   6 586 227 256  79 136 607 462  73 592  50 164
 512 530  29 639  18 557  13 523 494  16 186 551 230 571  70 628 189 585 324 553 581  48 108 612  62 172
 593 539 166  17 491 196  11 456 483 245 611 558  44  34 232 604  57 449  12 484 517 635 115 543 644  65
  36 584 381 534   4 132 185 544 501 626  22 578 139  35 487 561 246 595  26 597 606   7  67 549 618 141
  76 481 622 673 315 240 123 359  23  92  83 368  74 572 450 532  82 247  31 582  90 625 505 629 437 490
 524 547 367 134 497 125 202 542 573 591 480 620  68 110  39 425 116 181  69 467 452 448 486 463 242  33
 529 499 562  72 356  81 148  19 570 137 460 380  20 400 439 387  63 474  94 336 431 419 457 536 477 455
 508 476 436 404 113 238 120 502 515 326 106 423 485 373 548 565  24  21 377 296 409 314 173 325 396 328
 538 390 411 596 266  10  97 410 372   2 144 398 459 590 295 435 155 430 453 355  37 496 417 112 479 454
  38 526 466 492 402 599  78 321 493  15  47 308 194 309 386 438 513 352 193 428 179 433 408 392 362 429
 354 270 235 412 365 346 406 471  25 399 329   9 340 376 273 348 507 360 458 275 506 383 302 422 338 292
 465 420 322 363 401 279 347 384 333 300 351 290 369 263 287 337 280 344 440 388 297 379 306 267 339 250
 556 443 284  85 413 307 389 201 298 283 432 407 229 444 271 397 421 342 446 291 299 364 424 143 163 469
 264 464 255 222 188 312 426 219 182 415 350 334 500 327 598 343 403 669 341 192 289 361 310 257 261 319
 260 451 174 332 391 294 375 349 323 634 214 366 445 265 251 318 371 672 560 313 221 320 276 254 169 203
 285 233 158 405 378 541 516 293 147 660 353 234 370 278 135 228 522 652 335 374 212 277 176 269 489 281
 262 305 395 331 237 394 550 569 253 616 195 187 210 286 268 180 304 603 244 258 637 552 216 205 345 199
 215 231 204 138 659 427 575 357 224 301 220 170 670 103 638 184 647 239 658  80 441 209 663 243 140 165
 657  55  59 206 518 519 655  14 478 223 619 160 531 213 282 190 521 107 146 656  98 248 617 162 259 608
 504 226 100 252 168 225 509 128 303 382 651 178 498 614 241 142 414 124 580 152 674 198 510 316 217 495
 272  40  86  93 358 520 546 564 157 126 535 105 579 671 274 118 568 664 566 109 249 654 623  51 119 154
  84 130 121 528 631 503 330  95 177 288 545 447 540 145 648  28 650 197 574  89 461  60 675 102 104 649
  43  87 661 468 665 317 555  54 418 117 183 208 624 470 621  41 630  75 640  53 191  71 161 653 133 662
  99 587 668  96 666 667 473  64 153 514 482 200 385 589 643 114 156  45 554 127  88  66 122  42 676 525
 567  46 475 645 175 311 563 150 129 488 527 111 442 511 416  30 576  91 434 633  58 131 393  52 636 211

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.24061e+06us (= 7240.61ms, 7.24061s)
Wall-clock time (full program): 7.29186e+06us (= 7291.86ms, 7.29186s)
Satisfaction error: 0
Number of search iterations: 1545
Number of local moves: 793 (including on plateau: 360)
Number of local minimum: 73 (including on plateau: 34)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 567 162  34 631 645 537 594 675 111 260  93 499  25 484  29 107 456 638  76 619  53 161 533 545  87 180
 436   8 592 586  85 635 549 673 536  72  73 437  59 130  80  94 570 606  79 487 114  65 515 610  43 667
 654 187 182 588 136  66 562 340  63 657  38 574 199 595  57 119 144 555  51 507 469  92 649 624  33 660
 584 581 380 663 551 529 300 103 188  37  97 523 173 466  28 183 618 633  88 608  60  91 509 104  84 620
 351 156  12 646  77 552 658 514  99 403 229 642 194 412 212 174 639  71  81 554 220 617 416 128 135 609
 597 164 612 418 140 206 517 218 113 256  98 668 208 479 121  61 651 605  74 566 648 233 443 157  55 493
 601 661 519 176 153 575 558 146 127 650 167 547 158 513 225  46 421 133 568 301 149 226 622 249 214  96
 230 134 488 112 221 277 614 279 257 213 243 270 148 656 198 219 272 587 664 512 197 670 516 505 116 203
 332 250 546 241 283 193 248 234 672 485 115 419 184 495 415 263 356 482 232 580 154 190 669 271 165 327
 501 227 628 192 147 637 309 242 352 458 267 191 240 647 247 286 543 166  89 676 224 254 626 211 236 205
 565 426 474 292 251 319 151 155 276 423 231 363 326 659 430 297 280 344 289 599 315 258 265 278 358 177
 434 210 491 207 296 284 201 305 303 553 321 338 316 217 381 287 440 185 349 662 345 244 285 330 448 369
 439 372 294 304 189 299 386 288 397 307 275 264 461 274 204 331 445 310 295 506 378 342 346 422 375 298
 215 339 311 389 246 302 350 347 408 318 450 354 291 306 261 444 282 548 374  16 376 475 442 396 253 308
  35 361 125 477 323 435 544 293 431  39 463 163 313 492 317 489 360 476 341 281 320 353 179 373 470 348
 129 337  69 394 355 395 370 392 335  47 359 329 480 366 404 457 388 433 399 160 406 336 172 531 334 424
  44 328 324 503 453 407 322 343 384   5 367 414 459 428 417  62 314 405 425 202 398 266 170 511 465 385
 393 290 510 410 455  45 382 413  30 216 429 497 362 118 387 502 222 486 365 109 481 390 101 460 371 377
 105 438 196 585 357 532 168 139 441 262 391 473 478  70 471 504 383  78 411 228 540 400  56 449 401 245
 446 539 123 124 564  18 268 364 534 521 538 200 583  90 432 420 195 145 467  49 508 472 100 527 559  15
  19 427 142  17 569 498  67 490 593 325 623 138 591  50 518 468 409 454 500 106  20 541  32   4 629 571
 102 223 550 563  68  52 159 526 630 607 560   7 522 175 602 577 169  95 141  24 520 530 483   3 462 451
 525 524 312  13 528 259  42 582 171 576 535  26 641 137 600 578  14  10 542 181 556 186   1 589 632  41
  31 152 368  22 452   2 122 579 615 238 666 235  82  21 447 590 132 237 613  48 616 598 273 464 625 573
  64 634 496 117 653 621 333  86 557 494 561 120 643 269 644 603  58  36 652  11 108 239 143  54 596   9
 402 671  23 131 604 126  27  75 178 379 611 110 665 252 674 640  40  83 636 209 627 572 255   6 655 150

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00541e+07us (= 10054.1ms, 10.0541s)
Satisfaction error: 2
Number of search iterations: 2999
Number of local moves: 964 (including on plateau: 429)
Number of local minimum: 281 (including on plateau: 42)
Number of resets: 2
Number of restarts: 0

Problem in column 11: 93 73 38 97 229 98 167 243 115 267 231 321 275 450 463 359 367 429 391 538 623 560 535 666 561 611 => the sum is 8800 rather than 8801
Problem in column 21: 53 114 469 60 220 648 149 197 154 224 315 345 378 376 320 406 398 481 540 508 20 520 556 616 108 627 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 671 130  31 447  41 129 248 631 665 656 446 132  43 563  32  92 614 599 673  47 635 128 607 161 253 127
 647 500 236 611 280 187  76 615 380 426 648  80  79  68 106 103 638 310 670 510 618  78 593 165  81  96
 137 675 601 125  88 151 654 674 224 429 574  57 427  60  39 123 672 413 529 215 200 676  97 655 252  54
  89 639  71 265 150  38 491 624 194 450 481  53 467 626  73 101 610 172 668 381 575 437  28 176 460 482
 457 560 506 609 667  64 169 233 116 586 588 159 193 190  84 174 468 175 544 590 604 322  75 100 276 292
  65 157 191 573 133 663 565 443 208 364 509 114 431 344  72 140 267 177 499 268 646 662 189 205 661 255
 212 182 266 543 126  86 445 238 634 146 619 597 645  70  40 201 582 534 154 598 300 152 249 147 454 581
 323 141 633 414  99 270 576 527 112 230 538 162 304 235 184 254 256 199 475 327 470 636 297 135 421 583
 259 485 120 331 136 207 625 273 211 239 606 164 314 355 260 247 630 637 489 242 296  93 204 188 621 569
 293 349 328 517 173 294 532 448 167 652 466  82 441 324 370 359 568 234 185 206 245 149 186 217 660 356
 263 398 298 415 257 361 492 246 202 251 274 109 396 666 374 345 305 301 385 223 287 192 261 365 658 477
 134 284 160 121 350 108 617 384 264 228 183 664 554 311 397 312 282 348 354 241 222 295 306 419 641 622
 319 339 386 307 315 289 548 226 330 338 281 340 558 372 390 178 393 334 272 428 326 391 367 196 320 258
 299 376 371 394 290 403 303  46 336 321 514 479 218 408 363 360 461 465 405 302 277 231 407 309  29 434
 279 333 347 469 353 628 227 288 530  59 352 523  51 317 342 400 250 395 399  18 358 476 521 480 379  27
 285 584 488 337 313 417 122 237 124 412 464 366 221 373 462 286 318 329 472 332 449 473 409 418   3 107
 316 458 119 378 335 387 240 416 410 369 341 362 402 291 420 535 411  12 179 524 382 392 430 424 155 113
 442 432 383  62 463 528 210 436  49 375   8 533  44 438 497 578 139 168 401 471 507 502 486 388 117 144
 423 478 483  35 613 278 105 166 585  66  83 459 171   6 422 561 110 553  14 346 474 550 522 651 444 203
 508  56 542  45 536 283  55 451 518 111 180 198 225 484 493 549 219 453 153 195 455 515 539 494 275 269
 552 577 504 389 505 571  58 490  30  74  94 513  87 495 377 520 148 503  13 406  19 143 525 555 142 511
 591 452 244 537 616 487 229 158 642 216  10 439 243  11 592 650 220 620 404  16 118  20  52 570 102 562
 572  67 545   2 516 600 209  17 556 540 181 351 567 557 551 608  23   5 104 580 156  91  22 653 232 496
 579  95 435 357 170 163 440  42 343 605 214 659 602 519 564 547  48 596  26 526  98  90 131   4 325 623
  25  21  15 433 632 566 197  36 546  69   9 594 531 603 640 541 145   7 271 308  50 512 629 649 213 559
  61  33 498  85 644 643 368 456 425 589 138 612 587 115 657  37  24 262  63 501  34 595 669  77 627   1

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.62988e+06us (= 6629.88ms, 6.62988s)
Wall-clock time (full program): 6.68251e+06us (= 6682.51ms, 6.68251s)
Satisfaction error: 0
Number of search iterations: 1754
Number of local moves: 631 (including on plateau: 288)
Number of local minimum: 139 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   2  98  24 145 262 158 227 575 596  86 618 533 587  36 242 645 628 655 121  18 117 514 653 519 600 142
   8 287 619  20 148   1 476 529 132 303 534 606 200 204  56 615 654 609 322  19  33 622 475 588 365 376
 584 569 573 444  74  52 625 578 617 122 576 602 143  66  68 451 630 499  31  71 593  50  10  70 652  51
 620 559 539  23 477  27  85 150 498 571 562 522 216 220  58 551 639 638   3  37 627 480   5 543  39 112
  62 339 465 429 406 197 466  57 542 327 635 184 135 183 407 558 425 552 528  47 134 282 397 445 590   9
 500 470 509  80  13 391 127 104 540 547 520 462 107 518  44 580 553 586  30  14   4 419 437 454 521 271
 494 561 505 159  41 166  32 456 546 508 484 115 133 400 165 427 433 471  25  21 610 261 374 483 473 458
 482 557 556 345 293 192 243  53 594 375 404 364  28 403  90 527 447 554 344 298 247 130 424   7 535 309
 570 537 503 195 488 198 190  59 426 441 338 455  12 510  65 565 531 369 524  17 359  89 152 379 545 284
 493 474 405 312 438 232 492 377 350 526  49  64 290 457 481  22 352 291 343 299 490 206 244 325 283 506
 511 323 564 412 486 367 353  55 334 311 453  60  34 357 472 362 280 450 386 416  11 169 485 398 356 396
 373 346 385 337 342 223 113 434  35 393 320 463 313 459 256 436 430 335 572 304 279 378 340 432 270 233
 383 295 324 281 360 354 370 196 440 250 387 538 213 289 326 421 390 341 336  91 363 267 402 443 380 361
 399 439 264 371 409 210 442 428 446 355 174 315 410 288 328 300 277 366 384 228 411 319 413 333 238 254
 237 382 395 194 294 549 202 321 273 255 348 306 318 305 269 435 525 536 230 469 257 388 236 347 414 316
 330 188 217 660 225 478 314 461 263 307 278 523 207 144 368 275 224 116 301 497 297 646 418 265 258 541
 246 218 137 251 423 452 253 431 422 155 351 240 349 420 272 172 286 329 517 408 415 276 649 332 608 189
 259 249 308 201 199 507 245 582 663 173 489 268 632 296 381  92 212 111 241 661 513 331 643 175 177 193
 317  94 647 292 252 631 607 592 186 266 185 512 637 147 566 222  15 260 168 516 128 502 574 118 187 180
 211 597 310 567 658 401 504 178 205 139 203 560 670 138 501 221  67 176 102 650 163 417 140  97 641 285
 219 105  83 676 659 392 496 214 157 146  69  84 394 667 634 164 226 170 149 668 665 563 154 624 215 208
  48  79  38 182 644 487 302 468 101 626 235 467 611 274 479 124 161 131 598 616 209 671 160 448  87 555
 141  76 162 642 568 662 623  93 136 171 156 358 389  95 612 109 231  81 664 657 530 583 239 129 103 591
  43 181 126 515 495 460 229 589 167 651 234  82 613 648 585 191  96  61 603 636  63  45  99 604 110 675
 640 599  29 577  75 550 119 449 106 125 153  78 579 656 532 248  16   6 605 595 614  42 601 120  54 633
 629 179 114 491  72 464 666 372  26 672  46  40 581 621 544  88  73 108 674 548 669 151  77 123 100 673

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.41569e+06us (= 6415.69ms, 6.41569s)
Wall-clock time (full program): 6.46754e+06us (= 6467.54ms, 6.46754s)
Satisfaction error: 0
Number of search iterations: 1287
Number of local moves: 526 (including on plateau: 157)
Number of local minimum: 97 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 315 387 660 590 534 179 652  71 495  59 311 128 665 116  27 557  64 140  48 462 516 570 605  19 586  45
 161  87  21  47 240 152 624 508  77  79 514 645 646 115  25  52  89  66 478 653 546 573 553 579 669 602
 139 436 663 673 280 360 142 626  92 113 522 608  80 101  82  49 196  43 107 638 564 302 541 176 600 668
 456 154 158 675 515 633 662 135  88  44 411 498 100 166  23 239 126 592  50 362 664 141 524 649 567 169
 192 661  76 106 671 466 145 104 373 162 519 619  90 147 195 377 131 432 157 632 566 635 421  98 598 228
 208 654 136 129 181 672 488 666 130 150 676 556  97 194 215 414 218 520 137 450 247 238 643 425 172 185
 174 548 517  94 458 473 670 189 123 164 629 221  91 209 203 468 248 559 288 651 204 201 636 256  60 467
 650 545 523 186 416 220 159 674  96 261 599 224  51 198 138 639 175 604 283 262 274 121 562 621 149 171
 535 657 344 266 408 190  85  73 655 319 461 254  63 235 163 316 188 667 286 641 395 216 583 289 234 278
 144 543 513 167 265 244 223 255 230 637 589 237 296 297 402 390 574 476 226 347 260 197 326 299 290 374
 512 312 531 217 453 343 210 282 298 231 232 327 229 211 435 656 259 430 368 443 332 349 284 233 300 324
 205 273 627 393 271 530 364 279 338 304 307 447 222 292 354 250 313 309 640 331 168 253 384 375 285 287
 202 379 328 317 342 351 336 452 380 363 359 334 246 399 310 454 372 252 370 329 407 352 294 305 291 277
 404 241 410 339 369 361  31 365 392 341 227 418 391 267 357 398 403 371 320 348 264 325 358 275 459 367
 281 389 366 323 133 263 335 102 355 406 417 346 337 353 482 388 511 470 412 308 448 350 306 444   6 270
 340 489 178 419 249  20 440 318  40 401  58 525 460 330 381 193 345 376 276 134 434 439 472 492 555 437
 433  78 213 272 242  18 429 420 400 441  81 501 383 428 333 160 321 378 463 451 293 424 396 397 490 356
 409  95 120 405 199 504 449 465  70 438 156 484 500 532 385 122 537  55 212 117 322 494 243 552 481 455
 507  61 132 551 251  30 386  41 477 382  38 475 487 469 457 509 464 269  10 431 295 491  62 415 533 578
 219  15 474 422 258 568 114 303 506 413 180 119 580 427 497  26 521 146 560  86   8 634 148 496 485 596
 301 200 486 536 236 183 569   4 547 588 182 510 445 479 493  74 529 127 597 442 257  17  13 471 499  16
  93 518 173 426 118 607 618 617 584 614 187   9 577 480 540 527 528 124 603  72  46  75  84  37  42 502
  28 225 575  11 593 628  34 611 549 153 184  14 538 581 565 125 394 423 587  68 103 595   1 606 108 503
 658 177   2 623  29 642 594 576 561 550 112 245 612 542 609 214 544 155 109  32 630 110 207 165  67  36
 615 526   3  56 446  65   7 554 314 563 191  24 610 585 539 582 268 170 613  54 505 616  12 105 206 571
 620 151 572 558 644  99  35 111 631 625 659  33   5 648 591 622 483 647 601  57  53  83 143  22  69  39

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00536e+07us (= 10053.6ms, 10.0536s)
Satisfaction error: 2
Number of search iterations: 3014
Number of local moves: 949 (including on plateau: 447)
Number of local minimum: 275 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

Problem in row 23: 28 225 575 11 593 628 34 611 549 153 184 14 538 581 565 125 394 423 587 68 103 595 1 606 108 503 => the sum is 8802 rather than 8801
Problem in row 25: 615 526 3 56 446 65 7 554 314 563 191 24 610 585 539 582 268 170 613 54 505 616 12 105 206 571 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 298 109 557 114  73 361 586  52 642 628 409  64 622 640 552 515 630 263 171  24  27 235  89 634 497   9
  62 633 602  71  38 502 207  54 563 623 608  74 581 629 638 612 617 649 107  96   6 188  72  21   1 547
 610  13  28  90 151 511 247 290 494 631 493  84 583 601 644 574 513 639 141 560  77 588  57 113  65   4
 609 395 595  88  35 539  80  14  46 635 666  37 485 559 596 577 536 650 121  16 142 564 205  10  60 541
 496 492 274 138   2 562 174 244 101 603  25 535 486 538 476 585 447 495 472 571 159   7 149  23 102 645
 621 498 505 160 343   5 546 136 203 118  36  30 540 452 413 614 578 632 178 156 312 516  92 489 137 491
 438   3 554 404  50 555 519 269 483 204 278 117 410 582 598 313 130 648 152 509 146 528  99 332  75 405
 412 579 435  56  94 453  40  11 637 362 605 377 499 542 468 558 625 276  43 462 169 265 148  68  83 534
 401   8 420 122 338 374 170 481 272 417 297 418 466 414 523 458 537  19 246  12 223 527 218 514 477 449
 434 322 463  26 296 394 261  95 506 282 325 428 326 470 335 446  51 448 445 384 201 416  93 423 501 430
 386 478 184 456 442 388 210 373 181 611 425 393 257 363 266 237 549 490 309 450 370 183 194 455  20 131
 273 398  15 459 474 303 283 365 545 318 397 391 222 364 285 289 376 372 334 392 366 389 133 328 436 294
 209 406 415 390 281 344 385 291 197 411 293 306 287 230 354 254 339 358 378 342 433 443 399 441 367 248
 255 387 311 383 295 275 305 375 429 304 421 422 480  69 355 202 473 228 310 382 349 371 356 231 368 465
 302 288 336 286 224 426 284 239 346 258 381 360 352 316 369 351 403 444 242 279 187 380 675 439 307 327
 206 329 323 341 321 260 636 337 469 345 659 126 211 330 350 615 127 185 396 241 464 226 508 357 331 108
 208 308 252 651 292 315 652 467 347 451 240 529 192 225 233 359 379  85 507 106 437 320 550 173 333 190
 189 277 105 431 270 172 139 249 408 182 317 670 300 461 217 301 340 256 521 591 570 213 487 657 402  76
 212 167 280 568 661 135 407 457 267 271 123 264 153  59 154 168 268 671 599 179 561 219 556 158 584 660
 245 654 161 597 553 243 551 567 100 424 196 324 251 145 232 195 103  61 238 664 479 227 533 488 512  58
 262 419 191 484 616 655 619 524  81  87 180 624 253 200 299  70 140 162 600 166 530  44 566 220 593 216
 164 177 400 500 606 259 665 548 646 250 129 150  66 120  49  67  53 111 460 134 427 673 503 656 517 471
 176 565 214 353 576 520 128 676 143 186 119 590 175 198  97  32 215 234  86 669 569 115 348 544 653 620
 587 193 475 592 618  47  78 482  22  55  98 575 532 132 157 110 229  82 580 662 518 454 573 221 613 116
  79 658 672 531 525  48 504 663 147 104 440 319  33 144 124 236 112 314 643 165 647 668 572 199 163  91
 667  45  34 510 627 155 125 543 526  41 641 594  39  18  17  63  31  29 522 589 432  42 626 607 604 674

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.00541e+07us (= 10054.1ms, 10.0541s)
Satisfaction error: 2
Number of search iterations: 3137
Number of local moves: 990 (including on plateau: 377)
Number of local minimum: 258 (including on plateau: 56)
Number of resets: 2
Number of restarts: 0

Problem in column 8: 52 54 290 14 244 136 269 11 481 95 373 365 291 375 239 337 467 249 457 567 524 548 676 482 663 543 => the sum is 8802 rather than 8801
Problem in column 26: 9 547 4 541 645 491 405 534 449 430 131 294 248 465 327 108 190 76 660 58 216 471 620 116 91 674 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  13 609  65  31  27 611  64 617 628 618 670 582 111   9  38 629 226 170 269  90 636 586 568 521 283 130
 267 292  25 596 245 605 328 615 348 585 289 264  19 612 148 619 117 209 397 329 126 350 174 637 529  76
 145 573  15 576 127 570   7 604 558 253 592 578  89  10  26 649  42  57 197 577 574 597 603 648  93  41
  30 634 631 640 506 651 317 259 448 486 623 572 492   4  39 645  91  46 237 491 561  53  17  55 255  18
  84 563  96 498  59 500   8 522 514 588 525 565 560 591 180 204  71  14 168 581 484  54 598 540  43 191
 192 601  61 575 552  16 386 624   2 479 439 535 517 217 193 534 104  22  50 473  32 523 496 613  34 531
  69 537 551 536  21 594 165 463 203 465 314 548 477 546 107 511 263  49 213  52 467  47 495 633 415  60
 169 507 167 383 453 516 359 116 545 547 273 490 455   3 173 472 181 278 324 449 471 426 497 454  81  11
 279  20 400 503 417 447 268 437   5 508 195 502 419 469 105 476 344   6 470 410 450 440 451 424 134 222
 464 515 411 435 488 494 186 509 156  66  80 402 395 320 432 478   1 125 112 504 354 438 420 445 137 434
 501 373 460 442 425  51 308 325 261 459 108 392 368 390 391 266 381 307 143 369 483 388 363 375 249 223
 416 370  40 403 356 405 302 396 372 418 234 401 378 353 379  12 360 220 270 296 343 422 367 433 389 466
 139 407 297 365 427 430 414 336 406 339 398 258 382 287 377 399 376 362 239 421 351 331 346  24 357 333
 423 306 352 327 330 345 366 313 441 322 371 276 332 571 299 338 326 304 309 211 298 246 315 384 335 361
 295 355 358 238 337 310 665 260 230 311 404 664 274 207 232 321 456 303 301 316 294 251 374 387 250 408
 394 341 175 364 171 380 528 280 519 199 660 347 281 285 458 554 293 513 318 248 305 202 275 208 272 231
 254 277 334 284 164 288 541 228 212 642 385 393 262 282 319 323 221 457 559 342 349 179 286 291 520 409
 518 224 312 190 244 235 215 122 659 265 579 200 216 162 567 206 562 666 644 151 240 163 242 271 608 340
 635 114 650 133 194 120 256 641 589  44 493  88 214 136 542 300 461 443 676 201 189 229 198 128 474 653
 656 135 673 159 196 150 652 487 257 185 166 141 241 205 672 121 452 646 602 147 247 233 160 184 444 590
 527  79 412  85 512 140  83 131 243 182 132 227 183 607 225 187 657 610 556 236 671 632 102 152 587 643
 593 219 218 176 564 109 668 118 431 161 429  77 129 210 630 172 462 499 606 158 124 675 188 119 557 510
 543  67 674 667 538  94 153 106 154 436 177  78 138 622 530  58 658 647 446  86  74 146 526 101 468 614
 505 113 290  48 178  99 413 149  73  72  35 157 661 638 595  62 599 627 482 539  97 480  45 663 555 626
 620  95 584  37 616  92 569  56  23  68  75  36 625 532 655 123 553 600  98 485 481 566  33  82 669 428
  70 475 550 110 654 549 580  87 524 103 155  28 583 533 489 142 544 621 115 639 100 144 662  29  63 252

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00029e+07us (= 10002.9ms, 10.0029s)
Wall-clock time (full program): 1.00509e+07us (= 10050.9ms, 10.0509s)
Satisfaction error: 2
Number of search iterations: 2732
Number of local moves: 960 (including on plateau: 439)
Number of local minimum: 209 (including on plateau: 55)
Number of resets: 1
Number of restarts: 0

Problem in row 8: 169 507 167 383 453 516 359 116 545 547 273 490 455 3 173 472 181 278 324 449 471 426 497 454 81 11 => the sum is 8800 rather than 8801
Problem in row 22: 593 219 218 176 564 109 668 118 431 161 429 77 129 210 630 172 462 499 606 158 124 675 188 119 557 510 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 673  93 462 640 183 557  99 504 495 442 520  40 115 660  81  52 525  83 465 100 200  47 669  58 643 395
  50 276 584  73 674 480 124 633 151 627 662  33  18  92 424 165 498 628 668  80 155  44 130 644 349 539
 620 658 140  30 572 531  79 413 631 593 197 162 139 646  39 642 149 111 630  48 135 112 656 169  94 605
  55  95 526 166 437 625  71 653 567 591 143  77 109 108 527 563 440  26 603  24 156  64 585 515 423 652
  28 152 455 185 661 536 580 547 671 583 195 233 503 133 104 268 507 273 573  88  98 326 154 519 118 311
 249 101 471 148 160 287 301 484 624 608 534  36 145 131 441  75 529 381 634 216 650 245 192 647 407 105
 347 230 651 129 168 374 292 456 238 353 261  74  20 221 538 285 667 528 512 672 670  43  91 281 550 150
 211 138 587 121 190 368 201 637 243 321 186 170  85 107 612  68 636 611 638 453 255 137 208 675 600 343
 210 315 306 307 351 566 164 599 564 438 224 226 248 262 426 173 207 352 390 213 502 339 257 161 501 500
  82 174 304 354 218 458 239 342 204 231 417 325 365 199 576 264 676 639 344 205 422 537 176 222 601 227
 251 234 279 335 376 382 308 551 136 408 297 184 328 371 266 363 159 532 513 461 370 265 324 236 619 253
 214 294 212 419 132 489 396 454 383 157 179 320 412 194 310 397 451 663 357 228 336 288 436 178 589 313
 247 345 284 314 193 582 263 364 272 246 359 318 469 367 316 299 552 341 425 361 252 250 388 391 217 386
 448 220 333 295 327 460 203 338 358 428 372 405 300 378 475 360 452   3 280  41 467 355 332 377 384 410
 516 482 373 330 496 414 334 298 289 312 271 241 406 393 499 275 389 259 274 476 375 256  17 282 110 434
 399 403 470 290 348  23 493 242 542 400 487 309 244 449 544 380  45 337 171 445 369 404  42 254 278 433
 464 430 431 319 366 206 427 229 416 191 492 398 509 303  54 305 420  63 117 181 283 533 439 543 209 473
 196 362 340 411 329 188 293 175 444 450 447 556 219 401 123 402 457 322 202 561 119 505 443 521 286  49
 409 446 182 474  90 232 379 302 267 494 491 592 435 535  27 508  53 198 153 459 548 415 523  60 142 387
 466 418  96 574 323 269  31 177 392 488  56 549 623 598 223 558   2 225  97 296  16 581 483 517 128 615
 481 485 546 540 463 350 524   9 394  78 635 618  13 317  70 478 163  37  51 553   6 654 477  25 237 597
 518 590 122 657 421   1 565  59 116  89 575 569 659 588 147  46  21 472 235 530 626 180 103  67 331 514
 617 595 260  35  34 134 571 141  84  62 596 641 562 610 497  22 146 490  69 510 554 602 506 215 240   8
 560 632 114 622  86  11 664  66  76 127 125 607 648  87 645 559 356 606 172 616 144 385  14 346 468  65
 486  29 167 511 594 120 655 113  57  72  61 541 649  38 579 629  10 189 126 429 614 666 570 621 270   5
   4 604 106 522 609 158 545  15 187  12  19 577 578 613 258 665 291 432 102 555 479 568 586 277   7  32

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.51594e+06us (= 4515.94ms, 4.51594s)
Wall-clock time (full program): 4.56147e+06us (= 4561.47ms, 4.56147s)
Satisfaction error: 0
Number of search iterations: 774
Number of local moves: 511 (including on plateau: 91)
Number of local minimum: 33 (including on plateau: 11)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 650 519 463 383  95 129 402 628 253 564 112 501  85 652 531  63  82  88 514 321  31 669  33 169 196 668
  66 642 152 198 647 177 192 658 262 618 522 468  49 662 185  52  59 620 160  98 579 116 348 671 562  38
 640 119 670 451  91 305  81 542 573 405 663 557 127 651 653 114  62  54  21 587 123 469 633  99  44  67
 561 635 272  12  71 673 574 406 174 630 510 235 425  48 391 159 577 277 172 552 178 488 438  74 103 166
 369 603 361 281 236 191 648 591 638 518 527 496 215 231 157 275  87 598 100 132 140 619 199 183 158 248
 146 102  16 570 110 590 659 582 480 676  24 667 150 154  55  36 257 672  61 556 612 375 104 230 311 606
 202 643 374 666 148 227  75 586 462 464 256 656 412 549  11  79  73 392 351 636 233 145 201 419 347 194
 282  97 328 584 614 246 403 609 318 331 418 560 336 125 360 450 261 214 238 266 211 382 151 397 490 130
 408 641 385 627 133 165 388 290 660 426 271 624 309  69 312 120 270 219 639 569 117 269  96 217 390 187
 592  39 554 536 113 207 330 118 218 193 299 581 475 142 274 213 645 239 665 108 225 615 297 319 479 325
 265 393 362 216 220 155 342 310 559 644 134 409 621 188 307 431 153  10 301 637 170 339 333 539 411 352
 254   8 444 237 316 303 337 376 420 365 291 597 381 422 175 208 313 229 368 255 466 263 506 486 571 210
 259 182 341 353 322 288 284 173 276 343 674 410 304 596 279 128 250 373 446 434 334 222 404 439 247 440
 295 371 508 395 387 205 332 287 289 604 576 234 432 357 267 285 249 317 226 144 398 323 377 367 252 324
 400 458 124 350 433 184 421 346 483 245 203 147 477 241  50 491 389 481  64 545 414 456 121 566 363 349
 212  76 138 308 329 354 525 511 109 326 467 327 264 595 499  78 504 244  57 524 430 478 413 101 448 484
 550 209 424  93 399 605 314 296 126  14 302  51 378 204 455 502 306 443 445 251 470  45 482 384 530 523
 492 355 190 286 423 473 465 460 106 163 489 107  83  15 416 401 476 567 541 529  20  23 500 474 300 447
  26 366 386 507 428 472 380   2 156  22  30 396 449 338 623 553 461 497 415   1 364 278 617 358 356 320
  27 498 181  35 345 437 268  13 180  86 221  37  70 572 453 675 454 441 583 661 509 517 457 195 340 546
 161 494 232 294 646 521  32 417  53 258  58  56 243 471 580 611 516 427 535 176 563 407  42 436  46 526
 588  77 115  80 137 528 534  41 568 189 544  47 242 600  84 533 394 164 649  28 629 167 495 555 540 273
 240 131 538 186 558 654  65 122 168  34  94 224 532  17 634 625 602 452 589 223 372 485   4 664 585   3
 487 565  18 435 537 505 379   5 292 280 503 228 513 335 493 515 105  40 512  68 575   6 610  90  92 613
 200 136 593 171 520 135 260 293 370 197 315 143 607 548 551 626 601 594  89 141 179 616 283  25   9 599
 429 442 632 547 543  72 111 139 608 206 298  43 622  19   7 578 655 149  60 359 459  29 657 344 631 162

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00034e+07us (= 10003.4ms, 10.0034s)
Wall-clock time (full program): 1.00559e+07us (= 10055.9ms, 10.0559s)
Satisfaction error: 2
Number of search iterations: 2287
Number of local moves: 887 (including on plateau: 402)
Number of local minimum: 186 (including on plateau: 38)
Number of resets: 1
Number of restarts: 0

Problem in column 15: 531 185 653 391 157 55 11 360 312 274 307 175 279 267 50 499 455 416 623 453 580 84 634 493 551 7 => the sum is 8802 rather than 8801
Problem in column 26: 668 38 67 166 248 606 194 130 187 325 352 210 440 324 349 484 523 447 320 546 526 273 3 613 599 162 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   1 174 268 629 637 647 359 163 295 135 557 624 614 221 623  22 636 413 257 500 130  29 289   2 559  17
  31   7 254  27 603 654 590 618  19 153  43 651 561 164 648  37 201   3 122 574 630 656 259 662 611  23
  57  77  71 622 619 595 414  30  34 128 115 596 635 110 612 566 148  42 356 546 167 534 127 368 577 655
 571 104 384  13 613  32 555 533  20 126  51 576 498 195 517 645 615   5 144 562 585 544  45 542 298  28
 594 230  88 649   8 573 556 143  59  65 131 530 553  26 605 626 589 116  91 479 532  97 489 425 503  44
 550 162  61 541 578  10 433 565 199  15  90 601 609   9 411 438 564 281 118 526  62 469 114 330 547 518
 598 492 318 466 458 496  14 552 187  87 222 504 475  72 380 491 490 250  82  24 106 604 440 512   4 477
 514 485  98 495 117 470  99  21 197  46 462 427 539  85 554 403 452 202  18 531 456 527 120 509 486 488
 481 442 241 449 521 460 444  64 320  41 341 100 436 400 389 296  63  86 192 280 494 476 484 317 483 501
 374 423  60 357  33 522 447 274 208 278 482 497 459 256 371 467 432 179 190 451 465 361  11 294 457 453
 297 363 391 536 520  84 215 450 243 407 263  16 383 366 367 439 287 428 169 454 186 499 327 307 387 417
 310 379 300 455 446   6 372 293 223 415 464 435 224 431 434 340 358 393 328 445 227 392 402  25 326 378
 314 405 426 309 332 344 349 419 335 348 301 388 421 325 397 302 285  80 382 260 346 329 412 305 375 312
 336 430 398 324 396 448 362 365 331 303 395 401 275 286 352 240 364 248 247 306 338 290 337 333 373 323
 315 399 515 249 377 394 288 535 416 339 266 386 282 408 369 347 246 284 471 262 277 322 251 196 316 291
 313 233 513 244 161 203 540 319 321 581 616 237 252 376 345 370 194 507 351 253 236 311 480 409 271 165
 273 292 422 235 264 354 606 487 506 660 242 209 342 304 105 149 676 502 404 269 410 206 308 219 172 185
 272 258 628  93 334 200 265 232 607 478 207 245 217 210 214 178 218 670 429 418 646 121 592 261 588 220
 145 147 570 226 228 171 420 663 508 653 158 239 193 525 225 183 343 205 505 229 443 182 551 582 276 231
 170 523 641 181 108 204 180 211 580 668 634 168 134 621 279 141 238 472 493 667 129 146 620 154 156 283
 191 664 463 159 213 659 102 543 569 591 642 166 216 632 133 103 101 516 672  50 385 155 537  58 212  69
 652 666 583 119 270 350 360 173 353 560 189 184  54 468 177 152 650 568 669  75 188 675 267 151 137 111
 124 157 631 658 109 138 107 112 587 299 113 390 142 640  68  76 424 633 406  52 643 132 673 558 255 674
 140 538 176  74 198 175 528 136 437 510 593 123 150 511  35 661  95 567 572  78  83 575 519 617  39 671
 579  94 234 644  48 139  36 355 608 474 586  70  81 563 125 529  79 627 584 461  89  96  92 625 381 602
 599 657  67  47 610 473 160 545 639 441 638  38  56 597  66 600  53 524 549  49 548  73  55  40  12 665

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.0133e+06us (= 6013.3ms, 6.0133s)
Wall-clock time (full program): 6.0648e+06us (= 6064.8ms, 6.0648s)
Satisfaction error: 0
Number of search iterations: 1166
Number of local moves: 670 (including on plateau: 248)
Number of local minimum: 71 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 378 479  54 132 609 443 548 128 667  38 100 127 673 107 604 388 665 666 638  72 571  61 368 120  42 123
  77 527 122 617 611 446  48 517 109 608 656 104 559 607  65  73 341 662 106 136 572  66 602  28 487  55
 126 671 356 538 474 391  60 111 529  37 594  70 467 610 508 428 520  52 115 135 649 670 385  24  75 206
 166 536  74 283 619 592  69 659  64 116 595  58 117 259 675 273 601  81 281 577 473 101 635 631  50 216
 146 652 196 179 668 612 251 654 167 172 655 199 110 301 176 148 506 669 445  86 543 140 645 170  49 262
 159 376 162 215 495 483 431  98 130 211 530 499 164 249 676 614 173 528 640  35 672 241 133 147 149 591
 457 310 139 169 540 630 643  39 171 151 583 620 218 651  40 639 209  92 153 489 470 188 268 295 186 451
 329 292 220 213 462 477 168 674 160 236 195 355 263 343  76 597 267 144 663 533 563 274 119 309 254 615
 646 294 150 225 560 287 401 297 644 272 232 285 593 204 279 625 265 191 189 200 461 163 143 438 154 603
 458 395 253 306 413 513 510 112 252 371 174 158 192 354 155 278 320 202 293 661 476 576 157 275 305 642
 634 201 315 304 426 452 284 269 190 575 348 314 226 317 323 237 271 400 217 333 321 574 183 258 243 586
 299 325 381 399 432 372 177 657 369 255 156 324 308 330 233 264 207 298 433 276 621 418 340 419 197 311
 327 345 525 336 291 650 319 290 261 387 344 240 250 185 247 322 380 383 362 245 346 300 248 484 454 280
 282 288 402 152 328 334 463 361 366 365 393 384 332 422 302 331 475  89 335 339 492 425 270 234 286 351
 277  51 357 326 358 303 367 318 347  87 455 599 338 307 469 435  63 229 212 550 370 511 394 349 337 392
  68 230 121  95 181 415 382 374 342 490 436 256 441 546 456 379 182 373 459 464 208 404 468  82 414 535
 416 235 193 397 131 205 453 377 353 570 364 410 493 257 350 411 412 194 246 408 184 375  27 485 465 390
 471  67 360 429 138 231 557 396   3 406 472 239 478 434 524 448 437 108 427 118 142 423 539 403 522  29
 102  91 501 491 198 165 523 125 450 494 568 496 421 504 544 420  12 526 129  30  18 562  11 498 505 417
 203  26 430 553 214 210 359 514 587 509 178  31 564  83 585  96 578 549 440  25 242 389 449 260 500 227
 219 582 466 145  56  21 589  14 497 502 352 552 444  57 573  34 515 503  97 238  20 566 541 486 545 187
 531  88 547 442 386 137   2 409 551   9 124 180  16 405 224 480 244 637 512 565  41  53 605 542 624 447
 363 596 613  46   5  36   7 628 460 482  99 598 516 488 584  19 519 537  17 507  93 629  79 561   6 313
 398 606 556 618 161  62 567 407 579 558  59 580  10 134  47  85 532  22 627 623  80  43 521  13 647 266
 616 316 648 555  44 221 105  84 114 588  94 569 600 424  71 296   4  33 590 534 141  23 581 658 664 228
 653 222 660 636   1 113 518 289 439 312  45 554   8 223  15 481 103 633 175 622  32 626  90 632 641  78

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00538e+07us (= 10053.8ms, 10.0538s)
Satisfaction error: 1
Number of search iterations: 2405
Number of local moves: 973 (including on plateau: 355)
Number of local minimum: 201 (including on plateau: 39)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 378 527 356 283 668 483 643 674 644 371 348 324 250 422 469 379 412 108 129 25 20 53 79 13 664 78 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 115 544 137 602 181  50 257 233 603 653 635 106  17  15 562 623 174 585 629 609 102 646 135 177 364  47
 333 101  20 434 627  84  57  85 549 590 363 217 523  82 540 624  77 182 203 558 158 612 625 308 245 604
  72  62 267 148 632 151 486 166 159 618 175   1 614 563 575 299 110 388 551 512   5 557 537 297 480 376
 503 552  21  10 479 498 250  22 532 536 169  42 621 570 488 597  90 573 529 109  18 489   7 124 494 478
 171 550  76 421 131 559  86  61 313 432  63 263 584 572 427 507 103 569 564  30  59 382 626 518 242 492
 213 521 178  32 643 330 143 284 326 534  16  55 446 535 543 598  54 389 461 221  11 591 373 517 447 340
 437 495  95 466 579 231  46 207  83 487 126 201 555 336 451 441   9 439 531  25  49 548 541 470 456 497
 390  93 443  38 269  43 499  64 553 510  14 514 515 426 435 469 457 290   2 138 227 445 578 401 484 504
 104 383 474 156 533 513 255 116 448 417 493 428 465 458 154 332 351 210 519  66  37 520 323 431 228 387
  96 368 444 477 567 141 418 202 259 464 133 349 381 413 455 500 433 380 454 374 280  12 405  23 311 462
 485 394 240   8 425 565  33 139 128 247 111 370 502 452 424 491 402 414 309 371 277 398 420 301 379 516
 391 331 430 358 264 357 274 191  74 524 243 327 468 248 184 467 325 272 324 352 303 476 406 347 393 472
 410 209 220 359 409 276 288 355 422 508 346 199 350 403 397 130 463 348 320 377 230 343 179 384 453 423
 366 367 353 475 302 121 292 375 365 261 294 369 270 310 356 334 415 399 511 268 361 392 273 165 396 411
 338 237 315 360 589 316 378 442 285 344 226 385 241 295 287 328 641 337 304 275 400 341 167 372 298 300
 132 342 616 289 183 278 554 312 547 279 238 225 354 254 607 113 218 256 282 527 449 322 253 211 666 293
 239 160 223 668 260 204 450 574 345 170 419 321 185 291 651 180 319 440 335 214 620 189 249 206 234 655
 195 146 471 317 318 208 522 473 283 232 506 168 258 586 561 188 192 271 205 407 496 251 644  60 657 186
 600 262 530 246 127 611 539 593 482 142 194 306  41 395 305 163 161 252 613 187 628 314 219 542 200 149
 545 236 525 286 162 460 659 576 636 281 639 581 157 296  68  19 648 120 105 674 566  26 216  39 129 152
 605 212 669 617 125 568 429 412 362 176 675 667  89  73  36 147 662 134  40 672 408  80 114 665 107  58
 235 265 153 438 664 215 136 656  48 229 386 658  71  78  69 193 608  91 118 459 601 633 647 436 490 224
 583  87 546 339 112 622 654 266 571 119 526 587 196 117  35 173 197 122 244 619 673  98 634 582  65  34
 538 645 649 505  45 501  97 661  75   6 560 404 145 222  24 190 615 638 144 631 596  51  94 637  28 100
  99 640 556 172 108 592 329 676 198  13 588 577 123 140 164 642 483 650  88  70 652  81  92 509 528  31
 606 599 150 580  67 307 670 660 155  29 663 481 630 671   3  53 594  52 416  56 595   4  44  79  27 610

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.0054e+07us (= 10054ms, 10.054s)
Satisfaction error: 2
Number of search iterations: 2276
Number of local moves: 957 (including on plateau: 403)
Number of local minimum: 150 (including on plateau: 38)
Number of resets: 1
Number of restarts: 0

Problem in row 16: 132 342 616 289 183 278 554 312 547 279 238 225 354 254 607 113 218 256 282 527 449 322 253 211 666 293 => the sum is 8800 rather than 8801
Problem in row 21: 605 212 669 617 125 568 429 412 362 176 675 667 89 73 36 147 662 134 40 672 408 80 114 665 107 58 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 676 108  76  57 465  61  43 629 415 422 619 110  44 614  87  89 431 186 485 370 595 190 667 139 582 641
 675 668  59 120 380  71 664 233 127 119 121  65 478 611 666  37  45 416 626 344 592 673 222  64 645  80
 674 621 630 278 631 622 372 655  78  93 391 671  58 253 162  98  79 551 528 176 164 191  95  31 550 149
  90 160 116 568 650 460  35 555 585 100  86  46  27 612 604 217 113 444 599 202 545 209 620  62 527 569
 171 633  50 658 672  30 131 572 272  99  40 665  84 643 109  26 588  91 632 126 640 660  88 104 365 652
 129 147  94 213 488 661  82 157 205 670 339 204 565 231 653 200  42 289 437 397 663 260 141 659 616 259
 311 508 183 146 243 170 401 656 497 179 212  38 407 144  85 207 467 669 553 657 199 473 197 115 513 571
 153 132 301  67 105 500 454 558 636 277 349 307 576 237 158  77 635 438 430 236 624 128 326 262 634 201
 167 187 280 404 638 506 177 319 654 174 312 251 649 353 328 535 101 374 419 238 189 302 258 322 484 180
 402 305 196 159 228 295 584 499 324 446 507 343 163 175 332 235 299 648 613 198 423 245 333 252 340 257
 284 169 662 165 393 520 511 561 270 414 601 421 303 178 215 247 269 590 424 224 244 195 124 297 288 232
 223 410 320 135 390 261 229 298 309 227 409 352 448 321 405 283 426 290 627 531 418 316 317 246 218 392
 292 342 276 265 304 310 489 306 445 210 566 439 266 368 239 334 230 250 411 464 286 347 150 406 381 425
 206 314 256 331 248 364 504 387 335 408 285 294 242 338 398 208 450 346 264 361 459 366 356 330 363 388
 538 470 474  69 329 271 337 123 498 300 443 279 429 385 341 383 539 451 220  15 384 203 263 436 296 325
 194 597 389 255 399 475 293 481 373 249 394 274 483 323 462 376 152 375 136  39 417 291 345 282 432 315
 192 287 379 476 468 241 463  97 554  56 442 413 357 453 477 598  33 118 273  18 137 452 587 360 358 512
 122 594 503 268 427 564 281 382 211 327  60 469 114 542 240 563 395   9 138 466 142 480 396 491 168 449
 533 371 556 577 457  49 510   1  28 623 351 581 117  22 552 377  24 267   2 472 148 318 526 487 350 502
 567 441 386 516  29 140  17 275 524 378 308 583 367 362 400 517 543 103 102  83 490 509 493 548  14 106
 428 403 547 522  13   3 313  32 471 434 420 534 182 573  54 521 514 544 151 440  11  53 492 606 107 433
 486  68 143 494 355 336  20 447  51 530 586 605 578 188 496 523 184 495  73 574 234  36 580 461 254   4
 412 593 540 537  25 130 559 359 541 549 161 133 479 570 155 455 603  72  19 435  34 646  16 602  10 166
 610  52 369 505  70 608 625 156  63 226   6 532 642 112 609 562 557 458  66 589  96 639 519  48  74   8
 185 216 560 501 173 628 596  41 181 644 579 145 125  21  55 482 546 134 354 617  92 607  75 600   7 637
  81   5 456 515 221 525 111  23 154 647 214  47 618 172 518 651 536 193 219 529 575  12 615 591 225 348

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.0053e+07us (= 10053ms, 10.053s)
Satisfaction error: 2
Number of search iterations: 3049
Number of local moves: 1203 (including on plateau: 608)
Number of local minimum: 242 (including on plateau: 78)
Number of resets: 1
Number of restarts: 0

Problem in column 8: 629 233 655 555 572 157 656 558 319 499 561 298 306 387 123 481 97 382 1 275 32 447 359 156 41 23 => the sum is 8802 rather than 8801
Problem in column 15: 87 666 162 604 109 653 85 158 328 332 215 405 239 398 341 462 477 240 552 400 54 496 155 609 55 518 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 348  13 121  59  96 642  14 533  32 105  10 504 671  49 612 538 637 469 597 394  53 603 587 651  58 405
 500 386 626  75  44 670 617 547  18  73 604 663 676 110  77 108 107  60  28 659 527  67 567 530 401  61
 364  21 672 589  91 529 551 573  37  22  57 559 539 641 669 536 150  46 112 468 238 156 605 389  83 104
 667 129 131 372 130 664  65 652 162  39  94 615 490 610 120 523  54  92 171 657 206  29 184 630 665 650
 625  80 157 126 373 621 197 159  87  82 326 607 577 540  90 636 397 218 116 524  81 666 578 674 137 127
 510 186 166 168 511 367 181 172 169  95 123 220 673 532 178 128 167 609 158 649 643 393 564 492 562 185
 506 134 138 204 223 601 660 599 193 143 249 256 572 541 195 585 593 355 216 271 122 526 264 366 175 114
 623 183 221 409 113 471 234 298 182 207 503 154 570 299 290 646 136 241 360 521 170 308 588 528 261 285
 235 144 292 384 273 516 248 480 675 160 233 244 145 289 252 581 309 618 226 481 227 653 199 550 263 124
 196 215 318 563 176 502 280 594 266 534 251 295 282 239 210 276 354 543 325 351 375 381 267 473 322 213
 228 294 188 254 200 411 317 514 191 340 662 291 262 452 153 560 269 385 198 512 222 420 202 668 349 259
 224 311 287 382 312 519 217 353 474 392 333 359 225 304 319 329 328 330 315 455 346 310 314 446 293 324
 331 321 305 426 274 320 281 357 323 390 400 379 395 307 332 272 303 284 313 301 283 582 286 399 358 279
 350 425 278 341 369 345 418 337 139 343 327 336 342 391 408 404 344 334 361 416 253 432 243 410  20 435
 380  69 338 347 376 179 454 448 407 265 255 352 101 444 300 365 316 438 177 371 402 412 423 406 362 414
 374 472 260 192 288 268 443 493 424 486 368 236 496 466 237 363 440 245 306 370 142 258 115 205 378 476
 433 437 388 246 477 118 460 240 277 247 484 383 450 296 491 451 111 445 415 212 430 117 462 230  12 489
  98 459  45  64 436 146 525 494 232 396 428 427 463 456 398 434 439 441 339 214 422 387 413 187 442  16
 133 467 421 297 497 148 544   9 417 453 507 566  63   3 478  78 465 163 449 164 575 403 509  71 464 457
 173 515 591 546 447 135  26 161 501 537 106 508  47 219 553  66 499  43 495 242 475 229 520 149 487 531
 152 552 616 555 549 270 600  93 535 554 458   5  23  74 513 165 579  38 431 141  19 377 498 100 419 485
 103 614 596 275   2  52 461 257 548 488 590 580 250 608  79  70 592 557 231  68 483 102  31 140 542 482
 505 518 517   6 598  50 583  89 633 558  72  30  24 209  88 335 569 180 611  27 629 622 194  48 561 545
 189 647 429 628 627 174  62 155 584 640 595  99 203  76 613  86  17 479 565  97 602  35   4   8 556 631
  84 571  56 648 658  41 356 109 639 619 190   1 211 635 522 119 586 620 654  34 574 125  33  36  25 655
 470 638 644 645 661  42   7  85 656 634 576 132  51  11 624 147  40 568 632 201 302 208 151  15 606  55

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00539e+07us (= 10053.9ms, 10.0539s)
Satisfaction error: 2
Number of search iterations: 2319
Number of local moves: 1033 (including on plateau: 421)
Number of local minimum: 200 (including on plateau: 67)
Number of resets: 1
Number of restarts: 0

Problem in column 10: 105 73 22 39 82 95 143 207 160 534 340 392 390 343 265 486 247 396 453 537 554 488 558 640 619 634 => the sum is 8802 rather than 8801
Problem in column 20: 394 659 468 657 524 649 271 521 481 351 512 455 301 416 371 370 212 214 164 242 141 68 27 97 34 201 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 660  96 283 619 611  43 107 467  89 170 523 623 672 474 595 142 638 515 206  44  91 432 521  60  81  39
 527 637  74 664  75 367 151 357 124 143 531 509 496  99 490 176 546  90 656  50  66 398 558 649  73 295
  94 666  65 551 116 115 578 160 148 134 668 622  72 538 631 327 161 197 665  55 604 596 135 606 172 125
 647 441  45 628  88 105 633 673 232 368  71 652  84 179 308 418 635 636 420  49 215 471 442  42 154 165
 491 137 163 567 651  70  85 112 189 667 670 639 129 186 486 204 185  95 661 104  87 650 600  76 228 669
 643  79 344 139  56 675 657 642 132  93 662 574 203 141 447 212 519 103 395 526 321 562 217 182 195  82
 193 601 285 247 138  51 599 213 207 585 157 267 568 557 276 100 225 584 648 618 271 484  61 238 459 169
 265 528 522 645 268 184 111 587 655 162 328 280 235  80 387 237 512 598 676 152 187 274 243 302 216 167
 533 219 654 130 140 671 231 663 646 264 254 202 366 159 258 191 220 458 294 290 262 221 155 609 553 158
 177 591 147 199 464 380 255 354 468 252 253 391 249 233 634 547 659 248 353 401 164 423 244 120 297 298
 323 341 581 273 180 229 372 188 356 338 242 602 303 178 506 653 318 282 181 412 304 296 316 352 311 364
 257 331 369 173 347 448 456 422 424 288 334 310 149 371 317 431 400 658 286 200 343 240 351 239 382 275
 198 346 269 374 260 145 430 218 224 589 329 259 375 435 355 626 208 326 394 443 292 309 674  97 390 236
 251 342  34 211 339 340 320 428 279 301 261 266 359 337 377 358 270 583 345 559 402 414 278 477 348 322
 501 315 241 404 429 313 363 336 461 281 455  21 370 349 168 312 330 408 230 293 386  67 440 483 360 485
 284 449 119 332  19 529 500 289 502 406 407 410 299 306 291   2 427 210 361 397 384 457 444 272 324 381
  53  68 388 376 389 426 532 385 417  63 403 450  64 425 226 463  25 437 114 445 489 136 548 439 415 625
 396 438 194 305 543 518 314 470 335 516 492 494 333 465 108 113 409   1 495 287  24 201 530   8 434 378
 379 222 469  16 171 504 460  92 190 610 350 419 453 540 133 510 454  78  13 451 493 214 452 174 555 399
 572 373 473 393 472 481  12 505 488 416 511 127 569  41  36 250 475 256  58  38 616   6 392 433 196 612
 554  35 514 525 640  15 539 246 556 183  52  83 550 520 109 620 117 234  31 542  29 573  59 571 499 405
 508 536 479   3 641 517  40  23 175 577 487   7 110 535 307 593  32 476 128 150 503   4 362 613 446 549
  46 319 413  62 383 365 144 121  26  57  98 277 566 541 590 411  33 544 325 579 545 192 615 513 570 466
 101 507 565 524 594 153 106  69 300 146 166 118 607 480 588  10 436   9 123 478 482 580 102 597 462 498
  22 156 614  20 560 575 245 576 592 629  86 122  17  27 131 263 537 223 209 630 624  37  14 644 627 621
 126  28 497 421 227 582 561 205 586 563  11  77 603 605  47 632  30 552 534 608 617 564  48   5  54  18

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.48455e+06us (= 6484.55ms, 6.48455s)
Wall-clock time (full program): 6.53641e+06us (= 6536.41ms, 6.53641s)
Satisfaction error: 0
Number of search iterations: 1458
Number of local moves: 692 (including on plateau: 299)
Number of local minimum: 113 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 418 629  92 671 550 584 657 154 120 136  49 575 134 129  69  85 240 141 642  48 628 522 655 431  71 371
 676 624  74 608 574 106  50 668  42 164  46 101 521 156 127 155 615 632 504  63  58 555  60 586 448 588
 565 507 404 589 107 302 567 205 158 108 204 132 139  53  56  90 630 644 430 673  66 558  75 293 598 648
 483 599 111 627 552  82  51  76 102 428 153 152 659  59 570 183 109 226 603 454  70 592 496 622 135 607
 554 510 198 389 319 243 471  89 582 669 557 110 189 170 163  54  81 112 580 258 561 675  68 437  95 667
 305 530 131 543 351 665 123 268 128 331 148 536 267 161 151 255 172 143 666  80 672 664 271 593  52 595
 227 485 298 194 502 501 631 506 197 219 157 124 581 314 144 248 254  94 585 391 188 468 121 569 202 601
 613 380 196 578 559 328 234 579 149 660 304 272 167 173 301 166 249  91 600 266  96 191 306 546 256 541
 312 620 290 146 606 162 138 542 539 639 228 214 317 168 171 224 269 674 366 262 261 282 208 614 206 343
 661 481 213 117 464 287 323 332 145 621 246 292 313 294 270 231 656 160 617 178 187 274 232 322 345 540
 300 526 307 193 384 349 185 279 403 523 296 406 233 295 324 365 284 297 451 103 576 199 211 489 263 560
 238 456 442 247 385 311 369 652 353 342 207 176 443 334 388 361 396 377 338 303 350 180 235 330 242 346
 375 434 310 299 257 357 335 360 114 466 397 337 373 280 253 281 277 419 372 264 289 347 465 439 291 410
 315 308 382 394 368 174 450 381 476 344 433 446 326 201 386 367 259 325  78 374 229 452 333 327 318 355
 435  87 376 467 460 181 422 370  24 487 237 426  44 407 362 239 427 411 348 265 336 359 473 492 457 209
  65 356 525 275 118 147 463 425 309 354 417 340 383 432 505 408 392 491 405 421 494  31 140 175 329 401
 438 126 414 400 482 216 285 429 470 278   8 393 441 387 508 339  11 415  23 528 497 472 533 283 321 104
  33 223 245 488 566 583 399 412 221 398 498   2 458 509 423 244 551 455 179 379 436  18 409  35 447 190
 512  84 477 475 159 474 619  37 500 116 517 486 420 459 553 534 484 230  40 478 364  61   4 125 390 203
 122 182 445  83 218 590 105 424 511  72 577 556  67 480 413 531 461 515 142  36 495 637 453 273 358  55
 516 113 449  98 169  20 378 440 513  97 645 286 529 395 241 490 532 503  64 518 537 100 535 150 462  21
 186  19 548  73 251 571   6 499 469 236 115 527 564 638 591 479  25 519 192 520 402  93 616  86 547  29
  41  99 612  39  13 605 514 288 416 130 493  30 545 524 587 562 444 572 195 654 200 217   7 215 634 165
 184  43   3 538   9 320 649  15 647 549 670 640  88 597  12 653 341  26  47 625 544  34 658 220 651  38
 210 352 626 225 316 611  14 119 609 222 636 596 573 618 623 594   1 250  57 650   5 177 602  16  22  77
  17  28 633  45  62  32 363 252 604 212 563 646  27 568 610 663 641  79 276  10 260 643 635 133 662 137

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00534e+07us (= 10053.4ms, 10.0534s)
Satisfaction error: 2
Number of search iterations: 2843
Number of local moves: 1047 (including on plateau: 448)
Number of local minimum: 231 (including on plateau: 49)
Number of resets: 1
Number of restarts: 0

Problem in column 19: 642 504 430 603 580 666 585 600 366 617 451 338 372 78 348 405 23 179 40 142 64 192 195 47 57 276 => the sum is 8800 rather than 8801
Problem in column 25: 71 448 598 135 95 52 202 256 206 345 263 242 291 318 457 329 321 447 390 358 462 547 634 651 22 662 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 533 670  42 568 616  39  87 660  93 254 410 599 264 636  34 341  80 478 138  61 523 578 561 429  71  36
  99 351  81 255 571 211  79 453  37 148 167 521 466 145  45 556  64 309 140 652 606 593 420 671 488 673
  91 338 614 117 404 221  12 649 112  44 383 644  38 130 115 569 626 155 597 508 122 449 502 491 624 246
  25  78  27 378 380 399  51 464 123 146 552 657 121 482 111 661  52 421 554 515 618 586 665 390  41 304
 647 498 627 196 669 422 257 585 177  95 650 528  85 457  67 200  35 612 607 166 158  31 570 210  57 195
 163 188 107 162 553 676 637 424 173  68 510 125 224 359 212 658 192 172 186  89 667 549 529 559 113 506
  94  58  69 147 198 362 625 576 128 189 675 144 193 600 231 659 139 509 465 663 339 619 635 217 151 116
 492  17 290 646 185 406 228  19 337 463 603 239  77 259 386  76 303 499 314 601 313 493 579 129 236 611
 272 223 293 179 190 520 379 302 655 311 664 256 182 242 229 168 389 184 587 135 447 525 350 577 292 250
 251 580 388 278 291 645 197 519 225 648 240  84 149 541 321 237 666 557 169 203 381 358 274 289 238  72
 191 319 214 227 262 526 361 456 433 205 340 176 288 537 330 241 480 279 152 326 263 323 441 308 451 672
 412 376 317 143 345 335 275 415 539 208 150  62 620 524 343 260 332 542 235 232 267 555 106 403 630 175
 137 297 269  59 417 299 202 348 374 316 320 281 608 431 273 507 301 496 377 300 357 398 372 504 209 349
 120 322 366 656 213 118 595 268 368 298 546 336 632 277 363 282 329 347 315 164 334 402 352 266 245 287
 409 370 461 416 253 344 356 284  47 430 305  20 369 427 439 367 450 458 364 331 385 248 401 411 428  28
 342 460 418 414 413 100 425 581 312 473 365 674  53  56 405 397 443 165 276 307 438  23 360 171 247 483
 325 475 375 393 373 142 446 285 445 333 194 476 538 103 477 384 392 318 628 296  73  11 408 426  15 470
 346 283 531 558 249 134 485 178 355 444  55 610 547 280  21 474  86   2 574 395 527  98 110 423 535 501
 440 435 490 566 511 394  16   4 479 306  10 467  26 419 534 261 434 104  29 487 226 517 101 654 605 286
 489 271 514 530 494 244   1 160 436 567  97 638 596 201 432 471 516 442 187  13 540 156 161 486 126  33
 562 495 454 472  82 400 153 484 544 481  43  50 594 252 513  66 294 131   8 469 371 132  88 407 622 634
 503 452 560 124 641  24 613  22 609 505  54 623   3 180 550  30 234   6 572 324 353 354 230 127 590 518
 584 133 582  32 105 218 564 174 448 592 382  65 615 455 536  90 204 651 642 668  14 159 183 102 543  60
 589 631   5  92   9 588 545 157 565 573 243 270 640  75 633 532 500 181  49 219 295 170  96  18 575 551
  46 154 598 591 119 522 583 220 459 497 222 216 563 468 548 108 643 396 199 462  48 391  74  63   7 604
 639 327 109 602 258 512 629 114 328 207 621  40 310 265 653 206 617 387 437 215 136  83 233  70 662 141

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.67922e+06us (= 8679.22ms, 8.67922s)
Wall-clock time (full program): 8.73158e+06us (= 8731.58ms, 8.73158s)
Satisfaction error: 0
Number of search iterations: 1887
Number of local moves: 784 (including on plateau: 265)
Number of local minimum: 140 (including on plateau: 32)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  27 580 496 168 100 115 278  54 297  94 329 652  77 566 635 269 230 564 632 253 639 543 308 176 666  53
 520  26 595  36  24   5 266 627 586 459 106 659  20 656 662  15 190 670 634 116 648 246 186 188  48 613
 255  33   8 143  81 519 193 518 560  62 448 507  21 174 506 574  52 614 638  57 572 591 403 113 615 544
 210 554 579 306 289 102 127 103 511  70  32 399  31 156 588 596  90 653 438   3 515 605 521 192 603 528
 478 633 577 179 137 578 108 286  42 131  28 655  91 301 252 593 468 581 284  73 510 446 268 125 533 444
 128 558 617   1 590 135 486 563 462 129  67 456  69 120 204 493 498 529 549  66   9 502 485  39 562 484
 296 522 534 199 601 589 140 513 491  65 550 386 483 261 173  25  63 508 345 328 548   7 463 473 159  79
 200 516 559 215 324 505   6 441 551 148 500 406 465  60 153 475  95 367 497 319 424  14 353 454 354 400
 477 368 545 222 460 362  11 440 418 149 532 453 469   2 433 480 413  37 394 194 411 358 423  61 158 531
  85 404 525 154 452 391 420 290 455 489 524 470 409  16  55 299 382 346 412 133 401  34 514 378 348 415
  83 395 130 206 383 416  12 436 457 430 422 428 380  56  58 350 482 392 434 305 447 387 426 425 495 366
 471 397  96 141 450 442 201 384 421 451 244 419 407 365 364 340 298 349 414 181 461 369 310 410  35 381
 374 334 356 352 339 304 370 237 499 303 318 449 417 333 300 326 287 225 275 285 274 335 636 377 262 234
 147 316 270 385 276 232 393 264 226 307 343 437 445 504 228 376 184 375 280 344 292 665 675 239 315 283
 363 396 233 429 240 281 327 325 427 272 260 342 359 294 599 243 170 203 302 443 337 526 608 317 256 249
 512 361 312 488 295 212 458 267 309 323 530 373 166 257 509 565 338 291 208 432 263 330 258 311 216 217
 663 163 248 314 279 227 609 355 332 336 231 379 219 501 610 183 320 331 180 466 182 151 570 557 245 150
 517 247 132 435 214 242 600 172 673 360 313 218 321 623 198 259 654 439 213 357 236 175 223 293 476 211
 503 322 126 540 109 114 612  49 107 553 288 235 251 542 405 643 277 123 647 592  84 625  68 631 134 221
 640 250 241 492 271 282 619 220 164 535 602 160 121 351  50 167 628 185  59 630 139 389  78 657 676 195
 523  97 110 667 207 265 494 641 177 618  99  74 556 398 196  88 205 567  47 481 585 104 672 552 209 169
 197 238 229 479 621 171 467 146 144 202 161  41 629 371 390 119 189  98 624 537 587 539 165 674 122 661
 431 273  92 372  86 573 464 136 224 607 547  93 616 527  17 644 651  43  51 668  22  46  44 583 341 650
 138 582 402 645 664 555 576 571  71 620 124  87 606 626 584  75 472  76  38 594 152 162  30 112  82 157
  89 191 671 611 660 538  18 658 187 598 642   4 604  72 145  29 597 155 142 536  23 541 101 347 254 388
 474  45 118 622 649 646 546 105  10 490 561  19 569 669 487 575 568  80  64 408  40 111  13 117 637 178

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00536e+07us (= 10053.6ms, 10.0536s)
Satisfaction error: 1
Number of search iterations: 2231
Number of local moves: 637 (including on plateau: 166)
Number of local minimum: 178 (including on plateau: 17)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 53 48 113 521 446 9 328 497 37 382 350 364 333 445 342 530 336 673 49 619 265 621 372 402 191 474 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 626 223 124 652 663 199 584 335   7 615  53 138 380 629  54 573 630 658 133 656 117  30  84  60 576   2
  96 176  35  82 518  46 616  72 536  32 582  11 103 603  10 530 610 404 570 662 410 623  15 439 473 547
  75 129 525  83 517 141  99  67 609 669  23 480  24 574 139 600 613 578   5 612 427 639   4  39 512 618
  16 506 598 569 643 324 504  36  17  18  89  93  86 651 589 519 210 579 563 599 102 488 329   8 106 559
 456  45  85 527   6  29 538 127 560 580  33 587  65 510  12 628 481 516 546 566 263 105 146 365 405 620
 152 545 537 381 543 467 492  79 667 308 553  74 130 482 144 511 523 503 501 425   3 441 154 107   1  78
 505 463  38  87 487  34 201  95 636 529 422 592  47 464 544 526 509 561 444  21  25 565 168 137 179 522
 123 597 622 575 484  52 470 227 498 508 581 378  69 426  90 388 184 451 149 502  27 555 147 113 135 450
 297 334 292 542 446 167 500  66 442 140 474 436 320 558 454 437 495  26  64 166 188 438 226 528 160 605
 476 361 344 418  55 409 341 185 145 250 489 434 401 359 253 298 419  41  98 394 406 447 271 479 477 551
 494 246 535 424  62 416 659 398 175 393 299 346 281 445 415 397 460 354 111 348 235  37 213 376 389 293
 305 309 384  68 395 540 303 231 285 319 171 279 372 350 301 443 461 572 432 387 497 295 109 218 358 417
 101 435 383 455 552 208 431 349 453 399 265 371 343 260 164 283 377 356 256 261 392 369 262 352 373 351
 412 241 304 339 382 390 290 272 428 413 362 216 385 277 194 402 215 608 206 421 478 375 327 420 195 249
 323 220 214 312 366 355 251 267 340 458 315 325 345 363 367 331 550 306 269 313 156 342 364 549 513 287
 219 212 233 302 307 211 353 674 242 322 347 289 311 280 174 136 228 368 275 469 621 594 403 531 370 330
 192 333 278 485 336 337 264 357 462 396 276 238 286 400 332 321 557 182 318 244 632 234 635 229 209 268
 465 200 232 661 191 671 259 493 433 198 255 173 468  59 408 386 245 225 310 326 571 197 534 452 230 159
 196 374 273 202 288 564 440 676 205 222 317 258 607 153 183 224 314 270 624 151 496 207 475 423 407 252
 181  57 660 486  49 631 670 596 248 237 282 296 411 172 675 157 236 189 316 190 583 148 429 239 541 122
 577 668 132 104 134 338 128 586 193 150 204 562 556  19 483 169  92 274 649 178 291 533 590 162 490 539
 328 665 459 165 379 585 221 653 266 240 203 217 642  31 654 119  44 187 300 121 257 177 521 641 601 125
 515 110 520 645 507 619  88 243 186  76 360 120 644  61 606 143 112  20 294  71 602 126 664 666 131 672
 611 657 655 161 116 430  28 532  73 155 625 647 472  14 617  80  77 449 567  94 466 114 640 170 254  97
 646 614 180  13  91 391  50 637 100 650 588 593 554  70 491  58  51   9 638 568  42 118 457 471 673  48
 414  81 158  63 284 247  22 548 595 524 633 648 499 591 448 142 108 115 163  56 514 604 634 627  43  40

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00534e+07us (= 10053.4ms, 10.0534s)
Satisfaction error: 2
Number of search iterations: 2954
Number of local moves: 1006 (including on plateau: 334)
Number of local minimum: 252 (including on plateau: 50)
Number of resets: 2
Number of restarts: 0

Problem in column 3: 124 35 525 598 85 537 38 622 292 344 535 384 383 304 214 233 278 232 273 660 132 459 520 655 180 158 => the sum is 8800 rather than 8801
Problem in column 7: 584 616 99 504 538 492 201 470 500 341 659 303 431 290 251 353 264 259 440 670 128 221 88 28 50 22 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 593 616  68 182 233  33 546  26 637  14 656 586 609 521 560  25  17 625 589 582 602 311  37  47  22  64
 308 285 123  66  60   8 627 617 665 569 234 551 599  16 534 633  11 411 638 588 194  32  15  28 397 592
 583 646  24   7 178 152 554  99 541 467  45 642 621 181 231 640 309 110 567 558 603  30 145  46 342 480
 597 556 129 106   4 186 140  90 659 543   5 626 585  74 565 532  76 150 648 280 666 499 340 509 192  44
  34 507  95 259 138  27 528 600 515 574 547 636  96 496 159 392   3 172 575 535 385  88 167 595  58 620
 226 491 170   2  77 389 485 489 526 596 477 445 605  10 103  82 401 270 502 510  42 457  51 453 455 487
 176 427 221 218 128 294  35 529 360 396 434 365 568 561 512 451   6 187 454  70 497 414 131 490 376 501
 517 482  49 205 409 412 524  98 459 550  23 523 498 383 222 359 549 121  59 191 544 440 175 425  12 572
 437 390 557  75 354 393 335 197 163 559 476 513 486 227  21 503 369   1 209  81 312 456 287 518 363 519
 426 488 317 199 381 254 420 423 164 413 511 269 319 378   9 338 357 133 539 388 473  41 260 371 472 458
 328 299 531 203 367 374 368 346 399 504 416 492 465 506  87 216 310  63 238  29 424 421 132 452 433 398
 281 350 601 268 318 468 325 361 380 358 405 306 410 428 384 196 417 406 169 341 303  61 256 370 344 295
 264 286  20 252 352 469 379 394 415 291 446 366 330 479 223 408 272 404 448 326 322 345 332 282 460 236
 297 261 348 377 339 436 315 372 373 177 184 533 508 323 257 242 349 337 356 288 263 478 305 314 331 438
 239 214 375 463 351 255 441 336 249 279 327 266 247 229 267 483 442 615 418 250 232 598 364 265 304 292
 258 435 248 484 402 290 316 329 347 274 400 444 277 275 262 243 300 271 471 241 251 355 470 246 619 293
 253 122 429 590 244 474 307 200 461 387 283 217 430 301 343 155 618 516 189 632 334 313 403 201 193 206
 667 183 587 395 449 289 211 212 386 136 320 353 224 324 661 166 219 439 228 391 443 148 466 235 520 149
 548 230 608 481 220 237 321 676 113 116 284 118 174 240 624 431 225 657 151 527  92 142 573 188 580 245
 126 179 644 610 540 553 639 635  40 525 154 168 207 180 505 127 570 654 165 298 134 146 552  97 273  80
 204 157 276 576 629 641 144 195 278 198 185  56 120  52 464 450 611 475  65 563 669 362 538 579 124 190
 156 296 594 672 663 494 101 100 210  48  85  93  43 612 630 202 622 564 161 382 135 652 562  62 500 162
 530 153 333 422 645 173 119 647 115 606 655  39 171 658 302 117 607 545 139 447 147 107 432  84 536  72
 141  73 111 571 130 215 537 125 208  54 493 109 158 675 419 628 137 514 577  78  79 650 614 649 213 643
  57 604 670 495 668 651  31 114 102  55 662  67  13 653 407 108 542  69  86 143 566 584 581 664 104 105
 555  71 673 623 522 634  53 591  36 112  94  18  38  19  50 674 462  91 160  83  89 671 613 631 578 660

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00539e+07us (= 10053.9ms, 10.0539s)
Satisfaction error: 2
Number of search iterations: 2908
Number of local moves: 964 (including on plateau: 366)
Number of local minimum: 254 (including on plateau: 52)
Number of resets: 2
Number of restarts: 0

Problem in column 18: 625 411 110 150 172 270 187 121 1 133 63 406 404 337 615 271 516 439 657 654 475 564 545 514 69 91 => the sum is 8800 rather than 8801
Problem in column 20: 582 588 558 280 535 510 70 191 81 388 29 341 326 288 250 241 632 391 527 298 563 382 447 78 143 83 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   6  21 505 558 167  55 164  59 212 283 590 632 102  76 550  22 583  64 601 644 625 603 622 513 536   8
 161   7 588 607 534 564 300 186  50  87 430 241  10 130 604 195 561 136 532 616 612 649 587 115   5 294
  38  20  36 645 122 635 529 205  71 575 577 662 592 192 187  24 574  78 489 359 619 541 636  17  27 351
 127 118 533 500 512 609 345 280 471 126 262 519 594  82 366 546 455 197  56  70 105 638 543 507 217  23
  29 568  44 566  19 201 306  34 571 448 498 547 124  42 581  30 468  39 537 610 539  14 475 555 548 408
 510 465 422  41 476 134  28   9 503 506 473 447 155 544  60  16 423 549 628 334 108 651 400  11 517 391
 556 296 551 335 485 202   4 240 418 508 452 282 552 152 578  94 497  26 458  12  53 514 438 460 402 236
 488 141 169 570 495 215  45  83 553 526 279 487   3 104 535 147 432 411  43 531 502 409 576 522 414 121
 368 579 344 446 521 174 395  35 436 596 385 477 270 301 324 406 441  13 396  89 371 364 375 457 135 103
 450 486 463 256  68 101 483 252 353 615 469 509 298 165 246  15   1 445 466 329 310 515 482 493 440  91
 443 269 112 435 392 374 412 249 416 113 516 264 419 362 389 257 346 420 132 323 388 133 451 372 410 404
  96 530 311 491 501 407 242 232 421 383 356 527   2 333 230 462 399 235 427 255 317 384 268 340 367 285
 123 309 226 254 363 337 373 313 338 456 439 297 378 413 339 289 304 472 403 219 318 428 478 405 348 179
 273 358 207 248 229 319 203 343 185 382 429 321 624 397 303 302 597 175 355 415 266 376 381 281 379 453
 214 354 437 322 198 386 287 554 459 263 380 584 209 315 292 643 349 434 228 163 267  99 233 275 293 563
 190 425 342 330 361 320 641 492 272 173 528 238 511 274 222 224 180 243 247 614 239 227 218 305 326 659
 316 213 220 100 666 327 593 572 299 595 171 307 191 196 661 461 140 424 170 357 314 260 336  84 159 669
 181 291 606 277 332 524 276 490 369 211 557 265 177 244 627 199 308 393 449 234 538 138 193 259 189 474
 341 328 387 210 157 560 580 288 295 176 245 290 261 444 144 629 116 540 377 653 325 168 178 278 258 573
 631 312 162 454 120 675 559 426 128 156 433 143 284 672 107 591 158 200 286 331 166 221 188 223 671 504
 145 182 617 194 137 648 634 431 271 350  57 225 545 657 204 589  81 494 390 206 639  75 154 251 183 442
 664 106 623 114 464 150 567 652 184  37  74  97 250 562 109 518 153 633 398 172 668 467  85  65 637 352
 626 585 149 665  88 208 542 608  73  47  25 216 613 479 347 523 146 586  95 417 125 160 365 663  80 370
 602 600 650  58 656 360 111 599 655 470  79  49 484 525  90 618 231 611 151 139 148  40  52 676  86  61
 658 598  51  48  92  63  62 673 667 647  31 142 654 660  32 481 237 401 394 642 129 630  69  54 569 117
 565 640  46  77 646 253 119 496 131  72  66  33 499 480 674 520 621 582  93  67 110  98  18 620 605 670

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00538e+07us (= 10053.8ms, 10.0538s)
Satisfaction error: 2
Number of search iterations: 3274
Number of local moves: 1028 (including on plateau: 432)
Number of local minimum: 291 (including on plateau: 51)
Number of resets: 2
Number of restarts: 0

Problem in column 7: 164 300 529 345 306 28 4 45 395 483 412 242 373 203 287 641 593 276 580 559 634 567 542 111 62 119 => the sum is 8800 rather than 8801
Problem in column 22: 603 649 541 638 14 651 514 409 364 515 133 384 428 376 99 227 260 138 168 221 75 467 160 40 630 98 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  21 115  55 540 572 635 627 583  86 246 644 164 626  26  24 187 483 558 130  46  66 657  16 641 621 432
 569 446 634 556 249  32 620  15  23 251 652 181 651 622  58 180 224 662  61   7  37 647 529 653  17 225
 511 328 136 561  27 541 628 522 212  70 586  89 600  19  50  12 298 580 243 148 625 594 573 166 585  97
 579 135  72  60  10 429 500 165  28 247 502 565 598 643 612 207 539 560  40 123 587 177   8 590 599 226
 581  65 564 570  68 368 649 486 526 186 532  67 557 591 503 138  95 610   2 185  31  54 524 121 535 193
 597  59 543 576  35 566 552   5 156  29 248 614 442 545 582  84  91 559  51 116  57 485 574 633 577  25
 478  87 571 527  73  96   1 231 514  45 490 104 465 493 482 198 262 472 176 329 467 479 489 464 521 287
 525  41  11 461  78 202 492  48 468  30 548 459 453 536 452  53 477 611 426 232 506 546 371 109 476 190
 632 259 475 473 445  38 469 372 125 330 456  94 513 501 410 346  22 504 133 124 449 369 537  82 496 147
 398 448 427 360 394 462 423 528 161 387 388 319 509 450 108 157 403 422 210  14 495 443 547 132  20 196
 339 382 437 499 296 491 415 250 289 254 413 344 439 377 418 223 364 419  42 102 474 406 412  33 342 341
 370 310 393 407 278 350 128 327 508 291 357 447 216 401 347 271 285 358 219 384 322 352 391 261 428 400
 326 542 194 332 355 366 373 353 297 395 272 380 374 362 440 268 409 286 134 331 414 340 381  77 421 379
 311 275 280 359 408 487 255 242 295 441 323 333 318 334 378 471 269 284 390 435 267 276 424 314 351 281
 348 463 321 402 294 531 301 308 516 240 325 389 279 320 385 396 182 283 455 361 237 228 343 302 288 304
 335 171 204 244 365 199 305 299 229 265 417 563 282 233 214 375 624 211 655 444 290 338 345 307 451 436
 236 631 257 119 218 609 273 264 270 607 317 292 363 256 245 183 665 306 596 411 239 142 235 438 253 376
 217 205 153 258 293 163 324 488 383 656 144 606 213 300 645 430 618 230 433 454 277 191  98 184 234 604
 160 208 274 162 578 646 175 533 222 494 260 168 354 209 141 595 676 316 392 434 110 266 263 313 215 637
 189 512 220 315 367 497 309 238 425 588 241 638  93 150 158 671 555   3 567 640 179 172 155 404  49 466
 192 170 623 227 519 336 173 101 386 549  74 129 206 518 120 481 312 200 575 420 639 667 140 416 118 510
 154 337 663  39 659 195 146 520 201 615 169 117  44 152  88 619 399 203 603 593 648 630 105 397 100 405
 159 601 174 197 629 167  64 650 562 544 114 112 127  83 106 460 178  71 584 550 530  80 661 666 252 480
 103 668 303 431 523 221 484 145 642   9 137 505   4  90 617 592 151  18 675 669 672  75 126 188 654  99
 122 673 143  92 515  63  79 470 613 498  43 605   6 538 616 568  81  13 458 660 107  56 507 554 113 608
 349 670 674  34 553 111  36 658 664 534 149 517  69  52 602 636 139  62 551 589  76 131  47 356  85 457

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.34933e+06us (= 6349.33ms, 6.34933s)
Wall-clock time (full program): 6.39735e+06us (= 6397.35ms, 6.39735s)
Satisfaction error: 0
Number of search iterations: 1311
Number of local moves: 682 (including on plateau: 232)
Number of local minimum: 94 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 674 598 472 166 650 148 461  37 112  31 592 640 253 120 673 329  45 574 131  67 105 512  97 544 535 235
 651   3 644 608 531  32 654 336 269 129  29 643 133 155  61 578  82  62  13 652 632 486 118  41 668 591
 103 617  22 663 634 575 583  99  36 124 170 446 431 162 176 577 190 610  95  28 470 434 157 594 136 669
  24 452 106 671 599  81 515 514 101 241 664 483 549 185 645  88 146  76  42 202 142 649 676 203  80 667
  89 656  64 147 502 144 462 192  94 278 153 639 559  77 562 586 480 670  55 164 630 662  74 175  75 612
  33 180 249 141 636 648 485 204 115 374 254 309 579  44 226 666  85 211 246 507 615 657 206 113 501 517
  78 311 163 635 614 601 665 568 181 242 108 542 437 187 327 143 216 208 154 234 345 536 140 322 264 580
 174  90 114 172 603 130 503 647 301 621 196 538 537 107 205 589 178 338 629 455 160 553  93 299  60 508
 117 475  86 279 611 168 675 641 672 292 232 424 295 360 116 625 213 638 159 184 302 388 219 218 149 263
 173 212 296 275 294 237 624 382 555 590 378 183 305 355 397 303 565 576 217 379 272 401 177 248 199 209
 197 363 271 266 525 282 348 613 358 520 111 389 659 151 189 500 252 243 319 320 289 660 161 281 312 222
 293 476 283 207 244 337 318 384 314 346 297 262 324 436 506 533 276 400 261 333 390 373 225 287 352 344
 201 257 377 335 288 365 473 543 228 427 330 315 478 231 195 371 298 354 233 300 361 386 430 186 445 394
 260 412 321 368 285   8 326 408 410 372 350 491 230 343 429 407 328 359 369 277 286 381 398 418 307 258
 270 448 421 138 247 317 267 364 490 227 504 171 496 221 433 280 479 125 313 273 545 214 347 414 587 210
 325 396 366 442 200 524 238 438 323 422 198 444 123 236 417  70 126 332 450 290 391  35 584 447 556 428
 405 406 484 385 128 582  30  19 376 415 460 375  38 367 547 482 466 215 256 251 331 239 342 435 380 387
 404 395 451 425 349 561 132 158  26   7 362  40  91 403 511 530 607   2 449 465 495 165 488 492 459 334
 572 413 419 392 188 534 122 268 477 229 370  84  96 487 474  79 516 341 550 416 110 179 351 458 411 265
 463 453 439 255 194 560  65  54 567 353 481 274 102 494 456 223  58 573 609   1 245 250 464 497 605  66
 521 357 585 510 127  20 152 454 420 150 182 443 402 637  69  48 356 548 499 513  17 340 457 409 493  92
 552  46 523 509  49 134 240 284 471 156   4  16 426 606 595  63 505 558 596 546  43  34 623 551 588  83
 581 220 489  72 167 423 135 393 308 526 563  73  47 593 468 519 532  27 441  18 339  10 661 564 528 104
 616 469  11   9 109 571 100 432 540 618 539  12 310 620  14  23 569 306 604 631 529  87 628  15  56 383
 527  25 518 291  21 626 169 224 399 554 619 467 597 622  53 137 633 139 541 642 191 119  39 522   5 121
 498  71 627 440   6 193  59 145 658 557 655  98 304 602  57  52 600 316 570 653 566  51 646  68  50 259

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00536e+07us (= 10053.6ms, 10.0536s)
Satisfaction error: 2
Number of search iterations: 2215
Number of local moves: 1021 (including on plateau: 461)
Number of local minimum: 158 (including on plateau: 55)
Number of resets: 1
Number of restarts: 0

Problem in row 8: 174 90 114 172 603 130 503 647 301 621 196 538 537 107 205 589 178 338 629 455 160 553 93 299 60 508 => the sum is 8800 rather than 8801
Problem in row 10: 173 212 296 275 294 237 624 382 555 590 378 183 305 355 397 303 565 576 217 379 272 401 177 248 199 209 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 400 508 663 635 122 456  42 120 142 591 523 127 616  69 661  34  96  22 638  63 612 140 171  72 658 620
 469 426 659  50  67 204 113 430 114 569 654  49 627  81  94  33 666  19 604 490 151 123 589 628 285 607
  70 642 107 101  62 521 671 248 179 647 577 559 452  71 152 108 556 583  95 443  24 144 163 660 533 433
 476 665 156 652 184 524  66  37 119 475 586 134 496 147 672 227 608   2 180 109 178  83 155 640 621 609
  27 518  56 183 562 437 211 277  92 632 534 650 649 106 161  89 546 213  36 668 129 673 225  38 623 466
 516 526 186 139 137 594 461  45 102 581 656  77 648 306 293  58 572 169  97 651 441  82 112 614 196 542
 493 273 675 328 506 515 636 185 125 667 564 133 255  51 191 317 195 214 290 428 167 305 253 222 182 631
 674 633  52 157 111 541 220 236 438 391 233 240 165 272 223 189 228 478 662 669 166 274 159 266 644 480
 590 574 311 141 146 568 322 238 367 402 243 217 327 262 304 630 249 664  61 256 349 247 264 299 492 278
 544 481 237 158 276 464 410 280 150 486 381 203 224 258 192 622 641 270 241 275 188 462 218 215 393 532
 477 355 246 259 324 352 316 300 337 458 296 226 418 315 334 295 561 279 597 250 369 244 261 289 340 303
 619 263 251 230 449 357  60  88 232 362 219 288 386 360 245 611 529 206 448 350 209 346 474 325 257 637
 494 366 260 292 459 575 676 318 309 301 320 199 313 239 254 339 341 423 361 265 321 332 162 193 281 408
 380 200 345 420 271 363 414 379 453 216 413 444 170 231 359 229 358 205 333 354 411 383 431 329 338 372
 395 308 319 356 284 298 436 374 297 126 283 377 479 351 252 525 460 202 342 388 396 450 409 267  80 347
  76 121 335 522 330 287 405 457 370 208 473 465 399 422 429 312 343 389 353 207 365  11 390 384 375 373
  84 323 416 502 118 234 404 326 421 235 197 378 527 451 463 302 394 387 432 282 528 376 392 425 117  87
 198 368 517 177 498 164 419 484  85  65 269 397 495 467 603 445  48 116 470 530 286 435 454 560  78 173
 128 398 434 538 407  91 485  16 417  86 406 505 547 489  54 294 212 540 385 364 455 427 468 154 210 291
 175 501 336 557 554  99  31 507 595 100  18 415  40 487 482 510 242 571 446  55 382 552 646 472  15  13
 201  93 424 471 605 401 585 566 511  47 148  28  29 412 551 103 536 403 491  21 447 570 504 565  57  32
 371  68 545 567   5  75   8 579 555 221  73 539  26 599 440 531 331 194 520 643 549 348 497 439  64  14
 149   6 592   9 503 136 344 513 600 598 105 500 181 543 606 653  59 582  35 132  17 488  90 537 670 153
 307 110 548 601 618 168 268 596 576  98   7 610 310 645 160 135   3 578  25 550 535 625 514  43  41 130
  46   1  79 580 615 190 624 639 602 124 519 483  10 655  39 626  23 593 629  44 573 172 143  20 634 138
 442  74  53 176 588 187 174 563 613 115 104 558  12 512 587 584   4 499  30 314 553 509 657 145 617 131

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00545e+07us (= 10054.5ms, 10.0545s)
Satisfaction error: 2
Number of search iterations: 2306
Number of local moves: 924 (including on plateau: 427)
Number of local minimum: 187 (including on plateau: 52)
Number of resets: 1
Number of restarts: 0

Problem in column 3: 663 659 107 156 56 186 675 52 311 237 246 251 260 345 319 335 416 517 434 336 424 545 592 548 79 53 => the sum is 8802 rather than 8801
Problem in column 26: 620 607 433 609 466 542 631 480 278 532 303 637 408 372 347 373 87 173 291 13 32 14 153 130 138 131 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  18  20 636  10  65 618 598 174 198 131  25  23 200 663  24 581 650 607 136 595 536 547 582 641 520   3
 242   2 544 588   8  82 578 577 568   4  69 295 102 571  73 326 556 659 603 563  79  30 331 562 228 561
 498 462  45 585 240 654  14 522 194 155  43 649 166 493 142 614 523 635 253 533  27  35 587  74 107 551
 148 224 632 661  89 542 586 534 351 465  85 569 592 642 139 564 617  48  44 392   1 515 120  80 129  32
 112  49 458 497 271  15  12 608 442  28 283 602  54 637  91 557 495 572  33 655 117 348 609 566  96 594
  29 156 478 502 193   7  13 613 517 154 294 519 121 532 143 545 573 464 525 590 135 616 513 527   6  36
 309 161  31 492 191 447 111 459  41 205 528 505  17 512 314 510 531 514 317  50 452 604 421 456 140 483
 118 173 460 622 202 419 546 115 407  58 396 482  19 539  70 466 405 538  77 518 552 291  26 454 506 342
 335 350 321   9 132 509 424 379 476 106 110 606  34 469 427 579 415 195 491 487 576 412  78 449  52 380
  56 288 440 315 296 438 349 490 480 386 197 399 413 389 246 276  39 360 252 548 472 387 494 327  87 377
 434 337 508 346 286 401 431 393   5 204 489 287 500 555 336 448 388 363  11  16 437 293 347 192 376 418
 457  76 410 430 270 364 361 278 477 167 341 332 108 371 250 365 357  37 432 503 444 247 428 408 435 453
 302 303 344 446 381 280 372 330 426 238 362 445 343 398 352 217 429 474 333 220 300 269 218 305 340 374
 373 461 403 451 264 481 273 262 420 496 334 308 267 243 285 323 284 414 404 439 256 168 390 382 201 219
 353 316 265 318 409 159 422 298 231 312 384 625 647 370 441 319 304 310 216 225 356 239 368 162 526 226
 345 504 324 281 651 176 266 251 325 235 627 416 275 263 322 666 274 499 301 423 171 229 279  94 355 249
 307 367 177  92 667 179 391 260 580 455 338 358 292 215 290 223 237 436 306 328 397 471 320 210 648 257
 652 540 175 116 543 212 297 151 634 601 299 234 584  53 484 261 395 137 558 190 259 172 152 245 599 258
 433 230 170 394 468 375 203 620 596 467 559 354 311 169 164 185 400 134 631 213 268 163 289 282 570 153
 488 638 206 366 402 248 145 255 208 550 615 187 574 186 656 130  60 227 209 236 541 406 157 277 646 188
 524 575 369  86 535 673 160 207 122 479 378 199 657 184 633 233 124  90 411 222  67 241 181 232 665 554
 567 597 146 211 486  81 182 221 272 645 669  55 676  71 610  21 147 158 675 485 254 668 127  63 600 114
 383 629  62 670 662 593 560 463 123 628  61 133 501  40 612 150  88 214 189 101 183 165 626  22 313 630
 521 475 385 104 359 125 639 141 103 511 591 113 425  97 611  46  51 470 664  57 658  95 589 643 244  84
 144 196 674 109 553 624 529 128  98 516 105  38 473  64 537 149  42 180 671 119 640 530 126 583 329 644
 653 672 138 100 178  99 339  72 507 605 619  68 450  75 549  47 417  66  59  93 623 660 443 565  83 621

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.79103e+06us (= 4791.03ms, 4.79103s)
Wall-clock time (full program): 4.84352e+06us (= 4843.52ms, 4.84352s)
Satisfaction error: 0
Number of search iterations: 870
Number of local moves: 509 (including on plateau: 149)
Number of local minimum: 51 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 280 545  34 129 619 482 568 515 617 103  40 600 652  89  51  16  55 500 605  79 130 114  36 601 665 676
 459 548 147 668 514 176 146 413 447 218  32 587 654  17  58  27  29 431 644 138 442 136 543 520 621 186
 455 320 669  86 635 499 407 641 540  70  90 158 554  45  67  95  97 472 667  66  69 526 149 645 131 648
 574 198  88 575 661 580 108 670 421  18 113 491 557 106 675  53  47 469 437  62 603 143 408 412 155 177
 457 504 183 673 194 655 567 507 664 126  65 284 519 197 196 152  78 285 535 154  56 657 134 175 383 401
 588 651 672 195 276 658  83 649 415 111  54 564 551  15 190 144  35 639 593 235 663 127 206 151 115 221
 517 348 170 217 553 521 202 207 516 173  42 594 602 162 109 228 180 434 451 671 104 282 193 556 569 200
 636 599 184 330 243 402 336 615 498 273 489 643 411 156 302 249 171 199 292  80 133 142 125 474 182 637
 248 607 364 159 277 503 220 332 352 513 135 264 653 116  99 394 244 626 597 238  94 226 178 611 510 241
 368 161 210 223 213 291 622 256 662 283 153 595 342 326 263 211 267 205 483 347 392 209 313 418 426 562
 245 208 329 265 416 366 304 541 427 310 666 279 333 201 303 335 371 379 522 236 227 298 212 247 488 293
 369 481 325 409 396 387 191 323 311 124 374 204 166 258 674 357 286 307 444 261 287 289 650 257 456 215
 422 389 346 225 391 181 294 254 445 169 305 403 306 334 301 375 250 659 324 290 266 350 232 345 356 589
 365 188 253 312 484 358 268 362 450 274 275 328 410 414 219 353 373 349 359 448 419 367 224 300 259 390
 308 384 316 476 463 398 246 331 222 385 370 230  92 363   3 319 360 478 281 315 309 425 533 317 417 460
 299 354 322 327 464 255 321 381 338 400 172 297 393 470 404 397 433  64 192 377 340  46 452 361 424 518
 378 251 439 380 423 165 496 355 231 242 471 473 435 512 458 337 318  84 239 405 343 388 406 168  28 376
 260 102 570 531 509  75  61 119   8 449 579 429 174 399 453 462 486 139 203 461 581 511 443 475 270  52
 382 428 432 524 492 229 436  11  72 614 505  44 121 532 497 559 585  14  68 495  25 494 628 140 234 240
  33 118 438 372  82  91  13 441 100 534 552 547  31 561 656 506 477  37 189 493 586 542 560 101 233 508
 164 351 395 468 179  20 278 167  77 502 527  48 117 631 550 386 572  24 288 420 501 558 627 430  81 440
  38 539 487  22   4 618 529 150 216 608 466 120 163 592 454 629 634 606   7 610 465  60   6  63 528 187
 272 252 573  39  43 237 630 148 269 632 490  26  23 555 107 537 590 160  93 584 544 598 341  49 479 530
 123 145 296  59  12  71 523  41  96 620 625 314 344 525 538 480 642 563  98 646 577 640 546 271   1   5
  76   2  10 571  73 446 613 262 112 467 578 122 141 660 536 596 612  87  85 616 624  50 647 582 214  19
 485 128 549 566 185 137 339 110 295 583 633 157  57 565 638 604 609 591 105  74  21 623   9 132 576  30

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.05824e+06us (= 4058.24ms, 4.05824s)
Wall-clock time (full program): 4.1122e+06us (= 4112.2ms, 4.1122s)
Satisfaction error: 0
Number of search iterations: 626
Number of local moves: 511 (including on plateau: 137)
Number of local minimum: 16 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 642 304 495  98 498  35  67 616 164  89 665 615 668  57  24 566 145 604 651  95  59  64 131 122 667 660
 664 624 449  27 118 159 588 673 506  93 586 380  39 177  52  17 520 641 552 129 629  68  76  79 579 376
 104 420 542  66 439  48 125 674 671  34 631 573 435  58 186 530  94 652 635 523  36  29 197 485 470 144
  99 460 525 654 463 184 108 578 643 222 625 650 135  75  69  14 672 494 622  77  41 120 114 140 556 461
 545 562 503  51 656 606  85 430 225 297 609 608 214 171 124  78 227 557  92 146 577 132  91 143 550 522
 139 572 658 329 374 377 151 165 661 378 356 630  46 178 134  53 471 636 149  50 207 559 497 147 627 257
 162 628 467 322 666 598 247 474 649 233 582  87  63 216 115 211 275 663 128 346 596 119 156 137 258 402
 194 601 400 183 179 639 336 364 603 246 500 510 201 226 169 278  81 612 669 187 436 259 127 204 405 192
 121 581 443 425 190 170 231 234 193 511 676 602 181 423 266 229 152 421 130 189 268 274 324 298 675 594
 242 466 393 241 599 262 239 188 182 473 280 383 198 228 243 580 626 251 232 276 366 252 295 296 348 662
 150 254 469 305 358 339 206 646 240 390 174 382 212 373 344 659 303 248 361 230 328 255 351 340 337 547
 343 444 438 153 264 272 273 561 341 333 332 319 349 313 411 458 249 292 279 450 323 441 265 404 299 195
 238 408 338 301 415 590 288 185 381 260 302 269 283 306 365 394 289 315 670 316 355 287 290 200 388 368
 459 318 431 235 335 359 396 375 331 308 312 362 286 217 210 406 398 219 202 417 350 452 453 371 379 220
 224 261 236 414 314 325 281 326 317 334 515 387 475 386 345 175 291 173 363 372 424 221 327 551 342 422
 277  97 253 208 384 537  45 223 347 410 113 419 571 354 370 321 489 457 428 487 397 519 310  37 311 437
 455 166 105 445 416  44 391 432  82 237 270 399 412 454 369 456 285 353 543 479 541 413 483 426  30 116
 309 218  49 392  40 409 492 401 160 294 395 403 427 477 613   6 502 367 451 407 440 330 501 493 155  70
 524 126 205 434  65 507 486 141 514 161 123  80 532 482 505 517 480 109 107 112 575 569 531 528 138 250
 633 117 191 490 133 538 447 357 619 491 196  62 429 481 563  18 549 100 284   2 442 567 536 446   9 101
 465  60 293 591 508  23 526  71  96  61  90 172 385 476 462 540  72 300 558 583 157 546 614 589  54 509
 513 215 244 499 148  31 464  86 607 512   8  47 418 256 544 548 539  12 568 644 554   5 592 527   7 213
 600  13  88 360 595 488 553  25  20 593  15 176 585 518 574 484 154 102  21 576  28 597 245 653 535 203
 621 158 320 634 106 565 534 478  84 584   3  73 620 655 623 282  16  43   1 564  32 468 638 521  11 167
  74 560 163 555 271 263 632  56  55 640 136 180  26 587 516 533 352 142  22 648 111 637 647  19 472 504
   4 168 103 389 267 433 610  42 110 617 307  33 611 657 605 448 570  38  83 496 529 618  10 645 199 209

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00537e+07us (= 10053.7ms, 10.0537s)
Satisfaction error: 2
Number of search iterations: 2852
Number of local moves: 858 (including on plateau: 355)
Number of local minimum: 230 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

Problem in row 7: 162 628 467 322 666 598 247 474 649 233 582 87 63 216 115 211 275 663 128 346 596 119 156 137 258 402 => the sum is 8800 rather than 8801
Problem in row 17: 455 166 105 445 416 44 391 432 82 237 270 399 412 454 369 456 285 353 543 479 541 413 483 426 30 116 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  85 555  27 584  40  42 675 321  38  24  93  12  18 628 535 478 425 669 625 206 610  34 616 133 652 676
 482  30 588 626  55 604 673  49 358 109  63  89  94 615 168 241 153 494 426  68 444 664 474  72 672 490
  96 666  20 566  82 655 458 155 649 184 177  88 124 557  39 438  91 597 659 592 477  48 603  16 567 197
 663 647  54 395 529 552 674  31 100 419 187 263 209  70 119 658 460  95 599 394 112 134 667 164 505 101
 175 611  78 606 656 454 371 159  99 313 185 235 171 617 122 533 257  79 539 511 115 670 433 163 536 113
 110 169 200 662  66 413 190 466 173 627 225 560 188 117 198 631 120 619 590 480 298 223 582  33 641 220
 105 568 234 534 131 506 167  84 249  90 548 537 299 600 143 528 236 216 497 671 654 181 228  77 572 146
 215 180 330 589 116 504 202 645 237 576 275 554 186 261 246 421 123 217 344 486 661 280 601 252 130 170
 144 111 149 525  86 424 208 333 622 607 319 284 165 500 630 513 218 594 430 483 226 618 204 158 203  47
 137 256 192 285 287 420 295 189 324 640 193 389 439 266 312 491 340 277 440 598 325 182 224 309 668 323
 461 320 294 431 136 434 273 304 222 509 489 219 179 345 210 508 375 250 520 632 339 239 212 331 291 278
 338 207 349 269 665 516 297 176 254 369 260 314 232 332 318 427 350 428 457 398 227 360 308 561 251 138
 401 121 334 643 383 305 268 378 400 301 422 283 326 373 361 156 296 399 452 343 270 300 370 327 248 341
 191 264 365 271 377 279 247 286 385 384 289 265 201 397 469 432 356 354 238 442 302 429 392 455 243 488
 315 412 353 348 408 359 462 363 546 367 329 372 449 337 368 281 406 229 245 244  29 267 221 346 335 410
 414 471 403 233 391 242 407 464 498  98 154 231 447 316 437 196 357 311 214   1 507 380 355 292 456 526
 463 530 459 322 523 288  37  25 492  32 140 106 484 418 517 282  11 411 328 351 374 310 446 542 435 475
 166 415  23  15 453 178 409 441 519 495 108 445 493 390 467 126 502 405  67  73 479 512 379 417 448 376
  81 352 575  74 465 152 605 307 451 381 538 436 487 496  43 174   9 472 396 104  65 564 485 423 151 515
 545 255 532  41 450 262  52 544 549 118 650  21 272 303 562  87 402 293 132 362 547 473 387 514   5 443
 404 553 612  50 593  26 634 416 591 386  44 558 481  83 541 194 550 531  75  61  14 162 148 510 114 470
 621 468 573  59  10  60 565 551 195 342 639 636 521 499 609 213 393 142 258  62  69 388  92 579 211  46
 578  58 574 317 563 183  13 274 205 382 648 580 613  53 570 128 642 581   8 253 633 141 150 644   6   4
 608 524 276 139 614 157 556 585 540 290 653 503 476   3 102  71 559  64  45 125 306 543  97 336 107 522
 637  22 569  57 595 135  28 620 103 240 596 161 624 145 129 364 583  56 199 259 571 527  76 501 347 657
 366  36 638 160 127 651  35 635   2 518 577 660 623  80 586 230 587  17  19 602 147 172  51 646   7 629

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00529e+07us (= 10052.9ms, 10.0529s)
Satisfaction error: 2
Number of search iterations: 3120
Number of local moves: 1101 (including on plateau: 494)
Number of local minimum: 249 (including on plateau: 63)
Number of resets: 2
Number of restarts: 0

Problem in column 18: 669 494 597 95 79 619 216 217 594 277 250 428 399 354 229 311 411 405 472 293 531 142 581 64 56 17 => the sum is 8800 rather than 8801
Problem in column 19: 625 426 659 599 539 590 497 344 430 440 520 457 452 238 245 214 328 67 396 132 75 258 8 45 199 19 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 379 105 668 588 132 587 575 102 675 125  51  87 674 135 172 638  49  97  53 646 673 539 660 118  79 194
 449 444 339  98 669 522 642 360 665 108 525 554 553  69 221 376  60 151 129 344  48 641  58  61 651  64
 556 659 676 593 193 137 256 510 426  96 654  55  66  81 153 506 167  80  54 598  94 562 163 666 643 157
 478 209 672 557 578 530 608 635 171 653 130  57 328 162 265 509  71 109  16 658  37 433 656 139  67  73
 663 631 572 283 508  95 611  99 526 543 566 103 220 111  82 324 352  70 126 219 253 648  68 275 182 671
 527 584  63 263 667 662 210 657 112 489 136 655 401  85 494 146  47 370 207 609 555 518 147  44  43 110
 536 177 190 195 169 633 664 301 122 421 628 515 505 295 599 624 149 156 121 385 269 290 214 161 266 216
 545 115  93 133 244 561 548 280 178 179 235 252 559 404 597 456 231 307 661 390 192 507 305 558 180  91
 535 309 292 529 601 303 277 332 403 239 274 238 493 331 260 592 184 166 199 410 337 516 123 327 289 242
 262 236  72 606 218 366 340 154 225 618 604 148 625 176 469 322 670 189 255 341 621 349 142 168 234 391
 233 285 104 223 284 502 145 310 124 345 228 230 610 314 533 615 247 413 226 405 605 596 375 158 320 371
 342 330 491 312 409 313 206 453 268 170 415 473 382 270 155 319 373 299 354 400 282 408 412 479 254 232
 414 240 333 308 365 361 302 417 258 357 447 296 386 173 273 325 387 406 298 594 191 388 381 281 286 334
 248 434 134 287 288 364 317 316 227 222 259 306 443 389 358 442 318 384 380 355 304 368 293 630 490 245
 188 541 329 439 377 500 459 185 311 362 323 353 457 350 204 267 208  31 402 347 521 198 445 181 383 440
 474  86 237 249 504 215 363 462  65 300 396 537 257 205 470 418 351 454 250 276 372 212 321 427 603 297
 485  24  41 512  78 399 455   9 397  28 407 429  90 326  76 475 497 482 486 431 492 272 367 419 472 652
  50 501 476 241 468 264 465 452  30 117 450 524  59 436 359 127 477  77 574 279 435 224 338 393 591 394
 159  45 438 138 416 532 428 369 487 100 466 441 243 463  62 152 315 398 495 140 534 144 343 503 446 544
 114 335 430 552 213 106  33 583  36 374 542 378 183 612 395 141 586 498 420   3 291 203 595 520  22 636
 128 560 471 461 432  17  32 519 411   7  20 540 271 645 160  88 569 551 278 201  52 200 567 547 511 563
 143 496 538 467  19 175  27  21 514 565 460  10 196 571 246  34 570 546 483 437 346 251 480 585 582  39
 131 573 448  23  35 423 348 627 549 523 101 580 150 464 581 120 550 647 481  89 564 119   1  83  12 579
 165 488  56 202 499 116 229   6 576 640  74   5 600 617 626 451 513 637 607  13 187  26 197  92 577 602
 113 356  15  84 261 107 186 634 425 629  18 422  46 528 424  40 649 644 632  14 517 164 619 650   2 622
 484  38 623 458 174  11  75   8 620 590 392 613   4 589 568 294 211 639 614 217  29  25 531 336 616  42

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00541e+07us (= 10054.1ms, 10.0541s)
Satisfaction error: 3
Number of search iterations: 2671
Number of local moves: 1198 (including on plateau: 564)
Number of local minimum: 190 (including on plateau: 51)
Number of resets: 1
Number of restarts: 0

Problem in column 10: 125 108 96 653 543 489 421 179 239 618 345 170 357 222 362 300 28 117 100 374 7 565 523 640 629 590 => the sum is 8800 rather than 8801
Problem in column 15: 172 221 153 265 82 494 599 597 260 469 533 155 273 358 204 470 76 359 62 395 160 246 581 626 424 568 => the sum is 8802 rather than 8801
Problem in diagonal 1: 194 651 666 656 648 555 385 661 166 670 615 155 173 443 353 396 28 30 369 33 17 19 23 56 356 484 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 656 209 100  54 622 161 635 553  60  14 654 129  85   7 637 620 117 222 550  12 628 647 140 608 676   5
  41 670 598  34  91 582 540 189  70 610 556  81 170   6 563 110  47  90 662 663 594 633 204 141 263 593
 165  58 529  93 595  40 561  23 149 591 632 157 538  10 109 147 621  13 603 504 639 568 218 196 590 452
 214  84  67 200 589 584 175 181  20 224 547  86 592  94 270 555 498  92 481 571 531 569 261 126 602 588
  24 513 462 180 577 567 596  29 510 525 554 122 573   9 131  61 600   3 445 483 250 107 235  25 661 559
 259 558 609  37 489  15 522 268  79 330 392  18 614 534 197 186 515 493 505 535   1 539  33  42 516 514
 160 532 390 436 549 499  17  39 476 444 502 145 575 518 208  35 475 443 422   2 137 449 242 118 446 542
  64 508 564 423 353 470 494  76 124  78 438 417 469 472 114 501 466 283  99 413  27 102 430 389 506 521
  45 418 399 132 581 456 425 318 439  55 411 458 341 432  43 657 412   4 517 548 188 351  16 414 407 334
 382 393 415 111 419 401 381  21 457 314 339 509 420 374  66 277  11 361 463 379 211 507 474 176 486 454
 459 365 244 450 346 380 325  32 396 408 410 455 467 371  72   8 336 397  80 377 329 383 319 384 429 579
 388 364 360 281 355 296 440 272 409 400 385 258 343 406 156 428 461 344  49 310 356 337 320 421 271 391
 321 313 416 394 252 306 332 113 404 370 300 278 405 202 386 441 398 279 315 367 363 294 434 368 488 262
 229 350 345 311 317 378 333 526 293 298 331 266 565 347 307 246 572 299 375 303 362 395 212 216 316 309
 352 340 402 239 275 447 210 624 305 323 372 248 213 304 297 631 431 357 284 260 159 324 623 276 215 290
 326 241 226 257 184 403 219 354 253 642 576 328 295 369 552 206 231 282 373 301 536 286 163 653 223 322
 338 142 585 245 264 265 255 528 424 649 287 289 308 302 473 233 426 225 199 586 238 230 254 203 580 273
 442 120 376 495 179 267 285 605 604 234 193 182 207 168 597 530 240 496 191 280 583 274 537 192 292 232
 460 236 256 668 178 291 249 524 269 485 217 327 251 237 599 437 312 247 198 155 221 158 490 574 151 611
 523 185 167 570 108 154 627 644 190 169 125 491 288 143 464 144 205 227 348 664 482 135 607 541  73 527
 487 671 174 220 116 638 335 349 152 666  56 645 166 243 626 587 195 497 359  98 133 519 479 139 201  50
 478 105 146 566 648 187 153 520 148 173 183 613  89 651 546 435 228 646 136 171 543 119 612 562  87  57
 492 453 101 471  22 358 121 427 606 138  83 659  68 619 387 557 123 601 433 103 560  71 544 675  77  52
 342 194 641 617  36 130  62 629 658  96 164 512  53 636 484 533 104 630 545  28 551 162  88 669  65 172
 511 652 134 650 618 451  44 477 672  97  63 625  46 674  69 177 112 655 150  48 128 616 366 578 106  82
 643 127  95 667  38  75 465 480 634 468  31 503 660 673 448  59 665 615  19 640  51  26 500 115  74  30

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00534e+07us (= 10053.4ms, 10.0534s)
Satisfaction error: 2
Number of search iterations: 3104
Number of local moves: 1081 (including on plateau: 442)
Number of local minimum: 259 (including on plateau: 73)
Number of resets: 2
Number of restarts: 0

Problem in row 6: 259 558 609 37 489 15 522 268 79 330 392 18 614 534 197 186 515 493 505 535 1 539 33 42 516 514 => the sum is 8800 rather than 8801
Problem in row 22: 478 105 146 566 648 187 153 520 148 173 183 613 89 651 546 435 228 646 136 171 543 119 612 562 87 57 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 111 616 639 463 181 491 484  21 597 121 618  52 601  36  35  30 614 180 564 442 139 109  81 471 668 437
 124 666 512  38  49  61 532 117 676 662 533 102 460 126 100 279 499 582 578 478  65 112 198 199 657 396
 625 403 665 316  78  72 631  50 516 207 645 153 638  71  15  94 374 543 133 635 284  99 190 659  42 663
 155 626 248 131  92  68 496 166 670 574 184 571 562  79 129 595 493 661 135 398 157  51 399 598  44 519
 518 561 168 171 669 151 321 672 674 620 339 115 161  14  82 308 607 613 203 298 140 183 500 130  34 549
 138 655 526 364 294 179 529  95 675 276 612  69 223 320 169 259 608 546 214 610 137  54 127 376 173 573
  85 226 605 345 201  89 621 293 258 628 554 174 217  23 274 154 623 237 194 359 188 619 633 602 224 375
  87 513 498 558 351 144 408 120 426 101 322 235 229 262 177 170 647 617 584 550 434 245  88 234 202 599
 216 569 445 382 302 285 414 261 146 289 486 343 520 310 297 148 412 164 648 542 134 247 290 326 255 370
 160 233 590 191 603 265 494 331 384 182 637 260 263 283 158 307 673 504 176 557 163 267 110 461 187 362
 337 236 230 204 278 579 369 232 327 646 205 193 213 253 581 299 296 313 270 393 306 309 301 585 287 559
 197 377 383 407 291 186 636 167 162 108 541 239 444 228 329 211 273 352 286 538 288 402 231 324 530 671
 250 424 269 303 252 178 300 368 380 387 378 314 667 305 371 277 215 254 420 282 256 275 367 295 358 656
 172 391 429 218 315 472 416 271 189 246 350 401 349 175 363 388 406 417 312 344 360 346 330 535 334 272
 443 268 244 457 335 395 338 196 241 524 435 348 372 365 397 381 379 266  27 280 517 311 470 400 386  26
 317 389 150 342 355 476 206 354 328 390 456 405 439 438 544 422 147  46 466  58 503 419 356 185 318 292
 527 385  66  41   1 642  86 353 474 479 281 510 411 473 483 477 340 481  22 225 537 596 325 114 464   8
 467  19  83  91 511 264 249 323 428 522 333 418 501 455 454 450 475 319  29 210 448 446 593  77 495 141
 615  17  62 441 507 430  47 347  73 502   5 361 539 451 251 515  76 514 567  98 490 521 545 366 394  67
 341 104 452 588 373 242 227 410 453   3  70 436 132 586 257 357  12 238 404 649 531 440 222 449 604 221
 447   9 392 555 469 212 304 629  80 576   7 540  24 658 433 624 125 465 462  59   4 508 568  93 468  90
 652  63 240 643  64 594 113 634  32 149  25 580 551 509 577 492 145 152 458  33 480 409 103 423 627  53
 536 413 143  39 506 548 156 505 485  18 336 425 118 528 644 547 119  37 534 209 609 630  55  75 421 165
 606  45 159 219 572 587  74 592  28  20 136 523 123 651 622 482 106  57 128 192 488 566 660 432 611 122
 664 497 487 653 589 591 107 654  56 565 105 459  13 650 427  10  97 195 431 142 560  84 489  60  16 200
  11  96 116 641 563 600 243 640  43   6 208 575  31 552 632 525  40  48 556 220 583 553 570 332   2 415

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.85839e+06us (= 8858.39ms, 8.85839s)
Wall-clock time (full program): 8.91046e+06us (= 8910.46ms, 8.91046s)
Satisfaction error: 0
Number of search iterations: 2106
Number of local moves: 921 (including on plateau: 529)
Number of local minimum: 134 (including on plateau: 54)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  51 156 503 581  92 243 563 292  70 370 571 667 567 184 194  43 580 592 629 639 206  76 298  28 590  16
   7  14 519 646  18   9 547 666 660 653 546 540  82 650 621 249 642 151 636  78  20  39  55 146   1 606
 593 117  58 136  67 144 619 485  11 632 488 591   2 111 161  54 147 624 474 627 557 132 570 210 625 566
  26 115 589  27  73  29 618 122 388 549 469 657 130  71 501 534 644 574 616 142 254 224 118  42 654 635
 120  49 545 522 260 472 569 422 157 670 648  40 164 109  65  56 518 576 599  44 508 385   5  37 638 623
 588 335 559 459 344 101 555 103  68 506 105 617 535  87 511 229 490 412 500  48   4 134 475 102 536 398
 478 237 595 407  64 607 487  38  98 383 525 479 454  80  15 323 458 504 531  17 486 135 112 263 492 533
 510 123 481 598 245 558 509  57 230 425 213 428 526   6  36 491 436 520  23 477 482 190 453 175  47 562
 455 442 348 466 127 390 149 106 270 462 236 378 561 367  62 429 259 173 493 450 373 163 433 321 443 445
 364 349 306 468 222 448 601 171 427 278 484 391  52 319 272 307 359 596 441  32 424 204 153 325 527 281
 362 302 258 301  12 345 201 242  97 460 517 489 404 438 467 384 413 114 202 435 430 255 515 312 382 464
 126 401 299 329 214 502 318 524 420 340 396 405 296 356   3 437 331 399 377 315 416 419 244 387 168 379
 444 336 300 333   8 374 403 328 538 327 456 228 257 439 369 238 461 311 334 414 386 338 225 256 309 389
 381 251 393 411 473 463 282 392 363 330  60 317 375 342 343 368 295 360 372 452 358 195 332 290 341 262
 351 421 286 440 406 289 357 408 418 240 361 241 283 269 410 304 326 366 177 275 221 365 640 397 316 234
 376 371 235 288 480 305 231 584 297 505 587 310 140 268 352 350 211 347 197 320 313 432 261 394 380 267
 322 568 277 220 446 274 280 189 355 643 494 226 395 354 233  99 645 339 284 138 167 669 264 400 293 227
 215 613 187 287 608 294 183 554 496 150 324 172 604 539 250 542 200 663 246 232 203 346 248 303 223 119
 239 594  89 100 449 196 152 537 426 314 276 158  88 652 586 219 186 530 337 198 308 457 637 610 247 216
 170 544 128 265 611 116 423 673 217 178 137 218 124 285 507 552 417 107 143 409 159 495 541 551 253 578
 133 470 207 145 630 615 199 208 577 179 431 212 252 564 521 560 271 166 209 110 633 512 291 585  96  25
 514 176 671  30 529  94 191 465 651  35  91 139 583 556 631 182 193 165 125 516 553 266 661 543 148  93
 174 471 169 664 647 160 155 154 579 108 141 185 655 659 575 672 113  72 188 674  45 603 353 451  59  75
 597 602 279  50 528 476  46 181 162  41 129  79 565 483 513  77 121  66 548 614 622 658 532 676  95  61
 600 675 447  19 620 656 131 498 192  13  83 550  81 523 499 434  22  53  34 572 649 497 180 415 273  85
 605  69  74 609 628 641  31 402 634  10  33  84 626  90 104 668  63  21  86 573  24 612 205 582 665 662

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00024e+07us (= 10002.4ms, 10.0024s)
Wall-clock time (full program): 1.00548e+07us (= 10054.8ms, 10.0548s)
Satisfaction error: 2
Number of search iterations: 2258
Number of local moves: 782 (including on plateau: 376)
Number of local minimum: 186 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0

Problem in column 3: 503 519 58 589 545 559 595 481 348 306 258 299 300 393 286 235 277 187 89 128 207 671 169 279 447 74 => the sum is 8802 rather than 8801
Problem in column 7: 563 547 619 618 569 555 487 509 149 601 201 318 403 282 357 231 280 183 152 423 199 191 155 46 131 31 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 675  46 114 118 119 503 635 449  70 380  93 524  95 670 527 181 668 402 652  61 156 463 430 526 168  76
 673 555  55 100  75 473 655 139  80 498 113 437  12 665 593  79  82 531 560  86 194 427 674 246 211 588
  73 654  30 669 663 286  77 504  89 639  72 110  83 187 488 644  67  99 672 525 395 268  97 577 657 176
 626 640  81  91  60 599 197 647 115 619 154 195 190 466 600 435 152 109 209  66 200 262 676 561 499 352
  58 603  42 121  45 484  85 408 260 656 124 127  11 251 549 629 671  69 562 229 563 633 281 649 554 137
 125 117 238 165 160 650  65 177  63 476 105 623 239 381 535 464 173 144 620 422 664 159 568 457 374 637
 208  22 245 225 143 618 667 659 128 456 141  90 337 206 558 155 565 314 226 103 648 502 220 412 571 382
 244 163 257  32 218 520 271 666 133 357 387 403 147 202 624 214 171 287 362 153 213 471 578 450 651 627
 104 217 150 369 228 636 283 199 634 364 174 207  94 196 237 301 376 643 230 235 587 584 265 611 661 216
 280 316 193 334  71 630 130 323 320 366 146 222 210 465 551 552 586  87 322 295 261 365 438 540 166 632
 175 288 372 247 278 530 308 264 468 399 638 231 293 270 309 614 252 232 507 306 363 219 254 303 423 258
 134 167 580 330 394 532 304 461 221 528 182 653 312 384 440 333 386 277 248 243 433 186 413 331 151 178
 224 421 358 294 279 400 305 451 311 317 326 298 370 344 411 215  17 338 328 332 290 368 490 325 481 508
 407 135 353 360 335 285 375 269 253 356 458 302 470 439 315 327 313 319 242 383 455 340 324 236 475 275
 361 401 389 491 321 233 273 349 393   5 345 263 282 424 392 274 310 296 284 318 441 397 418 346 348 447
 404  15 396 415 371 241 405 355 448 198 240 377 351 388 249 203 428 391 378 291 492 398 341 129 420 477
 436 522 379 431 462  84 485 359 443 179 339 205 590 474 292 120 183 342 390 336 434   6 307 480 482  41
 536 595 510 517 542  54 598 478 612 184 189  96 350 145  38 417 513  33 255 518  24 500  36 111 445 505
 569 373 529 550 409  25 444  62 367 570 615 452 414 429  14 158 406 446 297 514  27 289 538 148 106  50
 460 572 432 496 545 116 149 426 459  43 521 486 583  39  57 276  52 573 425  16 469 589 250 212 256 299
 479 347 537 576 487 138 454  51 259  98 495 131 509 467 223 534 641 622 102 494 136 559 170 157 107  28
 533 506 548 591   4  53  20 516 511  92 416 234 539  49 267 616  47 597 201 515 523 142 544 112 132 493
 442  18 605  34 628 164 472  23 594 192 621 354 574 592  56 497 453 553 180 483  88   1 172 266 126 613
  26 108 300 519 658 272 543   3 575 546 601 609 582  29 123  31  64 512 161 604 489  13 169 567 101 596
 547 419 607 185 646 227  44   7 385 204 645 566 585  37 343 410 617  21 329 631 188 625 140  40 162 191
   2 581 501 541 660  48 557 556 610  78 662 606 579 602  10 122 608 564  59 642  68  35   8   9  74  19

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00531e+07us (= 10053.1ms, 10.0531s)
Satisfaction error: 2
Number of search iterations: 2493
Number of local moves: 844 (including on plateau: 352)
Number of local minimum: 205 (including on plateau: 52)
Number of resets: 1
Number of restarts: 0

Problem in column 10: 380 498 639 619 656 476 456 357 364 366 399 528 317 356 5 198 179 184 570 43 98 92 192 546 204 78 => the sum is 8800 rather than 8801
Problem in column 11: 93 113 72 154 124 105 141 387 174 146 638 182 326 458 345 240 339 189 615 521 495 416 621 601 645 662 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  11 640 421 611 143 634 618 573 633  78 560 586 652 626  59  15 207  53  29 292 134  88   2 596   9 531
  43 639 620  51  45 590 617 448 645 592 631 579 601 578  76   7 533  96 129  12  81 227  71 255  14 621
 585   8   4 102 159 166 294 625 616  75 453 584 357 355 252  84 653 203 105 597 130 532 576  94 568 624
  40 552  54  21  20 610 543 566 514 390 628 608 654 493 127  48 323   3 196 236 194 503  99 529 295 555
  72 476 602  89 193 595 575 492 635   1 525 463 268 542 140 126 178 121  25  18 524 350 385 580 228 598
 381 407 642 168  52  47 587 581 185 604 551 636 415 456  95 430 151  90 139 512  23  61  77 574 466 471
 536 521 483 411  28 563   5 554 534  68 556 519 484 537 108  37 504 449 124  50  26  10 583 405 216 490
 440 472 515  58 473 637 425 200 388 215 527 450  16 510 250 217  56 412 197 123 172 434  86 488 502 538
 522 347 382 420 341 433 464 467  49 247 516 396 474 423 144 239 191 395  33  74  46 475 408 481 435 399
 506 497 416 436 455   6 458 428 461 246 426 482 182 198 119 400  22 465 286 370 136 462 339 386 181 438
 368 371 451 422 389 437 398 414 441 297 161 402 429 351 254 403 362 291  31 222 494  13 335 397 251 417
 364 334 457 312 324 265 300 387 331 439 379  17 310 500 318 376 380 432 299 383 184 356 237 253 445 419
 372 349 344 518 459 358 418 404 303 142 329 326 447 361 322 384  80 285 149 229 477 480 345 367 260 293
 348 327 288 132 378 321 263 319 259 498 135 343 505 325 330 427 670 230 443 302 336 272 261 311 424 354
 305 328 289 274 270 394 107 342 366 234 666 287 446 316 264 278 375 673 508 373 346 269 363 317 221 190
 279 210 409 257 224 485 243 301 296 275 165 235 606 495 365 273 613 304 557 517 205 308 359 333 245 242
 352 360 277 176 281 244 337 491 187 353 315 238 340 290 401 211 676 276 671 544 180 282 231 232 630 226
 214 157 202 298 307 167 240 156 549 241 267 199 219 179 548 526 501 478 369 571 648 593 641 280 186  65
 171 192 137 664 218 223  87 206 256 320  97 413 258 173 623 547 530 152 550 607 655 313 153 661 470 125
 262 314 169 309 559  83 629  93 133 431 141 164 392 266 638 535 284 209 672 658 588 195 208 158 565 146
 410 249 116 674 612 644 117 138 189 271 100  36 248 177 582 562 188 603 469 479 659 657 460  57  60  44
 212 220 225 106 662 145 509 155 174 520 391  34 110 170 643 591 393  73 452 546 511 589 600 160 377 233
 183  39 619 649 528  69 131 154 111 444  62 614 213 150 577 332 175 667 669 569 539 374 486  85 338  24
 570  27  30 558 523 148 201 147 442 663  98  70  64 112 513 622 489 615 541 283 454 561 163 675 104 128
 646 656 567 545 594  41 113  42  38 507  67 101  32 115 406 632  63 599 605 114 487 306 668  35 660 162
 609 109  82 540 564 496 122 118  66 650  55  19  79 103 647 499 204 627 553 120 572  91 665  92 651 468

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.41815e+06us (= 4418.15ms, 4.41815s)
Wall-clock time (full program): 4.47016e+06us (= 4470.16ms, 4.47016s)
Satisfaction error: 0
Number of search iterations: 944
Number of local moves: 563 (including on plateau: 217)
Number of local minimum: 48 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   4 194 625 169 505  61 196 608 578 629  38 263 331 135 375 230  15 580 531   5 633   6 576 600 575 339
 504  22 638 518 618 204 201 596 624  55 574 188 592  24 179  69  12 599 560 133 556  58 656  53 104 464
 622  78 182 116 593 535 108 475 541  62 627 128 323 160   3  90 508 636 533  82 598 115 623 432 590  41
 223  94 586  33 539 544  11 485 517 601 516 428  21  46 244 443  44 491 644 501 232 298 595  88 537  40
 500 450 573 507 563 555 220 140 631 487 102  83 611  79 113  93 164 526 582  19 547  56 657   8 372 163
 579 151 462 521 607 663  80 107 583  16 379  63 159 472   7  36 567 427 538   9 524 241 497 534 536  43
 550 120 551  45 562 434  71 529 527 577 469  29 170 131  37 110 569 412 558  27 542 138 594 382 221 446
 514 523  13 614 389 530 150 199 511 528 402 342  64 343 198 215 265 418  26 407  76 502 242 409 441 480
 499 144 258  25 635 380 233 532 209 404 414 423  87 474  99  68 376 296 641 393  57 476 335 406 439 498
 486 471 172  73 303 448 213 345 238 127 520 422 211 388 192  59 425 496 465 395  17 503 554 543 397 338
 410 565 289 512 483 436 222 362 453 299  10 227 309 444 365 454 325 349 492 357 317 455 243  20  35 368
 386 319 117 302 361 245 202 146 333 318 473 334 373 519 313 371 416 381 426 181 352 369 360 310 546 348
 467 279 383 249 288 363 269 429 336 367 326   1 267 291 377 408 415 387 231 394 248 424 463 419 366 354
 340 346 330 311 374 268 314 315 433 344 616 350 390 356 286 259 282 364 271 482 272 327 124 466 324 257
 294 261 613 401 637 290 652 384 300 287 246 187 632 420 307 280 329 118 293 262 337 254 253 297 145 322
 224 275 320 301 129 195 399 255 143 266 671 358 481 400 252 675 240 437 190 274 328 549 217 351 205 666
 273 228 396 353 341 112 646 147 391 359 212 559 591 355 457 458 490 141  32 260 219 509 239 256 552 225
 183 621 430 153 101 186 628 316 659 276 295 468 392 270 619 653 158 285 440 251 284 281 247 308 142 155
 398 347 103 609 106 156 470 568 312 484 264 557 452 405 605 451 229 218 168 477 417 175 193 171 277 189
 234 639 478 250 174 125 385 650  65 185 203 642 177 165 525 548 615 180 161 564 123 305 283 216 292 617
 669 643 304 226 109 604 435 210 136  51 421 445 495 206 648 612  92  54 184 515 214 236 191 602 167 332
 137 606  18 589 148 449 431 114  72 667 122 411 157 673 442 456 461 134 111 647 413 655  31 100 154 603
 149 197  70 630  34 237 553 132  74  89 139 588 626 672 585 510 494  86 176 640 447 130 403 584 321 235
 105 513 200 649  91  85 668  98  66  96  42 207 460 665 378 493  84 664 166 545 438 506 162 670 178 572
  28  95 651  48  30 126 674 540  67 566 660 610 278  50 634 173 581  47  77 459 489 662  49 479 676  52
  23 620  39 597  81 570 370 119   2 661  60 488 152 658 561 587 645  75 306 522 121 571  14  97 208 654

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00544e+07us (= 10054.4ms, 10.0544s)
Satisfaction error: 2
Number of search iterations: 2483
Number of local moves: 853 (including on plateau: 391)
Number of local minimum: 202 (including on plateau: 42)
Number of resets: 1
Number of restarts: 0

Problem in column 19: 531 560 533 644 582 538 558 26 641 465 492 426 231 271 293 190 32 440 168 161 184 111 176 166 77 306 => the sum is 8802 rather than 8801
Problem in column 25: 575 104 590 537 372 536 221 441 439 397 35 546 366 324 145 205 552 142 277 292 167 154 321 178 676 208 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 249 106 645 523 506  11 585  56 659 485  20 130  69 494 165   9  80 599 550 562 125 306  10 544 641 672
 565 676  21 642 623  15 541 675  29  75  51 185 126 154 662  85  89 586 643 575  48  90 207 492 287 658
 468  58 669 647 409  27 620 128  95 603 173 196 102 420 554  36  71 399 561 519 292 107 377 673 483 114
 670  12  35 664 545  91 590 156 171 639  49 134 116 578 542  64 411  73 618 627 131 667 121 418 598  81
 489 660  70 514 668 162 412 206 191 197  67  92 157 484 581 244 115 158  88 595 100 674 429 656 652 140
 433 146 179 613 594 665 231 174 110 600 164  37  42 640 671  63 123 608 516 602 137 177 108 362 593 213
 448  78  60 478 517 251 666 250 148 548 147 139  55 512 584 262 144 614 269 534 228  43 383 610 591 242
 432 169 104 496 507 212 491  61 217 579 113 210 439 238 153 232 321 663 363 558 214 124 503 621 566 215
 199 235 220 493 501 268 222 155 159 646 270 280  96 624 255  22 307 633  65 631 141 312 625 136 651 655
 650 284 254 233 509 300 170 488 282  76 370 211 163 295 451 533 227 329 628 149 278 202 245 318 537 619
 219 216 286 237 504 530 357 192 661 261 208 358 265 248 190 252 274 257 276 243 551 189 592 612 479 344
 277 571 195 267 390 524 359 229 259 389 531 378 601 421 405 361 387 160 166 441 247 236  18 349 296 345
 367 201 649 438 308 279 324 419 297 325 425 178 263 246 293 240 260 373 258 573 339 328 360 340 384 334
 330 338 364 393 315 298 347 342 264 443 303 410 313 374 381 423 427 234 465 101 305 406 290 371 275 289
 182 356 332 331 376 294 408 398 302 351 395 437 379 346 288 341 430 187 454 365 431 337 271 317 167 326
 539 402 505  40 385 241 183 417 352 422 380 256 272 309 452 403 522  45 442 382 518 310 109 301 200 414
  44 638 426  99 186 436 525 392 327 475 311 444 355 105 490 404  50 400 428 184 469 416 320 138 283 456
  94 467 466 333 209 413 407 464 366  16 415 394 481  59 354 446 473 218 319 127 434 510 508 266 193 369
 529 368 474  47 181 540 372 316 559 445 388 480 353 135 132 335 476  66 391  30 440 458 424 350 176 336
 117 453 460 477 133 538 118 568  26 487 447 535 580 103 528 564 555 513 194 129 459 520  52 151  62  32
 180 401 497  28  54 348 172 457 449  24 605 577 450 161  57 549 552 502 462 150 314 498 536  84 120 574
 145 521 547  41   4 486  77 470 560 122 630 607 635 375 142 617 588 168  93  53 626  34 563 323  83 291
  87 499 472 230 285 636 396 576 515 111 570 569 556 204  31 527  97 198  13  25 572 637 471   6   7 511
 435 597 304   3  38 112 152  98 616  17 653 526 644 463 226 587 654 188 397  82 500 609 203 205 253 239
 648 281 553  79  46 567   2 532 604 143 482 495 657 224  39 606 622  19  23 221 629 386 615  72 223  33
   5  68  14 455   8 557  74 582 583 322 634 543 632 589 175 596 546 611 119 343 273 225 461  86   1 299

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00499e+07us (= 10049.9ms, 10.0499s)
Satisfaction error: 2
Number of search iterations: 2522
Number of local moves: 837 (including on plateau: 260)
Number of local minimum: 234 (including on plateau: 53)
Number of resets: 1
Number of restarts: 0

Problem in row 2: 565 676 21 642 623 15 541 675 29 75 51 185 126 154 662 85 89 586 643 575 48 90 207 492 287 658 => the sum is 8800 rather than 8801
Problem in row 12: 277 571 195 267 390 524 359 229 259 389 531 378 601 421 405 361 387 160 166 441 247 236 18 349 296 345 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   5 627 251 526 444  66 605 256 629 596 205 544 547 115 472 539 267 641  20  72 353  13 357 309  26 316
 141  34 151 129 645 172 339 449 538 638 322 674 648 631 384  52 149 274  21 100 670  25 574  32 416 593
 341 507 232 128 611  46  57  95 501  77 628 668 533 604  30 551 158 532  47  38 599 212 200 589 528 289
 617 569 317   7 576 366 583 607 525 385  81 536 136 591 571 379 189 359 199 169 210 104   4 620  89  12
 549 405 658 614  23   2 624 261 561 553  96 143 621 552 651  82  27  28  31   3 554   9 609 493 131 521
 508 181 350 108 558 187 494 595 467 159 152 572  71 462 579 197 348 502 190 193  14 294  33 511 542 534
 396  15 338  45 315 361  53 425 634  16 565 587  59 483 432 223  40 214 487 464 370 575 445 644 103 512
 548 555 404 167 541 506 254  10 495 586 391 383 144 659 505 114 135   6  50 170 206 543 287 447 224 471
 443 414 142 516 406 499 642 466 325 320  24 422 482  80 446 395 130  22 360 279  42 356 436 420 234 500
 550 564  19 426  35  17 520 461 236 563 434 321 368 403 411 163 122  91 192 568 334 280 442 399 473 409
  39 219 139   8 228 452 557 382 372 546 479 417 347 243 637 408 415 124 328 435 451 282 397 386 215 295
 398 469 257 438 352 448  69 323  61 343 402  86 270 492 291 458 480 529 428  18 388 612 173 600  43 373
 358 490 226 407 284 429 588 207 121 421 332 336 342 201 253 319 522 381 345 174 312 301 273 306 392 481
 283 394 252 230 401 367 380 531 374 277 330  44 123 433 457 423 491 293 527 510 302 105 337 410 290 237
 229 258 592 376 281 369 340 351 460 242 331 496  36 335 217 285 556 537 222 276 610 238 286 307 299 272
 623 314 378 362 213 400 296 113 271 329 485 249 146 354 185 465 233 606 365 570 231 608 349 182 297 177
 209  92 603 418 377 220 188 180 517 643 363 102 298 303 244 427 669 484 305 313 653 248 184 178 265 318
 260 288 672 263 431 626 241 310 675 327  84 132 324 326 216 514 259 430 255 300 441 333 278 221 486 109
 268  88 619 504 590 211 186 662 247 204 266  37 439 166  74 633 622 562 387 545 183 195 344  68 245 456
 117 346 474 165 176 437 663 580 126  90 666 218 616 468  83 292   1 560 615 246 515  48 503  62 667  67
 625 364 424 489 116 191 150 584 164 160 477 671 118 155  99 203 225 311 673 371 676 581 235  41 459 239
 198 649 194 440 264 657 119 112  97 413 519 275 269  11 107 375 613 175 585 470  63 578 664 110 594 250
 154 227 208 636 145 639 262 162 120 161 127 148 573 453 134 661 524  51 498 650  76 632 652 171 597 140
 202 179 355 509 660  58  87  73 101  49 133 240 647  64 655  55 577 147 518 630 390 618 475 665  60 654
  94  56 389 308  75 535  85 156  78 566 455 196 476  79 598 463 393 530 640 602  93 523 153 601 559  98
 646 497 157 582  54 540 419 450 106 137 454 304 168 138  70 125 656 412 513 635  65 488 111  29 567 478

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.54137e+06us (= 8541.37ms, 8.54137s)
Wall-clock time (full program): 8.59396e+06us (= 8593.96ms, 8.59396s)
Satisfaction error: 0
Number of search iterations: 2029
Number of local moves: 844 (including on plateau: 349)
Number of local minimum: 163 (including on plateau: 54)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 301 536 348 587 118  75  68 641 520 615 133  77 203 619  73 157 526 602 401 599  36 567   8 116 218 657
 568 613 546 597 198 109  92  47 432  25 384 593 104 625 482 564 565  44 489 448 191  23 173  10 270 609
 154 640  32 633 474 111  16 466 518 612 305 551 247 577  18 443 645 162 233 483 227  24 113 397 134 586
 584 534 574  15 514  63 553 128 444  37 497 624   5 533   3 521 449 579 211 220  30 552  27 478  21 605
 426  29 576 575  14 239  11 566 629 100 506  48 484 638 504 411 557 410  90 468  54 269 475  49 102 571
 431 412  12 503  71  19  69 407 540 519 201 527  20 450 167 498 517 376  80 543  26 371 530 541 422 549
 465  22 446 467 416 145 170 637 493 208 555 112 529 161  41 523 623 550  28  34  89 453 175 464 507 488
 290 522   4 544 108 241 561  70 462 148 562 456 238 469 556 542 512 389   6 502 138 183 260 485 155 398
 578 272   2 581 252  46 440 439  13 146 463 413 472 332 417 125 487   1 457 460 360 430 532 345 427 311
 147 381 425 296 292 353 357 509 511 274 528 480 494  96 379 327   7 495 496 377 271 525 159  43 228 351
  56 510 399 388 415 202 323 394 569 254  35 380 349  59 350 308 346 383 358 535 316 461 135 442 275 559
 256 364 300 408 131 169 369 352 390 264 386 343 295 317 334 481 420 297 324 237 370 391 314 313 524 452
 199 393 299 266 499 281 330 342 436 204 319 347   9 395 320 339 302 500 163 454 318 409 354 437 396 490
 361 441 298 312 325 322 321 378 340 428 192 366 434 336 338 213 179 400 291 341 421 309 326 356 368 405
 614 363 265 257 374 387 329 458 215 601 513 328 277 294 210 303 362 289 258 219 251 230 373 433 261 337
 479 188 225 205 307 636 231 276 164 611 622 403 226 286 621 315 283 591 196 234 248 180 306 174 616 178
 259 253 617 331 477 451 255 333 245 282 627 224 243 176 273 304 672 267 221 242 505 538 435 184 124 263
 491 160 603 171 189 473 232 268 673 385 539 246  64 200 293 132  53 658 262 287 583 117 438 639 367 278
 229 515 285 280 560 455 445 642 177 414 197 279 209 240 249 186 165 284 649 573 545 153 563 212 110 185
 572 115 101 182 585 632 655 158  95 372 250 143 676 152 216 355 122 136 537 675 570 166 667 217 392  60
 618 137 288 214 516 402 195 119  38 548 207 194 662 630 594 222 187 156 310 142 654  40 668 595 404  61
 126 223 471  58 600 558 244 144 206 671 181 149 582 470 103  99 172 193 531 236 646 656 359 419 598 106
  86 382 608  88 114 596 651 121 447  50  85 670 592  84 424  31  55 129 476 168 604 423 666 653 547  51
 375  66 652 127 580 554 628  93 105 406  39 150  87 459 590 643 123  76 492 120 429 508 663 660  82  94
  91 647 344 659  62 648 650 139  72 486 335  33 631 151 626  98 107 644 607 130 501 235  65  97 664  79
  45  83  81  57 610 634 606 674  67 141 140 665 669  52 620 661 365 190 635  74 418 588  17  42 589  78

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.3666e+06us (= 6366.6ms, 6.3666s)
Wall-clock time (full program): 6.42096e+06us (= 6420.96ms, 6.42096s)
Satisfaction error: 0
Number of search iterations: 1245
Number of local moves: 628 (including on plateau: 225)
Number of local minimum: 51 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 339  67 647 123 668  18 463 512 303 184 636 640 431  51 129 547 545  32 174 384 612 178 538  38  69 473
 596 675  49 137 614   9 398  68  39 192 669  86 674  52 523 344 660  97 229 625 183 604 128 595 479  76
 161  59 633 383 316  35  53 421 426 455 152  48 510  96 557  15 536 202 587 632 188 145 443 657 666 425
 659 468  65 274 599  43 565 167 106 330 101 136 624  99 116 652 107  78 551 427 139 606 654 644 558  33
 450 124  64 341 236 387 308 135 114 556 294 155 138 171 662 511 191 665 430 594 487 643  98 190 656 201
 661 368  79 453 524 589  14  40 223 219  55 150 444 180 637 325 501 130 570 602 250 482 238 213 493 361
 399 210 298 553 617 118 671 291 525 280 240 163 584 281 189 592 151 121 583 653  87 108 104 143 663 177
 258 211 126 205 449 515 379 619 544 528 318  62 626 198 170 527  21 593 253 564 196 176 307 245 539 172
 546 462 323 597 289 269 208 220 315 273 181 263 179 623 388  74 507 631 650  36 244 262 288 447 393 133
 470 296 370 609 362 434 456 168 420 366 194 185 173 259 186 554 504 517 327 389 310 232 230 243 502  45
 575 338 260 251 438 416 272 641 206 252 248 351 261 182 342 234 600 199 484 490 385 216 235 322 348 255
 226 312 209 424 400 242 285 284 221 271 548 287 486 655 394 615 239 301 290 249 277 346 268 309 358 305
 357 363 313 237 433 328 598 306 367 381 343 282 329 403 314 560 302   6 295 461 350 428 111 293 417 224
 317 534 369 276 336 408 375 349 478 166 254 373 404 225 331 364 283 324 436 481 475 334 110 352 353  94
 131 513 485 415 321 278 402 337 380 376 257 397 374 264 246 299 333 292 390 477 360 319 132 437 266 320
 159 105 469 153 378 418  31 395 405 476 270 448 332 432 466 267  89 672 435 401 563 480 356  17 144 440
 157 460 586  26 335 465 529 354 326  58 498 533  95 474 304 265 413 141 311 217 670 275 406 300  61 542
   3 611 355 562 365 442 119  42  44 552 115 347 233 472 297 508  80 676  73 411 256 505 514 164 382 673
 429 386 422  30  63  82 559 613 359 218 664 457 621 509  24 231 410 555 212  56  10  27 649 445 566 204
 146 441 459 169 193 412   8 483 228 154 345 371 165 446 516 492 618 506  29 407 156 392 521 503  72 569
 214 391 423 574 241  34  90 489 499  81 532 495 120 537 573  85  84 439  71  22   2 500 620 667 451 567
 187 497 627 247 409 622  25 109 582 471 590 646  41 458  57 222  88 286 147  66 520   4 561 638 100 601
 134  91 543 207 113 541 571 588 452 522 630 414 158 616 454 203  92 162  75  60 648 651  11 227 103 535
 572 576  13 605   7 568 607 526 494 603  47 581 117 279 658 125 491   5 519  20 160 488 608   1  19 112
 585  46 577 610  83 550 396 496 530 195 518 467 142 200  93 140 377 580 149  23 628  28 549  77 127 635
  70 197  37 340  12 578 419 148 215 642 102 464 540 639 175  50 579 591 531  54 645 372 122 634  16 629

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.3129e+06us (= 8312.9ms, 8.3129s)
Wall-clock time (full program): 8.36487e+06us (= 8364.87ms, 8.36487s)
Satisfaction error: 0
Number of search iterations: 2080
Number of local moves: 818 (including on plateau: 244)
Number of local minimum: 175 (including on plateau: 45)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 648 139 616 609 547 107 177 516  18  50 196 145 518 656 112  63 445 460 651 583  91 475 461  81 172 265
 504 613 178 667 585 117  76 483   5 141 121 160 509 662  42 161 436 634 573 147  55 610 481 119 665  57
 550 654 523 159 596  97  77 144  87 254 150  45 566 530  79  62 155 619 666 617 194 593 456  86 183 659
 548 156 537 672 400  69 652 510 102 158 153 413 399 552 197  36 106 376 575 605  90 332 361 125  13 664
 580  68 377 115 244 184 645 135  88 165 336 202 637 556 283  93 597 601 168 491  70 568 424  85 489 600
 595 228 218  84 612 179 261 171 173 233 167 590 627 346  96  33 577 618 250 629 398 289 572 185  32 638
 441 108 608 134 164 528 130 644 207 122 675 563 594 673 189 295 570 162 131 371  95 623 437  64  83 190
 668 120 598 114 274 242 404 635 305 227 223 642 221 199 154 231 506 187 653 166 212 549 505 243 286 237
 499 138 354  72 329 396 214 323 260 146 267 246 324 174 372 206 432 676 280 259 671 649 420 247 192 655
 403 236 294 186 362 643 182 660 497 219 275 615 292 255 203 188 387 191 284 306 495 674 230 234 277 213
 440 263 471 296 367 669 409 492 248 240 229 298 624 313 142 208 463 307 222 211 278 557 288 148 253 365
 269 149 326 317 325 631 224 391 279 281 264 314 241 321 331 431 466 308 287 301 315 302 531 406 386 405
 373 270 257 395 239 328 388 316 333 318 268 390 285 193 555 498 355 124 216 374 496 204 453 385 349 439
 350 290 235 245 343 364 344 309 430 335 473 370 252 392 382 417 276 435 402 297 180 383 226 459 300 312
 152 337 479 378 410  15 384 304 320 418 293 442 421 448 358 527 366 258 272 232 273 359  39 438 485 393
 217 379 519 282 357   7 397  22 330 544 220 488 345 303 299 501 426 502 465 464  44 356  89 476 380 389
 151 484 470 339 423 415 181 128 363  14 419  26 427 412 411 338 487 353 469 271  46 341 551 455 446 381
 143 262 369 451 467 569 565 210 311 433 340 564  71 542 334 480  74 517 457  82 416  17 132 545 394  56
  31 574 113 450 511 520 375   9 368 490 508 225 111 347 429 522  92 434  80 462 532  19  30 414 661 494
  10 360  99 443 500 428 621 477 524 582 342 157 110  67 352 581 200 407 449  23 521 310 101 604 482  51
  94 540 176 526 103 447 474 493 628 472 579 170 215 408 567 422  29  98  28 118 539  37  54 513 533 538
 105 571  25  27 603 209 534 129 541 587 458 486 175 116 514 558  43 266 452 468 592 136 562 620   8  16
 249 641 319 351   3 238  60 251 576 529 515  53  58  21 614 611 454  35 478 163 559  59 201 602 625 536
 327 584  75 425   1 670  73  61 553 561 535  47 626 126 588 630  78  41 169 205 578  20 546 606 543 133
 198  38  40 401  34 589 632 640 633 636 137 647  49 123 591 657 586  65 100 444 507 291 639  11   4 109
 256 599 525 663   2 140 322 348 622 646 658 503 104  66 607  52 195 127  24 512 554  48  12 650 560   6

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.74308e+06us (= 3743.08ms, 3.74308s)
Wall-clock time (full program): 3.79553e+06us (= 3795.53ms, 3.79553s)
Satisfaction error: 0
Number of search iterations: 795
Number of local moves: 477 (including on plateau: 156)
Number of local minimum: 39 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0

