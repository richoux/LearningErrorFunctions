@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 706  53 115 171 688 157 578 708 737 686 119 418 547  30 429 716  51 666 151 506 103 570 767  76 310  54 110 768
  15 779  39 781  43 604 631 762 722 652  83 208 756  60 129 682  38 759  91 634  84 625 778  32 176 452 314  61
 131 732   5 116 130 209 776 595 487 783  33 551 639 147  19 622  20 575  78 531  36 640 766  47 760 695 128 739
 142  97 308 205 210 180 784 769 731 587  66 720 563 158 149 692 148 630 133 471 144 492 627 200 752 773  93 166
  89 127 194 212 724 111 749 605 771 464  41 422 561 273 169 747  79 371 113 710 225 757 233 780 675 114 457 217
  99 772 117 154 122 283 672 736 689 645 230 664 678 214  70 484  63 156 168 628 338 674 244  21 470 753 703 143
 336 222 220  55  16 265 619 286 427 655 255 711 763 352 606 704 392 121 197 576 302 774 782 312 680  71 246  45
 633 118 289 185 239  88 198 636 250 761 388 671 558 226 224 477 256 496 770 629 243 748 196 153 491 319 393 355
 223  75 329 259 412 203 247 734 754 690 280 583 509 300 580 480 320 669 228 679 684 541 204 218 232 173 248 136
 191 132 175 257 241 764 237 500 439 511 466 213 644 236 231 667 293 681 183 505 723 401 296 324 663 138 518 361
 437 347 291 334 252 382 417 423 348 442 215 650 741 189 740 504 321 775 278 519 229 258 274 326 485 376 221 216
 373 330 389 288 298 610 385 564 340 391 323 349 342 264 199 473 431 374 493 254 306 746 360 409 565 337 548 249
 202 402 339 266 188 192 263 554 750 700 270 363 325 454 777 378 407 450 292 332 381 566 277 343 432 449 311 327
 375 253 462 271 522 190 126 267 313 728 397 362 460 527 353 260 410 242 331 474 366 387 441 545 524 497 517 390
 396 424 245 368 600 290 421 272 316 394 453 269 465 488 261 443  94 351 419 367 557 430 521 535 416 502 384 309
 489 445 467 386 369 476 404 364 301 333 525 581 456 365 560 398 377  64 440 275 335 112 414 556 415 529 155 399
 597 294 613 438 481 303 523 285 425 357 403  24 150 426 341 370 448 356 436 405 486 358 507 447 577 582  40 318
 461 433 510 607 451 501 463 162 567  98 317 195 152 549 572 395 499  80 383 251 542 428 520 637 109 411 165 532
 479 282 372 528 533 380 420 193 586 124 400 295 177 596 472 276 359  82 588 406 483  11 543 458 182 589 469 707
 590 609 515 498 546 573 550 187  22  17 646 206  68 468 234 167 585 307 514 227 665   6 490 635  81 569 503 512
 537 434 602 714 593 641 559 579  52   1 601 174  26 662 134 105 660 592 614 120   3  50 562 616 102 478 482 297
 459 539 659 571 584 240 345 108  12 164 444 304 163 534 701 238 495  95 713  57 624 328   2 657 141 654 643 516
 568 538 553 683 718  34 211 159 219   8 712 591 161 125  87 262 699 552 758  23 656  73 170 598 207 618 513 494
 677 617 687 536   4 697  27 137 279 235 717  42 305 555 668  58 744 322 721  90 181  59 698 145 455  74 648 612
 673 743 726  35 603 742  77  65  44 139 626 287 379 691 608 100 594 526  13 346 599 140   7 540 354  14 658 661
 676  31 408 611  96 475  85 172 284 201 620 184  49 702 653  28 755  18 694 344 530 413 107 101 615 693 730 715
  86 435 623 696 642 751  37  62  69 178 651 638  72 729 299 104 733  48 446 508 621 268 179 574  92  67 647 735
 350 727 738 765 685 649 186 106  56  46 709 315 281 670 725 160 719 632 745 123 544 135  25 705  29   9 146  10

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.52122e+06us (= 5521.22ms, 5.52122s)
Wall-clock time (full program): 5.58136e+06us (= 5581.36ms, 5.58136s)
Satisfaction error: 0
Number of search iterations: 1070
Number of local moves: 645 (including on plateau: 265)
Number of local minimum: 62 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 781 700 105  13 375 143  48 211  74 698 684 687 712 755 261  40 711 452  41  60 153 758 119  28 775 632 702 272
  12 610 640  49 707 172 242 703 264 753 492 716 725 715  92 219 729 647 271  18  63 122  16  36 743 102 438 694
  73 635 642  59 165  31  26 696 108 651 764 697 594 728 104 115 645 601 141  37 262 669 434 154 724 388 167 680
  21 685 699 437 322  53   9 659  78 746 198 636 745 672 257   7 572 621  96 130  25 619  33 579  17 631 720 723
  52 718 641 284  72  30 330 638 180 670 287 571 483 709 125  47 549 566 184  65 245 554 186 328 686 616 581 593
 344   8 208 183 663 303 150 513 249 533 505 752 577 567 445 453 661  56 116 523  22 666   3 449 639 655 110 637
  86 681 618 111 627 282 145 612 288 630 205 583 551  55  38  76 734 603 135 221 163 402 517 103 671 653 538 662
 114 379 564 149 450 139 472 161  23 529   4 634 473 569   5 574 512 623 159  14 195 727 643 535 674 604 419 646
 307 489 556  71 722 600 516 605 595 586  84 339 460   1 306 428 443 431 323 258   2 406 503 462 587 290 101 519
 397 588 568  83 578 318 181 480 218 358  27 456 470 518 548 557 310 544 311 403 177 508 207 400 614  32 531 608
 152 542 471 178 463 580 194 451 498 622 398 427 589 545 263 563 526  19  81 455  77 298 500 439 575  29 576 479
 315 420 294 359 565 602 422 487 393 164 496 468 409 286 446 407 314 454 337 537 185 394 466 425 246 144 532 423
 415 461 477 173 440 371 412 546 374 494 408 296 361 321 457 372 506 482 196 539 377 354 329 302 416 319 363 429
 237 527 495 151 436 418 362 485 528 168 259 404 520 349 417 499 341 326 481 376 269 324 490 304 345 414 458 607
 378 441 514 541 357 353 401 281 390 320 501 491 352 591 300 299 247 395 430 325 333 448 433 202 444 465 347 411
 442 356 484 561 267 547 292 305 346 256 396 381 384 364 370 502 331 559 493 334 776 650 216 243 317  93 312 413
 467 382 295 615 293 276 244 368 278 274 383 225 777 476 682 336 365 233 424 316 507 301 585 273 369 609 277 360
 238 223 435 765 783 560 459 432 240 170 275 308 335 340 297 226 309 191 486 706 656 509 280 751 332 253 146 285
 497 255 248 705 201 197 693 367 399 410 386 338 260 313 220 736 342 778 228 239 511 380 717 629 268 131 343 199
 611 109 254 620 231 649 366 524 389 348 721 289 227 206 667 719  67 174 713 291 570 217 241 215 136 598 648 190
 469  97 175 592 327 761 222 730 683 100  79 387 266 355 731 617 373 107 665 689 582  35 351 270 171 230 770 156
 474 179 283 543 596 209 521  50 626 113 590 251 162 148 421 214 756 129 510 550 625 748  99 229 232 525 652 555
 754 210 137 599  87 624 769 234 701 265 782 118 160 235 738 147  10 213 677 767 515  51 668 741  20 504 166  98
 660 112 193 766 737 536 740 236 522 464  85  66   6 200 613  89 123 391 762 540 679 350 710 673 488  70 121  58
 688 204  95 405 189 732 675  15 744 252 628  75 132 142 530 657 155 158 695 757 772 157 691 676  54 169 426 117
 779 120 747 584 133 654 658  69 774 250  62  45 192  46 478 708 134 392 742 726 692  94 664 597 106 385  91  68
 780 771 128 690  80 768 763  42 475  39 558 126  57  34 573 644  43 212 534 552 773 188 140 760 203 714 279  64
 447  88  24 704 124  82 678  90 553 127 733 224  11 750 606 739 182 633 759 562 784  61 749 187 138 735 176  44

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.67804e+06us (= 8678.04ms, 8.67804s)
Wall-clock time (full program): 8.73657e+06us (= 8736.57ms, 8.73657s)
Satisfaction error: 0
Number of search iterations: 1781
Number of local moves: 743 (including on plateau: 275)
Number of local minimum: 130 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 738  37 133  67 592  75 635 680  91 627  28 672  63 639  44  16  15 740 191 552 565 733 606 771  76 136 764 704
 661 765 101 119 698  41 739 783 128 153 397 775  18 782  45  14  20 659 175  79  66 712  89 758  34 751 711 717
  92 773 215  27 664 178 737 591 269 641 127 154 118 123  61  51 767 217 706 558  46 536  42 735 343 757 760 702
 577  48 752 703 615 106 551 590 769  58 213 780 139 778  43  13  49 180 515 257 134 677 109 714 768  69 279 504
  88  64 218 747 754 283 693 632 219 683  12 746  60  99 414  36 186 755 181 750 234 690 140 770 224 165 604 543
  55 205 240 111 745 160 716 720 117 685 297 132 201 176 364 179 249 227 744 640 605 667 774 593  35 149 513 691
 246 761 262 204 359 779 585 363 155 621 196  65 724 339 198 220  77 663 679 167 620 458  50 272 244 289 676 718
 116 715 263 121 674 146 651 701 233 603 144 258 159 212 534 183 264 295 781 431 776 524 152 304 319 150 594 687
 266 235 360 325 459 261 643 195 766 245 337 777 495 151 317 294 169 336 662 729 171 713 166 335 137 347 560 539
 172 248  93 580 429 267 469 142 292 772 389 259 108 784 308 763 321 557 499 564 194 653 310 334 277 164 523 519
 211 375 675 207 759 719 756 367 265 410 357 298 371 241 285 256 398 485 348 238 177 486 372 253 476 188 762 255
 373 252 226 386 446 462 475 200 369 637 471 328 281 362 350 282 491 327 455 322 405 439 387 433 555 345 481 450
 306 549 280 368 427 441 413 646 452 510 331 232 320 355 229 273 436 329 316 145 649 465 447 445 463 521 391 251
 399 346 286 460 333 474 290 480 330 340 482 303 438 301 356 420 457 288 374 546 467 318 366 516 453 378 409 380
 418 402 385 311 383 408 344 572 239 271 529 342 395 287 361 214 412 403 488 274 633 352 392 530 566 284 394 401
 601 514 597 573 315 406 276 358 492 242 468 578 230 416  33 353 502 156 313 443 493 254 370 496 365 483 473 190
 411 508 449 382 199 388 421 270 381 437 407 396 296 501 307 354 390 293 237 584 404 338 440 432 377 600 291 497
 376 426 525 477 300 494  86 278 512 312   3 541 542 434 323 678 422 478 553  17 444 314 547 415 607 505 192 189
 506 655 595 537 208 424  82 498 568  19 579 379 509 609 120 570 243 113 490   1 428 223 538 526 528 671 197 174
 563 430 562 527 206 500 110 425  21 222 451 470 581 645 731 556  98 162 417 487 464  87 456 520 484 622 182  11
 569  52 545 695  57 574  68 393 479  71 625 588 660 489 589 657 384 129 423 522  26 228 582  95 599 550 216 125
 576 442 617 472 309 668 454  90 700  73 630 135 652 596 736 540 726 114  47 138 548   2 742  10 302 518 124  29
 400 126 349 561  40  22 236  38 466 623 535 173 647 587 665 681 598 610 268 532 533 210   9  74 692 586  24 705
 507 634 689 105 332 419  85  97 531  84 122  59 710  31 741 722 648  81 170 638 608 203 748 163 628 642 435 158
 619  78 686  25 324 231 147 148 517 554 682 636 644  53 721 575 673 351 143 275 611 341 707 461   5 583 104  96
 626 670 221 614  39 618 187 130 247 624 725 654 696 631 732 613 559 656 141 185 202 102 602  23 260   6 115 112
 511  30  54 616 193 749  80 100 694 305 723 103 708 299 699 743 727 728 567 250 326  56 753   8 629  83 184  72
   7 650 612 669 131 697  62 503 688 168 730 157 225  70 684 734 709 658 107 666 161 209  94   4 544 448  32 571

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.0059e+07us (= 10059ms, 10.059s)
Satisfaction error: 3
Number of search iterations: 1718
Number of local moves: 804 (including on plateau: 299)
Number of local minimum: 127 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0

Problem in column 4: 67 119 27 703 747 111 204 121 325 580 207 386 368 460 311 573 382 477 537 527 695 472 561 105 25 614 616 669 => the sum is 10989 rather than 10990
Problem in column 7: 635 739 737 551 693 716 585 651 643 469 756 475 413 290 344 276 421 86 82 110 68 454 236 85 147 187 80 62 => the sum is 10991 rather than 10990
Problem in diagonal 1: 704 711 757 768 770 774 458 776 729 499 485 491 273 356 287 230 396 3 19 21 393 454 22 332 25 221 30 7 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 323 747 158 732 212  45 175 760 637 232 204 724  74 206 726 102  12 667 609  56 595 670 718   3  27 245 676 655
 327 401 662 113 759 711 351 743 680 187 269 498  95 139 708  58  33  11 166 341 697 183 699 627 237 131 455 709
  81 640  53 701 359  70 533 330 682  19 301 719  98 313 700 674 101 309 230  26 688 648 690 654  31   6 704 630
 143 604 357 761 633 714 467 735  79 625 134 677  54 256 695  42 148  37 184 321 669  18 619  35 493 276 554 660
 279 769 642 668 590 634  93 659 645 730 605 665 128  55 612  51  52 132 122 214  82  50 663  73  41 445 684 607
  47 573 656 638 144 649  83 561 657 689  84 606 201 556 565 616   1 138 346 479 601 249  16 481 136 260 326 632
 129 635 671 584 211 614   5 581 583 458  66 369 340   8 696 512 576 537 615 320 651  17 636  68 273   7 258 570
  36 641 542 543 618 548 379 568 223 598 471 192 608  13 591 666 550 331  63 180  22 339 519 596 149 475  44 485
 114 535 579 547 459 567 145 431   9 628  24 531 572 525 480 490 501 520  75   2 514 226 564 511 303 461  90 587
 562 429 510 646 549 673 213 494 593  72 478 115 150  89 536 586 552  25  14 196 534 275 532 546 432 457 181 551
 527  15  10 545 489 235 240 460 421 382 557 484 453 521 474 508 437 466 515 186 422 434 419 504 408 233 127 518
 417 444 558 482 405 381 263 413 610 397 473 224 383 476 436 452 170 503 440 270 435 300 424  80 190 509 299 555
 560 386 376 418  20 416 262 441 411 462 472 456 368 463 450 289 513 523 443 362 257 197 449 404 264 491 412 425
 394 403 500 438 390 377   4 451 470 487 409 384 448 344 446 356 338 426 389 468 395 337 375 433 365 328 318 517
 454 522 423 415 387 393 469 361 348 325 360 363 477 342 349 447 343 292 304 391 392 370 488 367 388 400 329 492
 333 427 345 287 407 430 497 414 385 378 687 307 611 784 398 271 315 399 296 373 298 410 283 350 402 252 316 335
 297 334 285 282 274 324 782 234 239 505 277 783 267 372 380 280 310 374 250 571 242 623 305 538 526 396 740 200
 286 347 366 207 744 312 681 295 306 314 617 311 229 355 241 167 352 620 631 528 243 575 268 288 507 259 622 319
 371 219 178 221 164 290 712 247 265 723 765  30 238 742 231 228 420 294 582 506 442 585 244 225 600 652 499 317
 594 439 210 222 322 248 729 332 553 199 191 465 354 755 251 179 353 281 626 770 194 530 291 284 539 516 358 205
 706 137 208 195 152 266 602 707 109 278 644 464 692 733 169 157 227 216 202 578 781 154 293 147 589 749 580 255
 559 155 308 117 780 246 486  94 104 272 727 629 253 126 140 763 597 198 752 728 683 406 161 163 643 236 588  76
 261 146 693 203 171 529 661 151  78 658 678 153 220 773 254 566 679 776 428 569 209 364  49 737 664  60 173  87
 736  46 107  38 713 215 768  57 185 302 193 189 754 502  28 762 650 621 720 495  59 715 159 188 702 757 112 217
 496 156 738  23 174 165 563 168 745  29  91 336 751 577 142 771 544 675 647 541 176 756 110 653 125 119 603 116
 772 105 672  62 777  67 100 218 775  85  99 135 750 103  34 133 685 694 710 725 592 121 172 731 698 746 160  69
 703 624  86 124  48 118 639  64 106 182 574 120 717 721 162 741 767 177 599 108  40 722  65 691 524 758 739  71
 483 111  97 778  39 753  88  21  92 774 540  61 705 141  96 123 764 748  32 686  77 716 779 613 734 766  43 130

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 2
Number of search iterations: 2326
Number of local moves: 880 (including on plateau: 344)
Number of local minimum: 162 (including on plateau: 51)
Number of resets: 1
Number of restarts: 0

Problem in row 12: 417 444 558 482 405 381 263 413 610 397 473 224 383 476 436 452 170 503 440 270 435 300 424 80 190 509 299 555 => the sum is 10989 rather than 10990
Problem in row 15: 454 522 423 415 387 393 469 361 348 325 360 363 477 342 349 447 343 292 304 391 392 370 488 367 388 400 329 492 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 169 691  56 774 620 643 165 719 390 194 205 178 161  28 663  10 112 171 762  44 502 143  22 713 758 696 753 648
 168 658 724 702 737 640 196 700 185   7 741 139  23  26 763 725  49 175 654 241 157  18  54 690 594 701  46 476
 604 744 699 733 232 662 626 219  77  39 743  96 183 692 750 659 227  65 531  98  43  19  15 714 159  16 573 772
 242 677 563 267 186 681  73 739 281 449 367 153  45  35 752 634 151 172 586 137  57 113 249 697 593 723 650 718
  70 305 611 754  37 621 636 671 254   2 481  92   1  64 651 668  85 600 710  40 694 155 115  76 703 599 628 667
  61  68 684 637 618 230 489 736 247 319 142  13 277  29 584 528 173 292 537 631 726  55 126 619 623 661 647 238
 286 264 742 458 564 534 635 574  21  12 587  38 200 596 522 536 105  74 645 203 523  79 274 609 149 591 616 553
  90  33 560 610 148 554  30  50 276 189 682 388 499 705 582 572 128   8 561   9 545 576 595 575 532 488 515 490
 120 103 557 592 577 579 487 608   5 273 627 482 180   4 556 478 144  14 629 265 448 439 495 470 507 562 615 174
 118 233 642 405 459 474 558 568 215 283 633 463  53 510 544 498 237 391   3 602 434 364 496 493   6 360 475 473
 542 107 511 551 346 614 432 316 160 135  47 269  27 484 605 444 607 301 312 581 539 504 430 543 461 585 446  91
 550 225 519 402 606 509 361 491 108 282 460 272  11 521 440 373 146 465 526 571 397 404 369 477 514 455 452  84
 454  41 396 451 406 471 371 315 141 559 294 428 325 401 313 417 453 503 429 377 327 483 392 370 612 435 385 441
 350 485 462 380 472 427 324 421 288 290 501 530 344 348 403 259 339 332 409 506 408 437 375 420 220 469 410 381
 445 368 500 293 492 438 379 525 398 450 314 374 357 407 326 347 456 311 399 395 400 356 358 310 426 466 317 383
 331 378 353 393 422 411 779 260 341 221 275 418 776 330 424 494 386 304 268 394 320 384 547 287 352 217 387 538
 296 258 121 271 365 436 376 415 425 676 261 669 589 255 443 363 468 720 412 243 307 328 433 343 280 512 303 423
 285 588 359 322 262 340 253 279 457 541 745 362 520 354 372 413 513 517 306 533 295 447 176 223 342 299 208 679
 735 722 308 351 338 323 318 248 731 335 321 770 284 349 136 206 644 414 777 211 302 263 234 170 766 355 166 213
 337 672 416 239 182 179 590 150 784 641 389 639 625 256 231 201 653 707  87 646 119 329 333 240 228 298 236 583
 291 768  52 270 177 214 245 751 738 656 181 655 715 210 111  97 693 747 289 158 760 764 167 334 216 309 229 193
 749 638 366 212 685 199 666  83 580 567 546 566 687 188 131 192 535 613 152 244 101 706 728 195 257 110 222  72
 721 516 266 300 224 250 226  95 664 686 246 756 716 680 209 114 730 711 190 198 202 278 727 252 464 162 156 251
 527 129 109  63 783  42 191 569 734 603 709 652 765 729 187  24 555 704 138 746  62 673 698 235  78  93 132  60
 540 497 102 197 163  88 117 297 712 624 123 597 480 778  80 154 598 578 505 767 740 601 570 130 345  20 145 442
 518  94 127 207  67  36 780  34 467 717 104 218 617 665  58 771 622 419  17 670 708 755 678 688 164  25 630 134
 759 204  69  81 147 336 565  86 782 479 184 649 773 689  48 781 486 549 125 732  99 548 674  66  89 100 508 382
 632 524 116  75 675  59 122  71 529 761  82 124 757 657 106  32 695 133  31 748 775 769 660  51 552 683 140 431

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00599e+07us (= 10059.9ms, 10.0599s)
Satisfaction error: 2
Number of search iterations: 2444
Number of local moves: 861 (including on plateau: 327)
Number of local minimum: 175 (including on plateau: 40)
Number of resets: 1
Number of restarts: 0

Problem in row 2: 168 658 724 702 737 640 196 700 185 7 741 139 23 26 763 725 49 175 654 241 157 18 54 690 594 701 46 476 => the sum is 10989 rather than 10990
Problem in row 17: 296 258 121 271 365 436 376 415 425 676 261 669 589 255 443 363 468 720 412 243 307 328 433 343 280 512 303 423 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 748 183 571 743 411 722 552 165  41  38  44 616  14  39 426  15  11 700 762  70 706 459 669 157 737 730 289 372
 114 781 570 147 720 351 265 196 719 478  53 708 714  84 746 111  75 523 689  48 670  72 561  67 313 560 437 218
 122 685 447  86 591 704 224 154  45  87 103 184  17 240 726  82 197 744 326 382 694 195 648 712 470 783 664 678
 717 500 639 422 713 630  91 212  55 226 109 769  95 121 698   9 153 778 404 158 751  43 779  61 239 777 590 251
 140 740 662 124 734 710 166 118 115  36  94 621  74 233 647  92  24 724 701  56 334 207 739 784 185 563 593 774
  25 539 301 767 638 401  88 214 199  77 460 520 145  66 756 102 159 673 729 391 776 135 682 149 770 398 668 162
 169 671 318 588 703 641 775 456  54  79 304 160 388 168 163  81 180 605 614 127 640 346 725 247 656 267 736 129
 299 651 386 248 683 653 249 187 144 134 515 453 276 345 753 139 272 336 506 469 377 220 574 354 529 507 553 178
 194 759 339 263 635 541 371 173 773 236 306 155 343 177 193 356 223 464 545 750 287 137 732 602 300 259 658 219
 359 509 237 357 540 772 285 230 229 626 292 375 311 430 156 711 125 566 579 151 676 228 530 322 378 192 472 352
 320 483 705 308 606 450 256 150 250 264 764 782 291 146 141 170 323 452 642 347 350 290 425 446 257 275 652 445
 392 324 516 200 595 578 288 432 188 423 302 395 412 338 310 201 408 434 585 189 366 329 735 428 379 270 535 438
 112 449 315 439 645 421 316 325 252 387 258 435 780 344 190 362 198 495 709 429 348 417 410 420 312 370 499 353
 481 462 461 340 384 699 405 232 174 305 457 390 367 269 534 402 407 385 376 477 381 409 331 361 479 365 397 260
 403 373 333 358 337 424 368 442 414 364 309 511 393 374 476 394 487 482 330 480 319 296 360 389 261 486 342 484
 293 448 433 594 286 335 491 282 444 471 502 436 567 383 496 455 380 406  47 413 332 262 625   8 278 493 363 467
 419 458 466 294  12 314 317 565 400 586 473 142 321 527 485 440 463 610 557 186 501 465  16 524 526 443 454  26
 609  21 255 427 104 215 537 512 517 475  63 549 490 504 531 555 451  65 179 327 283 576  89 514 589 620 268 665
 562 281 489 600 266 295 548 161 221  20 547 612 243 441 597 596 632 208 297 349 542 598  19 546 117 431 253 519
 554 298  32 601  80 126 572 550 503 577 575 136 505 636 617 543 599 284 271  22 592 666 107 498  59 217 234 536
 522  97 544 209 205  29 603 584 468 533 415  78 492 521 202 696 510 341 279 631 227 573 120 238 644 497 152 580
 650 582  98 608 254 211 106 624 707 611 307 583 687 488  49 643 518 119 241 716 143   2 203 677 242 396 246 280
 654  93  27 558 171 210 556 532 752 494 569 132  33 723 681 508 657 123 273 619 108 581 303 715   6 182  71 659
 702  13 551 222 418  62  73 768 369 538 690 742 637 727   7 528 604 277 116 674  69 649  96  60 629  28 128 613
 564 235  76  64 181 176 559 663 661 679 568 110 355 474  34 622 747  52 138 697 274 634 231 691 100 667 213 525
 245 101 587 633  42  57 628 686 771 766 755  23 607 721 113 754 718  58   4 627  83 761 204 206 680   5 105  50
 618 244 416 175  35  99 655 693 765 749 399 148 675 733 133 763 728  68  51 692  30 695  31 191 167  37 328 672
   3  10 216 615   1 164 646 684 760 731 757 225 758 738 130 660 741  18  40 513 131 745  46 623 688 172  90  85

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00607e+07us (= 10060.7ms, 10.0607s)
Satisfaction error: 2
Number of search iterations: 1783
Number of local moves: 843 (including on plateau: 257)
Number of local minimum: 144 (including on plateau: 34)
Number of resets: 0
Number of restarts: 0

Problem in row 15: 403 373 333 358 337 424 368 442 414 364 309 511 393 374 476 394 487 482 330 480 319 296 360 389 261 486 342 484 => the sum is 10989 rather than 10990
Problem in row 22: 650 582 98 608 254 211 106 624 707 611 307 583 687 488 49 643 518 119 241 716 143 2 203 677 242 396 246 280 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 781 745  74  66 592  15 762 503  72 474  58 165  80 609 736 507 681 782  32 574 127  79 733 205 615 722 118  83
 667 218 462 633 641  87 106 370  51 515  60  69 460 570 170 708 730 710 119 120  42 539 744  48 612 395 603 541
 343 729 239 195 752  49 759 777  64 658  65 172 610 577 632 252 725 712  99 242  26  61 661  73 650 640 123 105
  43 115 555 769 585 183 198 648 124 470 780 434 593 217 100 655 724 758 230 135  45  27 600  75 571 757 320 278
 199 422 778  90 675  46  77 624 143 125 148 153 706 682 130 649 728 698  50 134 774 194 696 760 718 169 238 184
 254 362  39 221 587 583 144 494 107 697 419 298 523 453 705 693 761 414 202 129 563 204 174 151 700 711 122 280
 128 246 423 109 690 111 768 621 450 695 237 196 767 751 139 739 766 141 104 197 619  97 775  89 505 285 225 117
 424 489 476 155 487 216 251 776 644 772 771 175 527 666 279 160 271 159 176 302 750 229 142 260 704 244 200 286
 240 318 179 227 552 339 377 521 784 727 307 694 770 231 220 763 325 245 140 147 701 215 314 171 651 360 309 163
 467 403 517 259 756 152 274 580 228 765 267 212 716 678 167 297 383 214 773 268 659 313 391 344 243 206 182 276
 525 264 737 234 498 287 283 496 308 657 783 258 371 353 291 295 464 372 187 342 625 288 292 299 647 232 269 333
 449 662 606 331 746 219 284 466 322 281 210 664 717 373 326 375 327 277 226 329 348 294 224 764 324 255 330 261
 213 588 412 486 509 475 273 376 679 290 397 418 374 392 379 355 369 312 589 439 352 323 380 304 296 497 247 266
 402 400 427 428 433 350 481 479 381 389 317 398 448 382 315 401 346 310 306 447 347 358 338 388 426 384 469 440
 482 150 411 340 201 429 526 396 420 354  82 363 437 432 408 349 442 393 399 543 406 528 416 387 413 410 488 385
 265  98 191 386 334 456 300 499 332 436 443 407 441 345 478 560 445 417 495 444 473 484 510 366 336 590   8 451
 303 241  57 518 378 357 514 359 454 463 121 319 472 452 529 519 253 516 465 446 257 485 533 457  62 468 562 430
 157 415 235 546  76 435 511 137 581 108 455 596 101 622 409 404 341   3 550 483 471 458 584 576 551 116 568 501
 425 368 113 431  92 542 538 126 522  59 566   4 282 492 602 565 461 548  24 553 275 545 351 597 328 567 512 502
 316 186 367 561  67 531 459 321  78  21 569 575 114  70 524 663 405 586 508   9 438 676 500 646  13 490 582 715
 421 361 504 595  84 645 572  55 480  96 520 145 180  56 630 547 604 573 540 638   2 564  16 549  41 477 537 558
 311 506 305 534 394 611 365 289 364 173 491 643 103 110 493  68  88 620 613 607 208  11 559 608  36 535 642 703
 513 637 544 614 193 605 532 156 636 189 557 601 133  95  94  31  23 599 629 688 337 635  38 660   7 591 623  30
 753 530 536  34  10 598 686 256 594 233 554 335 223 154  44  19  18 250 652 616 390 669 671   1 188 628 627 721
  35  28 743 723  91 742 618 192 639 656 270 631 102  52 146  29  53   6 720 579 161 738 249 654 726   5 713 689
 670  20 149  37 190 556  71 185 684 158 779 691 356 222 680 263  25  86 673 702 732 617  14 707 203 138 634 748
 626 755 747 714 211 672 168 248 181 236 683 709 177 301 687  12  54 272 749 741 131 685  22 132 262  33  47 735
 578 734 164 754 166 699  93  40 668 293  81 665 207 653 677 112 178  17 740 136 731 674  63 719 162  85 692 209

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00595e+07us (= 10059.5ms, 10.0595s)
Satisfaction error: 3
Number of search iterations: 2047
Number of local moves: 969 (including on plateau: 412)
Number of local minimum: 150 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

Problem in row 4: 43 115 555 769 585 183 198 648 124 470 780 434 593 217 100 655 724 758 230 135 45 27 600 75 571 757 320 278 => the sum is 10989 rather than 10990
Problem in row 8: 424 489 476 155 487 216 251 776 644 772 771 175 527 666 279 160 271 159 176 302 750 229 142 260 704 244 200 286 => the sum is 10991 rather than 10990
Problem in diagonal 1: 83 603 640 571 760 174 97 750 147 773 372 327 355 315 432 441 319 455 59 78 55 365 605 10 723 149 755 578 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   1 713  85  86 761 109  62 714  69 738 741 731 695 699 179 171 763 192 301 724 671 202  44  46  25 707   9 752
 730 705  26  22 186 230 103 756 303 155 732 694 711 706 213  36 693 191 299 739 412 719  43  72 696 749  34  35
 291 231 268 663 735   3 104 276 140 141 275 700 676 660  99  71 645 110 587 740  82 666 162 590  52 747 704 572
 628 326  68  76 670  40  51 712  81 309 164 692 762 662 262  57 611 265 571 710 428 715  20 677  67 716 638  12
 531 229  66 398   7 480  27 327 187  95 331 673 657 691  90  30 440 650  32 647 565 601  54 576 679 622 652 653
 126 607  14 292 598 130 154 244 108  45 617 649 658 635 210 606 634  60 183 616  77 665 184 626 560 387 646 659
 577 142  41 304 599 483   5 584 287 254 632 589 613 641 145 541 564 135 256 417   2   4 515 575 661 319 573 532
 128 580 245 190 631 583 588  70 543  49  24 517 558 554 114 608 592 123 138 535  58 520 578 539 540 238 538 609
 623 533  78 312 513 522 474 263  53 329 198 618 461 549 146 519 484 534  15  48 482 597 485 489 574 248 562 281
 570 529 208 188 307 605 521 165 266  13 503 557 545 563 568 642 510 486 149 401 507 524 223 139  91 217 527 466
 475 471 308  59 437 470 550  16 553 264  18 492 561 551 511 364 496 434 391 490 170 547 467 445 419  29 525 477
 488 505 325 119 270 424 479 132 464 338 487 429 406 469 459 518 512 348 476 250 514 368 463 394 409   6 439 499
 403 500 386 393 450 493 501 322 536 383 444 451 446 371 491 392 337 259 449 384 516 497  50 430 443 306  42 315
 452 404 294 418 378 129 453 405 509 408 410 420 422 335 447 290 456 382 442 334 379 376 396 389 397 425 438 402
 367 328 431 460 225 672 363 414 380 548 324 285 349 457 455 427 374 317 372 381 357 360 432 332 435 399 333 413
 280 366 411 751 311 316 355 698 300 473 344 318 261 274 388 567 377 330 314 395 373 343 426 353 253 709 289 415
 351 624 481 582 350 185 278 407 251 462 375 295 362 321 235 441 686 416 340 347 279 358 342 345 365 655 313 544
 302 690 556 454 390 359 361 478 252 523 770 239 240 258 615 305 296 472 352 356 227 369 272 346 341 581 298 288
 234 737 506 630 267 277 320 725 559 174 633 683 195 354 723 336 310 218 701 214 283 282 286 199 168 494 233 249
 255 194 594 644 293 260 297 596 530 745 722 212 246 176 370 211 220 780 697 591 323 222 203 167 169 537 271 465
 546 232 612 555 175 226 718 159 273 773 528 237 224 284 674 193 221 744 639 241 753 215 579 197 189 433 209 161
 257 680 728 542 400 180 771 504 675 498 228 131 182 236 619 204 143 768 586 243 207 721 668  98 158 166 178 219
 758 137 717 468 339 760 743 508 708 600 247 151 181 177 779  80 136 566 620  94 685 160 385 242 100 448  74 127
 134 147 742 269 734 777 703 502 664 651 610  73 205 125 681 458  97 156 640 122 593 112 727 423 115 200 124 206
 173 144 648 767 157 781 111 121 669 682 148  75  56 163 595 746  83 726 629  87 754  17 782  88 775 153 755 105
 688 106 769 120  93 687 636 216 772 621 436  61  89  39 604 766  96 133 656 152 196 172 784 765 783 421  65  64
 585 102 729 526 667  33 625 107  84 603  38   8 150  21 117 733 113 552  92 118 602 627 684 759 778  23 764 750
  37  28 654 702  47 776 637 569 774 116  11  10  79  19 201 678 101 643  63 614 495  31 736 689 748  55 757 720

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.18885e+06us (= 7188.85ms, 7.18885s)
Wall-clock time (full program): 7.24733e+06us (= 7247.33ms, 7.24733s)
Satisfaction error: 0
Number of search iterations: 1197
Number of local moves: 700 (including on plateau: 251)
Number of local minimum: 81 (including on plateau: 34)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 333 642 717 716   3  56 310 584  18 389 456 272 409 723 648 704  24 175 102 110 753 654 186 150 683 762  28 383
  76 707 673 747 703 731 700 743  71 705  31 271 734 730 663 678  99  15  95  54 226 154 165 126 132 750  73 138
  10 742   9 746 698 719 508 729 133 752  33 221 718 613 692 645 107 612  26  93 688 765 113 238  44  81 236  19
 164 701 659  20  70 614  14 733  39 618 541 202 597 589 656 208 634 706 652 262 617 644 104 152   7 726  57   4
  67 693 691 727 147 681 635 745   6 593 275  91 230 689  43 378 108 760 676 128 660 725 306   2 699  16 139  80
  30 667 624 670  37  17 628 646 484 622 732 127 465 538 565 328  27 567 596 188 641 159 375  60 517 587  61  32
 286 520 577 582 575 695 499 416 114 632 151  51 161 640 543 607 320 625 522 156 559 194  29  94 564 627  34 217
 214 576 558 579 609 636 561 566 588 510 550  13 581 546 555 314 493 554 329 195   1  38  96 105 443 458 145 177
 231 298 556 540 603 744   8 449 178 246 631 586 630 563 509  49 651 380 592 199 551  59 167 185 417 461 254 253
 502 553 299 494 125 332  86 534 552  35 247 421 498 671 629 471 505 542 524 291 453  98  58 467 547 294 466 296
 322 539 583 686  62 616 531 166 610 269 330 261 276 594 549 481 119 259 620 491 489 120 281 431 451 485 112 257
  11 452 643 503 371 578 143 501 490 468 373   5 410 430 419 442 480 358  12 366 436 399 439 535 355 434 512 425
 274 523 446 325 529  23 382 422 376 429 492 507 438 392 390 411 472 336 526 293 396 228 379 386 445 514 525 131
 353 393 381 470 408 354 342 349 341 359 604 423 284 428 459 405 504 280 339 351 495 476 397 327 427 319 474 248
 370 414 545 235 398 335 270 497 460 608 448 433 368 479 407 345 432 287 300 348 304 388 324 464 367 400 362 402
 337 385 350 415 369 424 288 384 441 437 209 344 346 313 447 361 377 418 457 251 347 426 623 406 536 404 440 455
 412 206 365 183 338 413 478 295 218 305 331 672 668 222 256 714 215 473 483 360 204 372 557 687 290 211 500 562
 737 463 454 312 212 227 263 277 585 163 669 420 601 343 315 694 403 356 311 285 197 244 487 374 316 395 249 638
 568 309 364 303 532 193 289 401 196 764 391 292 775 301  46 488 308 264 569 334 282 232 521 619 326 273 513 537
 482 229 117 225 180 352 302 192 782 307 533 677 690 160 318 168 317 111 170 496 265 605 736 666 243 266 754 647
 679 172 210 267 237 255 340 519 190 184 176 774 321 118 233 216 653 220 144 658 783 213 696 755 570 283 649 475
 602  69 279 219 223 224 720 242 560 250 626 697 201 130 106 207 278 129 203 571 435 766 779 767 171 450 580 506
 711 241  89 141 548 771 297 234 650 123 784 611 258  53 245 363 573 181 157 761 158 260 387 664 728  88 252 662
 674 136 115  83 749  92 757  64 657 357 756 239  63 182 148 169 708 174 189 712 122 600 477 621  75 685 665 721
 591 134  65  72 155  42 606  36 146 142 198 675  21  41 773 486 684 781 778 777 179 518 655 187 758  82 769 639
 709  97 444  48 724 633 739 140 735 153 268 516  22  68  85 200 162 527 137 741 574 598 722 240  50 205 702 751
 715  25  90 637 615  84 121  47 780  55  78 661 116 394 191 135 599 124 713 772 101 511 469 710  66 682 759 740
 530 103  87  45 770 149 173  79 590 515  77 528 109  40 100 323 738 776 768 748  74 544 462 572 763  52 680 595

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00614e+07us (= 10061.4ms, 10.0614s)
Satisfaction error: 2
Number of search iterations: 1792
Number of local moves: 748 (including on plateau: 272)
Number of local minimum: 130 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0

Problem in column 2: 642 707 742 701 693 667 520 576 298 553 539 452 523 393 414 385 206 463 309 229 172 69 241 136 134 97 25 103 => the sum is 10989 rather than 10990
Problem in column 20: 110 54 93 262 128 188 156 195 199 291 491 366 293 351 348 251 360 285 334 496 658 571 761 712 777 741 772 748 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 750 423  80 583 570  37 252  76 749  32 545  10 732  71 569 777  79 779  69 588 744  66 765 648  91 204  51 650
  12 691 605 653 768  40 758  46 447  45  95 444 763 128 492 646  86 179 529 711  92 199 764 725 159 754  52 107
 733 543 670 178 767 778 515 769 696  43 321  26  63 115 739 180 182  68  36 516 168 109 643 224 784 720 264 140
  89 548 641 756 633  39 771  47 609  73  65  35 770  75 775 676  13 780 169 166  83  55 572 155 773 760 599 263
 688 259 671 694 698 116 575  18 541 471  85 659 103 100 458 314 186 119 112 640 113 101 737 761  98 762 746 165
 108 405 464 255 468 517 708 111 755  93 710 102 248 156 409 126 225 145 554 639 261 205 772 194 713 649 612 386
 383 741 618 214 615 153 291 114 253 421 738 406 594 134 601  53 349 195 132 538  88 783 692 266 185 716 565 152
 752 334 623 228 489 187 218 301 210 734 524 231 235 146 747  94 137 211 241 247 727 208 559 759 209 652 722 265
 219 726 718 279 497  90 238 398 757 310 781 682 246 245 702 133 212 320 627 766 139 124 525 136 176 172 512 260
 232 707 439 568 611 326 240 389 277 234 723 242 244 403 311 197 206 143 690 267 491 511 557 372 243 431 624 313
 307 251 555 724 580 477 331 295 341 216 645  54 455 300 397 236 343 150 704 213 355 440 467 462 215 309 776 392
 281 774 535 486 416 308 173 576 579 333 292 148 380 577 305 192 359 287 360 356 317 353 616 436 167 249 728 407
 736 270 342 293 379 432 366 411 284 390 400 289 443 469 275 782 376 299 268 460 319 449 476 402 357 323 382 318
 285 298 303 394 571 494 339 365 335 504 456 329 229 374 282 461 269 697 396 522 312 437 531 369 532 201 361 344
 367 441 459 450 523 315 346 351 327 362 288 503 442 368 418 445 338 363 297 435 499 528 371 223 457 391 271 412
 387 222 149 438 475 527 433 373 547 324 520 470  60 388 451 352 530 393 120 417 278 549 377 573 413 337 294 593
 364 358 502 534 280 703 414 526 425 401 164  11 428 422 473 578 336 560 202 290 410 482 276 496 262 347 203 542
 508 472 454 480 426   9 488 505 561 495  70 485 614 487 325 415 381  62 273  50 478 345 160 500 586 465 375 521
 446  16  84  24 354 546 434 399 479 302 384 498 420 493  72 551 513 606 634 490 596 506 250 533 448 452 110 350
 678 131 121 138  42 604 123 519 274 514 239 536 617 395 304 316 385 644 430 429 466 507 161 540 537 598  28 714
 622  57 170 129 184 483 518   7 188 481 463 563 118 693 207 673 679 660 230 539  15 510 177 582 603 658 272 509
 424 370  64 592 151 567 147 427  22 597 674 705 628 419  77 663 642 544 330  31 654 162 233 631 550  44 141 501
 632   8 144  74 190 283 701 717  34 636 626 106 602 566  97 574 668 619 404 174 584 675  59 348 672 183  33 581
  29  96 227 699   3 587  27 656 600 695   6 743 552 712 257   4 721 117 647 562 553 655  23  56 629 125 453 556
 684 306 328 408 175 751 564 595  82 681 226 613 664 608 378  87 589  30 591  81 667 585 154  20 220 171 610 122
   2 484 193 620  67 753 256 731  78 686 104 748 158 687  58 661 709 625 666 474 221 740  49 127 163 135 237 558
  14 340 196  38  17 217  99 638 286 621 189 607 181 730 706 142 735 680 689 191 677 685  19 130 700 157 637 669
 258 719 635  61  41 651 665 630 254 296 657 745   1 729 105 662 742 715 590 198 683  21   5 322  48  25 332 200

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00053e+07us (= 10005.3ms, 10.0053s)
Wall-clock time (full program): 1.00637e+07us (= 10063.7ms, 10.0637s)
Satisfaction error: 3
Number of search iterations: 2170
Number of local moves: 899 (including on plateau: 320)
Number of local minimum: 168 (including on plateau: 35)
Number of resets: 1
Number of restarts: 0

Problem in row 10: 232 707 439 568 611 326 240 389 277 234 723 242 244 403 311 197 206 143 690 267 491 511 557 372 243 431 624 313 => the sum is 10991 rather than 10990
Problem in row 17: 364 358 502 534 280 703 414 526 425 401 164 11 428 422 473 578 336 560 202 290 410 482 276 496 262 347 203 542 => the sum is 10989 rather than 10990
Problem in diagonal 1: 650 52 720 773 761 772 783 727 766 690 150 359 782 282 368 60 11 70 302 274 7 147 283 3 408 193 340 258 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 619  69 701  61 156 116 743 757 136 114 128 779 428 705 266 365 516 746  42 635 102 763  31  79 124 675 588 546
 568 171 725  94 774 717 696 742 247  22 119 773 324 100  18 115 413 765  92 646  60 567 722 151 695 586  16  72
 685 776 772  59 280 139 730 285  47 135  55 250 628 639  19 782 667  40 499 688  66 670 125  26 191 748 734 255
 728  53 366 783  67 777 434 704  44  74  35 107 449 721  58 680 769 755 617 547 142 469  33  25 784 162 501 106
 753  95 714 203 122 189 470 614 180 164 287 120 352 206 126 395 637 636 468 707 505 497 245 754 767 259 362 163
 741  96 655 201  91 735 747 242  15 198 186 690 478 134 112 277 616 243 638 693 317 780 228 118 658 689 282 130
 535 724 608 211 225  43 610  70 751 194 591 145 613 185 101 410 664 153 221 654 172 609 200 176 716 625 697  87
 764 108 592 354 179 154 571 718 173 355 195 104 692 137 267 710 249 238 653 554 781 736 235 248 231 158 729 105
 778 215 299 144 260 288 756 140 770 244 408 143 771 253 178 295 216 312 708 562 340 494 268 656 633 232 394 233
 237 222 573 373 183 257 745 622 166 372 576 338 624 315 212 457 674 303 512 343 361 522 316 193 217 300 684 293
 330 204 557 425 169 270 537 305 199 331 775 462 421 256 284 328 652 175 278 539  82 712 417 353 344 496 391 698
 307 341 440 375 474 423 473 458 566 376 401 197 350 649 357 526 342 184 599 460 379 733 202 150 309 380 281 258
 467 336 384 323 385 298 538 337 766 409 615 325 363 358 290 289 749 452 264 167 347 419 471 246 297 321 318 456
 416 319 356 332 513 308 476 304 386 448 441 294 388 768 374 402 273 261 435 593 286 472 349 292 279 348 254 623
 370 438 459 534 415 239 431 360 412 339 397 552 302 364 392 271 220 265 491 533 479   8 390 430 503 525 407 464
 161 542 311 575 400 563 207 406 405 369 378 437 351 326 453 346 291 444 283 398 383 367 414 517 582 445 335 301
  76 306 489 429 329 643 190 492 487 551 213 556 109 427 531 451 320 477 205 327 480  97 603 436 506 605 528 127
 377 606 426 450 455 433 160 572 387 569 274 519  81 529 544 138  84 424  83 314 368 229 511 466 495 644 389 463
 393 422 147 666 334 561 241 482 420  78  50 584 110 541 500 129 465 523 396 515 442 168  39 686 403 565 543 587
 524 589 272 411 558 585  77 371 508 594 382   2 196 475 490 322 157 530 218 234 536 170 574 650 502 439 117 507
  52 550 132 485 581 540 404 549 481 443 577 761  98 683 579 210  63 446 111  68  65 359 504 706 454 148 182 759
 146 514 223 113 510 483  24 578 694 596 555 611 493 564 723 263 155 313 209   4 687   1 595 600 659 131  99 447
  29 691  88 532 620  12  57 181 590 634 632 699 236  34 676 640 133 604 498 240 700 103   3 626 123 672 224 713
 262 677 152 744  17  37  93  46 214 597 669 651 618   7 527 598 188 559 226 165 648 296 673 381  56 662 679 548
  51 678  71  80 726 732  90 583  11 607 740 560 665 602 762 642 251 630 219  48 310  62 645  89  14  21 521 580
  30 570 418 647 760 682  41   9 681 711 432 276 159   6 668 252  86 484 661 208 629 269 758 703  49  13 187 601
  38 486  32 671 657  64 275  36 545 739 738  45 461 488 731 177 509   5 627  75 660  85 719 621 345 121 399 641
 553 192  28 715 750 702 174  27 709 727 141  10 230 518 752 520 631  23 737  73 663 333 720 612  54  20 149 227

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.83592e+06us (= 8835.92ms, 8.83592s)
Wall-clock time (full program): 8.89347e+06us (= 8893.47ms, 8.89347s)
Satisfaction error: 0
Number of search iterations: 1415
Number of local moves: 556 (including on plateau: 136)
Number of local minimum: 120 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 683  68 673 299  45   1 685 219 207 191  10 158 206 283  62 664 713 441  44 716 740 367 724 764 341 754 231 701
 287 264 137  36 142 317 589 741 629  22 140 130   3 192  43 761 729 652  34 707  41 496 739 710 259 760 777 653
 381  69 674 595  55  11 679 719 290 208   7  96 292 278 352 751 763 722 248 755 688 714 738   8  95  27 100 675
 321 591 648  33 155   2 639 656  53 136 696  20 217  83  18 758 692 689  84 267 712 243 726 672  90 567 542 680
 182 183 693 163 706 201 172 398 604 218  28 143 527  30  46 681 576 587  40 659 742 556 703  97  51 646 668 690
 233 515 572  70 563 631 660 632 251 148  14  29  26 195 637 616 651 596 625 506 649 165  52  32 273 322 687 640
   5 190 560 561 548 202 635 519  38 276 125 114 197 122 514 627 586 590 549 621 437 432 613 584 339 249 188 569
 106 116 662 504 581   6 430  86  71 536 235 221  25 594 553 638 500 579 600 607  35 537 562 657  76 319 641 513
 263 557 497 533 532 146 573 472 511   4 440 539  82  77 580 520 541 610 592   9 622  99 481 492 108 308 522 280
 186 550 450 555 528 107 526  54  19 109 502 558 521 509 602 585 570 538 501 540 475  12 484 568  73 242 495 131
  15 531 439 395 458 360 534 444 413 483  49 399 485 193 431 461 363 365 463 446 428 179 435 423 454 456 426 462
 144 582 407 358 551 447 488 479 499 467 205 258 525 508 445 347 476 547 366 451 429 180 410 489 171 288 334 139
 482 331 436  39 490 452 268 414 605 543 457 325 359 400 275 494 470 391 529 394 406  64 385 512 416 181 424 448
 417 510 487 517 468 455 480 474 411 368 464 453 443 324 194 282 314 301 387 327  16 438 369 382 397 335 442 535
 389 422 420 466 346 357 362 473 459 344 386 418 402 370 348 434 336 425 353 310 333 375 776 392 296 307 312 379
 566 266 313 384 338 404 330 783 405 309 427 306 388 265 286 270 383 326 380 408 364 578 295 354 477 661 200 524
 779 396 373 433 332 415 256 361 239 320 559 349 228 247 419 272 491 284 376 393 390 630 409 356 377 614 355 337
 597 297 289 294 342 583 403 686 311 254 240 285 237 698 236 345 315 723 343 302 229 694 162 304 727 486 303 305
 709 300 277 323 250 744 274 269 636 771 545 469 682 612 230 340 291 252 161 169 211 478 184 175 546 318 222 552
 554 261 170 255 196 351 253 244 774 717 281 371 734 695 421 213 216  80 238 730 226 769 298 234 733 498 185 293
 678 271 152 174 198 465 753 279 617 145 449 516 633 704 164 173 316 720 124 215 728 599 123 212 737 401 199 245
 665 735 224 111 210 575 378 209 628 503 609 620 603 153 762 232 133 187 262 374 593 214 246  88 618 350 203 505
 460 743 260 745 177 768 141 223 150 615 757 634 564 670 328 220 128 129 663 117 154 667  17 168 598 571 204 119
 544 115 156 671 702 684 189 176 101 750 518 747 151 676 227  37 120 103 705 166 257 642  66 619 601 329 697 241
 493 773 149 772 147 225  93 135 658 766 725 746 523 645 718  21  92  50 121  79  89 530 126 159 507 780 781  87
  91 624 784 767 782 574  78  98 731 471 752 765 577 775 700  58  75  42 732 110  61  67 132 178 611 104 113 138
 626  31  65 770 412 759  63  81 606 608 715 677 669 127 643 118  94  48 749  24 778 160 112 650 647  57 654  47
 134 699  23 167 736 748  59 666  74 708 655 644 691 565 756  72  56  13 721 588 157 105 623 711 372  60  85 102

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.43974e+06us (= 7439.74ms, 7.43974s)
Wall-clock time (full program): 7.49858e+06us (= 7498.58ms, 7.49858s)
Satisfaction error: 0
Number of search iterations: 1204
Number of local moves: 629 (including on plateau: 245)
Number of local minimum: 92 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  10  49  11 757 134 694 135 174 717  27 738  73 183 700 663 648  68  92 117 662 651 764  75 721 749 679  44 655
 568 681  12 722  33 740 699  81  21 187 433  15 133 748 173 710  42 106  48 706 126 756 745   9 682 761 299 754
 616 538   7 707  58  28 724  76 140 736 554 690 144 668 650 670  40  17 666 674 341 765  18 677 753   6  25   2
 652 334 622 517  59 718  24  38 152 664 223   5  93 646 656 691 614 151 191 732 105 672 164 659  20 697 189 702
 608 744  31 572 129 657  51 145 723 737 368 155  66 688 291 609 137 221 160 695 317 763   3  13 604 696 186 621
 642 595 673 612 235  64  45  43 636 680 232  46  89 638 634 578 163 248 354 561 136 527   1 626 581 633  99 619
 321 599 563 617 199 559  83 225 649 584 270  74 102 741 575 521 120 545 564 475 269   4  36 478 628 627  30 532
 641 181 676 482 167 571 592 305  47 583  35 502  98 485 203 613 259 457 275 590  16 543 606 577 602 540 277  67
 570 256 530  65 202 514 630  85  61 658 274 471 587 548 536 463 114 297 490 127  95 567 506 552 534 553 217 488
 524 594  63 492 283 465 560 228 460 519 411 556 598 551 539 447  50 206 100 557  79 486 481 169 462 449 200 461
 421 218 520 434  14 432 428  19 272 689 438 162 509 284 542 523 402 241 498 435 505 262 515 591 431 507 268 430
 439 513 483 444 201 525 499 260 480 472 383 512 153 547 420 493 424 405 180 378 446 412 466 175 470   8 346 456
 487 335 450 395 394 437 474 422 473 440 458 369 407 479  71 417 323 484 459 292 273 454 287 441 356 429 324 360
 320 366 361 352 371 415 448 442 503 546 390 387 419 489 436 455 330 382 511 467 389 338 508 355 300 296  37 377
 404 298 384 406 529 391 318 426 263 370 376 495 326 469 393 427 311 476 451 464 416 351 224 399 400 380 468 375
 365 251 388 265 497 452 625 574 425 379 654 362 413 185 385 310 403 264 289 281 414 364 349 408 392 398 569 329
 316 302 301 363 491 236 237 684 531 307 762 496 358 319 285 401 309 293 774 267 367 278 286 343 350 443 549 342
 373 777 328 303 562 178 196 582 279 271 501 308 119 333 295 171 579 726 635 494 698 357 255 315 242 288 586 239
 247 345 312 294 593 290 184 526 325 769 610 381 340 210 257 372 576 537 518 410 665 233 731 107 253 209 535 161
 234 528 195 386 522 226 227 733 729 219 580 647 423 190 760 245 322 550 336 304 182 276 353 332 165 477 603 246
 240 615 166 124 618 231 238 704 743 194 605 249 725 205 208 192 555 624 337 212 784 103 708 397 230 197 661 125
 112 128 719 243 747 214 779 751 215 139 711 220 746 198 213 207 675 396 282 147 669 516 266 314 331 280 596 176
 759 130 154 110 715 780 188 735 500 115 131 254 639 258 703 261 623 705 211 159 645 156 306 138 104 150 589 772
 123 250 709 177 558 101 229 359 244 179  80 766 687 108 222 168 750 113 313 510 573 714 620 742 170 739 644 142
  77  84 752 116 712 172 585 347 149  91 671 781 601  62 611  72 667 720 767  94 504  57 770  86 339  69 782 252
 111 533 453 204 607  96 660 565 143 216  26 713 755  55 121 158 631 692 685 193 541 146 348 683 148 327 771 409
  32 686 783 734 632  88 758 768 566  87  23 600 637 157 109  90 730 597 727  22 141  70 588  54 653 118 418 122
 778  60 344  97 728 716 374 693 544 132  53 701 640  29  39  78 773 445  52  82 643  56 775 629  41  34 678 776

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.66234e+06us (= 9662.34ms, 9.66234s)
Wall-clock time (full program): 9.72088e+06us (= 9720.88ms, 9.72088s)
Satisfaction error: 0
Number of search iterations: 1630
Number of local moves: 850 (including on plateau: 293)
Number of local minimum: 106 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 712 757  37 116  58 570  60 772 581  31 200  86 689 580 766 418 487 234 654 779 105  49 467 133 775  57  69 748
  12  62 112 181  70 722 139 784 661  11 122 713 678 659 128 486 395  96  72 564 737 136 676 646 728  46 738 616
  51 109 759 705 542 480 175 636 761  44  87 195 781 578 587 621 733  22  74 586 152 724 569 762  90  23  59  85
  78 644  42 238  99 771 223 565 539 330 127 585 135 179 303 608 688   8 495 723  83 114 624 719 698  80 754 538
 753 101 216 551 170 464 213 265 715 196 173 197 628 690 374 546 768  32 192 601 667 212 123 561 657 214  79 633
 221 119 537 126 156 450 138 259 736 149 285 400 710 140 702 577 637 325 271 752 662 176 704 210 595 159 182 612
 164  63 359 664 165 732 366 189 706 237 291 607  91 205 756 735 687 132 227 284 103 725 147 275 642 334 472 632
 246 193 656 765 249 194 229 143 673 248 745 409 215 154 144 760 228 741 370 241 625 235 257 471 521 233 290 755
 262 151 588 703 217 230 207 711 776 371 339 423 283 171 583 566 617 408 198 424  27 183 264 167 579 201 747 594
 311 260 120 563 256 148 445 448 488 426 299 774 340 379 282 402 615 239 783 286 254 293 338 452 681 224 292 592
 314 187 274 695 206 403 108 277 549 571 344 701 252 437 347 333 296 751 302 203 743 389 188 304 531 251 305 729
 250 269 297 734 413 225 388 431 517 317 385 496 319 421 287 346 691 335 300 190 316 490 362 324 439 280 740 428
 469 457 401 365 240 417 279 351 451 459 377 430 686 479 342 764 470 363 236 410 399 310 364 268 483 186 211 323
 393 328 376 289 313 442 353 407 406 404 298 375 541 427 288 550 336 345 373 369 315 356 422 552 386 547 358 441
 343 326 367 384 433 357 466 416 329 383 394 435 440 396 419 350 341 301 352 414 322 506 263 390 498 432 484 449
 360 502 574 420 278 489 411 514 247 380 378 415 295 458 530 468 307 405 270 528 485 320  13  73 436 476 391 567
 536 412 267 516 454 663  36 494 348 331 398  35 446 381 444 447 387 527 619 572 593 507  15 425 261 355 368 153
 559 392 397 443 429 134 501 525  40 434 218 124 382 540 130 462 475 500 573 100 460 474 465 332 244 591 511 555
 463 503 520 481 456 529 534 473 160 184 622  48 535 533 461 161 115 478  56 526 493 518 568 650 169 554 106  94
 532 597 209 497 717 118 137 482 272 670 627  65 513 515 510  41  71 504 455 102 562 660 131 629 245 599 491  39
 576 512 199  26 609 726 556  93  76  61 318 141 582 113 545 168 492 438 202 584 613 620 548 477 312 669 679  55
 605 575 671 337 658 110 623 631 208 718  19 604 626 145 653  24 174 508  47  33 253 276 638 614  34 519 603  84
 651 696 505  29 770   5 641 157  38 543 560  81  18  20 635 158 226 610 544 558 645 685  30 639 258 524 602 162
 700 499 553 294  25 598 697   6 266 727 720 354 523 107 522 172 281 557 453 308 589 606 178  89 129 634  97 306
 611 692 643   3 714 163 763  75  21 647 708 321  17 219 111 273 232 155 744 668   7 590 666 683 361 707  50 146
 640 750 222 327 778 104 767  82 180 694 655 677  66 509   4  68   9 674 731  67  98 709 675  77 142 693 349 243
 177  95 309 372 746 596 777  88 125 742 652 600 185 782  45 231  28 618 749  64 680  10 630  52  53 672 721 191
   1 739 780 166 769 150 758 716 121 682 649 699  14 773  92 255 204 684 648  54   2 117 665  16  43 730 242 220

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00594e+07us (= 10059.4ms, 10.0594s)
Satisfaction error: 2
Number of search iterations: 2221
Number of local moves: 880 (including on plateau: 356)
Number of local minimum: 173 (including on plateau: 28)
Number of resets: 1
Number of restarts: 0

Problem in row 5: 753 101 216 551 170 464 213 265 715 196 173 197 628 690 374 546 768 32 192 601 667 212 123 561 657 214 79 633 => the sum is 10991 rather than 10990
Problem in row 28: 1 739 780 166 769 150 758 716 121 682 649 699 14 773 92 255 204 684 648 54 2 117 665 16 43 730 242 220 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 602 149 761 599 676 278  42 704 702  96 694 758 646  81  28  35 708 132 737 408  47 157 729  95 405  54 666   1
 685 647   4 574 207 371  30  27 686 243 734 746 673  93 688 350 721  21 584  56 657 288 128  19 718 711 177 152
 748 175   2 641 655 105  79 752 745  61 768 751 679  12 235 727 743  83 110  15 178 283 268  68 620 750 677  60
 753 244 630 629 763 220  57 744 538 130  72 638 643 106 141 736 683 107  24  77 684 191 585 131   6 740 665  53
 114  46 616 710  10 273 505 660 151 189 656 598 681 654 174 109 658  80 633  23  50 413 269 594 689 649 254 532
 277  14   9 562 518  43 226 610 619 208 569 732 590  84 166 652 545 615 588 144 698 295  32 160 668 564 639 163
 705 311 575 690 645 256  25 640 119  75 617 623 565  37  20 625 631 614 642 146 591  44 225 125 485 534 183 242
 108 553 531 608 475 559 229  18  78 165 566 542 478   7 145 482 489 597 517 420 570  58 506 227 526 621 587 328
 601  64 605 488 552 567 120 133 298 161 636 606 576 600 510 465 581 618 563  13 480 382  17 167 555 511  55  66
  31 546 520 624 412 491 291 612 173 239 586 557 331 468 471 287 507  26 415 419 525  63 479  29 528 543 237 580
 516 246 554 325 464 441 262 530  90 466  11 381 536 470 529 422 512 452 430 337   8 342 592 490 451 455 577 101
  16 448 509 472 535 474 305  48  59 202 514   5 502 548 497 571 572 302 458 437 492 495 499 436 443 385 270 496
 539 519 578 386 469 369  38 438 463 241 425 399 421 433 442 290 377 483 551 445 457 323 340 339 402   3 388 432
 513 428 389 429 467 338 294 367 409 403 362 454 307 404 395 431 349 370 501 410 407 265 398 440 459 309 320 372
 503 460 397 449 423 477 359 414 326 321 418 345 446 484 394 355 296 383 391 504 461 281 447 352 306 384 314 300
 411 344 310 453 299 303 560 368 346 481 366 396 456 424 406 351 361 473 347 400 357 515 315 317 493 393 500 245
 341 297 263 375 251 770 527 356 450 756 336 348 378 274 364 401 313 312 206 462 434 335 333 707 380 387 255 379
 373 264 248 427 417 709 390 319 632 416 343 392 304 222 282 376 316 435 374 628 284 498 627 354 353 308 365 334
 252 267 279 195 197 723 604 272 611 494 324 136 550 238 674 180 289 280 766 247 286 700 701 301 232 276 360 556
 292 771 329 215 203 703 537 212 258 544 285 363 259 181 209 271 327 250 275 487 240 664 715 650 190 213 669 678
 231 169 218 330 293 747 444 769 486 754 192 196  74 573 224 228 219 154 159 607 775 699 558 260 230 123 547 731
 712 200 773 162 266 143 735 521 583 253 322 210 188 661 671 198 122 199 204 205 187 533 150 651 115 777 523 726
 249 221 116 142 193 582 780 171 644 637 217 261 233 757 695 184 134 234  97 593 137 622 784 635 117 236 589 730
 439 772 164 100 762  69 742 172 318 675 549 140 121 476 508 738 112 741 102 778 135 609 118 541 156 126 201 626
 358 680 223  91  87 182 692 186 153 733 147 139  89 568 595 659 155 783 158 653 179 540 662 716 739  49 111 663
  82 670 524 148  70 613 724 168 194 672 214 104  88 749 781  76  92 776 332 603 176 579 216 713  51 779  71 725
 426 720 103  99  85  98 706 257 648 693  34  41 124 667 185  36  40 696 764 691 728 722 170 759  39  45 717 697
 113 765 760  67 596  86 687 522 211 682  33 129  52 719 561 755 138 774  62 782 767  94 127 714 634  65  73  22

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.993e+06us (= 6993ms, 6.993s)
Wall-clock time (full program): 7.05118e+06us (= 7051.18ms, 7.05118s)
Satisfaction error: 0
Number of search iterations: 1067
Number of local moves: 594 (including on plateau: 155)
Number of local minimum: 79 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 750  11 209 143  21 389 694 343 670  59 637  50 213 167  35 632 653 249  13  46 700 690 657 712  19 733 753 742
 245 644 223  54 588  32 693 665 660 117   3 200 174 648  71  72 740 621 716  68  57 695 624 257 604 705 218 596
 258 734   4 686 504  65 727   2 711  33 658  85 171 220  29 181 715 699 184 652 566 709 140 326 655  49 738 489
 297 748 385 128 237 190  76 678 650  16 163 100 217 684 114  34 739 689 541 677 572 240 182 722  18 633 680 580
 393  47 147 116   9 550 669 583 597 553 134 649  52  92 584  77 544 238 725 536 638 293 754  37 602 698   5 668
 629 620  69 569  64  14 103 627 676 555  10   7  66 115 730  90 723  44 617 696 674 448 235 130 487 618 702 672
  97 419  70 133 667 155 666 619 196 210 675 679 124 186 654 118 581 568 625 647 154   1 165 261 472 539 687 622
  43 626  17 112 592  25 586 663 577 501 399 640  86  84 590 455 476 512 533 547  88 259 185 157 549 579 609 500
  75 565 613 286 475  91 576 562 564 522 481 582  62  67 523 478 434 397 499 246 203 266   6 260 545 585 471 556
 101 641 519 605 353 201 554 548 664 439 329 105 187  20 525 483 646 506  23 494 444 255 102 180 532 354 573 607
 126 527 508 113 560 498 546  24 335 460 422 643 474 150 513 285 421 480 299 430 413 176 178 104 557 524 563 661
 496 361 370 558 342 529  82 446 226 152 520 420 511 242 408 316 339 509 432 372 473 449  73 404 461 373 623 503
 308 464 436 538 415 328 443 537 347 433 452 396 340  12 429 327 492 561 400 416 484 368 272 365 479 349 219 380
 468 470 510 359 274 490 346 411 457 458 348 426 369 401 423 391 290 336 317 295 412 482 243 407 517 319 376 395
 375 441 469 379 291 417 398 466 425 409 427 323 378 332 392 459 410 318 514 493 358 313 374 488 251 344 382 364
 394 324 322 570 453 383 355 197 194 447 296 307 384 507 463 574 215 442 386 315 456 578 502 628 312 337 367 282
 659 356 294 233 414 351 206 279 746 437 521 314 495 630 377 406 248 263 304 160 287 598 390 707 191 366 371 387
 645 405 445 262 403 333 198 280 418 292 688 136 402 388 528 267 345 227 234 321 298 724 599 784 331 360 352 325
 601 428 749 241 199 477 320 438 595 273 162 450 451 338 236 431 435 168 256 363 334 552 612 591 244 341 440 265
 767 311 212 728 761 289 239 300 252 362 281 214 743 543 310 491  22 330 231 270 309 278 614 726 718 232 207 250
 535 205 735 188 131 703 137 756 173 673 714 275 755 651 204 222 268 269 760 119 135 465 603 526 253  93 159 283
 486 357 254 682 211 575 758 216 123 381 691 125 639 762  74 462 148 720  39 769 208 765 303 559  87 264 108 224
 424  81 606 467 780 635 179 229  89 615 277 731 692 531 247 169 139 741 120 146 642 225 284 516 701 301 302 121
 142  98 530 276 710 721 732 230  96 166 747 771 656 766 768 611  60  42 783 202 567 106 497  36 305 129 164  79
 610 156 151 781 175 764 177  58 228 306 138 697 587 719 271 706  53 751 127 777 518 221 594 149 770 288 111 107
 571  94 752 662 122 681 183 744  27 774 616 172 540 593 737 745 685 193  83 109 161   8 534 144 153 782  15 110
 145 779 683 485 631 515 189  63 195 713  31 717 551 600 704 736  28  61 454 729  80  48 763  41  45  55 757 192
 350  78 708 636 608 589 158  26  99 634 170 776 671 542  51 772 141  56 775  95 759 778 505 773 132  40  38  30

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.17198e+06us (= 5171.98ms, 5.17198s)
Wall-clock time (full program): 5.2308e+06us (= 5230.8ms, 5.2308s)
Satisfaction error: 0
Number of search iterations: 778
Number of local moves: 570 (including on plateau: 181)
Number of local minimum: 41 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   3 687 564 214  45  69 738 101  52 724 680 167 171 128 131 633 212 727 121 704 754 779 740  25 272 697  74 778
   1 734  84 279  29  22 694  48 154 663 699  70 303 698  12 643  95 730  49 449 711 691 231 674 219 717 662 629
  61 712  89 753   8  18 744  79 123 676 645 175 125 589  81 651  15 600 650 625 695 715  53 374 713   2 316 703
 684 678 384  21 201 649 104 671   5 668 714  82  72  66 566 661  64 731  60 586 597 728   4 653 289  83 224 745
 660 555 677  67  39 110 610 321  40 612 617 216  94 665 222 637 140 669 336 263 627 709 679  10 618 113  96 588
 689 592 241 624 560  31 634  90 187 673 664 138  78  47 496 546 244 675  86 579 729 670  80 580 111 632  30 284
 628 539 206 582  27  41 274 647 574 614 622 209 310  54 304 578  58 570 598 319 616   9 658 659 151  56 512 575
 518 593  68 594 561  19 559 273 534  98 742 152 238 519 484 513 195 604 511 510  24 557 639 609 168 487  99 122
 631 547 227 156 607 339 483 590 211 516 232 501  11 581 465 527 153 538 408  33 601 485 553 537   6 413 118 521
 543 577 322 415 630 606  87 283 531 701 500 199 290 443 587 440  59 474  23 256 475 271 445 498  93 602  77 563
 451 438 497 505 507 455 503 493 404 264 359 320 312 341 529 542 200  20 452 525 551 442  26 373 225 459 265 532
 562  65 236 536 550 584 246 453 424 411 549 301 354 495 387 479  16 361 405 514 460 540 126 383 476 457 157 463
 392 526 494 106 482 324 466 142 426 379 464 390 345 433 530 421  37 367 473 355 621 235 261 509 430 448 462 472
 447 417 363 308 298 353 365 427 502 456 422 436 260 400 469 418 409 399 371 401 385 388 306 352 450 337 414 437
 432 446 444 366 380 396 349 393 420 419 406 402 358 369 372 389 434 410 480 416 348 435 300 491 230 391 338 376
 499 132 478 292 725 735 490 332 254 282 375 346 517 356 317 423 644 398 386 228 382 297 377 318 343 397 344 323
 333 370 707 364 347 203 692 461 381 252 330 276 429 407 394 331 688 431 327 720 403 351 248 249 412 313 221 350
 360 217 467 743 357 288 325 309 275 329 506 520 541 242 305 395 766 285 257 682 181 335 294 286 599 267 681 178
 277 247 719 255 192 781 328 326 722 489 193 342 253 269 172 245 686 302 700 488 188 311 315 770 760 176 299 185
 340 314 608 163 250 693 278 613 652 184 229 556 755 262 783 144 640 237 210 773 226 268 259 239 295 127 596 296
 307 218 508 198 683 747 458 762 270 533 280 591 721 166 654 202 648 183 133  35 240 291 112 136 705 165 763 281
 220 179 477 147 576 752 718 441 251 197 100 605 702 145 672 234 737 189 710 428 223 425 205 204 545 233 468 207
 114 190 524 777 243 573 258 161 733 169 102 739 780 708 208 143 690 293 638 164 150 134 615 182 667 170 706 159
 266 191  73 215 481 492 362 174 173 186 287 569 696 158 757 115 746 129 619 130 595 146 782 655 568 726 558 141
  34  92 623 776 756 585 162 736 535 155  76 656 572 611 196  36 548 439 504 124  14 636 378 160 177 758 554  97
 646 137 741 759 108 368  38 180 732 135  50 620 565 486 775 454 635 116 750  85  57  43 769 103 471 334 685 148
 120 522 107 149 583 544   7 761 768  88  28 771 571 749 109  51 716  42 642 552  32  55 784 194 470 764 748  63
 772  75  62 626 765 213  17 723 657 117 119 641 567 603  13 139 515  71  91  46 105  44 751 767 528 666 523 774

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 2
Number of search iterations: 2011
Number of local moves: 769 (including on plateau: 197)
Number of local minimum: 176 (including on plateau: 28)
Number of resets: 1
Number of restarts: 0

Problem in column 7: 738 694 744 104 610 634 274 559 483 87 503 246 466 365 349 490 692 325 328 278 458 718 258 362 162 38 7 17 => the sum is 10989 rather than 10990
Problem in column 25: 272 219 713 289 618 111 151 168 6 93 225 476 430 450 230 343 412 599 760 295 705 545 667 568 177 471 470 528 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 765 775  92 723 655 612  27 153  21 378  30  75  26  68 545  44 482 774 552 707 776 582  45 781  40 738  89 435
 751 507  35  95 250 608 706  77  50 664  76 661  54  18 692  43 665 139 730 599 461 587  70  90 767 717 777 101
  78  42 772  38 583 643 758 546  58 634 107 525 125  84 439  60 613 778 330 654 670 668  17 662  82 771 102 151
 103 784 759 773 495 550  73 141  85 551  88 666 150  79 114 123 705 147 732 659 605 677 111 211 752 681  93  83
 106  87 133 143 770 673 648 510 116 601 134 511 118  66 625  86 697 100 527 633 725 698 108 741 166 398 760 110
 117 225 243 121 658 484 197 251 178 669 152 500 137 195 645 119 714 192 560 757 768 538 652 184 138 743 696 157
 188  97 213 155 483 650 766 240 242 783 462 626 132 231 196 186 699 203 695 597 719 671 254 278 219 688 163 154
 260 161 220 158 689 710 190 327 233 586 282 628 177 237 272 173 684 168 621 712 256 734 193 558 217 694 589 261
 316 227 229 182 674 716 209 223 351 556 244 683 238 247 183 200 523 295 649 404 554 721 299 293 189 764 537 284
 210 218 276 226 610 283 222 279 264 324 257 642 320 235 769 354 573 199 749 594 262 503 281 584 215 685 593 263
 269 366 312 259 534 780 305 313 309 569 323 307 301 288 336 315 488 782 300 294 641 504 334 298 267 408 499 289
 303 356 570 754 335 606 317 371 273 296 306 376 248 383 326 329 364 319 341 332 374 432 322 616 321 426 647 347
 367 339 365 297 373 310 352 355 290 343 358 337 512 627 362 359 442 342 346 270 381 479 246 722 350 450 724 292
 344 422 287 467 370 410 375 314 340 333 397 325 411 401 609 429 437 385 396 349 423 338 399 353 446 425 388 417
 470  24 430 395 304 389 379 402 357 416 380 418 424 419 456 382 372 377 391 363 459 393 420 406 390 449 472 453
 414 436 412 403 268 185 502 473 451 440 369 311 360 494 384 407 409 443 444 452 130 302 361 480 438 415 421 386
 433 460 492 448 477 156 469 454 466 428 478 501 493 434 445 497  16  32 464 476 104 286 455 458 400 206 441 521
   7 540 600 463 207 522 474  12 447 496 115 201 489 541 519 498 280 471 405 387 536 181 486 485 557  67 513 491
 457 468 514 427 105 266 490 543 515 265 542 179 431 532 526 564 291 533 174 204 465 214 518 224 487 318 232 506
 529 475 345 535 172  94 574 565 602 187 517 131 580 568 520 508 275 509 328 241 253 146 549 164 544 249 277 553
 539 620 561 576 505 142 555  69 590 167 572 120 548 528 575 603 170 547 208 585  36  33 563 274 530 171  41 562
 653 571 588 566  96  15   3 607 579 148 559 271 524 611 595 630 109 592 234  55 160 236 596 368 644  99 245 636
 591 624 604 619  49  13 663 646 618 126 614  80 651 413  46 639 392 615 205   5  20  29 656 212 578 308 239 735
 676 577 631 700  71 198 162 660 623  98 687  57 675 739  25 598  59 657 230  74 135 176 779  19 638   8 348 690
 635 744 686   2 194  62   1 331 753  48 742 258 667 629 169 737  65 637  56  91 640 122 632 715   9  22 726 617
 691 747 175 709 252 202 720 702 713 112 682 221 756 727  23 701  53  11 165 124  81 145 136 622 711   6  72 731
 679  34 394 746  61 180 704 693 748 191 755 672 703 680 481 678 128 729 127 228 216  28 745 129 159  47  51   4
  39  64  52  10 750 531 149 733 718 581 762 708 740 516 113 728 285  14  31 144 140 567 763  63 736  37 255 761

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.03785e+06us (= 8037.85ms, 8.03785s)
Wall-clock time (full program): 8.09648e+06us (= 8096.48ms, 8.09648s)
Satisfaction error: 0
Number of search iterations: 1225
Number of local moves: 713 (including on plateau: 235)
Number of local minimum: 71 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 493 634 731 700  89   5 695 225  52 626 776  24 686 301 768 146 719  71 115  75  39  21 647 199 681 604 599 269
   6 580 775 171 548 673 219 659 758 129 640  65 209 755 782 752 773  22 192  25  31  14 344 137  15 704 716 296
   7 712 738 197  98 692 677 170  18 182 602 307 660 742 676 735 756  94  72 702  97 507 105  81 694   9  32 628
 595 750  10 138   8 585 727 343 717 687 779 120  40 614 769 668 760 566  50  29 100 194 633 123 135 549 143 158
 705 611 613 536 124   3 598  56 639 183 492 169 254 147 630 149 757  92 128 586 196 649 732 316 175 680 697  73
 654 642 593  91  68 244 596  53 641  23 522 544 161 358 631 674 533  55 662 569 221 284   1 688 682 713  27  60
 603 678 616 257 176   4  35 555 636 651 531 121  51 112 526 621 581 693 130 293 204 317 666 483 499 578 189 184
 600  12 433 584  74 109 491 150 114 530 487 172 605 478 710 556 520 431 119 619 286 190 652 610 637 617 168  36
 701 471 685 455  19 127 664 166 139  41 645  34 208 612 568 665 561 629 242  11 420 188 582 587 557 519  13 481
 476 504 607 547 266   2 327  87 553 202 709 457 177  38 541 451 510 386 312  16 620 424 407 588 315 589 405 474
 399 564 453 543 174 525 390 435 601 551 516 574 233 258 437 537 247 259 167 534 374 235 412 638 482 264 108  80
 606 396 452 518 214 148 364 360 523 650  64 201 463 427 287 361 252 288 305 615 488 376 508 485 575 413 466 185
 281 418 426 318 228 425 328 590  85 552 417 577 623 362 462 377 468 162 592 392 321  20 349 393 291 511 517 505
 439 272 373 414 297 529 428 384 409 394 567 113 461 521 255 325 410 406 261 332 460 402 542 323 422 404 456 391
 538 403 464 326 330 385 469 275 378 274 441 563 218 299 494 309 472 429 276 308 401 535 337 367 470 398 509 322
 486 382 397 524 744 311 346 419 387 215 354 237 444 477 335 395 388 300 550 303 260 340 226 528 512 458 236 436
 277 267 245 341 496 339 442 683 501 342 239 320 500 720 210 298 381 562 489 389 558 365 415 363 430 243 195 380
 270 459 263 292 708 546 164 646 249 347 336 262 718 618 383 447 310 497 359 480 440 370 231 334 290 375 379 217
 446 179 207 515 699 357 253 663 369 351 133 608 213 187 350 331 449 475 473 282 324 545 353 372 465 314 722 355
 366 251 345 222 672 434 205 565 741 454 265 736 232 690 132 227 160 153 622 540 352 295 220 539 448 116 495 513
 432 145 111 723 400 348  62 729 408 416 248 761 289 715 450 223 280 206 591 180  69 653 134 238 698 271 726 484
 294 198 268 302 675 506 733 443 240 747 329 490 224 241 126 368  30 250 696 579 644 597 203 155 186 154 643 669
 229 246  79 216 657 739 371 624 313 338 141 658 703 554 173 200 306 625 627 131 576 107 734  44 140 136 740 583
 159 152  42 766 445 594 156 503 211 157 283 319 691 142 117 163  93 724 771 748 670 635  96 711 125 144 725 648
  90 191 178  70 749 356 333 304 279 772 104 737 656 438  59 106 110 559 707 102 784 781  83 118 753 234 570 767
  82  61 777 479 671 679  67 527 467 421  45 502 498  58  46  86  54 759 278 745 730 689 423 714  57 101 212 762
  28 763  66 661 706 571  99 273 411  88 230 573 609  78  47 783  33 764 572 721 765 514 181  76 193 122 285 778
 728  49  43  84 655 754 751 103 151 667  95 746 165  48  26  37  77 532 632 684 560 743 774 780  63 770  17 256

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00603e+07us (= 10060.3ms, 10.0603s)
Satisfaction error: 2
Number of search iterations: 1925
Number of local moves: 851 (including on plateau: 328)
Number of local minimum: 156 (including on plateau: 32)
Number of resets: 1
Number of restarts: 0

Problem in column 13: 686 209 660 40 254 161 51 605 208 177 233 463 623 461 218 444 500 718 213 232 289 224 703 691 656 498 609 165 => the sum is 10991 rather than 10990
Problem in column 18: 71 22 94 566 92 55 693 431 629 386 259 288 162 406 429 300 562 497 475 153 206 250 625 724 559 759 764 532 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 530 758 133 608 712 111 776  40 772 202  89 153 534 760 714 595 108  33  66 398 695 565 676  41  91  46 662 122
 720 778 579 521 724  86 717 316 467  39 145 560 171 764 365 621 104  27  54  93 647 656  75 211  34 187 777 552
 780 603 754 141 148 116 559  51  90 221  83 522 300 746 702 734 150 549  42  60 543 689 716  80 570 779 152 109
 503 216 692 784 203 707 588 192  29 711  43 163 431 769 119 773  30 160  85 310 166 718 750 548 485  31 672 112
 646 537 411 244 443 768 576  38  77 751 120 190 667 755 759 654  79 170 228 107 127 557 231 376 591 182 562 144
 592 157 637 719 213 770 701 189  68 678 179 164 668 178 273 722 239 241 124  99 159 515 685 240 226 181 648 725
 594 610 737 649 137  50 271 449 105 596 297 168 651 259 708 186 139  87 136 767 184 519 749 199 613 180 188 762
 752 210 643 209 246 265 681 742 208 561 269 217 578 232 135 278 212 783  96 154 710 761 230 237 305 327 677 272
 287 161 247 329 371 514 765 289 753 726 574 309 599 183 243 564 364 267 459 270 134 683 167 406 276 131 258 661
 338 196 618 614 320 479 156 313 288 361 729 225 675 333 264 328 393 748 446 197 377 511 432 204 732 194 253 266
 301 215 303 580 222 642 238 425 147 586 319 378 705 323 318 242 353 727 405 347 256 674 738 285 412 315 336 198
 638 248 324 488 307 410 342 470 332 731 201 682 274 397 262 321 385 293 430 388 129 536 367 330 691 314 317 383
 399 374 400 372 782 219 501 392 402 389 379 615 382 340 345 563 386 351 465 229 395 435 359 205 404 282 368 257
 346 450 337 474 254 451 348 224 409 401 419 206 517 302 295 441 357 526 200 477 312 494 334 547 506 434 476 453
 394 233 355 413  67 349 461 294 445 484 177 387 512 335 495 491 527 407 422 322 354 326 448 331 460 545 499 457
 504 475 447 381 483  16 384 350 442 456 468 325   9 396 415 420 493 418 341 390 403 362 252 641 308 569 284 558
 582 417 523 343 550 699 481 473 375  36 544 352  28 538 281 571 214 290 263 424 471 277 532 408  95 366 497 360
 469 480 444 128 498 339 423 440 370 158  69 380 251 566 572 492 463  97 505 617 546 174 173 516 524 421 438 437
 280 454 165 311 555 464 525 439 606 298 482 356 193  98 123 593 553 296 220 598 373 279 597 245 542 604 169 573
 518 489  84 426 455 427   5 533   2  64 462 644 218 528 472 155 486 255 551  13 531 283 554 433 568 631 616 587
 110 509 292 581 507 268  72 600 577  71 428 458  35 502 635 117 659 369 781 500  12  48 416 304 529 655 541 414
  44 590  65   1 540 636 487 513 466  61 721 100 645 625 693  32 640 478 620 680 584   8  94 745 130 673  17 102
 250 140 609 114 556 520 436 633 496  59 628  25 172 624 490 162 740 115 632 663 664  24  11 697  88 763  26 653
  20 535 121 539 207 236  81 730 709 391 452 757 249  73  49 694 771 747 627 583 670 260  63   7 589  76 142 612
 138 106 611 744 704 686  45 650 728 103 666 669 275 223  56   6 698 623 739 286 195 234 358 605  15 575 151 101
 125 658 132  47  70  52 113  53 671 688 713 630 703  74 585  14  22 510 684 696 629 191 146 652 601 774 639 118
 126  92 306 175 679 687  82 723 291 508 634 622 185  57   3 143 690 766 743 715 706 149 602 741 261  19  58 227
   4 299  21  55  37  23 176 429 665 660 700 733 363  10 619  78 735 657 626 607  18  62 235 756 344 736 567 775

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00611e+07us (= 10061.1ms, 10.0611s)
Satisfaction error: 2
Number of search iterations: 1785
Number of local moves: 730 (including on plateau: 270)
Number of local minimum: 125 (including on plateau: 36)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 780 603 754 141 148 116 559 51 90 221 83 522 300 746 702 734 150 549 42 60 543 689 716 80 570 779 152 109 => the sum is 10989 rather than 10990
Problem in row 19: 280 454 165 311 555 464 525 439 606 298 482 356 193 98 123 593 553 296 220 598 373 279 597 245 542 604 169 573 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   4 205 183 165 341  85 155 385 713  42 699 706 661 559 755 734 339 302 687 590 759 678  88 161 640 128  19 207
 726   5  81  25 460  20 741  50 754 650  32 675 711 756 694 724 129 186 344 336 765 773  30 718 159 294  38 114
 725  62 109 134 198  73 645 230 766 729  55 595 146 750 764 662  79 753 180 738 669 629 174 637  67 282 106  33
 681 562 167   2  12 236 727  83 622  54 707 716 193 769 646 719 112  93 663 564 485 768 283 720  13 135 232  26
 654 696 657 249   3  87 690  95 567 505  44 670 169 749 635 395 586 231 498 737 698 623 422   7  43  68 181  31
 587 593 156  46 274 142 641 244 676 666 221 628 191 499 684 763 671  96 538 610 535 435   1 611 254  52  45 131
 618  72 227 168 556 515  17  59 659 126 275 674 199 552 760 173 598 122 651 656 632 576 532 529 630  89 243  82
 487 100 642 269 585 327 459  71 539 621 561 489  70 468 548 233 458 573 486 636  75 605 521 523 190 118 185 151
 638 560 648  14 196 105 438 572 568 563 557 597  58 558 540 612 441 133  61   9 496 504 513 549 533 140 246 141
 415 524  10 258 514 483 479 555 482 480 509 470 121 398 517 616 471 584  53 503 620 512 240 596 238 182 152   8
 493 507 195 101  36 203 542 163 500 634 451 414 200 599 393 614 376 255 434 565 420 520 473 551 545 295 137 374
  66 472 223 574 526 436 440 476  11  90 386 527 113 448 510 511 463 536 426 149 553 594 495 466 464 382 242 411
 396 547 442 404 534 457 218 399 445 475  57 212 531 378 491 397 337 433 354 431 554 304 252 265 330 478 456 413
 405 447 427 348  34 377 462 419 432 388 305 477 490 409 439 346 423 367 449 437 352 286 355 525 333 340 465 453
 364 546 379 361 325 543 484 263 390 461 251 430 357 649 316 351 418 407 322 260 421 288 403 310 508 424 307 452
 343 350 368 296 342 311 417 314 469 300 375 387 784 273 291 528 292 412 363 488 384 450 301 467 362 444 522 358
 306 353 279 652 660 331 356 280 394 237 324 312 655 323 349 334 455 360 370 315 366 400 335 392 326 613 583 329
 170 345 501 643 732 446 428 239 416 250 680 380 365 228 371 338 359 408 619 328 259 290 285 261 297 402 319 631
 209 208 730 602 272 454 220 474 262 664 309 410 502 284 211 600 187 247 705 213 110 271 582 201 313 679 492 579
 289 318 695 624 372 401 270 308 389 245 248 184 494 222 202 108 117 761 321 774 743 204 633 192 276 592 688 320
 268 229 257 569 647 747 234 783 277 130 299  60 728 145 127  98 224 575 685 210 256 267 287 154 723 607 653 751
 116 120 281 581 516 293 778 667 226 332 219 206 347 235 188 577 303 225 625 153 143 518 735 119 601 406 704 776
 443 123 215 710 712 550 253 736  41 429 383 176 589 217  69   6 157 772 570 369 177 171 189 197 644 708 691 693
 138 701 530 615 373 782 658 731 125 148 742 150 519 241 178 278  74 216 166 107  37  65 381 780 264 703 544 744
 158  78 745 566 673 541  76 668 104 717 298 139 537  39 144 172 714 700 115 147  77 136 608  91 779 739 626 603
 740 770 481 682 771 578  49 266  97  94 580  56 639  80  28  22 692 506 103  24 317  16 609 162 752 425 762 689
 160 775 665 715 194 709  92 777  48 214 702  86 497  63  29  64 748 686  27 606  47  23 591 179 102 677 781 733
 391 722 697 617 132 758  21 683  18 746 721 164 124  99 111  15 767  51 175  35  40  84 672 627 604 588 571 757

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00592e+07us (= 10059.2ms, 10.0592s)
Satisfaction error: 2
Number of search iterations: 1645
Number of local moves: 755 (including on plateau: 278)
Number of local minimum: 104 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0

Problem in row 16: 343 350 368 296 342 311 417 314 469 300 375 387 784 273 291 528 292 412 363 488 384 450 301 467 362 444 522 358 => the sum is 10991 rather than 10990
Problem in row 17: 306 353 279 652 660 331 356 280 394 237 324 312 655 323 349 334 455 360 370 315 366 400 335 392 326 613 583 329 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 326  71 105 762  62 767 618 194 659 641 107 622 167 777  59  54  38 190 504 519 445 634 678 211 115 103 780 782
 106 775 104 629 185 623 687 707 362 747  25 525 151 776  66  40 110 226 627 188 465 432 749 237  37 564 774  73
 344  92 378 761  83 494 558 111 757 755  61  89  82 765  88  74 674 492 722 123 616 725 608 453  44 784 124 133
  76 292 109 778  95 204 764 690 743 631 174 728  64 658 116  39 625 726 216 139  78 731 176 736 783 160 140 319
 638  72 145 243 595 644 763 732 419 666 645 136 143 142  87 217  70 178 375 102 746 680 730 656 291 175 232 468
 740 193 245 466 152 769 702 255 647 126 307  91  85 118 157 183 713 532 771 268 162 567 768 552 322  84 318 697
 339 263 661 429 660 573 668 128 545 672 585 203  97 234 119 221 168 752 252 201 181 385 735 772 213 206 114 614
 689 531 773 706 192 522 256 756 393 571 334 251 238 347 350 150 300 556 309 184 227 709 170 230 199 138 254 655
 235 404 210 314 276 459 164 373 610 733 714 202 225 215 165 363 333 734 581 741 266 654 186 130 267 338 510 588
 703 180 420 265 248 521 349 317 467 770 172 173 154 271 262 766 236 187 196 298 279 677 696 781 182 367 315 738
 231 148 335 272 282 663 705 310 667 208 760 246 394 218 340 275 290 681 288 460 223 516 512 486 258 359 233 630
 390 368 539 416 447 665 332 321 398 313 487 530 214 330 421 278 372 580 357 327 250 759 305 382 413 304 287 205
 400 402 163 381 488 399 316 294 410 320 433 308 651 377 694 576 358 343 391 329 260 414 259 274 396 364 484 506
 341 277 417 427 515 247 220 366 436 491 156 482 301 386 331 505 383 449 286 424 430 448 437 483 336 284 779 353
 323 507 117 224 425 388 431 356 380 324 149 405 517 361 365 355 509 500 458 712 328 401 435 369 440 428 503 280
 302 408 212 502 412 242  33 578  27 478 395 403 464 479 495 354 446 587 434 406 499 297 371 289 418 592 475 392
 452 548 269 384 471 597 409 457 481 474 451 423 306 461 498 543  36 137  94  98 523 273 477 454 422 376 591 285
 489 599 496 241 426 207 469 303 555 441 100 450 389 485 439 636 493 261 565 244 518 200 490 121 387 379 547  60
 508 480 411 443 575 112 574 219  10 557 520 442 528 360 511 348 501 544 171 632 541 169  81 524 606 397 195  31
 562 685 497  47 649  16 131 607 346 312  65 626 601 540 593 438 639 101  29   8 590 125 551 108 621 462 569 472
 568 586 554 352 534  42 122  35 293 161 542  18 684 570 602 514 550 166  90 611  49 179 476 620 553 642 648 229
  24 526 463 134 628 264 113  11 189  50 615 374 691 699 613 444 605 342 155 529  46 129 456 582 662 635 700 311
 535   3 737 239 470 325 407 561  68  63 455 676 594  48 577 715 536  86 158 619 724  28   7 144 673 719 583 240
  30 669 589 612  41 253 120 584 127 257 572 718 609 533 198 624  12  43 739 337 549 146 191  56 750 710 744 177
 600 473 527 132 729 228 159 538 249  67 370 717 650 688 711 657  17 513 147 604 745 283  15 153   9 695  19 295
 351 683  34 723 670  99 415 637 579  53 560 566 682  21 751 720 664  96 721 698 671  75  26 281 141  22  45   6
 686   1 727  77 675 598 296   4  93  58 633  23 617  52 640 222 716 643 653 652 559  55 135 708 704  57  13 693
   2 754 753  32   5  69 209 546  80  51 603 563 692  79 742 679 596 345 701 537  20 299 270 197 748 646  14 758

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00587e+07us (= 10058.7ms, 10.0587s)
Satisfaction error: 2
Number of search iterations: 1852
Number of local moves: 860 (including on plateau: 391)
Number of local minimum: 135 (including on plateau: 44)
Number of resets: 0
Number of restarts: 0

Problem in column 4: 762 629 761 778 243 466 429 706 314 265 272 416 381 427 224 502 384 241 443 47 352 134 239 612 132 723 77 32 => the sum is 10991 rather than 10990
Problem in column 24: 211 237 453 736 656 552 772 230 130 781 486 382 274 483 369 289 454 121 524 108 620 582 144 56 153 281 708 197 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 182 111  51 726  88 123 602 570 745  29  47 674  52 121  39  45 650  26 634 715 613 782  76 705 740 294 774 776
 134 501  66 739 714 108 167 102 669  22  18 723  12 513 684 721 738 113 516 545 757  50 572 638  80  85 783 220
 475 746 438  89 777 124 711 125 663  87 534 718  40 116  48 132 573  63 701  90 609  97 599 748  69 770 188 660
  67 168 651 767  60 749 601  72 760 205 129 562 147 142 184 762 646  24 666  65 642  71  79 389 768 759 153 702
 584 463 775 161 253 744 662  42 661 128 329 575 139 107 778  95 229 160 460 393 696 626 131 771 720  84 126  98
 784 555 722 192  53 779 685 171 754 539  83 194 237 143  41 104 758 260 742 165 734 727 219 600 216 257 170 106
 708 526 498 189 473 769 728 150 541  64 156 174 211 761 763 238 201 140 698 118 741 574 151 659 169 185 144 261
 197 593 781 163 327 621 653 187 673 233 277 750 304 235 179 256 198 670 691 223 509 230 263 700 302 247 217 311
 259 565 594 183 502 268 595 412 780 225 103 752 228 266 305 356 733 141 672 550 381 285 193 506 191 334 339 272
 208 764 686  13 520 289 707 227 286 751 278 331 332 425 312 377 274 209 772 276 582 226 270 619 249 314 386 307
 679 703 483 296 709 203 598 657 273 373 325 405 200 415 322 234 369 682 244 218 409 349 242 367 315 387 288 245
 319 556 747 342 258 290 553 255 330 358 323 454 310 284 299 306 725 668 362 190 538 281 371 518 382 424 383 164
 282 333 497 206 469 505 493 199 301 347 316 580 521 221 490 479 402 428 400 341 611 470 303 525 295 337 326 313
 446 417 517 280 291 464 453 309 298 348 552 293 343 376 447 252 364 318 262 368 529 522 494 355 397 375 546 374
 430 350 384 378 222 398 406 388 357 495 441 360 433 155 437 481 324 455 407 431 351 361 411 444 445 391 366 489
 408 471 418 346 514 380  57 484 500 287 390 246 422 487 363 413 394 320 265 482 353 503 435 354 414 345 491 448
 426  59 385 443 496 466 395 533 442 461 458 186 439 450 585 551 308 452 396 241 177 523 432 267 434 528 352 105
 499 175 370 421 158 420  62 530 379 512  10 248 507 486 451 508 392 404 477 622 440 427 410 317 537 344 485 399
 120 195 403 515 604 416 101 579 548  55 468 419 524 429 488 559 401 250 110 456 119 328 640 251 536 535 449 492
 645 243 180 532 292 196 149 474 210 540 511 459 576  46 563 457  28 560  77  43 372 612 567 297 462 667 643 589
 527  14 114 587 564 680  37  32 127 478 577  16 275 649 652 654  73 181  21 693 269 561 592 152 531 699 630 605
 154 122 133 568 467 623 423 504 115 566 543 109 586 627 335 359  78 625 279 465 231 637 644 173 547 549 472  56
 542 271 145 596 608  38 212 617   4 620 569 112 624 689 603 583  75 671 264 606  92  49   5   8 578 544 636 629
 283 336 300 607 239  23 321 554  31 616 692 631 755 658  20 557  68 597  82 590  93 558   2 436 581 695  33 632
 639 365  91 137 633 588 240 628 166 480 665 172 690 683   1 618 519 510 338 713  70 254 736   9  61  25 735 224
 215 591   7 677 204 610 138 706 213 724 697 148 615 135 687 681 647 675  86 614  15 694 719   3 178  54 157 100
 571  44 214 635 476  81 146 710 130 729 743  58 737 655 678 176 159 656 232 766  30  94 704 162 676  74   6 648
 207 753 340 202  19  35  96 773  34 717 756 641 731 716 236  36 664 732 136  11  27  99 730  17 117 688 712 765

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00488e+07us (= 10048.8ms, 10.0488s)
Satisfaction error: 2
Number of search iterations: 1847
Number of local moves: 898 (including on plateau: 252)
Number of local minimum: 135 (including on plateau: 39)
Number of resets: 1
Number of restarts: 0

Problem in column 7: 602 167 711 601 662 685 728 653 595 707 598 553 493 453 406 57 395 62 101 149 37 423 212 321 240 138 146 96 => the sum is 10991 rather than 10990
Problem in column 10: 29 22 87 205 128 539 64 233 225 751 373 358 347 348 495 287 461 512 55 540 478 566 620 616 480 724 729 717 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  64 119 752 356  47 578 709 750  36 181 496 592 366 755  59 764  69 130  49 225 773  66 217 715  55 612 672 783
  74 310 391  45 714 545 734 449  58 762  98 655 500 685  87  41 749  27 132  50 758 689  76 242  42 583 766 728
 657  95 649 782 772  70 533 748  33 777 572 472 262 775 228  44  62  23  53  54 771  82  67 667 779  84 665 214
 673  68 765 218 109 584 154 124 284 245 741 707 497 717  81 557  60  34 125 532 753 167 150 234 774 600 475 562
  51 187 680 505  46 751  90 719 621 221 222 311 776 640  63 731 135 185 408 223 157 763 158 643 155 686 586 277
 197 726 590 183 136 784 196  38 188 160 170 674 617 191 184 744 374 189 117 538 780 143 708 778 198 670 561 156
 128 195 616 701 145 534 113 730  48 564 171 684 216 716 266 700 147 530 265 302 259 768 269 219 246 659 613 186
 421 207 568 642  57 695 200 757 230 317 152 636 712 287  73 412 429 118 309 260 654 571 162 729 148 769 335 140
 301 304 471 691 283 666 213  94 658 165 297 727 236 238 358 698 137 175 282 737 226 441 288 264 244 379 735 682
 248 103 483 677 279 721 193 504 319 351 314 166 624 341 350 407 305 293 760 580 243  77 278 720 141 552 315 646
 362 693 710 307 235 267 241 294 585 414 767 271 349 330 299 272 597 270 273 346 396 268 220 704 312 512 316 380
 377 285 376 206 253 756 347 470 318 258 327 499 570 123 251 549 781 323 289 676 205 257 453 263 138 661 291 688
 239 451 514 395 462 240 410 389 433 203 204 369 663 344 326 406 398 420 403 320 460 332 452 255 348 428 386 740
 254 488 399 359 360 340 416 357 296 589 371 343 390 536 281 402 321 355 394 295 520 367 405 298 759 484 337 274
 247 437 439 328 370 354 110 411 518 546 455 498 468 120 393 361 479 478 554 426 458 427 503 313 526   6 333 432
 431 465 164 400 463 372 501 324 548 363 436 209 440 423 551 231 517 464 388 331 385 378 442 339 397 401 459 168
 466 336 329 467 375 292 444 425 524 448 430 454  72 489 547 387 373 582 528  52 413 353 434 567 306 276 447 174
 607 424  89  86 515 133 629  29 523 563  10 513  80 490 418 210 409 144 461 648 525 493 579 480 605 522 232 573
 446 544 531 102 606  43 473 435 308  37 456 443 114 565 639 383 352 603 108 202 392 543 502 559 558 227 381 438
 487 535  18 445 516 286 417 577   8 494 591 149 338 482 485 261 492 486 625 104 574 159 477 180 553 146 491 614
 537 656 342 229 450  92 457 581 212 602  17 121 115 660 604 280 511 365 623 510 508 641 588   9 681 509  12  78
 542 694  71 322 634 163 215  21 703 540 275  35  61 628 569 474 404 541 638 635  32 495 566 632 618 161  97 224
 637 608 116 595 609 651 644  22  25 527  19 176 300 105 507 529 560 699 382 556 127 627 745 233 598 194 173  26
 576 587  83 325  16 345 669 481 653 650 736 151 237  65 619 208 610 675 647 506  91 722 593 153   2 100  14 476
 718 724 422  11 575  75 521 550 732 687 630 596 290   1 652 139  99 743 702 384  28 622 594 107  93   7 182 106
 631 705  15 112 696  96 601 678 725 177 692 211 190  88 711   5 620 770 713 633 199 169 126 252 469 122 334 250
 615  13 368 754 668 415 626   3 733  20 662 249 761 111 706  56 303 645  24 201 172 178 519 179 555 101 742 611
   4  31  39 747 599 142 134  30 671 129 679  79 746  85 683 739 697 723 738 664 131 192 419 256 690 539  40 364

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.48346e+06us (= 7483.46ms, 7.48346s)
Wall-clock time (full program): 7.53746e+06us (= 7537.46ms, 7.53746s)
Satisfaction error: 0
Number of search iterations: 1283
Number of local moves: 672 (including on plateau: 263)
Number of local minimum: 77 (including on plateau: 40)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 366 751 757  27 678 247 185  33 705 354   1 268 756 754  36 227 740 195 600 210 243 737  22  25 739 752  17 565
 665  10 689 188 712 672 738 293 146  87 717  42 728  93 614 161 714 282 111 725  97 656 112 697 699  21   9 312
 248 760 325 618 234 688 731 236 680  85 758 283 619 753  63 286 704 260 732 569 566 109  18 150  11  47 239 218
 627 174  15   7 427 633 608 458 698  68 674 636  89   8 426 613 667 197 719 703  74 655  46 677  65  38 734 254
  16  58 623 165  19 631 684 310 615 593 308 645  62 648 488  31 624  30 709 590 537 532  29  69 706 621 152 495
 666 573 598 279 592  59 205 541 584 332 160 647 595 729  23 115 626  88 679 620 209 676  14 587 147  67 379 200
 605 131 609 639 722 184 311  55 632  32 457 635 504 653 271  40 691 228 557 549 172   3 114  13 588 585 479 531
  49 215 563 139 552 617 576  34 701 313 547 542 638 641 398 100 654  52 562 507   4 522 301 466 519 502  50 226
 599 511 417 558 468 498 525 183   2 682 182 455 540 424 187  24 490  26  81  45 575 675 374 550 548 671 501 199
 461  76 564 662 124 411 520 551 571 535  96 637 445 606 134  12 492 528  82 493 559 397 175 545 136 138 543 497
 335 181 607 149 491 572 225 456 400 418   5 415 591 469 395 410 512 340  61 586 353 405 447 381 516 309 513 448
 414 330 478 383 628 170 302 402   6 484 463 315 460 696 130 409  53 206 505 509 375 534 459 412 384 610 483 390
 589 357 539 403 429 105 517 387 399 560  90 365 385 481 259 544 369 349  37 431 494 391 404 386 518 438 289 475
 536 420 363 337 380 508  39 578 464 376 377 425 290 294 503 533 322 356 515 401 453 393 388 264 435 487 276 277
 253 358 422 364 371 336 582 347 360 323 485 342 579 339 527 355 362 450 480 472 473 465 350 287  60 556 285 407
 454 762 496 687 396 331 523 394 321 361 352 324 373 317 273 269 334 389 650 367 272 372 437 338 316 327 326 229
 471 526 219 237 603 180 235 745 345 440 299 730 291 640 521 333 307 434 256 344 224 213 442 257 382 255 292 769
 733 741 163 211 778 433 432 329 685 300 634 231 708 238 419 295 343 408 250 351 306 446 510 265 298 220 162 101
 263 244 452 428 204 546 524 126 392 770 658 305 284 212 443 742 201 690 746 116 208 436 341  83 346 190 275 765
 750 242 258 370 281 423 694 451 707 261 661 288 262 368 406 695 233 630 119 735 303 246 555 267 159  78 359 189
 148 692 506 318 173 477 194 297 223 596 594 230 314 216 686 720 252 489 467 319 270 198 553 721 171 249 193 724
 169 222 118 567 304 348 767 278 137 164 245 462 221 167 328 217 439 726 179 156 761 744 784 280 143 755 649 660
 232  64  79 713 144 782 128 604 574 135 142  98 166 764 320 474  35 652 476 117 643 202 783 153 642 768 430 670
 241 657 140 296 776 240 441 145 127 266 651 777 108  73 700 748  66 702 207 154 773 155 416 710 203 110 449 659
 168 597  54 771  94 157  80 625 191 727 378 133 577 106 580 669  20 486 141  57 274 421 779 775 763 612 711  44
 103 601 766 644 196  84  51 736 104 482 444 121 178 102 629 693 129 622 413 251 554  72 781  86 581 743 747  77
  70 176  75 214  91 602 132 681  99 716 499 514 107  48 663 664 583 646 470  43 500 158 673 774 192 749 780  71
 759 561  95 616 123  56  41 715 122 530 113 125 120 151 568 611  28 529 186 570 718 177 683 772 723  92 668 538

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.72184e+06us (= 7721.84ms, 7.72184s)
Wall-clock time (full program): 7.78054e+06us (= 7780.54ms, 7.78054s)
Satisfaction error: 0
Number of search iterations: 1751
Number of local moves: 835 (including on plateau: 315)
Number of local minimum: 95 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  35 139 636 329 106 738 445 495 412 104 157  60 201 149 323 683  66 663 258  33 638 773 671 552 777 761  34 752
  73 108 587  91 145 760  78 700  96  85 759 107  57  97 418 754  50 634 259 542 698 611 675  52 768 762 784 240
 757  17 780 148 116 230 140 669 770 781 766  64  55  67 248 686  47 717 713 115 281 225 619  69 702 348 371 489
  90  65 427 779 726 664 167 586 763 219 505  54  63 123 712  81  99 736 279  41 699 710 729 117 146 771 111 528
 772 753 423 403 703 186 188 572 774 776 189  48 203  74 205 129 151 325 144 221 147 691 653 764 746 475  62 213
  40  92 105  95 192 758 332 537 195 775 723 216 118 156 672 727 190 545 177 168 709 644 756 372 264 680 218 534
 250 175 313 137 750 561 164 749 298 783 455 158 160 249 491 740 215 605 444 194 113 382 520 234 577 496 546 231
 254  70 687 506 296 735 226 288 207 220 744 119  94 162 681 179 211 748 345 229 755 665 651 191 338 522 142 725
 312 200 583 486 383 163 364 567 335 267 718 210 385 274 277 165 290 235 280 778 315 623 739 251 285 621 300 584
 265 551 390 136 252 178 479 724 612 769 224 268 284 183 673 173 375 553 462 310 392 639 255 324 317 596 185 421
 425 367 661 640 272 302 307 565 396  89 662 504 271 299 212 400 316 512 433  93 326 275 339 414 253 676 399 582
 245 266 347 405 276 411 243 728 342 206 202 767 765 303 204 402 435 410 407 446 287 457 467 368 327 622 355 297
 241 509 346 333 541 363 289 454 488 517 378 373 369 357 494 384 406 133 308 319 331 381 386 637 321 519 453 360
 336 377 314 782 320 393 306 439 217 419 498 550 334 260 483 257 351 349 395 374 417 365 309 394 262 549 490 450
 261 199 127 436 228 352 481 236 420 379 408 447 256 362 461 585 456 376 526 647 340 465 350 432 482 293 511 474
 523 380 109 627 359 270 387 242 563 532 409 468 449 658 568 341 354 437 516 286 598 344 246 602 358 197  88  79
 404 500 102 463 442 318 401 370 452 608 304 291 594 426   4 540 389 214 632 328 533 451 356 269 589 343 642  25
 424 609 193 125 610 539 416 415 448 470 141 477 413 597 547 305 499 525 398 431 497  12  32 503 501 301 485  77
 443 278  71  87 556 576 538 337 469 294 391 458 366 555   2 508 604 459 548 466 615 198 487 295 558 209 440 182
 531 492 247 150 530 464 493 132  20 430 562 472 471 507 353  61 590 114 641  21 397 620 510 536 124 322 631 569
 478 514 434 222 473 575 535  19 480 460  83 428 564 544  13 693 684 120 628 719   6 515 595 524 100 180 388  16
 666 601 581 677 557 580  24 126 591 554 130 429 422 646 131 588 592  18   7 616 196 292 103 527  72 237 543 484
 476 570 678 518 232   3 599 122 618  38 330 690 715 695 579  45 571 311  30 701 603  31 138 574 679  36 239 169
 643 747 706 688 655  44 731 153 208 654 128 529 613 649 668  26 600 155  43 674 625   1  39  27  84 187 559 154
 645 660 238 689   9 171 667 112 502 135 227 734 721 685 233 172 629 521 566 692  59  76 101 630  29 181 730 176
 670 737  14  51 743 361 606  53 134 152 705 751 733 626  46 656 614 244 708  82  80   8 166 650 560  68  58 714
 716 273 707 704   5 121 732 441 143 263  22 607 617 593 657  86 633 282 161 742 223  98  42  23 696  10 648 745
  15 741 184 283 513 174 652 159  37  11 170 711 697 694 635 624 573  49 682 722 110 438  56 659  75  28 578 720

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.07573e+06us (= 8075.73ms, 8.07573s)
Wall-clock time (full program): 8.13426e+06us (= 8134.26ms, 8.13426s)
Satisfaction error: 0
Number of search iterations: 1402
Number of local moves: 753 (including on plateau: 297)
Number of local minimum: 81 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 407 114 736 643 742  23 232 301 356  80  63 723  76 687  38 692 724 110 700 676 689  50  10  25 694 276 697 426
 731   4  13 699 133 711  69  49 681   9 753 642  18 651 150  39 750 231 732 208 117 713 125 619 737 674 587 145
 552 197  66  21 136 739 622 234 244  27 310 103 591 695 181 648 716 160  77 698 262 727 105 627 709  62 730 751
 752 615 685   5 549 599  29  58 298 639 178 227  16 661 657 620 762 185  56 666 560 702   8  85   6  92 520 760
 743 593 579 516 625 718  79 211 177   2 271  84 518 755 693 675 686   3   7 715 268 650  65  15  91  11 632 608
 590 626 581 206 617  19 379 279  70 174  37 151 604 754 741 644 631 257 553  47 157 577 164 645  88  12 647 740
 462 533 512 349 628 611  42  26  90 630 442 106  32 522 662 598 528 188 641 669 221  14 171 468 573 154 592 526
 561 415 551 102 585 216 152  73 191 530 583  59 470 580 629 614 586  48 542 495  17 453  68 633 569 124 534 610
 682 595 510 291 547  81 115 455   1 273 456 471 655 539 519 555 570  71 491  20 202 602 300 469  61 466 445 548
 467 485 228 252 513 140 143  72 565 498 618 387 480 481 567 486 550 396  74 287 461 538 111 433 465 207 557 529
 472 584 501 306 449  22 127 163  43 621 444 233 410 613 500 382 416 308 536 714  99 451  51 311 523 601 616 494
 418 362 502 222 371 463 474 440 429 398 386 497 544 408 394 381  57 218 454 575 352 525 378 189 331 434 430 358
 406 361 363 531 424 397 508 159 563 316 345 330  44 562 492 457 479 226 448 372 438 380 258 281 425 464 607 354
 333 432 370 261 302 377 325 488 545 436 404 478 452 431 476 401 368 493 422 141 420 409 344 582 290 326 309 375
 318 393 546 357 336 473 335 405 365 556 511 399 392 484 441 264 414 419 272 391 338 323 421 374 412 340 347 364
 334 535 269 351 343 280 729 509 342 317 255 263 703 384 403 217 359 341 439 245 389 348 475 447 353 367 283 710
 360 350 214 400 490 303 559 369 251 254 748 568 402 256 450 355 390 784 411 314 532 275 701 237 209 305 274 229
 296 388 385 504 184 297 487 589 299 293 554 612 458 286 376 246 285 238 249 265 284 734 566 517 250 782 200 366
 230 315 506 688 213 304 597 324 665 446 322 130 527 337 295 266 270 437 690 443 667 210 521 108 307 541 339 292
 460 248 242 672 427 320 719 707 658 199 138 766 186  75 243 129 113 634 203 769 704 277 673 223 195 679 126 205
 147 162 239 609 722 328 691 663 763 201 660 327 166 176 745 173 260 768 220 156 767 107 594 423 224 225 153 321
 161 288 148 726 319 635 503 781 373 728 179 638 329 198 139 168 204 721 313 282 624 247 749 196 193 680 278 190
 142 236 312 706 101 770 537 543 574 187 757 623 677  45  30 131 118 652 759 289 656  95 764 121 773 241  97  54
 137 212 505 477 747 576 758 671 540 215 684 180 158  24 175  87 165 738 167 194 259 169 636 717 725 659 332  83
 144 346 128 482  86 524 435 572 637 765 119 640 515  40  31 172 267 603 746 134 413 112 670 779 720 712 146  52
  55 775 489 149 192 170 417 558 564 756  36 459 132  33 155 783 104 588 596 499 428 646 683 653 182 735  64  89
 123 733 776 383 109 654 708 514 571 772  41 294 664 253  28 761  96 678  98 606 183  78 605  35 649 116 395  67
 507  93  34  82 100 240 219 777 135 668 696 600 771  60 780  46 122 496  94 120 483 578 774 778 235 705  53 744

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00025e+07us (= 10002.5ms, 10.0025s)
Wall-clock time (full program): 1.00608e+07us (= 10060.8ms, 10.0608s)
Satisfaction error: 2
Number of search iterations: 1696
Number of local moves: 615 (including on plateau: 149)
Number of local minimum: 140 (including on plateau: 25)
Number of resets: 1
Number of restarts: 0

Problem in column 18: 110 231 160 185 3 257 188 48 71 396 308 218 226 493 419 341 784 238 437 634 768 721 652 738 603 588 678 496 => the sum is 10991 rather than 10990
Problem in column 25: 694 737 709 6 91 88 573 569 61 465 523 331 425 290 412 353 209 250 307 195 224 193 773 725 720 182 649 235 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 340 573 764 172 657 740 121 489 720 464 578  52  63 780 544  54 355 563 779 114  71 673  76 153 158 155  50 732
  34 757 727 396  55  80 616 709 500  64 670  25  45 624 703  44  58 124 722  70 714 710 119 751 142 697 154 680
 117 756 691 762  95 164 145 107 675 472 742 109 173 621 783 150 683 272 583 708  90 231 126 320 436 782  20 177
  85 736 113 138 167 165 623 147 766 702 672 300  56 273  75 187 225 535 560 581 229 668  87 729 511 701 298 661
  84 559 724 718 230 176 461  82 700 604 707  32 100 781 509  93 190 218 748 122 743 255  94 690 281 555 175 359
 144 185 558 717 110 711 137 514 666 765 682 308 201 640 699 129 161 210 152  97 163 758 761 685 378 246  43 170
 200 728 183 501 240 141 251 188 592 607 370 258 130 632 186 214 586 181 292 775 676 784  92 759 254 737 302 131
 116 102 778 197  30 203 140 739 760 475 476 160 162 642 744  88 716 222 571 745 695 659 224 297 221 377 244 207
 270 192 239 202 565 237 209 348 530 580 773 216 313 620 217 289 249 294 387 772 346 504 440 626 525 628 220 199
 260 242 282 351 271 400 267 208 512 771 383 428 232 562 212 132 721 471 735 442 458 274 262 265 686 706 196 261
 323 360 325 688 204 361 352 312 550 629 445 305 390 394 715 206 656 777 518 133 415 252 317 276 291 398 263 135
 334 463 247 358 280 350 332 293 465 494 671 567 253 427 198 487 408 448 344 264 194 413 342 331 566 290 493 678
 178 345 537 278 367 241 286 256 191 677 381 386 647 319 193 279 597 410 284 403 385 393 674 422 763 466 373 259
 388 356 285 376 327 338 306 369 460 536 495 541 333 357 453 547 433 257 248 401 417 395 630 364 307 508 295 268
 337 503 250 389 506 519 473 347 288 328 354 304 480 552 426 456 434 446 371 310 275 444 412 326 368 459 407 226
 405 485 462 234 438 339 402 336 397 457 189 106 481 546 375 470 526  67 483 283 531 482 341 452 447 324 507 425
 414 431 513 564 365 606 379  59 416 330 449 492 372 166 538 362  46  81 435 484 380 553 301 423 477 382 424 548
 652 568 321   1 533 605 430 374 421 233  10 238 450 391  42 420 609 128 277 532 439 468 614 557 115 496 467 599
 622 409 615  89 529 366 455 486 213   3 269 443 406 182 502 608 534 595 205   5 524 392 776 429 108 111 523 591
 594  98 516 329 540 574 404 643   7 174 441 598 418 159 149 579 123 101 631  15 521 554 625  33 399 575 588 602
 454 561 522 432 515 479 520  38 215 296 318 669 587 179 542 696  29 698 719 517  57 168 451 498 335  11 419  65
 539 596 584 474 633 582  37 411 266  69 309 648 641 243 505 488 156 125  21 645 593  83 649 299 490 151 569 184
 600  18 103 611 572  14 627 612 134 171 157 601 603 236 343 619 658 747 148 527  28 211 143 617 576 136 687 491
 750  35 497 638   8 667 769 646  48 105 139 469 556 287 528 589 127 746   2 316 635 120 543  68 219 169 654 660
 733 704  72  41 590 545 749 223  27  60  17 650 770  53 655 705 549 712   4 570  23  79 349  96 618  99 653 644
 551  24  40 577 730 694 651 636 363  62 112 637 723  78  49 681 180 663 713 235 692 315  73  12 322 437 689  51
 741   9  16 118 768  31  74 734  61 478  77 755 726  19  66 665 754 314  36 311 610 146 738 499 752  91 767 634
 725 195  26 639 664 662 774 684  47 384 104 693 679 228  39 753 227 585  22 613  86   6 731  13 245 303 510 353

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00024e+07us (= 10002.4ms, 10.0024s)
Wall-clock time (full program): 1.00606e+07us (= 10060.6ms, 10.0606s)
Satisfaction error: 2
Number of search iterations: 1781
Number of local moves: 739 (including on plateau: 186)
Number of local minimum: 142 (including on plateau: 24)
Number of resets: 1
Number of restarts: 0

Problem in column 5: 657 55 95 167 230 110 240 30 565 271 204 280 367 327 506 438 365 533 529 540 515 633 572 8 590 730 768 664 => the sum is 10989 rather than 10990
Problem in column 14: 780 624 621 273 781 640 632 642 620 562 394 427 319 357 552 546 166 391 182 159 179 243 236 287 53 78 19 228 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 333   3 295   1 673  10  44 602 756 163 662  12 206 132 710 746 110  17 762 714 654 140 754 672 700 759  63 297
 704 698 187  40  49 723 348 717 685 197 357 747 218  15 695  27  21 157 607 675 692 126 705 195 582 752  14  57
  58 676 231 755 680 674  23 708 555 251 211  75  32 268 687 739  29  64 600 369 671 703 766 248 722   5   6 184
 641  92  82 737 663 659  16 644 719 212 763 170 531 102 729 744 558   2 718 376  20 125 559 121  26 653 309  19
 633  62  80  45  88 651 101 689 666 139 367 741 277 230 748 634 107 626 707 141 652 711 648  97 355 527 235  33
 548 521  48 712 691 650 159 572 627  39 106 164  41  11 702 730 660  35 715 208 569 483  34 473 646 620 222   4
 632 469   8 655 587 262   7 733 479 148 256 635  18 119 518 758 172 616 592 586 637   9 580  30 606 656 123  99
 583 622 316 597 562 596 142 341 584  50 529 554 516 155 488 605 117 390 507 114 563  79 623 269 345 532  96 115
 519 595 319 154 599 636  95 545  13  70 149 564 524 176 706 522 505 504 499 500 514  38 441 549 131 615 221 287
 571 474 317 510 494 440 273 379 451 377  74 539 225 285 426 574 593 594 612  54 578 200 476 138 118 466 608 144
 557  56 193 528 486 630 435 237 422  89 310 397 551 611 428 296 439 201 443 463 517 591 177 404 250 515 480 284
  25 540 485 465 613 258 307 492 423 236 523 482 427 506 288 530 393 432 233 389 395 459 396 373 431 261 368 260
 257 436 566 538 113 598 420 448 454 276 304 475 445 265 179 447 495 411 457 384  69 364 513 471 354 450 496 305
 380 387 458 442 546 534 374 343 386 347 315 330 437  28 311 419 406 498 409 334 444 382 331 487 375 417 424 446
 453 353 185 399 366 339 568 401 456 472 255 270 328 552 490 336 508 462 279 502 291 477 337 356 361 321 403 470
 281 292 624 418 400 202 326 452 272 438 370 461 280 468 394 425 314 412 392 643 402 381 338 192 525 429 322 537
 278 481 601 300 371 421 325 247 216 405 774 565 398 460 204 350 385 388 227 588 359 340 215 378 536 360 329 489
 286 243 550  87 324 320 501 352 346 713 604 430 252 351 313 289 327 628 303 645 196 259 239 681 589 169 560 433
 372 271 478 143 312 240 579 493 224 688 750 301 581 294 282 293 509 299 342 298 241 232 323 614 577 267 484 503
 109 306 573 223 194 363 467 274 219 767 740 116 772 725 410 407 631 174 362 753 249 217 166 128 621 103 365 556
 173 318 234 242 358 275 649 226 220 760 610 178 678 738 383 191 180 308 214 561 784 349 105 724 111 165 618 638
  98 344 497 464 290 112 773 146 253 709 302 186 683 776 266 210 190 416 203 670 246 727 244 642 175  42 665 661
 449 171 414  83 188 764 782 158 535 696 590  77 145 512 150 151 167 781 229 198 153 743 408 209 283 677 701 576
  72 749 736 136 415 127 609 263  52 533 547 779 664 697  59 161 541 726 189 199  85 526 100 335  67 181 667 775
  46 133 669 771  68 160 745 245 742 491  84  71 783 716  43 183 732 770 207  55 778 640  73 238  36 137 690 684
 751 543 777  94 544  66 734  53  81 520 205 228 254 617 130 162 619 647  60  51 108 391 570 720 699  22 658 686
 768 434 332 694 134 124 585 152  93 629 147 682 213 542 122  37 625 264  91 455  76 731 765 693 679 120 135 668
 413 721 735 757 182 156 603  78  61 575  86 761 511 639 129  24 657 168  31  65  47 567 104 553  90 769 728 780

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.45853e+06us (= 8458.53ms, 8.45853s)
Wall-clock time (full program): 8.51698e+06us (= 8516.98ms, 8.51698s)
Satisfaction error: 0
Number of search iterations: 1481
Number of local moves: 679 (including on plateau: 240)
Number of local minimum: 99 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   3 470  94 152 765 647 736 350  13 698  27 739 703 742  28 107 665 616 744  84 741  39  60 293 644 767  45  18
 649 426 722  12 656  26 669  89  14 371 674 740  72 707  21 384 191 706 689 189 697 695 144  44 727   9  16 651
 286 648   6  76 743 735 328 597 486 640 202 747   8 700 712 416 148 702 733 143  50  63  22 147 162  97 664 729
 629  75 737 610 652 630 591 561 691 701 224 598 105 678  32 133 173  56 444 111  10 685 300  46  48 684  62 724
 680  65 667  34   4 592 692  71 711 688 112 628 483  80 609 693 130 627 713 243 653   2  20 432  33 642  29 657
 540   7 544 467 550 163 682 645 596 726 122 620 563 594  35 611  57 521 579 233  11   5 194  47 203 495 585 595
 624 258 673  30 549 603  19 677 587 631 169 494 445 562 602  66 120 175 527 207 583 138 459  81 113 634 559 405
 632 322 366 186 683 505 633  15 655 569 102 574 260 489 552 155  74 567 503 193 156 177 696 153 557 523 572 121
  86 298 491 164 534 560 525  70 484 551 476 537 519 531 108 593  77 641 621 382 448  61 575 132 436 334  52 704
 297 571 428 223  42 398 499 487 128 424 493 529 553 526 403 454 625 558 259 312   1 188 315 231 502 586 490 468
 536 482 639 198 421 510 500 643 363 532  24 479 589 447 409 263  37  96 235 294 446  36 661 245 464 514 347 580
  38  17 295 303 478 383 430 623 323 214 279 660 515 408 508 538 545 568 361 353 533 240 306 332 449 320 475 496
  49 524 427 106 292 601 481 434 271 576 346 415 543 504 520 402 480 497 352 157 472 517 437 451 247 310 333 246
 380 438 460 417 528 474 404 413 355 285 257 311 488 372 554 507 420 287 313 394 455 412 365 341 309 275 471 305
 556 348 397 390 339 364 613 443 184 425 440 256 401 775 431 218 349 221 266 441 439 335 452 395 389 319 343 461
 419 435 314 779 325 229 466 317 386 330 318 396 406 326 357 750 354 204 756 418 210 391 410 378 212 423 411 270
 252 360 522 433 359 614 381 369 265 457 362 296 267 539 304 385 458 268 542 379 158 584 368 570 511 262 358 367
 302 755 400 338 321 241 414 760 182 142 658 399 473 261 373 709 376 125 345 492 393 654 388 407 225 356 284 217
 450 731 324 725 215 199 222 205 336 746 469 442 316 289 250 501 237 274 679 456 329 541 180 498 666 154 307 249
 201 518 272 638 331 342 192 244 392 370 687 136 288 301 716 566 160 290 179 768 422 375 374 723 774 200 248 283
 728 280 254 282 174 344  31 778 209 242 465 124 605 178 255 668 721 506 196 694 151 513 732 530 637 226 299 168
 277 748 278 340 239 308 757  98 159 123 734 185 146 171 622 477 730 208 219 612 599 764 761 618 281 197 190 149
 273 754 387 635 141 753 135 512 659  69 686  88 269 264 167 485 708 172  99 429 232 615 127 758 548 139 675 211
 607  83 752 535 617 236  78 181 719  54 699  91 137  43 681 117 676 604 337 555 564 276 227 626 140 771 516  68
  92 327 228 581 100 165 216 131  73 206 377  90 738 176 751 234 606 619  64 710 745 762 690 646 770 104 663 126
 781 109 150 777 773 118  85 573 220 114 463 351 251 145  82 230 590 636  93 714 749 662 759 600  41  87 671 166
 170 291 110 776  58 183  95 509 766  51 547  25 718 103 238 115 705 187 119 462 161 588 253 720 769 782 717 772
 453 650  53 783 101  67 116 195 763  55 578  40 129  79 670 213 577  59  23 565 582 672 715 546 134 780 608 784

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00592e+07us (= 10059.2ms, 10.0592s)
Satisfaction error: 2
Number of search iterations: 2155
Number of local moves: 865 (including on plateau: 286)
Number of local minimum: 150 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

Problem in column 17: 665 191 148 173 130 57 120 74 77 625 37 545 480 420 349 354 458 376 237 160 721 730 708 676 606 590 705 577 => the sum is 10989 rather than 10990
Problem in column 25: 644 727 162 48 33 203 113 557 436 502 464 449 247 309 389 212 511 225 666 774 637 281 548 140 770 41 769 134 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 406 716 632  95 102  66  83 585  27  93 558 565  49  98 140  54 592 770 746 599 624 650 666  55  14 775 760 470
 117 744 669 172 544 161 107 598 247 193 754 601  42 682  97  15 100 534 778 717  64 463  17 299  16 769 741 749
 753 660 776  33 217  38  35 759 605 374 428  31 225 279  24  37 783 761 630 739  58 494 109  85 649 640 711  57
  78 683 497 719 124 145  76 659 664 269 777  89 697 108  30  91 492 724 740 780 139 564 138  61 146 136 672 692
 732 510 736  26 708 153 178 645 356 464 206 755 177 491 200 163 642 661 195 478 196 533  50 394 207 218 715 201
 518 709 224 151 120 731 194 772 597 699 263 137 180 112 149 128 742 766 771 765 116 617 327  92 259  73 626 152
 662 465 183 251 167  84 712 588 560 384 273 341 743 675 133 158 703 495 184 781  71 774 113 272 199 214 593 212
  88 723 706 254 305 737 729 722 324 365 169 216 171 235 359 244 768 578 302 303 162 665 285 230 239 114 653 344
 568 767 725 205 222 733 281 343 748 689 204 202 220 287 353  51 782 233  96 393 277 668 242 150 387 345 600 219
 396 547 750 213 231 252 350 260 215 752 142 382 186 105 335 762 383 779 449 414 379 679 306 381 208 211 610 313
 369 513 435 226 320 336 720 573 319 472 718 392 330 271 348 403 451 401 176 309 318 511 237 367 386 245 407 437
 571 536 187 321 351 784 758 366 289 609 270 413 288 696 257 255 450 332 331 308 329 337 181 293 357 246 502 373
 541 453 290 738 370 179 325 323 427 307 380 400 489 433 467 322 420 276 434 352 473 425 408 253 424 317 526 238
 402 452 436 347 415 469 294 539 411 540 283 426 361 340 346 339 248 375 385 444 390 445 314 358 338 362 410 521
 412 364 266 479 292 298 371 448 520 355 354 311 439 466 349 310 389 275 423 333 461 523 477 460 490 378 304 443
 499 243 458 399 164 262 454 405 190 552 447 291 416 515 549 432 516 496 249 274 267 429 391 482 566 418 250 376
 468 143 282 562 264 535  60 404 197 236 525 493 261 531 278 638 481 438 575 503 483 210 512 480 569 422  52 388
 127 295 556 550 634 372 529 474 147  80 111 296 501 584 446 488 431   3 542 484 457 131 377 631 363 620 256 505
  18 156 528 462 635 430 582 119 543 265 471 258 522 315 643 658 498 500  12 228 514  23 590 485 300 442 160 633
 241 129 455 596 595 621 551 203  22  77 487 527 576 519 397 579  59 110 456  65 572 130 628 594 622 561 132 486
 154  94  82 589 581 368 680 421 577 103 555 613 504 227 440 557  40 546 586 476  25  75 553 545 574 284 234 507
 587  41  43 409 508 326 395 175 173 123 475 537  29 567 671 652  39  53 646 657 648 209 509 615 580 517 188 618
 328 121  86 563 641 530 591 198 656 221 734 608 570 548 639 674  79  81 532  36 559 191  19 670 398 524 165  28
 229   2 189 604  46 700 297  62 170 583 629 603 602 751 619 654 223  47 268  56 726 157 773  11 554 684  70 681
   5 240 280 651 419 316 192 104 637 614   9 764 687 506 701 538 185 168 135 159 607 148 698 690  21 714 126 676
 673 118 417   7 627  13 459  99 612 686 623   4 678 616 625 721  67 174 166 155 663  90 655 713 611   6 106 606
 747 441  34 691 693 704 342  72 694 763 101   8 312  32 728 707 141 232 115  48 702 144 730 688 757  10 334  20
 301 125  68 677 695 647 644  74  63 122  44 727 735   1 667 360 286 182  69 134 710 705 685 636 756 745  87  45

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00602e+07us (= 10060.2ms, 10.0602s)
Satisfaction error: 2
Number of search iterations: 1832
Number of local moves: 747 (including on plateau: 238)
Number of local minimum: 126 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0

Problem in column 7: 83 107 35 76 178 194 712 729 281 350 720 758 325 294 371 454 60 529 582 551 680 395 591 297 192 459 342 644 => the sum is 10989 rather than 10990
Problem in column 19: 746 778 630 740 195 771 184 302 96 449 176 331 434 385 423 249 575 542 12 456 586 646 532 268 135 166 115 69 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 243 202 763 373 768  96 200  64 765 134 576 567 599  52 122  67  58 180 630 696  35 769 152 725 777 197 464 716
 210 273 715  62 388  57 729  29 756 766 170 542 722  38 141  49  56 534 663 457 149 416 211 734 776  68 774 505
 389 613 778  80 106 185 251 115 666 123  76 719 639  98 767 121  92 670 754 707  70 113 555 205 739 758  28 573
 219 634 712 780  72 229 735 103 443 136  37 362 724 168 253 232 159 201 538 759 151 629 163 709 656 101 655 429
 578 412 711 148 738 265 213 156 718 688 191 245 164  75 198  36 746 635 524 737 307 247 111 783 591  27 649  97
 288 728 231 291 119 770 220 173 627 570 463 117 186 222  48 178 750 691 773 568 236  79 287 614 512  65 694 490
 689 357 392 142 301  83 775 214 757 102  39 678 643 228 189 239 204 196 583 275 218 745 360 408 569 237 685 682
 514 444 319 206 781  53 333 172 695 437 587 311 244 133 150 347 161 741 460 187 779 255 304 462 733  84 762 336
 517 179 449 298  86 257 246 224 772 396 708 717 181 249 328 221 109 640 664 563 424  61 448 165 671 278 506 633
 755 294 660 282  78   9 281 199 400 748 667 669 130 177 208 369 377 194 646 352 354 207 350 277 454 782 668 403
 305 295 384 154 616 299 261 784 612 539 223 397 351 271 475 363 440 322 618 303 387 321 310 367 507 183 528 375
 760 252 260 414 343 508 409 511 250 209 415 353 248 283 215 486 286 480 493 394 274 276 398 459 658 358 653 345
 238 752 470 284 227 714 376 330 379 592 167 356 312 693 327 368 359 280 338 300 262 402 316 240 581 606 217 504
 395 272 348 285 600 270 665 410 188 404 439 292 510 450 499 468 371 132 293 366 461 364 315 339 608 500 406 340
 225 382 456 383 420 442 428 489 242 477 487 314 441 433 390 334 372 472 355 256 331 501 615 266 401 320 230 529
  73  26 126 548 349 309 521 546 324 553 341 483 318 421 551 423 469 540 484 556 557 455 566 530 138 326 120 337
 268 391 329 582 385 586 144 452 432 498 541 235 502 323 494 434 426 564 317 438 386 642 435 139 145 436 131 335
 153 549 418 482 544 447 481 554  93 419 162  47 519 535 547 407 525 193 297 515 378 533 453 628 108 513 399  91
 417  16 365 601 595 561 473 523 234 226 545 543 405 703 495 467 370 607 411 496  33 531 425 413  19 263  63 190
  99 175 558 571 381 446 603 527 195 361  44 659 431 503 522 731 474 174 254  10 580 509 451 619  74 710 171 158
 700  34 127 584 638  54 611  11  21  45 491  81 713 520 516 532 661 110 112 458 422 471 596 488 479 552 332 631
 203 720  12 730 575 572 176 590 344  66 192 562 497 574 641 602 598  20 125 478 742  30 594 143 212 705  18 269
 648 625 146 605 624 308 565 559 155  82  95 258 652 674 736 623 526 104   1 346 645 679   2 157 129 597 342 107
 296 560 241  17  23 673 622 732 147 662 589 537  89 518 588 675 577 116   5 264 743 325 593   3 166 579 184 466
 465  42 124  60 536 637 135 764  50 374 683  77  15 621 727 723 706 550 313  94 626 609 654 137  43 617 302 306
 620 751 380 699 677 702   4 632 140 636 692  40 105 686  85 740 279 169  55  71 114   8 610 672  25 427 290 681
 701 259  24 585  13 761  88 476 485 657 690 647  46 698 747   6 721 771  51 216 650 726  32 267 160  14 430  69
  22 753 492 744   7 697 445 651 100  90 680 182 604 644  31 749 118 704 233 128 676  87 684  41  59 687 289 393

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00611e+07us (= 10061.1ms, 10.0611s)
Satisfaction error: 2
Number of search iterations: 1790
Number of local moves: 819 (including on plateau: 261)
Number of local minimum: 116 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 219 634 712 780 72 229 735 103 443 136 37 362 724 168 253 232 159 201 538 759 151 629 163 709 656 101 655 429 => the sum is 10989 rather than 10990
Problem in row 15: 225 382 456 383 420 442 428 489 242 477 487 314 441 433 390 334 372 472 355 256 331 501 615 266 401 320 230 529 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 780 764  65 158 719  24 114 581 483  77  76 611 133  80 782 661 723 744  57 152 670 754 669 567 116  56  35 339
 460 505  20  62  37 622 127 504  92 463  69 708  98  19 117 701 772 676  60 648 727 743 200 536 748  30 770 476
 245 762 653 570  52 211 572 454 210  86 775 646  54  16 705 672 110 733  42 588 294 142 738 741  78 595 106 141
 497 174 100  34 271  81 317 778 131 132  70 682  29 175 769 779 766 235 598 777 602 574 771 735 120  73  79 641
 730 160 183 125 758 194 161 554 213 169 163 252 164 221 657 656 749 560  72 475 617 753 697 691 650 180  71 115
 520 166  14 784   7 765 377 636 107 594 759 658 181 165 172 760 582 538 155 232 601 367 336 756  94 198 220 246
 493 455 204 773 207 168 471 549 111 201 243 629 289 282 781 242 323 624 146 774 542 751 609 547  84 150 219 123
 649 702 249  64 102 173 512 776 340 739 192 632 143 353 261 149 218 665 259 501 767 162 255 707 124 348 303 645
 597 212 331 293 417 140 637 643 763 130 177 706 238 298 358 233 277 217 239 225 634 686 768 441 135 258 270 667
 397 346 251 319 530 272 540 740  99 618 215 613 276 237 420 368 196 612 327 439 469 279 761 478 144 269 324 451
 694 226 330 431 571 286 750 477 171 254 415 267 338 227 352 230 248 721 364 354 565 156 290 615 306 334 292 726
 652 203 333 206 551 408 752 412 386 715 307 421 229 236 228 326 746 265 312 274 485 257 302 280 234 350 383 737
 309 189 371 621 468 557 423 347 396 514 398 472 366 300 363 297 387 385 335 291 783 428 273 361 526 190 344 296
 395 444 262 450 456 399 405 453 357 640 394 264 390 359 435 304 372 341 437 487 315 305 316 402 422 382 462 342
 400  15 446 362 521 433 440 355 374 635 411 349 380 403 370 448 447 528 401 329 410 470 313  45 406 482 429 388
 179 416 392  10 466 508 308 288 647 430 496 325 426 457 287 445 414 321 599 507 105 516 379 522 543 328 244 432
 459 553 465 391 558 550  48 199 404 517 283 491 378 442 434 369  26 525 311 452 157 393 438 409 389 579 351 419
 461 449 544 548 241 532 188  39 513 489  43 345 418 518 529 531 511 216 488 500 322 499 197 223 492 506 630  18
 474 534 555 413 424 365 154 278 337 138 584 484 486 578 490 151 473 145 119 128 275 561 515  68 591 481 662 527
  95 545 607 427 195 675 222  38  13 603 498 295 563 655  93 535 689 299 375  87 121 539 495 247 509 464 523 583
  21 559 356 562 139 614 214 250 537  63 577 332 729 546  82 576 616  17 494 480 407 642 187  51 626 724 564  25
  97 458 503 443 113 569   2 231 627 590 678 129 683 631 147 556 360 533 596  49 285   6 266  58 696 685 623 376
 186 679 580 566 628  53  85 112 638 118 654  23 524 425 620 467  96 167 731 608 109 671 170  90 502 568 680 240
 134 104 587 668 552 710 604 137 711 284 436  83 639 633 663  12  88 209 644 625 148   1 191 575 510 573 159 310
 103  44 541 605 593 619 610  46 695 586 182  28 674 699  50 136  41  66 687 600  59  61 660 373  75 747 709 700
 281 606 589 202  31 742 720 126 690 320 703 184 736 681 684  32 664   8 659 101  27  47   5  89 585   9 757 712
 381   4 725 698 651 253 718 314 268 193 713 153 704 666  33 263  74 384 728 122 176   3  11 343 693 714 745 260
 301 716 734 205 732  67 519 673 677 692 479 208 722 688 108  91  22 256 755 185 318 224 178  40 592 717  36  55

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00026e+07us (= 10002.6ms, 10.0026s)
Wall-clock time (full program): 1.00608e+07us (= 10060.8ms, 10.0608s)
Satisfaction error: 3
Number of search iterations: 2382
Number of local moves: 965 (including on plateau: 347)
Number of local minimum: 181 (including on plateau: 42)
Number of resets: 1
Number of restarts: 0

Problem in row 3: 245 762 653 570 52 211 572 454 210 86 775 646 54 16 705 672 110 733 42 588 294 142 738 741 78 595 106 141 => the sum is 10991 rather than 10990
Problem in row 25: 103 44 541 605 593 619 610 46 695 586 182 28 674 699 50 136 41 66 687 600 59 61 660 373 75 747 709 700 => the sum is 10989 rather than 10990
Problem in diagonal 0: 780 505 653 34 758 765 471 776 763 618 415 421 366 359 370 445 26 216 119 87 407 6 170 575 75 9 745 55 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784  38 123  70  94 680 188 721 294 269 483 770 760  64  88 414 717  87  43 573 729 647 577 626  40 682  54 375
 631  55  83  75 715 739 609 761 650  66  67 685 130  44  98 750 757 669 534 482 697 102 632 633  51 104  80  91
 705  50 154 768 749 695  60 543 608 162 138 781 575 168  53  46 490 184 324 107 764 779 636 645  57 100  36 613
 145 580  41 782 630 643 215 753  82 620 689 569 744  45  89 746 174  86 196 571 103 195 659 663 499 209 106 156
 202 624 142 231 776 519 114 672 135 731 727 342 567  49 109 707 754 180 147 755 112 172 714 767 126 219 349  48
  61 699 182 155 301 766  68 553 649 545 621 773 225 226  65 585 148  95  34 635 756 258 775 618  77 161 194 765
 228 500  90 146 181 485 783 694 234 133 574 698 193 271 221 558 125 105 293 780 186 769 475 666 772 210 299 321
 298 421 159 774 720 517 339 599 327 259 492 418 115 252 350 550 213 119 245 763 771 166 533 179 207 247 253 704
 171 590 374 365 151 600 237 623 762 385 598 238 163 208 345 584 236 502 296 777 204 312 603 307 745 212 249 153
 227 759 250 239 742 549 297 656 676 594 346 243 279 437 261 741 224 216 352 752 192 214 614 387 176 129 241 197
 203 572 379 703 344 646 223 468 588 288 535 369 380 407 310 230 251 641 361 362 189 286 447 360 270 422 255 501
 233 611 353 158 364 505 381 378 532 449 559 778 357 175 201 268 679 358 232 530 382 265 433 341 451 300 404 313
 508 333 426 425 263 758 304 267 371 523 452 397 366 306 386 303 229 326 246 384 392 510 444 464 441 319 471 376
 455 405 359 423 406 322 412 527 439 465 411 402 390 486 395 372 283 337 393 347 461 165 373 419 348 314 377 504
 331 320 458 334 295 462 335 453 367 291 302 363 466 403 477 409 399 272 354 311 427 469 456 420 467 546 368 435
 394 370 472 287 211 257 383  23 491 260 538 318 459 400 509 438 450 446 496 478 495 330 289 325 388 479 556 448
 309 413 266 540 391 262 487 417 443 242 628 190 401 338 323 507 429 398 488 410 602 173 281 531 514 518 454  35
 494  22 277 470 408 120 536 244 591 476 274 273 648 512 440  92 473 178 430 128 480 484 308 547 424 497 537 627
 528 332 557 498 463 264 460 442 124 170 149 513 596 389 521 205 597 493  24 152 520 607 235 416 415 292 583 445
 431 206 582 316 434 284 616 282  17 329   4 137 336 474 644  15 640 586 617 351 568 524 290 554 167 489 581 516
 511  78 560 285 605 139 564 436 356 280  96 428 593 725 539 177 610 506 604  47 160 606  99 134 691 565 503  93
  39 164 578 653 592 278  42   1 555 457 121 654 687 570 651 140 561 548 622  32 191  63 220   2 737 637 525 670
 589 328 515 563 542  14 579 108  52 111   8 101 683 677 541  71 587 222 724 343  33 708 340   7 601 552 701 690
 657 355 743 660 254 256 681 136 187 619  73 110  69 551 738 276 199 562  16 143 673 576 113   6 722 661 736 218
 595 658 716  21  74  84 696 127 615 481 141  12   5 686 529 566 432 747 733 169  11  81  97 652  28 675 671 688
 522 526 726 305  27  85 634  18 150 315 674  13 662 709 629 544 117 740 728 275  76 185  20 240 710  25 693 642
 702 664 712 665  58  30 122  26 639 719 612  19 131 718 748 667  59 655 723 217 132 706 183  72 198 692   3 118
  37 317 713  79 200  31 625  62  56 751 678 396  10 700 730  29 157 732 735 116 684 638 144   9 668 734 711 248

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.38926e+06us (= 6389.26ms, 6.38926s)
Wall-clock time (full program): 6.44816e+06us (= 6448.16ms, 6.44816s)
Satisfaction error: 0
Number of search iterations: 917
Number of local moves: 702 (including on plateau: 225)
Number of local minimum: 33 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 714  28 316   8 644  19 734 709 223 652 664 671 736 711 159 262  57 776 677 718 282  84 765 108 138  64  50  21
 697  13  32 328 698  15 768 620  47 427 693 564 355  54 196 135 137 647 692 749 215  35 468 667  58 707 241 732
 715 422 565 103 739 627 680 738  20 747 643 694 717 186  31 511  88 478 757  18 208   4 116   3 386   7 198 589
  53  60 280 465 623 710 701 719 226 556 654 275 653  55 579 523  91 122 661  27  36 607 668  17 471 449   6 703
 187 100 299 569  87 570  74  46 238 352 658 689 610 228 249 572 123 752 351 666 225 596 683 495 212 585 174 600
 504 559 332 563   5   1 562 646  67 136 494 629 573 637  26 154 466 102 553 639  42 525  38 624 576 650 175 712
 439 169  34 514 502 531  75 740  16 431 447 560 593 543  56 656 489 199 445 633 124  10 611  99 614 672 143 645
 630  92 272 202 566 520 451  79 253 320 554 642 626 476  30 165 475   9 508 486 192 548 536 665 533 429  69 662
 526 558 515 454 426 162 499 549 274 193 398 617 375 343 590  82 467  12 529  11  43 550 631 546 568 487  40 545
 366 240 505 459 552 474 185 480 461  73 625 561 388 496 460  83 319 263  44 615  95 473 541 695 126 597 145 669
 229 423 266 544 587 571 767 424 127 164  37 608 509 146 369 601 519 276 402 472 477 484 524 279  23 507 203 452
 353 231 455 574 612 438 284 551 446 288 261 463 349 535 528 584   2 191 361 421 395 308 305 456 310 488 390 411
 315 577 372 490 370 373 448  86 404  97 435 384  61 470 464 450 521  22 517 567 506 458 277 354 547 503 290 632
 112 367 345 326 337 377 392 481 376 419 347 416 364 368 500 510 380 555 195 412 297 493 512 385 583 357 383 401
 378 779 356 371 342 340 407 397 387 433 420 346 268 325 363 417 485 294 462 254 329 327 291 469 409 399 527 415
 443 414 727 389  93 350 334 538 289 413 360 314 605 483 434 230 557 598 153 287 393 207 479 303 396 365 492 344
 578 197 257 539 318 213 307 235 381 729 234 733 255 453 283 641 540 586 267 302 432 306 278 440 210 219 613 444
 708 301 724 406 296 394 425 673 418 309 706 270 216 410 382 179 250 771 188 247 258 304 321 311 339 293 728 163
 441 121 688 218 312 239 359 298 285 691 251 348 379 252 755 705 482 575 678 184 754 286 194 232 259 313 628  63
 635 400 619 217 264 323 358 260 513 741 156 206 362 181 725 690 731 542 300 333 457 244 132 242 189 256 622 292
 403 595 224 618 338 634 222 651 722 374 151 130 295 751 685 269 265 580 117 331 764 180 131 177 173 335 638 237
 205 670 636 322 686 200 118  71 516 737 591 273 245 281 330 227 604 723 201 676 640 324  49 233 271 430 603 128
 149 190 687  14 178 437 167 139 675 442 236  33 317 746 391 756 160 518 168 663 534 133 783 766 748 109 679 172
 166 713 155  45 781 183 594 209 702 176 530  98  66 753  77 770 152 158 134  76 784 774 248 721 142 699 341 743
 148 655  96 730 220 129 144 140 742 428  80  68 105 716 775 588 684 336 161  62 726 735 674 682 621  85 436  24
  25 769 582 170 106 772 532  41 744 408 214 107  94 221 649 101 581 537 211 491 498 616  48 114 750 777 780  52
 113 602 501 648 204 782 246 405 778 182  81 171 115  59 763  39 773 243 497  51 762 720 609 147 681  89 700  29
 758 745 150 704 104 606 157  65 660  72  70 120 759 111 141  90 592 125 761 599 522 659  78 760 657 119 696 110

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.25079e+06us (= 5250.79ms, 5.25079s)
Wall-clock time (full program): 5.30973e+06us (= 5309.73ms, 5.30973s)
Satisfaction error: 0
Number of search iterations: 613
Number of local moves: 535 (including on plateau: 82)
Number of local minimum: 15 (including on plateau: 13)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 576  47 609 585 753 452 769  66  43 518  34 650 106 136  48 748 125  71  17 658 728 618 772  74 720 345  84 638
 779 122 260 482 193 168 415  53  91 781  63 384 215 736 169 627 714 107  79 369 760 602 557  76 723 161 750 554
 767  35 774 146 150 464  94 158 177 765 126 763 710 575  29 756 174  31  46 180 754 698 335 722 715 176  30 640
 157  18 562 739 117 108 591 303 109 655 113 668 676 743  25 707 145 148 217 206 291 264  70 746 773 472 770 597
 777 104 203 497 681 546 245  78 284 759  83 669 659 776 163 362 130  28  22 283 717 725 212 682 300 456  49 500
 258 218 624 249 716 778 118 164 242 664 147 701 606 559 101 718 171 166 226  89 501 510 692 112 412 590  93 564
 333 233 382 680 186 706 784 580 336 621  52 272 693 783 127 539 694 138 142 281 287 555 276 143 133 194 326 514
 751  85 239 506 596 517 346 475 223 511 197 290 578 761 265 247 191 288 124 740 310 205 120 240 549 667 243 726
 782 238 603 195 139 758 211  75 775 615 257 363 252 201 198 508 192 250 366 162 314 614 582 780 305 235 293 727
 231  80 285 686 185 685 691 320 304 708 196 259 189 149 531 208 225 228 689 199 733 270 690 251  61 653 744 540
 181 230 338 643 737 665 700 219 278 678 441 507 325  73 254 341 397 496 279 648 216 367 269 275 302 395 227 509
 292 210 202 311 462 229 660 349 255 494 461 370 487 297 274 167 266 402 455 542 485 762 182 684 409 271 342 670
 396 729 381 408 424 170 221 516 495 374 200 422 371 262 282 315 738 298 348 354 268 385 444 661 473 365 322 368
 350 306 188 375 232 372 324 405 301 450 358 400 556 309 498 356 457 443 453 190 490 295 361 619 353 601 521 427
 579 419 377 420 321 447 426 411 417 390 332 248 357 476 308 401 347 317 328  26 481 404 360 438 600 493 416 451
 355 613 459 483 327 318 512 330 480 267 421 458   2 530 388 289 334 286 399 316 622 460 431 364 418 436 313 379
 430 523 413 434 246  81 477 535 502 121 433  87 439 553 429 584 294 519 389 425 471 470 536 479 633   4 423  60
 392 699 184  21 378  57 446 525 548 299 598 543 589 610 383 561 406 351 544 474 244  20 376 489 537  82 398 236
 449 373 414 123 513 403  19 568 440   1 454 442 572 445 587 319 386 527 387 465 488 391 407 467 583  97 538 132
 359 503 100 534 620 102  23 641 529   7 631 570 623  68 637 428 499 599 241  45 532  96 463 560 380 486 505 209
 187 646 156 165 515 277 468 152 432 296 478 571 504  59 630 410 629 552 550 636 173 340  50 469 522 312 656 155
 563 607 662 533 116 214 558 569 547 220 721  14  99 207 566 435 634 712 625  77 134   3  54  24 626 612 551 307
 151 541 592 437 651   8  36 647 492 253 644   6  92 605 745 448 747 742 577 628 144 491 178 224  67 137 567 141
  95 604 159 160 343 724  88 632 528  37 757 545 526  58 749 119 696 713 588 711  15  10 666 339  72 687  38 331
 520 732 574  11  27  64 654 703 688  42 771 263  32  69 635 261 524 702 766 679 639  39 673  33  12 352 394 131
  62 695 484 273 110 179 183 734 616 280 642 172 611 617 565  55 764 697 741 573  56 114 234 581 115 237 256 344
 128 649 663 672 657 730 337 111 154   9 735 213 105 204 652  41  13 593 709 705  51 608 677  65 153 755 466 135
  90 731 103 222 595 768 594 671 704 175 645 140  16 129 752  40  98 586 683 329  86 674 323 393  44 719 675   5

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00613e+07us (= 10061.3ms, 10.0613s)
Satisfaction error: 2
Number of search iterations: 1756
Number of local moves: 800 (including on plateau: 282)
Number of local minimum: 133 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 258 218 624 249 716 778 118 164 242 664 147 701 606 559 101 718 171 166 226 89 501 510 692 112 412 590 93 564 => the sum is 10989 rather than 10990
Problem in row 23: 151 541 592 437 651 8 36 647 492 253 644 6 92 605 745 448 747 742 577 628 144 491 178 224 67 137 567 141 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  85  17  45  15 668 197 744  91 253 723 250 713 690 684 728 726 751 748 254 180 749 745  58  48 507 137  25 159
 143 585   6 287 747   7  76  28 226 754 752 146 756 741 735 734 739 732 115  84 736 715   4 202  43 740 101  56
  55 266  79 334 716  67 731 135  63 698 687  81 733 697 706 437 686 451 708 108 725 710  12 116 703   9 160 117
  50 228  57 118 688 161 664  16 165 704 355 695 693 696 661 633 252 694 647 387 657 707 677  38  49 132  44 122
 191 263  59 100   1  97 656 110 103 660 238 665 648 644 682 628 639 669 674  66 532 655 679  86 555 138  14 538
  47 280 141 104 632 351 623  99  42 659 577 635 634 609 604 215 624 607 105 358 616 608 134 303 622  41  93 627
 182 245 168 614 610  30   8 629  89 626 618 114 592 620 599 234 613 621 586 436 495   2 601 179 551 145 177 606
 127 236 243 468 531 192 625 212  80 600 441 574 569 568 588 595  27 587  69 565  51 573 761 186 667  94 208 553
 550 129 209 552 554 200 520 563 412 224 163 579 557 559 544 133  11 506 534  19 539 540 547  20 488 545 257 536
 274 158 268 556 560 312 533 502  40  10 172 509 513 542 549 220 516 474 525 524 218 529 505 259 510 528 204 480
  13   5 296 512 508 213 489 453 379 519 140 470 459 498 478 458 385 483 471 501 598 311 463   3 503 496 452 434
 475 500 264 476 546  21 518 448 194 497 310 285 465 494 484 320 420 457 415 491 462 221 425 265 469 156 473 439
 467 481 342 442 427 364 330 400 449 446 450 119 343 333 428 404 461 289 432 210 429 460 405 392 318 426 466 477
 408 421 262 362 399 373 413 369 403 390 347 417 395 402 424 416 386 367 407 418 435 393 423 440 381 346 397 396
 746 422 388 411 372 359 443 368 345 370 371 324 315 419 431 380 398 356 401 308 375 374 391 414 410 383 430 286
 357 376 456 377 350 445 389 394 447 366 313 382 349 444 363 307 331 492 335 641 325 314 329 485 348 455 493 327
 336 317 454 323 316 479 306 341 487 297 558 464 354 344 237 326 482 301 409 699 340 702 361 486 249 406 284 332
 292 593 472 300 309 653 295 322 548 319 743 337 294 293 304 714 384 742 305 267 261 298 229 504 288 302 339 283
 273 663 580 299 275 499 248 270 678 523 772 251 282 271 201 651 328 235 764 276 269 277 338 490 232 258 582 205
 662 738 650 290 256 564 244 242 759 278 188 365 241 240 219 594 724 291 260 630 281 211 227 521 190 272 637 216
 680 673 638 231 178 753 279 645 511 164 670 214 247 173 233 246 183 153 223 774 676 152 196 578 206 590 517 207
 689 700 640 378 166 567 775 255 541 184 543 596 222 174 230 527 170 199 225 203 171 438 150 619 217 658 514 239
 581 612 763 193 176 737 123 718 605 130 185 148 189 187 195 151 566 154 721 126 571 157 561 603 144 762 757 175
 768 535 712 681  71 649 167 671 643 155 515 142 124 149  92 583 198  90 169 705 131 136 147 685  72 675 575 750
 769 526 758 770  61 672 128 727 597 112 321 120 106  68 121 109  39 107 615 766  78  37  35 729 773 572 683 591
 617 162 654 666 125 602  29 692 584  36  60 784 111  46  88  87  53 102 570 646 113  95 779 778 691 352 701 767
 720 782 631 360  96 709  23 760 711 522 181 722  83  22  32  98 562  52  18  65  82  54 777 781  74 589 765 719
 433  77 755 771 652 717 611 530 636  24  70 139  26  73  34  64  62  31  33 537  75 576 776 780 730 783 642 353

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.77329e+06us (= 6773.29ms, 6.77329s)
Wall-clock time (full program): 6.83156e+06us (= 6831.56ms, 6.83156s)
Satisfaction error: 0
Number of search iterations: 951
Number of local moves: 679 (including on plateau: 194)
Number of local minimum: 45 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 190 228 648  58  83 152 658  97  37 693 736  15  10  63 164 769 722 272 710 219 140 712  84 743 697 726 740 624
  26 102 327 689  18  93 207 699 673 670 745 618 282 606  89 741 677 253 744 649  55 226 643 133 656 225   6 138
  39 237  71 261 221   3 600 135  30 222 695 735 247   2 172 765 409 597 739 676 182 666 652 116 738 605 681 493
  61 194 113 302 274  57 183 711 639 156 725 691 107 556 696 671 590  33  64 551  54 659 683 350   7 720 731 412
  99  70 325 160  25 570 662 729 678 644 642 721 608 101  95 559 609  75 132 645  36 629 709 281  19 516 620  32
 206 594  28 205 257 153 218 539   8 531 545 668   4 511 701 653 459  91 527 505 280 496  23 322 567 638 657 604
  12  50   1 143 319 463   5 471 577 675 622 537 592  53 451 623 595  17 208 664 300 636 615 522 528 587 538 186
 520 563 108 229  60  98 210  14 586 640 554 589 633 188 632 630 360 573  27 706 388 492 610  11 514 452 547  56
 530 497 129 179 326  96 290 525 199 603 509 686 546  90 521 465 560  48 470   9 169 550 316 447 588 576 669 397
 115 417 193 110 287 558  20 168 119  52 562 602 571 555 575 448 533 490 198 684  49 634 549 483 431 458 663 466
 535 627 518  77 235 542 295  41 439  46 406 279 584 506 517 499 239 170 467 331 217 498 464 519 508 491 501 438
 426 580 159 507 212 443 476 329 403 494 536 526 311 529 488 298 504 125 387 353 273 532 363 202 553 487 478  16
 454 568 480 453 275 357 481 565 503 423 305 434 246 479 385 408 475 321 579 278 244 382 419 249 456 435  73 263
 446 355 572 134 304 457 393 364 297 524 429 473 342 318 411 359 336 366 414 345 313 455 368 396 468 395 390 566
 428 489 361 440 391  21 349 449 389 413 283 424 365 370 369 442 373 309 460 379 340 541 482 402 502 399 462 358
 267 310 441 585 601 461 234 315 286 323 384 377 381 437 264 383 596 631 344 268 425 450 415 293 269 346 356 548
 276 303 621 289 564 444 680 335 251 717 420 371 291 334 245 378 707 380 324 243 401 215 166 723 343 185 352 433
 400 233 574 285 510 778 732 495 374 341 314 474 779 407 333 165 307 430 167 262 472 308 250 328 173 484 367 248
 598 284 306 362 626 254 690 398 515 404 436 148 231 347 162 126 782 338 655 394 432 223 230 416 320 256 339 718
 270 204 591 552 611 674 405 544 236 191 136 171 242 354 351 144  80 762 561 773 617 196 386 599 292 259 142 647
 301 375 737 646 543 296 486 130 147 418  62 337 150 213 216 776 227 752 768 277 771 137 224 719 184 332  87 679
 614 688 613 583 612 189 724 312 500 619 330 197 214 265  79 175 127 764 784  72 641 774 294 255 151  74 139 201
 751 258 756 651 582 372 650 240 232 176 146 317 211 200 109 122 103 299 123 770 512 155 767 252 713 181 682 660
 569 154 392 672 685 761 410 187 694 376 174 104 654 661 763 131 238 698 112 616 748  68 100 628  40  86 106 163
 637 703 760 746 534 727 557 757 161 128 120  69 781 625 747 117  31 742 118  35 704  94 203 260 288  76  78 192
 665 477 485 513 705 469 266 427 667 271 105 178  51 687 750  67  88 581 607 177 766 111 124 578 145 754  81 195
 783 730 141 714 422 753  65 421 635 158  24 220 780 758  13  34  22 759 121  66 728  59 702  47 755 209 348 523
 772 700 540 445 708 749  44 593 715  82  45  29 777 775 692  42 241 114 180  43 733  92 149 716  85  38 157 734

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00658e+07us (= 10065.8ms, 10.0658s)
Satisfaction error: 4
Number of search iterations: 1901
Number of local moves: 806 (including on plateau: 173)
Number of local minimum: 151 (including on plateau: 27)
Number of resets: 1
Number of restarts: 0

Problem in row 3: 39 237 71 261 221 3 600 135 30 222 695 735 247 2 172 765 409 597 739 676 182 666 652 116 738 605 681 493 => the sum is 10989 rather than 10990
Problem in row 5: 99 70 325 160 25 570 662 729 678 644 642 721 608 101 95 559 609 75 132 645 36 629 709 281 19 516 620 32 => the sum is 10991 rather than 10990
Problem in row 11: 535 627 518 77 235 542 295 41 439 46 406 279 584 506 517 499 239 170 467 331 217 498 464 519 508 491 501 438 => the sum is 10989 rather than 10990
Problem in row 17: 276 303 621 289 564 444 680 335 251 717 420 371 291 334 245 378 707 380 324 243 401 215 166 723 343 185 352 433 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 383  24 286 651  37 681 593 625 257 206 256 654 714 131   3 631 761 111 108 603 731 674 320 389 125 105 222 709
 104  33 118 214 685 753 657 748 215 114  81 740 696 158 648 751 636 359  74 269 195 678  10  41 691 710   1 611
  12 722 549 198 683 703 468 682 110 133 271 660 698 701 276 705 608 376   5 675 661  16  13  61 115   4 201 684
  40 647 150  60 730 746 706 606 655 154 242 687 723 266 559 642 646 561 130 339  42 177 202  92  72 752 252 112
 120 668 374 489 343 552 554 619  67 234  91 588 650 530 274 634 645 135  63 694  29 621 171  14 315 535 358 623
 136 472  36 504  15 347 571 641 160 584 633 538 656 607 527 719 659  34  75 143 558 653   2 322 627 523 172  76
 262 721  66  83 626 566   8 638  88 500 602 717 564 649  22 524 669 157 592 132  93 431   6 261 640 543  95 735
 212 733 557 595 433 707 361 364  17 140 253 618   9 587 169 670 446  21 233 539 421 540 594 151 526 443 190 461
 384 532  53  64 664 423 223 521 196  71 246 469 637 405 542 502 613 219 483 629 632 490  51 310 519 514  38 560
 338 624 231 448 652 491  84 609 392  18  46 548 570 409 515 516 395 197 159 126 644 505 432 367 551 673  31 419
 280 506 596 351 445 440 103 401 402 456  85 382 494 628 525 449 455 180 541 152  99 307 487  94 545 614 477 496
   7 578 182 493 577 458 325 475 518 466 161  68 529 534 510 330 582 295 565 318 451 457 429 109 184 498 380 511
 386 464  23 450 452 313 412 439 165 390 273 574 323 497 385 467 503 164 422 397 408 453 550 218 547 478 465 372
 365 379 428 348 580 459 264 298 473 377 575 394 520 369 381 371 344  11 569  44 399 342 495 517 335 476 447 430
 332 471 441 507 508 291 400 442 488 387 337 444 350 309 373 368 413 333 375 417 486 324 460 362 285 436 388 263
 454 287 340 484 686 434 292 741 352 302 528 277 297 251 282 396 341 784 235 407 585 205 411 533 288 378 267 153
 482 356 783 360 303 643 366 249 304 248 370 416 474 424 312 415 207 485 265 300 317 346 363 544 398 241 729 290
 426 336 470 123 283 406 700 183 250 204 289 272 178 260 662 308 403 393 294 620 311 562 216 492 762 245 743 599
 555 175 590 255 239 306 299 404 217 732 581 345 435 224 420 268 259 672 604 327 229 712 275 546 296 232 568 225
 693 329 763 726 113 155 579 270 773 226 756 188 203 166  57 305 210 513 689 728  79 179 536 284 173 349 704 244
 509 293 586 238 321 254 189 227 258 755 718 211 278 301 200 281 191 481 737 316 671 236 208 512 328 738 639 314
 597  82 573 228 209 138 727 139 688 213 692 279 121  87 708 326 334 776 193 658 463 357 610 572 170 247 563 240
 665 331 156 663  98 410 522 243 760 765 697 129 437 615 220  65 146 679 199 553 137 145 725 676 192  32 630 101
 680 144 567 174 147  49 221  96 605 617 742 391  70 736 774  43 185 734 749 100 750 124 690 759 142 162 462  77
 747  58 117 772 770 119 237 163 720 754 499 176  59 768 134 122  30 537 418 355 745  55 767 782 353 148 479 106
 695 186 635 616 194  19 102  20 600 711 354  73  48 181 771  27  97 757 667  50  86  35 769 480 713 758 601 744
 699 777 556 230 107  80 589  78 583 531 187  25  89 141  26  39 167 414 780 501 716 775 576 724 779  28 739  54
 427  62 764 666  90  47 438  69 677 702 425 127 168  56 715 116  45 612 766 598  52 591 622 778 319 128 149 781

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00532e+07us (= 10053.2ms, 10.0532s)
Satisfaction error: 2
Number of search iterations: 2109
Number of local moves: 762 (including on plateau: 285)
Number of local minimum: 148 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0

Problem in row 23: 665 331 156 663 98 410 522 243 760 765 697 129 437 615 220 65 146 679 199 553 137 145 725 676 192 32 630 101 => the sum is 10991 rather than 10990
Problem in row 26: 695 186 635 616 194 19 102 20 600 711 354 73 48 181 771 27 97 757 667 50 86 35 769 480 713 758 601 744 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 390 625  46  39 446 149  87 723 192  84 256 614 165  32 735 163 722  36 231 763 728 687 775   7 777 414 751 353
 695  29 221 704  57 291  18 754  33 125 773 725 690  22 660 164 166 726 105 772 750  80 405 529 646 116 698  35
 636  11  10 673 697 132  55   3 627 107 677 410 528  14 739  83 141 549  90 648 680  75 721 581 551 181 634 737
 661  28 229 504 670 244 190 557  58  15 771 650  61  12 691  25 711 215 427 318 592  37 641 672 620  56 736 599
 553 696  93 558 422 225 241 655  48   2 482 635 656  34 679  70 447 364 121 685 552  79 734  24 633 193 540 569
 512 544 494 598 631  31 308 595 227 626 700 665  17  96 674 597  99  23  51 730 567 289 148   5 515  44 716 488
 613 560 117 550  52  92 334 590 278  86 664 678 377 662 580 675 130 250 235 731 191   6 510 600  77 264 621 467
 657 659 204 652  72 207 209 689 115  85 591 519 174 668 658 280 637 601 171 437  54 336  97 555 436  78 610 539
 585 536  66 531 596  42 199 293 222 525 534 589  38 543 681 388 147 439 197  13 509 262 602 638 583 102 491 640
 428 576 546  16 480  43 238 511 554 503 492 622 532 302 453 366 137  94 180 537 573 358  30 464 502 458 474 521
 365 395 292 485 434 440 206 587 315 562   4 517 245 615 481 430 108 150 104 373 461 268 676 455 749 396 312 565
 360 559  71 547 375 443  59 535 394 465 495 577 101 564 401 431 516 472 486 497 460 118 500 406 301  82 469 306
   9 403 545   1 450 351 507 452 530 568 319  27 400 493 324 479 383 449 606 352 483 184 441 566 470 408 393 397
 463 421 618 468 398 326 349 473 524 471 322 290 339 407 294 432 342 376 331 416 335 188 372 438 425 466 295 411
 490 454 423 489 459 457 527 253 374 309 476 356 357 337 217 456 361 628 304 378 362 287 391 328 316 402 420 379
 415 392 498 350 444 699 333 417 270 343 442 288 574 501 348 346 341 363 404 239 160 609 369 389 513 297 367 279
 496 310 347 260 176 538 584 345 233 579 283 729 429 205 387 259 780 647 533 303 330 484 311 214 371 382 329 146
 705 274 701 224 717 276 526 201 654 409 770 296 475 426 261 236 314 247 666 136 211 632 355 240 263 210 258 307
 399 265 340 317 769 271 561 152 266 413 321 223 332 384 508 284 298 710 277 370 738 506 305 252 354 588 419 368
 213 323 756 255 254 741 386 226 692 242 281 299 418 216 122 212 714 359 642 542 344 462 381 100 139 779 140 752
 183 248 424 275 167 767 683 667 257 693 285 196 702 162 220 228 208 684 718 338 586 645 272 219 237 556 251 119
 195 230 603 173 719 451 768  64 758 232 202 234 320 715 177 732 541 548 712 138 593 688  89 157 120 630  50 151
 187 112 639 385 156 433 477 269 745 653 114 178 563 748 273 518 300 608 708 143 127 611 733 113  95 760  60 282
 186 612 570 123  49 762 203 616 520 325 200  81 514 155 154 778 765 327 713 158 182 243 135 747 478 629  45 720
 142 124 607 604 644 523 783 103 286 651 161 159 707 703 131 755 649 172 218 623  47 624  26 766  67 522  40 153
 144 706 412 267 572 724 781 128 313 505 168  41 445 663  53 686 487 774 671 185  76 746 179 106  74 782 169 133
 246 764 619 189  19 575 784  69 744 743  98 198 582 740  21 175 435  88 709  20 170 759 682 776  73 578   8 126
  62 134 499 753  65 757 594  63 761 669 109 194 249 571  68 742 111  91 380 145 129 727 110 643 605 617 694 448

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00588e+07us (= 10058.8ms, 10.0588s)
Satisfaction error: 2
Number of search iterations: 2222
Number of local moves: 834 (including on plateau: 256)
Number of local minimum: 159 (including on plateau: 29)
Number of resets: 1
Number of restarts: 0

Problem in row 2: 695 29 221 704 57 291 18 754 33 125 773 725 690 22 660 164 166 726 105 772 750 80 405 529 646 116 698 35 => the sum is 10989 rather than 10990
Problem in row 9: 585 536 66 531 596 42 199 293 222 525 534 589 38 543 681 388 147 439 197 13 509 262 602 638 583 102 491 640 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  32 771 681  87 737 683 728 535 749 745  29 195 279 159 623  34 257  16 155 148 698 733  14 696   7 178 755 266
 734   9  55  50 740 652 738 336  37 312  82 684 743   8 597  40 152  56  94  35 632 690 748 680 206 641 551 688
 715  33 739 201 718 654 687 628 752 713  45 105 130 541 682 625 150  90 145  67  15 730 209 678   4 215 671  48
 640 708  18  47 750 634 744 320 735 633  69  41 191 507 673  27  98  53  77 129 719 703 610  95 176 553 711 329
 184 648 574 665 599 622 526 549 140 706 126 224 273  68  72  20 303 188 182  30 595 751 642   2 330 612 643 716
 366 757 556 334 691  11 109 341  42 685 263 635 137 265 645 421  44 286  61 365 721 710  12 479 631 278 605 540
 571 523  13 204 729 477  58 613 485 565 226 516  79 616 584 533 110  63 177  22 532   1 558 693 432 550 405 655
 513 619 568 174 514 661 539   3 517 489 362 101  70 579 529 560  21 346 197  84 458 486 567 462 225  64 646 636
 457 609 570 355 425 663 592  10 147 578 134 125 239  59 491 586 135 183 508 480 594 410 275 638 582 437 208 500
 545 464 575  97   5 290 555 478 577 456 307 100  25 590 501 376 407 255 420 438 498 331 624 502 593 411 446 124
 452 482 515  74 546 572 468 434 379 488 363 548 128 381 454 406 270 213 378 120 564 531 448 386 380 391 473 146
 440 431 393 156 656 459 444 519 453 530 112 383  19 559 509 521   6 423 470 384 525 524 429 395 343 103 583 221
 422 562 563 518 398 450 537 402 404 231 185 143 436 400 358 399 439 467 416  52 474 441 461 368 339 316 455 354
 252 447 359 351 408 387 364 397 662 475 394 388 426 327 604 360 344 337 414 300 276 463 451 350 371 433 369 281
 401 345 460 259 442 534 242 603 557 299 163 382 484 315 435 445 357 430 528 321 424 471 294 419 227 338 481 333
 512 309 472 367 269 325 415 679 332 250 443 409 305 667 291 352 417 282 418 374 552 506 322 326 390 465 233 308
 505 274 314 660 522 318 511 193 302 243 504 313 723 348 222 335 223 547 396 476 328 317 217 216 510 469 347 658
 261 271 319 692 268 232 238 158 203 251 492 756 705 493 385 361 554 283 372 617 214 377 293 412 542 668 249 324
 496 304 375 664 260 370 228 202 173 746 494 727 311 449 306 229 720 601 621 503 292 181 301 340 353 277 297 170
 218 392 620 607 157 187 169 219 763 205 630 253 758 240 373 244 732 543 714 780 295 114 248 258 389 413 235 234
 298 284 162 487 186 356 210 657 179 296 712 700 483  92 127 141 618 527 614 629 726 200 212 287 672 245 310 580
 154 196 230 676 288  23 289 724 349 180 588 168 520 764 139 151 686 544 596 649 199 342 198 138 653 772 236 538
 144 153  46 403 116 142 323 189 536 272 770 778 581 285 717 777 741 689 192 651  38 165 774 175 256 783  83 211
 677 123 760 267 171 254 119 725 164 237 669 107 569 637 262 591 497 707 576 650  31 161 136 561 762 106  43 428
  57 220 160 784 194 190 264 133 670 102 608 108 702 699 172 247 731 722 761 765 241  51  89 697 781 587 167  88
 118 280 742 427  24 694 166 207 566  86 782 589 606 113  81 768 573 639 627 600  54 499 598 111 122  91  73 754
 117 759  75 611  28  65  80 674  78 121 659 736 466 769  26 666 704 747 766 626  49  36 675 131  99 490 644  93
 709  17  76 773 149  85 647  62  39  96 779 776 602  60 132 775 701 753 115 695 246  66 585 495 615 104  71 767

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00588e+07us (= 10058.8ms, 10.0588s)
Satisfaction error: 2
Number of search iterations: 2492
Number of local moves: 940 (including on plateau: 392)
Number of local minimum: 180 (including on plateau: 53)
Number of resets: 1
Number of restarts: 0

Problem in row 15: 401 345 460 259 442 534 242 603 557 299 163 382 484 315 435 445 357 430 528 321 424 471 294 419 227 338 481 333 => the sum is 10989 rather than 10990
Problem in row 17: 505 274 314 660 522 318 511 193 302 243 504 313 723 348 222 335 223 547 396 476 328 317 217 216 510 469 347 658 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 208 113  77 638 663 739  27 533  53  76  72 759 766  68  82 727  93 757 451  28 576 146 769  38 648 750 743 390
 408 396  81 359  55 516 165 571  66 134 541 225 781 765  83 162  87 768 132 106 692 745 737 114 109 682 777 733
 185 111 778 322 135 598 512 480 547 122 241 155 698 532 121 218  86 714 349  84 779  44 775 152 177 637 723 715
  39 601  48 551 103 641  95 736 474 131 205 773 767 454 140 147 630 722 157 574 589  40 725  98 178 653 167 552
 168 319 130 712 169 710 776 587 272 697  96 270 245 445  50 239 182 579 506 187 659 237 540 756 128 213 378 740
 437 189 164 559 107 783 705 545 295 144 337  94 186 720 302 115 143 575 665 119 583 138 770 203 123 615 670 704
 326 397 328 160 117 441 774 686 524  78 209 201 249 685 240 181 223 260 728 184 216 771 645 158  75 730 675 729
 274 166 253 257 731 550 315 758 565 191 281 263 226 695 317 277 325 233 644 198  67 173 605 361 406 782 719 358
 217 341 172 332 701 564 590 259 784 188 369 400 294 523 250 314 414 600 681 748 299 284 511 229 236 174 255 261
 336 228 268 413 102 754 327 238 689 242 347 206 318 285 296 292 202 418 449 444 664 384 761 324 142 780 772 309
 357 273 288 304 762 674 170 691 764 156 464 265 192 735 293 252 297 267 688 163 301 190 509 256 308 629 376 366
 422 227 321 320 286 706 671 221 311 276 306 680 278 658 393 183 677 476 608 433 353 204 452 291 108 356 435 338
 234 171 303 539 578 330 258 386 195 375 633 316 490 518 404 462 456 279 503 415 290 514 479 331 365 323 460 383
 385 360 254 438 379 411 264 420 398 430 402 389 368 154 372 534 417 280 492 392 593 339 606 468 352 401 329 363
 421 500 364 611 350 266 486 488 354 382 231 432 370 428 348 429 219 489 459 412 427 485 340 394 275 508 300 222
 380 419  71  15 431 505 447 405 471 345 616 466 556 439 399 371 269 395 403 334 342 613 139 499 407 484 388 381
 200  51 568 465 377 374 546 461 151 355 282 548 535 416 554 519 153 193 333 588 425 469 312 577 498 210 367 463
 624 655 482 513 544 180 343 442  73 612 510 472 473  92  46 104 525 289  89 560 457 538 161 636 582 351 631   6
 448 507 751 529 477 141  69   1 230 453 502 591 458 373 391 531 594   2  60 515 262 344 310 557 537 443 423 491
 558 573 424 410 536  74 483 313  18 440 521 517 528 212 478 652 409 196 298  20 609 475 176 467 604  43 455 501
 586 596 504 569 543  47 112  56  14 572 497 602 584  23 561 585 549 493 126 481 566 148  24 632 657  65 149 649
 496 639 446 683 362  42 243  36 567 522 634 618 673 207 656 450 617 580 495 635  34  29  99  12 592 247 125 251
 470 520 668 235 626 145  41  37 542 570  52 646 136  49 640 669 555 647 101 434 625 709 199 623 744 159  90  58
 651 553 684 699  31 271 307  64 530 700 436 619 118 244 717 627  70  13  88 621 487 746 150 610 581 175 179  19
 732 694 527  59 599 137 562 563 614 628 662 346  10 214 755 702 650   4 305 713  21 607  35 666  16  17 120  32
 753 676 597 110 248  80 654 526 620 690 129   5  85 283 726 494 711 603 246 679   8 716  54 211 661 287 105  33
 672  22 752  91 643  79 622 100 127 760 708 124 595  26 734 724 741  25 197 703  57 678  62 667 763  61  63 194
   3 693 687  97 335 232 426 387 742 721 707   7  11 747 642  30 696 133 738 220   9 224  45 660 718 215 116 749

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00594e+07us (= 10059.4ms, 10.0594s)
Satisfaction error: 3
Number of search iterations: 1700
Number of local moves: 715 (including on plateau: 266)
Number of local minimum: 133 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0

Problem in column 12: 759 225 155 773 270 94 201 263 400 206 265 680 316 389 432 466 548 472 591 517 602 618 646 619 346 5 124 7 => the sum is 10989 rather than 10990
Problem in column 19: 451 132 349 157 506 665 728 644 681 449 688 608 503 492 459 403 333 89 60 298 126 495 101 88 305 246 197 738 => the sum is 10991 rather than 10990
Problem in diagonal 0: 208 396 778 551 169 783 774 758 784 242 464 680 490 154 348 371 153 289 60 20 566 29 199 610 16 287 63 749 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 394 511  66 529  96 208 694 408  88 119 151 122 755 555 770 570 704  22  28  56 735 293 774  44 525 775 687 311
 166 212 616 617  19  41 718  90 695 329  71 783 101  86 731 630 724 711 454 178 763 576  57 123 536 115 772  76
 781 353 776 585 758 157 552  70 693  53  58  59 727  52 226 667 607 134  98 611 689 128 116 146 465 768 562  99
  80 740 637 334  91  65 716 608  39  92 258 721 297 715 764 488 559 176 259 191 709 135 220 656 749 102 568  21
 147 489 121 705 767  50 771 620 164 204 174 163 745 100 784 666 651 189 172  74 678 468 185 766 677 184 231  45
  83 179 230 696  54 773 451 203 684 351 742 782  77 233 599 262 682 126 169 396 632 234 109 665 726 236 478 138
 175 615 224 672 277 165 344 194 634 759 198 439 247 629 207 645 737  94 251 494 676 241 129 136 650 188 597 373
 272 697 118 544 161 117 442 780 441 137 295 223 132 661 310 658 748 168 114 308 349 595 199 779 646 302 642 152
 214 363 209 743 281 197 537 317 627 202 273 245 324 619 282 360 495 124 395 388 403 725 303 159 336 778 655 436
 278 628 276 411 430 256 423 681 192 761 154 142 173 690 674 337 382 238 218 267 530 659 219 341 306 319 342 663
 487 744 288 364 201 279 712 754 379 156 757 269 378 756 421 162 328 239  48 692 566 505 252 242 315 196 265 235
 371 348 481 471 376 246 221 372 384 183 405 400 703 296 322 474 304 294 556 660 624 431 343 365 244 455 340 321
 270 429 369 457 345 313 409 401 463 444 257 316 447 291 458 289 425 312 460 587 416 638 280 284 299 383 216 732
 482 205 305 501 470 350 361 603 332 130 475 387 264 639 352 292 506 497 729 380 228 314 393 300 459 283 427 326
 286  51 225 386 301 414 323 512 440 368 434 375 516 415 426 437 338 574 479  13 357 381 519 432 523 542 503 420
 335 517 307 418 410 354 190 392 370 404 428 397 330 356 385 500 448 491 485 112 347 399 406 445 583 309 547 325
 389 545 450   3 422 290 215 498 473 424 464   1 565 374 449 435 285 412 522  49 466 472 413 507 446 528 407 486
 453  63 275 402 480 543 496  84 584 670 609 390  11 520 539 333 558  16 579  33 469  20 483 490 433 502 588 367
 419 186 359 331 653 513 508  82 600  47 320 572 515  17 509 601 155 586   5 540 217 664 358 532 260 567 195 679
 553 108 648 298 346 510 105 499 569 222 438 591 644 462 477 526 153 698 339 240  72 254 554 578  15 635 193 263
 484 104 171  81 504 733 145 211 581 535 734 594 533 237 518  64 144 750 531 602 210  78 710 613  68 560 133 362
 564 592 612  69 550 671  46 551 103 606 623 610 641 141 200 127 549 573 366 541 253 111 675  35 113 577  93 398
 598 722 688  75 521 741 180 261  14 643 561  79   2 271 250 182 206 762 493 593  87 106  29 720 255 589 626 736
 614 160 622  85 467 685 456 318 243 524  40 701 557 213  34 563 177 631 647 683   6 669 605   4 232  23 377 654
 760 167  10 582 691 680  62 590 514 571  30 739   7 249  42  37  43 625 575 633 170 287 527 621 327 707 140 604
 728  36 596  97 452 752 150  67 538 700 686 148 673 580 139 355  12  18 534 652 149 417 668 723  73 227 274 546
 548 461 649 268 391 706  61 714 120 657 719 717   8 125  27 187  38 753 738 248 158 443 713  55 640   9 107 730
  60 765 662 266 476 181 702 110  26 699 636  24 618 708  95 143  32 777 746 769  31 747 751 229  89 131  25 492

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00586e+07us (= 10058.6ms, 10.0586s)
Satisfaction error: 2
Number of search iterations: 1660
Number of local moves: 540 (including on plateau: 182)
Number of local minimum: 139 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0

Problem in column 1: 394 166 781 80 147 83 175 272 214 278 487 371 270 482 286 335 389 453 419 553 484 564 598 614 760 728 548 60 => the sum is 10991 rather than 10990
Problem in column 12: 122 783 59 721 163 782 439 223 245 142 269 400 316 387 375 397 1 390 572 591 594 610 79 701 739 148 717 24 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 559  18   2 514 700 338 243 409 708 114 295 689 244 646  91  95 112 641 341 719  12 744 584 766  72 587 117 630
 216  60 759   7  25 327 256 330 664 698 189 728 680 733 315 196 178 668 100 713 318 724  33 660 734 524 134  21
 232 740 716 537 691 197 725 355 682  43 415 616 253 639 115 242 291 642  34 679 203  29 520 665 684   8  22  15
 104 627 144 406  62  52 651 382 701  82 248 661 617 609 160 623 152 702 122 669 195 695 652 714 170 643  50  97
 605 601 666 320   6 566  27 220 655  38  23 615  63 554 142  41 576 628 147 690  90 585  87 723 675 737 656 254
 127 754 658 223  73 379 139 545 550 611  98 624 219 581 433 546 572 405 227 570 231 595  30 577 561 593  10  59
 168 501 591 302 600  26 510 567 688 298  57 507 202 483 183 532  94 703 118 632   3 614 176 742 531 594 498  70
 143 588 722 161 612 194 480  44 686 558 109 500  88 590  13 278  40 530  83 560 173 599 486 568 606 589 469 521
  32 529 645 328 534 335 103   9 526 518  68 571 165 552 261 586 324 626 308  36 569 432 536 457 516 301 579 544
 304 446 580 424  66  47 515 414 489  31 314 509  81 565 260 113 212 603 336 519 453 573 549 610 538 522 472 445
  86 592 456 422 475  28 154 461 451 499 618 506  65 395 460 413 455  56 293 383 508 444 478 435 477 482 411 487
 146 622 533 547 459 553  61 619 436 525   4 504 181 488 416  17   1 674  20 434 412 321 400 575 528 608 438 468
 490 484 535 370 385 403 329 494 352 439 391 421 325 470  16 650 464 426 283 392 425 313  11 402 310 466 366 578
 378 582 474 517 471 381 418 555 360 290 467 410 331 450 373 419 174 380 393 420 306 448 386 263 247 479 372 246
 417 365 375 607 440 376 399 342 476 339 175 346 404 667 348 430 337 273 396 447 452 458 427 347 356 397 368 226
 332 428 389 388 387 369 491 765 287 364 300 505 282 359 398 636 423 155 437 463 185 349 548 319 496 251 317 367
 252 401 358 657 305 357 752 208 377 353 394 374 762 343 345 255 773 286 454 322 323 361 363 442 279 269 235 390
 676 311 312 729 303 625 350 758 206 281 371 270 775 384 503 598 264 431 473 280 210 288 326 237 213 204 296 316
 670 238 211 711 351 257 240 761 299 715 732 344 481 163 540 735 596 239 333 225 334 407 207 157 277 199 309 259
 677 151 201 776 354 274 705 699 266 289 730 205 706 233 493 285 767 307 462 128 638 272 130 294 218 275 297 158
 731 258 262  46 215 720 692 649 149 276 721 245 673 234 629 647 756 465 513 141 769  54 179 221 126 214 236 169
 672 172 162 727 241 523 563 101 408 140 635 271 637 209 644 687 678 116 718 184 634 102 190 188 222 191 229 746
 640 228 138 200 198 763 712 123 192 193 502  80 186 187 704 551 597 182 745 265 574 292 145 268 177 760 717 671
 683 159  39 137 764 602 631  69  53 180 743 124 633 125 748 511 150 110 749  77 156 362 755  14 777 224 753 662
 541  78 105 621 250 512 131  64 148 782 653  71 557 171 693 443 527 485 736  93 739  48 768 106 217 135 620 696
 543 119 783 121 497 709 441 230 120 772 583  85 562  58 284 133 694  89 738  45 751  49 604  55 107 449 710 659
 492 164  75  84 779 648 267 132  24 784 542  42 707  35 726 249 129  92 681 564 556 781 757 166  96 153 770 495
  74 774  99 108 747 429   5 685  37 778 613 167 111  67 697  79 654  76 750 340 771  51 663  19 780 136 539 741

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.747e+06us (= 5747ms, 5.747s)
Wall-clock time (full program): 5.80582e+06us (= 5805.82ms, 5.80582s)
Satisfaction error: 0
Number of search iterations: 694
Number of local moves: 586 (including on plateau: 141)
Number of local minimum: 16 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 142 148 774 697 218 755 282 156  80  83 223 526 701 754  99 744 710 738 154   8 762 703 115   3 669 712  20  14
 640 327 615  23  12 681 714 118 429 217  51 204 758 765 134 691 106 759  11   2 648 698 667  72  15 308 592 733
 737 214  89  60 143 608 244 715 174  22 101 673 741 649  50 674  71 718  10 696 620 689 717  65 694  69  48 699
 750 624 659  13 127 704  68 713  75 208 582 239 612 529 124 732  18 654  49 709 113 625 658 121 670   9  97 508
 705   5  36 130 601 631  16  46 240 584 155 147 655 575  40 635 438 726 145 727 711  92 619 580 337 688 177 549
 552 605 642 565 137 436 277 571 102 131 151  53 665 690  86 652 257 598 164 627 569 630 628 126 369 203  42 462
 680 562  93 486 178 502 360 590 195 321 190 610 480 252  35 572  39 639 587 579 548 198 559 125 199 623 159 629
 618 226 112 167 501 591 564 275 284  28 230 135 600 596 609 595 512 566 332 537  30 586 567  73 401 541 168 546
 676  96 527 542 426 516 489 621   4 188 535  32 554 557  94 551 517 483 425  79 607 109 568 253 460 570   6 505
 444  26 583 500 473 604 677 561 211   7  55  57 466 205 617 479 235 518 173 456 588 553 499 187 488 423 399 506
 494 355 465  61 487 468 492 493 163 454 445 175 442 461 427 531 547 344 476 544 207   1 530 377 301 446 393 411
 484 424 543 448 528 491 324 384 179 386 521 349 498 139 464 376 141 431 475 453 560  82 509 288 482 434 184 413
 440 513 385 350 382 578 387 437  25 478 394 368 354 469 439 510 467 345 391 455 352  76 361 307 396 470 441 420
  77 397 452 422 347 404 457 459 313 432 405 507 340 443 463 378 356 392 450 408 390 339 503 334 474 407 283 359
 412 435 318 451 519 406 481 304 274 383 371 373 540 346 447 611 319 416 409 364 471 351 317 286 363 419 299 305
 417 358 375 496 291 532 472 255 353 418 328 522 430 388 269 370 403 287 314 298 292 325 380 589 485 395 538 410
 372 333 250 402 303 389 782 614 400 323 220 622 338 293 335 213 322 433 237 660 365 326 367 477 266 381 656 311
 270 724 336 295 675 329 296 374 692 306 316 259 273 555 232 249 331 265 233 281 343 594 278 458 743 276 641 366
 261 256 414 577 271 229 634 219 563 646 180 613 242 342 260 267 653 320 644 245 294 262 297 449 742 234 638 238
 258 129 200 228 272 300 784 197 776 606 310 682 263 312 290 231 602 341 616 212 268 202 309 720 775 357 643 107
 144 150 289 716 671 110 194 722 672 524 771 379 225  27 693 224 536 221 243 285 520 534 251 556 186 196 735 216
 128 736 246 183 764 189 111 192 573 576 700 585 201 248 686 247 777 122 279 415 182 778  66 752 153 138 633 330
 215 695 254 227 708 236  85 158 593 523 730 661  64 515 662  52 170 193 756  90 760 398 768 599  88 206 362 222
  54 645 636 264 666 116 780 723 729 574 637 280 149  84 728  81 751 165 525 176  62 241 185 721 136 140 550 191
 172 687 104 664 533  21 152 132 783 749 581 514 209 684 632  78 781  98 663  91  47 210  41 683 707 117 757 100
 114 668 160 746 558  17  70 761 679 315 773 302 120  19 767 146 166  67 770 678 504 428 171 348 119 731 719  74
  87 157 685 766 161  24 740 105 779 745 490 626  37  59 651  56 162 108 706 734 133 539  31 702 103 772  63 769
 647 495 748 511  38 123  58  95 650 763 545 497  33  34 657  45 603  43 753 181  44 421  29 739 169 725 747 597

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00608e+07us (= 10060.8ms, 10.0608s)
Satisfaction error: 2
Number of search iterations: 1695
Number of local moves: 625 (including on plateau: 188)
Number of local minimum: 142 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0

Problem in row 14: 77 397 452 422 347 404 457 459 313 432 405 507 340 443 463 378 356 392 450 408 390 339 503 334 474 407 283 359 => the sum is 10991 rather than 10990
Problem in row 24: 54 645 636 264 666 116 780 723 729 574 637 280 149 84 728 81 751 165 525 176 62 241 185 721 136 140 550 191 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 754  29 758 711 133 775  85 465 161 604 573 548  64 606 740 586 687  48 211 601  43 292 178 358  38 741 113  88
 766 731 742 119 607 187  62  54 176 505 703 479 146  99 729 542 677  68 216 739  98 774 194  97 174 517 303 486
 169  65 380 747 389  94 116  52 531 403 588 779 105  89 765 248 773 114  37 715 732 271 761 128 102 771 557 509
 348  63 669 782 734 738 735 225 197 769 571 497 508  75 471 212 783  53  49 482 115 101  67  60 643 385  66 592
 134 123 701 127 536 139 719  72 193 538 631 610  30  58 689 440 712 118  77 653 636 235 567 784 100 622 522 224
  71 250 697 151 532 205 242  55 222 767 529 258 138 218 590 587 144 302 430 744 736 158 781 241 727 498 324 393
 159 126 707 125 639 294 648 141 237 757 173 710 709  86 270 666 230 184 201 749 232 339 312 166 299 726 564 541
 246 103 596 155 556 229 111 768 204 145 433 275 195 177 633 777 656 117 579 559 752 180 185 236 234 717 435 737
 206 124 584 286 660 377 213 191 745 706 662 263 249 228 585 654 189 425 283 360 262 172 147 285 238 417 699 780
 298 223 612 318 635 268 772 599 251 426 665 257 281 215 381 760 112 255 776 617 165 335 278 261 179 396 325 330
 392 369 488 244 472 404 746 397 282 181 578 748 231 413 313 554 560 290 322 494 295 320 384  81 291 273 621 247
 405 365 391 375 371 400 226 343 333 388 346 478 406 316 500 217 398 401 221 558 686 411 279 423 344 565 544 300
 284 336 641 434 399 267 304 427 362 763 307 764 444 359 297 408 341 277 208 461 203 240 386 671 334 311 259 503
 171 192 351 439 415 419 239 441 410 460 409 327 485 373 454 402 755 379 507 447 407 352 309 367 357 305 446 372
 315 394 314 256 527 337 243 276 448 376 163 467 436 350 306 487 424 533 546 431 481 422 412 468 418 353 476 331
 387 537 319 484 499 474 416 149 459 374 462 363 530 183 525 524 421 347 280 288 451  23 469 550 432 382 170 492
 456 452 200 329 152 414 490 576 457 450  51 510 613 420 342 272 308 438 428 135 477 429 466 600 652 153 168 552
 354 496 129 356 227 506 445 495 455 269 437 332 453 493 443 233 523 254 515 132 458 563 539 661 629 186  46 361
 483 593 338 378 323 591 491 370 619  96  95 463 561 442  92 196 512 581 107 317 364 676 657 501 638 122 310  74
 583 572 321 630   7 668 513 514  40  73  79  14 521 511 569 175 574 664 646 368 395 489 516 623 526 190 162  47
 681 518 150 464 355 620 597 210 616  35 120 594 582 535 142  93 562 627 651 131   3 549 683 575 475  45 293  84
 614 673 265 504   9 551  33 520 692 595  59  83 609 555 534 160 568 473 543 220 345 182 519 566 618 266 164  70
 663 690  69 577  82  34 545 718 547 136  42  76 598 553 340 502   8 672 626  50 470 685  20 679 570 219 605 214
 540 691 264 700 328 580 296 698 650 634 301  90  41 694 110 157  19 632 751  44 649 198  91  57 602 154 670 349
 724 716  25 528 480 106 603 640 674 108 759  27 615 658  18 156  16 642 390  78 188 655 695  36   1 104 723 625
 702 708   2 714 252 589 383 722 199 274 289   6  17 756  56 207  12 696 628 209 608 644 253  28  39 624 728 645
  61 721 140  26   4  11  13 167 148 143 720 770 680 750  87 449   5 753 730 287 659 611 733 725 637 260  22 678
  24 130 137  31 667 713 704 705 682  15 245 202 743 778  10 326  21 647  32 121  80 684 109 762 693 688 675 366

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00029e+07us (= 10002.9ms, 10.0029s)
Wall-clock time (full program): 1.00614e+07us (= 10061.4ms, 10.0614s)
Satisfaction error: 2
Number of search iterations: 1841
Number of local moves: 748 (including on plateau: 310)
Number of local minimum: 138 (including on plateau: 49)
Number of resets: 0
Number of restarts: 0

Problem in column 15: 740 729 765 471 689 590 270 633 585 381 313 500 297 454 306 525 342 443 92 569 142 534 340 110 18 56 87 10 => the sum is 10991 rather than 10990
Problem in column 24: 358 97 128 60 784 241 166 236 285 261 81 423 671 367 468 550 600 661 501 623 575 566 679 57 36 28 725 762 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 314 146  52  77  40 766 734 494 105 746 310  93  38 133 116 762 631  36 778 772 596 775 757 751  31 659 157 121
 646 577 143  49  83 767 774 546 113 230  84 760  35 103  50 732 581  32 451 764 635 541  58 707  63 639 708 119
 717 127 130 145 183 768 529  79  75 543  70  85 140 486 784 209 510  67 780 498 758 487 759 737 763 471  37  53
 743 107 228  26 282 723  73 681 742 224  22 463 162 566  25 771 258 461 243 169 733 608 385 590 782 687  68 168
 700 134 179 185 695 550 653 249 575 302 131 219 203 740 154 716 656 129 191 556 696 655 106 715 153 624  76  48
 440 180 163 155 328 781 688 637  95 115  91 728 141 196  86 770 413 177 221 765 677 173 676 669 111 584 719 211
 664 779 190 205 184 552 605 429 753 643  78 403 122 431 223 215  96 165 459 783 761 738 144 192 295 534  81 266
 650 736 300 114 237 626 309 754 201 628 256 731 274 207 262 388 729 200 275 673 318 156 132 582 126 684 182 260
 208 210 308 216 517 255 727 312 110 620 176 705 226 755 392 136 601 408 672 464 612 239 138 404 360 259 713 247
 776 123 252 341 561 193 170 657 381 769 750 222 241 268 278 366 281 375  42 242 481 640 250 387 269 678 724 273
 592 198 294 218 288 290 355 730 337 188 704 167 272 285 303 329 633 338 373 564 347 151 725 434 297 611 714 253
 291 674 277 344 212 393 102 391 379 316 362 265 336 467 473 220 744 356 351 320 446 718 301 777 363 327 280 505
 195 756 377 437 405 407 469 386 418 663 326 100 335 331 342 424 321 286 306 478 580 293 345 357 348 315 745 245
 232 354 439 283 261 397 503 476 263 395 457 492 415 292 364 383 311 485 358 436 307 450 495 322 324 540 428 528
 330 350 508 496 340 449 227 109 406 421 438 384 287 515 435 359 411 378 401 334 455 376 447 380 313 456 614 371
 349 466 448 420 229 396 389  56 533  60 544 390 361 398 521 477 399 422 576 441 425 423 400 475 417 333 299 343
 194 532 442 433 238 518 490  99 202 101 512 419 560 409 522 443 553 426 537 527 108 416 402 488 394  24 499 502
 506 444 542 570 484 538 480  69 591 535   4   1 629 617 516 430  64   2 474 296 374 509 472 254 479 175 482 453
 427 445 370 569 458 468 586 500 462  29 304 578 597  94 610 511 158 525 135  47 412  89 519 189 523 240 497 648
 161 579 602 613 583 139 120 289  12 150 739 555 604  97 589 587  61 489 574  19 235 636 621 160 668 372 367 369
 551  15 507 520 244 491 547  10 625 217 642 531 691 536 454 638  72 690 568 284  14  34  57 187 526 174 651 514
 104 346 634 679 619  82  62 298 558 206 573 545 598 565  55 644 452 563 339 152 257 465 549 149 460 124 271 641
  17 305 660 680 501  87 493 112 698 539 632 524 720 233 667  20 234 685 741 118  16 319  28 323 709  44 279 606
 148 562 504 748 365  80 181 618 567 706 645 117 483 666 710 267 251 623  88  27 197  65  54 530 665 128 410 585
 199 352 701 559 603  43 236 703 432 142 649 178 368 595 702   5 554 654  90 159  46  98 332 204 697 353 689 647
   3 270 325 588 726 172 414 186 593 225 594 470 670 682 752 147 231 661 164 382 166 615 600   9 125 572  39 609
 171 675 722 571 630   8  41 607 627 557 683 652 735  59   6  18 711 686 773  21 246  45 622  11  71 317  13 712
 662 548 692 749 694  51  33 513 137 721 214 213 747 264 599  23  74 671  30 699  92 276 616   7 658  66 248 693

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00028e+07us (= 10002.8ms, 10.0028s)
Wall-clock time (full program): 1.00613e+07us (= 10061.3ms, 10.0613s)
Satisfaction error: 2
Number of search iterations: 1951
Number of local moves: 657 (including on plateau: 94)
Number of local minimum: 157 (including on plateau: 15)
Number of resets: 1
Number of restarts: 0

Problem in column 3: 52 143 130 228 179 163 190 300 308 252 294 277 377 439 508 448 442 542 370 602 507 634 660 504 701 325 722 692 => the sum is 10989 rather than 10990
Problem in column 10: 746 230 543 224 302 115 643 628 620 769 188 316 663 395 421 60 101 535 29 150 217 206 539 706 142 225 557 721 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 222 230 737  24  20 227  18 637 727 744 387 152  42  72  34 735 690 678 720 723 742  36  47 182 718 741 700   5
 731 585  45 777 263 141 288 211 120 672 284 205  25  82  43 749 754 763   7 765 706 652  89 190  15 669 553 606
 699  79 123 743  14 184 630  84 243 665 282 223  23 592 732 730 118  30 733 734 725  55  69 659 581  68 639 533
  27 154 745  59 747 624 681 528  63 557 577 707 587  49 658 647 664 165 545 680 162  46  29 167   6 622 486   8
 717  58 580  33 101 176 595  16 191 696 483 105 578   2 612 627 609 523 599 643 677  66 112  21 651 714 546 259
 392 267 465 653 590  52 187 224  62 686 615 168 621 103 505 641 490  53 296 613 668 535  10 135 646 645 554 114
 555  11 235 524 674 177 196 579 301 473 286  19 614  93 552 575 726  76 608 618 560  67 107 381 544 601 738 100
 565  77  38 683 638 292 719 404 161 620  28   4 567 572 459 569 470  32 644 447 724 142  64 349 308 517 657 240
 500 113 597 516 444 180 139 548 287 457 451 147 170 611 395 573 443 570   1 485 421 558 119 193 502 484 564 522
 446 538 408 495 337 448 501 269  87 207   9 422 127 413 481  17 539 623 543 566 438 702 275 219 496 431 563 390
 537  37 576 475 379 464 178 568  12 376 199  74 509 369 518 551 461 102 441 574 462 559 217 186 616 498 521 531
 454 439 399 526 510 410 248 372 232 449 480 583 491   3 350 403 363 229 228 520 472 115 375 429 458 596 515 341
 412 492 468 400 402 355 312 329 319 482 322 144 437 593 487 393 445 425 411  57 430 435 416 586 294 388 252 504
 419 494 342 507 391 378 584 503  22 456 424 357 335 348 383 397 467 277 409 436 346 534 432 527 171 257 389 405
 423 313 365 442 489 366 385 368 478 334 122 336 471 497 323 316 532 398 508 547 384 415 371 394 326 307 418 362
 406 347 289 374 273 476 514 364 530 321 309 338 260 440 604 407 605 377 433 466 270 265 455 276 474 414 358 345
 290 264 373 298 380 305 684 603 420 285 242 591 249 344 306 300 352 333 499 324 328 343 452 685 356 370 561 453
 428 434 353 261 330 268 610 314 542 426 662 361 479 401 208 303 254 782 247 339 204 331 701 202 266 297 332 655
 283 318 417 244 327 722 529 253 688 302 695 759 256 359  50 279 460 215 632 220 206 258 774 493 262 209 231 549
 317 682 304 195 310 691 291 667 351 272 697 654 396 315 210 582 354 775 179 172 174 251 675 519 386 320 111 140
 280 689 201 212 138 711 250 773 340 562 299 715  95 736 293 295  97 278 550 155 784 360 541 666  61 148 173 588
 772 556 761 600  88 660  96 129 661 238 705 234 367 693 203 166 325 233 221 104  70 748 649 728 192 239 241 311
 594 740 133 710  83 756 427 640 729 197 633 746 200 255 125 218 110 676  99 158  44 237 750 536 137 225 128 704
  75 598 136 183 778 274 679 687 629 214 525 642 281 634 169 153 188 450 631 175  80 708 694 764 150 145 132 216
  81 512 236 752 712 246 226 628 602  60 164 650 571 771 709 245 131 506  94  56  92 589 488 779 758  78  73 181
 117 760 781  90 768 755 198 213 757  41 185 713 767 635 194  54 109 160 159 124 619 607 769 134  71  85 477 648
  91 511 753 116 106 189  86  31 656 163 776 670 721 626 716  26 126 625  40 143  51 673 770 121 762 766  13 663
 157 692 130  98 698 463 739  48 780  35 149 271 751 382 671  39 108 636 513 146 151 703 540 469 783 156  65 617

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.38373e+06us (= 5383.73ms, 5.38373s)
Wall-clock time (full program): 5.44196e+06us (= 5441.96ms, 5.44196s)
Satisfaction error: 0
Number of search iterations: 781
Number of local moves: 551 (including on plateau: 142)
Number of local minimum: 47 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 333 683  72 123 723 757 354 372 762 566 522 104  47 730  79 145  88 585 112 114 141 697 101 626 699  90 589 776
 489 316  33 139  74 778  60 507 680 148 534  21 224 750  25 777  55 556 775 232 129 147 593 728 744  43 768 665
 503 681 532  98 740 766 212 633 751 128 269 150  56 134  51 109  23 211 596  45 613 189  96 693 654 770 743 544
 678 536  37 780 193 781 217 514 400  46 331 122  35 605  78 165  99 632 773 610 718 136 143 676 686 190 182 627
 635 726 764 783 390 767 518 749 188  83 746  22 103 175 105 173 130 247  49 599 151 297  64 426 474 115 769 742
 722 568 238 201 192 725 131 735 701 178 643  27  73 306  26  24  92 747 137 172 191 629 784 759 655 267 330 737
 584 307  67 183 121 753 670 515 727 295 592 156 208 239 386 154 209 303 415 360 779 732 216 378 555 244 200 642
 564 731  95 176 280 771 282 567 199  31 689 300 323 427 256 320 334 708 206 312 714 558 107 359 588 230 181 682
 691 577 379 774 210 614 140 385 782 146 572 171 315 548 246 285 245 772 184 684 319 393 202 205 251 180 270 450
 328 197 318 310 467 591 348 314 179 332 666 258 480 152 436 365 253 653 734 194 350 736 325 257 704 215 227 601
 729 351 293 302 424 712 529 760 277 338 622 335 102 402 198 289 287 252 222 719 352 299 311 264 410 317 254 640
 309 485 374 284 155 355 382 369 375 469 357 407 373 495 266 460 688 674 406 339 196 758 377 255 418 237 387 340
 611 347 324 127 394 376 421 327 509 273 617 337 343 395 456 366 305 361 356 389 442 416 494 388 443 493 336 344
 761 472 341 419 403 586 276 313 446 499 248 370 449 428 226 381 412 487 231 455 279 405 329 358 434 368 288 326
 435 265 447 422 286 308 380 439  91 574 409 505 441 371 540 444 345   7 478 453 414 423 520 417 468 454 292 362
 204 404 363 524 278 294 364 213 549 539 259 473 411 492 170 581 458 349 399 119 342 459 195 452 476 618 715 290
 508 519 535 445 554 162 398 527 483 281 228 461 470  63 420 135 391 512 604  44 491 479 236 413 263 384 431 553
 241 631 583 498 448  12 174  68 321 513 221 429 408 528 511 623 542  40 496 486 650 158 541 466 220 440 500 242
 268 571 504 537  70  65 271 392 615  19 304 587 274 570 637 563 602  97  76 547 565 484 401 430 187 531 616 207
  77 437 438 533  30  86 497 561 149 603 465 620 669 525 488 692 621  39 490 502 159  59 396 425 471 275 516 167
 169   8 706 457 705 250 608 397  75 501 113 283 462 506 658 652 551 698 298  84  85 510 600 185 117 550 594 168
 225 530 432 576 657 160   6 482 590 612 106 543 607  54 644 523 582 100 578 557  16  34 573 552 120 546 475 110
 233 108 481 560 639 164 559 214 219 575 625 660 741 545 707  71 630 235 721  87 595  89  15 133  36 562 724  62
 186   9 711 663  61  81 521 138 126 517 234 765 672 118 748 662 346 261 690 659 641 538 668  38 153 463 144 177
 218  11 638   1 624  10 628  14  52 569 163 755 745 125 702 645 733 763 157 464 477 203 696 291 383 619 272  32
 229 161   4 296 580  20 709 142 679 649 249 675 606  13 695  53 717 367 667 739 661 262 700 166  41 720 132  58
  57 116 634 713 598  29 671  42  48 754 124 716 756 609 710 646 579  94 111 322  69 677 656 648  80 433   5  93
   3 243 647  66 694  17 664 301  18 752  82 738 597 685 526 687 673 240  28 703 451 223 651   2 260 636  50 353

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00599e+07us (= 10059.9ms, 10.0599s)
Satisfaction error: 2
Number of search iterations: 1971
Number of local moves: 845 (including on plateau: 248)
Number of local minimum: 149 (including on plateau: 28)
Number of resets: 1
Number of restarts: 0

Problem in column 9: 762 680 751 400 188 701 727 199 782 179 277 375 509 446 91 549 483 321 615 149 75 590 219 126 52 679 48 18 => the sum is 10991 rather than 10990
Problem in column 19: 112 775 596 773 49 137 415 206 184 734 222 406 356 231 478 399 604 496 76 490 298 578 721 690 157 667 111 28 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 782 491 621 695 691  99  46 112  85 573 209 115  49  63 747   2  54 731 716 702 606 578 480 679 735 128 179  22
  90 775 132 765 665 769 126 574  82 650 736  59 465  70 651 141 108 117  94 451 749  86 758 771  25 155 752 174
  38 118 608 774 563  34 210 617 520 668 633  72  88 726 764 113  84 125 768 760 688 214 612 766 121  96 110 100
 494 158 685 399 652  43  56 615 185 636 629 107 386 200 728  78  62 780  93 708 625 246 562 557 756 168 190 192
 638  91 130 162 658 178 111 620 160 745 659  55 217 723 575 163 191 509 306 567 227 201 686 681 591 184 714 248
 175 166 701 740 748 784  40 577 167 581 372 170 142  83 670  29 195 120 235 634 521  71 406 622 270 738 254 779
 753 531 369 199 715  97 767 610 205 637 379 183 157 105 383 140 311 597 224 772 264 400 600 711 129 368 182 202
 164 307 233 725 535 116 374 783 127 281 734 326 277 310 653 522 329 153 777 361 533 154 558 504 236 351 344 223
 595 242  98 269 452 147 316 773 230 676 750 407 151 293 216  47 149 781 339 700 259 204 611 255 776 678 186 389
 675 719 273 203 569 193 358 305 196 598 689 251 249 337 212 341 104 486 603 604 349 448 759 684 208 161 283 133
 656 206 441 384 530 694 404 253 131 445 755 454 313  66 525 680 177 416 245 285 320 330 739 258 260 354 375 294
 252 413 324 289 609 485 221 464 472 460 493 408 394 496 393 317 647 477 261 392 401 297 279 427 274 334 388 323
 757 287 237 420 405 380 390 225 327 308 532 439 173 172 478 706 304 639 295 466 397 418 303 434 314 272 481 431
 538 385 402 396 414 282 309 250 415 489 376 241  51 387 763 707 315 457 443 409 424 291 412 432 350 357 421 275
 219 564 360 319 302 364 352 551 516 353 321 455 359 371 440 238 528 331 497 395 288 419 276 426 362 467 433 484
 495 139 428 266 356 296 340 546 542 459 197 585 119 363 243 510 437 299 462 453 280 461 479 456 403 435 492 449
 601 549 410 447 180 513 498 343 468 391   7   1 348 271 568 618 422 596 514  15 602 345 226 442 482 487 176 470
 507 471 579 499 138 490 458 483 292 527 378 336 545 500 590 512 529   8 335 228  13 256 290 347 429 444 370 436
  30 539 559 438 159 301 476 475 547 189 300 586 646 488  26  87 613 446 548 165 582 523  58 229 502 411 517 550
 187 144 398 342 346 537 430 215  17 262 220 614 644 365 506 584 570 322 381  16 649 626 541 232 628  36 511 667
 156  68 643 540  33 576 642  80 592  89 169 727 543 593 519 556 594 152 463 143  81 534 136 137 417 664 554 589
  79 560 580  92 181 515 737 571 605  35 247 607 761 687  11 366 669 333 555 284 122  28 101 109 503 425 587 640
 474 674 632 599  10 103 544 123 704 234 222 655 505 709 145 697 278 188 619 332  37 469  31  65 627 657  12 645
 218 713 648 698 367 536 683  73 692  52 148 553 623 552  39 524 526 423 778 114 211 508  74  23  60 518 583  53
 355 239  32  21 298 717  42 501 718 213  67 661 729 690  64 699 754  19  61 328 146 733 286 572  48 654 631 712
 312  18   3 124 244 732 746   4 724 338 263 473 630 705  27 671 616 198 102 150 257 770  77  41 743 588 693 741
 377 751 450  50  95 267 673 171 710  44 265 720 744 660  45 318 662 565 207 231 663 703 268  24  20 666   6 635
 373 672  14 135  75 742 641  76 561  57 240 730 682   5   9 624 762 722  69 325 696 677 382 106 721 194 566 134

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00605e+07us (= 10060.5ms, 10.0605s)
Satisfaction error: 3
Number of search iterations: 2227
Number of local moves: 877 (including on plateau: 277)
Number of local minimum: 187 (including on plateau: 35)
Number of resets: 1
Number of restarts: 0

Problem in row 9: 595 242 98 269 452 147 316 773 230 676 750 407 151 293 216 47 149 781 339 700 259 204 611 255 776 678 186 389 => the sum is 10989 rather than 10990
Problem in row 14: 538 385 402 396 414 282 309 250 415 489 376 241 51 387 763 707 315 457 443 409 424 291 412 432 350 357 421 275 => the sum is 10991 rather than 10990
Problem in diagonal 1: 22 752 96 756 681 406 400 533 700 603 416 647 706 763 371 119 1 378 189 17 80 737 103 367 21 3 751 373 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 268 703 775  39 759  75 651  31 107 118   5 316 772  81  27  41 551 122  59 730 673 723 682 591 770  23 525 773
 692 713 657 778 760 150 142 140 530  61  20   3 640  16  14 645  18  47 112 213  96 757 776 666 748 766 784  46
 735 329 333 100 762 181 751 656 782 330  90  97 151 106 160  24 110  84 288 618  65 676 719 593 764 783 684  19
  64 597 765 490 615 133 700  94 109 649 144  79 600 120 130 523  67  83 647 155 737 731 769 601 495  93 643 157
 729 635 756 121 780 664 604 177 354 149 139 125 216 266 105  85 607 164 576 275 186 637 211 705 688 134 654 248
 746 689 512 145 721 771 481 446 183 102  91 234 344 180 276  87 153 143  99 612 101 543 779 742 573 269 625 343
 350 399 698 124 633 196 752 158 273 184 310 192 162 194 696 781 697 129 532 279 283 497 239 755 509 148 627 193
 294 579 774 255 584 166 539 768 168 207 209 171 195 280 198 624 732 187 182 725 754 261 173 519 559 159 581 147
 594 580 244 278 550 449 478 223 484 212 228 104 245 271 378 605 631 309 738 327 299 250 348 464 644 304 630 123
 655 515 249 179 480 247 498 528 227 745 315 214 274 379 362 587 693 258 767 222 298 287 199 415 463 240 375 319
 636 588 377 272 572 200 763 522 185 202 395 410 367 313 290 321 622 544 349 210 281 324 224 381 540 331 359 412
 563 508 306 339 486 312 297 335 347 218 238 353 197 334 360 311 510 326 616 301 189 671 428 777 518 389 409 352
 293 369 355 451 465 346 382 302 292 345 318 358 398 340 397 533 687 178 407 323 286 761 435 337 617 307 370 338
 467 254 422 328 256 325 363 366 549 356 388 361 516 317 414 406 401 432 418 444 460 259 503 459 400 373 421 332
 423 371 396 394 282 393 471 535 487 469 436 380 336  56 390 295 474 466 433 342 411 420 430 427 253 413 439 368
 448 494 502 385 488 391 455 445 511 416 351 417  42 374 434 424 135 453 284 468 285 404 442 492 172 384 491 403
 461 454 383 392 215 450 242 536 524 513 387 437 483 440 552 419 270 372 476  17 546 558 246 169 405 376 205 462
  32 499 482 520 208 586 541 504 583 485 425 470 443 609  30 521 260 608   4 493 235 438 578 156  72 447 542 219
 152 175 589 206 217 452 165 626 629 314 477 603 711 489 264 548  21 564  78 501 529 402 457 232 408 507 174 500
 561 289 553 619 116 526 132 243  70 611 557 538 590 592 456  71 663 560 115 127 472 441 606  38 236 681  54 473
 547 231 161 680  92 652 204  22 305 429 620 641 496 568 582 141 659 648 303 569  26   2 710  88 226 505 251 632
 237 131  37 740 163 506  45 694 562 556 716 567 706 602 599 517  66 262 537  11 653 233 154 117 190 715  36 638
 241 203  62 570 220  28 320 554 662 677 708 514 595 545 475 566  86 577 621  98 531 229 111 458  69 527 188 555
   9  50  80 623 300 614 221 191 534  57 702 665 613 678 712  49 365 596 267 691 646  40 598 263 386 660 291  89
 575 113 167  33 136 714  34 357 650 727 642 726  63 699 585 571 170 747 322 257 669  60   6 252  13 734 225 743
  77 138 119 722  58 670  25 717 672 744 675 565  55 701 686 296 426 753 634 690   8 128 114 230 146  48 265 628
  15 308 201 728  29 749  10 683 103 364 736 709  95 707 679 341 277 704 431 718 661 176   1  51  53 667  74 720
 126  76  35 479  43  44 724 137 108 750 668 741 685 733 739 658 639 674 695 574 610  82  52  12  73   7  68 758

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.0848e+06us (= 7084.8ms, 7.0848s)
Wall-clock time (full program): 7.14438e+06us (= 7144.38ms, 7.14438s)
Satisfaction error: 0
Number of search iterations: 1281
Number of local moves: 843 (including on plateau: 175)
Number of local minimum: 54 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 775 703 513 109  66 716  61  92 147 115 105 692  84 768 742  56 587 107 584 696  76 474 771 766 655  47 404  79
  83 353 613 133  70 631 108 173 555 130 112 251 143 116 547  90 632 486 571  95 726 656 774 734 678 126 741 663
 119 606 674 753 127 727  63 163 465 149 152 743  65 250 594 175 641 740 128 757 705  52 772 747  69  25 101 428
 529 633 683 744  68 653 102  94 476  59 110 698 131 220 654 179 576 767 712 617 440 172 508 749 142  62  64 148
 111 586 722 169 448 590  80 206 661 601 189 218 132 395 603  77 659 746 159 273 638 150 745 103 144 640 225 720
 762 551 238 182 171 578 208  97 564 196 209 580  50 649 718 174 758 138 259 763 693  75 782 600 134 113  96 652
 183 266 516 207 188 748 769 624 689 217 512 779  51 215 626 212 352 255 160 532 701 690 327 198 122 158 226 467
  88 708 682 120 201 733 261 780 764 542 294 245 278 494 236 293 583 318 213 269 781 151 401 239 290 244 200 582
 704 687 694 344 243 614 240 214 392 537 291 190 203 300 234 319 770 270 776 598 778 380 230 222 170 181 141 268
 125 707 306 211 135 602 221 161 760 783 321 612 284 540 479 197 403 265 202 713 434 305 394 303 262 441 341 483
 199 282 335 235 297 315 260 323 737 754 391 271 337 608 263 253 520 668 281 671 684 187 569 402 378 242 287 241
 702 438 339 414 248 298 316 229 343 356 348 386 432 784 377 272 714 185 359 455 523 308 399 286 334 382 379 384
 246 628 296 165 385 307 276 420 645 279 374 223 397 658 313 364 518 362 410 363 457 280 345 357 592 275 338 717
 415 312 331 328 466 325 283 424 528 447 376 346 332 369 387 389 425 461 350 351 430 427 473 333 495 396 416 375
 340 388 256 288 500 358 408 398 302 405 360 422 610 373 435 423 504 349 458 370 367  28 505 406 562 439 412 324
 514 421 522 393 449 355 566 534 471 354 511 295 452 444 559  45  44 554 372  46 317 451  29 475 510 371 446 490
 464  82  30 477  37 485 472 304 204 517 309 459 445 484 450 361 437 468 480 527 329 419 573 429 509 453 519 267
 456 254 411 418 538 491 460 400 123 470 104 436 252  15 557 541 368 231 488 515 177 499 536 496 539 426 552 237
 381 136 463  48 560 167 521 558  58 195 501 481 506 431 139 591 301 599  93 502 314 563 322 622 556 548 492 342
 618 417 156 553 597  89 413 530 285 487 524 106 498 186 228 620 227 454 469  91 194 442 145 497 619 535 627 383
 572  42 137 639 205 117 675  81  99 129 546 493 545 531  87 625 140 657 593   6 336 567 462 589 503 575 561 478
  21 407 155 577 634  38 673 630  60 647 482 489 651 100 184 607  13 568 585 330  73  36 635  72 574 543 636 570
 667 154 210 596 761 289 723 581 533  27 605  43 604  17 526 736  41 114 681 549 124 642   3   7 525 643 579  10
 637 191 677  71 721 433 550 648 365 609 507 146 629 347 249 565 277  23  20 166 232 192  86 685  26 611 711 616
 180 168 258 615 686  22 732 219  33 725 662  54 688 706 588 621 164 311 660 409  57 700  35  14  11 691 724 257
 666 310  85 699 665   4 176 715 233 669 646 670 679 157  39 731   2  32 264 247 162 765  53 595 224 738  34 730
  67  16   8 752 751 274 697 728 320 292 710 650 735 443 121 755 216 709 644  74  49 756  98  40 672 326   9  78
 366 544 680 750 773  31 676 664 178 299 739  12 777 390  55 719 118 153  19   5 193 623  18  24 695 759 729   1

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.72385e+06us (= 6723.85ms, 6.72385s)
Wall-clock time (full program): 6.78395e+06us (= 6783.95ms, 6.78395s)
Satisfaction error: 0
Number of search iterations: 1224
Number of local moves: 688 (including on plateau: 261)
Number of local minimum: 73 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  58 135  57 725 734 628 715 745 750 180  60 746 689  26 128   6 701 118 126 291 238 285 644 704 687  13  80 721
 656 136  64   3  61 697 749 710 707 623 152 758 235 176  46 606 723 159 188   2 643  37  54 755 739 502  93 716
  30 130  45 213 666 655 727 708 731  90 111 618 770 742 132 593 699 175 220 169  12  24  17 737 577   8 632 759
 664 203 233   4 726 713 676 309 765  47  86 629 647 557  10 667 682  94  49  81 652  20  77 688   5 582 526 598
 584 184 127 565 595  53 518 189 717   1  50 733 680 613  67 678 675  40 257 129  85 677 354  16 729 520 549 605
 416 155 109 686 597  87 642 600 423 426  59 546 492 193  82 560 711  83 204 158 626 609 607 452 556  76 154 681
 673 101  38 662 305 578  11 590 625  32 156 674 691 634 153 576 602 293  95 393  14  25 636 483 651 555 164 580
 627 468 212 253 575 658 540 330  43 596 157 592 554 528 210 550 583 119  22 407 198 254 529 548 611 312  21 493
 530 351  27 186 304 608 601  31 143 214 325 487 579 498 232 561 537 133   7 491 653 466 544 534 482 447 541 478
 461 406 271 162 453 100 649  70 102  19 505 394 532 497 475 511 542 336 357  56 490 504 589 604 669 224 476 536
 569 460 273 419 414 243 181 567 123 405 570 519 665 545 409 376 449 392  84 307 517 434  91 471 446 531 515  15
 477 507 187 334 161 386 440 521 572 221 495 472 464 553 385 513  78 277 310 321 587 320 431 463 113 486 465 451
 439 400 265 547 479 501 512 412 318 522 473 387 396 216 432   9 272 151 242 192 543 480 433 339 458 523 599 450
 349 448 481 389 352 241 328 455 445 417 382 408 462 322 358 383 391 508 404 317 485 355 360 395 415 363 424 353
 428 331 527 516 379 427 368 337 174 571 398 459 371 365 469 335 359 503 388 635 316 314 288 420 313 366 295 338
 384 438 772 401 484 327 256 202 538 436 342 454 369 456 350 315 373 539 377 435 296 248 370 418 303 411 367 329
 364 402 467 381 474 356 443 278 535 361 399 390 410 311 429 362 397 612 413 514 301 403 290 374 333 228 444 319
 227 249 441 289 457 251 274 654 279 614 624 292 261 764 199 728 167 524 751 706 247 223 299 284 231 326 323 306
 268 252 488 661 437 280 340 617 341 762 300 287 260 237 738 286 372 496 442 564 208 753 211 283 269 134 380 324
 332 709 588 266 217 191 222 558 525 264 171 166 276 282 732 347 205 696 730 668 246 695 258 218 259 263 672 234
 294 633 638 172 236 552  52 783 244 705 724 297 177  44 694 120 422 718 559 470 771 239 229 148 104 660 105 200
 255 639 767 308 586 190 378 262 345 348 657 121  88 747 499  36 270 594 562 563 225 760 250 201 226 182 722 209
  66 637 703 421 150 500 712 195 240 298 659 173  99  51 645 107 124 641 620 663 782 615 646 230 163 207 494 149
 168 275 779 763 780 506  89  28 183 769 683 165 425 141 630 206  71 581 748 144 139 110 568 147 631 610 616  35
 137 741 720 774  74 215 194 430 197 533 719  42 140 185 754  29 138 648 698 585 196 621  75 170 777 784 112 302
  65 744 489 179 117 178  48  33 267 735 650  73  34 736 591 684  68 574 752 671 773 776 690  96  72 775  97  23
 692 115 603 551  63 761 219 131  92 122 573  69  79 509 766 743  98 640 685 714 125  41 757 670  55 756 343  18
 778 740 619 160 114 108 106 245 566 679 510  39 145  62 375 103 281 346 700 344 622 702 693 142 116 146 781 768

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00027e+07us (= 10002.7ms, 10.0027s)
Wall-clock time (full program): 1.00537e+07us (= 10053.7ms, 10.0537s)
Satisfaction error: 2
Number of search iterations: 1832
Number of local moves: 807 (including on plateau: 305)
Number of local minimum: 132 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0

Problem in column 1: 58 656 30 664 584 416 673 627 530 461 569 477 439 349 428 384 364 227 268 332 294 255 66 168 137 65 692 778 => the sum is 10991 rather than 10990
Problem in column 2: 135 136 130 203 184 155 101 468 351 406 460 507 400 448 331 438 402 249 252 709 633 639 637 275 741 744 115 740 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 771 371  20 671 156  21 455 164 773 637 176 756  63 753 562 115 752 340 147 529  90 547 776 744 484  24  34  59
 772 783  68  72  54 489 708 151 778 426 490 757  97 784 728 746  83 770 125  91  66  30  65 421 615 126 542 153
 706 406 133 152 148  38 717 184 751 517 629 775 129 177 718 741 732 544 369 196  70 755  95 102 781 286  89  50
 450 359 104 680 228 124 679 675 760 199 514 565 114 678 566 665 116 486 341  98  53 142 592 759 625  86 221 111
 684 729 110 300 253 231 762 138 670 139 480 597 107 570 616 543 689 457 600  48 249 185 222 468 167 779  39 158
 737 633 166 252  55 740 768  85 699 127 394 747 508 573 584 143 743 742 119 218 162 140 709 182 571  58  84  51
 734 720 239 195 242 415 409  99 178 702 502 400 265 103 692 105 483 769 704 175 337 749 259 159 774 241 293  47
 422 681 349 258 284 521 411 711 157 214 683 644 160 201 710 235 736 700 224 272 460 130 207 209 764 211 192 244
 531 690 131 322  76 288 715 442 501 654 622 188 305 285 618 257 247 722 181 705 202 280 348 204 763 179 225 309
 716 493 260 277 194 609 505 308 269 688 738 423 350 197 356 321 271 379 676 310 750 248 334 292 295 240 304 187
 353 655 754 226 327 246 564 141 588 296 731 290 357 419 255 338 328 481 476  67 206 656 428 553 254 301 251 449
 323 347 161 418 534 645 630 433 275 314 509 557 373 237 273 281 524 782 695 331 216 319 315 230 180 238 399 451
 413 256 407 313 382 311 535 212 378 714 780 289 429 363 431 346 234 279 339 488 345 381 453 262 447 463 474 266
 466 335 500 465 263 364 358 432 575 294 512 452 388 245 299 302 306 307 416 748 261 361 492 392 352 355 420 330
 386 291 506 332 342 344 395 444 440 412 320 368 439 437 316 462 482 336 424 282 414 459 410 436 396 402 397 318
 393 425  94 522 632 519 312 660 464 403 232 504   6 408 370 343 354 405 183 389 375 383 377 552 351 333 427 574
 398  41 365 385 366  37 268 472 469 454 477  82 518 549 526 461 236 174   2 578 554 384 540 569 401 487 530 667
 165  61 525 572 585 374  33 448 283 595 443 303 435 620 582 520 264  57  11 441 215 523 536 673 170 513 528 515
  42 155 605 372 473 205 380 475 495  43 438  80 467 510 150 558 559 590 132 496 376 623 485 101 593 533 555 499
 287 123 445 563 470 324  22 576 498 538  45 326 657 478   5 546 417 360  75  36 503 550 491 682  78 539 707 649
 497 200 545 599 587 210  44  79 135 611  92 602 541 250  32 586 108   8 651 621 362 610 507 560  35 589 666 663
 136 191 653 471 456 598  18 624 134  74   4 568 613  77  52 446 614 213 274 696 548 391 567 494 109 581 701 687
  28  16 712 669 635 639 169 387 172 532 154  64 713 640 117 626 577  96 511 434 556  17  46 672 479 661  60 608
 317  27 686 390 723 229 208 631 171 203 168 173 761 647 297  87   1 219 634 537 698  25 638 404 145 677 733 561
  88 607 627  19 580 658 146 601  40 193  14 128 719 113 137 596 144 186 643 628 725 604 691 694  12   7 726 664
  26 767 458 650 606 591 329 617  29 642 190 120  56 583 122  15  23 189 735 766 765 243 118  73 220 648 724 685
  49 516 721 739 594 579 233 149 227  71 430  69 693  31 325   3 697 121 777 612 758 636 276  10 267 730   9 668
 100 112 646 106 745 641 217 652  81 298 223 163 727  62 551 603 270 278 527 198 674 619  13  93 662 703 659 367

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00609e+07us (= 10060.9ms, 10.0609s)
Satisfaction error: 2
Number of search iterations: 1826
Number of local moves: 718 (including on plateau: 321)
Number of local minimum: 143 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0

Problem in column 19: 147 125 369 341 600 119 704 224 181 676 476 695 339 416 424 183 2 11 132 75 651 274 511 634 643 735 777 527 => the sum is 10991 rather than 10990
Problem in column 27: 34 542 89 221 39 84 293 192 225 304 251 399 474 420 397 427 530 528 555 707 666 701 60 733 726 724 9 659 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  62 632 753 168 751 749  74 429 114  49 757 617  93 633 140 583 649 776 690 783  32 154 156  85 220 248 571  22
 392 658 763  33 680 153 157 110  96  77 599 628 100 674  81 726 769 772 600 629  92  64 732  48 675  34 539 109
  75 121 603  99 681 770 112 623 119  51 609 206  88 685  78 551 775  73 621 709 740 135 622  52 624 234 663 271
 477 218 518 768 666 738  66 530  54  29 149 766  90 616  69 596 743 782 677 349 173 128 256  84 699  72 561 116
 138 103 602  68 534 158 155 748 134  70 778 756  97 540 111 729 555 780 473 593 487 707 166 386  71 702 243 106
  58 668 452 207 478 646 139 187 179 254 204 679  61 667 136 614 723 193 777 509 297 779 739 165 225 196 698  60
 222 194 562  53 188 337 671 651 212 180 765 516 345 717 232 714 131 230 703 104 147 781 142 239 736 240 695 283
 319 292 676  59 275 223 586 424 642 281 184 716 731 470 208 773 146 312 506 601 161 705 270 132 286 126 618 268
 303 784 461 627 522 301 201 521 309 251 209 637 227 693 215 308 224 113 718 643 219 199 328 420 715 250 288 304
  95 244 694 170 568 175 192 549 185 733 195 682 569 355 547 588 151 242 725 278 226 144 742 336 747 321 348 189
 344 247 734 252 644 741 148 719 334 700 322 330 202 317 171 353 162 754 431 163 284 228 231 574 255 183 659 508
 416 440 150 443 647 235 377 366 289 437 454 277 449 315 387 346 771 406 500 638 374 320 447 343 236 316 362 249
 444 425 282 398 290 379 528 370 325 367 412 342 341 246 532 390 395 339 402 350 373 401 203 400 442 556 517 541
 479 265 446 169 552 376 430 480 338 191 538 272 463 333 503 354 445 190 458 511 372 347 214 774 263 465 438 324
 409  94 311 294 410 426 455 464 381 493 422 448 471 404 356 413 514 391 411 435 389 484 306 259 369 427 428 326
 469 433 245 368 299 394 415 127 485 670 262 396 380 499 451 483 543 305 432 462   5 280 363 307 502 450 359 606
  76 323 310 388 331 488 417  38 295 393 559 365 382 456 361 553  63 652  37 527 467 441 466 564 468 507 544 519
 383 459 298 490 172 589 476  47 375 418  13 607 352 495 665 408 620 570   3 496 482 597 578 460  19 526 384   8
 525 584 486 640  21 531 513 314 610 360 378 329 124 210 436 178 704 421 300 457 405 107 335 554 117 213 558 580
 504 489 122 537 364 351 357 258  26 625 481 182 689  41 501  82 581 453 233 491 542  65 664 524 572 512 181 563
 641 371 186 529 313 595 497 565 683 291 587  20 577   2 590  79 399 475  89 273 115 557 414 302 434 650 177 579
 648 653 101 626 340 604 264 287 566 582  16   7 505 176 613 216  24  91 279  86 634 494 619 744 523 520 197 575
 608  56 635 660 439 102 576 238 721 657  67 546 510  55 594 160 108 267 257 167 536 612  23 661 397 535 198 605
 548 598  43 545 592 492 691 129 550 123 474 125 573 296 636 241  36  42 200 217 735 654 591 419  12 697  18 713
 645 630 261 266 137 407 318 229 722 515  14 118 611 567 767 159  57 472  27  83 752 260 285 701 560 615 120 692
 724 221   4 728  35   9 745 730 720 696 672 141 758 385 678 145 174  50 211  80 585 332 423 662 133   1 237 711
 712  28  39 655  15  11 684 130 762 737 706   6 533  45 639 105 498 687  25  87 656 327 631 755  17 708  31 761
 274 760 253 750  46  10 746 727 764 759 164 276 669  98 293 143  30 152 205 269 710 688  44  40 673 686 358 403

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00598e+07us (= 10059.8ms, 10.0598s)
Satisfaction error: 2
Number of search iterations: 2000
Number of local moves: 823 (including on plateau: 251)
Number of local minimum: 144 (including on plateau: 29)
Number of resets: 1
Number of restarts: 0

Problem in column 10: 49 77 51 29 70 254 180 281 251 733 700 437 367 191 493 670 393 418 360 625 291 582 657 123 515 696 737 759 => the sum is 10989 rather than 10990
Problem in column 28: 22 109 271 116 106 60 283 268 304 189 508 249 541 324 326 606 519 8 580 563 579 575 605 713 692 711 761 403 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 609  68 762  29 700 123 110 356 743  90 749 585  47  57 100 568 442 152 131 424  73 563 566 703 693 711 601 235
  81 774 188 683  21 246  78 436 459 516 732 724 113  53  54 670 588 644 180  75  37 565  74 765 784 557 769 124
 107  87 499  72 725 103  19 464  41 734 583 109  98  61  95 648 582 751 465 768 531 736 184 513 654 343 780 238
  50  26 746 739 655 156 135 211 126 764 578 761  32  86 127 600 546  85 183 770 198 611  80 718 681 500 656 170
 217 172 581 758 155 101 227 591 116 672 102 782 132 112  88 742 754 276 253 649 302 616  46 776 678 535 491  66
 154 267 534  52 783 778  56 562  38 659 189 171 220 160 144 367 657 438 178 643  94 775 779 709 614 481 295 193
  79  48 452 234 176 151 760 699 259 106 759 174 752 142 192 647 559 149 236 772 366 771 139 664 680 555 239 230
 542 185 528 120 247 277 128 777 117 317 204 225 374 314 146 687 720 318 163 773 766 712 137 698 541 256 597 121
 471  96 686 404 219 119 335 552 629 244  76 604 319 268 177 532 608 251 186 232 289 530 194 704 610 695 663 297
 696 372 435 353 203 209 362 241 730 536 191 173 150 278 222 323 642 296 406 337 212 653 201 763 570 726 368 342
 539 316 492 265 321 456 344 497 697 224 294 715 200 325 237 382 444 733 286 190 298 392 147 195 483 781 378 359
 515 299 266 229 303 329 400 413 669 727 495 313 441 309 250 721 340 280 273 285 291 355 409 348 613 345 501 271
 434 625 370 427 283 389 213 394 354 308 486 108 401 487 596 416 320 576 377 324 307 498 334 396 538 304 349 376
 383 605 455 336 457 371 397 284 408 423 290 503 414 292 402 504 333 351 346 428 395 243 461 357 311 393 488 360
 537 221 327 519 431 347 399 301 443 306 391 245 369 470 429 315 412 339 523 373 388 358 569 398 341 410 560 269
 293 375 510 462 477 573 478 264 350 310 617 473 364 440 330 215 419 506 514 384 448 328 164 380 223 129 453 511
 197 445 179 275 460 505 554 475 446 524 463 326 288 467 422 257 263 529 433 449 447 430 405 490 136 281 390 454
  69 527 111 474 437 658 426  22 540 476 254 432 509 753 533 411 279  62 543 255 547 332 482 379 261 624 143 451
 249 517 158 671 466 468 415  67 598 352 622 586 338 274 556 407 489 472  65 623 567 260 545   4  27 385 287 522
 479 425  70 639 702 694 682 403  14 496 518 716 674 494 587  39  71 615 386  45 507 331 421 166 125  84 157 450
 551 493  31 521 580 418 603 218 312 196 417 558 612 575 750 140  25 553 626 231   1   9 729 248 270 363 502 458
 206 606 549 637 688 705 544 153 526  82 631 550 508 628 662  17 175  92 652 208 593  83 745   7 114   3  49 577
 646 627 420 706  59  33 665 484 300 520 641 590 645 595 756 162  51 572 439 618 159 226  40  24  99 202 199 512
 599 469 361 594   6 636 584 214 579 272 621 122 181 634 738  20 207 690 607 133 485 134 757 167  89 387 130 574
 638 571 673  12 689  77 619 748 322 148  64 118 744 633 258 564 115 252 620  60 735  63 713  36 592  30 228 668
 548 708   2  23 719 660 731 145 589 168   8 282 667 666 710 187 205  28 677 602 640 262 692  35 104 161  43 728
 737 381  44 701  15 661 635 305 480 169  10  11 675 741 722 216  93 240 717  97 684 138 767 165 141  58 632 755
 365 685 561  55  13 747  91 714 105 651   5  34 723 676 707 233 650 740 525 242 630  16 210 182  18 691  42 679

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00606e+07us (= 10060.6ms, 10.0606s)
Satisfaction error: 2
Number of search iterations: 1677
Number of local moves: 807 (including on plateau: 385)
Number of local minimum: 122 (including on plateau: 49)
Number of resets: 0
Number of restarts: 0

Problem in column 1: 609 81 107 50 217 154 79 542 471 696 539 515 434 383 537 293 197 69 249 479 551 206 646 599 638 548 737 365 => the sum is 10991 rather than 10990
Problem in column 17: 442 588 582 546 754 657 559 720 608 642 444 340 320 333 412 419 263 279 489 71 25 175 51 207 115 205 93 650 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 702 172 679 707  98 776 485 104 166  59 659 555 692 627 101  57 737 182 132 110 734 781 145 671  78 250 126 405
 183 741 652 505  36 751 206 549 517 777  52  53 767 616  87  24 672  89 136  79 520 527 234 548  28 622 783 236
 716  41 779 615  38 719  37 105 298 510 198 556 645 761 730 161 768  83 116 762 490 197 129  72  86 697 135 546
 151  88 417 764 144 640  46 174  90 121 760 657 628 666 235  50 668 305  67 689 244 690 251 722 115 366 739 503
  51 100 537 685 606 728 112 141  75 103 133 711 710 604 137 154 641 109 631 626 192 353  82 778 167 476 772 576
 205  34 729 691 134 448 214 123  62 185 483 592 230 624 540 159 246  91  93 186 684 588 687 720 260 598 763 621
 225 152 771 175 264 717 765  68  58 203 519 411 766 680  45 231 187 708 120 512 759 774 705 125 149 256 308 337
 287 610 639 122 226 480 282 744 756 263  55 746 283 266 276 280 237 139 248 171 770 559 213 181 301 706 542 608
 211  73 677 233 131 473 324 242 753 177 163 704 362 345 326 290 179 713 327 784 747 578 478 202 270 310 165 754
 370 463 470 188 769 597 228 254 114 265 348 570 269 279 336 322 272 190 773 241 738 695 651 278 273 227 219 591
 408 259 742 557 216 475 307 147 320 189 670 212 394 153 443 342 351 367 493 239 299 407 673 745 399 178 752 253
 281 229 471 221 245 477 469 489 356 341 143 686 232 258 303 509 518 184 220 335 580 782 515 222 427 468 249 780
 304 243 452 210 467 445 442 255 195 432 318 323 218 775 289 332 325 536 421 661 593 497 128 247 755 395 368 364
 447 328 412 491 488 410 434 526 313 209 425 343 300 357 383 352 552 285 433 338 334 397 495 438 277 594 372 257
 378 406 414 379 387 321 565 522 481  31 380 479 262 386 302 544 453 404  77 354 419 360 587 459 375 498 371 396
 461 451 173 398 355 291 374 420 388 457 393 572 492 524 296 676 472 316 317 312 435  47 377 365 390 331 563 344
 436 541 223 583 440 347  27 449 346 523 359 428 460 275 385 391 286 384 464 514 369 458 402 288 416 586 562  48
 363 450 340 516 585 261 551 511 513 462  85 180 446 533 474 418 401 376 409 350 284 535 584 113 664   2 415 169
 349 553  39 579 507 215 611 558 500  40 502 138 392 571 423 333 454 382 293 315 199 297 330 599 569 545 429 268
 696 424 295  61 521 274 484 629  26 531 504  96 560 339 430 530 575 693 698  18 501 117 613 465 715  94  25  76
 532 574   5 102 567  43 499  44 506 487 669 130 482 564 653 534 617 607 528 292  19 148  69 620 496 508 568 127
  15 589 158 636 426 204  84 723 581 748 605  97 201 107 619 577 663 665 240 603  33   4 525 200 733 561  99 294
 643 566 160  80 573  12 662 441 635 539 625 111 649  92 590 486 217 600 667 439 309 157   1 494 466 529  54 193
 694 718 168  42 725  21 618 554 550 547 637 224 119  66 582 678 271 403 740 650  56 358  16  70 721   6 311 444
 596 538 191   9 638 142 709 118 675 647 683 413 306 155 700 732 108 267 238  95  49 400 602 614  30 612  35 688
 595 736 314 176 712 156 655 735 361 660 601 252  71  63 609 633  29 455 724 656 208   3 196  65 699  20 150 456
 674 162  23 642  11 373 170 634 701 727   7 329  32 164 632 437  81 743 703  13 106 207 658 543 750 431 389 648
  17 749  60 623 681 194 630 731 654 757  14 422  22 140  64 758  10 714 682 646 319  74 644 146 381 124 726   8

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00609e+07us (= 10060.9ms, 10.0609s)
Satisfaction error: 2
Number of search iterations: 1739
Number of local moves: 739 (including on plateau: 220)
Number of local minimum: 122 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0

Problem in row 9: 211 73 677 233 131 473 324 242 753 177 163 704 362 345 326 290 179 713 327 784 747 578 478 202 270 310 165 754 => the sum is 10991 rather than 10990
Problem in row 24: 694 718 168 42 725 21 618 554 550 547 637 224 119 66 582 678 271 403 740 650 56 358 16 70 721 6 311 444 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 485 343 116 710  11 757  20 689 749  15 625 751 746  50  98 680  93 273 170 736  12  26 672  45 640 727 168 583
 151 677 144 613 234 114 249 569  51 669 712 726 184 261 675  42  37 307 620 688  41 113 782 732 714 700 169  16
 317 718 723 663  85 634 316 235 407 416 703 296 704 722   4  43  75 143  25 619 347   2 691 743  52  27 645 635
 199  49 106  21  72 649 469 233 617  76 581 763 605 329 682 632 621 182 661 336  10 260 758  47  78 673 692 589
  62 733  64 219 189 701 149  34 563 626 546 660 276 192   1 627  56  28 708 612 603 117 345 240 647 705 716 571
 200 694 548 586  19  55 202 119 278 595 601 559 350  38 706 488   8 102 547 667   6 300 266 591 609 711 659 486
 141 641 582  44 156 248  35 179 554 639  90 720 103  39 623 585 164  73 624 737  30 304 633 668 568 537 651 622
 123 448 533 518 183 519 305   5 509 529  94 489  29  96 715 483 644  84  66 570 544 130 567 550 524 496 662 575
  82 697 527 477 314 147 464  80 247 555 573 538 471  95 643 572 456  69 664   9 474  99 289 606 549 425 454 414
 579 542 508 610 301 132 505  13 517 392 551 530  33 578 545 470 491 372 125 420 557 268 172 101 457 389 422 410
 562 490 361 478 138 598 539 523 441 500  14 504 136 378 431 438  67 259 657 492 592 161 111 107 739 455 346 473
 299 444 487 246 332 398 440 357 432 427 134 362 396 580 365 402 193 386 428 484 482 335 515 513 390 461 302 400
 377 459 497   7 230 334 475 465 553 453 558 543 371 403 406 368 534 369 512 376 323 294 293  32 285 449 587 437
 342 223 501 405 388 409 436 279 370 430 401 325 511 391 411 462 531 306 397 217 540 256 439 541 510 466 394 109
 384 495 239 404 467 379 574 358 251 421 493 514 447 417 263 320 424 423 245 367 429 460 472 443 383 303 264 351
 636 312 395 552 525 318 297 363 331 373 283 339 353 463 415 354 319 344 442 231 452 356 327 359 615 494 418 324
 380 267 188 181 479 321 767 298 702 241 228 274 685 330 177 310 313 445 419 216 326 593 522 218 385 222 768 735
 670 771 257 204 503 333 784 315 167 104 295 338 759 195 374 209 666 458 252 584 197 412 607 408 238 186 413 291
 348 282 382 322 399 292 730 393 561 678 426 355 520 178 337 250 280 656 747 227 154 665 597 271 213 275 255 196
 608 242 133 366 604 352 115 742 770  91 265 244 535 764 311 243 220 653 502 748 284 498 521 126 254 290 277 232
 565 150 194 435 652 526 638 775 165 349 328 364 741 740 211 180 340 658 214  97 687 594  77 476 148 286 226 174
 270  79 287 755 769 309 576 719 695 191 187 375 175 654 208 185 556 744 224 281 157 725 225 507 381 262 288 206
 451 112 650 203 762 780 118 676 105 131 628 108 236 637 506 207 696 648 212 215 783 731 122 611 120 159 210 173
 588 146 717 128 433 480 646 468  40  81 590 142 387 750 176  68 599 642 532 679 681 684 139 760   3 140 121 171
 745  31 699 360 766 153 129 577 734 450 205  83 614 258 135  74 631 655 229 253 686 724 536 272 729 155  18  89
 600 110 773 160 602 752  86 434  92  60 698  23 481 100 683 779 709 629 237  61 127 713 166 308 618 162  53 774
 674 778 221 630 761 163 198 528  24 777 145  48  54 596 124 738 560 516 190  22 776 499  59 269  70  63 754 753
 152  57 158 693 616 137 728 564  65 721  36  17  88 756 765 781 707 566 341  46 690 671  87 446  71 772  58 201

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.00609e+07us (= 10060.9ms, 10.0609s)
Satisfaction error: 2
Number of search iterations: 1771
Number of local moves: 636 (including on plateau: 201)
Number of local minimum: 148 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0

Problem in row 19: 348 282 382 322 399 292 730 393 561 678 426 355 520 178 337 250 280 656 747 227 154 665 597 271 213 275 255 196 => the sum is 10989 rather than 10990
Problem in row 24: 588 146 717 128 433 480 646 468 40 81 590 142 387 750 176 68 599 642 532 679 681 684 139 760 3 140 121 171 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 186  47 675 534  20 121 753 768 101 749 388   2 156 735 111 695  63 116  75 640 772  98  51 676 758 745 678 277
  49 464 398 660 744  57 471 344 754  45 759  83 319 460 662 611  97  86  24 158 589 216 122 606 659 637 780 136
 707  55  60 756  90 227 692 714 615  37 119  70 710 263 623 721  11  61  34 781 627 760 152 755 681 447  59 163
 105 725 558  77 210 697 685 775 604  72 109 103 722 221 657 203 100  31  74 688 608 241 112 539 767 769 174 364
  40  93 129 503 254 147 321 730 516 132 544  82 620 496 766 596 181 171 126 501 682  89 134 783 741 718 689 206
 292 198 567 150  41 219 356 622 632  88 168 106 618 639 720 629  53 204 229 708 734 123 765 591 173 668 679  18
 764 205 253 166 202 169 643 779 776 220 165 201 778 218 456 625 194 110 138 200 291 742 167 568 372 711 666 211
 176  27 693 664 142 252 654 655 748 104 265 248 208 736 527 255 343 185 124  95 784 274 345 683 231 557 317 698
 159 521 782 702 303 140 585 230 601 251 209 525 511 690 256 638 250 243 199 294 774 155 237 553 279 602  68 233
 160 135 610 706 137 261 575 762 249 773 257 574 472 752 225 281 188 117 214 226 264 282 320 777 614 560 312 187
 238 278 417 387 302 405 572 498 393 301 259 213 346 347 287 461 339 771 770 342 285 180 512 530 266 680 297 314
 365 215 468 273 712 222 363 290 370 746 392 239 299 267 552 492 656 332 333 325 315 286 318 352 404 554 362 488
 458 349 466 196 355 396 570 331 524 467 489 494 573 268 234 383 309 269 510 497 436 298 366 465 336 448 223 280
 369 457 691 373 260 418 276 413 409 379 386 337 429 423 424 371 400 354 323 360 397 402 283 420 463 569 270 334
 431 425 515 561 438 499 361 272 406 419 483 380 469 335 484 307 330 459 421 236 183 375 507 284 157 414 564 275
 635 450 513 432 384 518 548 407 394 329 391 353  84 439 478 357 296 295 434 426 401 541 410  23 308 146 528 470
 382 351 305 449 453 428 306 304 444 411 520 289 300 433 389 437 529 479 576 565 368 473 348  66 235 246 526 378
 412 493 399 482 416 522 141 403 476 446  16 531 430 153 441 577 477 571 624 390   4 532 582 207 175 262 452 376
 381 451  64 651 435 415 359  69 151 700 559 540  50 481 217 546 592 374 508 367 340 490 556 536 495 107  76 480
 328 551 197 395 579 350 326 542 310 454 523 288 550 212 445 549 555 475 385 442  29 455 517 120 118 114 537 644
 671 696   3 148 440 621 313 127 128 271 504 703 485 193 584   7 486 519 726 113  21 505 731 245 642 178 443 487
 597 422  48  46 590 563 144  43 566 462 182 547 177 647 358 538 543 750 580 634 427  42 599   5  65 154 648 613
 500 474 506 586 583  32 491 224 133 740 562 733  79 164  73  33 533 724 631 605  99 645 535 172 247 143 115 628
 652 665 240 587 316 502 191  85 139 701 609 593  30  67  26 145 684 650 719 633  17 694 170 595 408 108  25 739
 617 598 322  10 646 743 232 161 341 757 704 649 162 324  87  91 674 641 728   1  62 723 729  12  14 258 195 509
 667 630 189 149 514 588  15 125  36 228 747 732 581 327 102 192 737 687 713  56 686 607  94 244 594  92 619  39
 636 338 545 293 761 751  38   6  44  35 603 763 179  28 190 242 709 600  58 626 699 578 658  52  71  80 669 738
  13 677 377  54 663 727   9 311 130 673  78 612 653 672 616   8 661 716 715  81  96 184 670 131 717  22  19 705

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00594e+07us (= 10059.4ms, 10.0594s)
Satisfaction error: 2
Number of search iterations: 1923
Number of local moves: 650 (including on plateau: 321)
Number of local minimum: 133 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0

Problem in column 19: 75 24 34 74 126 229 138 124 199 214 770 333 510 323 421 434 576 624 508 385 726 580 631 719 728 713 58 715 => the sum is 10991 rather than 10990
Problem in column 26: 745 637 447 769 718 668 711 557 602 560 680 554 448 569 414 146 246 262 107 114 178 154 143 108 258 92 80 22 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  28 709  65 148  66 598 763 715 769  39 673 106 765  56 723  53 599 770 731  86 674 262 116 125 740 220 110 281
 747 130  22  48 642 269  12 695 703 136 692 146 688 122 756 259  18 727 712 138 229 152  30 637 702 340 497 741
 675 609 413  77 654 480 129 584 186 563 707  88 690  87  99 100 704 611 540  55 583  36   8 625 589 408 652  38
 635 754  41   1  16 605   3 604 567  75   2  73 649 596 141 210 657 646 502 607 606  98 184 705 557 322 601 533
 714 619 197 191  11 632 243 257 630  89 638 610 768 255 167 277 128 751 735 104 624 247 476 349 437 198 432 211
 685 742  84  67  31  20 225 663 163  40 617  68 659  79 137 296 549 633 697 597 485 108 689 541 561 178 726 650
 736 631  80 173 681 189 434 706  63  35 558 571 748 641 241 233 711 469 700 315 542  51  85 450 113 140 550 144
 620 380 264 574 120 519  81   6  23  58 465 581 595 548 669  78 672 578 505 643 438  91 282 658 464 301 602 175
 758 612 111 194 486 580 388 585 214 444 543 634 531  74 174  60 667 155 459 433 527 209 274 522 716 101 512  27
 412 503 236 418 529 378  76 482  44 143 547 280 495 358 181 377 409 586 683 421 636 386 330 491 565 166 369 489
 618 562 254 471 428 588 245 488 590 397  42 506 582 553  59  13 530 710 392 552 435  24 313 350 147  47 539 555
 441 474 410 436 297 359 238 515 371 528 272 424 479 518 320 370 455 399 314 343 426 327 458 490 205 384 292 445
 321 569 316 361 513 526 196 381 524 500 566 494 157 466 448 383 362 309 537 498 379 204 342 395 416  57 318 452
 391 591 302 484 285 431 463 328 457 509 235 415 331 234 419 420 325 393 439 357 514 249 525 411 311 400 404 367
 365 355 248 334 376 456 427 336 449 504 454 534 405 354 647 374 373 239 308 487 351 560 261 478 417 258 333 307
 335 341 305 251 679 453 442 403 451 372 440 288 394 224 375 517 323 263 777 212 295 593 481 294 473 425 246 338
 265 284 510 390 252 304 544 511 389 364 278 345 240 346 661 398 501 298 208 260 401 467 472 749 275 629 289 360
 429 447 745 256 310 279 470 573 221 623 273 223 344 183 559 608 366 671 493 237 287 551 475 250 299 492 161 165
 347 300 668 203 570 784 554 353 508 230 276 356 222 118 368 407 319 267 461 324 283 532 460 232  96 761 721 270
 123 293 645 684 337 213 520 266 244 516 312 271 291 628 639 496 317 114  92 778 352 572 477  71 195 614 286 644
  83 218 696 713 253 149 499 109 219 199 179 145  82 670 718 680 226 242 348 182 775 656 326 760 396 771  34 662
 169 268 443 655 651 164 774 185 767 406 200 159 170 153 757 782 332 172 103 640 759 423 124 201 228 648 227 430
 176 158 592 521 577 215 616 190 414 626 202 576 133 627 556 783 193 187 142 290 107 773 568 192 600 523 303 150
   4  46 732 603  26 127 546 121 744 686 575 665 207 752 206 666 132 168   5 701  52 733 729 772  62 699  54 177
 615  95 483 779 154  94 660 105 339 764 231 402  14 766 422 545 188  50  17 776  43 708 693  45 743 535 160 564
 216 117 722 587 734 781 687 131 385 653 112 613 156 717  70 780 151  93   7  90  29 594 746  25 536 446 134 678
  72 162 724 677 691  69 538 119 507 738 171 719 180 126 468 462 750 387  64 725  61 720 329 135  32 306 676 382
  10  21 682 694 621 728 217 579  49 753 730 698  15 739   9 363  33 102  19 139  97 664 737  37 115 622 762 755

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00029e+07us (= 10002.9ms, 10.0029s)
Wall-clock time (full program): 1.00614e+07us (= 10061.4ms, 10.0614s)
Satisfaction error: 2
Number of search iterations: 2348
Number of local moves: 950 (including on plateau: 386)
Number of local minimum: 211 (including on plateau: 60)
Number of resets: 1
Number of restarts: 0

Problem in column 15: 723 756 99 141 167 137 241 669 174 181 59 320 448 419 647 375 661 559 368 639 718 757 556 206 422 70 468 9 => the sum is 10989 rather than 10990
Problem in column 26: 220 340 408 322 198 178 140 301 101 166 47 384 57 400 258 425 629 492 761 614 771 648 523 699 535 446 306 622 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 643 177 717  96 204  15 736 620 622  49 687 391 280 417  89 342 664 347  22 328 738 559 700  14  52  53 649 779
 289 456 707 103 148 680 400 114 671   4 777 150 153 251 178  67 296 743 632 737 633 282 727 605  75 149 745 218
 106 236  61 197 237 152 533 406 181 488 128 602 183 780 165 252 612 523 782 285 781 560 702 728 129 349  58 774
  65   5 690   2 655 185 669 164 424 130 621 634   1 692 191  13  19 570 562 711 704 638 635 639  26 317 672 356
 705 540 320 122  85 577 660 712  40 448 504 210  83 321 331  11  28 528 567 733 762 476 729 392  16  10 508 572
 558  46 585 600 313 332 607 636 385  64 608 111 105 597 163 539 363 686 624 208 506 613 327 497  42 107 443 325
 646 146 758 216 606 158  43 179 534 587 549 109 756 135  47 249 453 766 616 583 596  35 304 517 113   8 654 627
  17 565   7  51  30  39 753 230 214 546 454 723 449 535 573 537 478 684 366 610 213 662 438 316 119  50 611 720
  68 509 676 274 104 272 498  25   6 224 412 575 586 768 467 287 457 548 588 725 160 547 159 436 604 101 691 223
 404 312 520 257 489 460 168 120  59 194 494 376 389 593 442 455 369 261 784 405  77 578 778 355 381 281 326 663
  27 502 582 205 445 463 441  21 703 487 447 393 574 543 561 141 659  41 512 591  24 579 474 609 182 136 407 241
 481 151 552 432 340 439 492 333 374 490 471   9 310 338 601 421 380 379 147 464 568 416 397 422 117 522 507 437
 429 480 373 382 726 362 626 292 344 434 427 431 377 483 343 233 387 341  84 365 188 484 395 458 269 425 353 499
 514 383 420 157 486 527 306 330 360 246 731 403 479 495 461 496 354 503 551 245 172 419 410 192 143 451 408 348
 747 482 510 357 173 263 308 180 302 491 254 329 673 155 401 526 394 311 386 542 318 295 500 485 418 477 493 220
  81 209 305 557 435 227 367 240 288 396 744 238 390 734 335 190 444 536  57 219 544 346 415 688 545 440 696 324
 428  62 339 515 265 468 384 658 351 199 566 450 462 642 361 402 309 259 413 368 530 459 202 359 555 531 228 225
 370 475 234 513 681 268 235 426 430 722 294 472 275  73 521 277 226 167 399 250 290 697 388 352 569 529 174 683
 446 501 266 469 592 323 166 598 201 142  99 300 740 243 156 594 270 217 719 231 297 193 378 647 656 694 553 299
 189 614 677 693 470 260 776 648 670 291  76 124 221 242  70 732 273 516 184 769 211 314 244 154 556 595 145 276
 248  31 589 628 271 630 162  95 699 538 264 748 319 322 761 411 409 580 286  38 334 255 239 118 759 772 315 169
 131 623 283 706 176 641  80 576 229 581 100 222 161 278 212 433 682 121 258 644 571 532 293 267 629 541 307 713
 138 640 123 653 739 465 198 631 372 350 116 650 473  34 652 718  32 301 298 505 375  56 751  98 716 721  88  97
 618 657 187 414 674 256  37 518 524  82 112 667 730  63 678 714 695 423 203  66 358  92  12 771 735 599   3 102
 689 754  33 770 137 783 637 752 554 675  87 127 200 206 371 550 765 195 247  23 398  29 139  90 715 590 303 171
 466 452 232 651 133 619  60 709 698 701 755 661 750 564 724 666 126 196  48  18 336 115  44 170 345 625  54  72
 741 337 110 262 773 511 284 757 710 763 144 125 685 279 519  55 767 140  71 253 215 665 132  86 775 175 563  93
 746 645 134 708 603 615 364  20  45 668  69 760 186 207 617 679  79 108 584  74  91  94  78 525 749 742  36 764

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.3574e+06us (= 9357.4ms, 9.3574s)
Wall-clock time (full program): 9.41574e+06us (= 9415.74ms, 9.41574s)
Satisfaction error: 0
Number of search iterations: 2181
Number of local moves: 903 (including on plateau: 271)
Number of local minimum: 166 (including on plateau: 31)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  42 674  17 217 290  88 718 743 678 294 602 721 171 691  77 599   6 434 617  46 104 655 102 722 685 288 648  61
 686   5 689 195 181  62 673 697 742  75  98  76 203 761 519 650 177 355 699 213 204 664 675 715 757 147  23  49
 140 698 684 103 127  39 725 245 662  22 720 741 261 734  60 653 236  53 731   9 105 566 677 737 628  26 597  11
 622 748 703  13 244  40 108 517 595 660 523 747 137 752 636 706  30  78 298 635 134  71 704 362  14 592  56 265
  48 680 575 608  58  12 711 142 623  96 583 723  85 606 123 270 620  32  74 625 268 654 594 687 559  41 601 292
 710 588 651 183  97   7 631  15 665 679 639 589 646 449 161 621  20 278 702 614 145 632  10   4 384 281 474 115
 561 613 642   1  55 619   3 644 641  91 525 543  87 682 569 709 528 283  16  70 130   2 676 461 612 584 607  36
 538 645 576  67  28 554 564  31   8 630  21 643 128 690 557 638 669 322 114 478 383 326 560 496 422  44 504 354
 596 611 605 172 254 637 563 447 138 433 160 306 116 452 526 539 508 122  89  84 450 615 494 553 397 126 593 403
 536 505 562 179  33 312 483 626 470  92  19 663 119 513 548 339 320 155 657 463 291 488 347 239 542 467 492 530
 544 529 476 379 193 500 411 546 587 495 167 429 176 457 537 473 416 531 149 547 184 460 567  37 301 112 524 263
 421 552 486 370 214 412 590 349 399 454 518 135 225 419 348 424 353 439 512 398 425 215 616  18 273 426 515 484
 516 405 377 490 296 465 586 366 118 485 136 510 325 361 385 558 475  94 469 521 311 303 315 472 502 162 480 507
 409 437 390 341 497 400 499 489 468 280 455 428 223 556  64 456 375 453 324 394 408 376 410 332 458 237 471 360
 344 491 218 286 387 445 333 780 522 279 436 337 373 289 477 462 302 253 391 358 368 264 202 766 448 297 501 381
 417 442  69 440 783 208 372 443 441 386 166 238 511 444 346 540 535 627 367 493 251 365 378 255 430 269 438 336
 274 242 392 323 551 413 374 423 363 418 756 224 582 272 299 431 571 359 287 307 219 746 342 414 300 243 401 464
 459 340 197 549 598 259 282 330 345 393 395 420 482 415 233 221 257 688 192 352 693 446 406 350 466 573 285 364
 293  86 317 659 432 404 314 240 334 775 550 170 647 271 309 144 369 732 773 210 295 241 357  83 305 671 247 762
 252 316 329 736 755 229 153 389 331 304 640 262 498 228 164  24 168 591 668 774 634 151 230 146 343 744 231 700
 220 234 371 658 427 284 266 778 201 227 194 207 712 159 267 226 714 618 727 327 695 407 173 212 211 633 190 652
 200 222 187 784 661 232 388 235 199 570 178 318 738 191 759 672 260 555 275 683 277 356  38 338 107 541 256 770
 188 276 120 258 578 729 129 577 248 189 182 216 603 319 141 163 733 396 186  93 754 781 739 609 148 771  82 782
 106 180 133 581 772 656 143  80 205 769 165 335 435  66 708 121 740 716 681 313 768 174 139 705 111 758 109 321
 765  47 249 749 580 730 514 585 152  95 760  73 574  34  72 150 101 728 113 206 382 198 250 667 717 534 719 246
 157 185 776 545 763 750 209  81 402 701 351 380 610  25 666  59 707 520 310 604 724 156 308 509  27 175 132 158
 169  43  45 532 649 751 131 124 125 565 451  29 694 100 726  90 735  99  63 503 692 110 624  51 764 767 779 579
 777 196 154 572 487 753 117  68 328 533 600 527 629  54 713  52  65 479 506 670 696 568  57  50  79 481  35 745

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00606e+07us (= 10060.6ms, 10.0606s)
Satisfaction error: 2
Number of search iterations: 1680
Number of local moves: 677 (including on plateau: 244)
Number of local minimum: 133 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0

Problem in row 9: 596 611 605 172 254 637 563 447 138 433 160 306 116 452 526 539 508 122 89 84 450 615 494 553 397 126 593 403 => the sum is 10989 rather than 10990
Problem in row 28: 777 196 154 572 487 753 117 68 328 533 600 527 629 54 713 52 65 479 506 670 696 568 57 50 79 481 35 745 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  20  51 463 663 132  33 723 685 763 462 704 736 691  62 207  49 543 670  25 184 679 751 678  98 659  80 136  43
 298 281  60 720  28  37 192 694 592 419  31  19 721 682   9 166  64  53 680  56 642 722 676 677 742 608 410 711
 238  81 478 652  75 139 640 707 725 362 656 597 696   4  14 185  32 609  41 104 148 729 701 655 764  54 160 744
  12  88 710 111 171  47 735 646   2  15 771 389 671 644 195 159  24 529 636 739 737 626 719 183  10 650 118 653
 165 376 250 382 102 115 673 186 708 624 730 562 697 596  69 138  78  38 484   7 517 553 698 448 618 509  29 638
 254 198 615 748 457  63 580 603 745  21 407 105 526 637  40 106 121  94 625 683 117 727  50 565 674 531  44 654
 456  70 262 459 209 619 593 594 606 589 651  85 479   3 470 114 137 125 600 686 431 273 607  73 542 544 188 525
 291 134 191 612 109 649 561 695 312 669 550 143 614 472 500 173 237 454 577 604   6 598 485  93 374  61 257 569
  35 233  42 455 266 327 533 433 465  74 498 169 371 588 610 206 217 243 521 568 613 480 427 629 620 605 274 488
 179 163 285 621 127 503 499 590 519 473 491   1 348 190 492 366 392 469 750 399 108 394 451 501 724 474 255 226
 210 221 264 415 276 387 514 504 633 425 409 401 450 445 515 458 329 324 202 383 475 363 647 368 349 441  11 571
 523 420 282 466 350 567   8   5 453 181 468 547 426 446 325 508 417 372 385 639 219 641 161 541 447 338 345 510
 434 222 344 414 302 315 524 379 299 359 477 319 493 432 416 278 343 563 536 560 397 263 288 496 540 242 306 449
 424  52 507 513 307 400 549 390 546 460 584 391 429 471 214 253 280 388 467 403 361 365 442 436 418 439  57 444
 367 559 295 341 428 502 487 375 287  34 585 583 321 532 332 360 422 430 386 323 275 393 384 497 398 271 411 412
 318 354 675 595 511 490 346 395 268 314 326 340 482 373 223 534 413 270 333 229 381 358 272 355 578 378 545 334
 286 558 699 537 692 235 310 402 230 284 587 464 213 369 289 308 575 236 435 197 631 347 404 193 259 309 599 342
 782 364 339 212 518 336 168 260 495 661 353 380 657 405 297 634 396 769 277 265 245 313 231 290 305 248 556 234
 586 693 505 527 506 356 337 528 522 690 548 643 225 129 205 461 408 167 251 320 557 239 351 122  87 301 574 152
 684 573 602 579 476 215 294 258 452 672  84 758 331 335 162 718 216 154 252 241 244 283 279 246 228 172 706 776
 630 564 632 232 664 304 249 731 208 178 293 370 224 240 767 486 512 153 131 175 733 572 256 142 211 311 616 406
 530 717 617 112 728 267 752 200 220 218  96 357 204  86 768 749 712 738  46 753 101 199 177 489 123 182 702 147
 628 687 421 144 576 665  72 269 322 784 261 316 187 689 126 555 660 483 174 133 757 155 635 103 303 146 443 296
 759 623 481 189 437 760 292 194 176 227 100 377 158 120 700 520 627 726 423 662 741 247 150 164  68 151 601 317
 538 743 156  79 539 668 170 135 330 778 201 352 113 566 783 611 714 149  92 754  22 119  45 713  58 772 666 124
 756 780 554  77 765 535  82  18  55 130  26 300  59 762 773 552 688 328 141 196 203  83  89 703 715 781 732 107
  71 438 116  97 591 681  91  48  27 777  90 581 128 645 779 761 766 740 746 570  99 180  65 440 140 734 494  95
 516 747 145  39 648 775  16  66  30 110  13 705  76  67 709 582 667 716 774 157 551  17 622 770  36 658 755  23

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00605e+07us (= 10060.5ms, 10.0605s)
Satisfaction error: 2
Number of search iterations: 1732
Number of local moves: 676 (including on plateau: 188)
Number of local minimum: 122 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0

Problem in column 4: 663 720 652 111 382 748 459 612 455 621 415 466 414 513 341 595 537 212 527 579 232 112 144 189 79 77 97 39 => the sum is 10991 rather than 10990
Problem in column 15: 207 9 14 195 69 40 470 500 610 492 515 325 416 214 332 223 289 297 205 162 767 768 126 700 783 773 779 709 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   5  36 645  80  89 261 296 137 675 694 684 738 699 213 707 626 110  66  32 594  51 718 702  27 709 262 744 390
 111 113  65 701 566  24 753 648 730 741  95 632 688 597 691 101 109 251  56 134 186 726 685   4 637 190  13 743
 337 658  38 652 725 710 215 537  58 629  44 630 711  49 666 123 221 136  11 504 120 682 642 131 686 161 366 548
   1 636 717   6 731 638 112 728 672 712 146 579 750 558 722 100  15  81 184  84  97 673 650 211   2 162 404 619
 205  22 601  79 283  50  16 647 715 395 257 663 643 212 721  40 544 125 546  12 324 641 585 341 553 505 603 662
 316 664 271 198 646   7  17 623 569 669 562 216 639 175 713 500 138 217 631  26 153 680  10 263 591 227 571 698
 348 592 599 143 522 477  91 676 609 527 512 598 604  53 612 693 126 224 124  68 475   3 611  34 557 103 293 716
 155 625 589 147 661 381 733 206 485 372   9 460 584  78 610 602 195 509 139  60 166 573 696 197 574 568 518  98
 156 554 555 467 681 386  14 501  19 620 160 622 273  30 421 237 465 230 559 540 484 438 408 132 458 401 653 526
  76 502 494 541 581 506 564 543 539 140  35 563 450 244 470 170 152  67  62 491 473 621 515 287 640 336 454 474
 466 471 431 497 427 423  61 413 440 133 265 547 457 359 528 392 247 478 436 335  85 656 556 304 608 530  25 420
 173 468 533 410 499 398 121 490 439  69  21 532 482 402 377 496 495 422 452 472 570 613 487 240 302 403  28 596
 538 426 432 552 379 542 606 443 510  31 220 461 226 378 448 435 444 503 511 489 342 299 270 343 375  55 344 388
 582 507 430 535 165 453 334 469 368 449 567 338 399 463 363 276 361 428 424 389 445 376 318   8 358 492 346 347
 397 519 498 326 327 384 561 345 607 332 434 441 360 418 451 308 249 415 464 303 330 250 405 615 311 182 407 351
 429 488 329 331 784 417 305 437 284 572 373 383 409 447 266 476 354 312 168 364 245 149 525 442 300 200 746 455
 633 322 317 253 142 770 269 406 319 339 371 374 605 252 268 385 521 306 315 394 433 393 277 586 414 396 705 225
 459 446 208 382 201 321 782 248 333 295 617 298 314 264 310 588 416 781 297 419 380 362 294 387 356 677 370 185
 624 355 267 369 323 289 365 235 204 764 549 340 274 628 158 367 550 516 774 233 560 141 177 576 246 708 189 209
 523 290 747 575 282 777 776 128 766 260 739 292 105 279 241 243 169 400 353 765 258 178 159 391 191 328 729  46
 651 668 256 272 754  94 127 176 281 196 690 325 352 667 275 307 635 187 618 222 768 301  57 752 236 583 481  59
 600 148 719 654 194 259 228 313 219 157 577 286 202 513 183 689 203 735 130 700 483 285 114 724 320 755 309 291
 655 180  86 644  74 714 565 350 207 531 757 154 254 695  83 192 660 214 193 751 242  52 780 580 163 349 117 748
 534  71  99 734 763  72 462 232  70 456 425 118 129 704 239 578 758 720 657 278 732 102 288 649 199 761 119  41
 659 218 116  29  93 188 773 767 223  39 783  73  47 255  54 670 671 679 742 692 551 769 106 678 280 590  64 181
 210 231 775 234  42  82 486 104 517 238 412  75 107 703 172 760 706 723 756 683 737 115  88 749 229 529 479  48
 411 762  77 545  23 772 771  43  45  37 150 108 164 627 151 514 779 745 740 508 614 174  92 665 171 357 778 167
 736  18  96 634  33 595 587 145  87 593 536 144  63 727  90 122 697 520 616 480 687  20 493 674 524 179 135 759

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00603e+07us (= 10060.3ms, 10.0603s)
Satisfaction error: 2
Number of search iterations: 1698
Number of local moves: 686 (including on plateau: 293)
Number of local minimum: 112 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0

Problem in column 21: 51 186 120 97 324 153 475 166 484 473 85 570 342 445 330 245 433 380 560 258 768 483 242 732 551 737 614 687 => the sum is 10991 rather than 10990
Problem in column 26: 262 190 161 162 505 227 103 568 401 336 530 403 55 492 182 200 396 677 708 328 583 755 349 761 590 529 357 179 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 743 165  14 581 750  10 103 668 665  42 421  49 179 182 287 758 784  47 630 651 729 640  88 323 677  79 696  29
  31 474 673 477 658  11  56 648 604 650 675 384 137 126 622 746 763  35 762 624 642 223  78  73   7  96   6 709
 704 120 719 730 162 152 174 749 694 206 725 172 214 112  55 414 472 305 718 145 687 611 192 136 142 705 700  75
 614 262 697   9 114 618 153 661   8  59 543 672 181 193 564 647 297 169 684 715 635 670  83 104 615 109 207 707
 681 378 723 712 296 601  57 542 692  25 402   3  82 146 227 639 693 176 716 690  44 649 270  60 144 591 117 634
 641  37 345  92  16 141 595 558 562  36 504 663 394  89 522 710 623 311 557  77 590 653  53 178 550 702 275 516
 724  45 569 657 523 606   5 679 659  68 514 669 155 271 540 525 530 205 594 163 102  41 310 303 571  97 309 556
 577 373 563 445 518 593 442  90 588  38 229  24 160 116 506 493 637 356 586 528  34 682 316  87 499 484 568 458
 524 225 444 486 662 513 613 371 294  72 148 492 187 286 111 636 589 519 654 655 561 488  13 496  21 128 315 487
 638 536 565 415 671 678 517 507 701  93 105 510  33  86  12 482 570 437  32 494 688 443 204 183 329 398  20 643
  15 424 587 392 520 512 446 450 240 456   1 211 234 318 428 462 491 380 547 346 475 596 312 508 412 572 122 533
 509 532 388 432 243 580 408 575 490 403 480   2 327 447 546 364 400 425 435 342 610 534 301 255   4 319  84 555
 439 548 347 620 455 284 273 416 124 441 261 495 471 361 389 281 391 260 367 448 417 535 328 457 352 239 431 560
 583 460 266 481  22 476 411 465 265 515 470 521 322 268 375 368 358 505 466 343 406 599  48 324 483 463 200 527
 321 422 467 452 353 338 489 269 413 404 430 529 760 365 263 453 304 134 438 339 232 395 461 473 184 500 300 502
 407 598 454 383 254 326 501 401 210 410 390 713 359 409 341 592 177 449 451 360 354 283 479 344 386 274 436 249
 429 434 333 299 330 350 313 340 423 366 248 478 685 566 336 607 667 246 215 279 348 291 526 331 419 256 680 195
 418 278 497 334 351 337 379 307 247 469 772 233 498 761 130 277 695 576 258 228 252 295 597 306 385 276 544 290
  94 633 357 208 397 382 377 173 464 405 372 369 714 582 617 151 272 325 320 776 317 226 485 541 355 132 553 393
 387 691 314 236 427 201 175 267 420 782 646 222 717 511 666 363 298 221 293 737 220 101 608 578 231 244 335  99
 251 288 224  76 738 780 257 370 150 627 538 308 631 264 159 170 302 241 131 168 736 625 616 629 686 164 619 242
  74 280 218 362 189 213 781 185 147 676 733 238 699 751 186 158  98 237 157 118 769 759 777 332 194 721 742 196
 381 209  52 199 468 741 167 282  91 603 656 289 399 732 683 180  39 664 191 143 537 190 285 703 731 660 554 161
 259 652 197 156 376 149 552 230 235 722 253 250 644 545 574  19 198 771 154 559 202  71 773 531 734 584 539  61
  18 689 127 757 203 628 459 107 188 549  28 720 612 503 216 219 133 752  81  66  63 121 735 778 745 626 119 748
  69 217 775 138 600 602 765 567 727 426 245 212 551 632 756 139  23 768 125 113 123  64 753 698 440  67 349  46
  26 292  17 766 645  62 767  43  80 739 171 783  40 621 744  27 100 706  54 754 166 140 726 674 579 764 396 108
 433 728  58  95  50 106 755  70 609 708  30 779 605 747 135 110  85 770 374 129  51  65 573 585 115 740 774 711

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00598e+07us (= 10059.8ms, 10.0598s)
Satisfaction error: 3
Number of search iterations: 1843
Number of local moves: 735 (including on plateau: 341)
Number of local minimum: 135 (including on plateau: 41)
Number of resets: 0
Number of restarts: 0

Problem in column 5: 750 658 162 114 296 16 523 518 662 671 520 243 455 22 353 254 330 351 397 427 738 189 468 376 203 600 645 50 => the sum is 10991 rather than 10990
Problem in column 17: 784 763 472 297 693 623 530 637 589 570 491 400 391 358 304 177 667 695 272 298 302 98 39 198 133 23 100 85 => the sum is 10989 rather than 10990
Problem in diagonal 0: 743 474 719 9 296 141 5 90 294 93 1 2 471 268 263 592 667 576 320 737 736 759 285 531 745 67 396 711 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 271 722   5  52   4 778  95 383 688 659 226 563 686  31 711 693   9 193 643 681 752  43 707 192  97 694 204 208
  22  26 758 138 736  39  88 713 246 742 140 655 733  11 702 638  34  57 668 761 169 168 720 113 203 740 217 753
  61  42 104 692 755  28 164 665 690  32 302 263 652 633 614 718  55  58 578 747 756 131 596 218 111   3 651 671
  77  12 689  45 601 705   1 710 757 593   7 594 656 127  30 716 242 179 670 606  76  85 560 631 313 587  48 673
  40   2 632 650  14 687 181 640 727 571 130 695 618 146 267 658 367  46 709 628  63 107 706  13 298 616 644 135
 142  41 660  81 635 602  87 450 512 634 222 574 691 119 520 700 287  93 586 639 504 133 244 182 128 600 674 250
  64 511 532 503 558 620 542 492 576 701   8 657  20 176 569 552  80 490 623 669 588  17   6 132 189 611 158 346
  71 626 513 564 592 625  16 110 475 535 123 392 610 666 172 612  62 177 678 772  67 550 582 125 129 521 149 476
  27 583  23  35 507 577 536 525 516 572  21 654 728 515 595 529 238 527 506  68 575 509 566  72 116 609 161 100
 280 391 531 543 554 508 384 477 467 598 114 534 605 607 562 425 494 295 265 186 539 214 437  25  89 545  29 292
 251 559  10 524 395 540 448  54 479 426 376 556 493 557 445 546 495 243 470 589  86 303 649 533 301 458 157  47
 115 455 491 481 469 662 221 297  60 200 487 518 420 428 433 489 454 441 567 473 472 191 565 580 205 435  15 366
 210 466 549 446 387 452 517 526 547 371 431 268 523 471 236 483 447  33 277 429 354 496 388 356 237 362 443 285
 500 459 408 449 444 397 274 460 372 434 378 309 442 402 480 258 390 342 411 290 273 351 381 423 499 406 336 422
 551 409 410 318 398 252 401 462 416 497 400 468 353 315 343 407 478 432 382 323 438 331 385 412 368 359 389 293
 486 379 461 530 464 465 581 335 393 419 399 260 439 278 325 370 349 424 440 413 310 369 300 352 645 272 345 187
 629 386 341 225 220 360 299 347 417 414 344 780 396 330 282 230 712 361 307 421 339 427 279 364 537 317 241 685
 664 281 291 261 276 270 320 311 215 363 748 436 380 332 451 340 675 648 224 201 305 329 264 312 548 304 457 784
 573 206 283 404 178 269 253 430 334 734 474 314 296 485 319 294 721 403 365 166 355 553 630 350 646 257 324 374
 708 377 275 234 194 316 672  44 769 338 703 255 249 286 337 328 357 522 233 484 159 762 235 738 327 211 661 216
 538 743 308 245 333 180 624 746 262 151 627 160 171 696 288 197 636 184 528 153 453 463 165 732 373 145 763 126
 759 109 223 212 247 137 764 502 143 101 677 207 259 198 760  70 608 749 228 150 196 510 117 729 663 505 488 679
 766 603 227 568  83 781 519 121 322 163 723 232 136 185 144 139 120 619 418  92 155 591 745 604 699 209 482 544
 714 248 289 306 175  51 744 213 183 106 739 162 105 637 615 202 641 597  37  98 148 783 358 555 715 188 599 782
 725 767 254 774 156 284 190 704 152 415 456 141 108 375 266 199 195 731  75 219 775 667 118 579 348 134 561 622
 617 777 256 229 768 231 737  84 154  56 498 174 122 584 112  90 321 765  59 585 717 642 102 514 776  79 771 170
 735 240 726 751 167  96 719 124  82  18 647 103  50 779 239  69 750 683  19  74 682 541  94 653 754 770 326  99
 394 570 741 730 680  78 613  65  36 147 590  66  49 621 173  38 773 698  24  73 684 724  91 501 676  53 697 405

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.01818e+06us (= 9018.18ms, 9.01818s)
Wall-clock time (full program): 9.07645e+06us (= 9076.45ms, 9.07645s)
Satisfaction error: 0
Number of search iterations: 1490
Number of local moves: 722 (including on plateau: 217)
Number of local minimum: 96 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 125 112 606 753 723 779 350  98  53 778 170  30 620 471 242  38 769  23 724 224 100 127 662 653 146 698 581 335
  46 420 197 587 746 744 109 175 200 777 105 182 185 604  79  49 712 177 624 482 475  57 741 680 553 700 496  88
 650 119 407 233 782 313 569 101 513 704 530 616 260 333 217  52 214  47 728 149  24 133 679 751 726 472 484 184
 696 216 756 775 716 386 222 504  45 661 139 128 766 675  94 176 599  26 784  86  37 154 610 562 319 120 676  62
 764 155 181  99 427 632 552 642  87 711 227 205 709 493 103  31 686  59 719  27  92 405 757 511 685 188 644 199
 669 232 502 269 600 439 451 122 153 293 104  83 627 771  80  97 743 134 178 179 274 557 731 710 259 729 748 256
 161  29 717 136 640 560 765 191  41 736 113 147 678 706 229 131 305 158 253 219 483 768 189 781 448 414 631 361
 306  73 283 290 488 265 515 773 193 677 244 760 250 534 246  36 237 218 213 276 324 261 629 539 665 264 655 776
 171 168 721 342 579 672 367 121 718 247  65 198 692 689 230 145 192 279 241 783  89 682 190 415 485 533 694 282
 289 278 395 271 401 652 357 203 286 565 215 202 331 568 252 106 354 536 601 226 377 673 312 590 612 380 715 243
 383 363 284 297 570 541 382 288 309 251 649 298 371 321 445 360 248 499 406 345 353 376 393 531 780 221 330 396
 194 337 201 410 556 621 356 455 141 266 317 559 456 528 316 469 453 304 183 440 385 336 346 656 589 429 323 364
 294 409 419 292 770 340 281 374 481 458 315 598 209 368 411 507 166 301 417 358 413 397 422 412 302 359 463 454
 223 322 425 478 416 486 347 318 341 245 492 355 387 609 426 370 388 501 408 369 392 329 378 551 332 450 287 365
 436 468 234 467 381 404 220 529 314 238 352 421 466 320 239 375 512 495 394 344 379 460 325 526 349 391 434 517
 623 303 163 307 328 343 295 144 403 135 558 503 338 465 366 544 348 437 285 464 603 514 443 327 432 643  35 641
 500 487 308 489 207 497 546 628 398 470 255 490 510 400 186 498 326  19  32 527 574 494 275 310  34 645 438 447
 474 390 249 524 156 280 108 480 418 462 567 518 444 399 446 571 545 549 473 509 150  40 554 270 547  55 428 384
 593 671 614 257 165 402 537 461 525  63 442 263 548  78 459 572  22 372 595 538 157  72 584 225 148 691 457 479
 639 441 433 373 231 254 674 508  16 291 195 594 611 299 585 646 637 702 542   5 430 235 566 311 114 516 132  10
 477 506 505 602 151 240  67  21 705 520 592 107 452 196 564 476 622 580 423 267  18 648   9 116 578 577 258 713
 563 435 140 111 124 351 123 521 701 535 543 588 174  66 617 693  39 635 573 586 734 162 651  75 187 522  50 491
  84 607 737  74 173  11  60 647 540 519 654 208 550 115 727 605 634 591 523 699 582 561 143  64 575 138  93  76
 555 752  14 532 300 362 663 638 626  96 755 633   4 180 758 690  70 668  81 740 636 160  15   1 169  77  90 725
  17 687 262   6  42  54 657 228 772  58 683 695 137 273 763 666 774 688 210 759 749 745  68  95  12  48 212 630
 268 733 129 608  13 142 697 339 707  91 660 730 130 334 720 722 164 597 159 767 732 206  61  51 431   2  43 754
  28 619 659 738 272 102 664 739 596 117 424 296  82  69 613 618  20 681  71 615 761 735 172 167 236 684 204   8
 762 658 449 670  33 118  56 742 708  25 625 583   3 126 576 747 211 714 152   7 667 703  85 110 277  44 389 750

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00512e+07us (= 10051.2ms, 10.0512s)
Satisfaction error: 4
Number of search iterations: 1650
Number of local moves: 754 (including on plateau: 289)
Number of local minimum: 130 (including on plateau: 43)
Number of resets: 0
Number of restarts: 0

Problem in column 10: 778 777 704 661 711 293 736 677 247 565 251 266 458 245 238 135 470 462 63 291 520 535 519 96 58 91 117 25 => the sum is 10989 rather than 10990
Problem in column 15: 242 79 217 94 103 80 229 246 230 252 445 316 411 426 239 366 186 446 459 585 564 617 727 758 763 720 613 576 => the sum is 10989 rather than 10990
Problem in column 19: 724 624 728 784 719 178 253 213 241 601 406 183 417 408 394 285 32 473 595 542 423 573 523 81 210 159 71 152 => the sum is 10992 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 158 143 650 762 757 758 707  23 702 377  40 444  95 527 761  56 195 320 651 609 215 661 109  87 233 719 213  18
  38  42 694 769 375  68 752  30 131 132 151 723 353 678 657  24 671 675   7 753 711  41 228  85 727 716   9 750
 149 725  10 743 737 730 668 312 134 118 120 701  96 708 679  22 424 644   5 362 643 684 159  59 611  13 105 629
  82  53 166 484   6  16 717  60 724 196 205 669 225 691 576  43 216 718  11 635 739 756 481 349 617 633 250 672
 182 649 243 742  45 135 706  63 571 578  52  88 520 511 509   3 259 591   2 686 108 625 486 238 589 618 535 656
  31  77 354 699 585 187 177 200 654 673 219 540 155 601 652 204 246 682 544 472  39 568 237 304 603 627 574  86
 584 688  64 592 626 468 368 185 565 192 602 437 261 306 515 616 170 526   1 531 504  36 145  73  50 606 638 641
   8 116 579 559 577 470 710 189  62 139 318 517  75 556 745 639  99 683  55 580 581 551 142 157 648 508 186 541
 503 229 552 485 475  19 442  97 607 342 595 547 324 113 564 518  14 494 398  67 587 557 156 452 473 458 489 433
 407 546 545 507 492 505 645 303  80  65 553 459 274 322 620 282  66 590  94 534 445 476  90  72 465 462 530 561
 572 550 479 425 519  29  25 121  71 101 448 400 516  44 469 583 163 419 548 493 488 410 427 461 614 612 567 436
 570 573 496 498 392 454  27 391 385 490 395 698  17  98 438 497 321 500 631 524 293 562 463 194 352 239  15 477
 383 464  21 286 514 363 423  47 413 428 289 439 482 434 456 512 382 528 543 417 330 440 431 351 389 287 384 554
 451 537 284 455 183 399 404 357 379 367 447 414 299 480 422 323 405 435 483 412 653 278 268 338 264 387 539 327
 418 610 266 487 279 450 420 460 426 446 328 270 251 781 501 258 224 285 310 355 397 360 336 378 411 474 408 401
 380 386 467 388 563 402 316 663 443 365 371 344 529 374 269 409 506 311 394 291 292 230 305 326 449 294 457 466
 416 370 313 297 372 373 705 624 421 290 356 779 347 628 272 211 295 478 257 346 133 244 782 495 334 154 302 396
 301 403 207 430 123 227 214 697 369 340 764 339 523 703 361 345 733 288 343 314 366 429 325 720 441 319 218 148
 575 542 393 172 283 309 276 560 232 767 748 390 307 513 267 453 664 256 265 364 317 241 471 381 350 329 206 359
 262 126 765  20 180 738 248 588  78 736 734 333 634 255 217 358 704 331 549 315 337 124 667 784 341 173 212 181
 184 260 741 271 106 771 236 735 746 222 178 198 335 555 171 308 593 263 632 152 763 242 599 525 240 100 532 332
 623 298 760  35 234 586 491 432 772 687 696 281 273 221 277 659 666 115 188 153 150 780 247 636 191 122 208 209
 693 141 147 190 104  83 164 502 223 755 747 140 740 226 300 677 637 249 538 114 754 111 766 253 566 280 783 107
 605 646 721 252 776 197 348 642 119 731 112  91 604  34 110 655 759 235 692  89 202 128 619 598 129  79 681 136
 749 201 728 117 162 558 103 665 203 245 670  81 615 168  26 193 376  32 778 680  48 658 775 640 522 144 179 674
 296 722   4  57 165 254 521 676 715 199 647 137 751 275  70 689 569  28 768 130  51  74 146 714  69 777 773 713
 600 732 167 210 700 712  84 774 596 499  46 125 662 127  49 709  12 176 608  76 613 622 597 630 220 175 415  54
 770 161 174  58 660 729  93 594 169 510 160 406 726  61  37 744 621 138 695 536 231 102 533 690  92 685 582  33

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00047e+07us (= 10004.7ms, 10.0047s)
Wall-clock time (full program): 1.00555e+07us (= 10055.5ms, 10.0555s)
Satisfaction error: 2
Number of search iterations: 1739
Number of local moves: 667 (including on plateau: 303)
Number of local minimum: 132 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0

Problem in column 11: 40 151 120 205 52 219 602 318 595 553 448 395 289 447 328 371 356 764 748 734 178 696 747 112 670 647 46 160 => the sum is 10991 rather than 10990
Problem in column 13: 95 353 96 225 520 155 261 75 324 274 516 17 482 299 251 529 347 523 307 634 335 273 740 604 615 751 662 726 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 488 775 779 592  65 524 782  86  82 752  23 134 557 594 619 281  71  58 127 475 131 588 659  55  32 776 123 762
 181 769 748 738 641 143 125  88  48  68 591  92 214 654  29 272  43 157  42 515 545 747 573 113 777 595 754 728
 733 163 124 601 616 571  61 767 162 687 237 722 712 551 730 160  25 208  38 195  89 755 636  49 421 765  51 161
 168 678 205 781  96 763 159  98 693 625 630 202 629 751 207 130 135 700 151 699 129 424 709 145 771 120  83 109
 685 774 634 716 732 254  37 197  57 609 382  80 645 720 140 146 243 263 158 292 177 749 615 132 428 770 144 211
 740 341  74 656 653 136 768  47 286 549 142 391 204 688 715 216 149 620 155 723 175 772 780 233 486  78  66 147
 741 710 232 590 166 638 757  62 297 663 194 249 282 622 119 617  45 696 304 546 269 529 543 164 309 156 255 235
 186 260 737 497 107 200 280 122 154 671 335 213 324 633 681 450  56 469 558 508 743 606 583 173 695 268 225 256
 246 251 265 698 171 148 190 230 729 193 721 422 760 668 307 489 250 326 215 778 241 274 666 185 706 191 261 409
 289 490 201 566 351 773 362 314 252 331 677 247 223 231 384 649 187 650 283 604 234 170 640 487 528 328 291 248
 288 290 342 570 398 270 363 337 229 759 690 299 300 345 322 239 198 626 245 499 293 381 642 219 784 301 321 440
 217 357 189 582 183 346 375 273 359 296 724 516 330 453 354 539 264 472 285 704 305 209 783 425 684 184 259 323
 339 295 276 352 338 683 353 405 385 320 238 647 766 512 367 358 556 325 468 294 379 311 465 298 316 240 343 361
 302 442 257 372 332 380 388 266 308 503 455 554 329 471 520 460 366 376 458 370 496 401 306 317 478 464 407 212
 433 415 454 432 369 350 227 399 334 410 466 406 470 368 459 373 336 463 438 408 371 333 303 383 537 312 364 377
 476 348 434 220 344 414 411 416 400 435 310  54 492 356 449 118 493  63 540 394 495 518 436 481 374 439 613 467
 441 437 461 462 507 420 327 568 527 526  26 262 501 484 427  81 419 386 423 210 402 418 167 443 403 519 365 378
 534 429 426 165 457 445 104 541 504 267 567 277 102 474 511 180 648 141 451 172 517 431 278 448 389 572 483 477
  64 561 548 121 532 452 565 535 513 498 392 413 536 547 510 396 506  52  28  11 599  76 397 485  34 697 417 505
 612 597 430 279 456 287 618 447  22 502 111 635 114 139 643  36 727 521 500  18 387 355  50 562 347 525 412 658
 603 538 555 318 614 117 491  15 494 530 586 393 196   2 444  72 714 544 479 137  67 509 103 598  40 608 664 559
 531 482 578  90 631 569   6 652 639 178  53 587 646  17   3 575 564 152 707 138 542 404  31 574 153 199 584 705
 108  87 600 258 621 607 473 577 550 253 395 390  73  77  10 761 563 579 514 581 736 218 133 553 349 275 605  44
 596  20 674 101   8 100 660 744 703   9 284 188 446 228 522 764 742 580 662 106  93 206 176 680 360 560  27 750
 150 126 717  39  13 610  70 725 602  12 611 679 340 182  75 552 731 174 589 667 735 242  60 623 224  59 711 672
 734 128  19 105 689 632 644 676 271 236 313 702 480  91 115 669 670 624 701 192 627  16  30 718   5  95 739  69
  84   1   7   4 315 112 719 746 682  14 593 713  97  33 673 651 628  79 726 533 576 169 110 753 319 203 758 692
  21 226  24  85 585  46 675 657 708  94 244 523 222  99 655 756 661 686 745 221 637 179 116 694  41 691 665  35

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 3
Number of search iterations: 1765
Number of local moves: 778 (including on plateau: 328)
Number of local minimum: 136 (including on plateau: 49)
Number of resets: 0
Number of restarts: 0

Problem in row 24: 596 20 674 101 8 100 660 744 703 9 284 188 446 228 522 764 742 580 662 106 93 206 176 680 360 560 27 750 => the sum is 10989 rather than 10990
Problem in row 28: 21 226 24 85 585 46 675 657 708 94 244 523 222 99 655 756 661 686 745 221 637 179 116 694 41 691 665 35 => the sum is 10991 rather than 10990
Problem in diagonal 0: 488 769 124 781 732 136 757 122 729 331 690 516 766 471 459 118 419 141 28 18 67 404 133 680 224 95 758 35 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 780 738 768 511 618 774 661 140  72 201  90 599 139 128  92 684 776  15  76  58 138 685 624 129 779 424 184 107
 593 403 670 667 782 710  55  85 775 468  30 428  36  25 149 529 203  81  82  24 147 726 582  33 639 767 764 537
 603 432 784 759 113 766  83  50 662 565  61 707  71 209 183 112 720 130  49  48  44 635 632  73 637 741 631 490
 170 297 383 598 422 678 167 119 758 421 532 442  39 216  79 694 762  38 174 294  45 648 558 734 769 721 100 132
 696 583 460 772 783 609 742 409  60 660 108 571 196 391 154 134 133 193 226 205 236 751 737 162 122 245 103 549
 109 755 425 704 773 389  77 110 250 700 215 723 270 111  12 656 560  98 210 200 171 588 675 254 160 761 257 777
 770 693 771 528  57 669 736 202 259 722 277 169 163 243 228 756 198 161  99 249 311 754 743 105 116 185 101 725
 683 676 590 559 290 641 672 778 316 679 219 237 247 136 395 176 441 248 279 274 269 540 278 238 289 142 190 508
 239 701 382 564 273 713 218 334 255 665 709 610 137 222 168 225 480 298 627 746 213 757 207  69 282 244 328 324
 304 504 515 605 118 542 242 144 333 749 705 703 356 263 158 315 326 271 341 256 296 621 524 284 349 394 411 361
 211 281 653 530 231 581 223 378 268 640 633 602 486 393 387 327 229 262 572 186 151 574 292 325 276 291 318 690
 340 499 658 364 332 438 180 414 135 295 740 253 370 397 317 305 423 309 251 638 366 477 337 452 420 388 548 344
 342 156 266 181 320 519 319 261 287 657 463 408 235 550 331 781 578 303 335 310 345 358 314 453 536 265 481 636
 323 392 380 402 427 322 381 373 406 437 375 484 400 448   1 469 401 352 470 371 404 507 220 457 379 454 416 539
 407 573 301 444 199 329 554 436 321 514 396 473  19 459 241 464 467 439 350 418 440 520 496 336 357 500  94 443
 346 390   5   4 483 260 505 516 485 286 362 426 493 543 405 384 178 475 351 363 492 283 606 623 471 348 495 412
 419 433 212 300 502 175 612 415 232 299 534 347 478 410 552  95 399 553 217 577 446 221 431 498 413 445 462 313
 566 374 127 246 628 233 434 570 506  21 376 182 449 429 615 455 264 417 398 568 461 267 123 587 435 450 501 308
 562 360 164   9 541 280 561 497 447 197 604  56 608 369 546 518  96 592 272 472 521 187 563 451 533 479 353 152
 531 365 367 517 377  91 466 594 166   6  16 538 456 458 589 491 124 523 595 330 488  54 556 617 372 551 575 177
 208 125 179  11 576 150 482 230 619 153 557  43 476 545 708 555 646 509 643 706  53 234 494 474 510 544 302 258
 306 148 285 512  51 385 642 547 649   3 586  86 733 732 620 252 240 625 613 682 585  88  65 686  23 157 630  59
  78 165 104 120  67   2 525 489 522  46 654 430 629 622 569  35 647 650 567 584 729  14  80 188 698 659 652 465
  28 354 214  66  34 141 579 644 616 535  64  32 688 695 724 106 655 716 339 664 760  22  68  63 634 600 674 275
 131 288 692 601 526 146 611 731  42 191 697 580 614 527 752  29 645 663 680  10 677  20 224 591  41  37  52 192
 668  87  70  18 114 102  31 714 712 126 343 487 728 765 748 735 195 715 718 745 699 145   8 730   7  84 307 189
  74  75 227 194 687 173  26 121 744 386 597  62 763 691 596  27  89 747 717 719 750 159  40 651 626  17 359 673
 503 143 338 204 666 172 206 689  93 368  47 312 711  13 671 681 115 607 739 293 753 155 513 727 117  97 702 355

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.40624e+06us (= 6406.24ms, 6.40624s)
Wall-clock time (full program): 6.46567e+06us (= 6465.67ms, 6.46567s)
Satisfaction error: 0
Number of search iterations: 949
Number of local moves: 488 (including on plateau: 114)
Number of local minimum: 66 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 777 108 750 745 477 223 145 172 465 418 130  90 673  37  53  25 115 193 783 657 435 489 238 687 781 111 438 775
  41 715 102 639 440 110 121 585 757 705 588  61 177  63  58  21 112 164 776 391 518 152 622 742 728  49 780 773
  24 162  85 758 763 748 106 627 774 747 433  74 623 104 103  72 136  39 131 651 479 201 772 769 692 755  35 127
  86  88 625 779 284 782  47 233 197 701  83 149 632 140 109 258  38 495 448 571 491 612 752 645 778  54 146 767
  48  97 530 395 726 408 784 123 501 598 210 244 731 165 134 119  66 712 642 178 765 631 153 556 702 213 417 142
 124 219 587 542 558 738 228 421 730 355 135 158 611 139 224 253 114 250  44 512 659 170 669 754 694  98 680 324
 144 218 199 670 552 167 711 159 544 762 298  89 591 155 137 292 194 604 118 749 699 716 353 554 741 202 160 211
 709 311 208 325 498 718 220 690 546 727  92 293 168 251 240 226 245 610 225 720 426 538 713 393 185 321 308  84
 212 318 303 563 265 231 242 722 276 375 147 505 698 461 207 330 345 655  67 291 729 553 450 770 169 278 516 312
 183 264 771 254 301 523 279 236 128 490 336 138 744 200 299 256 372 500 339 756 596 644 630 688 182 385 274 222
 283 753 496 740 358 186 176 243 286 481 354 365 351 368 198 259 227 340 737 447 723 704 181 281 195 248 647 363
 446 192 350 386 263 262 255 734 100 462 294 561 282 268 473 297 743 617 401 406 524 595 309 310 216 235 636 373
 316 379 390 275 334 302 326 671 751 260 364 189 190 337 482 457 432 766 285 369 572 480 343 352 241 347 442 338
 431 381 315 289 319 413 550 229 346 626 348 288 527 335 515 471 508 328 332 329 378 314 307 296 445 533 443 394
 287 507 584 414 434 400 317 387 239 396 525 506 436 377 456 383 407 427 422 484  80 464 416  22 333 487 478 322
 341 342 423 362 203 349 472 327 486 247 320 392 398 468 290 488 660 280 557 357  68 520 504 376 399 404 502 455
 380 578 371 411  75 360 374 549 521 323 492 522 564 356 439 509 476 331 503 415  56 234 453  32 370 444 463 389
 467 470 608 409  12 397 429 469  30 656  73 384 430 559 437 410 269  18 499 230 405 272 566 173 565 493 675 586
 452 562 424 249 129 628 640 535 597 141 531 271 581 402 603 526 359 191  23  82 273 454 582 428 156 382 184 605
 570 460 419 420 126 157 539 449  77  71 517 510   4 681 592 620 537 607 451 606  70  95 133 215 619 600 180 665
 634 466 599 483 166 613 474  76  34 101  60 532  51 676 494 529 700 214 534 175  28 221 132 528 684 541 602 643
 736 536 593 205 649 120   1 514 589  96 703 425 441 569 547 551 609  93 633 113 366   2  79 513  31 485 154 637
 412 555 313 295 724 143 667  46  42 117 594 735 511 568 653 519 672 304 560  94 388 300   6  91 187 697 733  64
 567 545  50  16 252 618 650 125 590 151 543 682  33 666 344 575 739  17 664  40 266  65 635 475 583 725 267 107
 686  43 624  15 661 615 261 174 652 573 764 746  20 641 760 689  11 717   7 206 217 679  13 105  19  57 459 576
 540 658   5  36  45 122 614 579 721  87 638 674 148 707 616 548 732 361 662 196 270  55 306 179  81 695  52 663
 691 367 116 305 683 648 677 237   3 163 708 646 204 629 768 601 714 580  78 719 277 209  99  29  26 497 257  59
 403 696 150  10 693   9 685 678   8 161 710 761 171 668 759 706 458 577  69 246 232 621 574  27 188 654  62  14

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00595e+07us (= 10059.5ms, 10.0595s)
Satisfaction error: 2
Number of search iterations: 1830
Number of local moves: 790 (including on plateau: 232)
Number of local minimum: 143 (including on plateau: 32)
Number of resets: 1
Number of restarts: 0

Problem in row 7: 144 218 199 670 552 167 711 159 544 762 298 89 591 155 137 292 194 604 118 749 699 716 353 554 741 202 160 211 => the sum is 10989 rather than 10990
Problem in row 18: 467 470 608 409 12 397 429 469 30 656 73 384 430 559 437 410 269 18 499 230 405 272 566 173 565 493 675 586 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 782 609 777 750 658  76 783 723 753  77  95  80  23 146  42 516 229 578 212 150 740  35  32  62 683 104 767 508
  36 575 131  73 542 720 730 157 569 145  94 111 200 123 235 597 688 600 571 237 654  39 646 666 703 451 417 280
  30 620 588 645 748  28 759 749 249 640 119 182  84  56  38 625 784 632 761 505 139 138  43  53 691 535 499  50
 133 624  78 774 716 726 495 493 593 637  61 652  40  65  92 292 616 604 762 127 126 345  67  44 771 626 118 313
 159 680 147 134 247 217 153 107 776 775 151 480  74 527 755 647 706 711 779 342 384 106 178 316 528 641 177  93
 210 487 105  66 635 717 545 601 120 555 121 692 113  45 117 636 675 642 128 179 751 243 772 122 649 757 165 142
 124 577  31 173 612 355 579 553 450 773 188 236 267 266 155 718 689 602 219 193 206 375 140  99 697 725 781 207
 295 780 164 132 719 197 319 765 536 672 168 763 254 135 136 583 231 756 196  91 766 225 112 279 617 704 205 190
 166 172 360 262 543  83 722 293 769 589 137 687 490 289 253 673 366 554 241 768 170  97 315 294 407 705 216 369
 286 770 195 101 410 307 215 610 506 418 301 743 230 270 260 690 251 476 744 186 234 322 167 278 712 778 220 309
 513 308 246 281 507 233 298 729 221 566 709 310 437 311 256 350 570 413 264 434 694 483 317 115 558 382 218 268
 425 354 351 283 547 185 201 568 735 584 343 582 560 378 259 352 255 377 194 333 338 357 438 362 429 424 334 442
 327 257 373 363 422 747 400 367 176 287 296 321 599 284 232 484 347 580 228 431 376 404 754 359 708 223 341 304
 529 401 456 548 381 467 512 383 277 452 272 405 331 412 291 482 330 299 432 370 222 428 475 314 348 336 441 396
 453 380 409  58 504 447 523 288 473 337 459 372 448 227 440 192 399 454 550 240 458 443  21 585 423 479 361 567
 340 371 226 538 386 551 394 320 406 510 346 387 525 414 374 326 433 519 492 358 238 489 445 300 209 302 398 393
 533 335 471 318 282  69 465 470 539 392 488 472  13 421 494 520 420 273 486 365 395 491 605 402 189 163 534 385
 532 274 461 546 303 364 485 349 162 462 655 455 332 469 598 659 426   2 474 526 518  27 436 603 100 208  86 478
 590 144 460 552 379 397 430   4 416 328 521 411 344 449 650  98 573 199  18 511 576 540 446 541 265  47 587 514
 661 160 607 557 245 618  96  10  20 408 615  12 517 564 592 198 329 339 630  90 403 594 477 741 263 502 728  14
 468  57 497 614 306 537  81  17 158 180 611   6 638 574 660 224 586  52 595 572 581 500 435 261 213 503 388 676
 698  79 530 444  88 559 415 297 183 509 562 481 608 591 619  71 524  33 439  24 522 141 457 724  26  75 606 685
 682  72 544 684 214  16 156 269 390  70 681 549 674 622 667 116  49 312 727 677 501 596  11 739  15 242  87 628
 648  37 734   8 202 668 565 143 290  63 613 252 671 653 700 323 109 169 275 663   7 760 644   9 103 204 732 745
 627 463 623  29  60 556 174  85 250  68 643 464 733 563 639 285 191 184 152 631 466 633 731 621 108 305  55 651
   5 498 129 737 181  22 125 699 664 271 531 161 419 742 707  41   1 175 171 662  54 764 752 670 239 211 657 702
 713 515 561 634  64 427 324 665 258  19 714 356 656 715  34  48 154 325 148 629  82 669 353 738 149 248 114 678
  25 391 736 686  89 701  46 276  51 203 496 368 710 679 695 244  59 130 102 696 389 746 721 693 187 110 758   3

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00589e+07us (= 10058.9ms, 10.0589s)
Satisfaction error: 2
Number of search iterations: 2416
Number of local moves: 969 (including on plateau: 520)
Number of local minimum: 186 (including on plateau: 58)
Number of resets: 0
Number of restarts: 0

Problem in row 10: 286 770 195 101 410 307 215 610 506 418 301 743 230 270 260 690 251 476 744 186 234 322 167 278 712 778 220 309 => the sum is 10989 rather than 10990
Problem in row 11: 513 308 246 281 507 233 298 729 221 566 709 310 437 311 256 350 570 413 264 434 694 483 317 115 558 382 218 268 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 352  37 732 313 673 686 174  14 746 697   9 112 358 621 319 723 709 747 177  43 226 774  10  46  82 736 720 154
  23 775   1 128 702 392  48  49 674 110 183 161 116 724 129 693 682 663 213  41 744 669  55  45 773 694 765 738
  86  58 445 246 405 617  56 103 771 766   4 163 310 625 193 591 687 683 756  40 769 199  90 638 718   5 225 741
  83 215 603 487 706 662  98  51 688 171 555  65 124 593 141  93 589 767  24 203 527 751 119 579  12 678 705 701
 520 121 504  21 277 712 145 344 761 689 146  32  81  72  75 698 645 664 242 672 762 711  20 196 606 652  36 586
 684 541 608  28 602   3 158  84 415  63 563  57 195 646  19 768 185 623  18 633 635 636 217  76 654 648 670 561
 609  73 477 194 615 644 151 102 550 650 585 524 273 500 140 498  26 535  44 488 493  33 233 122 624 634 505 668
 517 506 588  17 338 618 191 315 556  70 503  47  52 531  71 656 600  66 132 628 482 554 236 525 558 398 522 713
 567 581 476  15 412 676 659 574   7 256 188 421 166 373 192 657 542 408 258  27 565 537  60 425 472 590 439 447
 614   2 424 538   8 478 584 626 551 160 456   6 137 494 491 592 516 267  87 301 553 468 281 578 437 455 448 438
 450 467 607 548 395 131 471 484 481 125 363 515 423 240 486 489 428  64 492 431 480 406 320  25 382 384 499 404
 460 394 514 496 350 511 533 570 566 465 182 379 222  79 562 354 157 247 107 510 446 411 126 530 375 536 539 369
 400 451 366 501 322 519 316 513 324 523 426 521  89 436 466 464 117 418 208 123 475 546 304 170 485 547 470 490
 534 540 518 435 330 444 393 272 462 326 417 372 380 457 360 376 420 388 399 419 312 507 271 297 377 364 250 370
 495 387 401 497 386 257 429 348 378 362 383 443 391 430 441 345 355 333 529 440 409 254 474 402 385 479 198 359
 703 458 339 295 396 413 300 202 290 209 337 341 452 473 361 381 459 243 764 346 365 296 552 353 784 293 325 260
 414 410 307 232 329 270 453 598 342 318 582 286 681 708 367 390 347 317 371 303 210 314 559 604 268 327 389 294
 335 229 323 241 309 340 679 292 349 311 263 305 783 596 231 218 282 716 557 407 328 449 622 463 302 279 180 601
 509 276 288 230 691 204 331 207 190 752 336 201 728 221 717 357 651 374 543 416 397 108 660 427 266 298 261 351
 289 508 291 610 629 403 249 169 605 245 356 587 643 334 306 368 278 564 577 710 275 187 560 265 214 287 308 173
 211 719 152 433 235  92 212 631 197 733 147 750 594 205 722 224 611 299 575 144 776 155 630 262 253 186 757  85
 223 269 244 759 532 280 780 148 251 653 237 735 432 219 239 228 255 285 667 512 252 778 740 454 216 100 238 264
 109 595 150 760 639 758 599 748  99 220 274 730 343 422 685 159 469 259 105 677 142 149 528 692 127 283 165 104
 106 179 189 612 321  69 640 661  54 749 737 665 580 743 649 234 206 113 779 138 164  97 675 442 568 200 284 136
 699 753 176 434  38  53 690 715  88 637 671 572 726  39 739 153 461 545 576 118  11 172 571 156 781  94 248  74
 101 597 754 647 175 111 227 707  62  61 666 544 483  22 704  29 167  91 549 734 115 619 620 770  50  13 627 745
 168 772 181 632  95  34 782 763 502 526 725 714 573 120 569 184 130 133 658 731  35  96 777 727  59 135 139  30
 729  77 332 641  80 613 642 700  31 143 696 742 655  67 616  68  16 178 583 755  42 114 680 721 162 695  78 134

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00024e+07us (= 10002.4ms, 10.0024s)
Wall-clock time (full program): 1.00616e+07us (= 10061.6ms, 10.0616s)
Satisfaction error: 1
Number of search iterations: 1839
Number of local moves: 806 (including on plateau: 266)
Number of local minimum: 150 (including on plateau: 30)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 352 775 445 487 277 3 151 315 7 160 363 379 89 457 441 381 347 716 543 710 776 778 528 442 781 13 139 134 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 455 761 590 281 700 538 595 170  99 649 197 113 114 780  97  88  51  68  42  29 732 782 772 640 630 552  86 379
  95 709  83 736 752 119 102 669 698 437 511  55 282  46  36 473 655 263  65  33 706 711 214 428 116 491 745 760
  61 586 194 738 636 754 241 426 695 168 646  40  26 750 105 554 539 259  50 171 495 781 149 365  93 185 654 629
 165 297 644 506 623 179  38 740 191  75 776 176 212  27 161 777 619 189 127  20 723 616 160 602 764 659 153 771
  43 588 122 124 765 209 288 783 515 138 628 130 265 768 132 759 722 144 155  91 215 784 741 260 353 743 229 296
 256 233 121 596 679 445 223 652 167  81 697 388  66 169 106 692 573 239  76 147 751 525 569 727 218 618 230 746
 252 219 245 195 713 151 460 715   5 362 762  98 370 166 221 699 719 257 133 728 118 701 308 555 250 770  79 739
 110 201 371 372 536 575 123 305 177 769 578 187 775 141 287 707 685  89 234 164 614 647 206 742 337 193 348 517
 249 261 156 690 582 520  92 637 104 324 534  87 710  85 303 512 748 203 295 749  74 565 235 735 299 566 112 563
 198 294 280 342 488 366 310 756  78 467 631 232 469 304 278 731 226 268 681 316 320 609 323 360 134 599 358 572
 392 181 262 400 677 321 285 182 648 318 441 452 349 284 178 774 384 676 326 336 225 622 286 767 397 290 207 330
  32  84 340 292 454 172 274 543 393 394 312 498 328 311 254 492 204 354 574 359 617 643 375 763 470 369 385 704
 489 279 396 414 502 487 376 347 341 346 442 272 456 283 378 355 345 309 322 307 356 686 461 778 448 196 258 361
 374 240 357 267 335 530 401 449 434 481 421 289 244 420 435 547 236 447 373 504 457 367 255 319 398 557 458 395
 444 409 585 479 422 315 351 453 430 424 432 558 344 439 537  56 438 532 329   6 443 273 343 327 405 477 425 314
  25 412 524  90 499 364 466 429 518 101 333 475 462 416 485 541 190 591 217 404 594 137 513 468 484 411 478 363
 635 464 192 570 140 403 408 417 544 529 546  67 503 339 313 352 471 427 391 501 399   9 598 248 317 419 325 463
 683 476 301 514 253 108 431 465 436  73  72 407 387 482 377 100 593 440 483 494 510 162 519 220 684 516 656 148
 562 592 410 496 128 228 271 381 508 522 368 382 560 216 402 188 507 497 705 480 389 222  35 174 553 269 527 418
 266 175 548 576 135 615 531 117  54 583 338 571 556 451 433  31 581 486 380 564 450 154 509 157 493 415 490 331
 535 717 545 549 213  64 386  37 474  70 227 667 550 589 674  21  10 703 542 725 561 131 423  13 625 184 678  77
 610 126 627  34  15 302  11 500 551 675  94 633 666 577 682  80 180 526 584 612 587 224 606   8 567 158 605 150
 671 601 744 173  71 613 639  39 521 533 211 734 624 579 660 350 129 662 306 673 406  63  17 111   1 237 459 163
 626 159 600 332 277 505 779 145 608 103 208 658 242 472 747 143 293 276 680 689  44 238  53 641 664  59 702  47
 729 642 580  18 146 620 670 152 446 718  62 663 638 607 597 246 300   4 733 568  52  23 726 107   3 205 653  82
 668 665 413 264  69  24 753 115 604 291 183 712 523 621 737 334 251 694 773 390  49 210 275 139  41  14 650 528
 693  16 758 559 120 755 766 270  30 714 109 730  22 661 724 202 142 696 757 243  58  48 632 200 634 298  28 125
 672 603   2 383  60 708 720  96 721 645 231 716 247   7 651 186 199 691 657 688  45  57 687 136 611 540  12  19

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00043e+07us (= 10004.3ms, 10.0043s)
Wall-clock time (full program): 1.00628e+07us (= 10062.8ms, 10.0628s)
Satisfaction error: 2
Number of search iterations: 1696
Number of local moves: 671 (including on plateau: 196)
Number of local minimum: 133 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

Problem in column 20: 29 33 171 20 91 147 728 164 749 316 336 359 307 504 6 404 501 494 480 564 725 612 673 689 568 390 243 688 => the sum is 10991 rather than 10990
Problem in column 25: 630 116 93 764 353 218 250 337 299 134 397 470 448 398 405 484 317 684 553 493 625 567 1 664 3 41 634 611 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 507 115 767 672 663 274 766  88 537 113  93 690 106  74 734  47  75 541 728  35 151 608  81 782  98 133 731 781
 528 769 305 592  58 679 633  62  97 127 598 773  27 160 411  91 749 211 650  70 620 209 575 482 564  95 783  72
 776 784 708 682 110 680 712 145  73 443 203 778 102  83 614 103 192 609 743 108 111  56 744 662 202  67 462  38
 655 117 218 742 166 745 757  37 144 231 195 673  55 526 141 208 147 724 629 149 336 376 762 504 780 180 713  80
 671 112  66 190 696 677 752 177 162  34 469 753 131 540 725 198 289 585 150  99 153 446 771 621 459 249 702 114
 737 119 185 726 214 508 501 100 236 751 676 750  59 733 186 221 294 169 729 188 248  63 748 300 155 730 539 125
 718 157  90 772 123 553 395 345 278 196 716 632 329 617 176 306 126 765 146 268 355 328 220 727 628 245 477 302
 732 219 191 764 139 654 691 709 205 132 291 263 178 738 173 206 252 234 168 595 159 315 698 667 272 347 426 572
 599 253 210 626 383 747 493 207 703 164 740 266 269 548 761 101 129 779  65 292 183 335 657 212 295 259 478 235
 625 332 165 297 325 583 431 243 239 681 213 340 179 688 770  50 199 228 648 255 276 699 580 486 296 284 616 262
 258 370 425 529 326 535 503 281 774 419 637 197 364 527 271 246 242 265 448 593 230 267 468 342  84 407 480 502
 494 301 250 232 256 547 556 318 777 375 352 693 244 317 287 312 574 519 327 247 372 656 356 378 275 339 432 204
 251 314 354 439 433 523 571 337 175 756 331 413 427 460 308 441 313 538 362 451 351 447 288 437 322 238 449 261
 324 298 241 349 768 283 775 417 404 365 184 311 470 394 357 406 321 409 405 511 304 344 371 319 423 436 402 399
 438 455 279 270 428 457 257 307 309 420 416 463 393 561 323 515 551 382 338 360 367 384 369 400 286 414 353 495
 330 374 481 264 333   7 343 465 341 456 506 350 485 216 505 392 549 373 422 490 424 161 461 479 558 454 237 534
 389 524 380 509 513 148 215 430 435 401 471 396 600 187 550 453  30 476 498 386  36 200 444 421 604 381 358 555
 224 533 512 627 397 194 299 415 577 334 473 418 379  85 458 607 410  15 554 388 584 366 492  89 543 474 158 385
 466 694 412 442 500 222 124 568 597  57 450 359 601  43 670 398 483 452 390 408 499  23 391  51 445 464 140 641
  94 510 587  77 525 181 303 557  44 489  96 517 472 130  92 643 581 565 530   1 652 348 579 622 174 619 368 634
 105 646 623 624 666 229  48 644 429 387 122 440 590 154  61 659 661  42 497 560  25 310 346 491 576 233 226 596
  76 578 606  68 484  46 316 544 285 487 361  78 514 649 521 475 618  41 612 589 594  11 254 143 570 645 552 273
 227 705 569  14 545 723 277 639 566 668  87  13 562 532   9 602 516 638 636 522 559 603  10 282  71 280 104  31
 138 546   5 136  18 128  19 695 610 647 586  22 722 172 467 542 630 605  53 697 651 582 163 189 739 488  33 707
 167 520 675 107 496  54 171 613 518 223 142   4 721 134 567 759 588  39 116 678 642 741  45 615   2 686 293 674
 240 573 290  49 669  40  52 182  26 536 658 152 591 687  86 563 685 531   3 631 701 711  17  64 684 377 434 758
 201  12 692 109 635 403   6 755 689 363 260 217 714 320 611 763 717 118   8 700 653 665  79 193 225 746  16 120
  20  60 704  82 121 170  24 710 760 735 664  29 706 715 156 683  69 137 135 719 754 736  21  32 660 720  28 640

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00605e+07us (= 10060.5ms, 10.0605s)
Satisfaction error: 2
Number of search iterations: 1811
Number of local moves: 769 (including on plateau: 306)
Number of local minimum: 144 (including on plateau: 56)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 671 112 66 190 696 677 752 177 162 34 469 753 131 540 725 198 289 585 150 99 153 446 771 621 459 249 702 114 => the sum is 10991 rather than 10990
Problem in row 9: 599 253 210 626 383 747 493 207 703 164 740 266 269 548 761 101 129 779 65 292 183 335 657 212 295 259 478 235 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   7 677  10  62 679 664  44 590 620  13 220  61 640 252 629 663 262  90 160 743  35 626 764 715 722 185 115 742
 157 552  66 110   9 569 708 120 656 691 377  74  20 186  41 776 328 182 643 717 696 660 700  43 750  18 431 710
 161 600  52 122  14 665  60 616 571 397 229 634 754 580 441 720  95 672 235 736   3 287 658  28 731  15 188 726
 125 744 702 172 378 698  40 738 598 558 642 106 669 363 100  19  12  16 226 225 198 370 699 680 618 169 574 551
 114 500 676 666 739 548  30 627  98  39  82 601 311 575   6 645 124  11 655 184 463  47 657   4 625 641 563 759
 233 692 581 531 503 241 607 636 647 325 202 139  17 259 253 567 605 648  72 292 630 163  33 690 662  99 522 141
 128 314 654 468 599 545   5 609 608 331  65 573 582 112   8 649 557 208 135 173 587   1 603 493 617 505 149 712
 303 578 565 544 572 688 447  58 506 116 144  53 561  57 199 507 673  86  83 595 538 119 417 442 661 201 537 740
 496 245 728 541 570 495 553 492  25 410  68 152 681 123 345 467 497 586 519  23 438 217 547 594 481  31 102 564
 341 589 456 555 461 521   2 432 577 298 111 371 335 255 203 613 454  79 606 524 382  49 611 444 487 494  54 686
 533  46 560 619 322 369 191 388 471 207 477 535 304 206 295 513 403 168 479 485 550 272 130 576 483 466 482 460
 473 383 478 610 624 525 489 458 546  85 313 154 352 409 192 527 491 469 340 465 407 254 351 333 490 376  84 312
 433 498 534 391 435 384 434 281 415 257  42 395 543 399 421 556 475 459  76 443 315 364 682 150 359 530 268 451
 472 446 579 413 436 517 484 396 474 368 232 445 393 365 330 280 361  27 457 394 536 329 344 247 516 476 306 367
 406 336 612 414 425 510 428 381 449 282 300 354 308  21 113 512 526 540 416 286 539 455 430 389 319 464 349 426
 274 266 297 348 773 502 277 166 284 751 264 593 412 398 583 748 323 310 380 271 299 411 366 404 339 250 408 293
 288 334 518 350 392 153 305 379 291 638 614 301 307 418 588 243 779 270 183 429 265 711 420 290 127 269 689 439
 267 402 256 318 782 372 337 373 423 357 283 279 515 197 486 375 356 772 179 604 422 437 234 316 223 753 326 346
 532 758 205 209 193 216 327 320 275 755 705 405 140 745 424 332 156 285 784 694 321 542 239 374 353 129 296 276
 687 622 249 278 180  87 735 440 766 632 504 302 362 597 462 309 218 501 289 777 224 499 260 155 324 190 194 147
 670 176 263 261 200 143 678 707 294 448 659 175 258 693 733 240 170 596 774 189 167 358 109 400  64 719 713 133
 338 227 221  88 214 343 246 251 360 317 747 729 644 760 635  92  91 419 248 342 219 737 238 781 145 709 780  69
 137 107 162 215 187 778 653 210  24 231 585 230 775 631 684 165 566 765 768 602 195 554 347  70  50 528 549 222
 741 126  80 727 757  81 592 387 104 520 718 509 178 514 385 101 749 770 146  93 273 637 103 242 148 701 450 158
 724 453 118 668 177  73 639 244  22 584 706 783 136 171 704 117  94 652 488 508 732 386 174  77 591 529 236 204
 685 212 121 151 237  29 721 142  75 723 633 615  67 470 355  78 734 683 213  48 761 752  97 714  34 756 746 138
 697  51 480 390  36 211 730  38 108 523 401 771  55 559 650 105 695 164 674  89 763 132 646 716  45 628 452 181
 568  56 767 769  96  63 228 511 703 134 667 651 671 675 725  71 196 562 762  59  32 621 131 623  26 159 427  37

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.16263e+06us (= 7162.63ms, 7.16263s)
Wall-clock time (full program): 7.22145e+06us (= 7221.45ms, 7.22145s)
Satisfaction error: 0
Number of search iterations: 1064
Number of local moves: 565 (including on plateau: 154)
Number of local minimum: 51 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 469 763  88  40  96 158 564 499  71  57 133 751 162 153  33 105 722 697 495 550 155  56 782 738 742 682 775 454
 689 480 227  44 103 601 525 758  87 668  83 555 106 737  92 769  46 755  30 764  14 713 108 107 743 439  53 694
 169 783 747 552 759 151 585 690  42 168  17 432  85 745 187 692  75  99  67 676 154 120 109 377 659 771 779 300
  55 297 726 761 150 115 733 729  61 184  47 739 605 277 229 784  50 100  73 727  70 232 625 364 766 675 214 602
 159 113 622 686 780 122 701 556 237 533  84 626 434 285 161 753  34  69 210 653 102 136 500 662 148 691 160 773
 630 215 142 669 183 705 774 613 104 182 208 224 752 233 223 128  82 781 140 609 119 117 777 526  98 665 384 707
 179 263 241 568 149  65 606 629 282 199  79 746 680 144 147 254 772 351 192 537 188 768 703  62 170 778 510 728
 176 363 132 118 198 273 677 744 770 130 290 321 719 221 110 711 225 195 264 724 776 308 704  93 311 598 324 515
 261 337 708 695 172 193 637 587 468 767 247 684 721 145 402 134 291 230 255 440 139 101 641 283 262 583 249 358
 222 197 246 563 209 236 318 516 543 612 270 275 756 623 336 185 218 141 535 633 474 295 220 504 427 530 378 528
 494 235 276 688 296 253 271 418 349 196 472 356 478 501 642 203 459 438 353 456 135 212 274 730 309 762 293 441
 387 239 252 636 340 165 670 453 173 211 428 458 618 430 243 279 374 380 361 512 301 245 632 765 272 475 334 357
 344 256 164 635 323 345 448 614 265 400 381 251 452 366 316 437 242 514 259 457 604 268 476 443 545 396 328 461
 391 286 386 354 436 389 226 362 315 365 465 444 417 471 350 421 450 473 462 518 401 317 202 367 348 397 558 419
 492 240 488 312 294 407 326 330 403 544 529 551 449 406 405 341 562 281 307 201 248 477 420 266 503 292 493 423
 379 490 445 431 422 460 346 219 581 284 735 335 376 369 313 470 373 371 415 392 482 532 508 156 497  58 424 127
 491 408 339 112 416 549 483 200 372 463 399 360 496 216 325 485 395 557 464 388 319 267 466 368 521 213 505 413
 410 479 289 137 570 572  43 278 586 329   2 375 331 565 595 538 567 597 429  68 517 332 536 370  36 327 592 520
 522 425 486 114 411 588 524 306 484 584 442 447 560  59 481 542 310 507  48 287 620 414 299 305 359 302 435 129
 489 548 580 333 502 523  12 177 390   5 576  24  64  66 699 519 610 577 575 409 579 398 121 352 643  16 546 657
 123 412 534 382 433 338 446 383 672 527 342  37  80 582 467 640 607 748 355 178  63 718  90 404 547 157 599 126
  35 343 561 553  97 702 186 174 206 228 683 234 303 645 394 611 258 509 638 314 566  32 191 455 600 163 654 655
 616  95 678 257 559  28 322 194 631 593 649 634 189 650 589   6 541  19 741  94 619 594  31 260 679  25 573 124
 571 656 298 513 304 590  74 125 624 175 608 554 231 712 652  45 539 138 673 166 661 647 506   4  22 204 671  27
 644 651 648  13 617 451 181 190 487 540 717  39  91 596 664 591 603   8 706  23 732 574 207 578   3 385  10  41
 709 696   7 288 731 646 180  11 280 687 749  20  86 660 498  26 658 663 569 131 685 720 320 740  77  49  89  15
 615  81 628 393 715 698  60  18 750 666 734 347 238  21 723  78 167  38 674  29 531 716 426 710 627 152   9 146
 269 639  52 143 725 667  72 217 757 693 621 171 511 111 714 244 760 754 700  54 736 681 116   1  76 205  51 250

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00596e+07us (= 10059.6ms, 10.0596s)
Satisfaction error: 2
Number of search iterations: 1792
Number of local moves: 728 (including on plateau: 230)
Number of local minimum: 139 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0

Problem in column 14: 153 737 745 277 285 233 144 221 145 623 501 430 366 471 406 369 216 565 59 66 582 645 650 712 596 660 21 111 => the sum is 10989 rather than 10990
Problem in column 16: 105 769 692 784 753 128 254 711 134 185 203 279 437 421 341 470 485 538 542 519 640 611 6 45 591 26 78 244 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 427 597 703 346  59 772 299  69 689 777  66  41 750 781 143 146  56  97 599  35 751 630 230 720  20 647 252 288
  60 698 665  71 127 726 662  77 757 716 111 560 651 562 192 723  15 148 712  25  45 695   4 688 261 684 337  18
  42 642  26 119  48 745 687 153 631 730 166 125 281 744 350 691 179 211 641 436 608 591 734 152 328  11 187 732
   5 678 704  73 158   3 602 245 236 731 246 633 208 583  29 692 182 634 669 614 713 250 705 138  17 541  43 658
 686 725  10 117  36 721 594  65 696 606  98 603  23 706 124 294 286  55 657 162 654 628 709 525  40 575  53 542
  33 621 710   7 473  21 611  62 677 500  93 613 471 502  80 661 165 632 420 521 579 390  75  94 438 589 470 482
 183 659 625 107 435 673  31 253 708 636  68  12 358 676 648 101  47 380 635 639 553  13 682 243 260 618 131 616
 615 578 407 214  28 577 534  76 610 555 476   1 205 278   8 103 285 586 666 513 306 519 410 540 492 557 123 728
   6 503 371 251  85 592 538 120  38 580 537 486 163 595 433 558 352   2 481 627 566 382 612 532 416 379 160 626
 467 448 674 234 322 569  16 177 497  34 551 418  57 238 587  78  67 605 344 507 600 573 355 629 531 351 572 489
 582 491 468 213 495 343 561 354 469 411 452 563  58 200  27 363 248 302 348 484 483 419 398 137 649 434 508 530
 440 499 461 333 389 320 401 485 506 511 544 477 414 364 465  19 412 464 494 307 493 501 316 460 456 366  79  14
 327 422 446 386 439 102 509 189 309 359 516 426 186 623 547  88 275 459 360 498 400 455 406 571 402 303 441 546
 490 590 404 378   9 622 550 264 325 447 533 409 478 462 522 295 349 510 215 475 424 326 313 450 443 383 300  24
 413 340 289 524 338 356 357 368 396 487 372 284 437 334 399 472 329 480 365 449 428 315 317 445 423 609 342 321
 293 543 258 505 415 318 488 314 397 336 442 339 552 431 247 458 296 394 210 353 539 444 403 451 392 425 370 377
 375 323 297 545 624 221 515 417 254 385 405 650 267 324 257 391 668 388 701 304 305 376 280 565 292 225 432 204
 374 262 308 570 585 345 287 667 244 240 167 421 660 567 226 776 512 733 268 197 199 198 548 271 176 133 779 277
 283 387 232 362 518 514 747 535 381 161 282 235 717 393 672 249 554 145 408 311 319 272 646 604 373 175 335 180
 761 156 184 620 527 237 136 637 783 173 644 301 645 241 756 273 598 227 239 694 331 291 231 269 298 233 454  51
 191 155 263 593 653 276 181 782 154 157 209 228 453 526 754 740 758 219 224 212 775 121 330 242 479 347 780 188
 274 135 341 700 742 178 760 722 174 104 429 265 619 229 332 206 664 474  52 290 196 711 218 640 193 395 724 223
 581 164 128 784 528 202 132 729 100 195 670 753 216 256 727 685 529 220 115 170 142 596 361 207 719 259 683 139
 203  44 190 702 767 556  89 752 130 112 714 266 675  32 279 149 749 738  49 655  87 106 113 773 504  83 699 774
 638 134 769 367 715  86 114 737 108 574 185 549 310 150 707 601 430 255 755 118 159 144 765 369 270  74 523 384
 739  61 778 671 584  50  30 536 126 217 681 151 520  64 652 564 770 764  72 607 172 105 171  95 693 735 312  70
 736  54 169 741 194 743 496 617 466 116 643 718  99  37 147  46 656 109  90 748  22 168 576  84 762 768 222 763
 766  81 110 457 697 122  63 588 129 140 690 463 517  92 680 568 559 759 201  39 141 771  82  96 663  91 679 746

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00045e+07us (= 10004.5ms, 10.0045s)
Wall-clock time (full program): 1.00629e+07us (= 10062.9ms, 10.0629s)
Satisfaction error: 2
Number of search iterations: 1661
Number of local moves: 681 (including on plateau: 203)
Number of local minimum: 99 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0

Problem in row 9: 6 503 371 251 85 592 538 120 38 580 537 486 163 595 433 558 352 2 481 627 566 382 612 532 416 379 160 626 => the sum is 10991 rather than 10990
Problem in row 15: 413 340 289 524 338 356 357 368 396 487 372 284 437 334 399 472 329 480 365 449 428 315 317 445 423 609 342 321 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 356  90  86 769 190 760 587 709 110 441 147  41 120 161  58  64 104 571 492 770 784  73 507  30 773 715 757 725
 710 771  44 753 608 774 775 287 183  26  34  59  94  45 227 530 107 123 250 124 681 763 663  39 126 648 766 780
 747 182 675 690 152  81 455 221  75 460 158  20 108 179 579 758 102 748 276 776 603 239 761 115 574 387 248 621
 565 736  78 777 174 739 734 377  24 136 155 555 164 165 716 113  61 514  57 140 746 125  83 132 781 732 750 661
 730 523  69 610 649  40 782 519  79 133 269 178 281 185 106 232 186 723  70 511 563 210 146 728 772 729 270 697
 742 765 139 211 282 550 373 214 153 138 263 581 342 240 762 337  92 176 212 194 692  67 754 671 600 637 109 694
 496 191  91 228 230 577 693 479  93 278  77 121 236 303 564 226 105 626 222 738 510 745 233 167 611 640 731 779
 562 737 500 216 184 156 653 703  33 206 259  87 283 336 484  89 405 755 327 559 375 241 181 316 439 642 593 669
 508 260 150 254 301 590 513 219 512 149  63 494 141 253 665 247 246 708 255 727 442 163 359 343 767 497 646 518
 721 208  76 285 243 582 651 394 667 393 389 305 392 171 783 275 330 321 432 295 768 162 264 304 213 592 180 594
 560 434 778 134 203 674 374 252 317 407 390 740 402 225 249 267 273 350 329 482 391 234 166 468 759 429 205 498
 461 309 277 355 409 224 448 346 333 556 437 636 414 157 215 546 764 288 423 382 531 261 417 334 271 509 231 456
 680 307 340 401 229 622 580 266 143 265 477 411 413 481 383 360 326 256 454 290 426 400 376 323 396 472 440 473
 207 344 430 348 395 217 403 345 428 436 358 300 386 631 325 332 488 398 289 308 533 505 585 499 324 444 279 453
 357 274 245 420 399 349 314 173 662 435 476 445 298 424 365 272 415 406 385  32 320 617 528 591 578 529 369 312
 310 280 557 501 419  29 502 527 292 331 322 467 362 486 433 341 470 318 335 493 338 258 506 551 438 421 388 315
 408 306 554 521 536 361  48 446 354 119 616 381 293 491 463 416 379 353 601 370 659 464 294 380 425 313 384  55
 351 525 597 490 465 516 262 148 404 566 367 192 553 368 103 480 537 542 504 450 237 220 319 209 517 364 469 235
 296  99 515 451  97 539 311 583 741 101   2 589 630 371 175 678 613 544 193 466 177 540 572 522  36 363 487 299
  18 545 561 524 495 291 244  80 378  38 447 620 679 427 596 586 422 199 452 475  54 598 599 535 170 172 534 251
 302 552 643 117 366 286 297 201 520 548 567 159 673 569  28 689 543 168 547 588 328 570  17 634 200 196 485 197
 238 257 609 169 718 526  12 666 624 686 595  53 575 615 568  56 698  66 623  49 198   8 614 541 443 128 641  14
 223 711 668 638 478   3  96 647 688 632 619 618 573 627 112 462 576  71 483  74 130 538   7 474  42 114 664  22
 129 720 645  10  98 458 352 717 658 696 650 339 612 706  47 604 584 204 751 131 135 733 558   6  46  84 122 195
  72  65 660  52 687 412 268  85 471 644 752 457 652 532 633 685 691 724 682 602  50 242 503  37   1 144  60 127
  95 670 347 629 606 397  21 705 714 683 657 756  13 431 449 160 284 719  15 549 151 607 137 701 418   5  62   9
 111  11  51 410 655  19 100 656 699 744 749 702 676 704 189 459 489  31 654 372 145 735 639 628 188  16   4 154
  35 118 605  27 722 218 142  25 635 743 695 684 625 707 713 726 700  88 677  43  23 672 202 712  82  68 116 187

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00601e+07us (= 10060.1ms, 10.0601s)
Satisfaction error: 1
Number of search iterations: 1941
Number of local moves: 812 (including on plateau: 209)
Number of local minimum: 131 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0

Problem in diagonal 1: 725 766 387 781 728 754 745 375 727 432 350 764 360 325 424 362 381 367 101 378 201 12 3 98 52 347 11 35 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 157  10  45 770  61 761 165 522  14 762 210 103 763 764 751  32  75 296 391 599 602 759 108 428 668  66 723 385
 746  19 722 471 368 490 606 742 225   4 706  15  39 682 736 274 684 654 648 115   8 754 360  97 716  18  27  64
 772 734 164 570 102 768  16 241  56  29 172   2 777 658 690  81  36 190 659 767 704 656 251  57 615 501 705  17
 646 647 703  37 160 603 309 266  58 674 689 717 404 609 642  95   7 280 699 632 250 752  59  51  22  76 760 143
 204 685  47  23 322 651 635 269  13 671  24 607 532 604 581 132 564   5 697 724 708 696 185  99 679  93 507  33
 616 561  34 549 124  74   6 152 123 680 773 289 692 569 621   3 614 636 582 475 638 728  28  73 588  88 590  84
 131 576 681 270  92 641 121 153  21 765 156 687 479 446 653 134 618 104 562 539 499 533 244 144 709 119 725 188
 630 589 620  49  31 567 258 149 203 496 253 538 571 525 506 154 555  67 595 537  12 619 242 238 631 388 735 232
 125 622 518 234 199 510 126  30 327 484 148 502 541 546 629 523 563 491 575 540 675 547  41 111 493 443 267 180
 511 557 477 584 158 444 548  43 193 335 487 492 480   9 468 529 424 664 155 633 505 435 524 455 594  63 151  72
  20 512 470 183 272 544 303  35 194 566  25 283 556 520 611 438 473 432 526 593 554 427 504 449 486 215 536 263
 596 451 422 608 173 543 553  78 224 515 441 344 469 459 285 521 373 534 465 394 655 350 127 378 147 413 293 179
 353 527 483 416 456 452 398 464 406 342 297 460 489 403 482 376 453 347 542 337 436   1 481  60 352 362 429 386
 463 467 399 417  40 389 361 500 419 462 275 401 273 400 365 628 494 397 508 142 364 359 390 382 286 375 448 586
 466 349 407 516 447 445 421 410 423 402 457 341 300 357 442 294 396 319 405 340 288 370 418 246 625 331 409 366
 497 744 415 392 558 369 324 374 383 298 384 312 414 333 387 346 226 498 271 205 434 323 380 381 377 345 485 535
 198 338 336 393 574 358 583 665 379 290 306 476 363 313 355 339 440 426 308 243 282 314 330 707 325 458 252 639
 408 257 295 321 372 316 209 667 672 315 420 206 326 395 133 351 260 747 348 249 332 291 531 691 301 437 478 662
 217 278 178 311 431 304 264 281 623 730 776 248 310 702 262 245 176 758 718 356  90 292 317 503 213 580 276 551
 219 329 320 573 528 277 343 683 661 189 495 367 256 371 202 613 150 726 186 769 233 328 307 240 171 591 177 686
 268 175 231  96 741 208 228 784 731 230 695 756 237 229 227 715 284 700 354 184 601 247 517 214 223 605  85 425
 433 138 196 411 597  87 612 552 530 207 592 135 261 255  94 732 195 720 159 101 235 780 634 660 116 617 265 676
 412 221 201 550 782 117 254 657 781 181 701 279 211 218 334 714 287 509 216 169  65  91 560 669 239 670 259 643
 474  69 197 719 663 166 610 318 640 236 627 713 163  62 118 624 637 114 146 161 222  55 600 766 109 748 488 545
 212 191 737  42 738 141 745 519 644 174 200 740 140 106  11 559 137 129  71 750 626  26 774 677 461 598 192 650
 136  46 783 678 579 572 652 472 577 182 568 749  89 299  50 733 673  86  54  82 122 107 578 755  38 513 168 649
 775 778 170 162 729 110 753 450 743 666  68 128 145  77  53 220 439 113  70 167 139  98 779 771 694 565 430 698
 305 120 739 645 693  83 587 514 727 105  44 100 710  79 302 585 757  48  80 187 711  52 721 688 112 712 130 454

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 2
Number of search iterations: 1660
Number of local moves: 717 (including on plateau: 220)
Number of local minimum: 130 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

Problem in column 11: 210 706 172 689 24 773 156 253 148 487 25 441 297 275 457 384 306 420 776 495 695 592 701 627 200 568 68 44 => the sum is 10989 rather than 10990
Problem in column 28: 385 64 17 143 33 84 188 232 180 72 263 179 386 586 366 535 639 662 551 686 425 676 643 545 650 649 698 454 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   1 716 723  98  37 158 282  19 687 422  22  35 758 731 624   8 771 235 156 682 710 725 739 528 733  77  10 303
 688 242  39  23  60 103 163 124 383 663 324  83 654 259 702   3 718 420  48 737 729 647 693 601 738 705 390  51
 582 715  15  25 748 134 754 114 631   9 695  76 744 699 690 122 706 297 148 125 196 627 662  38 677  58 661  42
 600 719 692 181 115  20 387 237 219 665 638  78 451  45 625  72 670 112  91 714 678 697 569 403  13 673 555  71
 165 651 669 595 117  74 622 513  18 567 618 143 573 175 700 116 707   2 106 469 644 645   7  16 668 720 643  47
 551 655 588 617  50 429 264  27  26 620 635 222 534 432 613 568 708  43 289 101 576 494  33 266 674 626 228 121
 323 554 657 584 455 138   4  52 298 616  49 619 597  56 623 460 679 218  12 578 608  24 572 384 579 671 325 255
 236 680 543 636 581 212 596  96  29 378 558 185 640 329 580 591 334 189 530 490   6 610 507 220 401 575  85 173
 308 587 658 140 497 231  44 504   5 666 612 459 545  84 566 479 532 508 391  11 509 483 511 214 392 499 521  34
 213 489 593 546 458 176 571 453  57 275 475 547 505  70 548 586 512 166  28 556 598 468 120 202 446 565 510 257
 553  14 633 130 481 149 574 523 440 539 268 425 540 347 491 492  68 447 296 559 549 435 704 241  36 495 480  81
 139 562 544 129 419 314 541 519 515 280 349 470 272  46 336 502 374 501 486 414 409 461 563 457 309 345 467 267
 412 377 484 271 615 277 493 386 538 427 350 399 454 413 365 506 441 448 466 416 462 346 339 430  67  40 400 367
 421 331 464 359 473 353 154 542 514 337 503 342 283 450 428 526 463 292 372 472 361 358 344 370 417 338 478 245
 564 496 180 389 445 341 456 444 685 302 281 488 380 385 396 476 402 352 240 246 415 406 356 485 288 313 410 369
 438 351 362 354 443 517 379 330 382 187 355 244 477 375 557 426 304 590 279 306 404 395 327 407 371 424 471 535
 178 197 363 360 442 452 251 326 423 262 343 694 701 605 366 253 487 247 500 437 393 248 316 529 368 436 261 552
 285 232 299 315 295 498 652 234 321 210 676 310 243 603 328 317 405 604 376 394 109 433 318 606 397 300 577 653
 730 211 227 284 312 560 144 293 286 712 340 675 398 681 142 137 320 683 533 254 188 311 388 691 335 226 287 642
 592 203 249 274 373 736 750 200 520 169 193 301 252 757 258 161 216 711 684 630 319  87 260 614 204 215 307 755
 537 238 229 239 250 761 659 698 782 105 233 217 172 602 164 167 333 752 696 322 482  94 550 205 276 411 184 632
 589  88  99 418 131 732 628 291 749 753 348 194 111 607 159 256  53 629 522 146 263 784 128 525 265 206 722 594
 408 198 305 703 721 431  63 777 270 751 174 734 177 768 145 660 104 290 273 208 182 183 474 742 147 150 190 762
 609 108 141 516 781 583 135 599 269 171 201 727 225 221 209 746 364 527 672 107 132 278 230 776 119 192 713 639
 168 110 170 775 756 764 646 648 689 155 770 717  97 332  82 207  65 621 709 759  89  73 151  79 449 100 123 686
  66 162 780 774 127 634 637 536 570 199  95 224  30 152  31 743 126 465 650 133 157 524 649 179 763 783  61 741
 195 357 191 724 585 779  86 740 667  32 118 656 136 745 160 769  59 561 773 611  62  64 186  54  92  75 778 735
 439 747  93 531 223 434  55 765  17 518 767 726  41  21 102 641  69  80 664 113 760  90 294 728 766 772 153 381

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00645e+07us (= 10064.5ms, 10.0645s)
Satisfaction error: 2
Number of search iterations: 1666
Number of local moves: 785 (including on plateau: 228)
Number of local minimum: 102 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

Problem in row 13: 412 377 484 271 615 277 493 386 538 427 350 399 454 413 365 506 441 448 466 416 462 346 339 430 67 40 400 367 => the sum is 10989 rather than 10990
Problem in row 26: 66 162 780 774 127 634 637 536 570 199 95 224 30 152 31 743 126 465 650 133 157 524 649 179 763 783 61 741 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 428   8 122 625 173 701 720 722 347 725  87 677 167  85 691   2 702  77  46 733  14 719  32 197  75 645 703 767
 273 737  23  53 681  64  59 672 162 685 192 673 680 595 708  92 709 165 671 519 255 692 114  38  34 678  25 741
 305  86 626   1 704 686 674  82 182 660  56 684 738 103   4 163 698 324 688  83 619 727 588  43 728  18  52 668
 228  70 658 115 734 717 634 700 123 639  95 656 546 576 245 146 745 120 155 690 646  10  28 259  76 683   7 689
  21 138 569 615   9 647 670 618  78 109 174 661 629 301 272 566 731   5  50 608 651 361 667 234 356  67 550 633
 310 161 567 520 578  15 610 601 216 624  22 373 699 217 644  90 637  58  54 732 160 659  42 278 596 710 190 627
 175 538 479 531 676 607   3 635 239 620 156 548 612  45 648 181 641  37 622 487 237  44 628 121  62 528 185 705
  24 183  17 549 539 510 736  16 220 590 116 512 527 687 536 187 563 508 630 266 268 468 650 176 562  41 269 640
 159 573 585 558  33 497 518 523  39 499 598 514  29 495 532 602 369 603 600  20 132 611 469  79 131 556 196 470
 511 559 583  51 582 446 597 579 252  13 480 571 463 141 564 506 378 443 127 224  19 551 454 136 377 492 401 490
 191 467 565 483 577 517 447 451 250 533 560 396 572 316 403 383 457 149 440 107 204 417 317 199 450 194 473 472
 521 416 427 419 476 404 466 444 307 486 574   6 505 477 485 491  26 509 475 207  40 308 437 445 275 515 388 461
 354 501 540 433 507 392 423 435 271 287 157 321 449 561 420 513 498 481 471 411  69 326 398 415 387 429 529  12
 545 484 382 363 385 442 335 389 164 465 478 453 409 366 274 339 593 331 289 412 334 489 376 414 464 418 426 171
 735 436 360 314 359 371 203 434 367 455 290 410 390 430 666 424 299 362 340 380 393 459 319 349 332 375 280 458
 300 297 408 318 522 313 431 286 439 170 399 425 496 441 456 372 365 407 405 746 355 587 432 303 262 391 312 352
 534 422 541 293 329 302 323 320 552 402 291 707 223 500 230 351 631 249 325 448 693 368 247 502 342 379 260 226
 614 279 258 333 261 386 205 338 544 346 743 328 421 251 281 292 198 774 284 592 311 186 264 694 675 306 586 240
 638 283 344 213 358 244 304 189 613 755 219 231 345 779 208 315 200 530 729 642 374 282 394 724 129 285 400 263
 652 298 248 381 336 337 202 288 364 210 296 253 215 756 679 350 256 254 295 773 653 267 233 730 525 309 460 370
 662 178 227 682 169  93 102 749 438 246 721 543 142 696 406 775 119 754 139 327 348  80 322 718 232 357 617 148
 555 243 714 654 184 229 782 236 542 242 605 235 188 154 126 238 214 764 343 257 695 621 177 482 575 152 636 147
 516 609 221 133 265 781 341 143 580 270 537 110 739 180 145 744 105 657 526  96 488 135 726 604 100 584 606  49
 172 757  97 150 784 201 211  74 713 124 716 195 151 632 218 241 397 758 665 663 395 130 353 330 778 209 763 113
 554 711  72 750 535 294  98 134 777 118 474 193  71 112  88 664  63 570 225 384 462 166 748 759 504 760 649  55
 655 751 753 117  68 104 222  73 776  61 740 158 452 780 179 581 276  94 111 125 643 524 762 493 494 770 168  60
  81  36 547 747  65 137 568 715 712 557 591  91  48 206 140 599  89 594 669  31 761 768  47 503 772  11 153 752
 277 769  57 589 101 553 106 144 723  99 623  66  84 108 742 783  30 413 616  27 771  35 766 765 697 128 706 212

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00025e+07us (= 10002.5ms, 10.0025s)
Wall-clock time (full program): 1.0057e+07us (= 10057ms, 10.057s)
Satisfaction error: 3
Number of search iterations: 1926
Number of local moves: 745 (including on plateau: 257)
Number of local minimum: 141 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

Problem in column 17: 702 709 698 745 731 637 641 563 369 378 457 26 498 593 299 365 631 198 200 256 119 214 105 397 63 276 89 30 => the sum is 10989 rather than 10990
Problem in column 28: 767 741 668 689 633 627 705 640 470 490 472 461 12 171 458 352 226 240 263 370 148 147 49 113 55 60 752 212 => the sum is 10991 rather than 10990
Problem in diagonal 0: 428 737 626 115 9 15 3 16 39 13 560 6 449 366 666 372 631 774 729 773 348 621 726 330 504 770 153 212 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 511 691 441 200  55  17 660 157 163 755  39 226 643  76 752 201 190 118  25 737 537 633  69 698 120 756 751 769
 716 770 728  94  90  62 713 641 117  77 112 558  41 778 765  32 777 212 483 730  75 586 552  88 126 138 783 146
 677 590 772  59 764  86 515 577 213  65 109 517 124 639  80 191 780 105  98 451 184 704 467 130 475 774 710 134
 746 762 703 454 211 136 727 624 169  63 148 460 122 101  83 158 644 563 255 561 266 559 741 137 493 447 221 436
 541 706 720 587 784  35 239 712 150 115 775 469 759  51 753  96 176 131  46 671 292 604 273 164 147 599 110 285
 742 740 620 662  44 771 690 128 262 218  37 614 605 154 636 187 186 241 281 767 168 580 275  87 179 678 166 272
 630 487 656 699 330 594 655 757 188 193 174 711 307 294 153 389 319 204 127 592  97 347 314 256 217 243 768 289
 680 733 670 329 173 277 334 484 556 181 162 625 205 235 782 195 108 172 286 455 472 760 694 265 350 327 152 328
 570 627 249  40  93 473 748 247 458 196 135 609 245 318 781 306 258 308 194 747 254 569 642 240 215 657 145 666
 402 564 259 311 359 392 481 372 242 773 223 739 246 142 263 300 209 340 405 547 351 546 735 304 361 228 299 597
 296 514 761 278 376 366 646 693 231 267 450 766  84 253 333 230 346 357 432 535 430 443 362 233 394 185 416 313
 492 667 257 763 177 331 453 509 180 199 216 732 378 297 344 384 522 268 360 461 252 464 371 428 396 417 374 298
 343 495 557 446 133 398 418 271 232 291 397 452 776 411 302 538 206 349 377 496 144 375 572 353 315 653 284 406
 324 373 420 422 504 323 429 383 426 385 264 339 438 479 486 320 197 456 555 309 279 779 287 512 159 141 542 459
 409 337 421 270  27 367 341 445 305 551 388 387 407 352 532 214 342 335 584 393 400 386 364 549 520 490 440 434
 508 274 283 442 332 476 423 382 474 370 470 380 325 338 482 414 466 502  31 390 381 449 448 491 439 293 326 401
 562 280 601 613 365 444 536 519 507 478 290  30 415 358 540 610 354 303 503 322 167 336 356 437 175 395 345 149
 244  66 282 403 523 312 317 499 568 412 433 107 369 533 480 585 462  71 125 301 566 234 399 521 530 500 598 550
 171   6 425 582 471 427  91 413 295 554 431 355 615 754 457 288 525 408  24 222 477  34  67 578 581 607 463 669
  92 269  22 647 574 531 529 123 106 622 631 155 207 573 485 553 616 726 524   1 663 151 238 505 626  61 510 250
  89 170 219 589 435 516 227 606 576 689 527  52 506 629 528 465 668 518 600  28  60 116  18 489 725  53 632 260
  78 119   5 513 565 121 192 129 611 248 682 261  36 686 424 612 419 494 658 251 410 276 608 696 596 617 681   2
 310  10 113 661 724 567  81  85 595 687 621  73 526 539 236 488 501 675 635 111 664  38   9 722 652  68   8 591
  43   4 468 543 237 731 203 220 702 575 623 102 638 548   7 676  54 498 736  70 651 229 165   3 672 579 321 692
  79  33  57  20 665 645  49 103 654 189 618 224 684 750  58 637 697 729 588  95 744  15 673 659  29 583  64 649
 534 198  26 210 685 140 143 161 593 497 628 368 674 634 178 758 104 560 715 208 571  48 718 723 745  47  82  42
 182 391  72 132 545 743 139 650 683 602 688 363 603  23  14 544 156 707 648 379 721 717 348  16  74  50  99 701
  19 114 183  21 749 709  11 100 734 738 719 316  12  45  56 619 708 640 695 160 714  13 225 705 679 404 700 202

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00035e+07us (= 10003.5ms, 10.0035s)
Wall-clock time (full program): 1.00631e+07us (= 10063.1ms, 10.0631s)
Satisfaction error: 2
Number of search iterations: 1785
Number of local moves: 811 (including on plateau: 322)
Number of local minimum: 131 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0

Problem in column 22: 633 586 704 559 604 580 347 760 569 546 443 464 375 779 386 449 336 234 34 151 116 276 38 229 15 48 717 13 => the sum is 10991 rather than 10990
Problem in column 24: 698 88 130 137 164 87 256 265 240 304 233 428 353 512 549 491 437 521 578 505 489 696 722 3 659 723 16 705 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 473  41  75  52 727 566 514  11 605  72 352 149 546 759 774 670 758  43  31 780 700  76 465 339 436 238  47 691
 111 744 125  49 778  97  78 161  59 102 743 139 583 782 176 767 625 235 220 739 579  95 673  42 712 145 775 656
  99  62 762 550 632 204 109  26 148  63 705  25 717 641 784 548 660  65 121 779 569 187 477 314 519 302 153 769
 158 719 173 219 716 777  84  80 229 206 165 169 735 135  36 607 682  57 453 675 701 751 612 732 557 209 156 197
  88 129 103 664 543 537 190 536  98 140 702  77 144 709  74 276 773 529 266 747 490 626 721 619 170 194 108 737
 171 104 226 263 667 771 756 157 141 128 729 211 652 402 192 753 647 254  82 486 570 105 715 666 574 236 117 215
 159 130 230 110 578 540 768 231 122 487 454 711 750 237 162 467 218 695  91 186 746  83 669 282 601 195 333 755
 351 133 136 325 642 616 182 748 168 345 189 342 757 544 208 520 272 596 107 687 776 253 406 517 502 203 252 213
 150 154 250 749 752 435 174 344 761 118 363 225 692 606 304 166 582 567 240 450 248 349 309 575 434 393 280 320
 275 319 227 221 598 370 164 223 391 278 251 184 379 720 287 772 274 672 733 327 360 292 297 725 640 410 298 303
 142 321 440 264 444 613 310 348 358 239 728  48 201 638 291 731 549 696 426 268 372 191 324 649 623 210 273 293
 152 281 357 256 388 400 207 399 258 722 414 770 336 403 307 296 554 628 312 354 340 232 532 783 305 374 331 299
 326 257 277 289 573 409 338 270 332 295 445 460 356 384 330 443 677 346 290 329 457 432 558 515 483 373 438 308
 452 394 364 366 404 267 455 428 318 389 495 471 311 284 259 405 430 285 415 425 395 381 442 343 572 392 337 511
 198 489 362 359 387 493 315 463 401 446 535 365 422  35 413 334 418 361 306 271 504 419 397 390 586 562 335 424
 376 503 261 481 185 496 322 482 508 328 367 461 530 245 411 355 439 300 485 234 416 449 420  92 522 602 279 441
 212 468 500 386 137 160 242 408 476 480   4 407 433 510 494 475 423 527 534 505 470 526 222 353 378 427 385 448
 501 472 456 412 262  56 464 398 479 265 119 587 559 507 488 341 347 521 431 516 665 459 217  32 155 383 451 447
 561 301 615 621 175  53 429 577 599  55 564 591 518 469 497  22 241 437   1 513 100 560 369 528  58 506 492 538
 581 462 525 661 255 177 547 658  46 552 545 323  66 228 662  96 249 474 478  94 565 618 396 114  34 509 458 617
 781 499 498 568 124  30 603   6 533 657 563 659  45 556 690  93  70  18 541 553  54 555  24  51 350 631 714 524
 539 597 627 576 126 650  39 484 600 594 120 542 588 316 624  89 151 283 689 116 113  33 375 417 224 643 766  69
 648 611 698 531 127 138 686 635 645 760  50 634  64 491 679  85 294  13 630  67 214 595  86 115  10 592 676 216
 637 742 590  81 382 571 584 629 653 608  73 633 167 233  79  21 246 244 639 172 106 684 269   3 132 678 466 668
 723 609 604 143  17 183 614 680 644 523 713 180 199  20  28 620 181 380 726 593 196 580 585 288   2 763   8 188
 707 699 745 654 147  12 313 688 651 674 163 371  68  71 764 178 146 693 685  27  14 710  37 512 368  87 694 112
 736   9 703 589 123 663 765 202 131 740 179 646  38  60 734 205  44 754 681   7  23  19 193 708 622 704 697  15
 683 741  61 551 101 706 738 718 636 724 260 610 134   5 243 655  40 317 377  90 247 730 200 286 421  29 671  16

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.50884e+06us (= 6508.84ms, 6.50884s)
Wall-clock time (full program): 6.56807e+06us (= 6568.07ms, 6.56807s)
Satisfaction error: 0
Number of search iterations: 936
Number of local moves: 581 (including on plateau: 171)
Number of local minimum: 54 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 531 160  96  51  27 768 307 777 570 112 728 742 779  85 778 109  58 479  83  44 204  39 749  42 509 651 753 759
 468 715  80 670 558 609  92 694  93  53 692 574 210  34 666  28 132 775  64 177  74 125 758 710 766 553 534  86
 725 764 780  52 755 746  55 741  54 153 267 584 129 241 644 141 127  46 119 462 234 591 505  41 624 668 679  63
 643 114 126 721  56 637 100 693  78 104 647 709 763 169 773 155 485 751 379 239  70 140 719 113 782 137 147 540
 589  38 232 203 769 563  60 623 674  84 507 408 761  71 669 230  36 151  31 398  47 156 765 772 271 657 638 587
 678 191  81 174 776 784 108 713 675 227 503 740 246 456 774 187 691  97  48 290  99 161 532  25 188 626 222 698
 417 181 767 296 194 597 662 427 614 195 554 123 533 136 547 248 630 133 189 474  73 460 565 272 771 173 229 530
 622 175 207 220 282 263 689 493 613 394 627 665 347 121 277 171 138 233 374 420 762 217 550 401 663 337 172 557
 734 184 209 213 144 754 756 716 642 212 738 443 159 285 257 304 245 219 308 757 486 240 620 225 218 124  95 703
 655 406 305  76 198 231 242 196 274 303 707 760 333 216 265 287 206 517 730 457 223 344 359 202 748 331 743 676
 494 579 214 405 197 448 732 542 650 168 673 251 116 424 783 279 315 321 508 390 284 317 648 165 226 291 158 411
 316 302 300 288 247 273 722 262 454 598 255 569 283  62 330 455 199 324 548 350 146 752 551 318 641 393 471 581
 294 781 336 371 391 326 473 349 414 745 348 244 309 342 475 355 346 334 320 399 260 327 498 278 497 413 385 380
 208 338 410 280 373 238 392 295 377 369 353 451 366 464 329 461 603 328 434 504 356 360 395 480 422 519 560 325
 293 388 428 458 372 289 396 322 323 364 483 397 432 362 351 564 476 312 433 418 435 343 415 256 430 463 447 340
 345 441 382 470 439 516 111 536 365 403 484 522 502 400 412 437 402 264 335 115 409 488 314 237 381 440 477 363
 313 352 311  17 506 186 577 635 601 513 258 446 386 376 404 357 167 425 561 201 549 421 306 416 378 541 368 419
 193 510 375 426 452 361 592 526 450 535  59  79 481 459 495 661 384  13 578  72 546 445 310 639 101 514 529 205
  19 512 469 438 500 605  94 501 590  33 442  21 636 539 370 527 467 339  57  26 566 705 211 555 571 499 523 176
 524 436 453 544 588 103 604   1 387 268 243 429 552 696  67 466 520 521 249 163 423 389  45 478 407 594 559 281
 170   8 582 573 487 299 607 236 511 583 105 367 490 572 183 515 619 545 472  98 200   4 292 684 593 444 482 269
 580 543 528 652 629 215  77  89   2 596 221 606  35 625 602 654 148 431 567 617 770 595  82 276   5 608  75 162
 228 632 671 681 633 149 253  23 275 656 139  90  30 701  40 585 685 618 586 576 640 492 254 664 150 224  29 286
 179 612 649 621  16 143 518 134  11 628 270  91 646 667  87 712 107 575 706 556 645 731 235   9   6 449 690 297
  37 615 600   3 135 568 491  69 250 660 261  22 714 726 154 659 717 610 164 634 735 744  68 720 185 110  20 319
 142 616  65 682 562  66 266  50  61 677 152 166 702 496 128 688 700 733 750 687 672 465  49 537 130 118 298 332
 252 354 723 697  24 131 489  88 599 658 157 301  18 727  10 653 704 718 686 737 358 192 180 739 145   7  12 631
 341  43 611 708 680 122 525 259 383 699 117 190  32 538 120 102 683 178 711 729 724 747  15 736 182 106 695  14

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00595e+07us (= 10059.5ms, 10.0595s)
Satisfaction error: 2
Number of search iterations: 1725
Number of local moves: 681 (including on plateau: 232)
Number of local minimum: 134 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0

Problem in row 11: 494 579 214 405 197 448 732 542 650 168 673 251 116 424 783 279 315 321 508 390 284 317 648 165 226 291 158 411 => the sum is 10989 rather than 10990
Problem in row 19: 19 512 469 438 500 605 94 501 590 33 442 21 636 539 370 527 467 339 57 26 566 705 211 555 571 499 523 176 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 708  68  76  23  25 767 724  85  48 719  45  37 555 720 771  93  63 458 448 266 459 750 501 451  92 770 596 672
 308 773 659  51 188 601 694 739 514 713 113  21 572 766  72 112 461  26 150  88 199 712 583 751 151 709 126 138
 553  97 592 225  66 748 638 755 122  24 681 156 606  99 230 774 428 273 114 153 357 725 528  41 783 343 746 133
 185  15 134 769 682 507 765  56 763  14 238  57 643 632 306  81 772 226  89 105 376 547 377 128 780 776 778 189
  49 190 779 163 455 756 705  55 660 741 101 116 687 647  22 311 141  79  94 214 398 710 695 775 490 727 176  54
 754 111 123  67  60 716 594 178 537 663 578 147 650 183 152 143 355  70 100 175 368 634 781 267 768 485 633 698
 198 211 174  65 137 658 611 167 685 607 677 243 757 715  36  83 293 257 248 445 194 550 487 205 731 651 219 686
 148 177 191 107 679 699 604 782 599 149 535 281 556 351 258 628 303 222 285 203 221 353 560 335 260 678 614 212
 278 208 784 609 760 314 745 184 635 135 154  96 166 104 329 132 680 408 159 244 245 476 646 160 328 546 758 707
 139 170 181 536 345 276 523 201 504 674 508 301 321 325 186 313 676 247 369 717 213 349 744 320 344 530 246 732
 254 334 629 440 240 542 721 233 299 486 515 207 292 359 307 347 644 200 436 287 279 668 747 218 251 494 374 187
 165 636 284 356 204 371 512 497 498 119 333 286 297 383 696 315 430 568 261 441 513 298 362 330 323 738 358 416
 378 777 161 365 753 269 305 527 202 649 220 491 370 296 318 502 332 413 350 229 338 397 341 277 295 521 529 385
 425 283 319 210 239 406 387 288 480 395 322 384 543 479 411 392 475 327 337 495 382 361 453 399 423 478 517 380
 255 352 404 442 400 312 302 235 331 437 492 360 381 346 456 280 421 270 367 565 541 386 516 544 394 354 401 446
 615 407 324 444  73 364 363 473 483 389 144 520 464 317 545 496  47 432 493 415 573 489 215 431 390  86 549 449
 482 268 511 460 227 405 420 393 509 429 291 388 539 435 375 412  95 417 402 488 121 426 140 403 587 348 471 548
 593 590 454 540 608 173  20 379 422 522 339 582 242 484 472 466  43  30 630 419 115 282 209 571 439 372 391 603
 434 561 570 477 465 414 410 447  16 263  44 654 164 581 639 531 157 524 409 470 564 253   7 597 424 264  10 641
 605 443 500 474 612 326 124 591 217 462 196 574 162 586 701 463 366 670  28  53 595 433 117 575 224 241 310 342
 624 554 577 627   9 182 231 256 274 588 481 518  46 129 740 692 557 519 438 457 142 534 102 562 450  42  34 625
 452 336 510 652 619  38  18 110 340 525 418 640 533 616 538 580 234 671 675 552 130 289  52 645 427 118 145 127
 566 576 499 396  98 206 109 737   1 505  58 506  39 563 637 618 300 172 665 569 558   8 290 559 617 250 623 265
  12 653 252 667 467  29  31 585 179  90 690 734 136 294 304 764 610 702 691 743 551   3 309   6 589 168 131 600
 613 728 316 262 602 223 272 661 103 648 683 598 216  75 689  71 736 703 655 271 567 106  59  17  62 195 622 237
 155 673 621 662 684  82  35 688 125   4 620 626 169 193  19 631 700 642 722 503 526 171 469 693 108   5 228 236
 373  69  91 704 714 532  77 656 711  27 752 761 158 192 697  11 584 735 657 664 723  78 232  64 180  40 259 249
 669 730 275 197 579  74  50  32 733  13 762 706 726 120  84 749  87 729 718 759 742   2 468 666  80  61 146  33

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00602e+07us (= 10060.2ms, 10.0602s)
Satisfaction error: 1
Number of search iterations: 1788
Number of local moves: 642 (including on plateau: 159)
Number of local minimum: 148 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0

Problem in diagonal 1: 672 126 343 780 775 781 550 221 244 369 200 430 502 411 346 464 388 339 263 217 256 18 206 467 262 621 69 669 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 782 664 751 776 684 748 534  97 696  46 203 543 754  66  63 336  61 106 119 126  77 588 641 494 749 135 127  24
  34 708 541 187  59 110 704 105 208  33 765  80 767  44  81 335  73  86 778 764  72 680 733 720 655 744 747 177
  29 644 302  62 215 734 636  92 574 261 246  31 736  78  75 111 138 766 723 773 616 501 604 424 700 291 160 468
  43 630 183 192 217 162 690  84 672  98 513  26 561  51  79 141  95 570 477 772  49 476 743 632 758 759 591 726
  60 571 740 181  68 269 725  64 228 462 722 150 650 212 147  83 679 166 158 761 627 606 731 514 260 753 169 234
 259 247 266 136 197 677 746 117 742 474 608 363 693 129 123 653  70 146 120 221 667 240 681 558 760 182 727 188
 151 577 164 102 357 278 552  71 243 739 598 180 724 159  85 583 253 738 173  56 750 783 239 756 642 142 220 676
 326 617 161 137 122 262 781 769 411 305 602 366 651 267  87 634 272 125 241 292 189 633 757 639 235 168 276 665
 408 242 148 299 115 194 507 503 675 218 717 174 250 287 133 618  89 315 198 694 318 658 202 615 609 358 678 768
 421 309 361 257 178 100 508 344 306 334 640 316 745 290 572 775 185 224 730 226 337 415 167 275 695 338 671 271
 359 392 353  88 263 256 519 440 179 132 624 313 423 322 222 729 321 737 343 285 282 663 204 705 281 303 683 569
 295 255 317 231 355 341 425 230 540 666 692 752 265 249 473 311 191 237 140 455 635 538 225 628 307 288 236 713
 360 347 329 340 453 206 467 324 451 532 537 445 379 397 345 466 404 356 381 428 395 312 550 186 371 719 210 300
 283 286 350 420 294 374 388 297 383 707 454 376 348 375 649 351 432 412 367 373 308 396 407 349 223 402 431 555
 293 323 448 301 464 330 418 505 471 496 442 171 245 419 435 380 450 493 310 390 490 244 487 193 457 406 535 394
 531 483 459 530 426 331 279 368 430 103 391 475 270 339 327  94 369 398 386 512 410 400 523 486 528 364 626 152
 596 470 436 342 434 393 289 443 163 546 385 118 542 332 200 116 389 580 184 495 370 458 520 296 460 441 563 429
 362   8 416 409 593 547 384 382 611  36 403 352 446 504 660 413 536   6 433 603 444 414 438  12 481 500 427 170
 585 605 488 447 524 401 233 567 506 254  37 515  28 613 590 216 452 573  40 521 557 417 439 354   9 365 232 422
 581 594 575 478 670 518 219 499  22 551  90 576 227 461 582 149  48 568 469 491 533 128 578  39 529 527 143 145
 559 387 587 620 465 139 156 479 509 548   2 484 258 579 610 511 595 492 560 104 525 248 134 114 157  15 643 510
 565  91 654 399 497 539 112 549 516 522  27 562 502 600 489  67 668 405 625 545 175  50  42 107 599 480  47 556
 701 124 482 728 661   3 109 629 325 699 195 607  54 601 584 252 544 691 652 176 264 172  35 196  32 553 449 472
 686 597 113 463  69 498 131 689 378 703  53 614  13 612 566 682 763  30 622  99 319 277 304 638 251  17 648 155
 709 153   7 646 631 554   4 741  25 165 372 715  21 770 564 619 698 657 774  10 205 207 154 377   5 659 280 268
 712  20   1 755 526 697 209 685 144 621  41 320 201 718 716 669 702 298 274 130 710 346 108 314  93 437 214 328
  16 456 647 777 780 623 213 688 517  76  45 721  38 732 762 485 779 714  57  14 592  82 333  96 121 589  19  18
 284 190 711 687 673 706  52 229  65 662 586 645 199 784 771 211 735 101 656 674  74  58  11 273  23  55 238 637

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0003e+07us (= 10003ms, 10.003s)
Wall-clock time (full program): 1.00613e+07us (= 10061.3ms, 10.0613s)
Satisfaction error: 4
Number of search iterations: 1804
Number of local moves: 844 (including on plateau: 444)
Number of local minimum: 117 (including on plateau: 52)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 151 577 164 102 357 278 552 71 243 739 598 180 724 159 85 583 253 738 173 56 750 783 239 756 642 142 220 676 => the sum is 10991 rather than 10990
Problem in row 26: 712 20 1 755 526 697 209 685 144 621 41 320 201 718 716 669 702 298 274 130 710 346 108 314 93 437 214 328 => the sum is 10989 rather than 10990
Problem in column 10: 46 33 261 98 462 474 739 305 218 334 132 666 532 707 496 103 546 36 254 551 548 522 699 703 165 621 76 662 => the sum is 10989 rather than 10990
Problem in column 17: 61 73 138 95 679 70 253 272 89 185 321 191 404 432 450 369 389 536 452 48 595 668 544 763 698 702 779 735 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 776 766  73  54 685  65 761 624 772  15 777  81 518 781 762  13  82 625  98 531 245 732  69 144 153 466  94 228
 780 249  93  47 642  72 728 588 783  67 734 764 103  39  23 105 155 573 147 543  49 669 678 110 667 754 720 108
 506 520 206 123 689  50  90 670  80 763  96 134 572 779 309  44  12 751 133 617  30 747 773 746 590 758  88 114
 594 536  42 175 713 180 767 148  26  40 775 770 597 109 576 203 151 657  77 539 113 645 145 578 102 550 774 408
 512 328  70  51 586 157  79 664  85 189  63 193 610 778 683 260 104 730  53 726 312 656  41 620 752 756 182 750
 668 326 117 101 646 769 238 768 146  36 141 500 742  11 549 226 171 197 269 693 208 760 729 643 202 695 177 262
 570 637  99 771 727 718 721 680 287 149 220 154 692 136 273 196 244 140  34 722 211 745 213 349 236 219 131 716
 743 634 318 192 499 558 217 256 130 297 278 431 382 231 537 143 183 207 187 556 749 636 782 221 241 296 598 488
 415 717 676 292 602 169 209 595 714 210 118 314 579 166 731 215 234 178 222 451 259 359 252 290 660 635 279 449
 744 703 204 247 567 156 126 224 311 275 334 264 755 282 452 129 158 268 757 623 138 681 267 448 710 654 250 263
 675 665 291 194 492 759 355 168 293 490 214 289 371 368 397 315 510 453 172 501 150 784 232 575 142 348 325 462
 223 254 229 261 753 388 313 486 672 265 357 323 399 352 365 233 301 251 347 522 529 626 322 553 445 495 350 376
 258 391 285 652 295 336 372 498 484 485 546 327 384 373 243 422 353 398 402 235 375 342 765 432 394 343 240 360
 409 405 294 306 401 395 463 218 410 255 304 396 443 370 338 437 404 557 212 465 497 480 423 400 493 340 428 447
 454 378 593 331 390 303 363 377 564 504 354 316 329 276 426 339 253 444 411 599 332 407 603 281 369 320 307 367
 132 524 487 475 392 425 302 424 317 418 441 535 319 366 337 436 472 496 616 321 383 246 333 380 505 470 362  76
 413  46 457 356 188 519 461 545 438 473 429 341 532 530  35 513 471 403 540 266 516  45 528 526 483 467 460   9
 393 135 569 581 170 562 351 547 592 491 385 511 115 450 164 442 474 459 509  92 464 120 523 458 481 374 439 139
 165  52 554 477 125 559 507 419 521 346 542 517  21 604 137 440 435 502 381 358 446 201 541 284 615 128 605 508
 100  61 583 638 216 387  18 574 330 533 662 468 184 421 420 613 503 587 416 417 427 106 515 271 649 112 580 199
 122 227 582 389 300 414 591 257  83 489 482 655  91 607  74 733 577 589 568 205 456 161 632 272 534  58 430 412
 225 242 696 611  64  10  60  38 641 612  43 514 160 585 619 476 551 566 706 239 455 478 552 527 305 345 433 237
 274 563 525 633 190 280 658 163 629 434 544 548 159 640 174 609 679  48 628  75 724  14   6 479  78 310 627 299
 191 406 686 560  20 555 647  17 621 700 674 663 286 121 167 673 699  29 659  25 704  28   2   7 469  19 614 748
   1 344 622 386  59 162 712 666  71 691 694 195 565  55 270 737 709 176 690 230 119  22 608  66 324 584 631 601
 116 650 335 684 361 682 124  24 379 494  27   4  97  89 561 618 738 596 723 152 719 185 111 644 298 364 677 538
 283  33 653 701  32 711 630 179   5 571 740 688 708 736 671 705 661 107 308  87 741  84  57  86  56  62   8 687
 248 198 651 702 186 648 127 173 606 698  16  95 277 735 697 715 707   3 725 200 639  31 288 600  37  68 181 739

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00597e+07us (= 10059.7ms, 10.0597s)
Satisfaction error: 3
Number of search iterations: 2164
Number of local moves: 877 (including on plateau: 253)
Number of local minimum: 182 (including on plateau: 24)
Number of resets: 1
Number of restarts: 0

Problem in column 6: 65 72 50 180 157 769 718 558 169 156 759 388 336 395 303 425 519 562 559 387 414 10 280 555 162 682 711 648 => the sum is 10989 rather than 10990
Problem in column 17: 82 155 12 151 104 171 244 183 234 158 510 301 353 404 253 472 471 474 435 503 577 551 679 699 709 738 661 707 => the sum is 10991 rather than 10990
Problem in diagonal 1: 228 720 758 102 620 729 745 749 451 757 453 301 422 338 276 319 341 385 346 330 257 60 280 20 386 335 33 248 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   7 327  17 435 600  99 708 659  29  90  39   8 445 679 756 704 746 592 415 316 682   5 180 690 611 107 702 342
  75   2 263 192 694 543 698  91 225 724  67 658 743 667 758 680 446 719 160  37 606 671  24 701 304  65  69 108
 155 665 416  16 328 709  14 713 174 769  35   4 703 639  51  25 767 744 741  27 686 197  13 626 369  30 699 675
 154 175 130 111 594  28  41 610 300 752  64 558 676 321 579 347 731 742 720  61 733 722 662 605  10 127 162 274
 148 649 211 598  12 748 563  58 259 532  74 657 691 614 684 231 717  18 612 219 149 652 685   9 226 223 695  56
 210 527 291 114 308 648 582 539  92 616 135 630 661 516 673  84 496 628 503  26 224  45 186 629  80 232 696 619
 132 428  72 683 146 560   3 305 118 595   6 755 625 542 650 551 556 559 499  93 344  88  83 692 534 279 557 535
 161 642 220 482 514 697 173  31 125 580 444 723  20 275 608 136 583 271 484 481 292 584 505 509 103 251 544 552
 553 401 105 497 486 571 374 718 193 602 281 433  42  47 528  98 521 599 674  82 187 568 593 569 632  79 480  77
 570 418 152 607 137 441   1 596  89 601 422 409 549 469 640 277 455 419 324 519 215 440 144 631 392  15 513 545
 541 670  22 297  81 367 493 546 317 617 123 566 688 143 475  85 706 270 536 355  76  87 506 538 562 278 425 620
 312 439 309 310 266 417 386 349 358 399 382 490 426 533 464 395 286 575 109 325 576 561 429 178 442 298 451 525
 483 512 368  32 618 502 254 540 378 394 182 357 453 524 371 350 459 336 488 430 353 345 380 494 400 267 331 390
 526 337  54 515 360 389 508 366 489 420 359 323 587 520 379 437 462 361 530 421 301 303 495 104 373 517 314 240
 332 467 474 473 456 352 436 448 466 572 604 387 354 438 372 384 351 287 615 243 299 199 356 306 102 511 363 343
 465 518 457 414 510 235 252 335 468 479 413 447 565 404 393 329 185 264 248 477 564 531 431 208 242 577 326 253
 377 452 581 376 139 346 385 397 407 269 320 460 265 340 348 410 247 470 554 284 627 710 227 313 432 450 396 408
 239 338 476 402 603 249 285 573 547 333 730 381 262 311 424 237 491 406 318 548 238 273 228 282 391 370 293 762
 634 478 644 388 646 307 302 501 537 217 449 423 290 115 117 276 319 411 330 315 205 362 637 288 255 677 289 578
 403 195 283 244 427 256 246 213 454 157 443 339 128 663 133 687 172 189 209 585 745 159 735 234 757 574 645 715
 250  63 656 729 212 176 258 779 613 272 434 412 589  73 153 245 233 334 775 776 783 365 222 202 500 621  71 194
 654 101 728 156 485  68 768 221 734  59 664  23 147 294 140 651 113 507 471 522 609 736 405 257 636 635  94 112
 678 214 586 198 168 773 190 206 753 280 738 188 167 660 177 487 183 126 171 763 179 705 771  66 714 463 170 216
 774 164 739 750 784 100 550 295 492 268 781  46 236 165  86 668 230 116 122 498 169 726 364 766 129 711 142 119
 780 120 655 747  44 567 375 163 754 131 749 200 229 201  60 121 203  97  48 641 472 761 777 296 383 716  19 681
 633 141 721 261 647 106 725 458 760 124 523 191  57 138  50 764 196 638 166 653 504 110 241  38 623 732  78 712
 689 782 590 622  53 207 693 218 461  43 778 772  70 666 184 591  96  52 134 669  21  36 700 204 145 597 759 158
  55 765 770 341 672 529 727  62 398  95 751 150 322  33 737 740  40 260  34 624 151  49  11 555 643 588 707 181

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00592e+07us (= 10059.2ms, 10.0592s)
Satisfaction error: 2
Number of search iterations: 1691
Number of local moves: 869 (including on plateau: 346)
Number of local minimum: 121 (including on plateau: 45)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 154 175 130 111 594 28 41 610 300 752 64 558 676 321 579 347 731 742 720 61 733 722 662 605 10 127 162 274 => the sum is 10989 rather than 10990
Problem in row 13: 483 512 368 32 618 502 254 540 378 394 182 357 453 524 371 350 459 336 488 430 353 345 380 494 400 267 331 390 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  14   1 662 715 204 698 753 294 661 263  57  65 752 684 191 780 707 689   2 180  25  66 701 206 653 132  72 763
 601 298 694 724  53  31  19  35 745 623 705 217 758 676  74 734  50 742   7 139   4 245 462 624 585 594  10 541
 712 632  29 642 162 668 699 735 768 203 754  62 636 762  45 704   3 314   6 148  79  47 609 575  64 224  18 690
  32 738 744 383 242  16 678 659 680 214 382 617  49 760 198 496 307 315  98 110 195  36 736 652 103 164 621 765
 647 576 723 669 107 755 556  24   5 221 261 608 721 478 209 628  15 166 616 161 150  67 639   8 717  26 631 606
 649 743 710 641 102  13 116 497 582 111 500  86 665 476 182 671 660 187 113 153 170 349  11 428 630 670 435 440
 501 558 648 544  21 683 120 618 547 168 165 644 722 510 238 553 656 136 568  17  52  12  75 490 343 259 596 546
 429 728 583 599 210 509 557  95 651 223 719 550 421 769  33 573 555 128  94  46  85  90 570 667 108 472  92 434
 613 453 408 591 177 674 695 529  38  42 619 538 124 675 592 227  23 300 442 251 308 281 725 416 589  58 115 487
 384 438 498 491 267 464  88 635 777 309 109 614 280 528 523 507 524 310 100 328 449 398 276 595 473   9 112 505
 461 492 578 114 288 444 561 611 657  37 304 439 121 517 446 536 504 335 415 324  40 392 531 330 525  48 441 499
 448 537  27 564 301 548 545 460 244 480 567 470 559 350 295 369 452 268 516 493 134  63  71 471 495 101 627 535
 465 574 450 530  44 488 417 230 375 560 466 246 341 419 456 502 186 353 503 414 285 347 386 190 426 451 520 366
 354 342 433 160 455 216 311 346 634 291 486 437 489 526 389 302 468 443 413 287 512 381 407 430 367 402 393 316
 290 411 312 345 479 361 334 579 779 423 458 485 571 483 193 447 278 235 380 344 409 331 373 418 282 299 362 329
 326 513 351 404 395 336 229 405 317 518 681 376 475 205 371 432 228 697 178 425 554 533 297 459 253 286 424 322
 522 260 325 427 521 400 321 454 370 401 332 365 327 368 597 303 257 469 542 422 581 506 215 319 239 420 431 296
 377 527 318 391 387 273 390 378 271 664 774 403 603 158 363 213 388 748 467 270 626 477 144 156 188 406 355 275
 292 219 250 269 474 364 514 184 119 515 615 356 157 360 457 174 233 482 638 764 593 637 283 348 333 677 566 117
 149 226 372 167 445 237 145 340 396 580 277 232 534 147 663 337 673 569 686 782 539 643 249 196 212 688 247 258
 189 181 279 176 706 202 359 739 197 586 231 394 551  61 749 236 714 602 152 729 397 720 255 118 218 776 207 266
 284 241 338 313 620  68 773 293 173 733 436 104 220 374 759 192 262 655 565 732 784 463  93 248 532 357 240 138
 264 129 172 137 778 385 154 175 274 700 352 252  82 169 709 305 783 718 131 600 767 494 747  60 222 646 708  77
 133 183  43 151 727 772 306 122 412 702 155 234 320 211 587 339 140 511 358 610 687 682 171 726 179 654 552 323
 272  41  83 484 666 625 243 135 200 640  30 672  80  87 256 225 130 481 781 543 540 713 563 289 746 612 588 265
  84  39 141 185 691 572 199 629  70  81 146 731 127 106 770  78 577  56 692 562 775 679 703 125 741 750 590  91
 761 751 696 105 757  99 142 693  20 194 201 143  51  97 126  54 584  22 771 549 645 740 622 730 604 399 379  55
 737 159 123  69 711  89 766  96  28 508 208 650 254  34 519  73 633  59 756 607 605 598  76 716 163 410 658 685

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00599e+07us (= 10059.9ms, 10.0599s)
Satisfaction error: 2
Number of search iterations: 2042
Number of local moves: 743 (including on plateau: 276)
Number of local minimum: 146 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0

Problem in row 10: 384 438 498 491 267 464 88 635 777 309 109 614 280 528 523 507 524 310 100 328 449 398 276 595 473 9 112 505 => the sum is 10991 rather than 10990
Problem in row 20: 149 226 372 167 445 237 145 340 396 580 277 232 534 147 663 337 673 569 686 782 539 643 249 196 212 688 247 258 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 702  36 566 701 136 463 734  52  18 297 726  62 424 610 493  73  81  86 644 608  66 773 318  23 698 753  64 783
 718 410 643 771 755  27 593 137  39  78 218  63 482 476 514  35  20 715 421 766 106 728  54 746 694 751   4  26
 742 115 588 777  84  32 745 761  56  82 678   9 649 747 633  95 144 142 553 680  43 654  75  49 775 779 105 198
 612 744 619 778 607 132 651 224  14 729 693  46 335 165 139  29  93 730 547 767 114 636 204 111 782 102  94 293
 705 150 586 774 616 145 710  77 166  97 536 160 531 657 558 220 201  12 676 251  28 687  76 724 656 108 758 125
 510 210 599 626 765 188 776 117 362  44 639 181 475 617 725  72 243  58 177 494 256 752 121 124 764 207 437 451
 448 213 762 134 187  70 471 331 126 308 554 233 659 549 640 259 258 780 677 606 267 384 239 230 176 627 174 628
 289 241 556 312 759 311 618 645 283 175 750 183 662 661 595 138 250 360 625 304 226 682  87 155 321 193  59 550
 172 342 671 164 306 182 377 163 348 393 254 200 768 642 737 305 103 784 700 781 186 426 227 217 159 214 452 717
 240 271 722 245 313 199 638 228 275 743 257 381 736 330 634 179 395 270 769 284 171 551 195 327 237 248 548 604
 173 158 664 190 505 252 579 232 345 387 374 741 667 641 605 436 380 149 180 211 109 379 337 273 341 690 472 520
 287 242 390 433 151 732 600 347 444 194 389 322 648 686 206 336 261 278 299 398 401 356 279 253 443 364 630 621
 733 249 431 300 229 376 432 281 323 527 326 469 334 223 396 369 349 589 538 314 450 723 441 276 413 319 277 303
 339 235 422 325 343 696 438 292 298 344 427 423 383 291 719 247 400 262 629 420 449 385 363 361 231 508 346 414
 495 470 367 411  33 288 419 509 480 310 320 416 446 120  42 539 541 415 402 340 581 430 458 391 473 353 529 412
 429 406 359 483 388 434 280 286 351 366 407 522 370 189 445 354 352 462 485 477 537 307 274 532 592 574 255  74
 501 530 492 506 504 459 302 442 375 315 584 141   2  15 507 466 246 519 491 405 497 409 417 386 570 596 161 152
 585 523 212 479 365 540 296 408 513 440 403 435 113  90 112 496 372 357 154 569 484 399 582 535 486 454 328 260
 453 500 104 474 378 515 191 503 499  10 555 397 196 130 168 465 468 567 355 590 565 209 528 467 560 517 244 382
 488 542  40 502 660 439 222 373 404 481 489 525 269 568  99 498 460 487 131 167 392 285 464 518 635 184 512 156
 516 603 123 447  30 646  83 368 533 157 147 545  55 559 578 609 611 478  85   6 709 294 652 561 455 490 225 425
  22 457 140 116 601 169  80 572 739 552 203 562 100 511 428 691 650 178 146 575 598   5 597 563 118 576 647 394
  79 526 290 461 699 703  51 594 632 631 185 571 282 295  38 602 614 107  47  92 577  89 684 557 202 358 371 653
  91 663  19 122  45 706 162 591 543 708 350 665  69 309 266 587 669 524 219  57 583 128 573 681 119 534 675 332
   1  11 301 324 521 265 153 713 770 624  34 674 127 613 221 668 748 615 215 544 456  67 637   8   7 216 772 685
 192 683  13  71 268 727  96 316 622 670 148 695 333 129 197 735 623 238 272 133 697 101 688 692  17 170 757 707
  50 740  48  61 721 714  88 712 672 673 110 658 329  24 264 749 704 620 317  16 763  53 731 666  41  68 338  60
 418 720 263   3  21 580 205 716 760 655 234 711 546 143  31 738 754 208 236 135 679  98 689 564  25  37 756  65

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.14888e+06us (= 9148.88ms, 9.14888s)
Wall-clock time (full program): 9.20904e+06us (= 9209.04ms, 9.20904s)
Satisfaction error: 0
Number of search iterations: 1490
Number of local moves: 644 (including on plateau: 257)
Number of local minimum: 98 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  26  14 121  54 733   5 197 634 137 292 288 169 769  64 741 650 369 736 654  93 624  74 722 683 730 686 713  12
 667 139 681  52 612 114 253 583 220 675 210 174 687  75 695 201 379  19 536  57 130 620 376 696 729  96 580 734
 726  43 214 225  47  59 133 610 704 234   3  92 360  32 723 630 125 591 693 270 470 260 219 664 750 753 659 701
 420 666 706 117 712 293  20 276 641  27 301 480 709 274 747 633  83 231  65  24 521  56 660 668 101 596 256 707
 601 609 655 124  21  16 269 645   7 672  10 647 716 692 362  17  94 157 628  29 282 509 640 110 651 617 484 727
 742 719 120 652 528 212  55 608 111 637 350  15 488 607 546  85  89 267 533 262  30 577  13 644 680 104 625 691
 703 565 329 578 568 180 251  41   6 636 108  42 665 606 206  73  22 160 564 483 545 138 593 549 559 621 614 585
 576 492 118 598 671 150 273  28 604 254 511 594 562 555 265 662 263  62 440 550   8 579 423   9  18 474 587 663
 635 622 200 588 468 181  49 310   4 467 507 491 523 597 308  97 563  76 504  11 529 129 395 500 543 643 531 519
 584 512 316 525 573  25 107 184 178   2 490 616 421 603 284 495 493 418  80 424 582 508 463 458 479 560 148 462
 571 602 389 425 436 161 261 306 510 404 385 456 443 487 455 353 472 378 530 203 414 363 556 503  38 442  35 412
 501 551 365 626 527 416  40 419 566 499 359 429 398 373  36 342  63 230 553 548 465 364 482 400  78 526 393 441
 390 570 229 415 438  44 422 321 542 417 454 439 367 459 405 384 514 506 305 280 428 477 496  23 426 432 326 481
 402 399 371 567 498 345 447 497 444 446 451 453 312 403 281 245 249 473 323 377 298 351 435 318 386 450 387 382
 340 518 539 226 388 336 392 339 394 772 381 343 434 314 309 469 464 221 287 370 445 331 375 406 437 433 486 241
 332 448 461 397 164 537 516 569 311 189 328 242 748 246 702 669 475 494 337 356 319 166 401 352 255 294 252 430
 188 413 581 258 396 738 745 183 304 410 737 291 348 335 357 368 374 515 307 676 344 303 286 277 247 366 296 347
 333 408 544 325 279 538 586 552 452 358 760 278 115 409 590 295 186 471 213 317 259 361 689 285 232 193 739 223
 299 198 522 322 190 679 661 485 520 725 656 266 297 224 618 354 653 642 711 227 355 383 192 102 204 163 215 127
 185 152 649 320 302 535 513 718 777 222 705 236  91 233 244 123 700 489 721 754  88 732 238 209 264 327 235 228
 202 217 678 289 199 592 561 752 717 194 272 177 103 182 541 324 599 685 207 629 757 749 315 271 243 131 156 248
 710 141 547 158 268 779 457 411  58 728 476 191 218 134 572 557 147 698 240 170 275 694 146 300 208 172 759 776
 155 196 313 162 179 763 688 122 755 151 682 783  79  77 128 250 611 627 290 165 600 708 767 239 478 187 619 216
 211 143 372 595 781 574 615 677 100 744 699  67 176 105 257 126 670 740 109 773 715 144 154 784 283 136 195  45
  33 334  69 502  51 558 684 112 575 540 135 761 735 673  81 613 589 237 751 771 168 341 330 517 505 159  68  98
  66 106 758 774  99 714 605 427 648 175  46 724 145 765  70 697 674 149 167 762 524 153  48 119 638 782  71  84
 391 449  53 770  87 756 658 142  82  34 132 766  50 720 407 632 639 380 205 778  72 780 116 173 657 534 466  61
   1 764  90 346 775 690 532  39 623  86 554 768  31 746  60 646 431 338  37 631 743 140 460 731 171 113  95 349

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00027e+07us (= 10002.7ms, 10.0027s)
Wall-clock time (full program): 1.00613e+07us (= 10061.3ms, 10.0613s)
Satisfaction error: 2
Number of search iterations: 1767
Number of local moves: 780 (including on plateau: 280)
Number of local minimum: 125 (including on plateau: 40)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 601 609 655 124 21 16 269 645 7 672 10 647 716 692 362 17 94 157 628 29 282 509 640 110 651 617 484 727 => the sum is 10991 rather than 10990
Problem in row 8: 576 492 118 598 671 150 273 28 604 254 511 594 562 555 265 662 263 62 440 550 8 579 423 9 18 474 587 663 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 419 695 741 754 193   3 167 675 765 170  82 755 720 715 166  24 147 342 282 633 709 107 706  55 248   9 696  12
  72   5 370 716 238  86 151 372 727 229 421 744 576 654 653  54 212 711 773 271  60 208  33 699 211 688 359 697
 272  22 733 746 632  43 561 613 102 199  14 630 668  32 310  42  20  16 288 350 725 185 730 686 645 323 721 682
 713 704 644  17 221  25  76  66  64 458   1 740 610  18 218 714 160 531 764 344 537  40 628 454  88 771 738 646
  34 685 142 584  83 700  99 130 319 146 254 655 300  37  68 748 277  57 757 631 708 115 693 398 245 689 745 691
 557 673 599 427 252 173  49 139 661  79  47 662 615 544 135 719  90  44 676  51 314  28 534 669 608 637 408 600
   6 558 412 703 114 536  29 641 679 162 178 552 570 687 123 522   2  73 533 449 515 140 597 566  23 514 601 505
 590 665  35 513 605 545 582  39 683 122   8 647 434 436 148 489 240  62 587 269 275 470  15 594 302 460 555 620
 649 598  30 461   4 462 225 165  27  26 158 556  46 540 280 551 603 602 512  19 571 614 520 678 440 575 578 500
 468 488  65 442 611 432 548 111  87 260 339 581 363 589 550 672 469  77   7 431  67 206 586 569 553 529 404 486
 466 562 478 616 450 448 444 219  38 549  31 477 312 401  41 541 451  13  63 479 159 539 609 491 504 592 525 492
 593 517 414 423 493 369 516 389  91  70 445  21 506 390  11 565 360 446 535 202 591 416 295 508 443 567 396 418
 331 263 391 467 406 510 409 340  95 456 317 377 307 343 473 459 457 498 422 483 385 453 358  10 572 452 532 424
 559 328 247 278 474 415 298 426 405 413 463 388 355 430 490 198 482 604 294 475 353 428 429 378 502 373 336 169
 433 554 464 521 455 435 313 386 156 441 309 366 507 337 320 519 188 420 308 524 546 287 362 326 382 407 465 259
 303 399 447 322 381 397 329 236 251 742 511 543 710 318 361 471 341 305 400 485 231 374 356 438 371 257 425 286
 410 497 226 227 722 325 348 239 518 297 623 383 402 223 619 495 289 213 723 357 394 384 345 304 281 375 437 334
 228 480 660 758 670 244 256 762 354 607 595 112 270  50 735 222 484 718 242 642 306 352 368 195 209 230 104 137
 299 133 205  92 293 243 680 301 332 652 671 395 292 181 698 364 255 674 784 694 439 379 387 411 330 152 321 333
  89 129 283 346 338 626 290 621 367 658 574 153 769 365 731 376 224 657 617 728 268 563 136 327 232 241 128 154
 157 253 759 186 183 261 351 778 296 717 564 172 246 194 701 316 677 667 143 634 392 659 171 279 702 190 163 179
 216 203 176 168 324 189 781 739 417 724 684 266 347 201 750 262 743 523 217 214 335 783 265 134 707 197 264 161
 121 285 568 233 648 692 768 496 527 191 573 258 182 144 530 145 681 494 187 250 196 776 780 155 560 110 149 291
 612 192 737  80 774 235 772 267 779 177 690 106  94 782 311 204 753 315 276 624 712 200  96 749 126  97 127 103
 763 220 509  84 175 596 585 499 732 542 625 119  45 726 234 210 635 577 284 125 120 760  69 124 752  58  52 770
 638 729 547 108 501 583 487 481 503 736 606 116  98 141 705  93 636 579  85 105 273 207 184 656 180 775 164  74
 215  36  61 643 476 650 639 113 622 629 580 138 174 751 101 766 380 132 100 403  53 651 150  56 664 663 526 618
 777 117  48  75 274 767 237 747 393 538 627  78 472 761 528 249 734 640 131 118 756 666 588  81 109  59  71 349

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.0061e+07us (= 10061ms, 10.061s)
Satisfaction error: 2
Number of search iterations: 1690
Number of local moves: 829 (including on plateau: 347)
Number of local minimum: 119 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0

Problem in column 3: 741 370 733 644 142 599 412 35 30 65 478 414 391 247 464 447 226 660 205 283 759 176 568 737 509 547 61 48 => the sum is 10991 rather than 10990
Problem in column 25: 248 211 645 88 245 608 23 302 440 553 504 443 572 502 382 371 281 209 330 232 702 707 560 126 752 180 664 109 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 752  33   3 248 107 122 121 110 715  59  80 742 463 766 143 771 746 699 164 747 769 698 509  76  48 665 628   6
 774 117 490 767  14 668  32  67 781  62  43 411 532 657  25 765 114 513  50 116 200 595 693 655 233 608 777 231
  93 773 458 184   4 189  24 760 618  45 735 745 481 602  75 638 123 459 119 581 762 108 648  97  31 483 612 543
 106  26 100 776  36 198  95 609 175 216 603 152 726 527 709 783 518 782  20 112 178 238 743 296 775 772 632  87
  89 674 232 436 142 634 167 144 712  27 341 171 660 694  57 732 723 778 180 137 191 134 639 413  58 736 780 309
 222  61 642 493 148 610 208 617 530 343  85 183 601 703 204 629 737 215 133 126 620 192 753 531 323 585 285 211
 203 181 179 710 260 103 739 244 770 363 156 141 751 540 190 333 724 227 113 120 314 763 744 267 154 784 197 720
 214 252 242 646 188 182 237 586 558 147 714 322 561 757 174 419 409 535  77 300 149 125 691 630 187 643 348 697
 124 245 647 266 320 361 287 764 480 258 235 279 569 218 213 269 489 398 301 755 172 177 644 280 250 651 597 741
 318 268 306 511 226 332 522 195 387 658 206 105 649 729 247 355 383 414 761 312 441 324 587 224 130 548 512 340
 444 388 701 455 685 368 276 135 596 311 264 452 727 163 367 578 687 404  64 278 176 256 346 201 448 604 344 272
 210 275 686 719 437 209 304 186 434 165 682 663 371 326 297 421 758 274 349 223 169 352 353 779 271 504 246 327
 291 503 253 329 321 283 728 667 605 622 317 338 462 362 257 286 316 375 225 541 219 345 350 347 396 533 429 290
 205 262 331 254 366 475 417 277 384 385 446 542 465 303 447 506 328 403 450 360 386 310 449 738 307 485 289 420
 342 302 580 351 389 467 369 334 508 359 491 418 305 402 236 432 433 393 443 492 372 281 378 339 412 263 415 484
 554 552 471 399 488 282 560 482 270 472 423 308  88 454 566 261  29 392 550 478 431 406 427 153 551 234 356 354
 567 505 453 170 502 422 408 579 435 313 425 517 382 380 546 426   2 440 529 473 519 468  94 239 376 199 151 470
 325 501 445  79 438 514 547 466 229 394  46  69 565 460 583 424 520 373 536 573 451 500 131 335 549  38 442 457
 568 251 525 118 365 575 401 496 293 400  55 571 202 397 416 377 241 591 461 545 600 582 193 557 521  52 499 138
 564 534 111 294 515 464 381 220 395 476 379 539 129 299 428 524 510 637 570   5  54 538 410 631 498 212 589  84
 606 456 196 474 486 439 574 469 150 669 562 616  35  78 599 128 101  81 555 635   9 526 364 572 497 194 624 295
 607 700 670 430 633 487 407 537 115 702 645 390  73  86 523 230 516  92 284 623 653  37 166  91 594 337  74 288
 636 654 707 672 640  66 495  49  34 662 627 711  47 240 615  44 576  82 704 249 109 161  42 528 683 292  13 652
 681 598 158 358 479 405 588 613 104 559 675  60 132  12 507 494 315 625 611 725 157 185  11 477 692  83  96 590
  71 584 228  22 592 722 139 676 155 265 666 684 391 146 695  17 221 688 650 689 717 661 255  39 656 162  63 136
 713 673  98 168 730 159 678 127 357 734 330  16 259 102 619  99  53  56 680 690 716 614 298 721 664   8  65 563
 641   1 319 593 731 677 733 374 160 556  10 705  28 217 544  19 273  23 671  90 706 718  51  18 679  72 754 626
  70 621 759  68 748 577 553 207  40 768 749 140 336 370 708  30 145  41 740  15 750 696  21 756   7 243 173 659

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00606e+07us (= 10060.6ms, 10.0606s)
Satisfaction error: 2
Number of search iterations: 2702
Number of local moves: 1134 (including on plateau: 497)
Number of local minimum: 186 (including on plateau: 53)
Number of resets: 1
Number of restarts: 0

Problem in row 16: 554 552 471 399 488 282 560 482 270 472 423 308 88 454 566 261 29 392 550 478 431 406 427 153 551 234 356 354 => the sum is 10991 rather than 10990
Problem in row 27: 641 1 319 593 731 677 733 374 160 556 10 705 28 217 544 19 273 23 671 90 706 718 51 18 679 72 754 626 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 419 728 604 678  17 638 241 653  55 459 701 771 198 567  64  59 676 100 478  62 103 683  73  32 723  41 763 404
 591 652 742 215 753 117 673 648  86 764 616 395 535 774  48 142 597  16 762  39  44 781  72  56 550 159 132  31
 709 725 784  47 773 621 582 687 642 553 231 772 135 711  33 162 780  68 462  43 115 560  20 118 149 354  70  84
 665 767 497  77  81 108 529 513 214 650 675 213 607 698 155 228 572 113 195 323 573 752 285  65 718 536  90  91
 680 190 283 182 613 105 599 707 116 715 633  97 666 690  53  40 620 417 154 730 161 221 305 745 239 702 127 200
 632 186 488 134  92 775 583 539 757 260 312 112 654 629 183 253 611 131 192 548 152 719 740 168 110 628 262 140
 445 123 557 148 555 205 468 726 361 232 670 189 167 286 170 157 686 212 173 717 259 747 165 230 731 641 191 779
 449 329 741 358 739 722 760 766  98 269 586 204 751 130 125 209 744 346 172 511 783 324 153  25 114 258  89 235
 496 207 758 158 761 255 700 584 339 331 649 372 210 319 359 490 271 406 208 697 321 708  87 317 405 225 224 133
 768 289 602 138 743 206 778 667 375 278 482 137 672 274 188 216 276 101 759 770 177 340 156 292 355 371 293 287
 554 254 663 309 756 350 749 407 252 310 522 175 328 374 351 306 327 755 202 470 343 185 391 308 552 335 243 219
 627 333 450 422 240 242 618 412 303 141 218 201 435 776 313 444 226 249 383 498 546 322 291 298 277 469 782 474
 493 275 301 302 227 337 738 370 460 777 408 316 280 307 400 353 364 386 368 244 288 299 465 765 499 385 257 326
 246 396 455 615 250 290 166 376 273 430 345 393 453 248 471 344 484 769 356 362 366 348 477 394 486 349 458 390
 238 563 426 281 644 485  45  12 387 410 505 467 261 409 421 541 389 443 487 325 352 451 388 427 401 441 373 418
 311 284 338 398 199 377 102 476 414 420 336 457 581 431 483 378 416 538 425 330 442 448 318 347 297 456 542 446
 266 367 502 334 220 517 342 428 516 341 424 363 433 464 551 480 279 320 519 380 466 256 217 507 432 506  26 534
 411 439 264 637 144 585  88 119 537 533 526 609 384 549 369 491  99  13 109 304 357 463 523 475 524 452 532 454
 222 402 164 489  83 503  61 495 392 122 360 544 657 479 510 447 508 543 423  75 473 399 481 518 494  51 570 525
  34 515 145 520 251 590  95 104  10 381 211 646 121 500 617 729 434 136 562  19 461 623 600 559 630 528 556 413
 267 501  78 664 197 596 229   8 300 640 472 592  23 397 565 588  66 527 589 382  42 429 575 530 576  82 561 514
 263 436 120 677 512 504 196 569 193   9 332 721 636 437 547 571 163 606  27 265 578  71 639 603  57 150 668 440
 176 593 236 521 577  54 160  50 608 595 179 724 268 106 492 674 124 691 169 626 619  60 624 631  15 531 693 194
  22 187 296 703   6 612 365 146 684  14  52 696 568   4 635 564 610 679 566 111 147 294 540 438 622 315 605 509
  46 574 126   7 714 245 545  79 651  80 180  29   1 129 727 658 223 634  94 184 669 295 625 647 689 692 737 710
 181 580  63 587 107 699 128 174 594 659 314  30  93  35 720 685 139 656 716 598 655 151 713 681 282  21  69 660
  85  67 233 746 178  18 247  38 661 614  49  11 272 171 706 705 270 732 704 695 748  37 688 671   5 579 415 645
 694  28  74 643 558 234 203 237 712   3   2 754 601  96 734  76  36 403 736 682 750  24 379 143  58 733 662 735

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.12845e+06us (= 7128.45ms, 7.12845s)
Wall-clock time (full program): 7.18791e+06us (= 7187.91ms, 7.18791s)
Satisfaction error: 0
Number of search iterations: 1020
Number of local moves: 665 (including on plateau: 206)
Number of local minimum: 48 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 107 705 763  71 279 121 147 178  97 291 694 771 697   9 689 685 675 722 668 207 698  52 158  91 268 125 646 376
 758 751 752 755  81  24  22  36  46 269 708  43 691  89 737 742 736 565  25 255 732 375 491 720 205 124   1 257
 380 663 184 657 201 245 288 599 135  66 623 738 740  30 661 718 711 730 226 258 183  68  54 641  14 514 622  42
 684 620  94  15 589  19 100  99  88 113 659 712 710 600 585 669 745 696 681 560  35   6  79 707 399 497 197  32
 493  74 609 264 143 650 151 644  82 188 638 692 526 709 700 649 610 658 539  29  78  28 243   8 261 157 634 533
 535 394 546 263 648 405 144 512  21  47 767 626 665 532 639 688 637 578 122  20 138  16   4 523 169 123 541 687
 118 636 537 672  13 501  51 422 194  93 524 693 545 508 527 695 723 465 579  39 232 472 154 640  87 210 518 142
 225 635 538 502 597 607 228 456 179  63 619 564 388 567 424 445 446 504 647 233  50 204  84 476 215 280 540 274
 318 571 587 239 624 553 214 420 162  37 478 580 628 592 572 482 340 513 536  45 275 249 525 563 170  34 543 140
  69 432 548 335 457 562  73 573 466 452 584 574 448 454 617 662 506 653 298 149 128 145 484 486  26  18 354 437
 198 570 430 176 479 356 186 398 347 370 652 566 517 439 444 509  75 499 455 561 395  92 102 591 534 305 443 301
 406 367 586   5 576 440 251 590 400   2 361   7 547 483 460 496 371 314 464 421 441 253 521 428 461 503 403 433
 360 435 413 109 236 379 223 302 418 338 416 471 402 408 603 260 507 407 447 451 390 378 468 436 442 459 488 344
 434 381 429 346 296 411 276 462 490 423 449 549 327 412 453 306 450 322 473 319 373 386 337 458 365 332 300 431
 330 309 415 494 505 341 329 350 248 320 409 397 325 155 426 470 283 551 511 359 333 601 419 487 522 362 357 382
 385 489 343 345 392 352 474 358 596 425 417 312 374 372 284 339 323 401 324 438 480 629 351 299 326 463 368 331
 756 427 328 674 240 287 475 316 531 679 387 396 252 200 366 229 769 224 111 308 582 516 285 212 289 598 307 246
 557 281 364 273 349 701 530 286 678 363 189 404 481 208 282 278 377 174 389 292 220 498 303 250 608 542 336 777
 384 163 383 704 715 185 577 355 270 774 171 262 266 132 167 267 297 410 717 581 193 604 321 391 667 556 234 244
 660 310 180 714 259 191 716 671 606 765 165 166  61 311 515 190 192 159 161 559 277 555 642 203 602 616 369 175
 500 256 334 568 315 241 492 776 611 550 304  67 317 238 156 295 272 153 146 206 552 519 643 242 690 594 227 726
 655 235 293 467 213 152 766 741 588 779 134 106 342 101 137 173  53 211 130 760 150 746 632 222 682 645 148 729
 630 139 182 414 195 108 612 670 614 747  90 230 133 353 129 217 294   3 569 770 664 625 103 177 627 713 735 247
 105 199  65 112 651 719 728 265 219 605 216 575 168 686  98 254  57  12 115 595 753 618 733 773 683 656  59 271
  27  11 131 761 750 221 677 209 764 554 127 172 187 749 110  56 126  58 727 528 744 510 721  48 119 621 724 558
 290 114 784 676 775 703 739 196 754 469  80  55 164 731  41  10 116 218 734 633 529 477 654 104 495  17  38 393
 485 759  77  31 181 748 743  83 706 615  85 202  49 160  72  70  62 117 120 783 782 666 699  33 520 613 772 757
 141  64  95 348 231 768 778  23 680 593  44  60  40 762  96 136 237 673  76 631 583 702 780 781 544 313  86 725

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00897e+07us (= 10089.7ms, 10.0897s)
Satisfaction error: 2
Number of search iterations: 1726
Number of local moves: 594 (including on plateau: 196)
Number of local minimum: 140 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 380 663 184 657 201 245 288 599 135 66 623 738 740 30 661 718 711 730 226 258 183 68 54 641 14 514 622 42 => the sum is 10991 rather than 10990
Problem in row 26: 290 114 784 676 775 703 739 196 754 469 80 55 164 731 41 10 116 218 734 633 529 477 654 104 495 17 38 393 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 242 672 758  12 675 627  53  17 156 138 659 633 658 709 345 730 691 234 622   6 302 235 753  83  91   4 178 707
 723 130 203  19 557 705 640 664 103 194 651 181 762 663 642 564 125  71 679 159 684 120 682  40 637 187  10 195
  79 701  13 673 700 121 287  60 258 685 588 165 653 710  34 719 645 111 189   2 263 114 706  99 760 702 286 667
 654 153 696  74  87  31 192 605 122 657 680  97 170 628  93 744 734 212 553  88 268 433 661 171 665 230 662 630
 749 638 652 761  42 155 536   7 142 245 597 644  41 745  51 551 593 163  77 160 437 119 692   1 704 233 713 542
 516 618 609 694  76 162 560  66 578 634 266 285 732 587 558 610 441  22 643   8  98  70  39 131 499 320 670 498
 718 538 488 595  21 525 267 113  48 537 554  24 528 629 604 688 492  50 215 606  67  35 611 250 585 110 502 590
 615 568 603 573  23 575 636 358 532 632 533 133  54 743 150 506 297  15   9 598  86 217 412 224 671  75 552 600
 626  89 501 520 666 596 523 172 352 612 518  43 461 570 369 540 697 218 426 228  45 239 479  14 436   5 443 602
 507 107 565 562 545 591 613 272 514  16 248  81 550 635 617 447 541 454   3 511  26 161 379 288 566  73 579 539
 474 485 308 530 561 529 327 100 548 457  18 491 510 427 115 467 398 574 517 333  11 207 607  33 547 549 374 493
 486 419 503 283 415 459 524 472 357 334 495 580 440 417 364 229 509 324 444 496 284 348 439 332 408 167  20 442
 543 508 456 391 396 386 383 452 430 450 109 411 148 341 512  47 292 392 555 446 381 328 497 290 535 344 487 480
 476 556 399 513 387 416 519 313 410 471 401  90 428 265 478 421 448 373 435 403 350 322 395 307 406 338 418 252
 370 420 340 438 365 296 432 571 300 214 490 449 404 336 559 280 521 424 425 402 299 375 394 384 451 366 329 356
 339 397 376 368 466 445 349 362 264 468 141 390 312 455 774 751 275 317 314 355 360 372 337 572 346 463 251 371
 303 185 262 393 385 293 259 686 168 784 353 335 277 388 257 380 724 483 319 434 475 641 462 531 405 180 158 470
 342 291 363 361 198 173 546 473 247 261 776 715 260 331 278 400 164 616 220 367 683 614 270 460 315 625 414 227
 221 316 407 205 347 254  84 431 577 725  55 389 330 325 199 326 780 177 727 623 289 489 305 582 304 619 755 149
 144 216 359 274 306 453 310 223 377 773 484 544 200  65 276 204 295 740 256 708 620 563 208 763 166 655 712  96
 311 731 465 255 209 253 240 711 238 269 656 703 213 129 135 279 343 526 118 660 778 581 458 737  68 515 128 281
 184 321 249 354 222 244 768 631 586  82 136 721 271 246 648  80 429 746 668 273 413 351 152 722 139 690 382 282
 237 378 193 236 741 674 206 186 183 301 750 728 175 202 201 117 145 584 738 191 522 677 137 681 196 646 775 190
 116 494 124 748  94 127 599 569 639 754 318 567 772 102 243 298  29 500 756 225 504 736  95 423 157 720 176 105
  37 226 241 147 576  63 197 716 698  72 146 534 649  27 783 309 210 717  52 589 759 695  62 742 770 650 154 169
 132 409 767 108 601 766 781 481 771  38 232 140 104 231 179 151  69 678 482 739 689 687  78 608  85 583 182 219
  64 101  58 769 594 294  36 752 693  44  30 729 174  59 747  61  46 764 422 733 676 669 624 757  49 464 469 112
 782 323  32 134 735 777 123 527 699 143 106 188 714  25 779  92  57 505 126 647 621 592  56 765  28 477 211 726

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00604e+07us (= 10060.4ms, 10.0604s)
Satisfaction error: 4
Number of search iterations: 1652
Number of local moves: 804 (including on plateau: 237)
Number of local minimum: 140 (including on plateau: 30)
Number of resets: 1
Number of restarts: 0

Problem in column 16: 730 564 719 744 551 610 688 506 540 447 467 229 47 421 280 751 380 400 326 204 279 80 117 298 309 151 61 92 => the sum is 10991 rather than 10990
Problem in column 25: 91 637 760 665 704 499 585 671 436 566 547 408 535 406 451 346 405 315 304 166 68 139 196 157 770 85 49 28 => the sum is 10989 rather than 10990
Problem in diagonal 0: 242 130 13 74 42 162 267 358 352 16 18 580 148 265 559 751 724 616 727 708 778 351 137 423 770 583 469 726 => the sum is 10989 rather than 10990
Problem in diagonal 1: 707 10 702 665 1 39 35 86 228 3 574 509 47 478 336 312 335 776 725 377 711 768 674 94 147 767 101 782 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 764 670  83 112 711 633 646 779 557 121 198 425  47 560 743  45 375 775 205  81 138 699 117 733  43  15  98 617
 754 771  69 774 128 588  77 410 353  74 510 741 398 675 272 106  88 782 127 525 145 142 757 734  39  42 769 140
 103 233 253 576 628 608 555 748  49 182 192 207 591 709 728 164  92 514 169  41 578 767 123 673  23 666 202 616
 739 755  87  73  63 747 159 778 141 461 724 686 146 640 491  12  56 777 322 191  99 685 166 765 513 122 175 417
 126 185 379 772  30 625 647 707 586 197 598 593  94 758 735  33 161 742  85 215 139 745 752 725  79  55  67 160
 124 730 343 773 248 766 642 558 658 155 176 680 570 108 719 132  86 759 165 129  97 740 250 649 188 201 101 243
 179 252 186 113 421 653 783 703 350 290 260 770 221 372 674 316 218 430 603 235 315 710 545 714  48 194 285 150
 244 279 147 265 652 136 692 768 750 364 634 193 753 115 655 307 269 230 577 240 761 299 263 402 284 287 143 281
 274 168  62 760 384 619 643 416 763 431 174 687 256 297 526 223 224 318 659 756 195 376 232 618 177 339 276 137
 163 118 226 204 474 623 522 537 367 780 153 331 621 208 660 264 335 288 784 227 387 261 776 697 213 341 183 247
 257 291 305 245 508 404 414 441 631 325 762 409 358 690 348 632 277 355 286 236 336 317 283 668 302 312 344 254
 301 255 310 356 408 377 390 412 352 453 455 587 389 533 395 298 406 196 505 393 328 394 306 574 280 242 607 488
 333 534 480 478 382 365 542 388 369 180 267 273 612 411 349 326 309 262 683 217 321 345 397 419 259 380 327 781
 323 337 362 313 374 238 436 424 420 516 392 330 422 156 351 371 458 499 467 399 530 459 442 216 563 515 381 296
 463 440 391 338 401 324 486  76 346 342 418 454 479 449 366 403 295 282 304 311 485 543 464 360 518 429 469 354
 476 595 423 569 368 489 438 385 334 511 477 506 373 462 426 400 237 225 292 582 396 329  96 433 378  31 451 308
 413 519 320 332 445 482 427 173 536 109 556 300 110 500 492 294  38 596 211 465 246 405 581 275 620 547 466 532
 439 517 428 528 447 437 214  58  95 677  22 448 661 484 415 565 434   3 456 610 497 472  19 219 494 446 470 435
 529 641 498  64 154 187 228 241  14  78 495 452 538 566 541 460 630 535  53 573 383  90 524 319 520 599 575 503
 471 504 481 657 148  26 457 220 271 527 523 580 359 664  65 432 700 172 199   2 568 507 544  37 131 731 539 475
 444 178 635 493 583 212 278 340   4 473  25 450   1 501  68 386 602 551  70 705 407 443 684 239 572 496 483 667
 548 559 546 613 210  35 249 157 540  50  10  66 119   8 162 567 644 708 590 512 654   6 749 151 665 712 509 651
 637 521 561 144 554 104 181 134 600 679 629  11 553 102  84 727 605 105 636 614  89 171 100  13 571 638 696 531
 648  40 695 549  18 170 203 229 347 744  36 190 589 626  91 706 737  93 688 678 671  24 270  44 594 550 702  59
 490 601 693  52 363 615 120 107  57 585 627 130 370 149 167 681 698  16 357 663 592 609 676   7 704 584   9 268
 656  34 669 552 622 206 502 624 597 303 672 222 487 114 361 729 564  80 200 579 266 184 133  29 751  72 314 468
  21   5 645 231 662 293  32 116 694 701 289 111 234  82  60 689 732 562 691  75 717 251  20 152 746 718 738 723
  71 258 713  54 604  28  27  61 209 682 716 158 639  51  46 722 720 135 606 736 650  17 721 125 715 726 611 189

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00588e+07us (= 10058.8ms, 10.0588s)
Satisfaction error: 2
Number of search iterations: 1941
Number of local moves: 899 (including on plateau: 459)
Number of local minimum: 129 (including on plateau: 51)
Number of resets: 0
Number of restarts: 0

Problem in row 13: 333 534 480 478 382 365 542 388 369 180 267 273 612 411 349 326 309 262 683 217 321 345 397 419 259 380 327 781 => the sum is 10989 rather than 10990
Problem in row 24: 648 40 695 549 18 170 203 229 347 744 36 190 589 626 91 706 737 93 688 678 671 24 270 44 594 550 702 59 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 781  59  82 662 668 640 721 179 738  84  85  71  37 702 730  45  41 563 582 735 136  77  87 696 171 774 655 189
 139 772 707  72 717 588 617 121  23 683 572  74 253  54 354 645 393 585 549 429 170 122 395 603 103 546 679  25
  98 728 560  42 767 768 596  40 746 618 138  31 627  91 234 370  89 680 185 152 644 360 209 779 586 687 104  61
  24 113 740 755 660 744 686 114 134 762 110 108 457  67 620 183 132 434 694 237 703  76 556 726 753 135 218  49
 155 176 674 206 486 771 656 154 119 181 609 117 145 191 760 115 311 733 739 761 285 133 571 775 503 245 258 161
  60 277 599  38 769 723 544 159  95 105 274 197 648 228 678 141 532 534 783 719 227 144 257 178 727 731 450 173
 232 315 626 165 635 778 701 313  27 249 174 118 666  96 690 142 597 671 747 146 202 773 499 143 765 220 172 128
  78 193 654 120 677 177 756 784 126 326 248  83 601 374 625 175 607 570 657 230 712 164 500 188 759 312 169 125
 328 238 782 123 576 413 614 308 776 304 262 333 295 349 610 149 518 757 236 239 180 251 689 777  81 270 282 250
 417 157 575 323 475 196 573 162 300 691 302 190 200 324 766 242 559 591 388 278 226 288 705 271 600 466 530 195
 322 367 222 224 480 615 564 213 167 255 611 539 150 463 212 438 542 327 394 330 667 325 452 444 398 265 673 331
 287 166 714 526 713 346 557 279 297 301 215 225 427 276 291 569 352 527 216 296 223 665 606 267 256 321 292 780
 458 342 343 317 431 266 329 306 366 490 419 260 697 201 380 294 192 489 263 638 524 449 551 574 491 244 261 415
 269 420 357 418 386 376 390 400 310 447 341 399 371 443 391 536 402 280 516 337 355 507 264 199 375 508 587 406
 421 381 340 268 385 461 351 416 344 339 363 440 298 481 290 451 314 348 389 472 455 286 478 454 378 364 512 511
 459 535 373 382 240 470 293 561 365 359 483 474 397 305 334  39 494 309 441 469 550 383 320 372 487 473 246 377
 496 335 442 409  93 361 392 422 319 379 384 439 345 506 448  62 316  47 432 338 519 649 423 522 485 404 411 612
 336 543 541 403 358 675  51 477 368 362 387 462 482 553 405 412  33 408 471 593 538 112 101 414  55 467 504 479
 613 621 425 510  21 396 254 583 453 456 629 484 102 501 465 468 207 151  73 495 579 554 204 476  70 515 284 401
 520 514 148 435 350 498 194 584 464 430 356 502 509 581 214 547 233  88 567 127 437 410  97 436 217 460 517 555
 528 594 424 369  90  99 235 488 566 643 505 525 211 426 158 428 241 307 347 664  26 577 147 540  52 558 497 745
 521 537 137 634 229  46 163 552 513 562 602 716 252 725  86 531 124  28 283 622 523  13 303 529 129 433 704 493
 651 633  66 732  80  17 219 445 580 624  43 661 243  30 289 578 663 247  79  65 130 700 332 281 630 605 698 669
 595 545  63 706  29   7 318 681 684 568  32 743 590 273  58 639 709  75   2 736   1 693 608  15 182 187 592 659
 742  19 168 688 160 259  92 749 231 111 670 619 692 632  56 623 699 492 184 548  36 641 636  94  50 631  22 446
 598 682  48 741 107 156  10 642 604 650 676 770  34 754  14 708 198 186  53  57 652 722 724  16 407  18  12 751
 752   8  64  11 205  44 106 718 647   6 737 764 672 616 299 710 734 210 685  69 653 695   4 153 565 131   3 729
 109 720 116 711 203 100   9 140 628   5 763 646 589 748 533 750 758 353  35 208 637 221 272  68 715  20 658 275

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00613e+07us (= 10061.3ms, 10.0613s)
Satisfaction error: 2
Number of search iterations: 2011
Number of local moves: 722 (including on plateau: 193)
Number of local minimum: 142 (including on plateau: 31)
Number of resets: 1
Number of restarts: 0

Problem in column 1: 781 139 98 24 155 60 232 78 328 417 322 287 458 269 421 459 496 336 613 520 528 521 651 595 742 598 752 109 => the sum is 10989 rather than 10990
Problem in column 7: 721 617 596 686 656 544 701 756 614 573 564 557 329 390 351 293 392 51 254 194 235 163 219 318 92 10 106 9 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 166  65 732 711 734  89 198 768 701  76 458 636  69  20 760  58  35  83 605 736  24 671 139 116 769 771  52 748
 350 707 742 714 184 590 692 782 485  84 657 231  30 329 148  18  97 721  43 638 570 328 110 644 144 223 719  10
  90 409 716 766 460 468 145 508 655 335 776 525  23 129 758  94 486 609 457 740  61 385  66 178 154 513 182 302
 103  87  60 337 283 690 778 658 158 128 722 453 282  48 582 556 446 676 105 119 761 629  34 341 534 779 214 427
 291 567 215 619 173 647 751 663  81 573 600 455 168  80 759 611 225 737 169 712 177 577 210 408 111 206 146  59
  50 161 783 746 147 696 199 185 101 733 668 706 432 452 670 120 183  98 651 635 123 729 374 179 656 136 130 247
 244 598 484 431 650 632 743 249 527 362 735 709 165  21 741 218  68 394 251 652  32 587 118 238 125 347 197 472
 132 122 624 575 762 152 226 744 135 610 473 194 287 300 705 121 233 245 313 682 772 688 201 204 334 281 209 666
 773 516 343 580 520 499 717 589 723 276 235 290 224 297 188 298 186 424  16 594 109 648 308 504 205 143 279 506
 720 483 195 726 604 299 196 192 373 621 383 292 167 252 262 266 312 275 747 241 280 489 395 752 314 228 309 617
 229 612 615 593 358 293 353 270 317 306 268 324 265 274 397 207 113 503 227 507 260 780 339 412 240 451 775 703
 730 288 319 675 377 414 357 354 505 366 368 367 393 237 250 332 131 660 511 521 425 563 327 303 170 216 330 501
 202 724 310 469 153 463 398 379 445 296 364 253 467  51  22 537 583 404 514 359 643 519 434 684  25 321 363 608
 454 406 378 294 346 481 681 124 607 304 285 450 784 320 261 437 512 418 318 325 413 391 380 386 326 344 365 200
  28 407 361 255 390 581 465 388 781 370 411 417 273 448 351 333 471 243 401 474 403 340 496 466 267 372 426 371
 551 529 442 360 410 315  57 544 680 439  42 433 399 230 349 510 272 661 444 382 515  36 673 376 459 449 126 307
 435 678 277 389 538 384  99  31 470 447 440 416 369 456 419 305 430 112 405 487 429 415 702   4 352 618 381 502
 482 323 236 127  63 175 568 631 140 524 543 517 630 495 162 530 545 137 461 269 557 295 494 338 777 107 542 322
 597 257 572 234 548 191  44 114 603  62 528 438 356 441 555 536 627 421  67  85 420 532 541 491 558 539 518 115
 246 526 477 134 462 392 490 566  78 220 584  82 725 677 480 579 336 254 492 500  46  11 476 554 564 258 626 155
 614 540   5 208 301 599  12 150 549 190 547 639 475 757 342 497  14 562 428   7 242 464 606   2 710 571 559 400
 654 232 550 248 316 488  19  79 345 664 187  17 623 756  26 685 522 436 546  56 560   6 569 640 694 749  39 284
 578 222 159 193 574  15 750  38 586 106  77  74 565 601 151 595 727 622 561 117 634 100   8 662 588 699 592 396
 498 697  33 141 443 203  27 535  70 164 104 478 645 585 616 698 674 402 219 533 286   1 667 728  64 174 633 672
 646  37 625 213  49 271 665 156 422 715  40 108 669 641 133   9 591 256 689  53 493 102 767  29 613 628 774 596
 687 355  41  71 217 172 509 553  75 679 176 642 523 738  54 700 653  86 331 259 289 278 683 602  47 264 686 620
  92 387 693  93 189 239 160 649 157 764 138 695 212 718  95 765 755 479 311 211 753 263 142 704 659 423  73 171
 348  55   3  88 739 552 691  91 221 576 181 149 770 637 754 375 763  72 708  96 713 163 731  45 531 180 745  13

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00597e+07us (= 10059.7ms, 10.0597s)
Satisfaction error: 2
Number of search iterations: 2292
Number of local moves: 886 (including on plateau: 258)
Number of local minimum: 177 (including on plateau: 32)
Number of resets: 1
Number of restarts: 0

Problem in row 11: 229 612 615 593 358 293 353 270 317 306 268 324 265 274 397 207 113 503 227 507 260 780 339 412 240 451 775 703 => the sum is 10991 rather than 10990
Problem in row 15: 28 407 361 255 390 581 465 388 781 370 411 417 273 448 351 333 471 243 401 474 403 340 496 466 267 372 426 371 => the sum is 10989 rather than 10990
