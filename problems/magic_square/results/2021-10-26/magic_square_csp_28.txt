@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   9 556 274 350 218 571 180 417 774 121 721 441  70 231 540 745 443 159 618  27  62 405   3 664 705  44 316 526
 563 756 534 600 361 205  84 358 302 488 192 153 778  33 558 254 564 123 494 243 733 296 628 240 430 429 486 105
   8 158 734 455 655 536 552 607 465 217 311 744 602 492 463 462 134 115 326 144  15 518 502 436 396  96 603 244
 569 295 440 694 120 476 359 495 109 722 666 307  10 503  42 651 553 768  74 422 758 717 374 222 128 392 145 101
 635 171 520 736 703 712 141 616 413 595 379 397 215 471 194 629 304 339   6 675 275 270 418 582  24 594 135 412
 702 649 129 470 689 625 432  20 621   1 278 624 394 485 676 146 614 611 399  94 623 438 514 150 263  85 211  47
 499 200 667 743 255 409 632  45 547 236 154   2 691 161 654 138 213 643 460 640 442 414 272 431 541 111 384 406
 555  46 354 219 489 106 718 345 196 737 300 239 395 381 259 142 444 754 630 185 260 367 237 500 333 636  72  73
 572 170 435 299 152 341  38 285 589 452 538 242 362 388 770 483 423 355 305 118  48 773 684 577 137 493 554 730
 537 279 294  37 283 504  95 127  75 543 415 516 501 549  17 522 511 700 524 509 174 581  35 648  32 506 752 724
 102 264 257  16 561 475 203 456 119 708 497  69 191 633 584 738  19 687 309 251 325 247 762 293 508 586 652 478
 510 195 679 353 343 186 682 133 573  83 753 469 434 695 207 269 765 439 559 401 228 631 740 175 117 165  34 172
 166  66 646 671 360  41 364 162  40 197  39 672 454 735 512 542 248  26 670 707 385 155 576 209 402 660 557 728
 261 782  23 233 163 742 645 627 306  49  88 291 187 403 378 390  31 701  28 767 491 650 160 639 421 214 642 678
 391 601 103 515  79 464 346  92 368  64 599 467  82 410  99  13 674 363 517  50 641 377 419  43 308  77 759 276
 331 338 271 781 258 404 380 656 688 373 398 575 400  56 461 335 336 328 609 352 420 348 303 126 297 544 372 250
 344 709 521 112 386 369 167 619 445 310 696 139 484  36 284 327 332 281 393 585 148  55 383 357 322 583 252 496
 437 592 116  93 546 681 539 273 590 125   5 710 199 669 267 407 527 280 124 321 183 204 597 164 622 763 425 531
 529   7 751 182 596 777 265 665 266 578 365  22 225 230 727  87 668  14 234 739 315 479 104 324 719 268 598 256
  91 449 288  12 747 149 122 468  68 612 587 579 711 772 314 749 487 716 202 189 783  58 507 764 653 746 723 375
 227 382 371 545 224  65 519 289 706 551 201  11 644 715 210 608 249  61 532 313 173 177 212 784 680 337 714 490
 769 220 245 606 351 147 568 661 176 779  67 565 620 221 673 198 193 433 766 157 505 130  51 698 282 480 206 223
  52 498 447 525  57 184 757 663 323 136 588 229 523 226 114 474  81 704 713 685 181 550 156 168 761 298 292 605
 560 732 530 647 548 426 458 100 290 457 448 277 301 697 477 533 725  90 366 574 528 637 287  30 658 726 411 334
 190 389  97 318 731 262 370 481 453 319 780 356 562  53 108 320 107 143 188 615 591 662 450 638 567 286 179 775
 459 535 566 408 427 376 387 235 760 241 330 776 151 312 610 692 131 626 178 329 593 110 693 169 208  59  89  98
 342 317 232 238 659 617 216 755 657 613 570 428  54  86  63  76 473  80 748 416 424 720 677 446 472 113 349 253
 580 634 466 132  29 140 771 340  71 683  25 690 750 347 729  60 741 451  18 482 686  21 246 513   4 699  78 604

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.0062e+07us (= 10062ms, 10.062s)
Satisfaction error: 11
Number of search iterations: 2877
Number of local moves: 2451 (including on plateau: 2405)
Number of local minimum: 17 (including on plateau: 277)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 9 556 274 350 218 571 180 417 774 121 721 441 70 231 540 745 443 159 618 27 62 405 3 664 705 44 316 526 => the sum is 10190 rather than 10990
Problem in row 4: 569 295 440 694 120 476 359 495 109 722 666 307 10 503 42 651 553 768 74 422 758 717 374 222 128 392 145 101 => the sum is 11112 rather than 10990
Problem in row 5: 635 171 520 736 703 712 141 616 413 595 379 397 215 471 194 629 304 339 6 675 275 270 418 582 24 594 135 412 => the sum is 11561 rather than 10990
Problem in row 8: 555 46 354 219 489 106 718 345 196 737 300 239 395 381 259 142 444 754 630 185 260 367 237 500 333 636 72 73 => the sum is 9972 rather than 10990
Problem in row 9: 572 170 435 299 152 341 38 285 589 452 538 242 362 388 770 483 423 355 305 118 48 773 684 577 137 493 554 730 => the sum is 11313 rather than 10990
Problem in row 15: 391 601 103 515 79 464 346 92 368 64 599 467 82 410 99 13 674 363 517 50 641 377 419 43 308 77 759 276 => the sum is 9197 rather than 10990
Problem in row 17: 344 709 521 112 386 369 167 619 445 310 696 139 484 36 284 327 332 281 393 585 148 55 383 357 322 583 252 496 => the sum is 10135 rather than 10990
Problem in row 20: 91 449 288 12 747 149 122 468 68 612 587 579 711 772 314 749 487 716 202 189 783 58 507 764 653 746 723 375 => the sum is 12921 rather than 10990
Problem in row 24: 560 732 530 647 548 426 458 100 290 457 448 277 301 697 477 533 725 90 366 574 528 637 287 30 658 726 411 334 => the sum is 12847 rather than 10990
Problem in row 26: 459 535 566 408 427 376 387 235 760 241 330 776 151 312 610 692 131 626 178 329 593 110 693 169 208 59 89 98 => the sum is 10548 rather than 10990
Problem in row 27: 342 317 232 238 659 617 216 755 657 613 570 428 54 86 63 76 473 80 748 416 424 720 677 446 472 113 349 253 => the sum is 11094 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 783  32 603 240 262 690 623 587 433  83 146 292 348 270 320 151 307 705 227 301 342 139 235 756 576 573 424 681
 133  81 409 670 483 427   4 502 444 657 455 723 760 458 178  46 180 524 330 277 624   8 431 116  22 553 341 145
  51 724 497 513 562 246 414 147 171 700 113 256 652 486 651 259 335 695 529 691 165 630  58 106 442 687 568 435
 114 641 313 275 377 517 269 439 584 732 156 730 522 238 507  44 643 157 181 207 540 204  23 744 274 669 419 471
  47 221 600 418 647 279 736 450  54 379 120 543  69 710 257 400 561 331 244 666  70 667 368 637 241 546 304 425
 263 447 745  82 149 635  94 646  12 247 685  30 485 558  59 252 653 602 382 752 118 579 689 360 267 417 234 548
 173 465  76 536 773  84 595 283 781 774 210 224 216 282 501 318 520  73 551 232 104 729  25 421 747 735  57 505
 434 315 473 219  28  77 480 589 644 109 284 780  14 287 200 570 537 550  61 618 261 303 199 470 492 776 488 597
 673 266 472   2  79  89 509 490 574 152 541 555 452 370 176 668 704 191 321 254 208 662 560 168 380 322 693 459
 547 569  95 572  27 249 295 718 605 300 675 636 394 499 583  93 211 117 610 401 591 542 611 478 408 642 580  60
 692 598 742 220 649 291 226 293 489 443 532 105 286 665 110 554  85 193 622 253 484  96 694 196 460  64 294 654
 577 778 363 272 539 761 440  87  68 194 590 333 544 213 751 607 467 521  11 510 650 755 388 103 512 412  52 260
 179 682 399 683   1 633 617  13 111 593 268 727 468 748 314 575  43 174 391 264 731 397 494 154 203 545 503  80
 549 108 316 746 534 563 123 371 387 708 197 456 167 369 411 495 231 182 445 312 346 296 519 699  24 124 628 684
  56 374 696 753 766 606 326 709 248 345  31  88 366 413 407 217 767 620  35 142 429 150 523 310 619 390 518  86
 481 353 615 347 344 423 403 365 581 354  16 177 158 337 349 351 385 768 702 372 697 327 323 359 373 364 355 311
 462 588 166 386 707 487  40  38 357 273 361 511  26 596 237 189 302 594 122 604 711 375 769 567 556 384  17 565
 317  99 188 324  19 437 506 356 367 582 338 475 396 528 190 706 566 725 285 679 112 308 660 278 686 243 448 172
 571 206 436 128 163 212 358 101 281 334 713  48 525 770 765 629 107 733 309 195 239  18 559 719 557 299 376 639
  33 514 415 183 215 428 655 228 223 205 613  91 454 516 612 759 676   6 616 715 352 552 236 626 271  65 325 406
 632 159 155 430 464 329 289 578  78  10 395 339 420  53 214 280 319  41 698 115 209 416 726 100 701 192 631 343
 627 138 757 538 469 202 186 772 504 474 608 426 160 383  50 340 218 740 658 290 674 130   5 530 153 162 508 288
 398 378 297 441 535 185 466 170 754 625 775 393 677 161 298 493 438 169 482 491 721 134 143 663 132  92 229 250
 741 461  63 446 127 661 688 515 265 381 498 728 328 141  36 737  42   9 738 201  98 743 242 119 734 758 184 306
  15 526 449  62  55 527 187 672 717 479 477 137 784 175 703 671 609 599  71 564 245 404 648 533  90  74 392 125
 762 680 389 136 614 720 779 230 148 531  72 664 198 140 678  66  20 129 771   3 362 712 601 276 336  29 222 722
 258 255  97 586 638 225 645 592 476 305 716 121 621  39 777  67 350 410 102 131 144 463 135 457 659 233 749 739
 422 332 164 782 764   7  37  49 634  21 405 402 500 585 656 453 714 432 496 750 763 251 126  45  75 640 451  34

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00604e+07us (= 10060.4ms, 10.0604s)
Satisfaction error: 7
Number of search iterations: 2841
Number of local moves: 2426 (including on plateau: 2375)
Number of local minimum: 16 (including on plateau: 246)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 783 32 603 240 262 690 623 587 433 83 146 292 348 270 320 151 307 705 227 301 342 139 235 756 576 573 424 681 => the sum is 11129 rather than 10990
Problem in row 2: 133 81 409 670 483 427 4 502 444 657 455 723 760 458 178 46 180 524 330 277 624 8 431 116 22 553 341 145 => the sum is 9981 rather than 10990
Problem in row 3: 51 724 497 513 562 246 414 147 171 700 113 256 652 486 651 259 335 695 529 691 165 630 58 106 442 687 568 435 => the sum is 11783 rather than 10990
Problem in row 8: 434 315 473 219 28 77 480 589 644 109 284 780 14 287 200 570 537 550 61 618 261 303 199 470 492 776 488 597 => the sum is 10855 rather than 10990
Problem in row 10: 547 569 95 572 27 249 295 718 605 300 675 636 394 499 583 93 211 117 610 401 591 542 611 478 408 642 580 60 => the sum is 12108 rather than 10990
Problem in row 12: 577 778 363 272 539 761 440 87 68 194 590 333 544 213 751 607 467 521 11 510 650 755 388 103 512 412 52 260 => the sum is 11758 rather than 10990
Problem in row 21: 632 159 155 430 464 329 289 578 78 10 395 339 420 53 214 280 319 41 698 115 209 416 726 100 701 192 631 343 => the sum is 9316 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  23 555  30  46  81 661   2 273 500 411 596 467 735 238  98  97  28 477 526 595 768 412  48 701 652  92 781 663
 240  53 488 706 135 377 718 194 599 303 468 723 158 676 770 493  57 408 296 530 528 753 115 435 120 533  89 319
 662  61  41  45 637 141 336 123 679 323 625  26  15 535 709  59 740 127 742 731 289 549  94 524 762 348 333 702
 564 399 183  17 615 471 703 177 143 151 774 515 584 743 660 629  33   4 136 745 200 195 687 302 239  77 604 440
 722 112 430 670  52 698 453  49 580 632 633 203 125 235 501 360 260 693 173 462 263 458 474 737 410 321 230  54
 277 233 523 334 655 225 734 416 707 215 156 222 374 202 752 234 259  66 705 124  27 475 751 542 291 665 217 609
 553 213 154 557 155 583 180 487  95 299 675 219 771 470 145 562 298 278 511  72 427 605 207 169 571 354 653 727
  96 486 129 463 478 113 681 784 102 758 729 688  90 656 186 724 510 341 184 678 140 128 666 137 286 308 343 106
 208 619 755 559 231 428 342 473 704 175 442 130 249   1 590 612 668 539 356 132  73 227 504 667 242 748  88 228
 161 197 614 746  24 569 767 236 725 304 514 733 224 109 188 537 779  50  43 398 187 315 642 316 777  60 172 603
 330 111 674  10 358 380 307 352 350 600 258  87 560 577 538 672 527 573  31  11 756 591 713 309  51 634 247 383
 763 721 503 649 149 404 421 119 121 782 139 464 720  70 182 160 544 292 736 252  37 759 103 179 623 329 476 253
 403 717 244 288 310 375 218 716 345 250 311 391 419 312 362 361 376 626 229 164 594 325 384 389 284 368 497 732
 116 485 443  93 246 122 394 579 221 747 281 617 454 314 483 418 490 578 396 107 469 754 532 413 379 607  40 212
 306 400 459 447 496 405 346 373 370 498 388 295 521 437 472 444 313 363 480 431 372 381  68 426 446 255 357 441
 337 492 351 516  84 434 502 695 484 505 429 439 382 546 451 407 163 422 423 214 518 349 285 449 658  44 118 293
 611 647 126 772 508 620 621 586 191 696 181 760 271 257   7 715 387 624 513 744 550 199   5   8  39 635 270 318
 741 460 320 300 301  71 545 575 340 220  91 671 714 494 402 401 324 482  64 466  18   9 618 364 189  85 581 328
  65 425 749 192 547  76 276 159 540 512 436 461  62 739 572 152  67 587 541 438 613 272 138 588 601 481 147 554
 282 489 689  69 548 275 262 765 697 415 338 561  38 167   3  56 196 650 648 536 326 305 507  35 322 414 712 685
 457 378 669 216 353 355 424 417 144 644 223 256 520 570 582 274 327 448 522 108 602 211 261 251 598 264 636 280
 568 367  42 585 198 104 390 245 534 639 574  78 171 525 359 690 640 241 628 254  79 680 445 616 153 248 168 769
 456  34 237 517 643 728 110  83 283  63 455 775 664 142 726 452 606  21 610 529 677 101 659 682 148 134 290 165
 761 243 710 593 776 269 166 178 543 100 622 780 563 268  22 206 627 226  58 365 371 131 369 684 331 519 509 294
 630 420 193 491 638 450  12 694  82 133 201 170 465 778 157 556  74 699 397 750 499  14 386 711  32 686 406 266
 210 673 566 645 287 757 392 700 232  86  99  19 146 335 150 592 773 174   6 708 576 589 433 105 558 608 551  20
 432 683 506 117 719 567 209 495 654 339 297  36 730  29 738  13 393 344 395  80 385 552 691  75 631 409 783 267
  16 317 162 347 766 332 479  47  25 190  55 204 265 565 185 114 531 657 641 366 646 651 205 176 597 764 692 279

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.006e+07us (= 10060ms, 10.06s)
Satisfaction error: 10
Number of search iterations: 2273
Number of local moves: 1939 (including on plateau: 1893)
Number of local minimum: 12 (including on plateau: 227)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 23 555 30 46 81 661 2 273 500 411 596 467 735 238 98 97 28 477 526 595 768 412 48 701 652 92 781 663 => the sum is 10556 rather than 10990
Problem in row 2: 240 53 488 706 135 377 718 194 599 303 468 723 158 676 770 493 57 408 296 530 528 753 115 435 120 533 89 319 => the sum is 11284 rather than 10990
Problem in row 3: 662 61 41 45 637 141 336 123 679 323 625 26 15 535 709 59 740 127 742 731 289 549 94 524 762 348 333 702 => the sum is 10958 rather than 10990
Problem in row 12: 763 721 503 649 149 404 421 119 121 782 139 464 720 70 182 160 544 292 736 252 37 759 103 179 623 329 476 253 => the sum is 10950 rather than 10990
Problem in row 17: 611 647 126 772 508 620 621 586 191 696 181 760 271 257 7 715 387 624 513 744 550 199 5 8 39 635 270 318 => the sum is 11861 rather than 10990
Problem in row 18: 741 460 320 300 301 71 545 575 340 220 91 671 714 494 402 401 324 482 64 466 18 9 618 364 189 85 581 328 => the sum is 10174 rather than 10990
Problem in row 24: 761 243 710 593 776 269 166 178 543 100 622 780 563 268 22 206 627 226 58 365 371 131 369 684 331 519 509 294 => the sum is 11284 rather than 10990
Problem in row 27: 432 683 506 117 719 567 209 495 654 339 297 36 730 29 738 13 393 344 395 80 385 552 691 75 631 409 783 267 => the sum is 11569 rather than 10990
Problem in row 28: 16 317 162 347 766 332 479 47 25 190 55 204 265 565 185 114 531 657 641 366 646 651 205 176 597 764 692 279 => the sum is 10274 rather than 10990
Problem in diagonal 1: 663 89 348 239 737 751 605 140 132 43 573 544 361 483 437 382 760 91 512 697 417 390 728 776 491 566 683 16 => the sum is 12654 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 488  44  50 296 235 351 602  37  60   2 714 509 425 564 139 525 511 308 710 722  30 441 519 113 344 456 299 756
 600 666 675  26 608 359 497 353 367 157  56 522 665 200 167 475 513 558  76 633  97  74 469 466 279  13 349 717
 440 459 493 586 768 162 732 385 680 364 104 703 181 769 593   8 276  40   5 616 123 281 578 451 315  85 656 137
 755 334 507 286  23 105 691 136 114 499 502 682  22 581 692 300 504  48 684 331 668 698 380 131 743 223  66 285
 734 244 163 500 134 772 361 318 324 354 554 638 494 378  88 774 239 203 293 437  92 108 182 629 757 508  64 648
 676 245 501 373 228 460 260 471 213 128 468 579 729 748 212 396 597  72 263 479 356 730 671 176  42 708 274 539
 371 420  25 779 205 455 599 462  38 614 649  95 778  16 696 304 610 153 309  87 592 595 390 596 329  15 577 231
 219 144 277 154 165 527 310 544 685 345 765  21  19 177 669 463 328 346 442 142 570 744 151 339 194 161 562  28
 659 477 543 747 284 352 746  45 583 332  41 103 591 267 195  80 443 763 101 323 445 259 366 689 289 489 369 409
 319 783 206 169 472 428 292 660 149 530 297 202 534 674  71 160  89 713 699 193 737 644 645 705 647 265 662  98
 594 555 179 609 377 388  43 636 237 549 254  67 109 185 312 126 624 458 148 478 619 724 180 533 761 387 348 368
  57 110 372 343 122 363 275 491 496 423 464 389 637 721 524  33 480 125 622 615  68 474 735  75 654 424 482 416
 391 630 679 421 663 429 483  94 775 541 116 661 118 498 567 453 556 340  11 152 355 436 551  12  29 773 173  83
 520 226 393 430 186 433 370 358 415 384 454 197 404 413 688 405 406 426 376 606 641 408 506 362  31 156 379 417
 257 240 781 374 452 670  32 741 398 155 751 414 400 382  36 559 392 397 350  81 302 461 542 427 258 236 495 407
  46 253 273 217   3 381 651 261 189 770 574 589 316 218 657 133 632 383 631 313 634 444 135 395 643 517 450 282
 242 196 184 532 621 587 164 187 529 681 357 365 618 127 749 252 209 612  52   1 697 333 138 766 221 603 327 640
 418 728 573 686 736  84 306 626  86 170 288 102 201 546 121 552   6 147 739 521 199  73 723 548 515 566 726   4
 322  93 251  47 690 550 208 143 569 250 401 740 106 435 759 561  63 447 342 465 112 536 716 642 514  17 704 307
 145 762 557 487 305 243 375 784 248 646 386 512  58 166 431   9 271 678 605 623 738  27 625 537 446 301 211 715
  55 584 394 141 588 719 272 321 611 215 484 270 256 120 700 683 360 658 129 337 172  51 115 706 266 701 192 246
 712 565 753  10 650 590 140 278 320  69 234 438 764 572 171 677 216 754 198 290 230 576 117 291 238 635 432  70
 326 702 294 563  39 130 553 528  59 132 526 776 503 667 652 731 777  96 540 124 694 111 191 311 159 338 585 547
 210 485 709 158 771 207 410 227 481 476 687 347 255 422  90 317 707 672 767 233 505 280 295 269 575 523  18 613
 486  54 264 119 655 175  24 760 752 742 298 598 183  61 241 639 287 174 620 695 325 510 411  91 604 470 303 449
 146 330 107 628 225 545 664 341 262 693 168  35 492 518 188 190 745 402 601  82  99 516  65  78 711 490 535 571
 782  34 725 582 538  77 150 750 733 335 178 222 412 229 268 718 100 457 473 653 283 224  14 403   7 531 673 439
  20 627  62 727 247 448 780  53 617 434 220 214 720 336 314 467  49 560 204 758 607 232 580 249 419 399  79 568

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 11
Number of search iterations: 2448
Number of local moves: 2047 (including on plateau: 2001)
Number of local minimum: 17 (including on plateau: 237)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 488 44 50 296 235 351 602 37 60 2 714 509 425 564 139 525 511 308 710 722 30 441 519 113 344 456 299 756 => the sum is 10250 rather than 10990
Problem in row 2: 600 666 675 26 608 359 497 353 367 157 56 522 665 200 167 475 513 558 76 633 97 74 469 466 279 13 349 717 => the sum is 10637 rather than 10990
Problem in row 6: 676 245 501 373 228 460 260 471 213 128 468 579 729 748 212 396 597 72 263 479 356 730 671 176 42 708 274 539 => the sum is 11594 rather than 10990
Problem in row 8: 219 144 277 154 165 527 310 544 685 345 765 21 19 177 669 463 328 346 442 142 570 744 151 339 194 161 562 28 => the sum is 9491 rather than 10990
Problem in row 10: 319 783 206 169 472 428 292 660 149 530 297 202 534 674 71 160 89 713 699 193 737 644 645 705 647 265 662 98 => the sum is 12043 rather than 10990
Problem in row 11: 594 555 179 609 377 388 43 636 237 549 254 67 109 185 312 126 624 458 148 478 619 724 180 533 761 387 348 368 => the sum is 10848 rather than 10990
Problem in row 20: 145 762 557 487 305 243 375 784 248 646 386 512 58 166 431 9 271 678 605 623 738 27 625 537 446 301 211 715 => the sum is 11891 rather than 10990
Problem in row 21: 55 584 394 141 588 719 272 321 611 215 484 270 256 120 700 683 360 658 129 337 172 51 115 706 266 701 192 246 => the sum is 10346 rather than 10990
Problem in row 23: 326 702 294 563 39 130 553 528 59 132 526 776 503 667 652 731 777 96 540 124 694 111 191 311 159 338 585 547 => the sum is 11654 rather than 10990
Problem in row 24: 210 485 709 158 771 207 410 227 481 476 687 347 255 422 90 317 707 672 767 233 505 280 295 269 575 523 18 613 => the sum is 11709 rather than 10990
Problem in row 26: 146 330 107 628 225 545 664 341 262 693 168 35 492 518 188 190 745 402 601 82 99 516 65 78 711 490 535 571 => the sum is 10427 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 349 755  53 662 399 389 780 308 204   7 562 180 564 465  19 770 172 518 615 297 480 177 469 111 166 306 106 752
 548 254 461 573 102 579 570  73 169 319 659 250 502 156 434 599 323 317 190 711  70 689  57  65 202 498 715   1
 730 781 328 440 779 369 131 287 565 224 681 110 350  94  93 453  13 590 137  75 294 510 305 481  30 703 739 698
 213 734 688 696 568 551 754 737 666  72  12 236 617 526 513  27 302 114 571 207 195 282 335  81 679 101 504   9
  54 344   3 741 656 709 298 355 277  97 636  26 497 671 718  82 640 594 758 257 493   2 533 487  47 225 524 266
  80 426 753 520 141  76  43 774 719 680 479  42 152 265 432 621  66   8 330 655 771 700 597 605  62 485 483  25
 763 146 201 582 452  36 613 127 441 546 275 593 147 759 471 248 675  33 398 766  17 595 144  60 569  69 558 706
 549 686 339 199  22 315  99 324 612 776 112 678 744 246 740 352 237 329 340 145 587 197 267 388 532 327 650 198
 251 616 782 193  79 167 677 693 107 278 567 606 256 239 113 170 138 153 726 522 661 418 756 708 429 300 105 280
 182  67 281 366 363 500 383 478 200  49 777 232 495  92 353 158 467 104 545 505 325 769  11 720 728 592 713 535
 221 622 433  44 761 778 451 556 584 252 722 149 247 367 168 519 309 630 733 130 660 263 581  96 488  21  55 150
 784 459 550 326  52 208 685 748 482 710 384 473 690 303 764  15 437 598 216 425 727 310 187 704 258 109 175 214
 402 466 653 732 264 436 516 171 360 427 370 464 385 414 683 447  71 318 311 443  95 188 391 477 489 151 428 438
 377 541 284 421 163  90  28 515 210 410 140 749 374 419 409 695 394 736 244 378 701  38 415 745 422 331 416 345
 400 411 334 348 390 404 382 351 468 420 439 514 343 364 529 405 314 336 357 372 380 387 347 379 376 375 313 552
 684 446 486 624 723 638  24 490  45 608 174 135 386 699  41 602 255 475 424 185 108 648 544 430 633 687 611 626
 209 322 554 783 423 338 547 116 649 669 508 295  37 124 629 742 705 413 132 396 161 316 460  56 368 412 219 407
 645  91 501  77 580 534 123 191 164 395 253 511 657 356 196 260 760 304 393 206 454 591 539 517  68 721 229 674
 716 301 664 217 435 103 542 381 341 243  86  59 155 618 610 472 767  85 249 538  83 536 220 574 668 641 241 445
 463 589 122 283 273 738 321 494 183 585 751 230 119 555 543 162 136 673  34 173 276 525 289 474 512 603 288 596
 457 332  58 118 470 707 712 392 499 639 609 634  89  46  31 620 731  74 561 528 291 358 702  35 458 223 346 270
  51 222 406 403 211 694 218 642 442 307 286 503 560 576 691 292 614 235 121 159 600 408 725 179   6 747 676  16
 227 157  88 215  63 165 192 226 665 506 176 772 654  20 572 647 240 627 646 537 637 456 139 566 186 540 575 496
 397 632 667 296 148  18 245 120 773 757 342 203 373 115 269 714 444 507 449 604 401 337 117  87 762 455  29 729
 290 238 272  48 631 233 242  40 285 134   4 670 484 491 271 142 588 312 194   5 557 735 530 651 601 523 125 509
 231 178  78  64 692 628 644 635 746 476 333 724 775 563 293 100 365 583 663 607 212  61  23 184 354 133 274 371
 619  14 234 361 623 359 450 189  50 143 205 521 299 697 279 417 559 652 643 586 492  32 625 362 154 531 765 129
  98 160 717 658 527 228 320 577  84 261 448 431  39 750 126 259 268 672  10 578 262 462 682 768 743 181 128 553

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00586e+07us (= 10058.6ms, 10.0586s)
Satisfaction error: 5
Number of search iterations: 3656
Number of local moves: 3106 (including on plateau: 3054)
Number of local minimum: 24 (including on plateau: 323)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 349 755 53 662 399 389 780 308 204 7 562 180 564 465 19 770 172 518 615 297 480 177 469 111 166 306 106 752 => the sum is 10635 rather than 10990
Problem in row 2: 548 254 461 573 102 579 570 73 169 319 659 250 502 156 434 599 323 317 190 711 70 689 57 65 202 498 715 1 => the sum is 10086 rather than 10990
Problem in row 12: 784 459 550 326 52 208 685 748 482 710 384 473 690 303 764 15 437 598 216 425 727 310 187 704 258 109 175 214 => the sum is 11993 rather than 10990
Problem in row 16: 684 446 486 624 723 638 24 490 45 608 174 135 386 699 41 602 255 475 424 185 108 648 544 430 633 687 611 626 => the sum is 12431 rather than 10990
Problem in row 25: 290 238 272 48 631 233 242 40 285 134 4 670 484 491 271 142 588 312 194 5 557 735 530 651 601 523 125 509 => the sum is 9805 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 275 461 367 178 565 569  85 705 451 454  96 630 314 664 165  82 409 134 345 607 378 115 594 299 287 230 747
 670 759  13 761  93  33 118  43 242 780 186 385 464 767 770 133 400 113 551 412 413 699 477 203 335 131 702 641
 420  80 723  83 264 421 316 554 632 634 559 156 624 581 257 678 395  67 677 248 182  11 374 506 773 452 135 188
 155 517 246 709  22 603 673 575 756 237 217 776 722  28  20 531 475  17 252  90 326 762 187 288 497 566  35 708
  95 445 547 482 491  70 416 284 175 334 347  45 577 397 302 748 183 145 629  51 376 111 290 319 301 128 112 291
 726 457  32 150 434 620  61  49  39 498 718 436  50 567 127 766 674 355 615   1 123 168 536 663 654 281 724 184
 181 613 633 597 622 226 589 387  40 103 730 599  16 727 192 322 207 437 394 602 744 617 585 153  30  18 403 223
 260 783 271 732 274 472 265 560 423 298  77 296 489 679 739 735 515 310 136 661 154 240 215  69 361 734 516 329
 159 682 537 324 532  73 490 609 529  88 623 535 239 612 627   8 418 777 525 553  64 234 408 456 370 384  55  79
 327 144 484 243 276 571 447 279 614 545 638 710  52 528 596 171 164 538 232 736 109 460 616 306  53 429 765 584
 740 293 655 157 473 146 549 331 524 639 471 205 250  94 435 176 211 479 388 320  98 647 108 446 501 750 635 269
 606 481 764 224 307 142 202 488 283   5 712 179 659 742 268 695 483 191 417 341 465 694  63 760 541 631 449 427
 312  76 101 518 323 753 286  60 105 706 653 669 511 295 691 684 229 380 132 533 649 550 508  25 625  41 405 170
 199  87 442 433 415 579 365 745 424 393 294 346 407 379 419 357 563 414 459 366 399 368 204 382 621 448 411  71
 102 450 779 685 494 731 425 717 443 140 333 504 151 486 362 289  91 721  26 774 544 562  24 713 660 666 590 104
 396 401 303 356 406 350 769 426 348 373 377 444 343 358 359 318 578 330 557 336 521 273 391 353 601  81 375 267
 440 510  48 552 561 225 676 130 228 715 148 297 476 125 725 194 285 543 746 611 505  86 364   9 522 763 197 309
 572 354 263 167 751 340 523 441 166 592  10 278 738  42 431 139 640 338 315 681  29  23 339 580 480 657 588 513
  46  12 598 587   2 185 209 360 645 754 467 509 768 692   6 238 743 534 233 502 386 342 311 701 371 220 114 455
 256 213 308 208 728 117 463 628 216  34 244 775 143 259 300 720 325 530 758 492  15 206 752 503 305 556 195 741
 546 251 458 468 219 262 349 138 771 667 583 261 163 247 351 656 212 402 520 196 485 703 683 200 576 280 174 169
 313 158 126 201 160 573 190 189 704 292 608 711  59 605 564 392 652 241 100 626 593 218 586 619 321   3 644 542
 618 648 124 466 690 231 210 671 227 328  99  27 496 514 527 249 772 193  68 122 696 253 161 332  97 363 672 719
 487 686 688 637 141 689 749 137 381 214 470 120 372  21 548 198 430 428 177 173 755 526 236  74 680 687 258 697
  14 235 254 438 651 519 152 781 344  57 149  84 693 272  62 180 129 110 500 119 675 737 757  72  37 646 453 636
 404 582 107 121 782 337 432 714  19 574 398 698 116 474 507  78 478 729  92 410 255 390 595 665   7  58 499 469
 462  65 383 277 162 495 493 555 568 222  56 245 512  38  66 570 352 668 650 658 540  89 716 221 266 172  44 422
 700 733 642  47 539 662   4  54 439 317 369 604 270 147  75 600 304 591 707  31 282 643 389 778 106 558 610  36

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00596e+07us (= 10059.6ms, 10.0596s)
Satisfaction error: 12
Number of search iterations: 2692
Number of local moves: 2262 (including on plateau: 2217)
Number of local minimum: 21 (including on plateau: 258)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 670 759 13 761 93 33 118 43 242 780 186 385 464 767 770 133 400 113 551 412 413 699 477 203 335 131 702 641 => the sum is 11294 rather than 10990
Problem in row 5: 95 445 547 482 491 70 416 284 175 334 347 45 577 397 302 748 183 145 629 51 376 111 290 319 301 128 112 291 => the sum is 8691 rather than 10990
Problem in row 6: 726 457 32 150 434 620 61 49 39 498 718 436 50 567 127 766 674 355 615 1 123 168 536 663 654 281 724 184 => the sum is 10708 rather than 10990
Problem in row 8: 260 783 271 732 274 472 265 560 423 298 77 296 489 679 739 735 515 310 136 661 154 240 215 69 361 734 516 329 => the sum is 11593 rather than 10990
Problem in row 10: 327 144 484 243 276 571 447 279 614 545 638 710 52 528 596 171 164 538 232 736 109 460 616 306 53 429 765 584 => the sum is 11617 rather than 10990
Problem in row 12: 606 481 764 224 307 142 202 488 283 5 712 179 659 742 268 695 483 191 417 341 465 694 63 760 541 631 449 427 => the sum is 12219 rather than 10990
Problem in row 15: 102 450 779 685 494 731 425 717 443 140 333 504 151 486 362 289 91 721 26 774 544 562 24 713 660 666 590 104 => the sum is 12566 rather than 10990
Problem in row 23: 618 648 124 466 690 231 210 671 227 328 99 27 496 514 527 249 772 193 68 122 696 253 161 332 97 363 672 719 => the sum is 10573 rather than 10990
Problem in row 24: 487 686 688 637 141 689 749 137 381 214 470 120 372 21 548 198 430 428 177 173 755 526 236 74 680 687 258 697 => the sum is 11659 rather than 10990
Problem in row 25: 14 235 254 438 651 519 152 781 344 57 149 84 693 272 62 180 129 110 500 119 675 737 757 72 37 646 453 636 => the sum is 9756 rather than 10990
Problem in row 27: 462 65 383 277 162 495 493 555 568 222 56 245 512 38 66 570 352 668 650 658 540 89 716 221 266 172 44 422 => the sum is 9967 rather than 10990
Problem in row 28: 700 733 642 47 539 662 4 54 439 317 369 604 270 147 75 600 304 591 707 31 282 643 389 778 106 558 610 36 => the sum is 11237 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 138 503  98 547 693 536 140 459 271 111 229 591 501 683  68 173 118 294 774  99 147 295 773 218 670 635 542 684
 313 752 540 258 365 371 180 633 129 505 651 289 319  52 580 381  59 121 514 473 521 509 512  12 124 767 743 472
 500 152 195 354 451 141 446 696 215 249  81 393 598  92  70 780 643  60 222 717 737 742 705 266 562 453  86 384
 321 120 214 603 425  31 677 701 263 238 279 726 318 455 101 468 379 778  49  27 442 404  96 640  43 765  89 216
  38 502   4 223  42 233 408 584 599 175 740 388  47 452 698   8 734 524  32 193 614 636 760 685 627 492 322 230
  73 411 144 506  85 541 585  84 672 714 211 123 429 708  14 374 660 716 746 625  45 587 206 601 383 143 497 107
 748 588 292 157 532 307 427 706 464 220 314 430  97  34 224  88 154 530 738  78 303 727 729 479 772 112 454 286
 710 518 127 634 148 724 304 534 484 569 583 413 187 602 276 520 549 278 265 572  37 675  71 113 256 477 359   5
 529 718 486 248 582 416 153 358 448 735 475 558   2 275 552 476 226 554 496 707 100  17 188 739  35 555 202 160
 419 126 435 561  24 267 628 191 596 624 282 690 179 239 329 623 353 666 648  58 720 135 652 508 663  46  74 254
 775 567 348 744 316 137 296  63  56 604 284 171 566 656 550 723 617 579 298  29  57 268 142 783  91 168 662 629
 260 356 426 647 403 183 678 575 241 465 725 526 564 470 722  79 255 181 458 236 122 102 457 172 466 491 443 287
 543 488 386 483 456 420 375 306 341 495 437 493 297 330 368 394 308 485 376 444 219 338 431 423 377 409 340 228
 553 382 320 507 519 352 132 395 405  53 556  30 231 747 339  66 513 504 438 410 447 345 332 422 396 463 421 712
 432 170 277 619 756 253 343 350 134 499 237 312  62 581 546  94 576  20  41 531 697 515 335 782 146 691 621 370
 418 337 349 317 397 184 389 372 436 324 703 373 366 331 398 600 355 367 309 407 334 302 360 755 467 243 450 347
  18 659 733  90 136 240 592 776 609 650  67 434 654  22 557 482   6 169 225 327 440 133 369 736 777 480  75 433
 115 378 310 205 291 674 768 362 565 545 469 771 103 391  36 402  83 590 537  39 114 533 637  26 527 305 649 657
  95 273 336 262 595 668 589 200 346 281 632 186 571 586 766 478 227 159 189 280 646  19  25  44 676 626 535 700
 167 299 687 406 679 272 176 166 400 489  13 196 658 671 235 665 441 428  72 357 610 163  15  50 424 285 246 494
 759 250 741 615 323 620  55 177 638 328 574 217 251 257 244 661 387 664 194 511 721  82 207  93 209 110 449 653
 351 203 560  61 417 762 326 325 490 210 704  33 688 252 461   3 699 130 213 544 538 764 563 559 551 247 174 162
 399 208 749 763 655 481 594  64 344 522 106 158 781 155 117 212 264 753 487 644 128 415 109  69 198 719 165 731
 692 770 197 151 119 131 392 145  77 548 364 539 715 498 667 245 630  40 460 779 333 711 474 192 616  23 182 300
 694 412 516  21 618 611 274 754 745 390 290 695 315 573 689 445 606 385 730 682 164 769 622 570  51 361 709  65
 301   1 641 528 156 750  76 414 221 288 593 612 517 150 673 510  11 190 232 761 784  28 269  87 751  80 758 608
 613 178 311   9 702  54 342 161 597  10 108 242 261 680 525 578 757 686 642 201 363 577 270 732 125 116 104 293
  16 669 568 471 105 631 645 439 204 149 283 401 713  48 185 462 380 139 605 259 607 199 681 234   7 728 639 523

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00032e+07us (= 10003.2ms, 10.0032s)
Wall-clock time (full program): 1.00617e+07us (= 10061.7ms, 10.0617s)
Satisfaction error: 8
Number of search iterations: 2477
Number of local moves: 2102 (including on plateau: 2053)
Number of local minimum: 13 (including on plateau: 232)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 313 752 540 258 365 371 180 633 129 505 651 289 319 52 580 381 59 121 514 473 521 509 512 12 124 767 743 472 => the sum is 11145 rather than 10990
Problem in row 4: 321 120 214 603 425 31 677 701 263 238 279 726 318 455 101 468 379 778 49 27 442 404 96 640 43 765 89 216 => the sum is 9868 rather than 10990
Problem in row 11: 775 567 348 744 316 137 296 63 56 604 284 171 566 656 550 723 617 579 298 29 57 268 142 783 91 168 662 629 => the sum is 11179 rather than 10990
Problem in row 17: 18 659 733 90 136 240 592 776 609 650 67 434 654 22 557 482 6 169 225 327 440 133 369 736 777 480 75 433 => the sum is 10889 rather than 10990
Problem in row 18: 115 378 310 205 291 674 768 362 565 545 469 771 103 391 36 402 83 590 537 39 114 533 637 26 527 305 649 657 => the sum is 11082 rather than 10990
Problem in row 20: 167 299 687 406 679 272 176 166 400 489 13 196 658 671 235 665 441 428 72 357 610 163 15 50 424 285 246 494 => the sum is 9764 rather than 10990
Problem in row 25: 694 412 516 21 618 611 274 754 745 390 290 695 315 573 689 445 606 385 730 682 164 769 622 570 51 361 709 65 => the sum is 13756 rather than 10990
Problem in row 27: 613 178 311 9 702 54 342 161 597 10 108 242 261 680 525 578 757 686 642 201 363 577 270 732 125 116 104 293 => the sum is 10237 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  43 661  90 515  60 283 222 454 477 522 287 537 142 503 484 627 164 398 590 310 449 199 762 322  65 599 577 648
 618  23 767 528 737 440 463 569   1 292 201 587 111 145 192  57 705 782 777 420 138 745  63 175 673 629  81  71
 760 531  88 109 365 604 143   3 180 133 195 117 670 623  17 357 236  11 288 544 238 536  76 639 693   9 466  52
 613 106  35  53  44 388 638 150  26 593 492  34 130 220 271 778 694  14 115  40 637  16 158 152 622 704 343 591
 621 226  99 658  62 727 279 517 108  33  96 620 369 451 104 733 543 742 768 134 241 124 753 467 619  75 486 335
 332 491 275  67 113 169 765 203 594 764 609 469 580 336 529 654 125 187 476 284 206 783 325 472 571   6 107 498
 219 407  72 741 266 366 617 606  15 701 553  32 641 678 770 141 110 159 735 726 751 247 464  78 215 208 462  10
 233 176 239 216 519 729 174 524 596 660 375 140 525  87  49 212 736  98  59 615 585 447 251 721 285 649 151 758
 669 173 202 300 272 747 675 632 267  31 232 435 234 566 473 561 240 254 179 757 713 229  56 235 314 581 548 415
 211 731 683 392 542 393 378 513 552 296 616 732 147 523 191 128 510 651 520 273 137 676 259 194 652 456 488 317
 722 646 209 207 659  29 568 421 210 516 250 246 118 444 628 395  91 582 605 505 588 170 225 720 397  47 671  83
 545  25 573 493 100 690 189 260 126 324  12 253 642  61 633 348 707 600 298 687 749  82   4 200  39 205 282 313
 353 607 521 474 625 496 341 532 323 264 347 389 354 746 356 304 416 361  93 404 401 346 344 327 223 376 315 352
 320 319 412 364 433 368 612 302 359 437 381 383 624 772 723 166 443 280 129 408 116 382 394 355 374 385 326 423
 471 390 350 414 428 490 489  97 386 425 367 214 334 289 371 452 419 431  22 417 538 441 349 439 446 430 436 655
 479 689 711 156 204  84 146 698 290  74  80 309 706 784 663 418   8 688 734  21 697 595 603 153 213 448 312  27
 405 507 514 331 635 149 101 481 434 458 502 465 743 438 422 411 342 445 139 426  64 403 427 501 329 457  19 442
 719 255 685 692 712 160 578 185 360 399  86 102 483 708 363 541 662 494 597  79 540 575 307  73 218 740 699 193
 131 384 769 574 135 495 424 330 739 647 480 677  41  58 345 432 305 406 410 171 308 362 666 750 554 183 730 400
  69 306 227 611 714 281 144 665 691 155 686 550 188 163 664 270 475 121 162 584 172 773 301 576 316 276 182 668
 650 598 506 297 526 527  45  28 724 602  13 592 221 338 311 459 557 295 478 460 534  51 112   2 487 497 667 413
 387 351 396 450 509  68  38 728 682 178 468 766 738  50 559 217 242 482 504  37  95 572 717 715 184 114 589 154
 333 644 262 429 119 291 551 328 565 518 546 535 763 614 274  46 555  92 703 776 372 657 631 601 470 754 640 268
 257 286 402 197 373 244 710 755 157  66 196 358 679 377  77 167 453 547  24 579 258 653 674 744 318 508   7 570
 461 779 122  54 702 680 243  85 261 177 656 245 530 168 556 583 123 695 485 630 132 409 563 256 370 237 277 634
 190 539 564 549 269 562 228 761 684 340 781 643  48 248 103 645  55 379 263 252 512  70 560 165 294 700 265 321
  18  20 718 780 231 500 533  36 672 626 709 455   5 558 181 752 775 186 748 148 725 249 230 567 293 380 278 608
 161 120 499 339 636  30 696 127 511 759 774 105 224  42 681 136 299 610  89 303  94 198 716 391 756 337 586 771

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 12
Number of search iterations: 2589
Number of local moves: 2202 (including on plateau: 2158)
Number of local minimum: 15 (including on plateau: 268)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 760 531 88 109 365 604 143 3 180 133 195 117 670 623 17 357 236 11 288 544 238 536 76 639 693 9 466 52 => the sum is 8683 rather than 10990
Problem in row 4: 613 106 35 53 44 388 638 150 26 593 492 34 130 220 271 778 694 14 115 40 637 16 158 152 622 704 343 591 => the sum is 8657 rather than 10990
Problem in row 8: 233 176 239 216 519 729 174 524 596 660 375 140 525 87 49 212 736 98 59 615 585 447 251 721 285 649 151 758 => the sum is 10809 rather than 10990
Problem in row 10: 211 731 683 392 542 393 378 513 552 296 616 732 147 523 191 128 510 651 520 273 137 676 259 194 652 456 488 317 => the sum is 12161 rather than 10990
Problem in row 11: 722 646 209 207 659 29 568 421 210 516 250 246 118 444 628 395 91 582 605 505 588 170 225 720 397 47 671 83 => the sum is 10952 rather than 10990
Problem in row 12: 545 25 573 493 100 690 189 260 126 324 12 253 642 61 633 348 707 600 298 687 749 82 4 200 39 205 282 313 => the sum is 9440 rather than 10990
Problem in row 18: 719 255 685 692 712 160 578 185 360 399 86 102 483 708 363 541 662 494 597 79 540 575 307 73 218 740 699 193 => the sum is 12205 rather than 10990
Problem in row 19: 131 384 769 574 135 495 424 330 739 647 480 677 41 58 345 432 305 406 410 171 308 362 666 750 554 183 730 400 => the sum is 11906 rather than 10990
Problem in row 23: 333 644 262 429 119 291 551 328 565 518 546 535 763 614 274 46 555 92 703 776 372 657 631 601 470 754 640 268 => the sum is 13337 rather than 10990
Problem in row 24: 257 286 402 197 373 244 710 755 157 66 196 358 679 377 77 167 453 547 24 579 258 653 674 744 318 508 7 570 => the sum is 10636 rather than 10990
Problem in row 25: 461 779 122 54 702 680 243 85 261 177 656 245 530 168 556 583 123 695 485 630 132 409 563 256 370 237 277 634 => the sum is 11113 rather than 10990
Problem in row 27: 18 20 718 780 231 500 533 36 672 626 709 455 5 558 181 752 775 186 748 148 725 249 230 567 293 380 278 608 => the sum is 11981 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 102 781 181 148 517 199 777  66 550 775 668 438 223 229 434 768  89 748 261 121  84 463 173 129 672 495 205 694
 159 757 316 160 542 555 443  27 310 760 769 528 446 332 156 481 497 621 171  51 119 459  99 559 461 623 512  77
 741 734 782 624 402 743 218 692 540 219 144 289 165 143  33 486 294 113 607 498 325 236 473  59 590  17 653 170
 246 518 185 691 312 267 220 331 758   3 210 580 632  52 708 202  60 715 436 681   5 658  80 673 314 767 153 533
 211 529 728 778 133 448 139 401 192  14  35 714 123 732 106 664 711 654 140   9 647 230 746 507 428 163 501 307
 125 180 570 213 189 206 254 703 186 470 751 447 118 158 764  18 657 467 482 304 474 690 611 733 545 315 190 161
 650 152 342 490 468 479 589 636 345  30  86 107 747 670 183 465 259  41 237 643  43 603 142 617 750 573 738 567
 466 284 546 115 629 585 491 627 154 147 660 745 346 449  85 618 136 257  72 697 581 114 575 195 513 242 305 356
 395 394 215 562 686 693 109  21 552 595 553 536 248 721 527 207 547  91 265 130 772 502 565 188  70  62 656 128
 227 120 432 283 131  47 105 602 456 508 485 250  87 503 535 759 635 579 514  64 538 458 784 302 301 519 178 588
 216 530 358  88  78  16 722 263 520   8 319 290 705 323 598 155 548 442 776 146 235 720  26 695 291  82 516 682
 441 532 634 726 625 238 167 252  11 662 176 282 272 103 260  92 504 564 225 191 388 112  54  46 752 454 718 333
 515 256  12 522  83 337 713 288 663 453 212 397 330 771 620 702 231 665 609 593 740 137 644 652 179 576  49 124
 476 472 411 392 452 475 430 399 406 396 433 365 415 377 412 116 420 424 407 410 378 417 439 425 421 367  94 361
 749 385 400 343 370 419 390 373 413 387 352 380 368 371 384 351 355 391 375 744 405 327 360 489 287 382  81 359
 723 429 493 300 731 719 322 100 249 379  32 645 383 233 369 318 765 104 710 469  71 704 326  22 126 509 435 324
 357 253 234  65  58 374 642 604 631 347 561 451 661 462 122 739 204 338 244 276 457  10 403 478 480 117 245 150
  75 335  96 655 619 484 308 641 262 707 753 194 524 197  34 251  74 221 303 727 228 560 280 557 328 646 568 363
 488 293 701  42 616 292 531  69 774 274 127 687 766 675 696 431 313 742  63 268 651 615 317 543 426 423 232 709
 698 295  48 510 285 669  29 601 168 640 685 164 500   4 761  37 464 409  97 716 762  61 594 386 201 270 329 298
 455 277 296 437 278 418  67 239 729 101 281 779 389 549 264 639 736  93 534  76 240 350 198 169  24 717 622 735
 336 569 699 354 348 610 725 366 376 551 628 200 582 404 193 243 132 134 659 258 177 754 224 499 241 172 537  19
 483 398 667 222 674 166 671 450 492 182  57  28 217 203 597 187 340 255 600 427 712 445  79 677  39 393 680 649
  45 688 135 755 151 175 320 306   6 724 571 145   1 700 440 633 689 269 539 460 108 344 496  13 783 730 208 556
 174  53 157 111 214 780 592 523 341 364 477  98 679 587 209 773 525 577 349 572 612  20 684 247 770  31 578 372
 506  90  95 266 471 544 299 110 676 599 279 638  56 678 614 608 184 334  44 408 297 149 541 511 586 309 286 275
 444  73 763 584 566  50 521 563  68 422 648  55 416  25 381   7 606  36 605 637 311 626 321 596 271 683 138 574
 487 613 494 554 362   2 196 737 162 273  38 558 591 339 505  40  15 706 666 414 630 226 756  23 141 353 583 526

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00624e+07us (= 10062.4ms, 10.0624s)
Satisfaction error: 11
Number of search iterations: 2911
Number of local moves: 2452 (including on plateau: 2406)
Number of local minimum: 11 (including on plateau: 279)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 125 180 570 213 189 206 254 703 186 470 751 447 118 158 764 18 657 467 482 304 474 690 611 733 545 315 190 161 => the sum is 10981 rather than 10990
Problem in row 7: 650 152 342 490 468 479 589 636 345 30 86 107 747 670 183 465 259 41 237 643 43 603 142 617 750 573 738 567 => the sum is 11652 rather than 10990
Problem in row 11: 216 530 358 88 78 16 722 263 520 8 319 290 705 323 598 155 548 442 776 146 235 720 26 695 291 82 516 682 => the sum is 10348 rather than 10990
Problem in row 12: 441 532 634 726 625 238 167 252 11 662 176 282 272 103 260 92 504 564 225 191 388 112 54 46 752 454 718 333 => the sum is 9814 rather than 10990
Problem in row 13: 515 256 12 522 83 337 713 288 663 453 212 397 330 771 620 702 231 665 609 593 740 137 644 652 179 576 49 124 => the sum is 12073 rather than 10990
Problem in row 17: 357 253 234 65 58 374 642 604 631 347 561 451 661 462 122 739 204 338 244 276 457 10 403 478 480 117 245 150 => the sum is 9963 rather than 10990
Problem in row 19: 488 293 701 42 616 292 531 69 774 274 127 687 766 675 696 431 313 742 63 268 651 615 317 543 426 423 232 709 => the sum is 12764 rather than 10990
Problem in row 20: 698 295 48 510 285 669 29 601 168 640 685 164 500 4 761 37 464 409 97 716 762 61 594 386 201 270 329 298 => the sum is 10681 rather than 10990
Problem in row 21: 455 277 296 437 278 418 67 239 729 101 281 779 389 549 264 639 736 93 534 76 240 350 198 169 24 717 622 735 => the sum is 10692 rather than 10990
Problem in row 25: 174 53 157 111 214 780 592 523 341 364 477 98 679 587 209 773 525 577 349 572 612 20 684 247 770 31 578 372 => the sum is 11469 rather than 10990
Problem in row 26: 506 90 95 266 471 544 299 110 676 599 279 638 56 678 614 608 184 334 44 408 297 149 541 511 586 309 286 275 => the sum is 10453 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 414 110 329 393 495 755 664 730 360 144 570 650 164 122 210 308 506 237 442 695 628  15 262 544  53 325 104 761
 447 334 600 275 575 261 614 251 341 667 700  16 281 741 549 131 212 326 222 175 294 248 245  25 304 663 733 508
 226 440 691 456  22 149 461 124 708 151 773 521 591 246 678 523  33 347 139 703  14 312 767 309 432 701 159 314
 782 115 369 413 381 645 466 379 394 547 286 653 712 384 208  26 402  58 214  66 355  30 357 272 737 613 545 202
 778 784 228  65  87 170 561 499  67 577 176 475 187 629 531 130 607 572 696 530   8  84 338 770 642 649  42 603
 118 604 177 781 313 478 702  46  49 646 321 146 593 608 236 112 285 623 160  50 235 368 215 244 477 722 257 462
 391 396 707  71 254 152  41  18 589 566 109  27 671 537 290 117 716 278 661 677 344 597 697  79  10  35 188 721
 438 315 229 335 147 780 358 539 183 747 637 615 647 331 718 330 291 548 258  21 587 565 263 715 764 219  31 106
 311  11 339 674 567 660  47 324 560 489 240 180 772  40 446 140 121 585 429 500 182 173 734 503 571 452 490 450
 403 238 670 367 459 522 685 136 439 434 532 218 501 349 507 469  64 119 512 373 527 480 586 351  55 279 310 405
 753 724  28 756 610 362 302 300 207 332 387 343 128 421 774 714 568 538 732  74 516 397 526 231  94 563  36 555
 390 740  19 266 656 317 404 760 306 493 602 460 134  51   5 426 498 464  56 455 739  60 644 588 156 601  17 683
  99 194 129 576 779  32 411 463 543 693 197 735 422 267 704 163  20 556 557 687 420 209  68 488 247 186 486 659
 382 376 578 211 428 468  73 410 776  12 407 415 529 611 401 458 444 295 363  38 435 675 497 378 132 345 762  91
 550 113 465   7 682 395 234 514 706  75 348 167   6 353 431 731 408 268 336   3 679 684 769 668 377 352 542 127
 204 665  95 534 276 592 213 143 640 519 562 342 333 692 319 759 599 189 406 284 105 409 590 191 736 441 412 686
 417 699 751 657 433 728 392 617 296 346 133 299 225 775 169 120  70 763 138  29 766 375 171 554 340 265 179 283
   2 320 783 745 328 298 125 193 168 303 318 323 416 470 641  90 655 609 533 524  34 626 371 430 274  45 289 541
 107 172  81 605 726 479 243 365 510 230 145  48  83 525 389 676 553 579 196 723 632 738  44 293 595 255 757 241
 606 569 502 102 727 518 277 681 250 350 638 725  61 594 184 385 288 201 100 672 148 427  89 768 449 546 174 273
 584 574 203 517 511 111 354 252 658  24 698 573 505  97 598 322 114   1 612  96 419 620 249 743 260 388 746 161
  92 643 153 491 582   9 639 232 359 116 580 631 307 227 126 717 624  88 765  39 711 206 162 141 673 634 619 424
 636 366 540 472  37 154  82 583  54  80 216 103 750  93 492 137 398 559 710 666 253  62  69 190 520 155 504 282
 467 484 457  43 150  78 269 205 400 192 181 482 690 423  86 509 220 224 528 454 292 771 280 337  59 476 515 616
 494 264 581 166 108 720 558 689 451 474 259 481  77 271 142 618 652 635 316 758 448 729 217 101 485 157 239  85
 719 536  72 195 198 242 364 777 754 713 374 256 297 630 622 564 705 487  76 496 654 651 680 221 596 752 437 383
 123   4 552 445 361 380 742 287 199 443 436 688 425 270 399 694 386 471 648 453 513 178 356 223 327  13 669 305
  57 200 662 372  98 535 709 473  23 627 165 418 483 233 135 621 551 370 185 749  52 301 744 633 625 158 748  63

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.00558e+07us (= 10055.8ms, 10.0558s)
Satisfaction error: 15
Number of search iterations: 2307
Number of local moves: 1954 (including on plateau: 1912)
Number of local minimum: 11 (including on plateau: 229)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 447 334 600 275 575 261 614 251 341 667 700 16 281 741 549 131 212 326 222 175 294 248 245 25 304 663 733 508 => the sum is 10738 rather than 10990
Problem in row 4: 782 115 369 413 381 645 466 379 394 547 286 653 712 384 208 26 402 58 214 66 355 30 357 272 737 613 545 202 => the sum is 10611 rather than 10990
Problem in row 5: 778 784 228 65 87 170 561 499 67 577 176 475 187 629 531 130 607 572 696 530 8 84 338 770 642 649 42 603 => the sum is 11485 rather than 10990
Problem in row 6: 118 604 177 781 313 478 702 46 49 646 321 146 593 608 236 112 285 623 160 50 235 368 215 244 477 722 257 462 => the sum is 10028 rather than 10990
Problem in row 7: 391 396 707 71 254 152 41 18 589 566 109 27 671 537 290 117 716 278 661 677 344 597 697 79 10 35 188 721 => the sum is 9939 rather than 10990
Problem in row 8: 438 315 229 335 147 780 358 539 183 747 637 615 647 331 718 330 291 548 258 21 587 565 263 715 764 219 31 106 => the sum is 11717 rather than 10990
Problem in row 11: 753 724 28 756 610 362 302 300 207 332 387 343 128 421 774 714 568 538 732 74 516 397 526 231 94 563 36 555 => the sum is 11971 rather than 10990
Problem in row 16: 204 665 95 534 276 592 213 143 640 519 562 342 333 692 319 759 599 189 406 284 105 409 590 191 736 441 412 686 => the sum is 11936 rather than 10990
Problem in row 18: 2 320 783 745 328 298 125 193 168 303 318 323 416 470 641 90 655 609 533 524 34 626 371 430 274 45 289 541 => the sum is 10454 rather than 10990
Problem in row 20: 606 569 502 102 727 518 277 681 250 350 638 725 61 594 184 385 288 201 100 672 148 427 89 768 449 546 174 273 => the sum is 11304 rather than 10990
Problem in row 23: 636 366 540 472 37 154 82 583 54 80 216 103 750 93 492 137 398 559 710 666 253 62 69 190 520 155 504 282 => the sum is 9163 rather than 10990
Problem in row 24: 467 484 457 43 150 78 269 205 400 192 181 482 690 423 86 509 220 224 528 454 292 771 280 337 59 476 515 616 => the sum is 9888 rather than 10990
Problem in row 25: 494 264 581 166 108 720 558 689 451 474 259 481 77 271 142 618 652 635 316 758 448 729 217 101 485 157 239 85 => the sum is 11175 rather than 10990
Problem in row 26: 719 536 72 195 198 242 364 777 754 713 374 256 297 630 622 564 705 487 76 496 654 651 680 221 596 752 437 383 => the sum is 13451 rather than 10990
Problem in diagonal 0: 414 334 691 413 87 478 41 539 560 434 387 460 422 611 431 759 70 609 196 672 419 206 69 337 485 752 669 63 => the sum is 11608 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  43 608 112 306 419 399 353 375 389 430 250 668 344  63 766 476 666 536 495 702 477 387 133 301   3  27 507 755
 310  88 215 539 754 267 285 589 186  50 747 730 590  17 550 313 768  72  91 400  69 214 587  61 767 556 732 443
 174 377 617 439 548 114 741 445 575 363 283 586  83 189 152 535 187  54 607 697 667 656 184 701  71  92 746 107
 542 160 558  60  34 222 176 578 428 167 121  76 117 528 178 616 745 410 585 198 287 185 660 761 680 582 675 661
 210 639 609  24  46 293  47 672 769 268 149 146 622 593 776 629 314 706 709 592 342  39 125 233 626 677  77  58
 127  33 552 348  49 158 347 700 427 366 561 468 197  95 711 251 336 139 343  80 147 218 595 414 195  79 669 640
 411 379  16 759 634  96 598  94 243  40 356 295 245 670 605 559 340 266 765 664   7 611 148 465 282 721 599 122
 345 325 196 211  59 748 452 770 549 372 537  32 753 633  26 426 415 367 756 238 555   2 109 682 431 492 106 416
 657 618 644 653 551 740 171 286  57  38 527 163 704 309 743 489  22  56 100 134 521 572 576 408 621 108 207 315
 783 298   5 713 544 663 421 311 662 406 472 264 159 693 190 166 228 649 451 479 470 723 450 591 517 435 519 248
 212 209 308 138 724 513 645 557 371 694 499   8 603 474  84   1 407 481 303 438 652 686 699 213  97 466 395 113
 715 458 351 531 420 193 231 490 402 335  12 480 771 262  21 641 538  35 475 615 688 271 358  53 142 673 131 698
 487 442 478 378 328 604 510 164 658 143 689 272 437 703  86 394  28 129 614 486 684  62 648 566  74 392 201 333
 398 192 124 773 173  68  98 242 569 564 386 525 498  10 405 491 651 396  55  87 169 764  20 319 229  64 473 484
 145 708 390 221 627 560 705 523 156 227 397 728  19 413  48 254 165 726 103 277 731 518 460 157 318 194 646 574
 493 422 514 511 454 522   6 172 547  67 276 620 322 384 725 676 181 631 571 177 299  13 448  65 436 758 497 203
 305  11 241 381 168 357 359 449 334 337 326 346 461 323 425 330 625 352 469 749 349 504 294 674 316 784 304 417
 752 274 132 170 779 269 532 368 150 583 327 778 253 141 638 317 610 279 391 455 774 312 373 278 545  82  73 355
 624 290 727 681 376 175 659  14 226 300 273 370 650 580  29 302 115 500 385 265 105  70 485 261 714 567 296 737
 219 217 736 606 223 260 530 695 206 735 235 432 230 441  42 720 153 718 393 760 383 307  85 524 501  18 155 275
 683 655 291 750 128 380 225 162 232 628  52 256 529 541 354 104 782 404  78 654 512 324 762 252 270 482 339 161
 403 338 284 183 679 777 630 255 118 200 717  99 374 116 237 632 332 488 199  41 382 457 208 259 601 360 546 126
 182 671 780 362 188 179 119 136 647 712 180 678 412 503 623 154 216 234 281  45 456 562 691 365 289 502 239 584
 444 506 508   4 540 577  89  23 744 204 781 612 690 772 258 581  90 635 101 462 573 526 249 596 543 429  37 516
 151 246 459 130 236  31 434 757 321 665 642 494 568 369 520  15 505 763 240 341 220 440 533 102 135 563 687 423
 534 409  25 471 292 483 719 637 447 751 602 244  93 205 446 350 137  81 716  66 123 202 361 734 742 463 191 636
 597 710 685 401 464 613 588  30 110 775 140 509 257 739 619 144 696 329 120 288 297 722 418 692 565  36 579  75
  44 707 433 247 553 729 320 496 467 570 453 111   9 224 733 424 738 554 594 600  51 643 331 263 280 388 364 515

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00572e+07us (= 10057.2ms, 10.0572s)
Satisfaction error: 11
Number of search iterations: 3046
Number of local moves: 2588 (including on plateau: 2543)
Number of local minimum: 23 (including on plateau: 304)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 127 33 552 348 49 158 347 700 427 366 561 468 197 95 711 251 336 139 343 80 147 218 595 414 195 79 669 640 => the sum is 9245 rather than 10990
Problem in row 8: 345 325 196 211 59 748 452 770 549 372 537 32 753 633 26 426 415 367 756 238 555 2 109 682 431 492 106 416 => the sum is 11003 rather than 10990
Problem in row 10: 783 298 5 713 544 663 421 311 662 406 472 264 159 693 190 166 228 649 451 479 470 723 450 591 517 435 519 248 => the sum is 12510 rather than 10990
Problem in row 14: 398 192 124 773 173 68 98 242 569 564 386 525 498 10 405 491 651 396 55 87 169 764 20 319 229 64 473 484 => the sum is 9227 rather than 10990
Problem in row 19: 624 290 727 681 376 175 659 14 226 300 273 370 650 580 29 302 115 500 385 265 105 70 485 261 714 567 296 737 => the sum is 10776 rather than 10990
Problem in row 20: 219 217 736 606 223 260 530 695 206 735 235 432 230 441 42 720 153 718 393 760 383 307 85 524 501 18 155 275 => the sum is 10799 rather than 10990
Problem in row 22: 403 338 284 183 679 777 630 255 118 200 717 99 374 116 237 632 332 488 199 41 382 457 208 259 601 360 546 126 => the sum is 10041 rather than 10990
Problem in row 24: 444 506 508 4 540 577 89 23 744 204 781 612 690 772 258 581 90 635 101 462 573 526 249 596 543 429 37 516 => the sum is 12090 rather than 10990
Problem in row 26: 534 409 25 471 292 483 719 637 447 751 602 244 93 205 446 350 137 81 716 66 123 202 361 734 742 463 191 636 => the sum is 11160 rather than 10990
Problem in row 27: 597 710 685 401 464 613 588 30 110 775 140 509 257 739 619 144 696 329 120 288 297 722 418 692 565 36 579 75 => the sum is 12198 rather than 10990
Problem in row 28: 44 707 433 247 553 729 320 496 467 570 453 111 9 224 733 424 738 554 594 600 51 643 331 263 280 388 364 515 => the sum is 11841 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 424 360 738  13 730 530 556 303  53 563 744 549 487 196 140 632 765  88 696 480  28 158 175 141 753  58  17 613
 235 736 422  84 410 362 780 776 606 333 150 677 139 106 296  59  52 226  70 732 252 485 125 466 580 477 621 733
 274 159 603  60 370 778  85  11 180 699 506 700   9 488 634  63 476 628 187  74 315 548 770 116 249 781 689 538
 515 528 241  98 153 104 363 442 279 324 222 225 190 155 199 514 110 479 642 137 228  25 174 656 294 654 195 503
 615 671 295 756 762 581 284 490 531  33 605  47 170 543 309 755 619  30 368 336  42 119   7 388 645 529 668 247
 637 135 272 471  93 711 431 100 346 212 653 638 610 283 183 520 409 646 258  86   1 688 625 396  68 586 589 343
 517 464 723  83 340 595 757 655 446 626 215 779 307 706 425 564 648 130 182 662 406 618  20 726   2 764 114 478
 193 584 188 602 641 550 607 558 345 771 413  46 740 292 157 270 112 670 468 767 691 103 650 152 142 164 121 751
 311 784 178 418  29 278 728 569 163 111  19 568 534 774 633  24 608 573 570 498 177 297 561 704 510  10 131 230
 782  12 171 262 403 369 491 701  23  64 371  31 269 639 501 320 455 567 234 616 735 674 724 289 293 640 511  43
 542 497 635 533 527 268 469  55 673 474 494 500 495 489 168 465 273  27 352  65 450 143 590 460 502 745  77  22
 443 318 496 658 239 102  38 266 752 144 280 493 552  97 237 676 375  15 546  99 574 777 271 282 716 322 524 698
 136 123 669 535 308 492 208 184 220 557 686  82 387 713 719 540 224 664 453 400 128 117 242 372 301 661 609 260
 389 441 467 405 367 407 379 423 434 402 414 412 463 417  94 430 326 419 408 383 392 381 374 427 366 393 399 378
  87 287 594 348   8 457 683 707 729 421 665 452 439 194  91 377 519 769 185 118 697  39 499 416 353  89 659 108
 327 380 395 328 385 386 357 330 359 349 437 314 747 361 710 319 337 365 351 316 331 445 604 356 358 426 313 304
 693 436 572 355 596 623  79 758 588 254 509 214 649 565 376 617 300 420 470 448 447 666 459 508 473 373 306 145
 553 739  32 566 614  80  76 505  73 147 347 750 179 551 742 173 286 364 611 456 636 438 246 251 624  16 680 255
 537 211 440 709 694 660  50 281 512  90 504 191 299 291 472 644 681  75 264 223 263 219 690 290 428 401 312 559
  96  67 585 731 555 253 593 612 240 675 541 622  18 127 232 202 737 101 773 544 761   3 432 663 167 209 109 342
 217 210 391 647  21 513 462 231 775 384  92 245 597 454 532   5  66 165 162   4 302 746 317 335 760 329 176 768
 350 161  36 216 204 186 449 288 592 743 248 154 718 667  34 218 547 717 160 227 256 725 705 146 703  78 748 714
 265 601 323 652 198 554 233 201  49 643 169 684 310  37 516 539 129 221 285 598 630 404 521  51 578 582 741 276
 126 259 113 560 166  35 244 338 115 525 261 354 277 203 678 702 132 482 591 205 484 325 394 138 250  14 189  69
 579 687 583  54 192 754  57 124 682 339 133 181 451 727  61 692 238 433 749 600 695 571 257 576 107 507 321 627
  81 444 526 305 783 122 334 679 344 575 207 149 156  48 523 475 712 435  62 708 429 722 120 759 148  95 275 685
 332  45 197 243 657 200 620 397 398 461 715 522 772 236 766 151 587 518 172 536  41 341  56 206 486 629 481 229
 734 651 105 298 545  40 577   6 483  71 390 411  26 631 562  44 267 763 721 672 599 213 382 720 134 458 415  72

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 11
Number of search iterations: 2736
Number of local moves: 2294 (including on plateau: 2248)
Number of local minimum: 27 (including on plateau: 269)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 515 528 241 98 153 104 363 442 279 324 222 225 190 155 199 514 110 479 642 137 228 25 174 656 294 654 195 503 => the sum is 8649 rather than 10990
Problem in row 5: 615 671 295 756 762 581 284 490 531 33 605 47 170 543 309 755 619 30 368 336 42 119 7 388 645 529 668 247 => the sum is 11445 rather than 10990
Problem in row 7: 517 464 723 83 340 595 757 655 446 626 215 779 307 706 425 564 648 130 182 662 406 618 20 726 2 764 114 478 => the sum is 12952 rather than 10990
Problem in row 8: 193 584 188 602 641 550 607 558 345 771 413 46 740 292 157 270 112 670 468 767 691 103 650 152 142 164 121 751 => the sum is 11748 rather than 10990
Problem in row 10: 782 12 171 262 403 369 491 701 23 64 371 31 269 639 501 320 455 567 234 616 735 674 724 289 293 640 511 43 => the sum is 11190 rather than 10990
Problem in row 17: 693 436 572 355 596 623 79 758 588 254 509 214 649 565 376 617 300 420 470 448 447 666 459 508 473 373 306 145 => the sum is 12899 rather than 10990
Problem in row 21: 217 210 391 647 21 513 462 231 775 384 92 245 597 454 532 5 66 165 162 4 302 746 317 335 760 329 176 768 => the sum is 9906 rather than 10990
Problem in row 24: 126 259 113 560 166 35 244 338 115 525 261 354 277 203 678 702 132 482 591 205 484 325 394 138 250 14 189 69 => the sum is 8229 rather than 10990
Problem in row 25: 579 687 583 54 192 754 57 124 682 339 133 181 451 727 61 692 238 433 749 600 695 571 257 576 107 507 321 627 => the sum is 11977 rather than 10990
Problem in row 26: 81 444 526 305 783 122 334 679 344 575 207 149 156 48 523 475 712 435 62 708 429 722 120 759 148 95 275 685 => the sum is 10901 rather than 10990
Problem in row 27: 332 45 197 243 657 200 620 397 398 461 715 522 772 236 766 151 587 518 172 536 41 341 56 206 486 629 481 229 => the sum is 10994 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 337   1 533 338 160 332  29 349 632  81 210 392 665  70 649 673 516  44 310 660 591 725 416 112 217 652 376 409
 595 275  16 603   2 438 745 164 685 623 734 126 161 455 648 490 258 156 224  87 747 429 774  52 753  13  55 682
 354 359  37 235 672 621 469 405 702 529 743 689 693 287  49 300 730 766 109 674 449  95 145 247 193 107 640 441
 276 390 212 514 710 754 762 172 655  40 624 303 130 773 645 489 174 506 121 496  21 157  88 293  28 474 749 434
 296 650 103 290 580 451 176 574 230 778 136 742  41 388 687 397  43 720 379 583 127 700 567  45 240 150 550 668
 560 559 530 739 701  68 162  82 178 171 495  53 541 202 612  10 277 110 424 190 197 381 159 479 117 628  61  26
 445 118 525 544 547 225 602 158 147 472  66 426 319 267  75 659 517 630 208  93 518   7 266 634 677 113 587 316
 360 486 143 410 744 740 167 201 243 367  76  69 188 447 100 464 641 273 323 241 102 656 480 211 204 770  32 209
 706 141 769  63 281 242 760 347 138 539 619 139 504 735 181 707 537 142 507 350  74 670 554   5  72  27 573 608
 620 228 345 556 690 166 477 488 781 431 680 108 278 194 106 325 329 501 219 206 765 256 733 420 251 568 654 678
 588 510 192 322 249 213 664 111  54 610 576 736 189 565 718 125 519 509 491 755  67 169 129 626 463 173  50 617
  98 724 729  30 144 681 163 344 380 651  46 676 254 375 476 499 195 566 368 535  97 339 757 185 622 383 594  79
 326 341 763 315 389 297 200 280 395 262 183 320 771 361 428 396 466 231 562 394 365 348 223 527 453 503 589 302
 274 404 298 712 570 137 427 442 746 321 346 371 393 418 403 406 443 304 336 268 334 356 244 432 362 444 318 481
  59 457 460 402 353 470 433 385 679 306  38 578 366 522 448 412  83 373 299 421 465 546 372 459 358 435 454 357
 564 335 483   3 221 216 207 759 101 305 342 115 462 671  65 521 657 666 331 629 482 252 314 605 382 513 555 234
 515 301  80 151 581 132 407 295 114  60 436 590  51 120 456  84 105 312 214 606 272 536 579 586 450 611 124 708
 600 523 471  90 498 237 534 636 625 616  12 370 532 571  73  17 607 387 422  25 461 604 508 236 227 741 599  48
 168 688 639 683 440 716 363 411 327 563 512 732 122 545 415 179 782 767  56 698 355 146 255 401 615  22  99 288
 248 134  57 263   9 643 311 413 526 758 283 425 684  18 618 722 596 384 737 317 497 220 705 265 502 285 165 205
 631 721 309 775  58 542 582 561 638 250 549 307 473 531 292 584 452 119 614 222 727 627 294 540 398 253 184 750
  78 386 569 364 751  36 661 180 414 400 333 239 557  96 637  42 330 284 187 647 585  11 199 752 780 528 675 269
 408 430 635 154 271 644 478 484 148 351 328  35 696 558 731 153 191 238 575  20 116 313 257 642 609 777  34 714
 633 226 538 485 552 572 198 203 131  89 719 598   4  14 133 104 264 494 374 703 713 170 551 784  71 286 279 692
 369   8  91 748 232 686 135 662  19 245 592  23 446 475 377 694 155 548 723  47 378 715  92 282 695 289 458 324
 149 340 728 259  86 511  39 524  85 423 229 756 709 215 691 779 764 233 699 553 738 186 520 123 417 613 505 261
  64 768 658 543   6 196 128 697 500 152 646 653  94 726  31 291 182 467 601 218 308 593 776 704  62 140 270  15
 669 487  77 399 493  24 711 663 717 597 437 419 667 391 246 468 177 260 577 352 439 783  33 343 772 492 761 175

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00599e+07us (= 10059.9ms, 10.0599s)
Satisfaction error: 16
Number of search iterations: 2244
Number of local moves: 1926 (including on plateau: 1886)
Number of local minimum: 9 (including on plateau: 231)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 337 1 533 338 160 332 29 349 632 81 210 392 665 70 649 673 516 44 310 660 591 725 416 112 217 652 376 409 => the sum is 10479 rather than 10990
Problem in row 3: 354 359 37 235 672 621 469 405 702 529 743 689 693 287 49 300 730 766 109 674 449 95 145 247 193 107 640 441 => the sum is 11740 rather than 10990
Problem in row 5: 296 650 103 290 580 451 176 574 230 778 136 742 41 388 687 397 43 720 379 583 127 700 567 45 240 150 550 668 => the sum is 11291 rather than 10990
Problem in row 6: 560 559 530 739 701 68 162 82 178 171 495 53 541 202 612 10 277 110 424 190 197 381 159 479 117 628 61 26 => the sum is 8712 rather than 10990
Problem in row 7: 445 118 525 544 547 225 602 158 147 472 66 426 319 267 75 659 517 630 208 93 518 7 266 634 677 113 587 316 => the sum is 10161 rather than 10990
Problem in row 8: 360 486 143 410 744 740 167 201 243 367 76 69 188 447 100 464 641 273 323 241 102 656 480 211 204 770 32 209 => the sum is 9347 rather than 10990
Problem in row 10: 620 228 345 556 690 166 477 488 781 431 680 108 278 194 106 325 329 501 219 206 765 256 733 420 251 568 654 678 => the sum is 12053 rather than 10990
Problem in row 17: 515 301 80 151 581 132 407 295 114 60 436 590 51 120 456 84 105 312 214 606 272 536 579 586 450 611 124 708 => the sum is 9476 rather than 10990
Problem in row 18: 600 523 471 90 498 237 534 636 625 616 12 370 532 571 73 17 607 387 422 25 461 604 508 236 227 741 599 48 => the sum is 11270 rather than 10990
Problem in row 19: 168 688 639 683 440 716 363 411 327 563 512 732 122 545 415 179 782 767 56 698 355 146 255 401 615 22 99 288 => the sum is 11987 rather than 10990
Problem in row 21: 631 721 309 775 58 542 582 561 638 250 549 307 473 531 292 584 452 119 614 222 727 627 294 540 398 253 184 750 => the sum is 12983 rather than 10990
Problem in row 24: 633 226 538 485 552 572 198 203 131 89 719 598 4 14 133 104 264 494 374 703 713 170 551 784 71 286 279 692 => the sum is 10580 rather than 10990
Problem in row 25: 369 8 91 748 232 686 135 662 19 245 592 23 446 475 377 694 155 548 723 47 378 715 92 282 695 289 458 324 => the sum is 10508 rather than 10990
Problem in row 26: 149 340 728 259 86 511 39 524 85 423 229 756 709 215 691 779 764 233 699 553 738 186 520 123 417 613 505 261 => the sum is 12135 rather than 10990
Problem in row 27: 64 768 658 543 6 196 128 697 500 152 646 653 94 726 31 291 182 467 601 218 308 593 776 704 62 140 270 15 => the sum is 10489 rather than 10990
Problem in row 28: 669 487 77 399 493 24 711 663 717 597 437 419 667 391 246 468 177 260 577 352 439 783 33 343 772 492 761 175 => the sum is 12629 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 415 763 462  89 174 341 663 253  12 428 666 249 217 460 694 702 339  37 650 317 761  51 691  83  14 678 158 623
 172  55 536 511 350  21 703 699 215 680 222 644 106 731 523 306 378 226 178 620 594 638 431 282  27 643 628 593
   5 656 140 472 668 272 624  38  94 400 164 605 311 263 204 397 310 566 555 704 288 220 563 192 328 267 659 353
 723 316 544 554 562 330 586 447 564 532 103  28 131 530  10  68  39 743 357 501 747 692 632 284 527 660 152  67
 642 751 101 322  56 241 679 596  13 333 197 154 780 589 290 285 104 189 375 599 580 315 223 109 739  96 264 777
 388 334 453 262  66 613 163 471 645 121 231 259 120 570  97 636 685 379 234 575 135 592 187 449 746 167 688 724
   2 617 610   4 698 404 111 224 674 476 319 738 670 278  92 426 732  62 521 198 177 522 646 649 784 269 342 442
 437 209 686 165 193  45 622 161 257 742 715  53 569 749 153 477 513 758 130 286 225 240 268 764 122 696 559 196
 216 321 606 754 173 710 486 572 313 127 483 726 621 190 275 468 595 625 211 202 474 289 271 300   9 376 396 201
 725 510 179 565 406 574  85 557 618 312 277 779 195  40 714 514 181 206 741 539 775 356 294 708 491 719  70 176
  46 182 615 672 640 602 124 493 512  47 279 576 550 137 208 219 115 558  50 487 770 228 138 457 766  15 446 716
 229 359 227 627 465 531 246  69 611 706 360 162 652 503 430  52 409 683  16  93 210 677 509 776  86 639 768 635
 248 361 134 416 529 547 296 170 338 657 302 371 299 365 367 362 384 369 320 349 355 546 304 391 767 373 634 436
 413 370 336 451 309 323 405 292 410 368 407 418 438 324 390 380 518 456 280 351 260 344 423 398 424 366 735 401
 774 748 252 394 519 675 343 242 475 200  61 585 577 591 450 755 308  18  30 139 484 261 335 129 705 372 548  20
 629 402 753 582 276 533 429 454 432 498 598 667 159 759 505 425 151 185 250 143 133  63 128 661 203 417 496  59
 488 385 325 256 458 382 381 199 408 455 495 445 681 469 452 466 526 146 434 515  31 239 508 482 485  76 283 520
 287  24 479 549 188 727   6 108 160 664 571 433 537  22 534 481 184 480 658 722 464 773 676 441  43 420  41 318
 125 489 771   3 132 258  98 590 473 631 295 116 583 105 421 729 145 326 524 395 180 358  35 112 281 587 329  42
 232 551 443 492 387 633 301   7 419 254 568 507 175 117 337  87 733 422 270 142 720 734 728  33 332 389 237 740
 459 478 166 669 603 147   8 619 218  72  23 552 331 497 556 516 214 517 647 363 648 604 168 545 612 535 144  79
 490 609 448 352 744 346 579 107 307  80 561 383 205 141  36  19 100 411 718  95 265 600 194 528 616 525 750 781
 506 213 553 345 671  74 500 393 584 377 435 230 156 711 630 118 440 327 772 700  65 186 542  49 245 303 251 614
 238  82  17 757  77 707 266 712 541 494 701 504  90 499 756 778 690 709  75 169  99 662 412 597 364 155  64  48
 673 782  73 243 148 538 314 567 760 123 427 136 684 348 183 126 236  29 682 608 470  57 588 717 695 293 399  91
 274  44  11  84 150 157 601 665  78 581 110 149 540  32 697 347 626 637 560 386 654  81 736 439 298 713 403 212
 687 354 305 340 693  88 641 502 114 578 769  58 392 737 297 607 573 273 291 721 191 543 113 414  26 207 102 374
 467  25 765  60 655 171 730 783 745  54 651 463 221 233 689 244 762 653 461  71 235 119 247   1 255  34 444 752

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00594e+07us (= 10059.4ms, 10.0594s)
Satisfaction error: 11
Number of search iterations: 2512
Number of local moves: 2150 (including on plateau: 2105)
Number of local minimum: 12 (including on plateau: 269)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 172 55 536 511 350 21 703 699 215 680 222 644 106 731 523 306 378 226 178 620 594 638 431 282 27 643 628 593 => the sum is 11712 rather than 10990
Problem in row 3: 5 656 140 472 668 272 624 38 94 400 164 605 311 263 204 397 310 566 555 704 288 220 563 192 328 267 659 353 => the sum is 10318 rather than 10990
Problem in row 4: 723 316 544 554 562 330 586 447 564 532 103 28 131 530 10 68 39 743 357 501 747 692 632 284 527 660 152 67 => the sum is 11429 rather than 10990
Problem in row 5: 642 751 101 322 56 241 679 596 13 333 197 154 780 589 290 285 104 189 375 599 580 315 223 109 739 96 264 777 => the sum is 10399 rather than 10990
Problem in row 7: 2 617 610 4 698 404 111 224 674 476 319 738 670 278 92 426 732 62 521 198 177 522 646 649 784 269 342 442 => the sum is 11687 rather than 10990
Problem in row 10: 725 510 179 565 406 574 85 557 618 312 277 779 195 40 714 514 181 206 741 539 775 356 294 708 491 719 70 176 => the sum is 12306 rather than 10990
Problem in row 11: 46 182 615 672 640 602 124 493 512 47 279 576 550 137 208 219 115 558 50 487 770 228 138 457 766 15 446 716 => the sum is 10648 rather than 10990
Problem in row 12: 229 359 227 627 465 531 246 69 611 706 360 162 652 503 430 52 409 683 16 93 210 677 509 776 86 639 768 635 => the sum is 11730 rather than 10990
Problem in row 19: 125 489 771 3 132 258 98 590 473 631 295 116 583 105 421 729 145 326 524 395 180 358 35 112 281 587 329 42 => the sum is 9133 rather than 10990
Problem in row 24: 238 82 17 757 77 707 266 712 541 494 701 504 90 499 756 778 690 709 75 169 99 662 412 597 364 155 64 48 => the sum is 11263 rather than 10990
Problem in row 26: 274 44 11 84 150 157 601 665 78 581 110 149 540 32 697 347 626 637 560 386 654 81 736 439 298 713 403 212 => the sum is 10265 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   2 250 723  32  58 127 695 701 509 467 458 652 144 258 750 572  97 429 361  55 646 575  54 228 438 452 428  80
 554  74 729  66 614 523 146 281 193 191 457 719 177 419 538 255 157 662 527 626 109 213 772  84 638 610  91 565
 432 253 103 245 498 418 492 325 420  38 524 484 738 548 122  73 230 581 130 558 448 107 372 769 257  12 730 200
  90 185 555 154 728 237  95 363 635 745 727  21 168 256  25 362 663 364 494 658 503 274 327 381 284 688 566 442
 597 647 670 690 234 105 692 148 129 682 618 134 334 599   8 270 677 657 702 431  49 221 714 681 370 741 724  23
 667 593 158 628 455 131 394 685 398  48  78 687 188 720 262 574 198 504 471 169 704 100  93  10 630 406 513 526
 277 661  89  45 643 774 196  81 742  11 220 421 718 171 204 320 322 486  61 716 761  70 616 111 187 493 770  71
 292 533 216 268 393 510 594 226 673 732 569 184 395   7  88  65 675 624 515 725 562 400 373 288 162 283 251 387
 733 736 771 743 173  22 475 622 207 242  20 238 323 754 559 694 203 306 337 508 264 684  96 407 249 332   1 291
 163 338 722 518 404 578   4 601 717 217 607   5  46 520 246  34 598 174 339 456 766  26 651 706 321  79 328 721
 749 179 354 423 304 463 297 239 254 311 346 375 512 336 345 462 536 644 782 450 252 149 275 356 319 691 271 316
 318 485 379 588 269 698 233 546 465 525 631 272 300 140 715 514 495   6 343 707 307 392 454  75  76 287 282 488
 212 539 210  13 678 133 567 672 659  56 195 377 401 410 568 496 648 247  77  53 101 516 403 711 352 541 500 655
 778 227 384 411 367 296 355 561 478 308 468 330 278 293 365 422 380 369 347 405 326 499 409 289 445 453 317 430
 360 166 128 180 117 617 344 439 686 505 443 660 764 477 329 528 758 305 625  82  52 480  40 182 600  15 544 564
  42 683  99  68 532 446 241 540 151 784 737 314 482 186 267 473 192 747 383 424 762  98 613 382 342 402 447 437
 116 666  30 333 700 615 340 175 751 731  31 573 399 604 777 416 441 570 315 353 550 640 273  87 199 472 106 309
 366  24 634 371 602 266 167 435 119 497 501 335  86 265 391 280 522 585 481 726 696 102 608 440 413 459 145 474
 783 654 351 449 303 577  50 312 159 645 378 294  51 781 470 595 137 531 408 118 627 746 491 469 348 301 324 141
 748  36 414 160 589 223 224 125 232 115 619 582 521 649 587 135  27 110  14 576  92 708 229 671 417  43 529 138
 579 205 556 629 285 584 583 310 549  59 656 653 240 553  19 665 476 161 461 236 637  39   9 483 147 261 313 642
 104 389 542 502 178 331 466  85 464 780 668 113 596 189 641  62 222 259 132 172 123 611  47 591 260 433 302 112
 108 621 425 623 170 669 121 248  60 511 231 632 126 705 427 676 386  18 194 385 155 415 689 775 426 388 543 263
 444 605 451 286 507 218 739 143 752 243 279  41 506 114 636 201 560  28 680 436 359 534 368 341 710 295 358 156
 434 557 519 679 215 530 734 709 165 349 219 779 699  16 773 740 164 763 206  35 396 580  44 552 768 639 176 612
 650 136 517 776 214  72 537  69  37 697 153 208 412 563 460 181 190 571 620  83 124 609 479 606 664 744 376 693
 183   3  64 397 703 235 535 759  29 299  63 755 753 390 142 374 547 139 225 603  33 490 756 298 757 350 765 487
 209 545 197 713  57 592 674 590 357 202  94 152 633  67 276 551 489 150 760 244 586 712 735  17 211 120 290 767

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00602e+07us (= 10060.2ms, 10.0602s)
Satisfaction error: 13
Number of search iterations: 2353
Number of local moves: 1987 (including on plateau: 1944)
Number of local minimum: 16 (including on plateau: 217)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 2 250 723 32 58 127 695 701 509 467 458 652 144 258 750 572 97 429 361 55 646 575 54 228 438 452 428 80 => the sum is 10241 rather than 10990
Problem in row 3: 432 253 103 245 498 418 492 325 420 38 524 484 738 548 122 73 230 581 130 558 448 107 372 769 257 12 730 200 => the sum is 10107 rather than 10990
Problem in row 5: 597 647 670 690 234 105 692 148 129 682 618 134 334 599 8 270 677 657 702 431 49 221 714 681 370 741 724 23 => the sum is 12547 rather than 10990
Problem in row 7: 277 661 89 45 643 774 196 81 742 11 220 421 718 171 204 320 322 486 61 716 761 70 616 111 187 493 770 71 => the sum is 10237 rather than 10990
Problem in row 10: 163 338 722 518 404 578 4 601 717 217 607 5 46 520 246 34 598 174 339 456 766 26 651 706 321 79 328 721 => the sum is 10885 rather than 10990
Problem in row 16: 42 683 99 68 532 446 241 540 151 784 737 314 482 186 267 473 192 747 383 424 762 98 613 382 342 402 447 437 => the sum is 11274 rather than 10990
Problem in row 17: 116 666 30 333 700 615 340 175 751 731 31 573 399 604 777 416 441 570 315 353 550 640 273 87 199 472 106 309 => the sum is 11572 rather than 10990
Problem in row 19: 783 654 351 449 303 577 50 312 159 645 378 294 51 781 470 595 137 531 408 118 627 746 491 469 348 301 324 141 => the sum is 11493 rather than 10990
Problem in row 20: 748 36 414 160 589 223 224 125 232 115 619 582 521 649 587 135 27 110 14 576 92 708 229 671 417 43 529 138 => the sum is 9513 rather than 10990
Problem in row 22: 104 389 542 502 178 331 466 85 464 780 668 113 596 189 641 62 222 259 132 172 123 611 47 591 260 433 302 112 => the sum is 9374 rather than 10990
Problem in row 25: 434 557 519 679 215 530 734 709 165 349 219 779 699 16 773 740 164 763 206 35 396 580 44 552 768 639 176 612 => the sum is 13052 rather than 10990
Problem in row 26: 650 136 517 776 214 72 537 69 37 697 153 208 412 563 460 181 190 571 620 83 124 609 479 606 664 744 376 693 => the sum is 11441 rather than 10990
Problem in row 27: 183 3 64 397 703 235 535 759 29 299 63 755 753 390 142 374 547 139 225 603 33 490 756 298 757 350 765 487 => the sum is 11134 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 734 348 168 731 777 258 601 744 748 448 725 160  72   2 705  35 690 741 612 150   7 528 477 198 273 482 428 766
 701 759 352 781 115 253 727 310 197  27 344 784 755 140  83 775  57  76 595  26 303 765 178 204 156 336 730 461
 683  78 718 231 270 187 351 687 599 446   4 572 207 722 451 382 359 454  82 144 531 433  12 141 509 711 534 492
 574  17 449 432  30 341 774 332  44 511 188 646 721 416 783 529 614 541 135 443 163  67 281 578 255 740 363 290
 143 527 782 622 615 109 751  86 636 566 287 623 546  84  33 169 768 719 708 750 286 634 450 691 747 739  65  48
 305 733 182 189 476 543 313  18 526   3 561 192 549 594 458 611 326  23 315 440 489 411 629 536 235 551 346 436
 552 669 627  32 208 334 605  46 503 776 668  74  73  66 699 171 159 591 360 276 593 618 323 579 282 291 625 190
 486 564 395  52  70 573 107 576 475 487 597 714 134 502 567 583   1 238  43 581 553 602  50  88 550 493 610 299
 738 245 321 642 453 103 692 195 563 337   8 312 764 767 213 263 230 229 335 535 648 199 586 154 438 455 457 108
  40 703  81 394 116 693  24 713 680  94 510 153 124 571  98 512 650 211 518 674 538 678 707  20  19 697 209 361
 499 532 548  34 385 779 508 474 410 329 390 498 494 743 237 131 152 506 626  28  47 681 212 490 296 582 196 183
  99 137  92 603 662 483 472 260 575 745  53 485 664 469 537 104 447 223 170 234 125 735 762 712  29 430 628  55
 333 342 763 331 556  13 164 667 175 656 347 425 418 289 604 415 275 265 645 542  54  77 278 318 590 653 666 592
 439 434 423 393 424 372 398 367 373 392 407 441 437 330 414 402 403 201 368 375 401 417 412 386 365 399 396 421
 419 397 406 387 374 350 364 413 409 180 378 383 356 408 389 554 343 404 400 388 391 379 357 729 377 328 369 358
 584 292 540 654 647 732 677 228 106 130  41  25 353 484 119 384 659 769 728  39 435 547 172 300 316 268 240 521
 261 284 516 248 427 306 132 613  61 173 429 280 466 162 761  64 308 663  14 283 742  96 780 644 277 202 773 726
 463 426  97 609 737 752 221 149 126 120 112 146 186 715 616  87 467 327 431 598 770 297 665 695 746  21 157 254
  59 606 176 136 324 471  80  68 129 641 753 301 619 224 513 266 524 501 246 122 688  91 495 380 639 250 452 544
 121 236 445 657 589 671  63 655 279  75 720 682 302 206 298 676 179 371 569 422 700 288 505  85 193  95 210 698
 293 685 640 756 127 562 354 219 317 684 139 225 533 267 158 504 232 617 167 624 216 247 545 222 588 191 203 675
 519 686 637 251 215 522 239 491 128 596 497 309 227 580 272 585 621 465 694 670 147 133  16 366 101 113 570 340
 304 468 673 568 736 110 325 772 314 285 559 185 632 696 294 405 525  89 161 717 218 241 100 262 111 643 355 242
 479  22 244 184 117 630 488 257 672 442 649 481 217  36 362 724 515 381 478 123 633 148  58 555 689 307 709 480
 311 214 138 319 587 233 118 102 706 507 226 517 339 514 660 679  93 557 757 758 322  71 723  79 460 220 142 638
 760 376  49 523 264 444 274 370 205 635 271 771 702 652  42 249 177 661 252 565 114 320 558 608 349   5  38 560
  60  45 269 194  69  11 704 520 256 166 631   6  10  56 151  15 754  62  51 145 456 710 459 500 749 181 174 243
  31 165 259  37 620 155 464 658 778 539 496 600  90 295 473 716 462 105 530 338 420 577 200 470 651 607 345   9

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00604e+07us (= 10060.4ms, 10.0604s)
Satisfaction error: 11
Number of search iterations: 2995
Number of local moves: 2524 (including on plateau: 2478)
Number of local minimum: 24 (including on plateau: 288)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 734 348 168 731 777 258 601 744 748 448 725 160 72 2 705 35 690 741 612 150 7 528 477 198 273 482 428 766 => the sum is 12608 rather than 10990
Problem in row 4: 574 17 449 432 30 341 774 332 44 511 188 646 721 416 783 529 614 541 135 443 163 67 281 578 255 740 363 290 => the sum is 11257 rather than 10990
Problem in row 5: 143 527 782 622 615 109 751 86 636 566 287 623 546 84 33 169 768 719 708 750 286 634 450 691 747 739 65 48 => the sum is 13184 rather than 10990
Problem in row 10: 40 703 81 394 116 693 24 713 680 94 510 153 124 571 98 512 650 211 518 674 538 678 707 20 19 697 209 361 => the sum is 10788 rather than 10990
Problem in row 13: 333 342 763 331 556 13 164 667 175 656 347 425 418 289 604 415 275 265 645 542 54 77 278 318 590 653 666 592 => the sum is 11453 rather than 10990
Problem in row 17: 261 284 516 248 427 306 132 613 61 173 429 280 466 162 761 64 308 663 14 283 742 96 780 644 277 202 773 726 => the sum is 10691 rather than 10990
Problem in row 19: 59 606 176 136 324 471 80 68 129 641 753 301 619 224 513 266 524 501 246 122 688 91 495 380 639 250 452 544 => the sum is 10298 rather than 10990
Problem in row 24: 479 22 244 184 117 630 488 257 672 442 649 481 217 36 362 724 515 381 478 123 633 148 58 555 689 307 709 480 => the sum is 11080 rather than 10990
Problem in row 26: 760 376 49 523 264 444 274 370 205 635 271 771 702 652 42 249 177 661 252 565 114 320 558 608 349 5 38 560 => the sum is 10794 rather than 10990
Problem in row 27: 60 45 269 194 69 11 704 520 256 166 631 6 10 56 151 15 754 62 51 145 456 710 459 500 749 181 174 243 => the sum is 7647 rather than 10990
Problem in row 28: 31 165 259 37 620 155 464 658 778 539 496 600 90 295 473 716 462 105 530 338 420 577 200 470 651 607 345 9 => the sum is 11090 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 487 136 109  58 210 529 701 710 624  77 166 527 568 247 262 604 190 485 742 453 699  31 363 593 253 186 228 752
 178 750 781 760 218 269 177 471  59 335 759 139 277 625  20 663 614 205  41  74 144 575 161 756 283 473 728 455
 275 457 656 321 506 552 246 243  90 743 258  51 515 684 444 249 265 550 157 250  65 372 231 590 753 711 609 147
 123 162 582 160 732 256 553 533 520 502 317 567 745 570 149 764 206  66 356 311 116 661 721 477 693 654 519 101
 432 683 618 132 641 480  57  93 347 140 207 195  55 193 674 180 544 175 637 714  95 768 469 659 169 608 389 636
 188 170 591  35  29 564 615 512 556 100 634 610 746 216 543 268 733 307 255  82 290 491 592 767 539 107 443   7
 668 462 435 572 782 646 447 174 236 242 461 438 680 312 111 227  86  92 204 217 619 563 303 707 601 338 678 286
 430  39 718 653 302 779 510 616 747 353 778 677 673  96 503 719 220 325 763 442 597 104   1 145  28 148  89 565
  85 581 263 530 587 505 212  38 775 650 137 689 488 780 167 458 598 532 535 569 579 739 688  40  98 197 440 278
 651 633 686 671 135 213 777  62 665 521 676 181 484 548 332 187 125 561 476 202 179 276 209 557 124 126 266 467
 623 576 427 305 508 522   9 261 464 245 517  23 655 151 691 327 692 482 183 765 489 645 573 185 194 163  91 224
 354  73 660 639 600 525 511 448 589 773 189 112 771 198 310 127 439 446 251 191 238 196 257 376 470 513 709  25
 222  69  80 454 407 324 441 672 463 738  30 754 232 498 304 452 526 120   5 744 695  42 726  94 359 475 436 628
 478 408 395 437 381 449 409 355 418 434 420 391 413 399 394 371 392 417 393 386  87 431 422 366 398 406 343 397
 426 390 450 403 404 713 385 378 388 368 419 377 380 375 340 379 299 344 326 414 423 348 329 370 428 365 382 387
 523 396 219 383 309 330 364 373 410 607 762 153 288 481 360 291 504 737 374 346 362 336 369 339 328 352 361 333
 221 319 758 239 622 105 518 749  46 703 115 279  53 555  63  70 287  67 626 474 549 223 681 358 445 666 331 114
 685 558 323 524 134  36 322 584 596  24 357  54 657  75 537 662 761  56  76 638 421 700 141 320 540 735 282 192
 682 172 280 297 472 308 337 724 696 301 289 459 248 675 117 129 121 652 690 649 769 199 580 514 103 751 152 583
  26 783  21 165 294 631 748 588 244  99  43 613 402 203 772 617 384 694  97  44 468 717 367 119 298 551 507 495
 770 715 541 566 542 285 632 229  19  50 640 712 240 635 612  22 658  15 486 225 259 401 113 716 630 270 595 293
 254 241 237 736 627 133 156 774  47 155 500 416 122   6 603 492 342 757 493 494 208  78  10 271 741 264  27 536
 670 235  68 776 345 159 490  37  48 412 547 546 150 267 466 516  34 296 554 577 729 620 705  18 465  13 669 578
 110 727 226 176 143 667 687  79 138 648 292 314 182 451  14 644  64 415 400 766 642 171 509 429 679  11   8 740
  88 629 350 158 106 643 128 184 260 433  81 731 295 351 234 501 585 611 697 560 586 313 118 499 168 574 702 405
 545 274 130 479  17  61 272 621 723 605 725 102 211 647 734   3 730 708 142  60  49 411 424  83 252 562 722 698
 784  52 315 230 233  33  72 318 538 531 456 281 154 720 528 497 483 559 425 341 173 534 594 496 602 755 200 664
  12 300  71 131 704 273 214 164 284 201 215 599 306  32 706 571 108 316 606   2 460  45 334 146 349  16  84   4

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00589e+07us (= 10058.9ms, 10.0589s)
Satisfaction error: 11
Number of search iterations: 2472
Number of local moves: 2066 (including on plateau: 2020)
Number of local minimum: 14 (including on plateau: 268)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 123 162 582 160 732 256 553 533 520 502 317 567 745 570 149 764 206 66 356 311 116 661 721 477 693 654 519 101 => the sum is 12116 rather than 10990
Problem in row 7: 668 462 435 572 782 646 447 174 236 242 461 438 680 312 111 227 86 92 204 217 619 563 303 707 601 338 678 286 => the sum is 11587 rather than 10990
Problem in row 8: 430 39 718 653 302 779 510 616 747 353 778 677 673 96 503 719 220 325 763 442 597 104 1 145 28 148 89 565 => the sum is 12020 rather than 10990
Problem in row 9: 85 581 263 530 587 505 212 38 775 650 137 689 488 780 167 458 598 532 535 569 579 739 688 40 98 197 440 278 => the sum is 12238 rather than 10990
Problem in row 17: 221 319 758 239 622 105 518 749 46 703 115 279 53 555 63 70 287 67 626 474 549 223 681 358 445 666 331 114 => the sum is 10236 rather than 10990
Problem in row 19: 682 172 280 297 472 308 337 724 696 301 289 459 248 675 117 129 121 652 690 649 769 199 580 514 103 751 152 583 => the sum is 11949 rather than 10990
Problem in row 21: 770 715 541 566 542 285 632 229 19 50 640 712 240 635 612 22 658 15 486 225 259 401 113 716 630 270 595 293 => the sum is 11871 rather than 10990
Problem in row 22: 254 241 237 736 627 133 156 774 47 155 500 416 122 6 603 492 342 757 493 494 208 78 10 271 741 264 27 536 => the sum is 9720 rather than 10990
Problem in row 24: 110 727 226 176 143 667 687 79 138 648 292 314 182 451 14 644 64 415 400 766 642 171 509 429 679 11 8 740 => the sum is 10332 rather than 10990
Problem in row 27: 784 52 315 230 233 33 72 318 538 531 456 281 154 720 528 497 483 559 425 341 173 534 594 496 602 755 200 664 => the sum is 11568 rather than 10990
Problem in row 28: 12 300 71 131 704 273 214 164 284 201 215 599 306 32 706 571 108 316 606 2 460 45 334 146 349 16 84 4 => the sum is 7253 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 380 312 283  69 296 780 190 208 653 437 567 305 683 457 672 142 370 302 627 161 603 191 579 471 344 168 257
 684 753 172 318  88 722 760 480 668 673 261 751 115  34 456 293  74 730  14 170 110  10 287 537 133 502 453 742
 523 310 721 244 205 545 733  20 776 252 737 278  30 486 149 509 363 588 167   2 322 399 763 709 240 176 680  63
 444 578 237 506 201 779 246 270 203  55 526 660 304 773 688 702 185 510 605 624 144  24 630 215 379 522 102 661
 159 155 475 181 678  57 105 100 222 625  85 162 766 752   8 238 714 111 235 719 361  90 608 643 206 634  86 106
 464 294  77 120 369 623 234 337 762 741 551 325 107 141 662 388  11 708 135 432 468 440 248  78 687 259 746 583
 423 367 611 777 720 227 604 601 109  42  89 775 532 538 628 451 315 419 438 140 712 574 599  94 665 350 297 422
 492 783 664 594 404 194 338 582  27 409 566 489   5 311 718 166 584 151  67 548 558 516  25 455  72 274 267 529
  36  96 339 192 129 351 123 446 560 619 769  73 610 285 749 230 518 675 644 750 649 770  28 137 454 415 715 638
 410 497 585 436 470 754 392 540 521 681 473 284 210   1 175  51 514 124 534 528 279 398 478 397 425 134 195 504
 466 507 479 481 286  39  22 745 319  87 407 562 202 573 445 536 482 498 272 496 487   3 717 505 467 461 401  45
 501  65 508 421 778 460 396 782 607 335 670 448 348 642 255 184 247  26 697 416 376 384 744  40 463 177 648 212
 450  60 615 251 595 517 116 590 224 269 631 121 462 154 209 677 549 533 759  62 740 300  59 700  93 602 132 520
 734  92  91 221 550 591 452 213 225 593 165 189 342 427 597 596 449 241 499 690 391 679 353 381 360  58  41 417
  17  83 500 118 183 568 666 211 431 494 618 193 736 273 343 589 739 163 650 531 747 265  95 196 557 555 570 126
  82 609 735 748  29  79 291 345 324 218 373 228 377 368 371 320 447 356  12 659 621 541 689 544 704  35 256 629
 626 443 513 667 328  13 223 414 101 612 321 331 710 716  53 145 346  31 564  64 413 723 355 340 635 645 309 349
  52 530  21 254 280 332 542 169 693 233 326 412 389 633 405 620 765 276 152 290 676 674 200 199 433 295 539 600
 242 430 622 226 263 655 364   4 459  50 262 385 289 606 527 197 260 616 281 472 559 104 535 592 774 314 636 266
 138 495 357 563 553 474 512 299 738 424 395 406  99  37 429 387 103 458 511 229  44 577 186 772 727 669  56 352
  18 685 136 277 617 581 663 216 250 378 198 188 477 117  33 131 313 767 400 114 214 646 656 731 556 386 543 699
 756 336 694 598 441 219 330 732 282 308 671 561 239 171 178 390 179 143  23 130 580 158 493 420 292 258 651 757
 301 682 182 614 576 156 571 695   6 434  49 483 547 485 728 428 393 696 724 112  71 316 157 288 249 484 465  98
 657  38 781 383 327 139  54 476 408 761   9 245 148 366  32 147 372  84 187 403 554 125 411 122 268 204 726 113
 374 707  46 652  68 253 146 402 375 236 160 706 654 358 317 323  15 334 439 220  81 173 713  48  80 701 572 519
 303 647 108 164 333 354 565 488 641 150 306 524 525 469 632 127 658 587 586 365 271 491 128 347 359  43 329 490
 637 298 362 275 758 307  76  97 153  19 232  75 691 575 515 764 613 243 382 442   7 264 207 503  61 768  66 174
 217  70  47 426 692 705 686 546 698 639 703 569 771  16 231 729 640 552 711 755 394 743 435 418 180 725 341 119

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00596e+07us (= 10059.6ms, 10.0596s)
Satisfaction error: 13
Number of search iterations: 2428
Number of local moves: 2013 (including on plateau: 1969)
Number of local minimum: 22 (including on plateau: 258)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 784 380 312 283 69 296 780 190 208 653 437 567 305 683 457 672 142 370 302 627 161 603 191 579 471 344 168 257 => the sum is 11291 rather than 10990
Problem in row 4: 444 578 237 506 201 779 246 270 203 55 526 660 304 773 688 702 185 510 605 624 144 24 630 215 379 522 102 661 => the sum is 11773 rather than 10990
Problem in row 5: 159 155 475 181 678 57 105 100 222 625 85 162 766 752 8 238 714 111 235 719 361 90 608 643 206 634 86 106 => the sum is 9281 rather than 10990
Problem in row 7: 423 367 611 777 720 227 604 601 109 42 89 775 532 538 628 451 315 419 438 140 712 574 599 94 665 350 297 422 => the sum is 12519 rather than 10990
Problem in row 8: 492 783 664 594 404 194 338 582 27 409 566 489 5 311 718 166 584 151 67 548 558 516 25 455 72 274 267 529 => the sum is 10788 rather than 10990
Problem in row 9: 36 96 339 192 129 351 123 446 560 619 769 73 610 285 749 230 518 675 644 750 649 770 28 137 454 415 715 638 => the sum is 12000 rather than 10990
Problem in row 12: 501 65 508 421 778 460 396 782 607 335 670 448 348 642 255 184 247 26 697 416 376 384 744 40 463 177 648 212 => the sum is 11830 rather than 10990
Problem in row 14: 734 92 91 221 550 591 452 213 225 593 165 189 342 427 597 596 449 241 499 690 391 679 353 381 360 58 41 417 => the sum is 10637 rather than 10990
Problem in row 15: 17 83 500 118 183 568 666 211 431 494 618 193 736 273 343 589 739 163 650 531 747 265 95 196 557 555 570 126 => the sum is 11217 rather than 10990
Problem in row 24: 657 38 781 383 327 139 54 476 408 761 9 245 148 366 32 147 372 84 187 403 554 125 411 122 268 204 726 113 => the sum is 8540 rather than 10990
Problem in row 25: 374 707 46 652 68 253 146 402 375 236 160 706 654 358 317 323 15 334 439 220 81 173 713 48 80 701 572 519 => the sum is 9672 rather than 10990
Problem in row 27: 637 298 362 275 758 307 76 97 153 19 232 75 691 575 515 764 613 243 382 442 7 264 207 503 61 768 66 174 => the sum is 9564 rather than 10990
Problem in row 28: 217 70 47 426 692 705 686 546 698 639 703 569 771 16 231 729 640 552 711 755 394 743 435 418 180 725 341 119 => the sum is 13758 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 781 222 782  22 569 143 595 248 778 368 701 498 776 160 205 178  56 711 141  24 544 614  99  89 251 240 433 762
 673 516 307 310  21 144 111 736 140 749 604 338 378 605 453 524 755 311 767 592 277 353  19 515 740 414 730 226
 531 289 725 502 629 507 330 215 324 328 488 127  41 567  73 543 103 439 265  93 385 648 642  33 612 710 470 371
  83 148 561 674 654 751 672 445 528 480 179 348 250 443 526 227  95 217 568 101 589 577 726 343 675 422 613 304
 598 784  84 597 468 691 152 557 655  77  69 537 199 763 312 706  92 766  38 720  76  48 550 610 578 177 538 497
   4 377 705 738  67 637 337 682 689 329 523 693 700  18 599 774 718 464 350 759 117 115 365 244 534 607   5 155
 698 264 336  54 316 168 584 600 737 772 276  80 238  82 668  57 454 182 666 326 504 619 611 158 242 214 753 331
 662 492 750 694 280 204 777 555 357 669  61 573 300  28 195 198 476 332 514 583 579  98  91 175  12 102 570 663
 374 496 266 194 783 702 491  74 505 608  36 458 685 133 500 202  37 129 239 529 761 551 302 741 334 482 167 290
 440 249 591 262 545 288 252 379 135 547 559   7 297 225 590  16 333 131 546  32 190 149  45 641 651 560 344 109
  30 363 285 564 474 588 449 134 540   9 486 495 452 220 212 494 292 503 548 196  62 485 483 721 469 477 451 508
  42 465 463 479 426 263 692 645 146 727 370 490 145 228   1 615 501 575 113 460 223 185 110 283 715 282 602 744
 752  86 176 237 233   3 207 362 118 628 119 459 425 532 221 397 658 650 309 739 188 408 686 733 247 536 478 403
 646 401 291 420 411 409 327 399 383 429 446 412 410 147 369 342 416 367 417 427 384 394 396 418 423 347 340 419
 364 372 421 402 388 366 390 389 373 387 407 444 361 415 398 395 345 349 375 352 298 392 424 747 359 382 360 335
 162 729 193 475 436 539 519  47 164  23 183  53 256 640  20 527 219 206 661 585 259 246 461 609 467  26 635  31
  65 187 170 493 687 321 513 106 254 428 430 346  17 558 594 734 354  66 630 441 112 216 709 224 142 596 703 484
 286 656 580 732 317 472  11 683 156  35 322 644 623 773 714 258 236 319 320  14 437 671 466 697  81 124 166 197
 174  49 339 582 232 724 355 775 624 315 601 634 521 169 231 593 556 680 296 281 699 716 760 306 758 679 272 562
 620 576 489 150  29 606 745 260 511 161 386 163  87 659 318 712 139 213 713 208 447 768  88 393 553 284 203 509
 229   6 271 299 743 434 717 210 735 165 770 704 431 780  64  27 639  97 153 180 230 708 241 525 137 746 122 627
  71 572 268  72 138  55  85  13 400 530 294 123 616 245 325 323 313 722 728 376 667 132 308 253 114 235 471 688
 660 128 571 380  44 171  63 542  10 406 305 151 621 506 731 209 681 159 587 184  94 455 100 404 754 653 356 201
 261 652 358 633 116  78 125 512 481 218 707 756 678 191 287 442 457  39 450 381 293  59 665 631 243 107 552 618
 695 617 274 154 172 566 136 522 413 255 632  70 748 742 769 473 126 563  43 696 456 301 351  34  40 764 257 121
 765 684  58 279 723 303 541 432   8 657 636 267  15 200 448 269 603 677  52 638 643 314 581   2 270 130 105 690
 278  90 625  75 554 181 192 295 435 533 189 341  50 462 518 108 771 574 405 586 719 104 438 275  79  68  60 120
  46 520  51 517 535 676 622 173 391 157 211 779 670 499 649 647 565 549  96 487 757 664 273 186 510 626 234  25

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00604e+07us (= 10060.4ms, 10.0604s)
Satisfaction error: 13
Number of search iterations: 2467
Number of local moves: 2054 (including on plateau: 2010)
Number of local minimum: 14 (including on plateau: 243)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 673 516 307 310 21 144 111 736 140 749 604 338 378 605 453 524 755 311 767 592 277 353 19 515 740 414 730 226 => the sum is 12308 rather than 10990
Problem in row 4: 83 148 561 674 654 751 672 445 528 480 179 348 250 443 526 227 95 217 568 101 589 577 726 343 675 422 613 304 => the sum is 12199 rather than 10990
Problem in row 5: 598 784 84 597 468 691 152 557 655 77 69 537 199 763 312 706 92 766 38 720 76 48 550 610 578 177 538 497 => the sum is 11939 rather than 10990
Problem in row 6: 4 377 705 738 67 637 337 682 689 329 523 693 700 18 599 774 718 464 350 759 117 115 365 244 534 607 5 155 => the sum is 12305 rather than 10990
Problem in row 9: 374 496 266 194 783 702 491 74 505 608 36 458 685 133 500 202 37 129 239 529 761 551 302 741 334 482 167 290 => the sum is 11069 rather than 10990
Problem in row 10: 440 249 591 262 545 288 252 379 135 547 559 7 297 225 590 16 333 131 546 32 190 149 45 641 651 560 344 109 => the sum is 9113 rather than 10990
Problem in row 16: 162 729 193 475 436 539 519 47 164 23 183 53 256 640 20 527 219 206 661 585 259 246 461 609 467 26 635 31 => the sum is 9371 rather than 10990
Problem in row 17: 65 187 170 493 687 321 513 106 254 428 430 346 17 558 594 734 354 66 630 441 112 216 709 224 142 596 703 484 => the sum is 10580 rather than 10990
Problem in row 19: 174 49 339 582 232 724 355 775 624 315 601 634 521 169 231 593 556 680 296 281 699 716 760 306 758 679 272 562 => the sum is 13483 rather than 10990
Problem in row 22: 71 572 268 72 138 55 85 13 400 530 294 123 616 245 325 323 313 722 728 376 667 132 308 253 114 235 471 688 => the sum is 9137 rather than 10990
Problem in row 23: 660 128 571 380 44 171 63 542 10 406 305 151 621 506 731 209 681 159 587 184 94 455 100 404 754 653 356 201 => the sum is 10126 rather than 10990
Problem in row 27: 278 90 625 75 554 181 192 295 435 533 189 341 50 462 518 108 771 574 405 586 719 104 438 275 79 68 60 120 => the sum is 9125 rather than 10990
Problem in row 28: 46 520 51 517 535 676 622 173 391 157 211 779 670 499 649 647 565 549 96 487 757 664 273 186 510 626 234 25 => the sum is 12115 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 505 247 779 696 665 116 158 244 210 702 577  95 198 313 483 709 666 651 410  11 712 691 490 339 616 646 752
 114 750  23 751 209 239 316 164 238 669  81 746 250 692 110 556  38 728 472  21 586 159  82 756 228 731 708 573
 131 184   3 162 254 464 328 172 111 229 568 672 382 593 582 310  60 126   7 378 142 660 193 763  89 700 615 581
 454 270  90 617 776  91 479  98  49 323 115 154 718  39  68 687 532 589 690 438 768 508 257 292 706 539 336 307
 533  76 760 346 603  84 677 608 661 717 401 297  74  13 474 643 632 560  12 695 511 584 631 612 109 128 391  18
 518 675 495 251 482 282  92 673 208 780 535 213 502 629  35 102 753 192 117 433 265 309 597 689 230 609  86 318
 287 680 524 191 301 509  64 625 371 635 404 769 741 145 732 103 652 267 766 633 246 622 414 290 147 534 264 620
 468 575 259 623 376  93 262 563 614  97 173  56 467 304 771 590 555 118 190  32 567 157 743 678 373 180 554 552
 326 644   1 167 334 152 783   2 523 529 205 432 220 765 572 606 295 365 271 561 653  47 520 570 605 360  42 440
 189 342 338 177 701  58 153 527 668 591 395 134 522 207 300 136 222 486 730 187 503 119 293 179   9 596 276 521
 564 138 299 630 755 641 258 253  37 305 621 487  52 217 243 757 510 496 439 144 186   5 397 337 682 542  31  94
 638 204 716 601 540 530 519 719 105  27  55 636  72   6 170 686 457  14 129 658 744 525 431 471 241 749 726 721
 123 450 592 412  54 405 430 428 453 456 600 458 436 422 435 386 403 602 537 160 544  20  50 420 657 150 327 580
 416 441 418  59 419 384 411 413 437 393 449 444 390 398 370 506 448 426 427 350 396 387 375 388 429 225 392 399
 363 409 725 383 408 400 377 355 359 288 319 369 394 380 772 364 331 434 424 361 357 233 349 389 366 353 343 385
 452 781 194 320 125 368  69 351 536 358 782 344  73 362 324 302 354 764 333  70  65 705 759 402 294 277 538 688
  96  36 215 112 451 777 548 289 485  87 381 356 484 655 148 767 315 578 340 367 574 684 626 206  79 308 455 571
 516 611 281 460 231 747 637 218  77 595 273 569 770 269 256 255  43 504 140 583 303 545  25 500 727 488  71 566
 745 724 227 676 656 723 562 108 558 279 553 249 325 607 442 182 235 266 296 260 446 667  22  44 475 628 550 285
 739 212 242 283 565 481  17 513 245 740 261 528 240 649 248  30 122 473 662 314 715 345 650  19 176 738 683 100
 517 447 734 335 543 284 512 188 775 492 252 203 476 466 648 268 311 130 234 639  63 624 736 161 594  34 120 178
 697 278 286 183 549 499 139  57 514 143 713 224 576 106 507 185 579 681 461 223  83 221 714 618 722 263 645 124
  99 169 659 423 175 107 627 317 699 694 703 710 137   8 306  88 168 132 149 761 421 557  67 634 156   4 341  51
  62 298 619 654 195 707 348 762 219  41 462  40 640 729 642 497 197 165 610 551 200  45 541  78 415 196 698 379
 498 587 477  80  46 588 711 679 272 515  15 127 321 493 406 202  66  33  24 329 663 171 291 151 685 599 674 470
 141 347 332 469 232 236 214 425 735 135  29 211 774 742 598 174 773 720 546  10  28 216 312 237 465 226  48 322
 494  53 480 113 181 330 604 778 352 463 526 372 166 407  75 647 671 374 585 758 280 704 163 531 501  16 155 274
  26 104 754 733 133 146 737 547 445 199 417 613 693 489 443 478 559 101 748 664 670 459  61  85 491 201 275 121

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00594e+07us (= 10059.4ms, 10.0594s)
Satisfaction error: 16
Number of search iterations: 2274
Number of local moves: 1947 (including on plateau: 1906)
Number of local minimum: 10 (including on plateau: 198)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 784 505 247 779 696 665 116 158 244 210 702 577 95 198 313 483 709 666 651 410 11 712 691 490 339 616 646 752 => the sum is 13465 rather than 10990
Problem in row 3: 131 184 3 162 254 464 328 172 111 229 568 672 382 593 582 310 60 126 7 378 142 660 193 763 89 700 615 581 => the sum is 9459 rather than 10990
Problem in row 5: 533 76 760 346 603 84 677 608 661 717 401 297 74 13 474 643 632 560 12 695 511 584 631 612 109 128 391 18 => the sum is 11850 rather than 10990
Problem in row 6: 518 675 495 251 482 282 92 673 208 780 535 213 502 629 35 102 753 192 117 433 265 309 597 689 230 609 86 318 => the sum is 11070 rather than 10990
Problem in row 7: 287 680 524 191 301 509 64 625 371 635 404 769 741 145 732 103 652 267 766 633 246 622 414 290 147 534 264 620 => the sum is 12536 rather than 10990
Problem in row 10: 189 342 338 177 701 58 153 527 668 591 395 134 522 207 300 136 222 486 730 187 503 119 293 179 9 596 276 521 => the sum is 9559 rather than 10990
Problem in row 11: 564 138 299 630 755 641 258 253 37 305 621 487 52 217 243 757 510 496 439 144 186 5 397 337 682 542 31 94 => the sum is 10120 rather than 10990
Problem in row 12: 638 204 716 601 540 530 519 719 105 27 55 636 72 6 170 686 457 14 129 658 744 525 431 471 241 749 726 721 => the sum is 12090 rather than 10990
Problem in row 18: 516 611 281 460 231 747 637 218 77 595 273 569 770 269 256 255 43 504 140 583 303 545 25 500 727 488 71 566 => the sum is 11260 rather than 10990
Problem in row 19: 745 724 227 676 656 723 562 108 558 279 553 249 325 607 442 182 235 266 296 260 446 667 22 44 475 628 550 285 => the sum is 11790 rather than 10990
Problem in row 21: 517 447 734 335 543 284 512 188 775 492 252 203 476 466 648 268 311 130 234 639 63 624 736 161 594 34 120 178 => the sum is 10964 rather than 10990
Problem in row 23: 99 169 659 423 175 107 627 317 699 694 703 710 137 8 306 88 168 132 149 761 421 557 67 634 156 4 341 51 => the sum is 9362 rather than 10990
Problem in row 25: 498 587 477 80 46 588 711 679 272 515 15 127 321 493 406 202 66 33 24 329 663 171 291 151 685 599 674 470 => the sum is 10173 rather than 10990
Problem in row 26: 141 347 332 469 232 236 214 425 735 135 29 211 774 742 598 174 773 720 546 10 28 216 312 237 465 226 48 322 => the sum is 9697 rather than 10990
Problem in row 27: 494 53 480 113 181 330 604 778 352 463 526 372 166 407 75 647 671 374 585 758 280 704 163 531 501 16 155 274 => the sum is 11053 rather than 10990
Problem in row 28: 26 104 754 733 133 146 737 547 445 199 417 613 693 489 443 478 559 101 748 664 670 459 61 85 491 201 275 121 => the sum is 11392 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  14 511 550 146 332 700 145 383 252 559 460 548 328 314 502 305 104 680 306 109 574 231 567 744 159 607 565 295
 363 621 549 499 628  64 736 402 651 404 775 131 390 291  71 637 154 611 135 758 263 158  18  27 715 765  26 148
 207 341 732  19 256  42 189 321 774 300 259 606  37  75  74 424 294  13 737 432 538 202 683 278 181 439 372 540
  29 571 267 702 239 174 412 515 662 610 185  95  54 105  21 187 501  91 697 644 558 572 317 671 107 508  35 669
 160  39 643   8  32 711  61 188 748 778 613  45 219 419 631 592 615 277 194 266 685 699 724 639 537 381 389 108
 618 657 240 594   3 624 487 122  90 634 642 641 625  98 276 676 519  16 380 273  51 668 629 608  24 334 320 141
  46 163 138 249 782 124 147 232  34 726 560 684 733 175 422 172 290 542 593 374 640 747 101 598 710 740 245  23
 526 129 488 721 303 449 307 340 709 287 433 179 595 162 224  86 645 392  28 728 583 403 551  57 281 369 561 454
 420 465 227 264 271 118 115 719 573 541  65 739 196 563 304  17 362 576 757  25 693 254 285 153 678 477 137  36
 230 200 201 222 518 539 409  40 616 531 718 258 333 691 142  68 532 545 489 127  38 425 471 448 302 673 490 734
 507 605  22  99 653 121 776 546 463  12 504 475 133 472 173  69  33 484 647 612 528 630  20 725 575 423 397 286
 213 456 581 493 114 323 513 753 503 197  96 495 481 763 773 292 247 638 470 151 401 325 299 143 478  31 297 464
 120 234 742 309 589 316   4 679  62 701 418 354 416 235 633 445 577 522  70  15 156 474 760 442  73 756 406 482
 682 203  78 388 650 209 694 620 452 435 759 399 112  43 395  63 632 770 588 313 447 681 364 199 157  55 431 171
 386 648 543 411 636 373 410 378 324 377 384 368 360 716 391 408   1 352 396 476 344 407 387 261 348 353 210 342
 398 405 331 359 350 347 367 345 426 319 361 282 415 767 649 584 216 339 336 351 357 382 338 322 358 686 265 335
 590 113  79 586  47 779 169 376 184 128 698 242 506 161 198 627 400 444 103 529 326  76  41 466 327  10 144 520
 255 116 473  52 713 552 241 672 706  89  72 268 168 635   2 769 450 253 556 509 617 102 517 730 602  67 217 587
 349  58 244 754 603 251  49 195 270 280 346 111 570 486 497 496 494 434 289 596 468 125 205 547 461 428 677 707
 762 597 523 119 296 457 536 491 591 690 214 727 459 535 674 745 781 257 534 654 453 370 665 208 579 260 695 212
 658 178 225 689 100 236 275 365  30 485  56 527 660 555 480 220 283 238 443 600 140 743 525 441 764 132 663 279
 646 437 582 777 755 585 176 192 170 186 562 166 768 604 308 183 177 190 110  87 150 237 720 274 218 714 394 622
 440 233 117 664 498 667 738  82 262 458  85 772   6 601 469 436 246 741  60 708  50  59 462 566 366 483 623 191
 655 735 269 355  93 421 619 780 492  44 512 123 229 136 751 429 723  77 211 312 766 771 393  88 430  97 413  66
 106 293 656 318 193 750 704  80 284 226 248 446 288 438 712 554 467 250  83 451 521 533 134 356 385 298 557 659
 731 688 666 599 530 206 569 414 417 752 139 703 675 228 130 500  11 330 315  94 337 152 479 749   9 329 614 375
 311 784 215 167 722 580 687 182  81  92 165  53 729 379 564 310 692 705 746 126   5 516 180   7 652 204 221 761
 568 510 609 427  84 272 455 578 164 149 661 553 505 343 524 696 544 223 717 670 301  48 155 243 514 371 626 783

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00592e+07us (= 10059.2ms, 10.0592s)
Satisfaction error: 11
Number of search iterations: 2255
Number of local moves: 1916 (including on plateau: 1871)
Number of local minimum: 20 (including on plateau: 205)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 207 341 732 19 256 42 189 321 774 300 259 606 37 75 74 424 294 13 737 432 538 202 683 278 181 439 372 540 => the sum is 9365 rather than 10990
Problem in row 4: 29 571 267 702 239 174 412 515 662 610 185 95 54 105 21 187 501 91 697 644 558 572 317 671 107 508 35 669 => the sum is 10198 rather than 10990
Problem in row 5: 160 39 643 8 32 711 61 188 748 778 613 45 219 419 631 592 615 277 194 266 685 699 724 639 537 381 389 108 => the sum is 11401 rather than 10990
Problem in row 9: 420 465 227 264 271 118 115 719 573 541 65 739 196 563 304 17 362 576 757 25 693 254 285 153 678 477 137 36 => the sum is 10030 rather than 10990
Problem in row 17: 590 113 79 586 47 779 169 376 184 128 698 242 506 161 198 627 400 444 103 529 326 76 41 466 327 10 144 520 => the sum is 8869 rather than 10990
Problem in row 20: 762 597 523 119 296 457 536 491 591 690 214 727 459 535 674 745 781 257 534 654 453 370 665 208 579 260 695 212 => the sum is 14084 rather than 10990
Problem in row 23: 440 233 117 664 498 667 738 82 262 458 85 772 6 601 469 436 246 741 60 708 50 59 462 566 366 483 623 191 => the sum is 11083 rather than 10990
Problem in row 26: 731 688 666 599 530 206 569 414 417 752 139 703 675 228 130 500 11 330 315 94 337 152 479 749 9 329 614 375 => the sum is 11741 rather than 10990
Problem in row 27: 311 784 215 167 722 580 687 182 81 92 165 53 729 379 564 310 692 705 746 126 5 516 180 7 652 204 221 761 => the sum is 10836 rather than 10990
Problem in row 28: 568 510 609 427 84 272 455 578 164 149 661 553 505 343 524 696 544 223 717 670 301 48 155 243 514 371 626 783 => the sum is 12293 rather than 10990
Problem in diagonal 1: 295 26 439 107 639 629 747 583 25 489 484 247 445 395 716 415 242 72 280 591 365 176 667 93 318 666 784 568 => the sum is 11503 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 644 152 551 187 136 539  54 729 779 617 329 566 524 574 746  21  64 160 145  25  79  53 652 388 300 764 428
 708 142 247 208 609 363 689 553 270 209 104 167 140 624 259 671 538 349  62 475 649 628 554 210 161 505 731 165
  72 375 583 603 570 634 723 514 464  15 170  87 720 461 154  58 156 632 377 343 233 183 686 600 679 130  52 716
 694 250 563 333 212 715 151 711  75 272 446 239 489  56 255 541 243 234 445 662   2 674 572 124 669 358 293 712
 480 714 680  32  16 284  39 235 128 111 576 664  67 665 684 677  80 672 645  51 578 587  17 643 642 331 633  59
 520 306 314 285 474 546  49 266  65 755   4 189 129 584 528 585 481  93 291 631 610 271 635 761  47 699 253 619
 559 435 493 540  30 195 115 772 479 168 273 745 196 182 176 171 630 341 768  42 482 601 534 404 466 743 225 462
 670  28 676 592 304 249 290 591 532 179 278 726 264 185 569 580 564  11 582  44 593  20 119 709 571  97 454 513
 190  76 719 281  68 735 494 135 562 346  95 596  92 261 637 118 730 166 248 717 292 737 766 236 733 491 108 361
 109 116 515 504 728 419 275 420  50 523 162 498 125 380 502 519 753 451 496 244 495 254 339 312 227 656 721 197
 526 718 127 219  38 221 205 765 667 614 501 473 503 267 497  98  84 279 418 307 193 453 280 509 476 492 561 499
 759 198 238 186 691 696 589 615 262 194  41 472 618 727 137 460 511 770 106  48 330 211 457  43 229 444 308 650
 252 611 433 488  90 530 192  27 486 710 382 450 469 673 682 422  82 537 143 430 458  37 478 535 552 325 313 203
 122 427 442 431 391 424 447 398 434 392 438 374 393 372 367 400 412 410 411 389 347 417 416 440 369 355 387 385
 376 426 413 394 357 441 750 322 379 356 425 386 408 350 403 402 395 338 409 406 397 328 318 362 359 352 354 384
 518 775  24 470 310 455 722  13 456 556 337 286 348  77 549 324 134 246 661 760 335 666 697 365  12 321 336 237
 251 294 448 575 700 153 123 744 734 678 543 327 547 222 258 260 345 763 107 332  86 164 724 241 483 311  35 542
 163 206 159 368 756 565 641 371 218  57 370 121 529 144  29 703 452 749 568 155 467 762 126  63 757 415 545 531
 654   7 599   8 213 231 188  19 316 289 597  69 351 471 301  14 268 706 557 663 608 364 215 100 296 297 459 353
 629 659 782 102 508 780 282 695 220 378 390 621 681  78 704 132 276 414 713 207 748 725 558 555 277 590 223 405
  55 149 381 657 295 577 701 232 323 112 317 769  10 560  89 777 622 522 214 738 226   1 139 204 707 487 683 443
 588 627 616 658 754 533  60 527 620 595 767 147 752 177  71 468 638 320 180 739  33 169  34 257 114 287 174  85
 373 544 216 778 288 141  94 521 510 217 751  99 626 606 741 158 675 305  61 485 269 477 105 436 175 573 536 230
 315 484   9 224 512   3 693 516 383 688 360 579 640 401 781 340 319 396 651 594 228 506 449 263  40 103 439  74
 326 604 758 685 437  88 607 110  96 747 605 550 245 407 366 173 181 623 465  31 184 133 490 736 120 432 138 653
 201 567  81 113 773 740 598 698 117 646  73 131 774  23 429 303 178 199 342 581 692 702 309  22 191 586 421 500
  26  83 150 242 256  91 668  18 639 399 636 283 302 742  46 200 705 299 612 146 783 334 265 548 648  36 687 344
  70 525 172 463 423  45  66 148 776   5 732 613   6 771 202 690 517 101 298 625 647 507 655 660 602 274 157 240

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00613e+07us (= 10061.3ms, 10.0613s)
Satisfaction error: 4
Number of search iterations: 3295
Number of local moves: 2763 (including on plateau: 2710)
Number of local minimum: 22 (including on plateau: 339)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 559 435 493 540 30 195 115 772 479 168 273 745 196 182 176 171 630 341 768 42 482 601 534 404 466 743 225 462 => the sum is 11227 rather than 10990
Problem in row 19: 654 7 599 8 213 231 188 19 316 289 597 69 351 471 301 14 268 706 557 663 608 364 215 100 296 297 459 353 => the sum is 9213 rather than 10990
Problem in row 20: 629 659 782 102 508 780 282 695 220 378 390 621 681 78 704 132 276 414 713 207 748 725 558 555 277 590 223 405 => the sum is 13332 rather than 10990
Problem in row 27: 26 83 150 242 256 91 668 18 639 399 636 283 302 742 46 200 705 299 612 146 783 334 265 548 648 36 687 344 => the sum is 10188 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 192 274 754 722  63 695 492 418 158 477 515 603 223 676 142 485 657 466  79 664 439 457 351 679 373 622  62 765
 608 625 105 321 723 416 780 503 407 389  60 631  16 483 682 712 462 419 480 454 773 353 467 249   5  95 411 568
 745 504 730 109  85  86 396 731  98 628 668  17 714 744   2 409 707  81 171 681 489 130 479 273  38 782 216 277
 784 238 449 692 517 242  68 153 371 690 614  55 739 532 285 735 135 642  56 647 446 400 219 291 656 241  22  71
 627 392 617 620 552   7  24 704 257 508 134 658  72  35 386 220 438  61 738 203  14 327 244 616 474 769 705 588
  89 202 245 757 424 632 709 775  66  10 311 100 478 537 527 248  73 629 768 312 737 265 615 365 306 284 147 606
 344 381 301 339  51 255 104  75 660 558 294 582 593 232 148 204 124 323 316  58 475 609 162 177 283 322 756 189
 635 471  39 168 776   3 710 618 752 781 213 619  47 231 604 332 585 650 607 185 578 305 729 256 490 309 437 671
 201 482 533 463 525 687 151 544 577 598  84 565 706 596 536 570  23  43 550 505  99   4 486 428 188 224 546  76
 560 590 529 198 594 581 253 605 297 458 777 114 317 149 774 494 234 572 613 103 145 221  83 229 397 233 398 472
 217  37 783 648 206 778 271 252 501 666 488 290 448 333 268 155 567 451 441 742  20 758 363 641 121 157 214 174
 461 117 674 146 498 521 444  91 469 141 728 445 131 315 250 286 465 166 530  12 511 267 750 716 180 548 279 538
 287 455 634 335 260 440 583 225 378  54 240 562 459 345  93 421 755 159 195 390 611 653  70 661 110 417 495 703
 655 385 414 556 388 502 713 376 667 711  21 144 179 387 356 763 303 415  45 368   6 630 542 549 726 372 644 436
 394 425 367 410 406 432 337 379 360 369 338 358 382 725 374 391 357 413 401 403 366 393 340 318 408 383 377 384
 132 718 239 541 470 259 313 362 680 101 652 516 402 443 645 364  92 359 698 176 326 497 108 761 230 350 510  46
  87 767  26  64 473 208 246 543 261  33 412 112  30  49 540 672 122 770 643 342 288  27 721 380 187 678 354 528
 700 746 534  13 507 569 584 405 295 330 278  18 165 592  67 107 355 320 600 456  11 688 686 106 545  53 595 665
 513  25 697 266  90 296 186 743 429 254 111 209 663 215 292 621 740 143 205 760 170  50 574  80 624 732 175 154
 218 200 237 280 264 591 566 191 199 637  52 251 601 115 741 640 341  97 395 169 586 693 210 561 759 557 535 304
 184 282 310 779 348 289 156 227 140 434 623 427 531 659  96 571 194 361  29 651 551 715 263 183 677 602 258 450
 324 325 343 247 646 496 331  94 163 243 150 524 506 766 211 178 699 724 197 610 684 136 423   9 426 493 308 734
  36 736 120 654 751  32 702 119 226 276 675 523 649 236 500  74  77 235 694 547 375 452 575 499  69 133 673 430
 420 509 476 487 125 733 518 612 597 196 491 431 717 433 553 526 329 579 300  57 563 181  19 116 636 453 269 464
 447 152 555 113 172 349  42 460 576 228 399 161 299 719 173 128 435 314 126 370 701 207 520 272 685 468  15 262
 336 580 118  59  82 708 691 193 771 747 764 554   8 102 670 138 762 683 307 422 404 559  48 222 302  34 638  88
 753 190   1 484 696  44 589 514 512 346 564 749 587 212 442  65 689 167 669 539 275 293 662 727 573  40 352 319
  41 182 160 519 298 139  31  78 123 127 334 772 328 129 633 481 270 748 137 164 347 720 281 626 522 639 599  28

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00614e+07us (= 10061.4ms, 10.0614s)
Satisfaction error: 14
Number of search iterations: 2327
Number of local moves: 1967 (including on plateau: 1924)
Number of local minimum: 14 (including on plateau: 237)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 192 274 754 722 63 695 492 418 158 477 515 603 223 676 142 485 657 466 79 664 439 457 351 679 373 622 62 765 => the sum is 12503 rather than 10990
Problem in row 2: 608 625 105 321 723 416 780 503 407 389 60 631 16 483 682 712 462 419 480 454 773 353 467 249 5 95 411 568 => the sum is 12197 rather than 10990
Problem in row 6: 89 202 245 757 424 632 709 775 66 10 311 100 478 537 527 248 73 629 768 312 737 265 615 365 306 284 147 606 => the sum is 11217 rather than 10990
Problem in row 7: 344 381 301 339 51 255 104 75 660 558 294 582 593 232 148 204 124 323 316 58 475 609 162 177 283 322 756 189 => the sum is 8915 rather than 10990
Problem in row 8: 635 471 39 168 776 3 710 618 752 781 213 619 47 231 604 332 585 650 607 185 578 305 729 256 490 309 437 671 => the sum is 12801 rather than 10990
Problem in row 12: 461 117 674 146 498 521 444 91 469 141 728 445 131 315 250 286 465 166 530 12 511 267 750 716 180 548 279 538 => the sum is 10679 rather than 10990
Problem in row 14: 655 385 414 556 388 502 713 376 667 711 21 144 179 387 356 763 303 415 45 368 6 630 542 549 726 372 644 436 => the sum is 12253 rather than 10990
Problem in row 17: 87 767 26 64 473 208 246 543 261 33 412 112 30 49 540 672 122 770 643 342 288 27 721 380 187 678 354 528 => the sum is 9563 rather than 10990
Problem in row 19: 513 25 697 266 90 296 186 743 429 254 111 209 663 215 292 621 740 143 205 760 170 50 574 80 624 732 175 154 => the sum is 10017 rather than 10990
Problem in row 23: 36 736 120 654 751 32 702 119 226 276 675 523 649 236 500 74 77 235 694 547 375 452 575 499 69 133 673 430 => the sum is 11068 rather than 10990
Problem in row 24: 420 509 476 487 125 733 518 612 597 196 491 431 717 433 553 526 329 579 300 57 563 181 19 116 636 453 269 464 => the sum is 11790 rather than 10990
Problem in row 25: 447 152 555 113 172 349 42 460 576 228 399 161 299 719 173 128 435 314 126 370 701 207 520 272 685 468 15 262 => the sum is 9348 rather than 10990
Problem in row 27: 753 190 1 484 696 44 589 514 512 346 564 749 587 212 442 65 689 167 669 539 275 293 662 727 573 40 352 319 => the sum is 12053 rather than 10990
Problem in row 28: 41 182 160 519 298 139 31 78 123 127 334 772 328 129 633 481 270 748 137 164 347 720 281 626 522 639 599 28 => the sum is 9456 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 397 116 236  62 270 575 222  11 245 177 414 221 512 193 623 463 388 759 210 197 724 685 104 456 583 627 765 755
 326 744 420 156 355 230 409 620 676 470 292 640 764  70 451 371 239 109 534   5 600 768 770 391 449 545 462 493
  93 589 395 264  79 636 487 382 603 291 577 313 729 581 408 289 572 308  34 596 439  61 417 284 662 131 445 325
 467 202 311 693 614 101 498 168 272 661 698 473  50 629 535  18 173 727 669 564 241  47 531 569 189 288 426 176
 621 112 384 630   3 232  87 613 749  51 410 548 343  20 212 479 767 544 126 404  65 686 692 580   8 626 608 390
 566 102 610 616 265 466 148 312   2 179 712 163 165  96 150 720 649 187 714 121 191 215  26 119 776  73 125 561
 324 738 491 342 200 710 582  29 500 519 694 492 144 529 696 538 670 602 106 774 735 652 736  28 195 644  97 160
 159 244 597 517 639  37 683 579 731 637 282  38 332 645 465  56 658 419 438 378 502  30 547 494 181 127 421 154
 700 539 161  58 745 322 454 717 526   6 632 108 624 306  64 677 213 651 370 550 167 283 198 180 358 333  75 172
 638 560 679  43 203 592 708 166  27 509 522 249  14 660 171 520 478 183  90 217 448 453 521 543 635 516 437 208
 100 129 105 779 766 301 146 643 107  40 646 174 574 359 688 599 115  19 483 726 761 444 675 235 192  13 703 756
 142 784 271 114 392 707 252 278 464 734 219 373 361 723 760 443 287 425   7 527 665 622  69 593   9  12 268 489
 558 672  36 164 458  81 513  98 434 495 533 394 400 151 587 226 184 259 571 618 216  35 429 772 424 619 578 485
 441 476 260 641 673 140 609 748 233 722 459 225 145 447 379 262  83  72 631  82 309 633 650  22 224 573 657 194
 372 396 367 415 508 407 347 375 356 386 403 401 330 399 733 385 368 328 412 348 387 335 380 352 364 418 337 381
 365 341 349 411 681 302 334 398 363 323 344 728 237 298 357 702 360 338 362 377 329 111 294 671 680 231 383 321
  95 120 628 279  53 537 220 474 773 576 135 253 757 214  77 435 345 528 725 299  32 196 353 668 687 499 331 701
 117  17 554 376 307 188 684  68 585 250  49 617 648 775 518 354 536 317 469 413 551 223 515  41 339 374 542 563
 691 718  46 207 758 754 482 507 605 273  44 199 297 540 310 286 170  24 277 715 586 423  31 742 501 182 118 504
 276 486 711 450  45  39 269 568 327  85 137 567 530 138 350 514 261 625 229 218 290 552 604 505 751 716   1 746
 300 162 185 753  67  52 158 475 455 205 647  66 416 471 481 430  57 461 704 254 175 740 432 275 739 532 697 601
 752 634 266 209 460 293 402 510  60 771  33 762 488 336  42 242 315 257 678 132 234  76 263 699 713 778 113 472
 433 285 743 655 664 689 190 769 506 584 201 351  91 123 747 211 442 143 141 490 674 316 149 303  99 281 656  54
 122 436 606 280 124 615 611 695 240 393 598 780 452 422 612 130 750 607 588  55 204  94 525  80 556  15 186 295
 595 440 238 546 706 431 228 255 178 663 340 559 667 296  92 427 562 719 314  78 389 590 267 153  59 653 524  21
 594 591 783  86 152 781 305  71 136 318 346 134 206 570 128  10 732 405 763 659 557 737 541 782 133  88 243 139
 730 110  74 523 555 406 320 157 690 169 155 457 666 741 251 549  63 497  89 682 496 709  25  84 480 319 565 428
  16 247 484 721 248 366 642 304 147 503 468 705  48 258 103 654 553 477 256 511  23 274 246 369   4 777 227 446

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00538e+07us (= 10053.8ms, 10.0538s)
Satisfaction error: 8
Number of search iterations: 3022
Number of local moves: 2561 (including on plateau: 2511)
Number of local minimum: 17 (including on plateau: 294)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 326 744 420 156 355 230 409 620 676 470 292 640 764 70 451 371 239 109 534 5 600 768 770 391 449 545 462 493 => the sum is 12359 rather than 10990
Problem in row 6: 566 102 610 616 265 466 148 312 2 179 712 163 165 96 150 720 649 187 714 121 191 215 26 119 776 73 125 561 => the sum is 9029 rather than 10990
Problem in row 7: 324 738 491 342 200 710 582 29 500 519 694 492 144 529 696 538 670 602 106 774 735 652 736 28 195 644 97 160 => the sum is 12927 rather than 10990
Problem in row 9: 700 539 161 58 745 322 454 717 526 6 632 108 624 306 64 677 213 651 370 550 167 283 198 180 358 333 75 172 => the sum is 10189 rather than 10990
Problem in row 11: 100 129 105 779 766 301 146 643 107 40 646 174 574 359 688 599 115 19 483 726 761 444 675 235 192 13 703 756 => the sum is 11278 rather than 10990
Problem in row 24: 122 436 606 280 124 615 611 695 240 393 598 780 452 422 612 130 750 607 588 55 204 94 525 80 556 15 186 295 => the sum is 11071 rather than 10990
Problem in row 28: 16 247 484 721 248 366 642 304 147 503 468 705 48 258 103 654 553 477 256 511 23 274 246 369 4 777 227 446 => the sum is 10077 rather than 10990
Problem in diagonal 1: 755 462 131 189 580 26 652 502 550 90 19 287 226 379 399 237 253 49 273 327 475 402 689 124 546 783 110 16 => the sum is 9531 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 209 347 519 567  75 597  31  16 144 678  38 485  62   6 542  52 520 709 699 205  24 529 358  86 577 624  69 763
 460 754  61   8 264 240 461 722 428 296 525 194 764 315  35 758   4 286 149 769 414 151 700 774 231 257 759 211
 218 234 738 201 765 222 712 185  83 178 116 734 647 724  84 150 206 104 374 435 584 629 534 528 220 707  17 661
 138 186 689 784 469 667 173 459 291 705 198  54 697 251 569 655 708 140 118 100 340 670 325 121 674 174 372 263
 182 111 330 711 556 357 658  15 677  45  58 298 249  79 721 682 295 649 651 183 202 158 690 664 633 437 254 445
 309 237 300 344 547 645 346 169 287 650 157 164  76 230 692 587 737 447 420   2 516  25 615 601 429 342 555 561
 262 108 175 494 698 557 210 355 524  36 720 312 517 124 156 177 686 616  12 706 653 572  42 431 244 588 350 665
 536 531 612 290   1 703 558 115 733 426 443 260 565 385  10  57 619 736 729 258 281 510 549 496   7 252 162 166
 492  26 387 550 141 606 562 187 646 299 215 148 235  72 438 747  50 508 475 497  67 591 694 256 627 432 507 535
 403 246 554 533 354 270 195 656 127 609 563 480 727 745 440 155 600 197 133 585 383 181 179 189 356  63 756 311
 241 501 434 456 464 479 511 458 451 467 502 126 483 489 326 504 213 506 468 454  94  43 214 433 486 484 225 478
 139 589 781 509 439  20 652 128 455  92 770 199 673 503 112 408 498 541 598 159 761 683 152 233 752  90 643 538
  97 776  19 117 783 782  39 701 751 390 336 247 114 505 621 391 176  11 750 353 457 109 607 119  98 553 715 373
 317 188 755   5 635 514 684 324 448 620 465 217 518 618 343 611 392 310 526 417 568 687 493 477 716  80 125 732
 622 424 345 400 399 393 370 364 409 394 405 382 375 365 586 363 427 323 379 334 378 388 371 362 303 368 395 366
 671 666 476 623 302  33 487 748 228  53 401 415 359 696 129 333 564 322 285 335 306 482 191  34 331 301 593 626
 527 704 168 248 574 122 208 773  93 250  65 740 659 637 384 351 273 165 778  46 376 305 418  27 735 762 580  22
 513 297 741 599 540 327  73 278 407 753 280 416 261 320 259 332  74 284 660 289 628 113 276 675 275 728 321 271
 625 425 107 590 243  68  56 654 551 272 552 200 423 236 147 521 282 446  44 768 279 361  77  23 499  28 693  32
 613 472 386 537 713 725 245 681 253 530 614 184 221 411 663  85 771  87 136 642 163 412 304  59 594 232 123 134
 685  60 265 757 329 512  99 154 543 576 657 710  40 145 274 604 223 766 239   9 452 292 397 719 172 381 204 726
  78 170 216  18 638   3 515 341 488 180 739 610 267 545 767 532 644 396 419 744 227 648  55 718 318 668 319 473
 714 581 444 688 571 160 255 307 367 142 702 402  89 634 266 226 229 608 630 695 349 207 404 313 544 153 120 190
 662 352 348 369 110 398 560 450  81 137  41 548 592 595 308 413 462 602 470 570 135 410 717 105 242 669 578  66
 672 559 441 101  51 283 491 328 219 481 212 640 436 777 161 288 146  21 131 522 583  88 449 617  30 596 566 680
 474 730 192  95  48 422 316 546 106 775 632 772 102 389 746 238 495 196 269 639 466 523 132 490 453 294 380  70
  82  37 314 103 268 143 743 337 421 377 224 582 500 130 575 723  91 338 277  71 731 760 641 691 430 631 167 603
  49 679 193 293  13 742 780 539 779 579 360 471 339  64 636  47 605 676 171 203 573 463 406 749  14  96 442  29

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.006e+07us (= 10060ms, 10.06s)
Satisfaction error: 6
Number of search iterations: 3720
Number of local moves: 3123 (including on plateau: 3072)
Number of local minimum: 26 (including on plateau: 376)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 209 347 519 567 75 597 31 16 144 678 38 485 62 6 542 52 520 709 699 205 24 529 358 86 577 624 69 763 => the sum is 9531 rather than 10990
Problem in row 12: 139 589 781 509 439 20 652 128 455 92 770 199 673 503 112 408 498 541 598 159 761 683 152 233 752 90 643 538 => the sum is 12117 rather than 10990
Problem in row 14: 317 188 755 5 635 514 684 324 448 620 465 217 518 618 343 611 392 310 526 417 568 687 493 477 716 80 125 732 => the sum is 12785 rather than 10990
Problem in row 19: 625 425 107 590 243 68 56 654 551 272 552 200 423 236 147 521 282 446 44 768 279 361 77 23 499 28 693 32 => the sum is 9202 rather than 10990
Problem in row 22: 78 170 216 18 638 3 515 341 488 180 739 610 267 545 767 532 644 396 419 744 227 648 55 718 318 668 319 473 => the sum is 11736 rather than 10990
Problem in row 25: 672 559 441 101 51 283 491 328 219 481 212 640 436 777 161 288 146 21 131 522 583 88 449 617 30 596 566 680 => the sum is 10569 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 415 619 454 107 135 187  42  80  50 780 582 426 536 157 125 746 130 613 163 242 699 485 300 490 597 295 751
 579 766  68 312 585 333 558 637 167 395 410 110 207 319 543  67 363 486 112  58 731 417 414 578 142 281 741 611
 753 668 195 231 489 755 272 773 160 297 549 709 484 724 483 216 326  17 588 457 593 431 546 210 767 701  75 676
 353 534 524 692 205 553 277 551 535 186 744 682 192 770 649  87  12 572 391 260 303 238 185 190 336  69 432 468
 437 605  66 532 645  27 250 462 666 317 617 122 209 165 705  76 137 136 644 655 513 576 424 633 206 150 447 568
  82 449 754 116 440 646 586 141 529 698 636 749 196 228 609 565 501 111 466 595 436 738 747  51 612 156 166  74
 388 504 512   1 477 108 621  86 681 581 168 230 520  32 152 314  26 764 745 768  37 615 736  62 517 461 640 244
 500  81 253 658  83 176 492 555 734 335 181 442   7 564  97 590 725 215 172 413 758  28 679 248 104 575 742 583
 571  61 507 149  79 737 369 459 552 289  14 772 331 401 278 252 324   8 584 530 687 684  89 368 273  18 680 184
 689 243 563 616 533 596 763 419   4 554  43 258 280 716 542 505 556 544 173 202  64 548  53  57 241 598 269 706
 601  98 138  40 400  47  19 178 302 591 491 514 721 285 720 686  35 456 660 677 465 671 214 557 624 310 422 151
 476 284 443 229  94 455 435  49 473 346 463 475 460 481  21 494 622 450 674 445 411 446 113 518 474 117 639 403
 127  84 120 778 379 191 121 662  38 479 664 237 480 225  92 416 587 775 374 669 100 126 509 444 561 531 329 347
 219 729 464 203 115 528 471 730 430 161 630 589 769 428 371 418   9 154 212 318 654  34 626 438 370 470 344 106
 342 386 348 425 451 375 378 399 357 372 383 341 362 365 384 387 394 382 408 355 392 356 385 409 405 685 404 360
 538 304 670 337 354 325 398 377 776 396 376  11 653 298 257 144 570 623 516 599 350 339 673  36 305 170 299 296
 373 352 606 423 696 693 279 748 323   2 292 328 340 338 427 752 358 294 226  46 175 271 313  60 330 690 523 732
  96 261 288 478 602  56 497 309 102 545 306  99 547 217 359 643 123 332  45 245 519 208 539 719  22 697 134 316
 421 783 663 638 164 527 569  29 224 247 264 600 158 657 448 506 128 147  23 717 263 482 201 656 114 343 522 496
 307 540 179 434 283 488 211 618 246 740 311 627 678 632 286 550 499 105 291  52  65 760 287  24 735 726  93 223
 109 236 268 498 629 703   6 275 756  13 412 495 665 131 574 733 402 239 739  90 218 526 262 774 433 177 140 487
 628 308 537 743 390 469 180 132 603 361 525 659 183 493 143  39 452 675 204 155 129 199 610 197 397 472  10  85
 441 124 293 345 169 188 710 782 103 351 708 153  41 182 777 510 694 334 274 651  91 290  70 762 233 759 251 704
 133 713 315 270 118 642 162 189 515 723  48 380 592 366 634 648 420 608 193 511 765 276 232 728 594 502 566 620
 259 604 718  20 771  54   3 560 439 349 159  15  72  95 227 714 580 652 722  78 641 635 240 541 254 249 779  71
 301 625 139 567 761  88 683 101 614 711 213  55 750 577 327  31 573 727  63 429 235  30 364 661 562  73 757 503
 467  59 282 607 715 393 712 406 381 234 559 367 521  77  33 267 508 407 171 631 700 222 672 650 198 265 266 220
  16 174 458 194 256 702 781 321 200 667  44 389 146 688 695 255 320 647 707 221 453 145 322 119 691 148  25   5

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.0061e+07us (= 10061ms, 10.061s)
Satisfaction error: 12
Number of search iterations: 2640
Number of local moves: 2217 (including on plateau: 2172)
Number of local minimum: 22 (including on plateau: 258)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 753 668 195 231 489 755 272 773 160 297 549 709 484 724 483 216 326 17 588 457 593 431 546 210 767 701 75 676 => the sum is 13145 rather than 10990
Problem in row 6: 82 449 754 116 440 646 586 141 529 698 636 749 196 228 609 565 501 111 466 595 436 738 747 51 612 156 166 74 => the sum is 12077 rather than 10990
Problem in row 9: 571 61 507 149 79 737 369 459 552 289 14 772 331 401 278 252 324 8 584 530 687 684 89 368 273 18 680 184 => the sum is 10250 rather than 10990
Problem in row 10: 689 243 563 616 533 596 763 419 4 554 43 258 280 716 542 505 556 544 173 202 64 548 53 57 241 598 269 706 => the sum is 11335 rather than 10990
Problem in row 11: 601 98 138 40 400 47 19 178 302 591 491 514 721 285 720 686 35 456 660 677 465 671 214 557 624 310 422 151 => the sum is 11073 rather than 10990
Problem in row 13: 127 84 120 778 379 191 121 662 38 479 664 237 480 225 92 416 587 775 374 669 100 126 509 444 561 531 329 347 => the sum is 10445 rather than 10990
Problem in row 18: 96 261 288 478 602 56 497 309 102 545 306 99 547 217 359 643 123 332 45 245 519 208 539 719 22 697 134 316 => the sum is 9304 rather than 10990
Problem in row 22: 628 308 537 743 390 469 180 132 603 361 525 659 183 493 143 39 452 675 204 155 129 199 610 197 397 472 10 85 => the sum is 9978 rather than 10990
Problem in row 24: 133 713 315 270 118 642 162 189 515 723 48 380 592 366 634 648 420 608 193 511 765 276 232 728 594 502 566 620 => the sum is 12463 rather than 10990
Problem in row 25: 259 604 718 20 771 54 3 560 439 349 159 15 72 95 227 714 580 652 722 78 641 635 240 541 254 249 779 71 => the sum is 10501 rather than 10990
Problem in row 26: 301 625 139 567 761 88 683 101 614 711 213 55 750 577 327 31 573 727 63 429 235 30 364 661 562 73 757 503 => the sum is 11520 rather than 10990
Problem in row 28: 16 174 458 194 256 702 781 321 200 667 44 389 146 688 695 255 320 647 707 221 453 145 322 119 691 148 25 5 => the sum is 9789 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 486 302 623 606  97 779 161 197 341 369 714 454  55 576 296 528 646  65  61 466 204 720 709 254 540 633 203
 756 760 461 304  38 775 416 105 148 165 632 776  41  14 418 191 297 298 456 106 686 769 474 732 619 179 750 506
 711 328 733 490 131 424  31 253   7 217  17 350 667 703 144 523 656 704 123 132 249 321 699 541 706 689 175 266
 413 536 373 235 171 694 352 644 634 366 747 489 143 109 545 280 308 592 626 669 513 283 771 620 530 564  26 630
 142 563 521 157 650 520 138 472 754 663 202 162  54 757 420 715 473  36 160 121 653  66 210 648 758 670 651 591
 443 247 749 271 438 637 736 537 468  74 225 251 182 525 145 587 139 100 572 136 503 462 625  53 494 289 716 386
 241 178 631  70 705 552 605 425  96 607 566 609 286  64  73 135  57 581 611 713  95 562 595 114 621 584 590  24
 430 147 783 679 746   1 582 597 613 659 140 117 319 155 274  94 717 230 137 159 437 441 250 453 556 638 119 517
 565 351 459 647 569  21 252 691 547 281 265 185 292 730 741 501 107 422 743 214 246 543  29 440 149 433 549  18
 318 194 146 181 278 279 177 158 502 264 660  90 239 156 377 206 763 108 671 479 221  47 580  87 170 102 616 184
 495 723 259 483 504 193 125 505 596 701 464 665 237 196 735 199 245 516 248 326 484 574 672 702  44  10 260 522
 336 589   2 447  27  59 551 348 719 778 492 475 116 469 115 167 446 624 301 707 593 655 560 315 338 151  42 568
 176 212 273 585 310 748 229  76 287 372 130 180 450 629 772 534 693 728 406 577 642  91  22 600 192 317 173 586
 458 396 405 398 409 391 423 103  32 575 411 380 415 434 390 734 333 392 394 408 378 419 431 404 400 349 357 371
 343 782 375 344 410 368 397 402  79 363 376 370 388 383 509 664 393 389 387 384 403 354 360 374 345 331 335 382
 329 608 122 514 238 152 643 539 654  85 588 223 353 356 542 381 640  92 499  16 444 710 362 561 258 118 288 675
 737   4 220 729 673 697 519 451 617 774 460 332 573 209   8 498 305 718 770 263 361 216 677 512  52  19 767 682
 700  13  77 299 445 270 311 307 649 725 285 104 687 533 300 275 295 276 257 510 306 244 692 768   6 399 690 567
 284 401 272 207 685  60 421 426 452 511 309 762 681 603 154 674 555 518 233 488 342 496 228  30 652 500   3  43
 113 554 740 262  63 379  67  99 282 407 313  51 334 761  11 639  33 201 507 557 222 101 412  20   5 753 200 601
 218 327 439 312 777 367 508 195 324  56 662 688 491 526 219 417 267 314   9 242 172 364 325 481 487 471 442 268
  37 696 256 168 163 169 234 738 578 290 764 395 544 427 684  82 731 164 236 436 532 231 322 232 724 641  81 435
 150 291 365 186 529 766 482 773  93 208  68 553 765 277 190 598 579 515 570 612 465 455 127 166 658 205 269  75
 571  86 535 781 134 213 189 610 678 124 602 622  84 337 485  46 174 752 385 726 133 727  48 320 294 240 476 618
 627 780 614  78 524 680 668 546 303 224 111 243 635 128 636 467  40 226 676 722 112 695 497 227  98 683 457 428
 129 628  25 708 355 594  58  34 478  89 493 558 120 599 661 429 480 538  12  23 255  15 188 347 527  83 531 339
 358  71 666  88  72 414 751 745  62 359  80 463 698 198 550 548 153 261 215 755 645 615  45 323 604 739  35 477
 126  39 187 744 340 470 346  50 141 712 559 183 742 657 316 110 583  49 721 448 432 330  69 211 449 293 759  28

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00609e+07us (= 10060.9ms, 10.0609s)
Satisfaction error: 12
Number of search iterations: 2649
Number of local moves: 2197 (including on plateau: 2152)
Number of local minimum: 22 (including on plateau: 295)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 784 486 302 623 606 97 779 161 197 341 369 714 454 55 576 296 528 646 65 61 466 204 720 709 254 540 633 203 => the sum is 11869 rather than 10990
Problem in row 2: 756 760 461 304 38 775 416 105 148 165 632 776 41 14 418 191 297 298 456 106 686 769 474 732 619 179 750 506 => the sum is 11872 rather than 10990
Problem in row 4: 413 536 373 235 171 694 352 644 634 366 747 489 143 109 545 280 308 592 626 669 513 283 771 620 530 564 26 630 => the sum is 12863 rather than 10990
Problem in row 5: 142 563 521 157 650 520 138 472 754 663 202 162 54 757 420 715 473 36 160 121 653 66 210 648 758 670 651 591 => the sum is 11927 rather than 10990
Problem in row 10: 318 194 146 181 278 279 177 158 502 264 660 90 239 156 377 206 763 108 671 479 221 47 580 87 170 102 616 184 => the sum is 8253 rather than 10990
Problem in row 11: 495 723 259 483 504 193 125 505 596 701 464 665 237 196 735 199 245 516 248 326 484 574 672 702 44 10 260 522 => the sum is 11683 rather than 10990
Problem in row 17: 737 4 220 729 673 697 519 451 617 774 460 332 573 209 8 498 305 718 770 263 361 216 677 512 52 19 767 682 => the sum is 12843 rather than 10990
Problem in row 20: 113 554 740 262 63 379 67 99 282 407 313 51 334 761 11 639 33 201 507 557 222 101 412 20 5 753 200 601 => the sum is 8687 rather than 10990
Problem in row 21: 218 327 439 312 777 367 508 195 324 56 662 688 491 526 219 417 267 314 9 242 172 364 325 481 487 471 442 268 => the sum is 10368 rather than 10990
Problem in row 25: 627 780 614 78 524 680 668 546 303 224 111 243 635 128 636 467 40 226 676 722 112 695 497 227 98 683 457 428 => the sum is 12125 rather than 10990
Problem in row 26: 129 628 25 708 355 594 58 34 478 89 493 558 120 599 661 429 480 538 12 23 255 15 188 347 527 83 531 339 => the sum is 9296 rather than 10990
Problem in row 28: 126 39 187 744 340 470 346 50 141 712 559 183 742 657 316 110 583 49 721 448 432 330 69 211 449 293 759 28 => the sum is 10094 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 783  82 344 583 685 571 186 226 273 494 612 306 708 146  68 736 513 286  79 734 605  17 757 106 581  38 193 278
 421 748 554 160  21 775 324 551 615 155 241 710 107 772 717 768 631 176  28 177  90 512 323 758 175 688 738 231
  53 426 743 764 335  65 779 131 127 742  41 122 579 725 473 445 416  98 638 651 555  81  74 677  34 236 331 649
 191 438 429 536  85 648 682 250 637 355 190  11 138 745 327 778 385 484 338 296  51 712 691 265 422 182 701  23
 267 606  56 281 659 751 147  18 309 372 437 650  42 326  27 249 661 570 746 678 456 100 763 634 308 283 505  89
 252 300  76   9  37 632 627 715 655 664 270 248 567 224 313 299 680 603 545 220 478 328 188 499 330 492 589 150
 532 544 784 134 575 172  88 103  95  26 686 557 647  58 519 626 329 310 258   6 449 582 618  43 719 454 600 476
 510 568 337 383 204 506 239 586 483  80  63 771 556 662 212 189  55 407 630 577 108 565 284 116 202  93 697 206
 657 105 695 129 223 128 563 656 558 521  66  29 334 163 242 525 101  94 683 607 653 462 569 585  39 628 761 214
 453 269 203 497 156 550 595 279 538 488 529 133 747 194  10 515 766 547 391 168 120 257 541 508 173 735 431 197
 230 123 430 428 210 540 233 777 490 636 465 503 314  64 477 668 166 378 516   2 195 113 464 517 489 756 140 666
 219 619 109 560 311  16 475 448  22 467 353 471 235 162 364 696 480 602 706 526 380  35 285 674 611 244 183 737
 370 495  84 379  52 559 468 393 590 132 573 238 444 277 673 395 181 681 485 392 498  73 301 280 566 420 442 549
 419 255 360 170 400 373 377 424 773 394 447 460 368 410 767 404 441 405 406 624 434 386  77 345  57 413 459 142
 388 698 384 361 397 320 399 412 298 376 357 381 339 417 401 358 402 418 415 375 135 365 387 423 362 663 396 363
 411 367 340 352 390 332 348 408 354 369 347 398 315 322 690 371 349 350 776 333 351 343 307 356 608 319 359 425
 114 158 435 504 561  49 749 293 157 774   8 474 721 222 263 130 346 729   4 770  25 597 245 641 752 591  45 633
 714 382  62 578 713  86 587 716 141 523 297 124 687 436  87  75  30 291 179 289 750 640 527 727 643  20  78 201
 178 302 670 733 621 341 694 622 707 104 769 546 271 564 596 292 732 765 254 205 228 723 452 317 154 562 282 469
 709 457 290 316 463 728  96 139 741 731 246 601  46 336 744 253 509 169 215 266 718 304  33 237 174 576 479 148
 501 667 208 342 151 451 704 119 264 199 676 539 167 102 216 117 703 213 121 699 145 692 726 440 312 225 580 711
  83 153 548 221 537 625 672 507 439 118 740 730  14 629 458 171 200   7 679  99 614 232 198 593 164 234 623 702
 724 218 262 466 782 433  92 229 780 274 207 693 533 689 303  72 144  71 243 126 669 530 110 443 604 609 184 500
 143 305 644 781 227 294   1 112 592 487 584   5 635 493 646 366  19 720 325 149 543 760 675 137  44 161 753 389
 409 275 755 374 665 180 261 739  36 247 152 613 486 645 276 620 528 671 115 403 588 187 654  13 700 111  40 762
 616 722  47 256 321 288  69 658 272 553 574 217 455 470  97 684  31  67 642 652 414 427 522 496 754  61  91 534
 125  48 524 211 450 318  54 287  32  70 461 251 295 572 472   3 594 610  59 520 196 535  60 136 502 705  50 531
 518 660 617 482 759 259 481 192  12 639 599 209 240 165 552 185 598 268 514 446 542 432 159  24 511 491 260  15

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00597e+07us (= 10059.7ms, 10.0597s)
Satisfaction error: 8
Number of search iterations: 2669
Number of local moves: 2227 (including on plateau: 2177)
Number of local minimum: 22 (including on plateau: 272)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 421 748 554 160 21 775 324 551 615 155 241 710 107 772 717 768 631 176 28 177 90 512 323 758 175 688 738 231 => the sum is 12166 rather than 10990
Problem in row 8: 510 568 337 383 204 506 239 586 483 80 63 771 556 662 212 189 55 407 630 577 108 565 284 116 202 93 697 206 => the sum is 10289 rather than 10990
Problem in row 18: 714 382 62 578 713 86 587 716 141 523 297 124 687 436 87 75 30 291 179 289 750 640 527 727 643 20 78 201 => the sum is 10583 rather than 10990
Problem in row 19: 178 302 670 733 621 341 694 622 707 104 769 546 271 564 596 292 732 765 254 205 228 723 452 317 154 562 282 469 => the sum is 13153 rather than 10990
Problem in row 20: 709 457 290 316 463 728 96 139 741 731 246 601 46 336 744 253 509 169 215 266 718 304 33 237 174 576 479 148 => the sum is 10724 rather than 10990
Problem in row 25: 409 275 755 374 665 180 261 739 36 247 152 613 486 645 276 620 528 671 115 403 588 187 654 13 700 111 40 762 => the sum is 11505 rather than 10990
Problem in row 27: 125 48 524 211 450 318 54 287 32 70 461 251 295 572 472 3 594 610 59 520 196 535 60 136 502 705 50 531 => the sum is 8671 rather than 10990
Problem in row 28: 518 660 617 482 759 259 481 192 12 639 599 209 240 165 552 185 598 268 514 446 542 432 159 24 511 491 260 15 => the sum is 10829 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  70 257  52 523 210 126 206 471 234 714 489 574 687 277 556 576 524 543 240 410 212  16 192 525 751 756  39 760
 663 781 459 662 719 224 154 538  49 265 161 472 422 739  92 780 321 692 355 167 418 671  83 729  40 329 738 250
 728 717 480 763 107 163 766 477 746 535 515 183   9 706 289 144  84 103 146 178 710 557  64 137 282 613 310 478
 252 647 569  72 232 243 136 549 301 128 674 279 750 498 462 544 693 732 125  82 365 296 337 540 682 262 318 222
 724 340 784 332   2 730 313 580 104 190 585 685 725 333 653 347 743 765 629 368 628 375 545 618 734 273 648 517
 396 578 602 182 363 731 512 371 514 620 171 241 133 625 209 664 552  59  86 646 116  50 619 679 247 177 530 317
 559 520 695  33 230 554 779  51 677 759 357 616 483 187 189 109 689  87 534 696  78 519  60  75 667 484 188 115
 315 157 678 721 139 309  17 601 770 507  38 652 624 521 389 771 155 253  21 456 700 651 203 702  48 266 610 481
 158  69 288  79 579 697 668 531 553 577 614 175 772 571 440  58 583  13  42 550 229 713  20 567 275 148 683 327
  22 231 526 712 593 331 102 726 334  91 564 699 496 260 670 354 180 609 537 172  43  68 661 142 465 566 225  41
  46 118 284 263 753  34 258 733 560 503  47 752 108 563 622 686 256 492 631   1 123 558 669  28  81 488 643 690
 110 494  29 476 442 486 485 402 226 470 447 502 461 458 278 449 328  26 482 403 754 378 438 479 464 132 417 474
 276  77 654 446 457 420 415 452 426 367 460 453 432 423 214 454 425 406 450 455 431 208 264 436 522 124 429 414
 421 439 437 191 407 387  24 466 434 424 411 419 395 364 370 441 392 430 390 388 385 468 393 427 369 408 529 381
 412 409 353 345 373 307 397 399 372 351 404 356 401 391 335 376 416 469 330 773 374 400 362 413 348 359 382 383
 680 274 445 551 595 113 720 708 145 140 151  88 444 218 635 722 709 114 238 255 156 377 201 532  61 283 299 300
 170 196 640 324 650 775 592 394 716 261 536 302 159  89 443 316 325 130 270  56 768 211  80 516 701  65 660 645
 312 303 555 608 491 366 745 715 636 341 448 575 637 777 405 249  25 149 433 143 105 213 632  11 248 649 152  67
 428 346 473 304  36 435 658  27 611 220 185 251 141  12 672  62 506 398 748 764  98 565 587 164  14 181  15 639
 205 311 101 287  31 747  73 271 259 281 691  10 202   5  93 246 117 666 221 582 490 718 742 295 621 219 615  30
 594 581 349 634 676 166 633 294 197 705 741 322 694 160 305 513 100 193  32 268 707 195 169 380 194 463 127 541
 623 320   6 467 548 505 184 384  94 323 386 617 122 343 501  95 215 600 604 204  54 475 762 572 285 757 360 584
 500 711 451 352 272 174 254 198 129  44 176 603 290 131 244 298 767 562 755 737 518 657 242 216 493 542 568 106
 684 606 227  66 134 673 350 162 627 150 630 153 338 186 735 235 599 297 688 168 528  37 361 135 727 659 112 723
 774 740 199  45 776 588  76 379 539   7 165 121 605  85  97 546 358 342  57 586 533 783 644 217 336 778 119 495
  96 147  18 782 223 597 703  55 293 769 280 237  71 758 286   4 319 655 681 641 236 111 665 638 596 497 508  35
 749  74 292 591 326  90 200   3 306 573 656  63 120 612 561 207  99 607 504 314 589 233 704 509 228 339 267 239
  23 547 344 179 626  19 570  53 138 675   8 590 269 698 245 744 510 598 761 527 642 487 291 308 511 173 499 736

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00594e+07us (= 10059.4ms, 10.0594s)
Satisfaction error: 13
Number of search iterations: 2623
Number of local moves: 2290 (including on plateau: 2246)
Number of local minimum: 6 (including on plateau: 251)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 663 781 459 662 719 224 154 538 49 265 161 472 422 739 92 780 321 692 355 167 418 671 83 729 40 329 738 250 => the sum is 11973 rather than 10990
Problem in row 5: 724 340 784 332 2 730 313 580 104 190 585 685 725 333 653 347 743 765 629 368 628 375 545 618 734 273 648 517 => the sum is 14270 rather than 10990
Problem in row 8: 315 157 678 721 139 309 17 601 770 507 38 652 624 521 389 771 155 253 21 456 700 651 203 702 48 266 610 481 => the sum is 11755 rather than 10990
Problem in row 9: 158 69 288 79 579 697 668 531 553 577 614 175 772 571 440 58 583 13 42 550 229 713 20 567 275 148 683 327 => the sum is 10979 rather than 10990
Problem in row 10: 22 231 526 712 593 331 102 726 334 91 564 699 496 260 670 354 180 609 537 172 43 68 661 142 465 566 225 41 => the sum is 10420 rather than 10990
Problem in row 16: 680 274 445 551 595 113 720 708 145 140 151 88 444 218 635 722 709 114 238 255 156 377 201 532 61 283 299 300 => the sum is 10154 rather than 10990
Problem in row 19: 428 346 473 304 36 435 658 27 611 220 185 251 141 12 672 62 506 398 748 764 98 565 587 164 14 181 15 639 => the sum is 9540 rather than 10990
Problem in row 20: 205 311 101 287 31 747 73 271 259 281 691 10 202 5 93 246 117 666 221 582 490 718 742 295 621 219 615 30 => the sum is 9129 rather than 10990
Problem in row 21: 594 581 349 634 676 166 633 294 197 705 741 322 694 160 305 513 100 193 32 268 707 195 169 380 194 463 127 541 => the sum is 10933 rather than 10990
Problem in row 26: 96 147 18 782 223 597 703 55 293 769 280 237 71 758 286 4 319 655 681 641 236 111 665 638 596 497 508 35 => the sum is 10901 rather than 10990
Problem in row 27: 749 74 292 591 326 90 200 3 306 573 656 63 120 612 561 207 99 607 504 314 589 233 704 509 228 339 267 239 => the sum is 10055 rather than 10990
Problem in row 28: 23 547 344 179 626 19 570 53 138 675 8 590 269 698 245 744 510 598 761 527 642 487 291 308 511 173 499 736 => the sum is 11771 rather than 10990
Problem in diagonal 0: 70 781 480 72 2 731 779 601 553 91 47 502 432 364 335 722 325 149 748 582 707 475 242 135 336 497 267 736 => the sum is 11761 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 676 328 447  79 258  47  29 666 610 200 623 780 156 677 460 361 149 446  46 438  11 731 182 573 761 715 107 434
 537  58 602 202 175 411 275 484  33  21  39 617 740 483 705 163 150 523 656 296 733  40 709 420 287 732  68 698
 131 592 435 708 773 130 236 164 461  66 125 151 291 716  16 178  57 228 622 374 618 301 479 357 533  77  63  51
 432 441 109  10  78 285 496 103   2 713 332 571 627 751 219  53 661 458 567 240 636 231 609 229 532 651 760 308
 412 100 233 687 696 417  86 375 503 658  36 197 425 664  49 391 129 110 763 135 553 327  59 764 501 724 214 782
 725 249 112 494 648 659 443  42 277 468 253 347 245 620 688  27 511 549 284 155 649 580 237 323 639 220 449  97
 450 482 404 463 518 599 146 174 400 470 750 535 319   7  65 566 579 615 339  91 217 654  70 597 380 190 264 646
 551 429 437  62 194 485 294 267 422 638 115 117 451 238 354 671 608 632 600 581 300 337 395   6 442 262 657 445
 239 481 344 626 554  45 746 272 477 203 524 196 204  25 365  28 334 309  48  83 650 631 525 278  94 766 544 720
 387 340 521 123  64 531 550  85 358 604 421  93 655 520 678 541   3 161 207 587 616 517 642 762  34 394 476 120
 113 686 162 502 681 270 414 697 701 140 772 427 406 767 474  72 299 184 426 699 265  61 467 689 209  23 351 212
 557 331 372 378  44 662 565 770  15 498 218 491 487 279 271 224 729  17 478 527 508 377 314 201 423 419 559 276
 619 145 700 717 726 223 282 187 302  56 672  98 775 283 126 774 512 343 510 667 492 168 116 136 539 561 469 227
 465 475 585 181 506 367 127 466 225 382 105 653 542 408 173 670 388 737 444 304 407 172  30 268 741 675 493   1
 286 728 169 629  75 739 669  71 727 396 295  41 364 413 359 189 152 307 122 756 641 644 528  99 591 433 289 134
 350 316 335 273 383 402 346 333 349 390 352 341 324 706 373 216 376 384 318 348 297 371 355 693 393 572 360 734
 261 101 736 744 464 749  84 611 607 556 403 722 668 459 226 243 104 577 338  60 315 199 628 154 416  35 144 386
 500 758 665 781 326  37 704 392 690 612  73 322  55 166 211 674 540 682 133 369 555 188 730 637 141  74 718 601
 160 570 215 206 325 306 242 754 280 695 290 292 634 370 256 345 769 232 250 241 745  26 251 366 569 692 269 640
 548  13 778 534 330  81 153 647 410 578 645 385 143   5 415 547 497 356 742 185  32 505 248 198 685 252 381  90
 440  43 167 266   8 234 288 132 777 336 743 397 519 221 735 473 293 575 259 303  80 755 281 748 195 683 630 409
 576 515 137 431 313 121 783 564 563 119 652 490 598 235 453 363 596 148 606 428  69 707 684 311  50 342  12 124
  82 583 546 147 752 176 723 703 111  31 379 488 711 139 562 509 179 114  19 784 621 560 170 759  92  14 452 584
 472 536 558 398 471 448  54 538 635 552 158 738  95 118 513 595 389 399 171 768 310 274  96 312 507 157 298 430
 177 568  24 405 320 590 663 456 504 776 714 244   9 455 633 545 680 480 208 529  52 589 353 329 712 605 660 526
 614 138 257 128 530 702 586 255 263 624 582  89  20  76 721 439 254  87 719 246 106 462 753 710 192 247 691 499
  88 771 757 594 613 779 418 260 108 186 514 543 210 516 489 765 747 643 436 193 191 159 486   4 102  18  38 362
 142 213 183 222 165 495 588 522 180  22 205 625 317 673 401 368 305 694 679 603 321 424 593  67 230 457 574 454

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00584e+07us (= 10058.4ms, 10.0584s)
Satisfaction error: 11
Number of search iterations: 2796
Number of local moves: 2344 (including on plateau: 2297)
Number of local minimum: 14 (including on plateau: 319)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 537 58 602 202 175 411 275 484 33 21 39 617 740 483 705 163 150 523 656 296 733 40 709 420 287 732 68 698 => the sum is 10857 rather than 10990
Problem in row 3: 131 592 435 708 773 130 236 164 461 66 125 151 291 716 16 178 57 228 622 374 618 301 479 357 533 77 63 51 => the sum is 8933 rather than 10990
Problem in row 4: 432 441 109 10 78 285 496 103 2 713 332 571 627 751 219 53 661 458 567 240 636 231 609 229 532 651 760 308 => the sum is 11104 rather than 10990
Problem in row 9: 239 481 344 626 554 45 746 272 477 203 524 196 204 25 365 28 334 309 48 83 650 631 525 278 94 766 544 720 => the sum is 10311 rather than 10990
Problem in row 11: 113 686 162 502 681 270 414 697 701 140 772 427 406 767 474 72 299 184 426 699 265 61 467 689 209 23 351 212 => the sum is 11169 rather than 10990
Problem in row 13: 619 145 700 717 726 223 282 187 302 56 672 98 775 283 126 774 512 343 510 667 492 168 116 136 539 561 469 227 => the sum is 11425 rather than 10990
Problem in row 15: 286 728 169 629 75 739 669 71 727 396 295 41 364 413 359 189 152 307 122 756 641 644 528 99 591 433 289 134 => the sum is 10846 rather than 10990
Problem in row 18: 500 758 665 781 326 37 704 392 690 612 73 322 55 166 211 674 540 682 133 369 555 188 730 637 141 74 718 601 => the sum is 12334 rather than 10990
Problem in row 20: 548 13 778 534 330 81 153 647 410 578 645 385 143 5 415 547 497 356 742 185 32 505 248 198 685 252 381 90 => the sum is 10383 rather than 10990
Problem in row 25: 177 568 24 405 320 590 663 456 504 776 714 244 9 455 633 545 680 480 208 529 52 589 353 329 712 605 660 526 => the sum is 12806 rather than 10990
Problem in row 28: 142 213 183 222 165 495 588 522 180 22 205 625 317 673 401 368 305 694 679 603 321 424 593 67 230 457 574 454 => the sum is 10722 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 227 230 303 299 706 634 686 782 534 308  11 445  45  61 199 574 518 761 131 416 184 485 550 200 526 202 215 758
 268 710 252 444 470 507 176 666 752 128 582 304 146  24 744 116 720 677 149 699 342 121 471 631 138 418 283  52
 482 449 192 541 501 556 476 724  34 589 188 389  22 448 257 656 537 698 162 165 137 124 258 462 705 715 104 419
 110 424 531  90 256 525 778   8 572 141 628 450 249 329  18 664 171 422 466 703  12 637 388 405 719 652 417 328
 381 243 126 425 692 506 178 553 514  23   9 408 649 181 523 687 284 264 586 488 660 434 520 512 374 107  55 608
 343 490 549 295 358 750 274 130 479 355  69 527  82 630 685 248 743 103 219 487 528 286 655  85 420  68 739 393
 552 210 606 697 498 152 618 214 768 763 546 150 325 511 636 481 576 642 566  67 575 624 614 382 352  74 665  43
 727 594 784 145   5 247 412 591 170 309 779 222 751 729 133  31 245 263  42 673 369 704  94 151 169 730 681 675
 667 533  73 777 431 700 538 236 163 690 172 718 465  78  16 612 725  54 529   1 399 197 233  86  32 285  25 201
 668 781 736 753 154  77 663 164 616 428 629 587  40 346 569 757 451 605 713 226 251 206 539  89 489 682 745 189
 776 600  71 497 610 604 595 109 646 674 460 174 211 772 271 183 111 441 783 609  80 385 691  98 235 362 495 205
 212 330 499  36 302 231 640  41 242 246 502 473 559 633 452 486 429 733 237 712 468 519  29 439 762 168 277 333
 571 159 477 588 300 229  87 446 438 735 365 611 394 281 244 426 127  53 135 296 662 617 732 217 544 345 469 442
 148 190 318 402 400  39  57  56 272  76 738 516 427 331 478  58  33 456 653 672 457 276  27 282 593  96 323 455
 384 398 391 368 407 447 338 334 378 371 711 414 379 357 409 367 395 383 410 339 341 406 347 377 363 436 364 376
  93 316 255 160 390  72 360 746 114 157 370 657 313 532 356 386 421 321 536 573 380 500 293 373 717 496 542 561
  13 173 756 278 558 361 759 269 557 310 213 322 741 475 590 239 291 651 142 694 435 292 680 350  51 261 102 156
 118 319 186 737 775 307 567 392 301 297 298 748 492  19 773 547 117 218 216  17  83 659 731 185   4 194 644 287
 253 639  26 679 336 688 317 728 560 548 234  38 513 461 643 136  10  62 463 179 545 120 765 684 204 568  37 554
 767 220 326 140 158 607 275 661 259 404 670 780 372 577 555 198 311 540 747 280 177  84  88 565 209 678 340   2
 683 119 161 153 167 467 144 196 693 570 223 564 601 203 517 707 599 193 335 627 132  15 387 701 221 354 774 484
 108 760 613 187 166 348 125 353 115 689  63 262 225 645 411 510 472 279 734 267 749 454 195 504 415 580 521 240
 320 658 238 459 755 208  66 722 621 112 464  48 625  91  47 312  59 290  44 123 709 273   7 563 315 433 266 480
 494 740 432  65 134  75 453 443  70  60 676 113 623 641  30 403 769  79 260 423 596 742 191 726 579 265 327 581
  49 474 543   3  92 143  50 509 288 721 397 232 241 505 182  99 413 175 493 766 314 669 515 754 155 764 359 602
 603  28 647 578  35 695 207 522   6 585 592  64 770 139 723 366 648 401 503 129 458  46 324  21 615 535 100 650
 622 106 671 562 708 375 437 294 491 620  95 524 583 702 305 122 635 530  20 254 349 771 396 551 430 508 483 584
 351  97 228 632 626 440 714 101 337  81 306 250 147 289 224 619 180 696 716 105 598 344 270 597 654  14 638 332

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00588e+07us (= 10058.8ms, 10.0588s)
Satisfaction error: 13
Number of search iterations: 2263
Number of local moves: 1885 (including on plateau: 1841)
Number of local minimum: 13 (including on plateau: 225)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 110 424 531 90 256 525 778 8 572 141 628 450 249 329 18 664 171 422 466 703 12 637 388 405 719 652 417 328 => the sum is 11093 rather than 10990
Problem in row 7: 552 210 606 697 498 152 618 214 768 763 546 150 325 511 636 481 576 642 566 67 575 624 614 382 352 74 665 43 => the sum is 12907 rather than 10990
Problem in row 8: 727 594 784 145 5 247 412 591 170 309 779 222 751 729 133 31 245 263 42 673 369 704 94 151 169 730 681 675 => the sum is 11425 rather than 10990
Problem in row 9: 667 533 73 777 431 700 538 236 163 690 172 718 465 78 16 612 725 54 529 1 399 197 233 86 32 285 25 201 => the sum is 9636 rather than 10990
Problem in row 10: 668 781 736 753 154 77 663 164 616 428 629 587 40 346 569 757 451 605 713 226 251 206 539 89 489 682 745 189 => the sum is 13153 rather than 10990
Problem in row 11: 776 600 71 497 610 604 595 109 646 674 460 174 211 772 271 183 111 441 783 609 80 385 691 98 235 362 495 205 => the sum is 11748 rather than 10990
Problem in row 14: 148 190 318 402 400 39 57 56 272 76 738 516 427 331 478 58 33 456 653 672 457 276 27 282 593 96 323 455 => the sum is 8829 rather than 10990
Problem in row 17: 13 173 756 278 558 361 759 269 557 310 213 322 741 475 590 239 291 651 142 694 435 292 680 350 51 261 102 156 => the sum is 10719 rather than 10990
Problem in row 18: 118 319 186 737 775 307 567 392 301 297 298 748 492 19 773 547 117 218 216 17 83 659 731 185 4 194 644 287 => the sum is 10231 rather than 10990
Problem in row 23: 320 658 238 459 755 208 66 722 621 112 464 48 625 91 47 312 59 290 44 123 709 273 7 563 315 433 266 480 => the sum is 9308 rather than 10990
Problem in row 25: 49 474 543 3 92 143 50 509 288 721 397 232 241 505 182 99 413 175 493 766 314 669 515 754 155 764 359 602 => the sum is 10507 rather than 10990
Problem in row 27: 622 106 671 562 708 375 437 294 491 620 95 524 583 702 305 122 635 530 20 254 349 771 396 551 430 508 483 584 => the sum is 12728 rather than 10990
Problem in row 28: 351 97 228 632 626 440 714 101 337 81 306 250 147 289 224 619 180 696 716 105 598 344 270 597 654 14 638 332 => the sum is 10586 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 368 610 465 382 188 572 503 217 199 615 142   6  31 222 562 611  20 687 631 438 149 550 703 158 120 500 585 756
 343 514 281 252 314 518 656 738 265 749 690 746 710  83 667  51 104 387 497 140 340 489  90  41 642 351  79 253
 157 181 507 481 254 425 268  34 298 511  25 645 676 279 211 164 318 573 380 162 639 665  76 504 224 717 417 716
 179 227 644 216  62 260 237 658 527 480 398 721 771 197 201 213  75 332 215 692 744  35 651  65 686 605 652 247
 693 185 155 231 528 317 660 632 230 768 662 648 754 102   3 390 659 334 264 218  10 190 246 670 494  29 678 240
 742 113 159 570  13 689 151 119 596 101 487 287  89 486  15 496 734 128 559 544 110 258 714 483 745 126 331  50
 326 462 448 282 663 566 736 698 307 336 421 244 193 584 612 636 249 187 729 365 622 613 675 330 547 372 401 654
 248 568 271 320  81  92  63 165 707 374 363 206 429  69 225 709 533 479 146 569 595 567 490 312  78 629 725 103
 267 415 554  66 502 423  47  71 780  98  19  72  18 748 674 229 173 758 723 535 426 325  91 599 219  61 537 458
 460 782 783 775 192 106 564 136 308 208 618 578  67 342 767 673 171   1 512 604   8 617 184 132 712 324 456 530
 153 586  94 638 741 726 737 349  77 704 156  68 505 626 724 641 774 506  53 203 154 122 485  95 189 114  48 722
  46 581 284  85 713  52 556 150 671  55 590 419 655 526 455 763 531 747 304 124 519 160  27 316 362 170 513 616
 447 436 177 427 453 306 434 466 109 499 473 424 664 395 468 410 418 405 221 459 408 386 439 361 449 348  64 444
 355 472 433 446 354 431 392 402 442 440 413 411 428 414  93 400 373 378 412 358 407 399 416 397 367 404 384 369
 379 313 565 196 310 640 553 293 589 235  59 522 115 393 403  23  87 620  44 471 275 759 762 757 321 711 509  86
 720 204 152 346 576 525 563 191 540 375 226 138 288 242 445 345 327 661 529 352 360 333 463 731 600 543  88 127
 437 389 198 751 776  38 779 381 443 575 194 292 441  11  54  21 319 209 672 335 464 702 137 280 760 765 385 182
 532 728 625 186 592 391 337 719 259 183 328 683 276 534 323 521 470 289 647  32 602  84 255 305  26 524 273 266
 699  12 430 329 552 406 243 643 582 261 510 579 301 669 750 263 555 232 315 251 269 474 168   7 239 409 212 630
 200  60 135 129 705   9  74 493 657 571 257 388 621 680 180 163 394 202 166 278  56 668 377 302 123 141 701 627
  14 523 356 740 290 143  58 233 228 650 637 285 383 492 517 283 300 133 538 739 341 482 548 515 603 277 557 125
 770 682 755  33 577 634 223 778 607 635 706 147 311 274 172 238 498 100 112 594 684   2 491 210  57 467 303 357
 715 364 488 469 178 131 733 339 350 347 286 107 501 772 623 558  80 478 766 685 773 735 396 593 520 297  70 508
 561 457 781 700 174 769  45 495 435 161 130 450 207 270 322  73 743 116 606 134 205 241 727 646 432 516 117 477
 598  99  37 451 111 376 353 560 250 139 118 541 169 591 649 475 583 574  39  22 718 256 753 708 633 295 601 291
 105 338  82 587 370  96  42 108 272 220 752 777 539 214 262 730 195 608 344 294 695 694 420 679 484   5 542 536
 452  36 454 666 245 588 359 551  28 696 784 145 549 732  16 545 619 175 144 764 296 167  30  97  49 609 614 580
  24 653 677 236 476 761 624 371 234   4 546 461 299  43 597 366 688 691 422 628 121  17 176 697 309 681 148  40

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00594e+07us (= 10059.4ms, 10.0594s)
Satisfaction error: 9
Number of search iterations: 2562
Number of local moves: 2165 (including on plateau: 2118)
Number of local minimum: 16 (including on plateau: 254)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 157 181 507 481 254 425 268 34 298 511 25 645 676 279 211 164 318 573 380 162 639 665 76 504 224 717 417 716 => the sum is 10507 rather than 10990
Problem in row 6: 742 113 159 570 13 689 151 119 596 101 487 287 89 486 15 496 734 128 559 544 110 258 714 483 745 126 331 50 => the sum is 9895 rather than 10990
Problem in row 7: 326 462 448 282 663 566 736 698 307 336 421 244 193 584 612 636 249 187 729 365 622 613 675 330 547 372 401 654 => the sum is 13258 rather than 10990
Problem in row 8: 248 568 271 320 81 92 63 165 707 374 363 206 429 69 225 709 533 479 146 569 595 567 490 312 78 629 725 103 => the sum is 10116 rather than 10990
Problem in row 9: 267 415 554 66 502 423 47 71 780 98 19 72 18 748 674 229 173 758 723 535 426 325 91 599 219 61 537 458 => the sum is 9888 rather than 10990
Problem in row 10: 460 782 783 775 192 106 564 136 308 208 618 578 67 342 767 673 171 1 512 604 8 617 184 132 712 324 456 530 => the sum is 11610 rather than 10990
Problem in row 20: 200 60 135 129 705 9 74 493 657 571 257 388 621 680 180 163 394 202 166 278 56 668 377 302 123 141 701 627 => the sum is 9357 rather than 10990
Problem in row 22: 770 682 755 33 577 634 223 778 607 635 706 147 311 274 172 238 498 100 112 594 684 2 491 210 57 467 303 357 => the sum is 11417 rather than 10990
Problem in row 23: 715 364 488 469 178 131 733 339 350 347 286 107 501 772 623 558 80 478 766 685 773 735 396 593 520 297 70 508 => the sum is 12862 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 475 496  82 298 365  84 250 156 771 471 492 759 419 630 713 714 482 195 699 555 557 276 108 478 507 762 434 703
 152 585 190 737 767 548  18  20 750 624 748 101 249 193  76 228 645 165 320 118 723 224 504   6 743 328 726 502
 671 134 408 721 124 674 697 586 463 532 543 155 481  27 758 191  19  75 742 270 110 535  36 509  16 684 277 552
 751 282   2  74  52 614 733 210 146 136 148 534 648 186 269 752 119 376 696 735 207  41 651 161 655 637 577 598
 245 668 711 241 178 169 540 653 669 620 100 544  59 294 370 244 252 604 561  26 396 172  86 664 147 560 568 649
  44 215 613 776 339 359  61 710 206  32 765 583 168 659 639 626 246 218 777 608  24 520 342 578   7 741 111  23
  48 476 519 138 506 746 582 512 588 525 117 384 441  53 488  14 566 670 105 646 516 615  43 307 564  94 383 344
 729 240 599 443 300 621 200 160 573  51 299 414   8 773 720  47 770 313 708 304 634 242 154 363 170  39 688 428
 234 483  10 503  49 317 296 570 580 779 547  72 529 589 227 189 115 453 549 536 486 559 764 724 288 258 180 104
 387 251 462  15 587 494 435 515 524 197 640  70 440 685 603   4 372 556 527 436 278 533 612 430 113 398 273 153
 196  97 275 647 781  17 747  31 682 177 491  33   1 213  13 666 546 625 286 362 633 660 537 783 194 679 158 460
  38 364 112 606 121 350 167 715 425  90  92 231 738 663  68  25 501 417 381 766 222 487 274  42 754 388 551 558
 468 780 459 545 343 458  87 336 456 654 707 225 395 188  46 442 712 521 437 204 140 500 203 360 511  83  78 652
 406 389 467 399 369 426 416 432 422 420 418 439 394 413 184 423 375 474 444 393 373 235 390 377 415 314 391 392
 106  22 171 424 201 144 678 445 366 410 262 287 575 374 447 576 333   5 498 782  63 717 695 550 219 565 753 322
 530 142 230 141 346 412 517 407  56 340 690 143 284 131 774 409 454 181 232 379 768 618 261 756 730 208 700 151
 477 450 330 283 661 553 347 332 264 291  28 405 522 335 334 731 605 538 221  40 628 310 302 255 597 192 301 658
 295 644 367 526 205  73 133 744 149 318 292 243 157 480 429 431 163 698 308 718 465 760 263 610 271 472 464 312
 290 217 596 173 728 325 305 600 129 272 259 642 297 749 159 569 680 268 401 327 316 727 574 114 638  93 257 285
 499 673 656 667 199 321 324 123 351 126 164 584 289 513  64 681 591 706  54 643  98   9 315 267 356 601 236  55
 539 722 755 361  77 508 778 137  34 562 590 150 166 528 237 293 248 382 229 127 386 357 631 489 523 449 623 109
 400  35 175  29 607 702  88 182 641 135 348 635 757 709 211 579  58 716 617 627 337  50 145 281 345 102 446 761
 594 309 223 433 404 187 592 775 209 745 593 769 772  57 497 484 103  60   3 505 687 226 358 247  30  67 650 411
 581 567 352 371 427 253 341 338 220 719 691 675 611 280 572 514 132  69 120  89 378  45 676 495 466 602  95 311
 636 677 672 354 692 473 452 306 279  99  37 694 689 451 705 130 739 122  81 174  71 385 368 657  91 254 469 233
 176 265 784 571 763 266 402 107 238 541 421 725 485 470 239 162  11 353 461  12 216 397 518  62 554 732 323 736
 319 212 260 331 683 403 619 632  65 438 128 139 202 326 455 303 531 740 448 542 616 125 701 329 457 609 198 179
 704 595 510 183 116 493 185 256 734 686 380 355 214  21 693 563 622 490  85  66 662 665 479  96 629  79  80 349

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.0059e+07us (= 10059ms, 10.059s)
Satisfaction error: 5
Number of search iterations: 3153
Number of local moves: 2609 (including on plateau: 2558)
Number of local minimum: 32 (including on plateau: 307)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 475 496 82 298 365 84 250 156 771 471 492 759 419 630 713 714 482 195 699 555 557 276 108 478 507 762 434 703 => the sum is 12931 rather than 10990
Problem in row 12: 38 364 112 606 121 350 167 715 425 90 92 231 738 663 68 25 501 417 381 766 222 487 274 42 754 388 551 558 => the sum is 10146 rather than 10990
Problem in row 20: 499 673 656 667 199 321 324 123 351 126 164 584 289 513 64 681 591 706 54 643 98 9 315 267 356 601 236 55 => the sum is 10165 rather than 10990
Problem in row 22: 400 35 175 29 607 702 88 182 641 135 348 635 757 709 211 579 58 716 617 627 337 50 145 281 345 102 446 761 => the sum is 10718 rather than 10990
Problem in diagonal 1: 703 726 684 655 664 342 615 634 536 527 625 501 442 184 374 284 405 292 272 351 137 88 187 427 354 784 212 704 => the sum is 12709 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 580 507 246 757 202 251 534 221 446 495 104  41 714 663 259 764 315 499 592  15 191 538 252  94 260 532 156 762
 243 746 548 308  31 289  80  84 470   4 112  95   8 276 558 320 130 451 768 152  13 683 450  40 145 553 733  91
  25 680 620 671  14 123 667 474 288 496 148  62 727 604 142 273 410 319 673  23 237 593 277 751 135 695 236 627
 637 622 242 119 744   9 366  76 715 250 748 137 567  85 220 205 586 766 742 262 562  12  98 633 697 736  82  72
 371 361 403 511 539 557 708  38 591 160 163  43 506 490 374 161 212 645 151 706 617 658 647 641 566 268 684 694
 165 134  87 146 636 634 449   1 605  97 624 653 404 642  44 602 136 640  55 662 316 712 516 582 596 141 232 479
 307 253 501 781 349 149 621 444  68 725 544 767 520  86 346  67  61 153 328 583 335 616 430  78 504 171 756 447
 132 140 595  89 597 169 329 698  96 256  53 570 190 606 704 531 168 465 178 485 547 481 355 574 691 623  93 575
 121 207 649 619 675 257  73 540 523 164 556 144 198  66 542 498 614  57 299 560 587 275 157 517 284 609 638 269
 503 438  36 239  10 629 564 679 677 613 377 477 510 340   3 672 776 529 526 652  35 154 530 201 551  69 657 131
  26 525 102 473 488 491 519 300 314 502 292 363  90 509 508 486 313 471 650 463 249 215 626 458 472 461 518 106
 743 233 690  34 274 702 777 505 375 309 223 482 186  21 747 241 416 572 258  79 493 728 581 452 185 306  83 295
 334 248 460 395 483 323 358 701 541 631  75 234 784 494 435 421 225 122 100 731 286 405  17 217 692  70 467 741
 415 464 391 423 428 364 398 431 394 424 378 407 393 417 383 326 396 376 425 330 443 387 426 373 341 357 353 347
 408 409 351 456 427 379 362 419 388 359 343 418 384 369 399 368 390 413 392 722 389 348 352 338 331 305 365 406
  18 370 397 515   6 382 761 336  64 688 214 740 411 278 611 380 656 705 303 297 721 291 381 360 310 555 116 124
 283 686 628 760 573  27 304 716  50  11 724 350 101 401 128  30 325 177 625 167 436 337 618 203 585 769 344 632
 765 147 339  92  49 774 125 729 659 453 110 210 466 173 196  33 730 117 571 342 759 646 723 265  29 578 565 345
 664 321 442 682 279 643 261 270 266 229 255 230 290 264 775  20 332 231 272 648 763 238 462 719 778 194 227 235
 433  48  59 367 514 579 204 322 294 754 661  42 685 200 293 454 669 588 440 224  16 753 711  45 311 107 489 312
 608 783  63 755 603 601 402 245 779 770 735 484 528 771 386 188 114   2 420 635 192 448 155 696 700  19 773 576
 668 302 758  51 478 271 159 497 630 301 577 670  74 535 512 717 129 372 109 182 607 179 213 199 267 536 475 522
 610 600 195 655 533 209 176  60 170 654 429 589 521 175 699 285 166  99 720 434 184 282 105 445 563 676 598 158
 356 644 545  37 143  56 665 457 218 138  39 552 750 298 612 590 455 432 211 480  81  28 739 180  24 139 500  52
 554 561 782 333 780 247 187 183 327 228 546 385 550 584 615 193 594 674  22 108 726 296 197 287 459 317 103 468
 745   5 115 127 738 689 118 226 174 111 772 710 280 687  77 681 709 354 559 172 240 527 222 469 162 126 568 693
 244   7 492 414 189 749 120 678 718 569 651 713  88 737 206 752 324  54  58 476 441  47 487 734  71 412  46 513
  32 549 254 181 208 437 703 660 150 599 537 422  65 219 216 732 639 707 543 400 524 113 263 439 281 666 133 318

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.006e+07us (= 10060ms, 10.06s)
Satisfaction error: 9
Number of search iterations: 2316
Number of local moves: 1893 (including on plateau: 1845)
Number of local minimum: 24 (including on plateau: 258)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 243 746 548 308 31 289 80 84 470 4 112 95 8 276 558 320 130 451 768 152 13 683 450 40 145 553 733 91 => the sum is 8381 rather than 10990
Problem in row 5: 371 361 403 511 539 557 708 38 591 160 163 43 506 490 374 161 212 645 151 706 617 658 647 641 566 268 684 694 => the sum is 12465 rather than 10990
Problem in row 9: 121 207 649 619 675 257 73 540 523 164 556 144 198 66 542 498 614 57 299 560 587 275 157 517 284 609 638 269 => the sum is 10698 rather than 10990
Problem in row 10: 503 438 36 239 10 629 564 679 677 613 377 477 510 340 3 672 776 529 526 652 35 154 530 201 551 69 657 131 => the sum is 11578 rather than 10990
Problem in row 20: 433 48 59 367 514 579 204 322 294 754 661 42 685 200 293 454 669 588 440 224 16 753 711 45 311 107 489 312 => the sum is 10574 rather than 10990
Problem in row 21: 608 783 63 755 603 601 402 245 779 770 735 484 528 771 386 188 114 2 420 635 192 448 155 696 700 19 773 576 => the sum is 13431 rather than 10990
Problem in row 24: 356 644 545 37 143 56 665 457 218 138 39 552 750 298 612 590 455 432 211 480 81 28 739 180 24 139 500 52 => the sum is 9421 rather than 10990
Problem in row 25: 554 561 782 333 780 247 187 183 327 228 546 385 550 584 615 193 594 674 22 108 726 296 197 287 459 317 103 468 => the sum is 11306 rather than 10990
Problem in row 26: 745 5 115 127 738 689 118 226 174 111 772 710 280 687 77 681 709 354 559 172 240 527 222 469 162 126 568 693 => the sum is 11056 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 536  46 448 397 473 773 764 252 697 609 402 681 110 216 304 199 758 641  67 514 412 590 553 628  35 649 707 723
 589 742 414 299 330 517 363 231 262  15 241  97 783 226 123 655 572  26 254  75 227 711 656 306 408 733 684 451
 124 746 740 474 286 370  53 453 154 287  85 384 318  52 490  95 513 188 665 283 345 573 290 338 652 105 610  87
 507 726  42   8 258  12 532 144 364 279  51 303 174 357  76  19  30 582 662 146 721 270 386 117 646 215 650  83
  16 423 706 175 731 334  70 625 371 207 640 300 295 380 689 218 678 593 643 100 111 210 516 584 616 754 570 118
 447 233 169  34 700 660 688 102 422 617 389 497 696 596 663  11 391 456 729 630 781  94 636 642 466 763 710 191
 501 676 520 289 523 569  43  69  40 666 494 774 200 266 612 128 184 160 634 267 694 505 608   9 361 228 489 481
 576 189 542 715 220 588  92 601 682 234 190 251  66 385 288 462 782  56 329 379 565 577 674 522 492  47 744 735
 217 486 203 274 673 493  57 554 648 701 170 657 629 248  96  84 574 467  18 615 454 566 435 540 403 418 158 152
 460 369 651 180  54 249  65 445 585 537 285 645 620 317 708 255 393 680 446 550 458   2  68 777  86  73 598 434
 622 236 420 395 776 556 221 387 224 521 504 116 525 483 172 405 319 461 278 463 482 219 468  36 438 243 485 535
 372 526 547 335 475 327 145 340 452 383 432 147 421 469 530 477 388 430 465 358 302 399 429 533 376  48 336 548
 261 163 441 410 404 297 626 772 611 293 476 704  33 264 491 282 621 591 125 528 470  90  25 557  79 443 269 664
 670 291 549 112 564  10 749 273 121 194 479 162 167 436 341 156 693 683 240 242  50 779 546 600 699 390 115 679
 450 431 562 734 348 326 256 350 457 362 511 275 464 346 519 398 400 268 424 292 280 426 419 313 512 365 225 277
 373 605   3  58 284  13 753 716 712 784 631 177 106 496 561 500 153 298 587 311 244 455 192 506 253 135  63 624
 675 130 213 736 541 206 563 524  37 531 396 374 322 750 129 411 323 627 239 539 775 309 276  24 296  80 378 586
 690 157 347 714  59 132 568  38  22  44 449 394 495 766 211 543 103 294 230  28 578  99 107  39  88 407   6 437
 459 141 332 695 182 594 580 471 442 375 581 560 137 727  14 321 149 113 367 703   7 331 635 381 428 518 571 604
 140 413 259 639 214 709 232 669 265 238  21 551 659 713 324 498 150 320 108 392 602 377 205 250 672 623  49 698
 316 658 638 757 767 686 301 229 173 417 579 178  45   4 770 575 502  78 352 271 235 356 780 355 632 353 360   5
  93 245 196  61 606 738 201 508 725 328 204  55 480 752 151 677  27 637 209 603 366 246 739 619 592 509 406  17
 139 187 618 552 166 439 415 613  71 315 743 122 760 510 730 633 257 181 515 120 737 654 159 342  81 755 272 351
 307 499  82 544 595 134 545 653 359 538 312 186 349 444  72 661 747 667 427 127  31 741 185 176 724 247 440 198
 409 487 165  29  20 195 416 212  62 719 503 687 718 197 534 771 281 202 692 761 179 333  64 368 527 337 555 567
 143 263 237 401  23 109 685 325 559 597 765 644 472 155  89 647 136 164 488 208 691 769 308 722 223 671 142 354
 705 171 778 668 614 222 478 433 728 101 343 759 607  91 720 161 484 702  41 768  60 183  32 148  74 119 138 314
 193 751 168 305 104 732 529   1 745  98 114 310 339 344 583 748 382 425 756 717 133 126 599 558 131 762 260  77

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.0059e+07us (= 10059ms, 10.059s)
Satisfaction error: 12
Number of search iterations: 3064
Number of local moves: 2568 (including on plateau: 2524)
Number of local minimum: 20 (including on plateau: 305)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 536 46 448 397 473 773 764 252 697 609 402 681 110 216 304 199 758 641 67 514 412 590 553 628 35 649 707 723 => the sum is 13184 rather than 10990
Problem in row 3: 124 746 740 474 286 370 53 453 154 287 85 384 318 52 490 95 513 188 665 283 345 573 290 338 652 105 610 87 => the sum is 9760 rather than 10990
Problem in row 4: 507 726 42 8 258 12 532 144 364 279 51 303 174 357 76 19 30 582 662 146 721 270 386 117 646 215 650 83 => the sum is 8360 rather than 10990
Problem in row 5: 16 423 706 175 731 334 70 625 371 207 640 300 295 380 689 218 678 593 643 100 111 210 516 584 616 754 570 118 => the sum is 11673 rather than 10990
Problem in row 6: 447 233 169 34 700 660 688 102 422 617 389 497 696 596 663 11 391 456 729 630 781 94 636 642 466 763 710 191 => the sum is 13413 rather than 10990
Problem in row 8: 576 189 542 715 220 588 92 601 682 234 190 251 66 385 288 462 782 56 329 379 565 577 674 522 492 47 744 735 => the sum is 11983 rather than 10990
Problem in row 16: 373 605 3 58 284 13 753 716 712 784 631 177 106 496 561 500 153 298 587 311 244 455 192 506 253 135 63 624 => the sum is 10593 rather than 10990
Problem in row 18: 690 157 347 714 59 132 568 38 22 44 449 394 495 766 211 543 103 294 230 28 578 99 107 39 88 407 6 437 => the sum is 8045 rather than 10990
Problem in row 19: 459 141 332 695 182 594 580 471 442 375 581 560 137 727 14 321 149 113 367 703 7 331 635 381 428 518 571 604 => the sum is 11418 rather than 10990
Problem in row 21: 316 658 638 757 767 686 301 229 173 417 579 178 45 4 770 575 502 78 352 271 235 356 780 355 632 353 360 5 => the sum is 11372 rather than 10990
Problem in row 23: 139 187 618 552 166 439 415 613 71 315 743 122 760 510 730 633 257 181 515 120 737 654 159 342 81 755 272 351 => the sum is 11437 rather than 10990
Problem in row 27: 705 171 778 668 614 222 478 433 728 101 343 759 607 91 720 161 484 702 41 768 60 183 32 148 74 119 138 314 => the sum is 10642 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 437 589 195 656   8 498 693 226 357 110 385 311 186  96 440 771 131 306 752 137  97 624 422 292 762 729  16 764
 198  35 612 153 759 678  62 716 747 597 694 549 538 225  32 189 291 117 683 718 577 653 201  37   3  60 720 146
 474 248 537 376 402 329 266 335 128 214 621 664 263 569 193  92 757 547 521  53 274 123 587 459 460 695 482 275
 149 334  64 567 308  80  49 454  95 544 129 744 257  69  39 527 746  81 652 563 312 192 574  93 681 323 134 717
 633 627 783 604 618  18 586  17 430 493  51 142  38 682 552 107 727 748  21 512 638 732  90 663 531 767 714 598
 755 235 379 276 222 341 270 220 782 738 324  29  10 525 723 200 614 761  91 179 338 523 634  30 120 475 665 302
 252 290 261 480 779 157 750 477 221 674 496 777 161 361 639 570 205 504 556 736 138 585 677 704 607 582 135  45
 381 517 479 316 468 319 551 784 649 436 148 688  43  12 685 670 163 655 715  15 553 101  74 143 640 247  83 455
 491 636 245 572 546 156  47 644 536 115 534 615 753 162 303 518 154 100 643 543 559 532 183 249 119 617 351  67
 484 721 333 483  25 191 113 478 395 349 726 171 244 766 262 282 590 611 501 679 774 533  26 765  68 182 499 578
 706 463 260   4 522 730 702 749 628 603 516 713 461 184 164 104   7 467 464 435  34  63 487 173 174 188 669 320
  55 196 591 776 698 562  44 218 672 197 141 231 102 734 632 700 465 172 279 594 742 206 733 229  23 106 286 606
  98 620 495 359 510  99 456 304 472 451 452 466 410 398 392 409 449 355 599  14 662 411  76 444 417 469 277 426
 434 368 445 418 416 394 288 419 420 390 393 212 443 167 382 414 384 372 421 400 432 362 646 370 408 388 413 391
 178 412 406 424 415 363 429 389 331 366 373 328 347 423 610 399 397 377 348 378 386 427 404 374 710 365 321 310
  28  50 505 166 269 630 375 343 658 364 508 566 433 139 740 439 273 486 216 280  27 450 446 602 511 554 353 579
 541 203 458 686 109 503 701 289 168 116 175 251 507  94 155 204 332  73 227 358 540 722 237 396 278 471 608 314
 238 651 224 367 448 371 728 573 514 340 298 481 605 403 284 637 642 387 431  78 219 696 708 581 775  59 580 520
 595 781 555 712 369 272 360 509 588 233 405 159 680 751  72 295 158 301 258 447 625 760 758 296 600 268 428  20
 165 438  54 264 593 548 659 745 281 211 213 575 666 526  79   2 103  82  57 346 689 671 489 641 253 181 768 691
 629 254 668 140 356 453  33  89 150  71 635  46 285 425 105 239  70 401 108 528 215   5 234 529 724 309 160 240
 297 207 126  56  84 719 223 709 339  24 772 330 705 631 442  85 473 687 293 283 476 177 322 731 318 241 564 180
 317 250 380 741 661 112 267 147  13 743 342 530 352 315 707 111 337 692 209 754 124  19 133 121 199 654 407 125
 558 675 145  75 151 780 287 623 535   9 645 673  41 584 190 690 616 336 255 176 725 300 660 132 194  87 122 699
 773 170 711  48 246 515 542  36  61 626 601  11 770 325 561 513 497  22 305 208 130 228 326 242 485 500  31 622
 756 609  88 494 737 684 327   1 354 648 243 259 457 462 299 596 114 613  77 619 202 524  42 470 571 187 502  40
 136  66 647 185 127 271 506   6 230 778 118  86 657 265 545 739 735 568 769 650 350 313 565 557 294 583 492 441
 232 345 344 592 144 217 676 490 236 550  52 383 576 697 763 488 560 169 539 307 152  58 256 667  65 703 210 519

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00596e+07us (= 10059.6ms, 10.0596s)
Satisfaction error: 16
Number of search iterations: 2299
Number of local moves: 1955 (including on plateau: 1914)
Number of local minimum: 14 (including on plateau: 211)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 474 248 537 376 402 329 266 335 128 214 621 664 263 569 193 92 757 547 521 53 274 123 587 459 460 695 482 275 => the sum is 10944 rather than 10990
Problem in row 4: 149 334 64 567 308 80 49 454 95 544 129 744 257 69 39 527 746 81 652 563 312 192 574 93 681 323 134 717 => the sum is 9477 rather than 10990
Problem in row 5: 633 627 783 604 618 18 586 17 430 493 51 142 38 682 552 107 727 748 21 512 638 732 90 663 531 767 714 598 => the sum is 13122 rather than 10990
Problem in row 6: 755 235 379 276 222 341 270 220 782 738 324 29 10 525 723 200 614 761 91 179 338 523 634 30 120 475 665 302 => the sum is 10761 rather than 10990
Problem in row 7: 252 290 261 480 779 157 750 477 221 674 496 777 161 361 639 570 205 504 556 736 138 585 677 704 607 582 135 45 => the sum is 12819 rather than 10990
Problem in row 10: 484 721 333 483 25 191 113 478 395 349 726 171 244 766 262 282 590 611 501 679 774 533 26 765 68 182 499 578 => the sum is 11829 rather than 10990
Problem in row 17: 541 203 458 686 109 503 701 289 168 116 175 251 507 94 155 204 332 73 227 358 540 722 237 396 278 471 608 314 => the sum is 9716 rather than 10990
Problem in row 18: 238 651 224 367 448 371 728 573 514 340 298 481 605 403 284 637 642 387 431 78 219 696 708 581 775 59 580 520 => the sum is 12838 rather than 10990
Problem in row 19: 595 781 555 712 369 272 360 509 588 233 405 159 680 751 72 295 158 301 258 447 625 760 758 296 600 268 428 20 => the sum is 12255 rather than 10990
Problem in row 21: 629 254 668 140 356 453 33 89 150 71 635 46 285 425 105 239 70 401 108 528 215 5 234 529 724 309 160 240 => the sum is 8101 rather than 10990
Problem in row 22: 297 207 126 56 84 719 223 709 339 24 772 330 705 631 442 85 473 687 293 283 476 177 322 731 318 241 564 180 => the sum is 10494 rather than 10990
Problem in row 23: 317 250 380 741 661 112 267 147 13 743 342 530 352 315 707 111 337 692 209 754 124 19 133 121 199 654 407 125 => the sum is 9762 rather than 10990
Problem in row 24: 558 675 145 75 151 780 287 623 535 9 645 673 41 584 190 690 616 336 255 176 725 300 660 132 194 87 122 699 => the sum is 10963 rather than 10990
Problem in row 25: 773 170 711 48 246 515 542 36 61 626 601 11 770 325 561 513 497 22 305 208 130 228 326 242 485 500 31 622 => the sum is 10105 rather than 10990
Problem in row 26: 756 609 88 494 737 684 327 1 354 648 243 259 457 462 299 596 114 613 77 619 202 524 42 470 571 187 502 40 => the sum is 10975 rather than 10990
Problem in row 27: 136 66 647 185 127 271 506 6 230 778 118 86 657 265 545 739 735 568 769 650 350 313 565 557 294 583 492 441 => the sum is 11679 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 742 196 134 174 477 460 433  73 673 444 471 268 604 158 170 382 468 217 727  57 595 102 451  71 731 745 542 353
 244 688 522 177  34 385 121 223 411 480 178 296 586 428  14 669  81 396 690 519 303 653 639 326   2 569 342 218
 589 458 723 179 664  66 749 395 715 239 124 596 624 449   4  55 770  64 366 309 751  59  88 772 301  85 501 295
 316 285 568 546 237  26 248 737 540 649 701  42 677 407 674 490 137 547  74   5 331 554 204 113 712 667 338 165
 729  39 560 437   7 567  29 172 186 432 750 736 393 733 744 507 518 359 527 740   6 337 539 591 276 155 548 517
 484 657 663 497 622 562 191 136 391 153 154 123 213  22 614 205 249  38 328 570 558 647 761 253 565 520 238 576
 169 212 430 488 577 232 642 197 533 235 629  12 127 185  35 286 699 756 506 706 229 583  80 219 685 613 350 575
 352 310 225 379 713 277  37 543 376 372 525 209 377 492 708  47 753  48 572 383 476 763 487  99 279 606 147 435
 603  52 592 755 743 601 264 599 408 607 397 378 457 125 252 114  44 584  46 616 493  82 775 262 509 481 132  19
 631 758  25 135 220 643 665 590 156 566 505 594 258  92 467   3  24 531 470 181 291  50 725 691 362  69 628 660
 175 716 498 150 523 774 759 780 145 692 760 574  21 671 255 545 400 297 151 118 193 243 133 280 221 216  65 635
   1 206 210 646 641 634 474 228 267 593 274 500 741 318 637   8 721  87 454 651 266 532 329 241 224 392  63 652
 144 630 320 351 105  30  83 122 530 236 654 416 431 730 273 717  75 561 696  72 440 615 131 478 475 356 550 769
 330 496 412 387 495 504 602 529 427 434 489 275 360 263 315 515  33 409 403 308 374 341 436 369 311 494 414 265
 380 305 447 271 324 370 459 499 537 322 425 394 349 371 463 367 388 399 333 389 401 423 453 363 421 386 346 405
 355 486  15 313 510 343 222  43  77 485 110 526 128 747 348 345 720 675 201  28 129 161 163 230 620 766 284 455
 418 323 417 242 410 300 687 365 748  13 779 159 482 684 473 289 559 443 290 278 140 332 251 168 319 302 680 439
  98 682 245 340  58 516 381 636 679 142 143  27 709 304 429 564 373 357  36 199 771 164 189 702 705 167 609 765
 312 227 464 233 126 152 442 208 724 626 260 597 139 287 686 600 694  51 317 707 632 681 456 358 247 182 192 390
 354 768 104 402  96  79 608 130 138 361 419 231  61 422 270 697 571 257 314 307 259 292 521 553 491  70 450 563
 611 106 512 662 321 344 441 502 194 722  49 465 103  94 656   9 214 648 618 752 111 764 784 234 413 689 141  11
 226 588 415 535 676 746 461 472 528 581 162 710 364 282  32 683 757 513 107 347 250 325 426 678  60 469 115  56
 200 240 281 732 100 541 693 479  68  67 246 160 462 573 557 612  78 173 190 598 777 445  62 438 640 645 207 726
 587 109 582 269  16 166 203 511 658 700 466 424 171 404 195 549 294 149 188 514 375 202 704 108 579 261 625  84
 452 621 668 120 666 176 767 670 339 420 327 778 538 551 117 256 610 711 306 728 483 112 638 739 183 398 585 605
 650 157  53 734 198 617 288 508 406  89 116 661 619 146 544 555 627 719 738  76 714  95  10 672  17  97 783 101
 335  31 187  54 776 184  18 623  91 211 578 659 293 298 524 773  40 633 762 384 552 735 272 536 556 336 334 215
 503 644 718 782 655 695  23  20  45 119 299 180 703 754 534 148  93 368 580 448  90 698 283 446  86 254 781  41

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00597e+07us (= 10059.7ms, 10.0597s)
Satisfaction error: 10
Number of search iterations: 2863
Number of local moves: 2407 (including on plateau: 2361)
Number of local minimum: 21 (including on plateau: 297)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 742 196 134 174 477 460 433 73 673 444 471 268 604 158 170 382 468 217 727 57 595 102 451 71 731 745 542 353 => the sum is 10918 rather than 10990
Problem in row 2: 244 688 522 177 34 385 121 223 411 480 178 296 586 428 14 669 81 396 690 519 303 653 639 326 2 569 342 218 => the sum is 10194 rather than 10990
Problem in row 5: 729 39 560 437 7 567 29 172 186 432 750 736 393 733 744 507 518 359 527 740 6 337 539 591 276 155 548 517 => the sum is 12134 rather than 10990
Problem in row 16: 355 486 15 313 510 343 222 43 77 485 110 526 128 747 348 345 720 675 201 28 129 161 163 230 620 766 284 455 => the sum is 9485 rather than 10990
Problem in row 20: 354 768 104 402 96 79 608 130 138 361 419 231 61 422 270 697 571 257 314 307 259 292 521 553 491 70 450 563 => the sum is 9788 rather than 10990
Problem in row 21: 611 106 512 662 321 344 441 502 194 722 49 465 103 94 656 9 214 648 618 752 111 764 784 234 413 689 141 11 => the sum is 11170 rather than 10990
Problem in row 22: 226 588 415 535 676 746 461 472 528 581 162 710 364 282 32 683 757 513 107 347 250 325 426 678 60 469 115 56 => the sum is 11564 rather than 10990
Problem in row 24: 587 109 582 269 16 166 203 511 658 700 466 424 171 404 195 549 294 149 188 514 375 202 704 108 579 261 625 84 => the sum is 10093 rather than 10990
Problem in row 25: 452 621 668 120 666 176 767 670 339 420 327 778 538 551 117 256 610 711 306 728 483 112 638 739 183 398 585 605 => the sum is 13564 rather than 10990
Problem in diagonal 1: 353 342 85 712 591 761 583 476 616 470 297 721 717 315 371 128 159 143 626 138 502 461 541 16 120 53 31 503 => the sum is 10831 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 360 758  94 754  82 270 140 716 678 166 738 193 262 514 103 526 108 579 289 437  27 277 203 645 466 562 750
  99 753 174  96 116 417 782 545 679 198 205 614 538 100 192 510 616 638 718 531 159 587 224 769 594 629  86 557
 525  38 690 261 161 589 114 664 420 655 300  50 741 653  33 206 755 178  42 761 550 543 517 139 157 355 230 663
 330 574 669 697 736 250 625  73  66  46  13 496   9 602 727 298 581 689 168   8 696 712 312 154 643 213 149 454
 591 171  80 659 127 744 424 299 682 751 410 128 724 548 599  79 249 196 316 281 164 642  30 372 423 214 532 555
 170 703 244  81 148 619  59 130 271 513 212 719 208 507  89 343 263 759 475 415 324  26 607 474 219 737 190 486
 124 662 409 726 294  91 631 301 182  11 567 626 135 686 413 347  12 253 739 634 401 763 314 121 313 173 775 287
 153 680 578 358 668 194 560 723 748  88 639 683  65  74 237 734 117 436 125 472  21 660 670 235 515 176 323  58
 573  22 302 566 425 490  37 275 554 546 336 232 519  17 104 200 339 322 575 672 641 521 559 539 699  67 307 551
 284 457  98 460 455 109 480 242 266 527 733 658 326 747 210 528 414 126  70 419 568 191 695 687  39 143 730 529
 705 304 481 207 479 334 276 448 201 295 459 233 255 711 636 773 101 473 757 583 227  55 450 661 491 234  92  69
 107 115  45 649 469 523 359 220 492 239 226 443 452 160 768 571 202 497 522 524 590 442 189 441 461 541 438 305
 615 279 628 777 698 122 256 765  49 352 691 254 416 608 311 471 439  56 167 318 484 476 400 613 357 134 418 407
 426 428 440 369 403 394 412 431 411 463 427 404 391 432 389 384 364 365 395 376 383 385 129 377 396 453 388 375
 380 144 542 274 123  90 665 666 393 118 774 327 378 225 349 187 346 433 386 351 362 387 586 335 371 685 398 715
 505 569 315 434 373 422 348 310 367 363 381 353 341 354 485 370 710 382 392 328 308 342 627 356 257 320 288 390
 165 241 458  60 258 338 238 564  14 580 604 593 133 106  44 530 317 702 449 110 772 247 585 654 147 764 582 217
 509 709 499 504 155 291 488 547 329 282   4  95 477 293 265  51 283 231 644 621 601 511 259 337 646 717 197 445
 105 622 467 462 780  36  62 216 516  19 742 776 286 368 561 215 506 606 228  97 246 605 325 584 150 617 778  15
 181 177 577   1 309 535 211 267 498 136 350  93 340 596 706  76 278 652  43 195  54  78 674  32  20 331 186 520
 597 600 142 708  10 783  71 280 630 588 185 292 693 112 184 169 675 478 162 402 145 137 732 447 252 552 766 273
 707 296 444 648  72  41 537 612  57 714 374 533 603 770 236 692 632   2 728  25 172 138   5 623 735 446 113  35
 752 344 435 222 729 501 518 598 379  48 592 209   3 180 482 700 319 746 306 544  23 245 565  84 199 141 406 720
 333 361 762 366 558 303 119 470 779 494 451 163 637 495 656 635 673 595  29 731 667 740 468 120 332 611 704 624
 111 781 248 146 713 681 651 399 158 572  18 465 500 536  53 421 650 264 456 183 556 156 131 610 397 429 620  85
  63  34 243  64 269 609 618  52 240 743 540 464 771 487 570 503  75 512 272 405 721 290 151 725 760  40  68 701
 408 483 175 345 647 745 749  31 260 204 102 321 677 229 684 218 251   6 553 563 671 576   7 221 549 268  24 188
 688  83  87 756  61 657 430 722 633 767 489  28 179 132 493 676 297 285 694 152  47 508 502  77 223 534 640  16

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00612e+07us (= 10061.2ms, 10.0612s)
Satisfaction error: 11
Number of search iterations: 2265
Number of local moves: 1905 (including on plateau: 1859)
Number of local minimum: 10 (including on plateau: 250)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 784 360 758 94 754 82 270 140 716 678 166 738 193 262 514 103 526 108 579 289 437 27 277 203 645 466 562 750 => the sum is 11481 rather than 10990
Problem in row 2: 99 753 174 96 116 417 782 545 679 198 205 614 538 100 192 510 616 638 718 531 159 587 224 769 594 629 86 557 => the sum is 12126 rather than 10990
Problem in row 6: 170 703 244 81 148 619 59 130 271 513 212 719 208 507 89 343 263 759 475 415 324 26 607 474 219 737 190 486 => the sum is 9991 rather than 10990
Problem in row 10: 284 457 98 460 455 109 480 242 266 527 733 658 326 747 210 528 414 126 70 419 568 191 695 687 39 143 730 529 => the sum is 11191 rather than 10990
Problem in row 13: 615 279 628 777 698 122 256 765 49 352 691 254 416 608 311 471 439 56 167 318 484 476 400 613 357 134 418 407 => the sum is 11561 rather than 10990
Problem in row 17: 165 241 458 60 258 338 238 564 14 580 604 593 133 106 44 530 317 702 449 110 772 247 585 654 147 764 582 217 => the sum is 10472 rather than 10990
Problem in row 20: 181 177 577 1 309 535 211 267 498 136 350 93 340 596 706 76 278 652 43 195 54 78 674 32 20 331 186 520 => the sum is 8116 rather than 10990
Problem in row 21: 597 600 142 708 10 783 71 280 630 588 185 292 693 112 184 169 675 478 162 402 145 137 732 447 252 552 766 273 => the sum is 11065 rather than 10990
Problem in row 24: 333 361 762 366 558 303 119 470 779 494 451 163 637 495 656 635 673 595 29 731 667 740 468 120 332 611 704 624 => the sum is 13876 rather than 10990
Problem in row 27: 408 483 175 345 647 745 749 31 260 204 102 321 677 229 684 218 251 6 553 563 671 576 7 221 549 268 24 188 => the sum is 10155 rather than 10990
Problem in row 28: 688 83 87 756 61 657 430 722 633 767 489 28 179 132 493 676 297 285 694 152 47 508 502 77 223 534 640 16 => the sum is 10856 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 370 751 377 532 266 113  37 111 614 192  23 634 616 749  20 291  33 488  54  82 417 418 223   6 662 612 682 755
 736 621 383 178 264  68 705 764  16 104 297 664 761 256 142 656  49 450  24 176 364 642 746 348 267  74 700 535
 407 159 633 557 228 760 155 393 556 275 672 552 720 416  31 439 563 396 255 333 177  18 531  58 680 692 191 148
 129  14  34  63 593 520 265 516 758 773 164 284 744  93 592 466 609 181 686 175  10 716  35 743 289 356 477 226
 471  40  32 414 454 205 453 583   9 588 712 561 536 276 617 506 457 723 470 497 144 780 132  73 199  45 426 208
 118 776  86 219 243 599 443 718 141 350 781 372 328  76 779 586 187  75 598 254   8 503 687 530 641 263 404 225
 235 189 727 587 260  98 335 116 203 234 547 648  22 214  77 425 753  29 386 777 653  94 362 385 690 646 433 169
 678 166 390 133 210 221 114 338  97 550 706 109 725 540 251  25 130 295 618 126 658 197 600 462 306 257 127 310
 525 602 329 679 505 487 345 574 575  89 185 353  62 691 668 403 229 156 230 632 582 514 204 375  53 124 315 504
 232 194 545 630 179  81 233 107 145 378 195 317 463 770 301 394  69 677 558 644 643 168 629 784  92 413 623 526
 259 411 478 670 651 440 388 384 358 697 597  26 278 340 314 596 279 589 302 469 637 541  70 339 103 391 331  52
 485 115 554 472 739 783 579  79 405 542 106 573 376 154 719 654  17 527 460 121 757 241 448 311 237 434  11  91
 363 296 167 486 422 509 365 452 512 511 441 489  13 546 467 382 244 247 507 344 429 351 408 323 455 379 483 399
 446 500 334 395 468 287 392 464 438 360 397 465 357 330 415 152 451 480 222 280 447 481 349 419 322 412 495 432
 695 498 158 308  57 352 631 759  50  21 369 538 420 171  72 528 704 565 537 304 737  46 343 151 696   4 534 742
 640 778 721 367 673 268 562 461 726 135 750 406  60 473 262 766 366 421 294 519  56 409 636 769 569 494 456 763
 549 449 346   2 604 270 492 112 490 688 119 442 193 410 615 555 518 327 591 529 157 316 722 707  15 160 341 271
 734 117 374 427 752 305  41 326 428 523 212 681 337 336 517 559 186 312 174 123  47 354 708 139 767 683 666 162
 273 459 401 285 645 714 286 496 603 380 539  59 551 710 715 137  96 655 207 649 231 577 201 293 272 665 699 606
 402   3 772  30 202 610 684 619 543 218  66   7 146 513 368   5 747 652 100 522 502 283 740 703 211 576  42 724
 131 639 381 437 182 685 209 249 638 170 581 153 274 161 252 347 430 694 608 560 667 149 319  51 445 748 510 320
  78 624 217 728 324 321 227 521 435 245 765 689 571 307 436 190 613 213 768 318  38 553  80 325  44 491 669 200
 246 762 224 693 105 238 564 248 298 782 309  85 675 635 371 173 732 277 771 731 242 163 269 484 671 180   1  61
 250 136 756 475 735 701 108 122 741 607  65 595 628 590 533 622 730 150  84 120  27 281  36 165 567 572 585 566
 423 188  90  99 102 140 745 110 499 389 524 292 236 300 544  71 184 711  83 738 508 611  28 261 216 625 282 659
 594 548 578 206 361 196 676 215  19 355  87 290 240 134 198 183 647 313 774 474 627 568 584 729 373 458  48 515
 482 476 253 143 424 359 698 444 626 101 493 663 570 661  12 125 580 332 128 398 620 303 299 400 431  64 239 674
  39 479 650 775 342 660 258 709  67 733 288  43  88 138 702 754 387  55 501  95 605 713 601 657 717 172 220 147

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00685e+07us (= 10068.5ms, 10.0685s)
Satisfaction error: 12
Number of search iterations: 2458
Number of local moves: 2099 (including on plateau: 2055)
Number of local minimum: 10 (including on plateau: 248)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 370 751 377 532 266 113 37 111 614 192 23 634 616 749 20 291 33 488 54 82 417 418 223 6 662 612 682 755 => the sum is 10128 rather than 10990
Problem in row 3: 407 159 633 557 228 760 155 393 556 275 672 552 720 416 31 439 563 396 255 333 177 18 531 58 680 692 191 148 => the sum is 10995 rather than 10990
Problem in row 4: 129 14 34 63 593 520 265 516 758 773 164 284 744 93 592 466 609 181 686 175 10 716 35 743 289 356 477 226 => the sum is 10511 rather than 10990
Problem in row 5: 471 40 32 414 454 205 453 583 9 588 712 561 536 276 617 506 457 723 470 497 144 780 132 73 199 45 426 208 => the sum is 10611 rather than 10990
Problem in row 7: 235 189 727 587 260 98 335 116 203 234 547 648 22 214 77 425 753 29 386 777 653 94 362 385 690 646 433 169 => the sum is 10294 rather than 10990
Problem in row 8: 678 166 390 133 210 221 114 338 97 550 706 109 725 540 251 25 130 295 618 126 658 197 600 462 306 257 127 310 => the sum is 9339 rather than 10990
Problem in row 16: 640 778 721 367 673 268 562 461 726 135 750 406 60 473 262 766 366 421 294 519 56 409 636 769 569 494 456 763 => the sum is 13800 rather than 10990
Problem in row 19: 273 459 401 285 645 714 286 496 603 380 539 59 551 710 715 137 96 655 207 649 231 577 201 293 272 665 699 606 => the sum is 12404 rather than 10990
Problem in row 24: 250 136 756 475 735 701 108 122 741 607 65 595 628 590 533 622 730 150 84 120 27 281 36 165 567 572 585 566 => the sum is 11547 rather than 10990
Problem in row 25: 423 188 90 99 102 140 745 110 499 389 524 292 236 300 544 71 184 711 83 738 508 611 28 261 216 625 282 659 => the sum is 9658 rather than 10990
Problem in row 27: 482 476 253 143 424 359 698 444 626 101 493 663 570 661 12 125 580 332 128 398 620 303 299 400 431 64 239 674 => the sum is 10998 rather than 10990
Problem in row 28: 39 479 650 775 342 660 258 709 67 733 288 43 88 138 702 754 387 55 501 95 605 713 601 657 717 172 220 147 => the sum is 11595 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 781 105 216 627 206 476  26 232 775 382 145  32 768 107 494 762 445 212 244 418 745  48 259 669 621 150 261
 683 676 344 394 286 746 142 182 121 269 623 359 682 706 129 731  58 749 294 735 495 161 312 219   5 349  24 516
 750 288 239 752 146 535 122 518 273 562 772 417 192 556   2  31 164 704  86 533  81 274  92 693 379 530 650 649
 603 194 387 689 180 686 291 612 473 412 132 296 358 620 410 441 436 108 112 170 262 405 730 193 331 751 144 564
 119 241 485  19 657 285 662 512 199 488 260 588 498 652 723  98 287  11 205 645 667 353 279 426 467 479 608  77
 128 664 639 126 440 648 602  65 227  76 628 226  33 163 234 643 632 656 304 613 624 326 133 611 668 138 604 139
 586 240 778 160 134 722   6  97 449 472 551 712  22 324  27 573  18 469 452 697 341 456 587 758 316 688 384 196
 211 681 303  13 462 195 729 421 673 402 366   3 741 213 774  25 694 257 455 127 343  39 491 356 201 594 503 718
 247 448 699 466 776 114 229  85 416 125 315 400 507 748 168 319 191 565 759 352 711 698 253 510 524  62 233  70
 317 555 350 633 413 102 695  12 580 519 171  89  16 460 155 571 527 543 584 446 761  64 373 118 377 463 425 671
 490 136 218  21 131 297 757 715 537 447 169 591 626 619 225 252 419 154 651 705 483 477 422  91  10 220 684 443
 348 207  45 505 568 235 361 104 278 634 497 342 365 572 622 780 203 346 340 492  59   4 451 308 434 680  67 475
 679  44 465 162 333 692  42 644 675 243 198 280 156  43 509 557 486 617 493 558 223 760 293 504 437 508 290  99
  82 385 459 399 430 411 461 404 655 374 378 406 403 380 368 414 428 408 409 307 392 390 376 371 393 370 383 354
 115 618 190 549 407  94 222 614  30 691 389 487  90 309 200 720 743 147  68 265 665 500 152  60 690 721 687 567
  35  93 153 110 130 375 336 734 742 175 305 583 724  69 517 453 631 599 737 625 281 242  50 674 550 574 539 397
 522 337 357 351 328 314 347 323 292 327 302 521 732 325 332 251 236 329 540 298 313 637 598 311 345 320 716 386
 554   7 659 501 141 300 545 424 167 301  72 173 470 532 398  73 381 502 707 771 728 714 710 101 148  57 208 646
 647 391 202 559 478  74 506 395  51 116  20 685 569 135 782 420 256 310 553 513 464 609 661 638 158 355   1 442
 177 369 756 284 725 388  14 726 217 174 670 178 678 267 221 717 246 444 526 338   8 322 330 484 578 536 299 318
 214 739 457 283 209 514 228 636 289 415 753 183 769 474 672 224 727  79  78 295 184 548 188 335 607 561 186 143
 111 702 187 339 427  84 482 270 589  75 255 372 237 165 529 124 595 708 601 499 523 306 458 570 140 763 166 713
 480 137 615 635 630 454 271  55 185 747 496 770 263 439 248 189 582 765 113  15 531  83 396 552  17  47 511 764
 438 432 157 542 149 401 777 653 738 230  53 641 605 151 642 666 181 176 755  38 231 566  80  66 696  71 767  88
 709 528 563 703 600 597 106 433 610 606 585 733  61 282 258 245 109  96  36  46 579 117 546 275 520  37 429 581
 363 471 616 123 250 197 360 700 215 736 663  34 100 701 515 367 544 590  56 204  40 658 575 660 431 210 362 249
 277 577  28 779 179 783 592 576 654 547 719 538 468 254 773 525 334  41 268  95  23 264 640 103 159 276 489  29
 321  49 534 677 754 541 629  54 423  52 266 238 593  63 450  87 120 172 596 364 560 272 766 744 740   9 481 435

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00596e+07us (= 10059.6ms, 10.0596s)
Satisfaction error: 4
Number of search iterations: 3417
Number of local moves: 2839 (including on plateau: 2786)
Number of local minimum: 19 (including on plateau: 316)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 586 240 778 160 134 722 6 97 449 472 551 712 22 324 27 573 18 469 452 697 341 456 587 758 316 688 384 196 => the sum is 11215 rather than 10990
Problem in row 12: 348 207 45 505 568 235 361 104 278 634 497 342 365 572 622 780 203 346 340 492 59 4 451 308 434 680 67 475 => the sum is 10322 rather than 10990
Problem in row 16: 35 93 153 110 130 375 336 734 742 175 305 583 724 69 517 453 631 599 737 625 281 242 50 674 550 574 539 397 => the sum is 11433 rather than 10990
Problem in diagonal 1: 261 24 530 331 426 133 456 343 352 584 154 203 557 368 309 724 521 72 116 217 636 482 454 149 703 616 577 321 => the sum is 10619 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 439 327 227 700  10 562 715  96 547 745 177 769 156 516 159  76  42 727 292 342 517 670  15 419 487 416  58
  89 509 245 255  67 502 573 757 561 572 495 310 236  62 222 737 460 759 594 535 729 344 582 277  92 361 317  34
 527 522 414 433 491 519 111 532  95 499  78 680 718 489 247 256 500 300 483 383  24 695 623 614  25 658 315 464
 575 268 637 508 649 201 332 128 615 702 611  20 280 203 683  22 589 586  80 466 676 226 761 408 601  41 388 753
 758 218 180  27 477 707 373 696 646 233 512 551 645 244 631 659 211 652 149  65 106   1 322 666 507 629 550 368
 585 187 708 142 570 777 290 112 126   3 608 253 105 451 259 263 316 521 354 739 783 717 329 704 100 392 120 254
 633 692  53 577 622 321 667 119 216 184 171 134 341 237 385  45 208  54 767 583 776 744 603 606 339   7 306 600
 279 674 587 546 331 192  40 584 494 402 772 588 537 326 474 318  43 189 475 563 560  46 503 452 304 202 181 328
 335 644 651 295 369 742 135 553 490 333 186 454 379 467 143 711  69  98 330 492  23 638 258 716 523 101 564 291
 185 347 533 140 486 215 612 194 363 515 685 360 686 579  60 165 152 471 488 693 557 420  61 678 241 458  50 596
 740 605 457 709 246 138 115 630 689 319 618 188   2  51 367 449 764 103 599 404 282  86 653  47  37   4 151 654
 459 232 650 782 762 220 779  70 139 444  90 749 555 230 536  59 276 175  82 768 559 249 530 200 163 721 476 542
 270 150 569 647 417 131 437  85  32 690 260 429 334 604 123 412 738 446 427 445 337 243 728 359 173 681 274 549
 426 421 406 436 394 401 448   6 432 461 450 398 378 431 400 399 405 353 481 395 386 288 356 413 384 428 396 418
 380 506 391 453 366 403 389 376 511 257 664 375 351 372 410 407 313 371 377 137 598 411 350 345 636 397  63 381
 116 340 540 648 127 531 441  38 250 661  49 505 362 346 199 147 387 225  87 624  52 469 435 308 706  77 621 479
 525  13  19 472 307 655 529 352 104 144 358 660  93 677 430 539 154 760 552  21 705 703  36 465 639 242 662 174
 114 409 349 314 571  73 632 656 775 302 265 231 325  94 699 625 526 176 679  31 746 204 182 415 272 482 109 734
 252 756 309 238 221 470 323 456 133  55 726 770 468 102 501 766 266 635 296 688  71 223 713 162 425 212 524 229
 336  30 286 602 724  84 733 285 440 750 209 108 597 191   9 735 207 240  83 271 320 121 298 484 684 627 493 510
 691 619 732 294  74 438  18 287 641 609 160 720 158 545 741 107 541 205 239 442 141 556 213 195 462 574 390 198
 197 206 752 443 122 723 219 146 643 701 393 616 485 498 687 567  28 473 267 657  75 578 423 544 145 196 755 124
 118 161 183 157 665 565 269 117 312 132 370 497 496 719 190 480 754 365 278 251 248 548  12 765 763 338 568 669
 293 780 214 590 781 305 725 607 172 193 528 235 210 730 136  88 576 478  66  56 166 620 148  17 422 558 778 518
 672 234 110 714  35 671 264 773 595  91  97 301  99 771 178 514 673 710 642   5 697 324 228  16 343 297 675 261
 455 736  72 129  64 284 167 355 275 262  81 591 747 113 566 303 694 712 731 168  44  14 281 593 543 538 217 130
 170  68 463  48  79 364 682 610 447 774 289  57   8 634 581 504 424 580 628 382 374 283 179 169 743 748  39 663
  26 224 153 164 273 348 125 751 698 155 520  33 626 668 617 554 640 311  29 434 613 722 513 357 299 534 592  11

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00036e+07us (= 10003.6ms, 10.0036s)
Wall-clock time (full program): 1.00619e+07us (= 10061.9ms, 10.0619s)
Satisfaction error: 11
Number of search iterations: 2497
Number of local moves: 2127 (including on plateau: 2081)
Number of local minimum: 14 (including on plateau: 237)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 89 509 245 255 67 502 573 757 561 572 495 310 236 62 222 737 460 759 594 535 729 344 582 277 92 361 317 34 => the sum is 11276 rather than 10990
Problem in row 3: 527 522 414 433 491 519 111 532 95 499 78 680 718 489 247 256 500 300 483 383 24 695 623 614 25 658 315 464 => the sum is 11695 rather than 10990
Problem in row 4: 575 268 637 508 649 201 332 128 615 702 611 20 280 203 683 22 589 586 80 466 676 226 761 408 601 41 388 753 => the sum is 12009 rather than 10990
Problem in row 5: 758 218 180 27 477 707 373 696 646 233 512 551 645 244 631 659 211 652 149 65 106 1 322 666 507 629 550 368 => the sum is 11783 rather than 10990
Problem in row 6: 585 187 708 142 570 777 290 112 126 3 608 253 105 451 259 263 316 521 354 739 783 717 329 704 100 392 120 254 => the sum is 10768 rather than 10990
Problem in row 11: 740 605 457 709 246 138 115 630 689 319 618 188 2 51 367 449 764 103 599 404 282 86 653 47 37 4 151 654 => the sum is 10107 rather than 10990
Problem in row 12: 459 232 650 782 762 220 779 70 139 444 90 749 555 230 536 59 276 175 82 768 559 249 530 200 163 721 476 542 => the sum is 11497 rather than 10990
Problem in row 16: 116 340 540 648 127 531 441 38 250 661 49 505 362 346 199 147 387 225 87 624 52 469 435 308 706 77 621 479 => the sum is 9770 rather than 10990
Problem in row 20: 336 30 286 602 724 84 733 285 440 750 209 108 597 191 9 735 207 240 83 271 320 121 298 484 684 627 493 510 => the sum is 10457 rather than 10990
Problem in row 22: 197 206 752 443 122 723 219 146 643 701 393 616 485 498 687 567 28 473 267 657 75 578 423 544 145 196 755 124 => the sum is 11663 rather than 10990
Problem in row 26: 455 736 72 129 64 284 167 355 275 262 81 591 747 113 566 303 694 712 731 168 44 14 281 593 543 538 217 130 => the sum is 9865 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 706 506 129  71 211 762  47  27 318 491 678 216 645 325 583  14 686 231 623 578 667 518  34 224 568   2 704 426
 300 206 633 495 457 540 740 373 767 147 389 212 226  51 730 110 322   8 107 496 750 752 448 283 268 715 569 728
 103 489 782 284 340  63 697 264 307 202 200 153 557 665 270 527 347 462 550 229 121 615 419 607 133 585 765 152
 238 618 684 680 142  58 366 465  57 263 173 100  33 304 555 379 729 551 310 416 558   3 351 683  53 543 718 171
 619 335 599  94 691 421  49 380 368 539  37 726 660 222 764 604 541 267 497 135  44 254 695 696 363 552  25 587
 364 356 456 220 342 418  42 138 101 749 204 693 137 391 652 278 770  62 596 281  80 605 722  59 164 102 149 669
 377 468 433 780 146  20 641  77 503 528 724 275 654 499 547 530 132  86 181 682 317 192 526  82 453 225 403 195
 441 277 692 668 243 244 271 422 614 493 451 437 185 454 626 475 642 553 563  28  68 590 156 105 163 597  98 434
  29 603 359  17  16 350 431 501  89 280 592 486 537 731 467 784 612 676  74 297 560 646 155 247  97 472 321 400
 611 136 175 562 617 217 739 751 298 561 644 662 235 292 255 435 748 632 775 699 505 601  38 124 701 628 151 213
 449 370 219  45  72 542 237 315 687 606 548 732 362 663 242 755 511 647 634 717 648  92 757 670 649 327 753 515
 158 221  78 450 535 549 446 439 378 395 371 500 534 409  15 522 326 239 184 571 538 514  55 516 488 483 559 517
  46 565 193 128 360 554  31 345 314 293 302 774 341 259  64 274  26 470 773 109 743 746 783 176 177 744 394 589
 443 761 404 512 411 508 430 410 354 399 279 463 330 352 349 442 323 398 575 215 316 414   1 487 396 361 369 288
 624 108 742 736  99 375  83 191 170 301  66 429 492 112 388  12 199 689 126 118 720 207 353 415 566 309 287 595
 716 758 306 778 348 223 405 567 190 328 386 529 167 253 452 393 392 401  75 460 333 266 707 123 382 477 343 232
 262 240  19 653  48 564 727 685 524 747 246 428  35 698 657  73 384  10 700 546 331 412 272 269 723   6 666  65
 143 186  18 484 763 203 282 771 299 376 174 643 533 510  56 295 532 766 162 169 334  60 423  88 639 754 705 622
 233  91 760 498 627  76 713 104 165 365 714 339 305 779 372 772  30 570 290 768 397 636 336 593   9  79 230 139
 276 130 658  43 313 711 738 260 613 679 355 252 471 308 273 289 201 198 358 311 214 145 640 608 507 157 545 737
 513 745 556 674 635 332 478 168 631  11  93 187 509   7 675 125 319  87 346 579 756 420 296 520 485 265 427 458
 480 690 390 440 490 210 655 777 257 574 464  32 694 598 205 408 594  70 406  95 115 148 521 602 413 248 196 218
 324 159 469 234 417 385  40 209 172 182 459 588 759 525 672 519  61 154 580 504 250 261 245 581 367 494 659 721
 303 285 312 591 638 444 249 329 228 709 455 241 344 188 445 671 160 712 194 710  39 291 294 178 741 479 620 140
 630 688 286 189 681 656  21 572 544  81 131 402 236 227 114 425  85 586  24 719 338 769 116 573  41 502  96  84
 258 664 381 161 661 387 637 725 708 197 650   5 111  22 337 150 523 703 432  23 256  90 447 625 183  36 134 407
 735 127 113 383 251 476 438 141 734 481 576 482 117 473 106  52 616 582 122 466 461 166 776 320 651 474  50 621
 609 208 144 120 436 702 357 584 600  13 629   4 781 673 119 677 179 180 733  69 531 577 424 536 610 374  54  67

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.006e+07us (= 10060ms, 10.06s)
Satisfaction error: 14
Number of search iterations: 2250
Number of local moves: 1923 (including on plateau: 1880)
Number of local minimum: 10 (including on plateau: 218)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 300 206 633 495 457 540 740 373 767 147 389 212 226 51 730 110 322 8 107 496 750 752 448 283 268 715 569 728 => the sum is 11822 rather than 10990
Problem in row 3: 103 489 782 284 340 63 697 264 307 202 200 153 557 665 270 527 347 462 550 229 121 615 419 607 133 585 765 152 => the sum is 10888 rather than 10990
Problem in row 4: 238 618 684 680 142 58 366 465 57 263 173 100 33 304 555 379 729 551 310 416 558 3 351 683 53 543 718 171 => the sum is 10201 rather than 10990
Problem in row 5: 619 335 599 94 691 421 49 380 368 539 37 726 660 222 764 604 541 267 497 135 44 254 695 696 363 552 25 587 => the sum is 11764 rather than 10990
Problem in row 6: 364 356 456 220 342 418 42 138 101 749 204 693 137 391 652 278 770 62 596 281 80 605 722 59 164 102 149 669 => the sum is 9800 rather than 10990
Problem in row 7: 377 468 433 780 146 20 641 77 503 528 724 275 654 499 547 530 132 86 181 682 317 192 526 82 453 225 403 195 => the sum is 10676 rather than 10990
Problem in row 9: 29 603 359 17 16 350 431 501 89 280 592 486 537 731 467 784 612 676 74 297 560 646 155 247 97 472 321 400 => the sum is 10829 rather than 10990
Problem in row 10: 611 136 175 562 617 217 739 751 298 561 644 662 235 292 255 435 748 632 775 699 505 601 38 124 701 628 151 213 => the sum is 13005 rather than 10990
Problem in row 11: 449 370 219 45 72 542 237 315 687 606 548 732 362 663 242 755 511 647 634 717 648 92 757 670 649 327 753 515 => the sum is 13764 rather than 10990
Problem in row 13: 46 565 193 128 360 554 31 345 314 293 302 774 341 259 64 274 26 470 773 109 743 746 783 176 177 744 394 589 => the sum is 10573 rather than 10990
Problem in row 15: 624 108 742 736 99 375 83 191 170 301 66 429 492 112 388 12 199 689 126 118 720 207 353 415 566 309 287 595 => the sum is 9512 rather than 10990
Problem in row 21: 513 745 556 674 635 332 478 168 631 11 93 187 509 7 675 125 319 87 346 579 756 420 296 520 485 265 427 458 => the sum is 11297 rather than 10990
Problem in row 25: 630 688 286 189 681 656 21 572 544 81 131 402 236 227 114 425 85 586 24 719 338 769 116 573 41 502 96 84 => the sum is 9816 rather than 10990
Problem in row 26: 258 664 381 161 661 387 637 725 708 197 650 5 111 22 337 150 523 703 432 23 256 90 447 625 183 36 134 407 => the sum is 9913 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 782 638 295 570 117  59 257 180 254 216  20 199 520 577 592 210  90 579 312 698 491 239  19 569  25  34 495 567
 723 663 167 161 467 624 425 331  24 749 449 543 173  40  28 753  48 236 116 699 704 540 508 287 727 589 144  72
 100 179 745 430   6  73 123 323 691 559 575 412 193 608 198 311 709 419 127 111 683 509  11 231 694 766 743 461
 582 307 169 669 237 360 219 750 164 398 697 634 158 408 463 359 235 361 106 422 618 221 248 297 149 729 418 612
 170 599  82 517 650 185 720 506 670  84 337 105 661 649 626 368 240  49 483 527 102 470 402 655 519 340  62 212
 346 448 505 726 148 633 642 171 317 641 629 680  71 767 473 447 548 189 409 580  22  47  99 208 751 381 668 696
 518  77 598 765 572 187  41 719  56 130 516 557 178 129 172  76  80 648 602 108 605 444 255 735  16 328 275 490
   5 205 651 462 607 587 689 541 594 775 286 213 769 730 191  53 426 712 667 413 386 264 675  93 510 140 214 253
 760 777 410 752 758 382 152 263 547 718 523 206  86 539  64 576 350  43 134  98 246 504 163  66 684 365 374 268
  46 677 309 783 528 526 165  23 273 562 233  33 740  57 493   2 732  38 349 625 682 190 583 768 443  50 522 558
 715 721 174 403 551 754 613 692 434 610 513   8  13  85 306 137 738 230 763  12 284 546 499 343 339 662 524 159
 485 371 597  60 432 693 114  44  97 479 658 249 563 166 405 660 220 390 138 271 184 281 601 654 465 313 731 227
 460 229  63 262 776 303 714 481 521   1 269 318 459 353 141 571 411 759 609 188 550 771 535 486 277 126  21 659
 708 700 202 584 119 664  74 387 774  26 640 757 573 385 464 623 733 498 705 345 223 457 446 406 355 657 121 388
 435 404 383 466 369 332 728 362 379 366 407 357 378 417 389 429 372 356 392 397 330 335 354 375 393 364 377 344
 581 564 646 104  67 151 238 351 744 631 241 511 298 512 494 143 333 442 251 737 532 370 225  52 445 574 415 338
 450 215 283  58 299 394 475 671 500 316   9 218 334 690  37 196 110  87 621 556 103 747 305 396 492 620 211 687
  91 294 533 270 701 265 285 643 300 431 325 561  45 154 301 770 146 320  69 665 259 672 272 652 591 420 673 282
 139   4 761 132 115 566 596 107 611 319 186 133 290 542 458 384 222 666 478 755 175 578 529  70 706  65 181 358
 279 274 401 348 192 781 380 622 724 645 595 534 436 201 616 614 537 553 243 204 391  75 113  27 565 256  32 352
  55 136 400 324 341 482 153 531 122 308 554 203 703 342  42 421 742 606 224  61 156  39 182 656 428 604 437 544
  68 304  54  10 635  94 200 779 124 502 780 469 736 619 488 746 471 329   7 314 741 232 707 260 177 258 487 399
 628 484  29 267 734 472 615 155 247 194 142 363 644 280 678  17 120 176 289 489 296 702 367 207 128 440 711 162
 501  35 477 588 326 147  78 545 496 150 109 530 695 168 653 603 716 688 438 336 764  96 627 593 160  88 717 600
 209 454 555 228 157 234 590 197 195  31 347 507 453 725 455 291 292 242 674 112 476 639 302 686  79 722 585 433
 441 636 439 125 276 713 536 135 497 679  95 266 252 250 245 647 468 525 474 552 560  14 568 424 637 373 515 321
 630  81 784 423 261  36 773  30 632 244 710 685 480 414 762 131 315 101 538 427  51 681 778 118  18 416  15 456
  83 514 278 503 549 293 395 451   3 226 145 739  89 183 756 452 586 748 772 288 376 327 617 676 217 310 322  92

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00037e+07us (= 10003.7ms, 10.0037s)
Wall-clock time (full program): 1.00619e+07us (= 10061.9ms, 10.0619s)
Satisfaction error: 17
Number of search iterations: 2436
Number of local moves: 2075 (including on plateau: 2035)
Number of local minimum: 6 (including on plateau: 250)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 782 638 295 570 117 59 257 180 254 216 20 199 520 577 592 210 90 579 312 698 491 239 19 569 25 34 495 567 => the sum is 9604 rather than 10990
Problem in row 6: 346 448 505 726 148 633 642 171 317 641 629 680 71 767 473 447 548 189 409 580 22 47 99 208 751 381 668 696 => the sum is 12242 rather than 10990
Problem in row 7: 518 77 598 765 572 187 41 719 56 130 516 557 178 129 172 76 80 648 602 108 605 444 255 735 16 328 275 490 => the sum is 9877 rather than 10990
Problem in row 8: 5 205 651 462 607 587 689 541 594 775 286 213 769 730 191 53 426 712 667 413 386 264 675 93 510 140 214 253 => the sum is 12111 rather than 10990
Problem in row 9: 760 777 410 752 758 382 152 263 547 718 523 206 86 539 64 576 350 43 134 98 246 504 163 66 684 365 374 268 => the sum is 10808 rather than 10990
Problem in row 11: 715 721 174 403 551 754 613 692 434 610 513 8 13 85 306 137 738 230 763 12 284 546 499 343 339 662 524 159 => the sum is 11828 rather than 10990
Problem in row 12: 485 371 597 60 432 693 114 44 97 479 658 249 563 166 405 660 220 390 138 271 184 281 601 654 465 313 731 227 => the sum is 10548 rather than 10990
Problem in row 13: 460 229 63 262 776 303 714 481 521 1 269 318 459 353 141 571 411 759 609 188 550 771 535 486 277 126 21 659 => the sum is 11313 rather than 10990
Problem in row 14: 708 700 202 584 119 664 74 387 774 26 640 757 573 385 464 623 733 498 705 345 223 457 446 406 355 657 121 388 => the sum is 13014 rather than 10990
Problem in row 17: 450 215 283 58 299 394 475 671 500 316 9 218 334 690 37 196 110 87 621 556 103 747 305 396 492 620 211 687 => the sum is 10080 rather than 10990
Problem in row 19: 139 4 761 132 115 566 596 107 611 319 186 133 290 542 458 384 222 666 478 755 175 578 529 70 706 65 181 358 => the sum is 10126 rather than 10990
Problem in row 21: 55 136 400 324 341 482 153 531 122 308 554 203 703 342 42 421 742 606 224 61 156 39 182 656 428 604 437 544 => the sum is 9796 rather than 10990
Problem in row 23: 628 484 29 267 734 472 615 155 247 194 142 363 644 280 678 17 120 176 289 489 296 702 367 207 128 440 711 162 => the sum is 10036 rather than 10990
Problem in row 24: 501 35 477 588 326 147 78 545 496 150 109 530 695 168 653 603 716 688 438 336 764 96 627 593 160 88 717 600 => the sum is 11924 rather than 10990
Problem in row 25: 209 454 555 228 157 234 590 197 195 31 347 507 453 725 455 291 292 242 674 112 476 639 302 686 79 722 585 433 => the sum is 10870 rather than 10990
Problem in row 26: 441 636 439 125 276 713 536 135 497 679 95 266 252 250 245 647 468 525 474 552 560 14 568 424 637 373 515 321 => the sum is 11663 rather than 10990
Problem in diagonal 1: 567 144 766 149 655 99 444 386 98 349 230 220 571 464 417 298 218 325 319 724 531 200 472 326 228 439 81 83 => the sum is 9803 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 605 574 359 477   2 141 186 105 341 580 776 746 103 283 695  39  38 668 504  15 241 130 461 300 417 132 296 761
 698 753 442 735 214 379 145  26  99 449 443  53 304 655 737 642 547  41 163 487 513 211 305 167 531 756 287 208
 179 247 116 527 207 475   5 288 237  85 371 180 147 535 364 218   4  61 291 435 190 536 636 276 319 691 617 664
 108 310 594 663 750 597 643 144 124 551 556 294 446  23 659 382 697  77 720 748 160 330  52 473 678 657 125 509
 143 667 325 104 231 383 579 370 759  47 263  51  13 148 466 728 653 592 462 465 440 552 161 639 572 348 360 469
 626 784 472 693 499 601 133 248 479 689 243 665 635 519 708 135 630 101 685 464  87 758 634 548 606 189 616 485
 742 561 439 212 127  95 603  40  97 352 118 215 414 628 245 640 565 483 618 314 467 620 332 686 220 337 280 540
 680  57  28 709 170 216 590 599  31 676 225  80 523 429  60 539 117 681 232 602 507 478 489 619 600 405 631  17
  91 229 100 159 723 219 575  78  49 559 384 322 577 739 217 336 171 221 268 526 542 309 447  96 719 677 501 329
 174 554 629 411 416  54 470 158 222 114 390 514 749  24 318 226 656  62 164 123 149 451 611 102 146 503 315 560
  63 257 646 508 625 679 357 555 254 210 528 481 206 511 493 496 420 197 185 445 520  76 700 109   6 578 203 682
 751 365 633 366  68  67  42 142 717 763 307 434 733  81 497 644 441 251 576 400 240 258 732  34 410 182 614 242
 512 388 707 271 181 224  46 762 432 239 714 324  65 131 328 450 505 183 712 389 168 165 175 134 772 549 424 622
 266 381 413 290 436 412 404 427 372 403 374 460 187 397 391 298 394 406 425   8 468 368 398 704 666 415 418 409
 490 645 431 201 755 386  73 780  71 407 115 111 387 385 376 545 730 213 355 395  69 744 684 354 230 408 457 193
   3 706 349 191 516 621 703 494 306 722 609 373 353 338 482 107 209 726 139 673 278  59 419 392 455 651  82 423
 273 362 515 228 311 255 658 317 661 223  35 302 692 754 153 188 340 498 541 120 339  56 323 234 721 564 593 734
 154 474 169 715 358 553 259 281 546 156 327 137 683 571 534 316 303 275 129 591 459 295 292 757 264 438 448 506
 113 128 321 377 308  86 502 638 347 250 585 727 110 155 249 764  66 345 687 350 343 227 660 563 632 741 279 437
   9 627 456   7 334 246 335 587 269 162 740 690 778 500 768 138 286 367  37 272 713 476 256 252 121 150 752 662
 782 199 204 647 176 745 775 178 538 743  10 568 488  16 570 122 380 518 777 637 253 688  12 106  84  21 402 351
 270 177 532  93 583 491 235 718 779 544 495  83 569 524 610 297 671 550 428 267 672  29 282 537  30 648  89  90
 430 312 369  48 558 194 261 612 205 202 265 604  72 641 567 301 238 533 596 710 731 650 184 444 378 126 701  58
 521 119 320 356 152 699 463 433 765 623 582 525  43 724  11 562 486 670 192  94 675 342  79  32  75 422 173 581
 112 480 738 426 781 771 313 196 588 262 589 586 484 331 151 716 260 783 326 157 299 573 669 736 517 274 363 140
 674 557 136 293 453 530 652 694 725 200 396 244 289 702 233 595 344  22  18 624  92 711 766 401 198  19 421   1
 774  50  55 510 598 705 375 649 393 236  98 454 607 172  88  44 769 770 361 654 615 613 195 566 277  64  14 284
 747  27 492 773 458 166 608 471 584 543 452 767 333  74  20 522  70 696 399  25 760 285  36 729 346  45 529  33

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00588e+07us (= 10058.8ms, 10.0588s)
Satisfaction error: 12
Number of search iterations: 2514
Number of local moves: 2123 (including on plateau: 2078)
Number of local minimum: 13 (including on plateau: 255)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 605 574 359 477 2 141 186 105 341 580 776 746 103 283 695 39 38 668 504 15 241 130 461 300 417 132 296 761 => the sum is 9975 rather than 10990
Problem in row 3: 179 247 116 527 207 475 5 288 237 85 371 180 147 535 364 218 4 61 291 435 190 536 636 276 319 691 617 664 => the sum is 8901 rather than 10990
Problem in row 4: 108 310 594 663 750 597 643 144 124 551 556 294 446 23 659 382 697 77 720 748 160 330 52 473 678 657 125 509 => the sum is 12070 rather than 10990
Problem in row 6: 626 784 472 693 499 601 133 248 479 689 243 665 635 519 708 135 630 101 685 464 87 758 634 548 606 189 616 485 => the sum is 13932 rather than 10990
Problem in row 9: 91 229 100 159 723 219 575 78 49 559 384 322 577 739 217 336 171 221 268 526 542 309 447 96 719 677 501 329 => the sum is 10163 rather than 10990
Problem in row 10: 174 554 629 411 416 54 470 158 222 114 390 514 749 24 318 226 656 62 164 123 149 451 611 102 146 503 315 560 => the sum is 9265 rather than 10990
Problem in row 13: 512 388 707 271 181 224 46 762 432 239 714 324 65 131 328 450 505 183 712 389 168 165 175 134 772 549 424 622 => the sum is 10572 rather than 10990
Problem in row 16: 3 706 349 191 516 621 703 494 306 722 609 373 353 338 482 107 209 726 139 673 278 59 419 392 455 651 82 423 => the sum is 11379 rather than 10990
Problem in row 22: 270 177 532 93 583 491 235 718 779 544 495 83 569 524 610 297 671 550 428 267 672 29 282 537 30 648 89 90 => the sum is 11293 rather than 10990
Problem in row 24: 521 119 320 356 152 699 463 433 765 623 582 525 43 724 11 562 486 670 192 94 675 342 79 32 75 422 173 581 => the sum is 10719 rather than 10990
Problem in row 25: 112 480 738 426 781 771 313 196 588 262 589 586 484 331 151 716 260 783 326 157 299 573 669 736 517 274 363 140 => the sum is 12621 rather than 10990
Problem in diagonal 0: 605 753 116 663 231 601 603 599 49 114 528 434 65 397 376 107 340 275 687 272 253 29 184 32 517 19 14 33 => the sum is 8896 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 716 679 572 416 323 301  66 645 219  31 194 235 777 367 439 175 529  21 722   2 287 372 635  56 168 542  15 102
 264 135 587 267 293  76 326 351 504 693 757 157 429 680 242 609 325 112 601 176 521 273 553 204 695 644 474  42
 691 307 779 625  30 531 710 358 336 254 414 283 421 567 106 498  29 375 341 237 355 689 162  45 213 617 374 643
 756 495 632 721 316 248 178 727 152 132 470 225  96 241 526 747 270 224 198 476 672 465 411 503  44 738 255  72
 490  11 707 486 699  92 569 407 386 383  81 686  49 172 453 687 550 227  79 265 240 646  78 652 767  91 527 510
  80 638  55 143 631 619  84 207 622 536 271 130 574  58 768 629 395 605 654 364 366 736 230 296 720 104 620 339
 127 397 196 289 314 144 602 370 709 712 776 426 245 448 586 650 328 436 120 590 101 578 585 206 544 193  87 231
 310 281 222 275 535   6 359  52 167 581 749 518 772 218 666 523 541 133 394 131 568 145 449  28 664 208 731 764
 700 613 782  20 247 295 440 209 560 184  99 758 156  67 627 333 615 771 304 656 128 302 482 141 139 509 331 522
 441  86 192 228 484 369 311 103 608 534 382  97 350   9 711 517 696 512 437 706  19 423 277 648 545  36 714 555
 129 715 561  69 385 466 661  65 187 774 511 430 626 675 475 348 148  88 546 677  39 524 236 519 485  59 312 280
 479 784 159 640 532 582 117 552 508 118 163 499 670 744   5  53 530 468 754 149 538 600  34 259 134 195 262 462
 400 199 368 297 483 594 171 678 752 458 153 229 438 684 202 775 743 142 571 748 766  60 334 559 160 502 558 409
 528 472 457 406 387 377 427  73 392 221 442 373 444 360 284 398 393 321 422 309 431 404 324 692 432 413 412 396
 151 697 391 610 433 753  95 630 123 641 657 357   3 379 354  41  47 564 186 735 726  94 690 191 313 515  61 461
 125 473  40 636 268 197 308 612 362 353 371 263 454 318 320 340 507 725 347 109 671 365 723 599 481 327 344 352
 537 593 345 477 205 388 708 781  90  38 424 174  98 547 496 201 288 621 489 540 434  35 419 266 363 674 548 211
 614 137 525 746 111 681 694 539  23  50 403 598 579 463 220 179 261 294 303 452 418 450  27 703  54 182 688 596
  26 460 269 166 616 405 233 580 667 595 447 435 158 147 607 543 317 497 244 361 500  46 618 591 291 232 300 639
 759 343  89  71 737 778 647 338 250 417 170 761 459 471 410 258 349 467 210 200 624 272   4 243 389 583 501 190
 116 577 451 783  18 719 750 278 734 146 306 751 663   7 741 256 456 730 165 705 185  70 651 249 665 446 660 408
 322 239 487 724 701   8 100 493 762 183 562 329  22 238  33  25 108 346  83 384 298 765 642 742 557 592 576 669
 299 332 494 376 570 169 378 717  82  85 180 246 402 217  17 623  63 234 668 252 177  16 188 337 155 702 399 181
 428 113  48  43 728 513 445 330 488 290 105 455 282 628  93 315 662 274 203 573 704 491 733 565 253 732 115 381
  13 740 276 279 140 575  64 356 597 604 729 606 549 554 520 114 769 425 492 401 136 676  77 215  74 173 154 682
 566 110 649 551 216 260 563 251 285 514 556 633 603 653 380 121 698 683  14  57 286 516  62 342 464  75 760 122
 533 107 589 226 119 655 506 124 415 745 138 335 659 305  24 319 223 658 673 443 212 214 755 634 637 126 161 739
 390 257  68 420 469 189 478 164  10 718 480   1  12 773 685 713 150  37 770 292 588 763 611 505 584 780  51  32

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00603e+07us (= 10060.3ms, 10.0603s)
Satisfaction error: 7
Number of search iterations: 3356
Number of local moves: 2800 (including on plateau: 2750)
Number of local minimum: 28 (including on plateau: 320)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 716 679 572 416 323 301 66 645 219 31 194 235 777 367 439 175 529 21 722 2 287 372 635 56 168 542 15 102 => the sum is 9606 rather than 10990
Problem in row 6: 80 638 55 143 631 619 84 207 622 536 271 130 574 58 768 629 395 605 654 364 366 736 230 296 720 104 620 339 => the sum is 11474 rather than 10990
Problem in row 13: 400 199 368 297 483 594 171 678 752 458 153 229 438 684 202 775 743 142 571 748 766 60 334 559 160 502 558 409 => the sum is 12433 rather than 10990
Problem in row 15: 151 697 391 610 433 753 95 630 123 641 657 357 3 379 354 41 47 564 186 735 726 94 690 191 313 515 61 461 => the sum is 10898 rather than 10990
Problem in row 21: 116 577 451 783 18 719 750 278 734 146 306 751 663 7 741 256 456 730 165 705 185 70 651 249 665 446 660 408 => the sum is 12686 rather than 10990
Problem in row 23: 299 332 494 376 570 169 378 717 82 85 180 246 402 217 17 623 63 234 668 252 177 16 188 337 155 702 399 181 => the sum is 8559 rather than 10990
Problem in row 27: 533 107 589 226 119 655 506 124 415 745 138 335 659 305 24 319 223 658 673 443 212 214 755 634 637 126 161 739 => the sum is 11274 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 189 303 614 590  50 218  60 440 497 687 206 193 417 275 256 176 766 203 409 754 101 291 726 680 764 301  61 763
  66 674 667 208  31 287 177 441 500 742 745  57  32 327 530 517 420 673 265 579  37 244 134 316 747 751 711 112
 365 539 266 558 110 653 486 641   4 521 520 140 656 654  20 496 635 149 489  23 129 669 261 591 335 665 613 246
 284 104  38 225 369 426 141 263 625 139 693 637 310 219 717 527 341  40 617 621 515 616 180  12 587 672 508 640
 553  85 211 432 254 494 689 424 155 433 565 540  97 626 249 784 577 398 644 207  75 542 293 485 159 474  21 524
 655 612  14 236 701 639 615 506  98  29 549 649 606 216 238 223  88 608 479 455 528 605 132 187 493 668  69  92
 330 115 122 349 744 604 285 651 740 490 270  36 596 718 770 363 230 728 772 235 153 165  96 588 214 781   2 652
 636 582 450 158 278  78 532 306 571 131 148 196 723 472 560 143 561  71 620 340 551 231 550   9 633 531 581 348
 569 296 321  28 323 356 357  59 175 546 688 209 533 696 345 121 529 505 519 212 534 379 186 538 574 255 391 746
 467 276 273 780 221  48 774 252 399 657 192 233 163 429 229  43 253 736 111 552 453 403 544 541 566  51 242 243
  35 133 124 452 404 339 484  90 217 714 618 624 526  87 658 648 697 495 509 116 767  33 511 232 162 288 779 248
 476 627 514  77 468 109  19 564 573 332 346 719  94 513 536  53 465 557 226 710 686 758 311 320  56 597 277   7
 464 457 439 694 438 185 469 107 182 307 428 411 593 397 247 416 478 437 281 412 427 154 423 435 436 373 430 470
 753 197 198 562 191  41 220 706 257  46  91 570  24 666 460  22 283 305 704 659 454 251 359 739 160  64 660 422
 384 394 421 406 366 364 370 407 380 385 383 360 344 372 353 377 376 388 362 703 350 401 400 382 395 418 374 375
 466 328 647 371 381 559 547 749 603 502 386 347 299 572 480 773 105 342 343  49 329 355 367  80 313  10 336 351
 161 783 592 322 543 578 267 326 167 769 210 361 204 259 389 738  45  63 682  73 272 302 609 405 662 705 179 324
 709 195 317 408 481 264 677  47 777 241 778 443 135 768 516 354 234 576 113 634 611 482 712   8  39 137 445  16
  55 503 525  54 643 378 126 475 583 290 127 487 650   3 683 425 215 312 419 584 172 678 462 458 138 715 535 295
 684  93  95 690 325 752 102   6 473 448 444 477 260 483 628 692 413 761   5 294 268 415 103 741  74 396 144  81
 722 298 735 638 556 449  82 568 183 610 128 708 434  86 447 119 707 199  13 245 282  65 240 170 691 314 756 545
 297 410 451 492 661 227 202 757 699 200 700 523 501 286 392 580 279 630 157 304 600  68  42 168 239 393 178 554
 136 555 685 151 169 156 755 390  44  27  67 765 269 173 671 727 512 174 150 145 721 338 664 414 599 258 670 631
 456  15 548  83 117 695 733 622 319 498 586 775 222  89 188 623 645 106 730 337  84 352 237 181 387 146 698 518
 607 431 488 190 598 729 333 213 762 224  25 123 114 166 118 194  62 228 743 760 402 315 759 632 280 274 507 713
 171 720 292 575 782 300 491 147 164 594 504  72 675  99  34 271  17 446  30 732 731 681 442 771 510 595 619 471
 289 663 358 537 716 563 368 108 642 120 262   1 776 750 250 567 748 184  76 130 679 463 646 205 318  58  52 461
  11 602 585 724  70 499 629 725 201 308 331 334 737 589  26  18 309 676 522 125  79 734 601 702 459 100 152 142

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.0059e+07us (= 10059ms, 10.059s)
Satisfaction error: 9
Number of search iterations: 2375
Number of local moves: 2005 (including on plateau: 1957)
Number of local minimum: 14 (including on plateau: 239)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 365 539 266 558 110 653 486 641 4 521 520 140 656 654 20 496 635 149 489 23 129 669 261 591 335 665 613 246 => the sum is 11434 rather than 10990
Problem in row 4: 284 104 38 225 369 426 141 263 625 139 693 637 310 219 717 527 341 40 617 621 515 616 180 12 587 672 508 640 => the sum is 11066 rather than 10990
Problem in row 7: 330 115 122 349 744 604 285 651 740 490 270 36 596 718 770 363 230 728 772 235 153 165 96 588 214 781 2 652 => the sum is 11799 rather than 10990
Problem in row 10: 467 276 273 780 221 48 774 252 399 657 192 233 163 429 229 43 253 736 111 552 453 403 544 541 566 51 242 243 => the sum is 10131 rather than 10990
Problem in row 14: 753 197 198 562 191 41 220 706 257 46 91 570 24 666 460 22 283 305 704 659 454 251 359 739 160 64 660 422 => the sum is 10064 rather than 10990
Problem in row 18: 709 195 317 408 481 264 677 47 777 241 778 443 135 768 516 354 234 576 113 634 611 482 712 8 39 137 445 16 => the sum is 11117 rather than 10990
Problem in row 20: 684 93 95 690 325 752 102 6 473 448 444 477 260 483 628 692 413 761 5 294 268 415 103 741 74 396 144 81 => the sum is 10347 rather than 10990
Problem in row 23: 136 555 685 151 169 156 755 390 44 27 67 765 269 173 671 727 512 174 150 145 721 338 664 414 599 258 670 631 => the sum is 11016 rather than 10990
Problem in row 26: 171 720 292 575 782 300 491 147 164 594 504 72 675 99 34 271 17 446 30 732 731 681 442 771 510 595 619 471 => the sum is 11936 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 453 105 337 229 121  70 508 698 737 545 163 405 707 606 222  53 570   8 294 285 164 300 323 705 720 251 312 580
 257  12 627 481 168 195 306 184 102 659 196 694 372  84 731 303 458 153 407 765 577 191 628 119 744 747 271 559
 538 159  46 394 766 230 713 727 132  26 473 214 227  78 540 732 756 730 505 197 199 763 490 387  41  62 154 711
 408 157 565 381 176 440 701 592  57   4 726 298 636 767 253 156 247 589 550 354  45 380 122 304 714 668 569 131
 655 696 600 143 169 430 225 761 735 369 676 241 574  24 573 777 207 148 114  69 629  98 213 620 332 116 663 133
 188 616 126 152 483 497 526 206  31 551 578 127  60 189 468 448   7 750 240 480 718 772 161 748 198 470 715 485
 639  55 202 677 244  87  93 515 456 780 325 211 725 452 487 603 657 689 264 267 273 212 377 265 502 571 318  44
 532 216 566  82 335  64 773 203 682 141 641 438 123  73 607 109 684 147 544 764 442 310 120 479  80 103 158 370
 439 316  72 755 754 179 282   2 246 716 695 646 233 631 283 112 170 474 728 450  42 531 770 612  20 274  47 511
 155 402 326 614 357 278 427 384 262 275 245 279 654 242 704 533 252 293 292 455 411 501  50 664 572 751 266 346
 484 742 270  34 729   6 619 328 738 459 758 288 443 324 757 529 691 632 342 492 142  89 375 433 379 319  95 679
 561 721 107 623 445 317 345 289 613 350 608 284  38 769 590 162 329 333 281 658 315 367 295 594 268 137 286 305
 743 504 466 160  75 180 741 498 575 598  27 205 421 506 215 260 277 340 733  17  22 609 768 183 670 417 686  94
 710 543 250 261  19 465 719 724 311 276 145 476 224 415 221 237 398 409 783 699 419 182  83 149 366 568 291 647
 359 403 360 239 392 464 523 451 406 425 393 424 413 420 110 386 361 363 389 418 376 396 344 447 400 463 434 431
 341 635 404  52 374 674 383 248 436 414 584 687 778 510 364 446  71 683  99 675 321  56 462 104 327  30 437 395
 588 469 272 478 624 762 399 467  92 100 734 382 193 426 139 522 514 263 562 113 290  85 520 493 461  97 454 491
 129 546 745 223 760 489 348 177  63 556 125 401 171 513 378 771 644 494 602 167 690 256 558 308 135  28 351 362
 336 226 503 517 534 528 521  10 706 457 353 423 703 249  58 117   9 175 134 717 673 693  76 172 444 585 547 524
 358  14 680 560   1 564  77 563 373 477  90 567 397 581  23 234 593 557 591 587  16 512 536 685 309 368 441 236
 774 449 678 702 553 776  91  39 186 111 599 722  74 190 700 299 201 637 228 576 640 259 708 194  59 338  32  43
  25 579 541 435 238 638  35 542 652 617  81  49 115 667 595 320 472 269 753 331 187  29 634 460 185 258 499 784
  96 140 583 165 653 582 643 709 204 209 339  33 656 343  13 106  51 662 622 428 669 610 648  86 633 146 660 301
 539 597  15 232 615 671  11 108 101 349  36 173 280 555 355 651 391  61 313 552 736 697 231 611 549 665 688 208
 136 482 422 307 287 192 554 630 527 596 174 749 144  68 723 740 621  66 217  18 781  88 416 371 661 625   5 390
  67 471 759 779  65 352  54 130 618 243 500 475 681 302 486 388 496 150 235   3 488 530 385 181 507 746 254 645
 124 516 138 666 518 642 118 509 739  37 429 604 626 672 347 410 151 314 128 432 200 692 178 537 548 412 752 220
 356 219 330 649 535 218 255 296 210 650 297 495 322 334  48 586 712 601  40  21 525 782 519  79 166 775 605 365

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00586e+07us (= 10058.6ms, 10.0586s)
Satisfaction error: 5
Number of search iterations: 3284
Number of local moves: 2781 (including on plateau: 2730)
Number of local minimum: 21 (including on plateau: 311)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 453 105 337 229 121 70 508 698 737 545 163 405 707 606 222 53 570 8 294 285 164 300 323 705 720 251 312 580 => the sum is 10471 rather than 10990
Problem in row 8: 532 216 566 82 335 64 773 203 682 141 641 438 123 73 607 109 684 147 544 764 442 310 120 479 80 103 158 370 => the sum is 9786 rather than 10990
Problem in row 11: 484 742 270 34 729 6 619 328 738 459 758 288 443 324 757 529 691 632 342 492 142 89 375 433 379 319 95 679 => the sum is 12176 rather than 10990
Problem in row 21: 774 449 678 702 553 776 91 39 186 111 599 722 74 190 700 299 201 637 228 576 640 259 708 194 59 338 32 43 => the sum is 10858 rather than 10990
Problem in row 27: 124 516 138 666 518 642 118 509 739 37 429 604 626 672 347 410 151 314 128 432 200 692 178 537 548 412 752 220 => the sum is 11659 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 108 744 538 750  98 272 225 743 181 193 384  60 152 732 729 326 327 369 236 762  89 356  70 727 693 174 199 753
 287  75  31 347 571  81 437 695 482 740 363 617  92 110 508 742 746 712 349 278 142 333 368  93 345   9 724 713
 439 492 445 284 323 416 342  64 609  42 545 116 738 731 151 168 775 138 765 646 422 516 307 325  12 703  47 429
 493  15 329 313 623 281   7 723 317 702 684 587 472 515 520 687 101 673 218 279 612 294 521 202 678 754 447   3
 254 610 543 117 474 546 774 524 531 489 111 194 355 679  97 258 745 312 661 471 496  72 550 641 490 494 107 642
 637 105 148 644 162 631 177 167 658 160 659 628  59 191 630  10 588 596 615 123  69 622 246 513 618 582 136 616
 341  52 783 261 741 625  58 311 444 119  40 685 728 562 674 308   5 127  49 711 764 601 758  39 565  27  21  86
 608 634 483 396 784 708 301 324 675 556 699 514 264 575 656 159 257 394  14 591 549 173 654  36 533 540 579 166
 739 260 584 263 554 361 737 239 781 779 532 197 568 227 188  25 602 466 380 129 228 213 230 555 715 360 406  45
  87 632 668 621 517 156 335 776 102 535  46  32 109 430 478 558 544 316 499  23 676 736 690 614  85 696 598 552
 276 484 502 716 310  34 292  37 266 300 269 186  76 322 124 206 244 462 751  28 593 446 112 594 178 604 113 273
 302 455 290 115  38 585 456 314 748 235   8 454  13 256 331 663 449 200 574 689 733 564 147 518 309 650 425 469
 603 527 298 176 435 434 180 569 530 660 367 128 763 432 570 419   4 189 126 209 440 667 541 404 255 389 195 480
 451 448 436 383 338 498 426 405 420 357 417 414 408 352 381 388 387 358 424 375 399 423 441 403 401  11 433 413
 467 431 377 411 372 371 376 393 319 421 374 386 402 362 353 370 346 407 390 373 385 365 378 709 343 379 382 348
 121  63 247 506 633 714 210 251 259 725 619  67 627 464 572 118 120 761 219 364 651 201 453 359 589  78 561 438
 701  79 639 778 271  30 706 473 187 443 780 337 491 578 277 157 222 730 458 334 707  55  29 215 645 757 523 286
 782 649 139 704 573 595 664 638 133  41 275 495  18   1 305 398 280 672 289 626 321  66 158 155 161 460 666 726
  26 427 248 503 184 204  91 245  35 265 657 366 274 297 770 344 481  54 185 182 536  51 452 629 428 131 501 114
 694 688 179 476 350 669 756 509 240 465 410 717 223  44  20 303 512  88 586  16  43 548 747 655 468 242 192 526
 140 238 164 214 692 170 557 224 620 328  80 768 611 249 599 640 100 205 547 752 442 450 291 395  65 734 652 153
 510  99 643 221 537 104 190 475 670  62 241 769 767 145  22 755 682 295 477 560 400 497 285 288  74 529 500 208
 525 459 150 198 735 539 169 665 143 320 103 282 683 354 262 705 171 581 250 135 183 418 592 624 165 267 677 635
 559 583 721 606  83 330 283  50 719 149 253 648 217 605 698 671 566 680 332  82 233 106 577  33 412 154 231 409
 232  73 519  48  19 125 505 486   6 662 252 534 487  90  61 296 553 522 710 590 351 207 722 771 749 636 293 415
  94 720  24  17  71 461 576  95 130 339 600 237  53 229 134 563 697   2 686 243 137 551 391 220 216 172 318 299
 457 485 766 315 268 470 507 511 306 212 504 175 567 777 392 542 340 613  56 647 163 700  77 132 270 336 760 196
  57 463  96 607 234 580 653  84 479 691 718 397 773 681 488 211 146  68 144 772 226 759 203 141 528 122 304 597

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00595e+07us (= 10059.5ms, 10.0595s)
Satisfaction error: 16
Number of search iterations: 2182
Number of local moves: 1896 (including on plateau: 1854)
Number of local minimum: 6 (including on plateau: 230)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 493 15 329 313 623 281 7 723 317 702 684 587 472 515 520 687 101 673 218 279 612 294 521 202 678 754 447 3 => the sum is 12050 rather than 10990
Problem in row 5: 254 610 543 117 474 546 774 524 531 489 111 194 355 679 97 258 745 312 661 471 496 72 550 641 490 494 107 642 => the sum is 12237 rather than 10990
Problem in row 7: 341 52 783 261 741 625 58 311 444 119 40 685 728 562 674 308 5 127 49 711 764 601 758 39 565 27 21 86 => the sum is 10485 rather than 10990
Problem in row 8: 608 634 483 396 784 708 301 324 675 556 699 514 264 575 656 159 257 394 14 591 549 173 654 36 533 540 579 166 => the sum is 12822 rather than 10990
Problem in row 9: 739 260 584 263 554 361 737 239 781 779 532 197 568 227 188 25 602 466 380 129 228 213 230 555 715 360 406 45 => the sum is 11363 rather than 10990
Problem in row 10: 87 632 668 621 517 156 335 776 102 535 46 32 109 430 478 558 544 316 499 23 676 736 690 614 85 696 598 552 => the sum is 12111 rather than 10990
Problem in row 11: 276 484 502 716 310 34 292 37 266 300 269 186 76 322 124 206 244 462 751 28 593 446 112 594 178 604 113 273 => the sum is 8798 rather than 10990
Problem in row 17: 701 79 639 778 271 30 706 473 187 443 780 337 491 578 277 157 222 730 458 334 707 55 29 215 645 757 523 286 => the sum is 11888 rather than 10990
Problem in row 19: 26 427 248 503 184 204 91 245 35 265 657 366 274 297 770 344 481 54 185 182 536 51 452 629 428 131 501 114 => the sum is 8680 rather than 10990
Problem in row 20: 694 688 179 476 350 669 756 509 240 465 410 717 223 44 20 303 512 88 586 16 43 548 747 655 468 242 192 526 => the sum is 11366 rather than 10990
Problem in row 21: 140 238 164 214 692 170 557 224 620 328 80 768 611 249 599 640 100 205 547 752 442 450 291 395 65 734 652 153 => the sum is 11080 rather than 10990
Problem in row 22: 510 99 643 221 537 104 190 475 670 62 241 769 767 145 22 755 682 295 477 560 400 497 285 288 74 529 500 208 => the sum is 11005 rather than 10990
Problem in row 25: 232 73 519 48 19 125 505 486 6 662 252 534 487 90 61 296 553 522 710 590 351 207 722 771 749 636 293 415 => the sum is 10914 rather than 10990
Problem in row 26: 94 720 24 17 71 461 576 95 130 339 600 237 53 229 134 563 697 2 686 243 137 551 391 220 216 172 318 299 => the sum is 8275 rather than 10990
Problem in row 27: 457 485 766 315 268 470 507 511 306 212 504 175 567 777 392 542 340 613 56 647 163 700 77 132 270 336 760 196 => the sum is 11544 rather than 10990
Problem in row 28: 57 463 96 607 234 580 653 84 479 691 718 397 773 681 488 211 146 68 144 772 226 759 203 141 528 122 304 597 => the sum is 11222 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 753 435  45  44 306 133   9 105 750  83 221 770 607 522 339 363  68 394 393 461 631 482 408 656 550 590  88
 155 739 383 679 547 506  63 335  96 676 486 286 229  74 732 248 437  35 568 237 324 690  64 751 598 362 413 277
 507 781 727  70 296 209  73 446 720 561   2 555  53  43 392 297 528 417 553 464 748  75  99 551 460 282 502 579
 492 217  18 703 251 779 730 672  57 644 400 594 710 677  85 474 249 104  21 755  15   7 366 442  26 386 667 449
 128 599 173 497 557 469 721  32 519 447 123 202 262 303 552   4 642 265 719 161 524 264 340 399 715  89 759 525
 682 274 556 646 714 643 444 705 478 345  51 353 531 611 113 148 489 560 124 269  82 373 323  25 433 270 361 387
 354  24 511 725 637 267 427 621 588 686 186 118 304 628 238 773 177 515 144 448 349 601 212 165 334 170 658 130
 431 564 207 141 159 649 122 318 375 702 213 585 305 756 697 737 143 572 291 731  79 757 188 107  77 501 172 411
 138 688  46  16  37 135 666 733 120  76 660  30 302 483 575 514 597 762  67 663 308 457 473 763 341 767 735 164
 379 723 608 409 405  23 301 465 624   3 683 693 147 246 459 718 352 350  29 201 521 372 284 215 500 174 484 622
 726 255 523 168 462 491 701  42 532 290 494 476 516 367 472 455  66 496 458   1 487 665 109 498 243 263 253 481
 223 430  50 139 142  19 609 115 659  72 743 466  60 116 577 111 558 740 729 510 311 520 287 630 546 694 680 254
 166 741 479 108  54 754 420 504 278 293 307 390 439 580 236 295 746 589 758 595 204 140 777 260 584 451  47 424
 407 450 389 426 428 438 463 440 421 406 377 410 432 382 364 333 404 445 381  58 395 348 342 391 434 423 401 402
  56 674 241 587 620 220 603 117 370 581 388 101 641 414 385 634 566  33 181 368 527 197 604 378 616 292  27 569
 689 452 288 374 396 309 134 512   8 336 346 179 338 687 110 360  48 613 322 562 696 610 717 627 369 280 281 347
 312 231 675 513 685 602 106 429 534 549 112 647 162 319  65  40 355 477 586  28 768 453 559 321 443 331  98  11
 605 222 600 244 495  80 266  91 359 252 700 772 119 764 771 545 706 317 761 653 129 100  22 320 636 629 615 337
 593 508 747  97 454 145 227 563 228 365 612 671 570 505 699 192 157  31 310 418 645 285 480 276 692 245  93 182
  59 210 205 214 760 722 275 509 583 591 470 190 257 125 180  94 517 716 619 548 681  49 638 736 235 225 419 163
 398 299 208 328 272 471 485 652 415  52 121 709 648 326 664 617 294 193 199 289 176 541 371 533  34 775 196 724
 468  62 704 356 782 582 219 618 185 240 535   5 752  17 543 171 233 200 650 657  92 150 232 668 357 499 279 734
 283 191 132 626  20 571 530  71 669 422 441 749 711 203 673 198 576 640 538 351 218 189 678  69  41 187 380 633
  95 136 526 728 259 184 540 639 488 211 314 268 493  10  12 271 127 167 315 258 592 707 574 103 654 661 529 769
 256 126 358 332 250 329 327  84  86 325 776 518 224 412 344 456  13 632 712 153 635 573 273 539  38 154 234 695
 384 436 783 503 596 298 160 765 742 146 175 425  61 194 178 738 766 152 397 300  87 744 565  90 542 131 416 216
 745  36 316 780 114  81 778 242 614 195 625 226 578 651 313 537 183 239   6 206 606 343 684  55 156 655 623 403
 475 169 102 536 554 708 467 261 137 774 567 151 376 490  39 691 698 662 158 713 330 149 247 670 230 544  78  14

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00584e+07us (= 10058.4ms, 10.0584s)
Satisfaction error: 6
Number of search iterations: 3849
Number of local moves: 3215 (including on plateau: 3164)
Number of local minimum: 23 (including on plateau: 395)
Number of resets: 0
Number of restarts: 0

Problem in row 9: 138 688 46 16 37 135 666 733 120 76 660 30 302 483 575 514 597 762 67 663 308 457 473 763 341 767 735 164 => the sum is 11316 rather than 10990
Problem in row 13: 166 741 479 108 54 754 420 504 278 293 307 390 439 580 236 295 746 589 758 595 204 140 777 260 584 451 47 424 => the sum is 11619 rather than 10990
Problem in row 17: 312 231 675 513 685 602 106 429 534 549 112 647 162 319 65 40 355 477 586 28 768 453 559 321 443 331 98 11 => the sum is 10411 rather than 10990
Problem in row 18: 605 222 600 244 495 80 266 91 359 252 700 772 119 764 771 545 706 317 761 653 129 100 22 320 636 629 615 337 => the sum is 12110 rather than 10990
Problem in row 24: 95 136 526 728 259 184 540 639 488 211 314 268 493 10 12 271 127 167 315 258 592 707 574 103 654 661 529 769 => the sum is 10630 rather than 10990
Problem in row 25: 256 126 358 332 250 329 327 84 86 325 776 518 224 412 344 456 13 632 712 153 635 573 273 539 38 154 234 695 => the sum is 9854 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 645 243 182 703 481  86 669 304 235 707 152  75 757 464 273 614 458   3 538  12 300 209 676 155 340 761 164
 148 754 469 279 693 426 632 356 288 742 102 265  48 525  66 378 727  84  60 748 688 440 517  85 110 134 729 497
 132  73   4 723  45  77 454 489 380 188 270 702 186 571 474 568 613 558 149  52 628 635 719 278 690 709 296 327
 287 232 262 312 608 708 699 301 780  95  62 204 764  96 716 248 299 542 734  76  39 153 573 712 680 272  31 505
 411 103 580 150 700 365 430 483 753 598 782 588 108 543 494 657  61 663 639 323 143  34 448 660 219 113 594 774
 728 678 133 268 560 631  42 634 478 227 400  83 574 648  88  87 166 710 589  46 169  94 655 115 465 637 486 599
 107 462 176  78 548 157 618  11 659 641 213  24  68 146 258 399  10 633 643 255 351 564 644  91 527 551 222 640
 264 194 337 546 193 503 452 565  92 520  50 518 746  63  49 578 762 581 463 136 567 202 562  29 309 428 555 726
 674 725  16 135  90 171 211 158 511 711 436 650 686 491 592 165 536  23 352 566 450 741 396 583  14 508 344  55
 750 679 405 545 747  37 502 156 596 509 522 175 504 275 381 455 221   6 552 597 575 767  40 584 317 541 601 271
 526 395 353 499 479 198 718 292  33 310 445 354 295 178 763  58 434 480 704 737  65  21 203 498 625 611 256 460
 692 544 129 651  82 775 745 473 282 563 100 433 215 617 653  74 413 179 294 229 105 444 331 732 722  22  19 472
 118  36 715 418 250 260 111 368 429 595 482 612 390 117 417 398 442 123 161 476 549 286 773 424 439 691 670 240
 404 441 414 416  56 387 422 360 410 401 385 427 470 435 362 421 386 376 367 406 388 432 402 451 370 389 403 409
 374 373 664 371 348 391 329 765 379 408 355 372 438 384 419 326 412 345 377 336 359 366 338 383 375 346 293 364
 661 163 756 357 751 752 550 251 214 530 407  72  20 324 112 695 119 187 515 488 493 394 510 330 122 335 369 513
 616 529 624 626 139 126 212 630   8 334 739 322  18 453 622  38 308 539 495 183 758 263 343  32 540 759 104 569
 677  89 382 561 252 277 605 636 425 137 350 173 649 683 297 682 393 318 254 159 321 189 174 620 604 172 687 224
 328 519 307 735 449  17 305 783 772 276 642  44 554 528 512  51 672 320 225 267 717 534 253 302 298 170 290 120
 303 218  93 603 666 314 234  43 755 777 342 459 658 358 744 285  59 423 207 145  15 521 730 197 769 475 141 456
 208 781 607 587 713 591 363 244 185 361 533 705  41 415 316 619 205 766 572 698 247 706 420 249 236 721 484 694
  64 266 496 339 576 668 196 223 151 154 600 590 138 257 190 437 559 621 697 201 615 181 681 313 242 274 760 501
 206 647 466 281   7 121  27 177 629 125  53 231 184 191 144 162 514 238 200 627 652 656 167 743 468 446  97  79
  81  98 689 216 325 226 778  69 557 124 585 532 724 738 128 675 106 261 311 443 623   9 199  99  25 667 220 306
 230 500 233 140 768 736 291 671 241  71 431 130 506 147 593 467 638 217 516 602 662 283 109 259 333 490 646  80
 586 332 237 127   5 701 547 239 524 714 280 740 477 461 245 269 531 731 114 579 168 610  47 523 570  28 582 210
 577  67 535 289 180 341 315 457 142 609 246 779 684 397 195 776  70 101  26 392 347 673 319 537 160  30   1   2
  54 447 665 556  57 553 116 487  13  35 471 654 770 192 696 749 720 507 771 685 284 492 228 485 606 131 349 733

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00601e+07us (= 10060.1ms, 10.0601s)
Satisfaction error: 10
Number of search iterations: 2717
Number of local moves: 2282 (including on plateau: 2235)
Number of local minimum: 15 (including on plateau: 276)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 411 103 580 150 700 365 430 483 753 598 782 588 108 543 494 657 61 663 639 323 143 34 448 660 219 113 594 774 => the sum is 12416 rather than 10990
Problem in row 7: 107 462 176 78 548 157 618 11 659 641 213 24 68 146 258 399 10 633 643 255 351 564 644 91 527 551 222 640 => the sum is 9696 rather than 10990
Problem in row 10: 750 679 405 545 747 37 502 156 596 509 522 175 504 275 381 455 221 6 552 597 575 767 40 584 317 541 601 271 => the sum is 12310 rather than 10990
Problem in row 17: 616 529 624 626 139 126 212 630 8 334 739 322 18 453 622 38 308 539 495 183 758 263 343 32 540 759 104 569 => the sum is 10929 rather than 10990
Problem in row 21: 208 781 607 587 713 591 363 244 185 361 533 705 41 415 316 619 205 766 572 698 247 706 420 249 236 721 484 694 => the sum is 13267 rather than 10990
Problem in row 23: 206 647 466 281 7 121 27 177 629 125 53 231 184 191 144 162 514 238 200 627 652 656 167 743 468 446 97 79 => the sum is 8538 rather than 10990
Problem in row 24: 81 98 689 216 325 226 778 69 557 124 585 532 724 738 128 675 106 261 311 443 623 9 199 99 25 667 220 306 => the sum is 9814 rather than 10990
Problem in row 26: 586 332 237 127 5 701 547 239 524 714 280 740 477 461 245 269 531 731 114 579 168 610 47 523 570 28 582 210 => the sum is 11177 rather than 10990
Problem in row 27: 577 67 535 289 180 341 315 457 142 609 246 779 684 397 195 776 70 101 26 392 347 673 319 537 160 30 1 2 => the sum is 9247 rather than 10990
Problem in row 28: 54 447 665 556 57 553 116 487 13 35 471 654 770 192 696 749 720 507 771 685 284 492 228 485 606 131 349 733 => the sum is 12506 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 783 274 414 550 536  16 199 291 321 410 409 347  21 294  24 664 609 161 564 611  36  44 330 495 309 467 573 217
 596  84 194 451 463 695   5 279 113 284 697 532 200 666  11 221 230 433 614 397 741 739 167 273 368 716  91 730
 112 421 707 247 444 486 193 329 740 549 132  94 651 492 198  48 364 653 634 353 305 636 647 109 675 160  25 586
 656 105 128 692 352 157 150 268 170 233 638 520 562 518 756  31 464 231 698  10 552 683 597 456  59 583 175 567
 645 246 415 570 137 592  90 686   8 103 565 307 209 513 621 623 301 302 335 535 646 324   2  61 773 554 374 453
 408 452 762  80 320 628  68 630  72 558 579 189 527 327 104 772 670 237 147 761 694  56 624 296 235 780 179 358
 384 539 435 419  83 396 606  70 585 728 207   1 733 639 736  55 448 108 648  98 600 382 734 758 156 613 674 765
 201 406 561 668 553 280 682  43 774 445  52 680 141 181 617 241 205 376 594 471 126 572 115 225 434 723 338 286
 124 360 620 514 427 337 485 138 541 479 381 576 685  77  85 253 696 155 749 354 595 505  30 462 700 626 227 303
  18 365 348 744 678  34 605 315 777 507 424 776 202 350 459 484 149 640  28 556 625 240  51 742  37 206 490 140
 224 120 172 292 314 443 458 691 660 249 498  81 254 618 263 690 265  89  95 738 174  38 244 659 135 123 511 262
 275 782 612 633 166 534 632 760 102  93 270 494 300 720 560 318 537 208 477 287 441 702 163   7 122 752 429 544
  87 673 447 784 642  58 158 779 317 515  62 139 293 255 601 442 136 705 165  33 272 764  17 540 323 297 195 398
 392 420  76 423 722 405 437  74 426 159 266 649 390 431 377 373 417 363 400 393 470 295 510 422 581 508 375 236
 512 548  66 130 619 276 370 234 631 385 288 737 588 171 407 328   9 743 688  45 388 635 517 248 118 351 746  12
 708 391 474  29 637 604 475 355 489 153  88 311 359 750 644 346 308 336 669 469 334 587 183 173 349 342 331  96
 726 436 395 325 687 111 333  99 361 770 177 711 496  14 119 735 341 176 269 701 503 260 497 602  50 379 575 142
 214 216 282 281 259 526 775 403 679 386 413 531 378  82 509 145 196 290  39  22 304 767 362 367 450  97 759 229
 133 658  64 538 319 258 657 313 522 710  54 232 345  71 672 610 627 188 289 593  27 152 547 721 747 252 203 488
 754 731 771 432  35 714 251 616  53  63 529 299 204  60 129 718 677 107 306 182 607  65 213 468 629 476 401 500
 316 681 590 121 709 753 482 250 416 543 519  47  19 584 371 569 530 238  15 148 219 211 727 261 387 369 703 212
 524 643 267 654   3 256 187 571 185 154 717 271 117 454 178 228 622 591 457 665 383 210 480 357 298 164 641 713
 566 125 146 223 283 186 757 460 399  75 755 197 719 222 662 546  57 652 449 245 127 478 578 563 472 418 190 440
 243 580 706 344  20 671 568 667 192 278 545 693 582 768  40 425  73 366 134 523 100 339  79  92 168 220 312 356
 389 499 542   6 491 215 712 428 516 439 131 559 506 242 326 430 769 650 310 699 766 555 724 655 751   4 704 689
 493  78  86 599 446 533 264 557 615 729 577 411 732 481 715 487 521 763 466 528 101 461 501  67 781 116 380 551
 465  13 684  23 143 483 277 574  69 661 239 151  32 402 412  46 589 504 226 169 191 184 603 438 285 372  49  41
  42 144  26 218 502 343 114 110 257 332 778 455 745 608 394 162 180 725 525 404 663 106 748 473 598 322 340 676

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 15
Number of search iterations: 2443
Number of local moves: 2086 (including on plateau: 2044)
Number of local minimum: 6 (including on plateau: 270)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 783 274 414 550 536 16 199 291 321 410 409 347 21 294 24 664 609 161 564 611 36 44 330 495 309 467 573 217 => the sum is 9969 rather than 10990
Problem in row 4: 656 105 128 692 352 157 150 268 170 233 638 520 562 518 756 31 464 231 698 10 552 683 597 456 59 583 175 567 => the sum is 11011 rather than 10990
Problem in row 6: 408 452 762 80 320 628 68 630 72 558 579 189 527 327 104 772 670 237 147 761 694 56 624 296 235 780 179 358 => the sum is 11513 rather than 10990
Problem in row 7: 384 539 435 419 83 396 606 70 585 728 207 1 733 639 736 55 448 108 648 98 600 382 734 758 156 613 674 765 => the sum is 12600 rather than 10990
Problem in row 9: 124 360 620 514 427 337 485 138 541 479 381 576 685 77 85 253 696 155 749 354 595 505 30 462 700 626 227 303 => the sum is 11484 rather than 10990
Problem in row 11: 224 120 172 292 314 443 458 691 660 249 498 81 254 618 263 690 265 89 95 738 174 38 244 659 135 123 511 262 => the sum is 9360 rather than 10990
Problem in row 12: 275 782 612 633 166 534 632 760 102 93 270 494 300 720 560 318 537 208 477 287 441 702 163 7 122 752 429 544 => the sum is 11920 rather than 10990
Problem in row 13: 87 673 447 784 642 58 158 779 317 515 62 139 293 255 601 442 136 705 165 33 272 764 17 540 323 297 195 398 => the sum is 10097 rather than 10990
Problem in row 15: 512 548 66 130 619 276 370 234 631 385 288 737 588 171 407 328 9 743 688 45 388 635 517 248 118 351 746 12 => the sum is 10790 rather than 10990
Problem in row 18: 214 216 282 281 259 526 775 403 679 386 413 531 378 82 509 145 196 290 39 22 304 767 362 367 450 97 759 229 => the sum is 9961 rather than 10990
Problem in row 24: 243 580 706 344 20 671 568 667 192 278 545 693 582 768 40 425 73 366 134 523 100 339 79 92 168 220 312 356 => the sum is 10084 rather than 10990
Problem in row 25: 389 499 542 6 491 215 712 428 516 439 131 559 506 242 326 430 769 650 310 699 766 555 724 655 751 4 704 689 => the sum is 13707 rather than 10990
Problem in row 26: 493 78 86 599 446 533 264 557 615 729 577 411 732 481 715 487 521 763 466 528 101 461 501 67 781 116 380 551 => the sum is 13039 rather than 10990
Problem in row 27: 465 13 684 23 143 483 277 574 69 661 239 151 32 402 412 46 589 504 226 169 191 184 603 438 285 372 49 41 => the sum is 8325 rather than 10990
Problem in diagonal 1: 217 91 160 59 61 624 382 126 354 28 89 537 442 377 171 359 711 413 710 53 250 187 186 20 6 86 13 42 => the sum is 6754 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  68 290  55 243  31 492 729 620 482  88 358 548 412 556 206 768 596  47 645 771 781   4 393 456 780 367  22 182
 756  30  59 335 558 626 581 250 730 474 236 461 134 462  65  53 488 185 126  73 133 347 612 578 118 273 646 318
 266 465 382 664 205  46 700 272 460 171  87 728 590 306 384 132 760 692 452 276 130 473 528 160 354 279 479 549
 259 591 636  29 151 725 127 314  15 350 115 559 338 128 162 744 695 784 555 430 227 752  70 466  45 137  90 753
 131   1 642 415 764 592 428 260 220 774 531 392 610 782 437 170 139 310 116 507 504 568 142 297 188 765 212  93
 521 542 371 225 511  24 100 148 693 197 719  77  76  98 537 587 724 513 146 651 732 305 320 637 391 344 697 104
 601 256 684  64 712 681 123 584 747 777 168 618  17  34 755 348 761 613 224 630 571 228 281 136 647  33 284 326
 683 399  75 302 540 699 263 207 742 680 489 333 632  69 520 445 370 673  13 676 301 404  20 176 107 252 390 530
 748 720 527 143 439  42  82  26  52 424 152 359 506 481 244 442 546 287 733 438  85 689 147 374 570 423  43 638
  49 543 433 501 232 743 150 533  18 296 711  94 278 707 736  61 419 269 174 579 644 209 298 485 643 625 459 101
 271 351 368 381 763 414 231 544 342 449 159 283 773 330 597 153 149 291 334 332 321 600 565 173 246 767 214 589
 418 288 448 641  95 109 286 770 226 490 340 293  72 779 181 713 270 759 666  48 420 193 323 110 190 633 717 512
 550 577 413 436 494 722 671 124 499 365 769 541 408 111 140 603  80 219 322  35 429 241 432 704 650 238 477 721
 435 762 734 716 308 405 698 264 703 478 268 144 607 535  10 208 628 398 285 403  57  91 230 536 690 552 518 457
 175 705 362 505 575 172 574  79 138 355 383 345 677 221 247 447 196 154 726 572 315 157 662 735 213 307  27 397
 336 376 525 440 369 317 380 352 450 409 328 431  25 311 406 366 373 312 443 386 497 469 325 458 503 500 508 395
 502 422 299 356 576 295 515 561 396 588 407 378 372 464 165 164 343 105 364 303 631  32 616  96 539 491 599 411
 167 723 253 663 740 682 427 410 156 400  14 627  28 635  92 551 242 346 714 421 161 523 696 737 514 177 187 708
 563 545  63 757 606 379 659 484 357 582 454 349 218 385 496 184  12 113 487 248 486 360 463 775 180 611 691 239
 471 331 657 217  83 337 191 280 534 274 783 277  44 402 580 309 249 653 604 702  58 566 583 294 434 251 685 141
 498 120 455 257  99 493 265 203  62  50 706 655 529 446 194 522 129   9 199 401 667 586 648  37 665 598 754 282
 668 609 453 300 639 495 738 751  86 739 211   3 741 192 316  97 718  54   7 119 629 562 178 727  11 451 229 267
 475  16 661 387 425 201 622 679 715 547 254 292 186 509 554 467 327 674 672 470 275  78 557   8  81  84 189 585
  74 329   2 605 619 102 480 416 602 163 526 750 758  67 258 656 569 155 233 688 417 114 304 594 324 669 476  40
 202 538 125 701 255 237  60 394  19 169 652 745 519 235 772 710 319 623 223 353 670 441  66 341 776 121 363 361
 200  23 532  51 158  71  41 634 624 112 516 135 444 560 746 375 687 595 339 216 222 749 377 313 108 675 210 179
 614 234 183 567   5 649 215 709 262  36 615  56 388 621 573 694 195 731 510 117 103 766 468 198 245 106 658 472
 289 204 593  89  38 240 654 122 660 553  39 517 608 564 617  21   6 426 678 145 524 483 686 389 778 261 166 640

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00603e+07us (= 10060.3ms, 10.0603s)
Satisfaction error: 12
Number of search iterations: 2991
Number of local moves: 2486 (including on plateau: 2442)
Number of local minimum: 20 (including on plateau: 323)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 756 30 59 335 558 626 581 250 730 474 236 461 134 462 65 53 488 185 126 73 133 347 612 578 118 273 646 318 => the sum is 9707 rather than 10990
Problem in row 4: 259 591 636 29 151 725 127 314 15 350 115 559 338 128 162 744 695 784 555 430 227 752 70 466 45 137 90 753 => the sum is 10247 rather than 10990
Problem in row 7: 601 256 684 64 712 681 123 584 747 777 168 618 17 34 755 348 761 613 224 630 571 228 281 136 647 33 284 326 => the sum is 11903 rather than 10990
Problem in row 9: 748 720 527 143 439 42 82 26 52 424 152 359 506 481 244 442 546 287 733 438 85 689 147 374 570 423 43 638 => the sum is 10360 rather than 10990
Problem in row 13: 550 577 413 436 494 722 671 124 499 365 769 541 408 111 140 603 80 219 322 35 429 241 432 704 650 238 477 721 => the sum is 11971 rather than 10990
Problem in row 14: 435 762 734 716 308 405 698 264 703 478 268 144 607 535 10 208 628 398 285 403 57 91 230 536 690 552 518 457 => the sum is 12120 rather than 10990
Problem in row 15: 175 705 362 505 575 172 574 79 138 355 383 345 677 221 247 447 196 154 726 572 315 157 662 735 213 307 27 397 => the sum is 10421 rather than 10990
Problem in row 18: 167 723 253 663 740 682 427 410 156 400 14 627 28 635 92 551 242 346 714 421 161 523 696 737 514 177 187 708 => the sum is 11994 rather than 10990
Problem in row 19: 563 545 63 757 606 379 659 484 357 582 454 349 218 385 496 184 12 113 487 248 486 360 463 775 180 611 691 239 => the sum is 11746 rather than 10990
Problem in row 21: 498 120 455 257 99 493 265 203 62 50 706 655 529 446 194 522 129 9 199 401 667 586 648 37 665 598 754 282 => the sum is 10529 rather than 10990
Problem in row 26: 200 23 532 51 158 71 41 634 624 112 516 135 444 560 746 375 687 595 339 216 222 749 377 313 108 675 210 179 => the sum is 9892 rather than 10990
Problem in diagonal 1: 182 646 279 45 297 320 228 301 438 174 291 270 603 10 221 25 378 14 582 534 203 738 201 619 701 532 234 289 => the sum is 9355 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  84 204 312 779 620 210 650  20 595 544 340 539 237 359 654 576 524 231 580  36 617  49 347  46 448 258 408 723
 218 766 198 572 185 753 141 547 771 484 307 209 331 419 556  17 304 120 678 485 562 719  51 700 101 203 349 244
 608 298 552 261 715 154 330  44 119 636 618 217 146 724 103 267 161 535  77 713  41 417 671 655 515 410 509 494
 311 527  76 102 632 243 108 278 560 489 610 744 127 447 508 477 747 263  93 643 452  83 388 498 274 205  94 716
 568 682 529 761 184  48  86 722 327 296 511  88 490 626 208 606 124 681 176  66  62 728 456 669 129 450 683  34
 486 149 412 173 784 637 457 615 707 230 493 326 628 659 250 183 256  95 159 554 759 548 497 600  39 736 114 499
 633 510 755 604 645 211 593 778 416  10  47 160 148  28 259 352 227 216 276 264 491 602 487 320 742 467 720 769
 272 781 346 335 197 115 365 587 746 537 642 468  42 321 229 191 516 430 472 316 351 420 625 113 289 550 135 599
 507  98 704 196 532 362 182 235 533 168 240 202 577 760 559  35 647 471 662 523  31 313 492 496 260 163 309 733
 341 158 616 772 111 286 257 275 174 674 751 686 187 694 370 470 248  60 521 725 407 542  14 463 201 153 663 171
 567 501 534 112  18  15 776 355 474  82 520 481 466 541 123 688 691 459 219 460  21 206 762  65 436 684 125 609
  74 225  25  26 178 783 739 441 338  29 350 432 665 685 439 717 437 673 234   1 128 666 453 706 451 594 391 110
 726  85 279 337 434 461 531 405 644 505  56 575 385 236 702 748 181 269 299 611 284  97 738 590 711 398 332 478
 374 469 381 386 413 397 424 366 427 444 380 402 389 449 438 373 443 431 392 345 406 371 425 421  73 377 415 379
 429 390 399 372 361 384 426 382 378 401 324 369 375 563 383 342 393 404 368 411 400 475 367 394 334 414 409 343
 752  30  52 212 536 731 582 107  71 689 118 627 387  70 750 356 699 773  27  91 629 551 224 473 589   4 395 465
 676 308 301 482 195 687 480 336  37 295 139 193 695 323 418 291 328 638 306 603 732 363 288 302 631 268   7 668
 315 705 232 749 500 454 743 131 194 428 310 223 300 155  38 770 495 297 555 151 233 152 283 446 143 640 741 607
 179 238 213 646 462 526 247 740 221  72 777  22 767  61 656 246 641 358 273 768 325 281 228 100 570 488 571 314
   5 601 780 660 220 566 170 622  81 718 144 714 514 200  45 538 458 252 280 266 294 433  64 277 651 150 579  19
 317 585 652  69 730 242  68 271 476  80  16 658 329 764 584 543 109 709  78 672 157  63 648 140 578 756 104 287
 175 558 504  89 339 670 222 528 565 540 583 774 226  90  13 207  43 581 623 190 721 130 519 116 333 249 586 241
  99 729  96 285 734 172 639 145  11 396 253 564 735 624 464 513 177 561 423 117 376 763 164   3 455 522 357 613
 106 653 661 517 549 621  79 169 292 592 727   2 162 322 265 303 677 142 506 619  55  40 703 697 188 105  67 133
 675 138 530 262   9  75 591 136 597 525 442 132  59 214 775 679  24 239 745 165 518 614 440 635 782 680 251  58
 596 167 122 512 483 137 293 545 692 282 712 634 354 126 696 147   8   6 758 270 701 479  92 757  12  57 754 598
 199  87 573 553 192 445 121 546 364 710  23 360 657 186 290  50 765 403 708 422 649 255 245 254 737 574 569  53
 698 348 156 166  32 605 690 664 180 134 557 189 612 344 215 305 667 693 502 503 588 630 319  54 318 435 353  33

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00739e+07us (= 10073.9ms, 10.0739s)
Satisfaction error: 8
Number of search iterations: 2328
Number of local moves: 1981 (including on plateau: 1932)
Number of local minimum: 12 (including on plateau: 223)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 311 527 76 102 632 243 108 278 560 489 610 744 127 447 508 477 747 263 93 643 452 83 388 498 274 205 94 716 => the sum is 10695 rather than 10990
Problem in row 6: 486 149 412 173 784 637 457 615 707 230 493 326 628 659 250 183 256 95 159 554 759 548 497 600 39 736 114 499 => the sum is 12045 rather than 10990
Problem in row 7: 633 510 755 604 645 211 593 778 416 10 47 160 148 28 259 352 227 216 276 264 491 602 487 320 742 467 720 769 => the sum is 11730 rather than 10990
Problem in row 13: 726 85 279 337 434 461 531 405 644 505 56 575 385 236 702 748 181 269 299 611 284 97 738 590 711 398 332 478 => the sum is 12097 rather than 10990
Problem in row 20: 5 601 780 660 220 566 170 622 81 718 144 714 514 200 45 538 458 252 280 266 294 433 64 277 651 150 579 19 => the sum is 10301 rather than 10990
Problem in row 21: 317 585 652 69 730 242 68 271 476 80 16 658 329 764 584 543 109 709 78 672 157 63 648 140 578 756 104 287 => the sum is 10685 rather than 10990
Problem in row 22: 175 558 504 89 339 670 222 528 565 540 583 774 226 90 13 207 43 581 623 190 721 130 519 116 333 249 586 241 => the sum is 10415 rather than 10990
Problem in row 24: 106 653 661 517 549 621 79 169 292 592 727 2 162 322 265 303 677 142 506 619 55 40 703 697 188 105 67 133 => the sum is 9952 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 580 486 614 236 202 351 255 518 147 185  93 136  11 730 543 501 577 160 281 355 426 756 664 621 628 575 585 765
 443 127 707 780 203 744 272 757 767 366  62  18 693 602 297 634 763 135 600 200  51 692 536  32  74 356 733 427
 210 704 187 700 336 538  39 152 716 150 727  10 599 116 620 684 651 514  66 138 402  81 286 177 153   3 292  41
   4  73 265 710 318 231 479 699 209 207 149 676 632 238  48 386 677 174 695 103 312 195 640   6 461 113 759 701
 595 667 617 544 423  46 434 752 454  57 569 230 633  89 588 298 237 657 243 457 234 211 589 653  45   9 274 385
 254 248 115 252  24 725  16 450 326 619  91 594 464 444 669 539 189 164 737 769   5 491 487 529 592 753 726  42
 353 235 429  40 319  61 623 169 496 722 649 448 125  83 167 227  19  43 568 114 329 565 269 498 696 749   2 607
 528  56 159 469 506 143  63 406 613  31 554 433 405  71 468 239 460 688 656 584 663 122 625 140 500  55 648 705
 740 418 108 128 671 572 564 525 531  95 576  90 163 438  14 534 117 465  60 546  76 379 573 729 754 452 132 540
 655 420 365 509 478 391 537  65 516 535 690 411 497 611 527 325 493 215 521 139 119   8 158 333 112 624 170 566
 291 436 691 714 175 734 562  98 636 670 519 736 192 618 188 453 228 590 161 642 471 622 773 201 245 758 431 194
 605 480 129 435 542 476 316  35 492 481 533 397 449 123 495 241 467  25 482 447 263 466 282 419 582 445 455 428
 232 639 755 110 517 156 299 270  80 484  37 658 442 771 609 126  64 601 422 296 332 728 440 598  67 659 474 124
 101 191  97 459 348 378 303 583 162 186 409 183 242 424 408 668 395  53 660 462 777 703 706 437 557 631 106 361
 508 377 358 403 485 368 394 413 407 359 439 381 338 342 400 383 382 349 416 387 341 372 352 772  85 376 393 410
 472 360 574 364 711 362 389 285 367 330 323 363 560 398 350 315 347 340 354 317 401 357 302 346 698 335 375 295
 208 666 284  49  12 686 392 708 384 430 369 331 259 264 458  82 308 288 157 732 680 522 287 504 713 289 313 615
 280 344 723 337 446 489 343 240 305 321 266 339 322 273 719 551 198 548 327 311 513 563 604 290 417 432 165 324
 526 610 494 561 511 199  54 665  36 233 181 630 530  29 743 591 304 586 225 731 644 553 404 396 111  26 374 176
 641 250 380 182 212 483 606 490 196  92 216 579 739 499 171 314 120 781 768 220 627  23 247 635  99 687 587 146
 612 121 334 155 473 679 626 184  34 675  52 148 278 371  47 441 425 647 645 399 214 654 451 681 735 218 549 142
 742 717 133 596 271 782 197 144 556 778 774 275 345 646 221 137 545 279 180  22   1 502 512 293 388 190 257 507
 608 559 477 373 747 193 204 776 310 682 488 550  59 541 702  70 253 104 213 224 783 260 217 761  86 463  38 249
 154 267 131 283 597 650 762  77 751 738 179 715  27 246  88 709 673 766  17 552  58 173  96 102 760 570 555 294
  78 229 130  94 256  33 652 244 414 578 746 571 219 520 300 251 558 415 515 637 748 301 306  15 178 172 672 503
 276 697 721 683 629 107 779 662  84  75 456 145 475 105 109 510 750 724  50  21 532 470  13  69 223 784 100 741
 226  20 685  79 166 151 118   7 694 643 638 775 603 720 277 523  72 370 581 524 421 134  30 547 770 222 320 674
  68 593 328 745 412 262 712 616 307 268 205 168 689 678 764 258 718 309 390 661 567  87 141 206 261  44 505  28

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00592e+07us (= 10059.2ms, 10.0592s)
Satisfaction error: 9
Number of search iterations: 2344
Number of local moves: 1949 (including on plateau: 1901)
Number of local minimum: 22 (including on plateau: 254)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 580 486 614 236 202 351 255 518 147 185 93 136 11 730 543 501 577 160 281 355 426 756 664 621 628 575 585 765 => the sum is 11981 rather than 10990
Problem in row 2: 443 127 707 780 203 744 272 757 767 366 62 18 693 602 297 634 763 135 600 200 51 692 536 32 74 356 733 427 => the sum is 12071 rather than 10990
Problem in row 3: 210 704 187 700 336 538 39 152 716 150 727 10 599 116 620 684 651 514 66 138 402 81 286 177 153 3 292 41 => the sum is 9292 rather than 10990
Problem in row 4: 4 73 265 710 318 231 479 699 209 207 149 676 632 238 48 386 677 174 695 103 312 195 640 6 461 113 759 701 => the sum is 10160 rather than 10990
Problem in row 6: 254 248 115 252 24 725 16 450 326 619 91 594 464 444 669 539 189 164 737 769 5 491 487 529 592 753 726 42 => the sum is 11314 rather than 10990
Problem in row 7: 353 235 429 40 319 61 623 169 496 722 649 448 125 83 167 227 19 43 568 114 329 565 269 498 696 749 2 607 => the sum is 9605 rather than 10990
Problem in row 11: 291 436 691 714 175 734 562 98 636 670 519 736 192 618 188 453 228 590 161 642 471 622 773 201 245 758 431 194 => the sum is 13029 rather than 10990
Problem in row 19: 526 610 494 561 511 199 54 665 36 233 181 630 530 29 743 591 304 586 225 731 644 553 404 396 111 26 374 176 => the sum is 11123 rather than 10990
Problem in row 25: 78 229 130 94 256 33 652 244 414 578 746 571 219 520 300 251 558 415 515 637 748 301 306 15 178 172 672 503 => the sum is 10335 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 284 642 499 495 414 608 380 580 170 131 638 394 285 649 776 239 601 375  24 339 511 297 455 506  31 185 676 756
 250 781 405 689  84 292 219 137 620 708 773 668 205 626 624 341 229 661 672  58 226 379 387 650  41  74 715 662
 201  36 373 327 374 399 754 111 270 485 496  51 222 750 235 634 725 253 107 448 628 530 434  34 326 716 323 748
 654  83 173 619  50 542 450 260 411 114 691 782 690 611 295 600 445   6 280 460   3 640 149 502 674 441 211 154
 371 535 287 193 354 479  78 491 207 528 658 303 426 505 724 101 360 453 433 677 723  59 163  72 503 659  49 599
  14 532 161 477 194 581  85 567 262 569 236 427 116 537 348 746 395 152 315 228 709  55 656  13 714 538 536 246
 274  20 269 397 593 178 598 470 697 622 424 517 627  32 663 184  86 741 109 206 652 613 431 130 728 383 167 179
 726 225 572 286 381 124 446 670 189 673 307 579 737  94 521 508 197 377 175 461 583 698 489 268 333 102 202 338
 310 440  70 564 174  45 289  16 702 145  48 388 125 345 571 526 199 267 575 546 418 597 734 141   8 471 430 458
 305 198 140 276 468  89 722 522 743 420 527 551  46 129 143 717 543 486 529 112 279 457 519 592 480 554 247 196
 664 533 655 484 243 147 182 747 687 331 160 353 514 421 510 463 103 487 548 681 607 494 265 493 403 358 416 351
 393 639 779 515 128  71 126  22 684 469 210 132 118 525  53 261 156 589 648 763 344  37 300 705 366 688  43 332
 447 308  80 302 437 720 513 249 488 423 238 317 605 680 407 417 504 615  40 122 466 301 633 422 623 314 100 692
 683  93 587 618 429 443 432 244   9 259 713  79 636 576 363 220 707 120 762  33  30 153  27 765 311 732 370 596
  39 232  92  62 473  95 180 718 158 273  96 744 586 402 330 313 544 539 632 329 645 591 255 142 357 566 512 712
 553 369 209 356 306 452 105 367  77 347 355 582 390  38 376 127 299 614 465 497 117  26 768 769 585 577 531 733
 237 474 740 653 573 758 121 258 346 602 438 334 518 771 742  56 563 755 729 694 767 151  67 378 217 148 335 203
 745 372 409 778 557 240 119 612 135 359 271 133 322  91 541 736 312 277 472 382 408 349 669 343 282 410 507 159
 610 252 594  54 168 647 516 412 304 264 200 181   1 248 104 294  17 242 251 442  23 500  47 110 456 595 150   2
 772 451 753  15 766 398 775 777 169 459  44  19 475 256 221   5 760 686  82  10 165 113 616 701 320  88 604 490
 213 603 696 234  52 678 556 214 396 172  21 621 321 492 155 272 749 757 700 439 419 435 325 146 389 223 574 138
 115 177 291 482 342 609 644 139 316  29  35 444 425 384 340 428 123 254 188 561 278 192 549  90 157 761 498 552
 704 478 665 309 675 212 218 406 558  97 534 545 275 630 660 540 727  25 266 281 337 735 166 550  68  63 191  75
 216 187 231  61  76 774 730 136 509 233 392 721   7 501 590 666 336 555 324 195 682 454 176 657 671 385 391 134
 290 404 520 224 783 328 568 679 298 738 364 241 547  98   4 215 186  28 565 617  69 759 365 731 204 288 401 476
 523 706  60 667 693 230 400 483 711 695 764  12 651 352 164 646 770 362 559 739 293 257 719 413 635 108 699 641
 386 436 361 283 643 588 685 637 578  65 751 710 368  57  81 106 183 227  73 462 144 415  64 625 584 318 481  18
  11 784 319 570 560 263  99  66 296 780 606 162 752 190 449 629 171  87 467 208 464 703 562  42 524 245 631 350

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00602e+07us (= 10060.2ms, 10.0602s)
Satisfaction error: 14
Number of search iterations: 2788
Number of local moves: 2331 (including on plateau: 2287)
Number of local minimum: 20 (including on plateau: 284)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 284 642 499 495 414 608 380 580 170 131 638 394 285 649 776 239 601 375 24 339 511 297 455 506 31 185 676 756 => the sum is 11940 rather than 10990
Problem in row 2: 250 781 405 689 84 292 219 137 620 708 773 668 205 626 624 341 229 661 672 58 226 379 387 650 41 74 715 662 => the sum is 12176 rather than 10990
Problem in row 6: 14 532 161 477 194 581 85 567 262 569 236 427 116 537 348 746 395 152 315 228 709 55 656 13 714 538 536 246 => the sum is 10409 rather than 10990
Problem in row 8: 726 225 572 286 381 124 446 670 189 673 307 579 737 94 521 508 197 377 175 461 583 698 489 268 333 102 202 338 => the sum is 11261 rather than 10990
Problem in row 9: 310 440 70 564 174 45 289 16 702 145 48 388 125 345 571 526 199 267 575 546 418 597 734 141 8 471 430 458 => the sum is 9602 rather than 10990
Problem in row 11: 664 533 655 484 243 147 182 747 687 331 160 353 514 421 510 463 103 487 548 681 607 494 265 493 403 358 416 351 => the sum is 12300 rather than 10990
Problem in row 12: 393 639 779 515 128 71 126 22 684 469 210 132 118 525 53 261 156 589 648 763 344 37 300 705 366 688 43 332 => the sum is 10096 rather than 10990
Problem in row 13: 447 308 80 302 437 720 513 249 488 423 238 317 605 680 407 417 504 615 40 122 466 301 633 422 623 314 100 692 => the sum is 11463 rather than 10990
Problem in row 15: 39 232 92 62 473 95 180 718 158 273 96 744 586 402 330 313 544 539 632 329 645 591 255 142 357 566 512 712 => the sum is 10617 rather than 10990
Problem in row 17: 237 474 740 653 573 758 121 258 346 602 438 334 518 771 742 56 563 755 729 694 767 151 67 378 217 148 335 203 => the sum is 12628 rather than 10990
Problem in row 19: 610 252 594 54 168 647 516 412 304 264 200 181 1 248 104 294 17 242 251 442 23 500 47 110 456 595 150 2 => the sum is 7684 rather than 10990
Problem in row 22: 115 177 291 482 342 609 644 139 316 29 35 444 425 384 340 428 123 254 188 561 278 192 549 90 157 761 498 552 => the sum is 9403 rather than 10990
Problem in row 26: 523 706 60 667 693 230 400 483 711 695 764 12 651 352 164 646 770 362 559 739 293 257 719 413 635 108 699 641 => the sum is 13952 rather than 10990
Problem in row 27: 386 436 361 283 643 588 685 637 578 65 751 710 368 57 81 106 183 227 73 462 144 415 64 625 584 318 481 18 => the sum is 10329 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 106 750 590 644 102 536  98 208 173 671  34 265 242 599 425 441 669   1 240 767 737 149 307 625 205 171 463 772
 407 114 315 758 608 353  29 784  86 708 453 657 294 107 228 596 202 207 183 196 661 697  18 663 543 123 278 722
 378 427 600 735 649 232 229 606 435 169  39 598 283 532 151 177 622  67   2 198   9 140 579 420 248 713 421 469
 349 680  49 560 433  51 313 145 256 267 255 482 344 451  72 557 589 748 186 553 577 223 215  28 739 328 760 780
  47 323 602 685 727  94 398 754 753 112 497 131 318  73 673 578  15 454 591 231 273 706  54 633  36 709 461  62
 554 538  65 385 224 762 192 678 321  23 141 184 158 520 607 675   5 692 203 551 383 656 683 162 534 358 135 601
 263 428  32 609 479 523 160 530 119 306 182 272 176 690 155 401 390 338 244 695 110 566 613 206 161 730 689 222
 623 334 732 354  97 178 449 324 556 542 303  87 392 498 243 386 172 698 199  60 513 276 696 395 653 181 701 348
 491 610 292  30 185 552 654 216  46 743  17 759 741 630 448   8  81 128 740 544 483  43 287 580 399 548 362 373
 729 725 279 356 665 764 605 655 688  68 714 660  95 257  57  25 404 129 561 588 571  71 254 470 191 113 275  21
 531 634 583  35 393 537  11 138 201 684 480 627 188 631 180 311 776 749 474 568 742 763 604 756 319  12 493 506
 284 397 274 485 109 492 778 495  44 431 111 175 450 213 508 618 444 437 440 755 253 472 724 281 679 476 125  40
 402 528 424 505 419 500 346 371 510 443 388 459 300 340 455 403 331 336 364   7 343 394 372 317 389 382 359 603
 250 144 452 352 418 517 416 486 494 691 375 417 567 674 230 473 545 124 363 430 350 357 462 391 345 467 150  50
 504 738 387  13 295  14 432 619 101 247 286 147 529 415 337 115 617 290 527 164 120 225  33 503  41 296 468 104
 301 514 475 446 293 246 413 269 490 478 768 288 384 298 366 489 720 411 341 245 347 522 314 259 227 309 400 377
 726  83 614 118  55 333 710  66 549 322 723 218 339  77 592 220 626 406  90 569 465 587 282  82 572 285 502 779
 154 647 648 370 667 773 719 316 239  85 159 190 646  93 704  10 304 624 438   3 414 289 360 305 736 308 325 464
 408 217 731 645 745 396 550 379 126 516 221 456 139   6 540 652  22  45 700 291 621 783 575 487 496  80 100  63
  84 499 442 558 380  48 518  79 597 715 616 130 174 422 574 659 668 326 214 565 209 593 271  75 410 555 132 477
 501 117 405 620 595 426  37 204  27 434 547 774 559 330 703 471 262 163 189 662 335 751  53 782 628 488 757 521
 761 539 409  89 658 642  70 563 637 187 238 734 718 733 165 312 302 327 168 152 320 211 447 137 535 677  26 233
 570 179 270 297 641 329 193   4 716 507 771 369 629 133 562 268 148 635 519 195 640 460  31 711 108 526 770 615
 728 105 241 670  96 585 693 466 699 584 694 747 564 611 765 121 127 777 681 721  92 261 676 351 374 511 705 439
  52 166 672  78 299 146  42 156 781  58 586 546 376 651 582 766 632 251 636  74 153 116 576 581 412 260 573 769
 702 264  56 194 234 361 484 650 512  99 197 170 682 515  76 525 717 712 310 638 237  91 429 210 167  38  61  20
  69  24 332 122 143 541 744 142  88 533 509 236 445 355 458 481 235 666 612 342 664 524 436 157 643 752 280 457
  16 266  19 277 381  59 707 687 746 367 686 212 258 136 134 252 365 249 775 226 368  64 639 423 200 594 219 103

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00604e+07us (= 10060.4ms, 10.0604s)
Satisfaction error: 10
Number of search iterations: 2994
Number of local moves: 2489 (including on plateau: 2444)
Number of local minimum: 16 (including on plateau: 308)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 378 427 600 735 649 232 229 606 435 169 39 598 283 532 151 177 622 67 2 198 9 140 579 420 248 713 421 469 => the sum is 10128 rather than 10990
Problem in row 7: 263 428 32 609 479 523 160 530 119 306 182 272 176 690 155 401 390 338 244 695 110 566 613 206 161 730 689 222 => the sum is 10289 rather than 10990
Problem in row 11: 531 634 583 35 393 537 11 138 201 684 480 627 188 631 180 311 776 749 474 568 742 763 604 756 319 12 493 506 => the sum is 12926 rather than 10990
Problem in row 15: 504 738 387 13 295 14 432 619 101 247 286 147 529 415 337 115 617 290 527 164 120 225 33 503 41 296 468 104 => the sum is 8567 rather than 10990
Problem in row 21: 501 117 405 620 595 426 37 204 27 434 547 774 559 330 703 471 262 163 189 662 335 751 53 782 628 488 757 521 => the sum is 12341 rather than 10990
Problem in row 23: 570 179 270 297 641 329 193 4 716 507 771 369 629 133 562 268 148 635 519 195 640 460 31 711 108 526 770 615 => the sum is 11796 rather than 10990
Problem in row 24: 728 105 241 670 96 585 693 466 699 584 694 747 564 611 765 121 127 777 681 721 92 261 676 351 374 511 705 439 => the sum is 14084 rather than 10990
Problem in row 26: 702 264 56 194 234 361 484 650 512 99 197 170 682 515 76 525 717 712 310 638 237 91 429 210 167 38 61 20 => the sum is 9351 rather than 10990
Problem in row 28: 16 266 19 277 381 59 707 687 746 367 686 212 258 136 134 252 365 249 775 226 368 64 639 423 200 594 219 103 => the sum is 9428 rather than 10990
Problem in diagonal 0: 106 114 600 560 727 762 160 324 46 68 480 175 300 674 337 489 626 624 700 565 335 211 31 351 412 38 280 103 => the sum is 10198 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 782 187 133  60 115 235 221 658 721 204 671 103 284  33 255 178  91 527 567 647 534 740 733 544  14 594 408 751
 624 750 317 587 619 560 276 459 113 138 522 552 639 660 589  70 189  49 456 142 199 184 207 752 248 263 748 293
  35 239 541 236 247 710 761 505 512 390 154 182  61  83 704 774 767 648 485 167  55 496 463  85 201 682   1 414
 129 686 215 703  53 253 730 282 503 198 699 583 197 222 486 668 515 763 551  39 169 214 281 471 701  27 553  99
  62 382 673 672 666 528 525 713  46 299 342 241 654 313 642  82 438 579 166 179 715 664 210 213  13 295  93 585
 593 634 568 535 245 608 637 734  30 191 645  21 697  69 202 319 604 716 599 407 158  79  71 475 447 205 271 230
 547 303  45 623 626 439 116 539 468 137 170 388 260 521 500 107  37  26 193 778 613 633 707 208 584 513 529 380
 764 461 586 501 331 131 736 591 190 743 773 680 536 598 150 577 533 120 404 250 554 483  56 620 478 749 695 592
 298 268 110 356 466 412 145 267 288 739  73  76 653 231 566 765 569  88 318 562 242 451 629 300 164  17 523 719
 698 195 183 275  86 270 609 714 232 519 441 546 244 448 118   7 175 738 638 518 756 203 243 611 264 574 426 259
 256 548 117 229 125  58  24 123 706 488 549 725 467 341  75 287 696 484 171 605 617 550 481 602 506  64 607 489
 636 621 269  78 394 355 181 212 530  25 480 457 709 155 700 711 421 140 328 226 559 630 490 157 323 217 443 543
  80 679 261 753  34 531 431  81 188 646 172 109 446 327 434 474 228 297  15 661 479 415  43 755 720 161 141 285
 436 423 370 476 454 416 393 432 352 374 410 409 389 373 442 427 450 455 358 424 401 121 381 349 372 361 378 364
 392 398 397 419 348 435 314 449 737 383 351 377 395 340 399 165 362 685  89 779 376 365 353  38 411 338 386 509
 641 563 440 722 708 354 347 379  40 206 238 174 396 177 333 359 336 310 674 510 343 418 729 493 375 307 366  52
 369 332 766 316 135  23 578 339 458 337   8 330 728 473 160 570 320 220 735 669 597 273 385 502  54 294 499 520
 444 595 631 780 308 615 283 234 776 209 252 580 136 723 564 148 325 292  29 368 128 326 200 126 428 628 185 677
 360   3 537 462 683 311 403 159 357 249 558 156 146 687 775 237 614 406 119 132 667 507  94 429 571 430 538 400
 670 460 783 291 433 690 693 635 676 675 335 625 279  59 296 194 218  67 262  10  31 747 561  44 656 100 277 223
 149  96 367 180 371 781 130 225 745 134 724 649 405 717 346 111 726 122 272 301 168 681 274 306  42 350 492 258
 324 254 511 290 453  22 219 144 322 689 627 482 590 227 742 211 705 391 688 153 770 124 572 304 758 727 644  16
 224 784  12 464 173 147  48  50 384 612  74 246 233 769 387 662  92 663 176 445 286 576 257 575 504  95  32 600
 526 278 465  97 524 678  19 162 514 542 746 657 108 651   6 556 240 104 540 196 588 151 684 102 718 601 216 321
 186 127 692 114 532 744 741 768 557 777 139 329 312 422 345 508  87 305  28 555 437  47 413 759  51 643  63 309
 497 143  77   5 771 491 334 498 420 477 251 344 565 652  36 622 495 610 655  18 425  68 712 315 616 596 650  90
 266  65 659 603 573  41 402  57 105 417   4 606   9 618 632 731 691 640 702 762 112 760 289  98 302 494  72 280
   2 516 265 163 517 152 694 581  20 192 582 363 452 101 106 470  66 545 772 487  11  84 472 757 469 665 754 732

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0003e+07us (= 10003ms, 10.003s)
Wall-clock time (full program): 1.00612e+07us (= 10061.2ms, 10.0612s)
Satisfaction error: 9
Number of search iterations: 2651
Number of local moves: 2229 (including on plateau: 2181)
Number of local minimum: 18 (including on plateau: 258)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 624 750 317 587 619 560 276 459 113 138 522 552 639 660 589 70 189 49 456 142 199 184 207 752 248 263 748 293 => the sum is 11205 rather than 10990
Problem in row 3: 35 239 541 236 247 710 761 505 512 390 154 182 61 83 704 774 767 648 485 167 55 496 463 85 201 682 1 414 => the sum is 10598 rather than 10990
Problem in row 8: 764 461 586 501 331 131 736 591 190 743 773 680 536 598 150 577 533 120 404 250 554 483 56 620 478 749 695 592 => the sum is 13882 rather than 10990
Problem in row 9: 298 268 110 356 466 412 145 267 288 739 73 76 653 231 566 765 569 88 318 562 242 451 629 300 164 17 523 719 => the sum is 10295 rather than 10990
Problem in row 13: 80 679 261 753 34 531 431 81 188 646 172 109 446 327 434 474 228 297 15 661 479 415 43 755 720 161 141 285 => the sum is 9846 rather than 10990
Problem in row 21: 149 96 367 180 371 781 130 225 745 134 724 649 405 717 346 111 726 122 272 301 168 681 274 306 42 350 492 258 => the sum is 10122 rather than 10990
Problem in row 22: 324 254 511 290 453 22 219 144 322 689 627 482 590 227 742 211 705 391 688 153 770 124 572 304 758 727 644 16 => the sum is 11959 rather than 10990
Problem in row 23: 224 784 12 464 173 147 48 50 384 612 74 246 233 769 387 662 92 663 176 445 286 576 257 575 504 95 32 600 => the sum is 9570 rather than 10990
Problem in row 26: 497 143 77 5 771 491 334 498 420 477 251 344 565 652 36 622 495 610 655 18 425 68 712 315 616 596 650 90 => the sum is 11433 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 754 123 568 180 658 277 548 387  50 287 771  25 636 366 196  44 135 531 758 288 713 534 243 289 369 377 617 738
  93  72 682 165  26 267 330  64 114 266 547 719  81 310 173 211  21 554  39 242 219 148 663 529 280 278 748 720
 445 414 705  15 701 115 190 145 332 295 260 603  92 763 708 179 747 187 158 157  60 484 576 725 271 227 730 706
 481 520 679 784 750 109 209 601 164 130 444 102 542 215 632 342 592  20 172 497 100 305 716 562 652  62 263 345
 608 645 463 555 297 273 755  46 605 314 648 668 676 511 530 149 726 429 714  67 139 235 309 657 489 311 465  52
 528  95 606 328 174  80 247 351 506 770 543 610 198 274 138 346 666 742  37 573 624 622 599  54 337 773 745 607
 735 182 626 778 616 252 275 255  98 635  22 643 655 503 468 751 698  27 191 426 286 250 460 488 664  82  85 651
 570 292 588  55 634 111 581 598 653 360 229 230 457 609 188 317 228  71 432 732 559 516 152 143 214 564 284 623
 689 466 340 717   5 611  91 509 644 408 486 438 752 140 533  99 535 544 101 551 665 727 272 678 106 553 163 285
 204 532 256 675 471  41 456 753 224 398 415 514 777  86 194 264 685 715  96 388  78 283 176 473   8 593 621 614
 217 470 184 105 300 697 207 396  94 721 504 492 728 495 709 223 104 527  18 245 674 324 519 630 221  57 437 692
 656 712 761 116 127 502 661 780 269  36 638 192 462 129  19  59 418 647 577 769 319 557 718  45  69 681 451   6
 461 430 482 420 493 170  24 494 402 433 381 395 459 423 413 422 453 446 436 475 431 299 391 424 390 428 447  68
 404 435  73 358  56 375  29 399 354 540 244 739 582 347 350 491 583  97 586 412 440  43 304 186 734 687 552 590
 394 385 406 382 384 405 361 359 722 401 380 357 373 327 341 326 409 393 478 434 407 383 368 364 356 389 362 344
  47 159 374 765 253 442 690 521 443  49 584 662 339 683 301 767 649 338 177 259 501 637 134 195  31 279 550 161
 496 782 160 392 549 386 258 707  74 225  48 348 231 464 397 513 124 757 142 108  75 704 766 303 556 403 523 499
 169 580 410 233 699 563 122 640 249 419 254 193  28 294 120 538 150 291 650 642 733 477 490 525 262 612 331 316
 202 226 141 282 783   2 724 128 693 524 167 125 147 349 669 485 306 308 536 695 472 336 680 539 561 183 574 153
 667 363 449 760 600 589 512  23 566 688  11 321 290 251 119 737 222 121 439 238 378 537 199 232 691 448 241 298
 268 659 711 507 343 474 639 208 372 322 239 117 629 654 205  42 132 151 686 133 615 400  30 764 508 565 113  61
 240 236 370 585 103 569 220  38 684  33 696 313  63 168 500  58 144 237  10 441 302 112 578 740 166 261 604 694
 515 591 334 613 312 672 781 579 185 498 218 458 281 510  40 560  12 421 572 710   1 210 270 318 602 216  84 427
 178  66  89 131 137 768 619 703 171 594 154  70 541 595 772 731 476 631 759 197  65 454 587 126  83 741 136 416
 367 749 201 156 505 627 522 265   9 320 571 365 189  53 633 518 411 677 702 673 567 417   4 155 723  51 379 181
  79 700  32 335 110 480 118  88 762 107 746 628  77 596 353 625 467 333 670   7 774 246 487 325 729  35 203  76
 200  90  87 146 425 558 352 293 775 546 483 646 376 234 744 450 371 620 257 618 276 736   3 315 756 355 248 212
 323  16 213 452 479 575 469 660 776 671 307  17 329 641 545 743 526 175 597  13 517  14 296 206 162 779  34 455

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00028e+07us (= 10002.8ms, 10.0028s)
Wall-clock time (full program): 1.00611e+07us (= 10061.1ms, 10.0611s)
Satisfaction error: 11
Number of search iterations: 2361
Number of local moves: 1964 (including on plateau: 1918)
Number of local minimum: 8 (including on plateau: 240)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 754 123 568 180 658 277 548 387 50 287 771 25 636 366 196 44 135 531 758 288 713 534 243 289 369 377 617 738 => the sum is 11462 rather than 10990
Problem in row 2: 93 72 682 165 26 267 330 64 114 266 547 719 81 310 173 211 21 554 39 242 219 148 663 529 280 278 748 720 => the sum is 8561 rather than 10990
Problem in row 5: 608 645 463 555 297 273 755 46 605 314 648 668 676 511 530 149 726 429 714 67 139 235 309 657 489 311 465 52 => the sum is 12336 rather than 10990
Problem in row 6: 528 95 606 328 174 80 247 351 506 770 543 610 198 274 138 346 666 742 37 573 624 622 599 54 337 773 745 607 => the sum is 12173 rather than 10990
Problem in row 7: 735 182 626 778 616 252 275 255 98 635 22 643 655 503 468 751 698 27 191 426 286 250 460 488 664 82 85 651 => the sum is 11802 rather than 10990
Problem in row 9: 689 466 340 717 5 611 91 509 644 408 486 438 752 140 533 99 535 544 101 551 665 727 272 678 106 553 163 285 => the sum is 12108 rather than 10990
Problem in row 12: 656 712 761 116 127 502 661 780 269 36 638 192 462 129 19 59 418 647 577 769 319 557 718 45 69 681 451 6 => the sum is 11376 rather than 10990
Problem in row 21: 268 659 711 507 343 474 639 208 372 322 239 117 629 654 205 42 132 151 686 133 615 400 30 764 508 565 113 61 => the sum is 10547 rather than 10990
Problem in row 22: 240 236 370 585 103 569 220 38 684 33 696 313 63 168 500 58 144 237 10 441 302 112 578 740 166 261 604 694 => the sum is 9165 rather than 10990
Problem in row 26: 79 700 32 335 110 480 118 88 762 107 746 628 77 596 353 625 467 333 670 7 774 246 487 325 729 35 203 76 => the sum is 10188 rather than 10990
Problem in row 27: 200 90 87 146 425 558 352 293 775 546 483 646 376 234 744 450 371 620 257 618 276 736 3 315 756 355 248 212 => the sum is 11172 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 783 781 271 276   5 457 438 649 241 246 688  35 636  73 600 314 766 728 220 660 251 114 768 101  54  47 513 275
 658 748 662 639 724 501 131 505 190 181 270 244 488 200 656 559 432  17 566 390 218 325 482 286  87 535 154 142
  62 374 729  81 124 680 170 120 718 483  90 236 610 722 308 586  30 320  37  88 733 383 431 623 289 337 104 123
 581 144 704 716 595 721  42 503 522 163  71 602 601  33  70 121  86 411 607 459 400 528  68 281 679 762  72 448
 717 115 346 611 669 294 771 738 167 429 638 494 627 310 759 677 341 562 339 605 664 761 297   2 133  76 675 746
 546 247 561 198 176  89 428  12 575 705 197 574 702 158 531 474 671 481 699  74 701 731  50 202 116  53 747 292
 264 136 515 609 608 207 613 782 185 222 130 495 256 689 470 362 106 119 352 301 764 519 165 584 576 603 280  78
  56 511 361 215 755 250 272 551 333 712 399 317 205 108 687 269 210 630 444 152 418 647  22  58 672 668 293 775
 326 549 464 510 523 537 556 323 539 372  84  95  59 615 693 560  28  69 440 555 423 273 234 571 760  45 485 302
 585 435  98   7 277 227 257 651 278  26  43 686 147 336 252 135 711 645 166 469 295   9 178 557 554 633  83 328
 412 524 616 506 538 512  49  67  79 334 453 184 714 490  51  38 179 492 767 757 606 214 159 667 311 118 573 580
 517 279 164 427 653  63 525   1 527 240 496 344  31 696  13 670 758  44 500 543 424 100 625 763 299 772 368 148
 107 624 315 407 462 451 475 224  10 676 434 780 445  65 533 450 397 398 112 353 139 737 416 439 697 291  19 534
 723 456 379 348 421 466 354 160 489 239 340 468 409 532 433 237 319 284 572  27 545 413 415 209 420 719 161 452
 351 436 402 403  25 404 321 401 426 756 460 395 377 425 393 553 391 458 387 305 338 392 373 356 355 405 306 396
 143 394 350 342 365 359 358 331 288 242 370 375 343 626 324 327 296 330 332 380 388 588 750 335 369 736 357 592
 208 558 637 493 685 285 720 449 153  32 102 103 129 366 504  77 290 769 591 542 441 520 640  29 479 593 734 648
 376 303 694 751 265  36   3 641 622 454 364 632 514 128  75 652 367 287 544 268 274 260 565 713 598 226  15 363
 455 180 110 707 304  61 507 213 508 347 596 698  23 726 629 526 614 437 318 194  92 486 659 255 635 509 754 212
 529 650 111 725  34 753  94 266 661 604 137 316  24 577 706 465 206 784  55 232 307   8 684 473 132 502 579 385
 248 690 254 122 345 583 360 262 113 589 745 541 243 569 177 233 631 186 188 105 258 309 162 682 478 776 674 467
 765  99  21 235 146 657 620 145 644   4 715 735 770 312 109 384 548 204 126 732 245 201 471  39 238  11 700 156
 263 463 172 189 155 567 749 540 187 744 599 191 371 480 282 564 621  91 655 203  66 253 175 443 221 406 582 491
 192  96 472 183 774 777 678 521 695 743 417   6 259 225 229 430 552 618 228 692  40 378 727 643 300 329 634 570
 691 298  82 117 174 617 563 681  48 499 568 773 498 382 740 349 151 536 141 219 497 195 261 673  80 487 477 193
  52  57 313 547 211 171 703 442 386  18 140 322 710 708 125 168 518 169 666 683 590 646 619 476 414  93 389 654
 283 709 741  14 461 138  16  60 628 267 779 150 550  20 484 223 730 182 196 408 642 578 530 149 597 173  46 230
  97 134 446 612 516 127 217 752 778 663 665 199 249 419 157 587  41 739 742 594 231 422  64 381 447  85 216 410

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00598e+07us (= 10059.8ms, 10.0598s)
Satisfaction error: 10
Number of search iterations: 2758
Number of local moves: 2309 (including on plateau: 2262)
Number of local minimum: 15 (including on plateau: 279)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 62 374 729 81 124 680 170 120 718 483 90 236 610 722 308 586 30 320 37 88 733 383 431 623 289 337 104 123 => the sum is 9591 rather than 10990
Problem in row 5: 717 115 346 611 669 294 771 738 167 429 638 494 627 310 759 677 341 562 339 605 664 761 297 2 133 76 675 746 => the sum is 13563 rather than 10990
Problem in row 10: 585 435 98 7 277 227 257 651 278 26 43 686 147 336 252 135 711 645 166 469 295 9 178 557 554 633 83 328 => the sum is 9068 rather than 10990
Problem in row 17: 208 558 637 493 685 285 720 449 153 32 102 103 129 366 504 77 290 769 591 542 441 520 640 29 479 593 734 648 => the sum is 11777 rather than 10990
Problem in row 19: 455 180 110 707 304 61 507 213 508 347 596 698 23 726 629 526 614 437 318 194 92 486 659 255 635 509 754 212 => the sum is 11755 rather than 10990
Problem in row 20: 529 650 111 725 34 753 94 266 661 604 137 316 24 577 706 465 206 784 55 232 307 8 684 473 132 502 579 385 => the sum is 10999 rather than 10990
Problem in row 22: 765 99 21 235 146 657 620 145 644 4 715 735 770 312 109 384 548 204 126 732 245 201 471 39 238 11 700 156 => the sum is 10032 rather than 10990
Problem in row 23: 263 463 172 189 155 567 749 540 187 744 599 191 371 480 282 564 621 91 655 203 66 253 175 443 221 406 582 491 => the sum is 10723 rather than 10990
Problem in row 24: 192 96 472 183 774 777 678 521 695 743 417 6 259 225 229 430 552 618 228 692 40 378 727 643 300 329 634 570 => the sum is 12408 rather than 10990
Problem in row 27: 283 709 741 14 461 138 16 60 628 267 779 150 550 20 484 223 730 182 196 408 642 578 530 149 597 173 46 230 => the sum is 9984 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 781 579 230 462 202 175 730 677 524 692 412 241  52 103  99 311 529 316 750 112 128 172 550 150 533 666  61 753
 266 766 762 488 335 708 226 256 716  35  32 583 431 206  68 663 313 134 336 570 521 243 420 443 763 223 417  66
 721 585 168 427   8 344 644 630 378 222 629 722 776 541 191 129 205 591 105 687 632 515 400 240 410 684 139 101
 731 707 115 683 352  64 752 625 693 705  41 671 374 424 433 140 568 265 294  16   4 109 255 680 662  77  57 493
 655 317 194  44 653 163  93 576  21 327 155  70 621 780 248 751 125 113 246 401 319 522 758 675 371 688 386 718
 607 315 564 403 242 343  53 498 572 143 151 734 562 124 252  11  56 713 447 611 131 212 626 535 567 641 478 399
 628 599 235 747 592 490 390  73 652  81 159  12 303 537 283 354 755 136 578 477 770 606 732 602 238 724  40 203
 499 784 654 618 307 552 331 554 108 149 181 491 717 117  42  18 463 382 586 548 598 224 372 176  43 520 351 605
 146 441  30 395 636 597 454 310 556 553 325 769 213   2 466 339 703  71 216 516 269 757  27 764 290 232 353 560
 444 295 610 582 398 138 631 258 778 525 609 284 514  15 767 468 558 768 210 142 184 196 306 472  67 512 249  10
 438 546 281  39 465 204 504 207 643 486 508 247  51 435 531 510 496 501 476 458  48 487 208 695 519 445   5 557
  55  92 523 414 489  47 775  69 473 418 305 484  59 701 622 719 528 513 748 218 469 561 481  89  95 759 177 107
 209 540 648 106  75 183 608 156 169 287 547 460 449 727 691 211 396 616 577  90 651 436 706 419 485  36 394 118
 239 174 271 153 494 285 135 157 320 251 667  38 180 437 413 594 637 580 220 358 384 244 563 502 147 411 650 657
 397 190 387 393 348 383 392 116 342 377 388 405 408 332 362 659 340 381 672 385 359 357 423 421 360 296 415 702
 379 364 389 365 471 446 536 363  17 375 532 361 329 530 312 646  65 373 324  79 619 337 367 326 322 308 694 761
 333 451 233 267 723 639  34 450 749 640 318 199 746 179 245 402 345 132 595 479  33  50  87 366 698 733 263 601
 298  97 603 234 782 349 459 137 219 735 346 545 690 453 231 217 165 300 712 743 604  24  80 259 661 185 760 102
 590 126  63 738 133 685 350 720 301 262 726 120 571  19 633  98 686  25 264 664 497 328 148 201 638 507 442 455
 141 527 543 673 121 555 678 380 250  60 229 612 356 765 700 197 656 669 668 270 728 725 286 293 737  85 429 457
 100 649 461 779 164  37 214 741 188 617 699  88 289 774 697 475 158 623 261 670 186 614 237 145  78 434 355 257
 228 704 783 448 368 503 160 276 253 369  84 432 170 275 739 518 277 467 192 282 549 198 575 511  23 119 772 715
 709 122 391  58 409 495 440  20 534 426 729 506 658 642 569 161 647 167 144 676 274 254  86  54 596 330 613 280
 509  31 710 754 130  26 321 573 587 581 674 236 565 260   6 539 195  82 304 193 430 542 645  83 635 279 347 299
 544 302 470  91 526 492 162 559 104   9 574 225 323 173 505 634   3 742 439 127 600 740 480 538 114 589 500 425
  94 309  96 288 679 620 278 756  46 773 483 660 187  14 428 593 744 551  29 406 111 681 416 627 464  72 584   1
 200 110 154 189 273 696 517 777 456 714 272 171 334 689 291 588 370 297 221 338 665 452 682  13 182  28 745 566
  49 268 422 152 615 771 123  76 341 178 215 624  62 736 166  45   7 482 376 474 227 404  74 711 292 407 314  22

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00584e+07us (= 10058.4ms, 10.0584s)
Satisfaction error: 6
Number of search iterations: 3557
Number of local moves: 2988 (including on plateau: 2937)
Number of local minimum: 31 (including on plateau: 350)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 721 585 168 427 8 344 644 630 378 222 629 722 776 541 191 129 205 591 105 687 632 515 400 240 410 684 139 101 => the sum is 11824 rather than 10990
Problem in row 7: 628 599 235 747 592 490 390 73 652 81 159 12 303 537 283 354 755 136 578 477 770 606 732 602 238 724 40 203 => the sum is 11996 rather than 10990
Problem in row 14: 239 174 271 153 494 285 135 157 320 251 667 38 180 437 413 594 637 580 220 358 384 244 563 502 147 411 650 657 => the sum is 10161 rather than 10990
Problem in row 20: 141 527 543 673 121 555 678 380 250 60 229 612 356 765 700 197 656 669 668 270 728 725 286 293 737 85 429 457 => the sum is 12790 rather than 10990
Problem in row 24: 509 31 710 754 130 26 321 573 587 581 674 236 565 260 6 539 195 82 304 193 430 542 645 83 635 279 347 299 => the sum is 10536 rather than 10990
Problem in row 28: 49 268 422 152 615 771 123 76 341 178 215 624 62 736 166 45 7 482 376 474 227 404 74 711 292 407 314 22 => the sum is 8633 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 719 518 275 454 643 654  45 763 627 196 555 317 179 372 712 224 563 132 129 347 537 467 543 570 185 278  71 755
 635 758 323 754 325 346 686 470 428 177 351 406 710 274 189 125 215   9  59 430 725 675 410 310 658 144 732 373
 299 461 724  11 652 402 634 352 699  14   4  74 362  61 263 483 374   2 123 578 199 520 172 440 225 651 149 691
 589 164 320 689 157 535 277 569  23 623 112 122 671  80 419 540 618 673 696 175  46 119 573 450 680 762 255  53
 105 326 494 391 668 549 557 254 649 753 556 205 368 747 127 152 466  86 666 655  87 690  43 192 539  33 397 235
 327 530  76 626  44  79 220 552 665 542 600  56 356 154 617  32 258 583 359 370 260 636 616 265 633 681 553 300
 113 171 744 289 544 489 603 335 187  93  38 336 316 660 257 491 477 720 223 273 723 432 669 667 162 118 722 138
 284 631 238 411 496  90 745 599 546 261 611 639 365 168  30 592  60 502 738 182 541  96 245 146 160 604 439 571
 226 295 473 153 469 133 465  37 545 492 775 735 178  63 641 709  89  28 446 566  99 748 474 204 471 140 692 644
 309 721 586  52  12 781 102 101   8 509 677 498 249 577 527 591 126 702 512 772 766  21 131  98 151 345 504 562
 538 108  83 564 445 165 217 567  88 778 510  67  57 456  62 311 378 524  58 782 452 259 462 438 767 715 661 468
 322 197 523 516 304 201 485 229 743 663  82 486 694 506 337 501 444 442 241  10 232 301 285 488 104 332 756 209
 757  97 650 714 364 704 186  22 267 632 193 601 321 576  73 413  75 560 145  29 130 587 283 705 579 330 256 741
 106 398 388 619 293 376 408 457 366  13 464 401 698 393 407 418 629  55 433 685 377 449 453 342 390 348 280 344
 415 547 369 394 389 479 386 385 350 427 380 382 339 403 399 349 381 392 383 429 412 416 396 417 358 341 319 353
 503 659  65 292 212 200 683 169 343 707 625 315 312 443 287 384 645 269 318 190 236 657  20 751  18 664 628 395
 678 526 207 306 534 493 514  16 297 308 121 328 490 497 239 202 437 574 551 109 640 379 730 266 294 360 281 613
 532 183 174 184 484 495 141   3 565 426 375 233 508 615 776  25 610 216 515 231 276 115 621 742 331 107  91 313
 561 695 221 697 572 750 480 458 279 181 367 597 194 357 584 191   5 525  84 593 302 230 630 580 729 761 607 166
  39 354 214 460  81 270 371 598 262 213 240 128 676 602 195 206 434 594 771 218 700 511 387  49 716 517 653 531
 679 459 612 243 100 361 777 784 768 120 528 522 487 622 448 662 687 656 463  36 234 420 736 173 404 290 519 148
 435 114 447 156 582 606 247 605 423 340 760 717  78 296 711 737 718 554 624 405  24 159 476 124 585 478  77 228
 227 334 139 291 752 143 307 264 252 431  40 116 575 198 536  69 746 590   7 529 727  27 155 210 248 588 363 500
  47 219 779 513 135 581 103 117 136 436 703 701 670 222 609 693 211 303 682 731 422  68   1 637 764 305  42 424
 620  19 713 137  31 734  64 475 167 647 203 481 188 170 314 774 163 414 251 568 505 329 749 298 142 242 472 706
 728 672 150  48 726  70 548 441 507 558  15 769 271 674  41 740 521 272 642 147 596 765 286 614  66  50 208 409
 180  51 759 246 288 250   6 773 708  95 421 648 425 770 451  94 499 158 338 400 608 646 333 638 559 324 237  85
  17 783 244 780 688  54 733 595  92 355 684 110 253  34 739 282 161 455 533 550 134 268 111 176  72 482  26  35

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00611e+07us (= 10061.1ms, 10.0611s)
Satisfaction error: 14
Number of search iterations: 2428
Number of local moves: 2028 (including on plateau: 1985)
Number of local minimum: 18 (including on plateau: 249)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 719 518 275 454 643 654 45 763 627 196 555 317 179 372 712 224 563 132 129 347 537 467 543 570 185 278 71 755 => the sum is 11830 rather than 10990
Problem in row 2: 635 758 323 754 325 346 686 470 428 177 351 406 710 274 189 125 215 9 59 430 725 675 410 310 658 144 732 373 => the sum is 11697 rather than 10990
Problem in row 3: 299 461 724 11 652 402 634 352 699 14 4 74 362 61 263 483 374 2 123 578 199 520 172 440 225 651 149 691 => the sum is 9619 rather than 10990
Problem in row 11: 538 108 83 564 445 165 217 567 88 778 510 67 57 456 62 311 378 524 58 782 452 259 462 438 767 715 661 468 => the sum is 10980 rather than 10990
Problem in row 12: 322 197 523 516 304 201 485 229 743 663 82 486 694 506 337 501 444 442 241 10 232 301 285 488 104 332 756 209 => the sum is 10633 rather than 10990
Problem in row 18: 532 183 174 184 484 495 141 3 565 426 375 233 508 615 776 25 610 216 515 231 276 115 621 742 331 107 91 313 => the sum is 9887 rather than 10990
Problem in row 19: 561 695 221 697 572 750 480 458 279 181 367 597 194 357 584 191 5 525 84 593 302 230 630 580 729 761 607 166 => the sum is 12396 rather than 10990
Problem in row 21: 679 459 612 243 100 361 777 784 768 120 528 522 487 622 448 662 687 656 463 36 234 420 736 173 404 290 519 148 => the sum is 12938 rather than 10990
Problem in row 22: 435 114 447 156 582 606 247 605 423 340 760 717 78 296 711 737 718 554 624 405 24 159 476 124 585 478 77 228 => the sum is 11706 rather than 10990
Problem in row 23: 227 334 139 291 752 143 307 264 252 431 40 116 575 198 536 69 746 590 7 529 727 27 155 210 248 588 363 500 => the sum is 9364 rather than 10990
Problem in row 24: 47 219 779 513 135 581 103 117 136 436 703 701 670 222 609 693 211 303 682 731 422 68 1 637 764 305 42 424 => the sum is 11254 rather than 10990
Problem in row 25: 620 19 713 137 31 734 64 475 167 647 203 481 188 170 314 774 163 414 251 568 505 329 749 298 142 242 472 706 => the sum is 10576 rather than 10990
Problem in row 26: 728 672 150 48 726 70 548 441 507 558 15 769 271 674 41 740 521 272 642 147 596 765 286 614 66 50 208 409 => the sum is 11534 rather than 10990
Problem in row 28: 17 783 244 780 688 54 733 595 92 355 684 110 253 34 739 282 161 455 533 550 134 268 111 176 72 482 26 35 => the sum is 9446 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 461 487 595 129 557 220 678 328 462  68 760 109  36 213  39 742 551 469 173 515 738 267 331 588 684 237 405 779
 571 316 663 304 349 682 701 183 236 569 124 672 706 388 694 114 715 262 342 233 749 219 296 177  84 390 656 150
 163 378 207 176 710 372 113 585  81 275  87 770 395  73 765  25  60 103 509 226 617 713 559 170 723 215  83 101
 110 580 485 780 676 619 229 724 270 690 197 320 172  61 519  42 178 317 153  37 334 131 511 581 518 404 726 736
 115 157 533 730  94 452 188 111 136 743 352   7 159 762 627 475 490 444 499 669 501 223 697  91 165 429 614 527
 222 662 413 126 318  85 164 315 763 522 355  69 577 143 761 488 447 524 254 119 250 532 476 358 764 434 361 108
 242  76 182 419 439 623 397 507 330  95   2 202   9 734 502 408 187 696  98 303 158  17 702 238  65 526 122 227
 774 149 368  40 531 565 148 720 336  92 418 685 735 140 456 574  50 688 123 635 338 402 484 135 203 640 192 369
 454 118 498  80 584 432 773 689 414  97  18 365 138 659 169 683  41 191 107 244  10 266 307 594 299 268 633 751
 357  89 746 208 727 754 609 513 161 313 621 642 731 291 712 563  70  51 285 758 628 327 680 217 127 538 167 256
 451 253 645 168 224 260 471 430 407 693 436 245 273 555 652 393 214 301 263 665 112 766 100 708 589  52 297 367
 117 156  24 733 705 740 548 258 448 289 638  19  96 383 718 670 392  29 707 363 601 480 681  54 539 528 562 615
 344 121 667 230 255 666 618 151 442 211 643  77 575 200 282 243 549 602 704 566 606 489 239 295  57  43 687 428
 409 416 350 337 252 294 354 264 403 373 620 308 359 450 427 536 362 437 421 375 381 646 445 284 371 379 384 353
 644 306 504 364 235 145 232 491  31 286 472 629 778 406 302 274 146 755 477 420 422 120 544 756  72 387 612 180
 385 709 435 457  58 394  13 399 583 453 556 412 329 366 398 292 396  34 550 333 410   3  62 768 468 781 376 570
  90 558  86 728 272 374 466 401 530 603 424 573 441 535  67 512 305  32 360 133 455 517 199 464 345 722 185 613
 657 686 279 142  53 497 739 576 604 521 605 481 546 714 648 181 212 561 784 467 552 600 699 433 186 653 218 162
 415 692 608 510  66 201 247 137 479 547 326 508 748 257 474 744 771  78  75  82 482 248 130 560 425 582 277 321
 228 496 598 711 775 139 351 647 725 543 323 128   4 660 175  28 717 695 732 537 288 240  47 400 470 231   8 341
 206 478 516 493 630 116 586 483 753 438 314 664 591 721 105  59 300 194 370 674  99 125 389  45 102 716 216 607
 769 246  33 377  21 276 174 234  48  79 154 625 525 500 698 772 777 661 204 651  63 458 171 541 637 654 622  20
 747 636 132 641  93  15 426  35 209 677 380 593  56 759  71 542 553 673 265 578 691 554 195 729 271 147 280 610
 545 492 443 340  55 655 658  64 463 278 210 259 587 225 310 523 767 616 309 325  12 465 251 750 631  14 473 592
 514 650 343 626 348 205 590 391 431 311 700  38 134  16 319  11 783 166 520 287 440 782 624  26 745 324 160 506
  27 332 196 459 572 293   6 596 741 752 671 290 339 141  46 198  22 346 776 261 639 269 417 632 529 486 611 190
 298 599 411 347 634 382 189 312   1  23 540 703 283 494  49 719 356 386 649 460 221 567 505 155 737 104 495  88
 675 152  30 335 757 534 322 446 503 449  44 597 668 144   5 179 579 679 281  74 193 564 249 241 184 106 568 423

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.0059e+07us (= 10059ms, 10.059s)
Satisfaction error: 16
Number of search iterations: 2255
Number of local moves: 1901 (including on plateau: 1860)
Number of local minimum: 12 (including on plateau: 221)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 461 487 595 129 557 220 678 328 462 68 760 109 36 213 39 742 551 469 173 515 738 267 331 588 684 237 405 779 => the sum is 11621 rather than 10990
Problem in row 2: 571 316 663 304 349 682 701 183 236 569 124 672 706 388 694 114 715 262 342 233 749 219 296 177 84 390 656 150 => the sum is 11545 rather than 10990
Problem in row 3: 163 378 207 176 710 372 113 585 81 275 87 770 395 73 765 25 60 103 509 226 617 713 559 170 723 215 83 101 => the sum is 9254 rather than 10990
Problem in row 4: 110 580 485 780 676 619 229 724 270 690 197 320 172 61 519 42 178 317 153 37 334 131 511 581 518 404 726 736 => the sum is 11100 rather than 10990
Problem in row 6: 222 662 413 126 318 85 164 315 763 522 355 69 577 143 761 488 447 524 254 119 250 532 476 358 764 434 361 108 => the sum is 10610 rather than 10990
Problem in row 7: 242 76 182 419 439 623 397 507 330 95 2 202 9 734 502 408 187 696 98 303 158 17 702 238 65 526 122 227 => the sum is 8506 rather than 10990
Problem in row 9: 454 118 498 80 584 432 773 689 414 97 18 365 138 659 169 683 41 191 107 244 10 266 307 594 299 268 633 751 => the sum is 9882 rather than 10990
Problem in row 10: 357 89 746 208 727 754 609 513 161 313 621 642 731 291 712 563 70 51 285 758 628 327 680 217 127 538 167 256 => the sum is 12141 rather than 10990
Problem in row 12: 117 156 24 733 705 740 548 258 448 289 638 19 96 383 718 670 392 29 707 363 601 480 681 54 539 528 562 615 => the sum is 12093 rather than 10990
Problem in row 18: 657 686 279 142 53 497 739 576 604 521 605 481 546 714 648 181 212 561 784 467 552 600 699 433 186 653 218 162 => the sum is 13456 rather than 10990
Problem in row 20: 228 496 598 711 775 139 351 647 725 543 323 128 4 660 175 28 717 695 732 537 288 240 47 400 470 231 8 341 => the sum is 11237 rather than 10990
Problem in row 23: 747 636 132 641 93 15 426 35 209 677 380 593 56 759 71 542 553 673 265 578 691 554 195 729 271 147 280 610 => the sum is 11558 rather than 10990
Problem in row 24: 545 492 443 340 55 655 658 64 463 278 210 259 587 225 310 523 767 616 309 325 12 465 251 750 631 14 473 592 => the sum is 11312 rather than 10990
Problem in row 26: 27 332 196 459 572 293 6 596 741 752 671 290 339 141 46 198 22 346 776 261 639 269 417 632 529 486 611 190 => the sum is 10837 rather than 10990
Problem in row 27: 298 599 411 347 634 382 189 312 1 23 540 703 283 494 49 719 356 386 649 460 221 567 505 155 737 104 495 88 => the sum is 10707 rather than 10990
Problem in row 28: 675 152 30 335 757 534 322 446 503 449 44 597 668 144 5 179 579 679 281 74 193 564 249 241 184 106 568 423 => the sum is 9981 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 371 187 604 556 488  18 779 674 607  74 392 275 465  22 726 131 623 409 590 353 338  65 299  30 501 164 493 756
 455 750 682   9 505 108 277 618 705 586 653 147  84 651 204 494 288 721 387 192 514 737 224 451 640  52 679 509
 149 211 714 727 246 667 146 245 767 722  35   7 773  47  80 169 664 546 716  50 534 763  23 709  72 704  24 480
 596 462 495 678  27 511 424  87  89  55 200 775 364 499  85   3 179 738 766  51 111 124 530 588 662 594 656 641
 206 715 123 404 696 372 125 467 225 749 703 755 190 290 301 680 172 385 411 361 203 374 426 408 282 328 283 356
 138 456 109 244 441 286 642 453 672 460 581 541 280 293 434 347 659 610 643 165 101 168 687 254 492 313 452  69
  79 782 142  75  48 506 647  57 634  77 639 292  17 450 195 627  66 547 739 757 592 337 602  45 216 719 390 713
 565 220 464 191 608 485 107 577 256 182 358 612 688 576 481 706  29 638 115  82 746 329 217 150 285 183 368 772
 163 568 241  43  28 635 130 287 548 212  99 693  68 724 269 325 591 461 580 554 557  58 524 567 733 378 180 774
 535  88 780 649 304 104 736 477 447 533 272 175 303  98 133 472 229 173 508 661 539 582 210 136 762 181 625 613
 525 127 260 489 622  60 112 161 153 400  25 552 512 768 383  10 116 445 413 466 184 209 119 257 551 463 240 265
 685 314 252 617 110 315  41 331 673 157 764 444 194 342 669 376 515   4 171 645 753 694 132  81 655  38 528 490
 443 295  13 420 507 419 405  59 491 422 503 428 423 412 148 402 437 427 470 448 442 620 363 415 471 598 375 134
 698 197 712 476 573 160 430 632 407 122 628 654 614 395  20 718   8 188 469  61   2 702 389  97 262 350 597 429
 449 406 128 243 360 504 531 526 230 633  96 583 697 135 155 761 484  34 660 532 475 227 414 270 221 516 513 207
 403 330 457 321 458 401 723 335 381 416 178 319 459 382 502 349 365 340 326 373 345 318 323 333 348 728 380 397
 166 322 500 384 346 778 379 302  70 615 196 344 334 621 776  92 584 316 198 549 386 343 357 215 599 355 310 553
 758 312 540 479 238 543 336  39 324 777 102 684 566  16 648 223 637 306 144 601 720  12 300 675 251 219 242 298
 440 317 266 783 351 690 520 562 433 278 529 729   1 742 482 234 435 177 263   6 593 425 691 486 431  56 236 129
 201 474 152 369 730 446 202 113 162 281 574 308 745 139 542 563 174 587 646 141 327 359 391 743 701 665 752  53
  93 732 417 666 521  63 626 279 296 264 352 189 522 305 235 603  64  83 629 707 222 436 744 377 432 769 159 205
 176 605 652 297 595 118 167 781 117 473 106 410 589 247 311  78 725 271 120 483  71 784 689 616 218 259 438 185
 747 519 498 253 700 735  15 388 523 362 575 126 273 143 399 237 668 121 213 249 570 396 158 770 354 367 564  67
 258 670 538  37 332 708 393 686 232 226 274 497 527 559 631 100 731 208  91 734 339  40 151 145 114 510 518 741
 261 609 289 103 186 585 683 657 496  32 517  19 394 699 569 636 536 692 307 341 268 560  49 644  62 676  26  94
 759  44 439 550 156 309  76 579 748 681 193  36 663 137 619 398 228 255 320 677 740  33 765 454  86 233 717  95
 650  11 239 561 600 170 578 248  54 571 751 105  46 754 572 711  73 771  90 140  42 624 555 606 558 418  14 478
  21 267 284 366 214 294 760 370 250 630 695 291 199 544 421 545 710 537   5 611 276 671 658 468  31 154 231 487

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00594e+07us (= 10059.4ms, 10.0594s)
Satisfaction error: 6
Number of search iterations: 2857
Number of local moves: 2390 (including on plateau: 2339)
Number of local minimum: 20 (including on plateau: 280)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 455 750 682 9 505 108 277 618 705 586 653 147 84 651 204 494 288 721 387 192 514 737 224 451 640 52 679 509 => the sum is 12322 rather than 10990
Problem in row 10: 535 88 780 649 304 104 736 477 447 533 272 175 303 98 133 472 229 173 508 661 539 582 210 136 762 181 625 613 => the sum is 11325 rather than 10990
Problem in row 11: 525 127 260 489 622 60 112 161 153 400 25 552 512 768 383 10 116 445 413 466 184 209 119 257 551 463 240 265 => the sum is 8887 rather than 10990
Problem in row 19: 440 317 266 783 351 690 520 562 433 278 529 729 1 742 482 234 435 177 263 6 593 425 691 486 431 56 236 129 => the sum is 11285 rather than 10990
Problem in row 20: 201 474 152 369 730 446 202 113 162 281 574 308 745 139 542 563 174 587 646 141 327 359 391 743 701 665 752 53 => the sum is 11540 rather than 10990
Problem in row 22: 176 605 652 297 595 118 167 781 117 473 106 410 589 247 311 78 725 271 120 483 71 784 689 616 218 259 438 185 => the sum is 10581 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 259 146 420 461  84 695 312 358 764  53 439 107 591 686 200 182 771 448 639 453 594 377 696  13 636 193 729 486
 606 752  83 780 167 251 257 102 763 239 183 237 166 621 574 659 250 347 445 292 479  91 711 293 390 324 190 738
 333 539 542 204 760 719 779 133 381  48  77 199  34 589  40 118 733 704  62 656  12 648 657 715 181 645 116 366
 642 208 385 730 288 669 633 772 350 443 247 766 221  24 101  66 135 470 161 517 270 433 551 115 617 230 297 680
 775  54 754 248 654 111 483 652 455 421   8 457 296 229 482 280 241  30 647 620 701 266 245 640 334 581 254  72
 569  16 579 192 196 646  76  17 596 323 538  60 778 326 272 603 500 697 744 178 189  46 413 225 749 186 658 618
 365  61 505 121 519 219 622 742 452 773 233 540 258 774 651 561 416 328 238  71 756 156 316 342 600   9  87 275
 450 602 557 565 210 382  29 566 179 501 120 748 180  19 739 134 299 650 499 547 585 604 279 140 595 311 497   3
 476 784   5 261 138 511 580 571  18 526 338 549 282 564 537 150  20 530 653 520 553 302  96 164 235 523 554 550
 677 187 184 558 783  27 541 478 702 535 124 447 510   1 403 683 197 597 424 339  89 703 560 491   7 301  75 367
   4 346 674 412 691 590 383 194  39 684 473 185 467  93 474 614 563 173 762 378 732 442 514 747  25 283 690 584
 532 462 624 490 504 508 291 631 226 162 488 432  42 481 444 745 410  52 480 477 484 201 305 143 429 469 415  63
 611 516 427 663 256 451  36 252 559 746 456 643 449 422  68 460 215  45 391 572  47 151  88 404 776 628 609  49
   2 463 454 240 400 402 393 436  92 407 720 353 655 430 398 418 388 379 368 687 362 525 317 408 211 276 371 435
 401 406 405 419 395 360 394 372 356 370 397 458 399 373 352 411 384 446 345 354 359 348 330 414 376 546 392 428
  97 154 217  81 734 568 492 267 243 575 191 103 386 668 369 389 145 437 675 726 552 513 246 207 706 357 343 605
 601 318 304 322 625 543 281 284 325 127 255 285 567 109 332  85 374 271 268 555 264 351 751 700 344 598 728 423
 627  59  79 176  82 273 495 698 544 278 637 244 712 209 676  67 583 308 129 740 306 672 438 599 142 265  44 634
  64 678 277 623 149  14  95 313 693 524 104  10 632 588 666 512 112 290 577 509 459 236 105 528 274 630 610 718
 195 527 689 641 128 777 331   6 294  22 260 341 727 737  65 212 717 198 136 234 679  90 765 464 465 315 761 214
 137 441 556 493  94 375 685 160  32 638 736 593 619 349  80 755 534 521 123  43 157 578 159 722 177 694 286 253
 767 329 110 759 545 314 139 223 475 152 607 216  23 472 770 489 731 174  41  21 662 781 688 114 494 503 188 203
 626 387 576  35 327 262 714 471 425 227 431 336 355 144 708 269 287 769 735 205 629  78 163 506  69  37 649 570
  50 615 295  73 310 758  31 613 417 713 665 670 522 298 224 502 664 573 426 768 126 320 100 113 536 364 170  74
 131 231 782 232 168  11 340 321 172  28 705 699 132 531 218 709 319 743 363 289  98 616 122 586  56 750 612 724
 498 681 141 380 635 147 667 117 682 608 361 707 125 337 592 335  55 671 155  51 507 222 169 228 587 108 496 202
  86 721 153 249 487 165 158 723  15 692 440  57 562 206  26 434 303  33  38 130 220 515 533 660 263 396  99 485
 409 307 213 582 661 242 753 518 741 175 757 548 300 710 529 148 644 106 466  58 119 725 673 309 716 468  70 171

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00591e+07us (= 10059.1ms, 10.0591s)
Satisfaction error: 9
Number of search iterations: 3124
Number of local moves: 2588 (including on plateau: 2540)
Number of local minimum: 24 (including on plateau: 327)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 259 146 420 461 84 695 312 358 764 53 439 107 591 686 200 182 771 448 639 453 594 377 696 13 636 193 729 486 => the sum is 11792 rather than 10990
Problem in row 4: 642 208 385 730 288 669 633 772 350 443 247 766 221 24 101 66 135 470 161 517 270 433 551 115 617 230 297 680 => the sum is 11021 rather than 10990
Problem in row 11: 4 346 674 412 691 590 383 194 39 684 473 185 467 93 474 614 563 173 762 378 732 442 514 747 25 283 690 584 => the sum is 12216 rather than 10990
Problem in row 16: 97 154 217 81 734 568 492 267 243 575 191 103 386 668 369 389 145 437 675 726 552 513 246 207 706 357 343 605 => the sum is 11046 rather than 10990
Problem in row 18: 627 59 79 176 82 273 495 698 544 278 637 244 712 209 676 67 583 308 129 740 306 672 438 599 142 265 44 634 => the sum is 10716 rather than 10990
Problem in row 25: 131 231 782 232 168 11 340 321 172 28 705 699 132 531 218 709 319 743 363 289 98 616 122 586 56 750 612 724 => the sum is 10688 rather than 10990
Problem in row 26: 498 681 141 380 635 147 667 117 682 608 361 707 125 337 592 335 55 671 155 51 507 222 169 228 587 108 496 202 => the sum is 10464 rather than 10990
Problem in row 27: 86 721 153 249 487 165 158 723 15 692 440 57 562 206 26 434 303 33 38 130 220 515 533 660 263 396 99 485 => the sum is 8849 rather than 10990
Problem in row 28: 409 307 213 582 661 242 753 518 741 175 757 548 300 710 529 148 644 106 466 58 119 725 673 309 716 468 70 171 => the sum is 12118 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 443 507 171 656 450 337 153 658 237 327 297 349  97 572 156 756 234 249 610 291 233  92 638 189 746 516 300 726
 594  57  37 585 392 106 235 318 536  85 695 565 134 459 671 290 110 692 121 723 662 697 439 539 174 390 381 303
  43 766 694 219 504 253 768 690 636 568 775 699  61 274 386 714 140 113 217 493 418 382 570 590  41 745 534 396
 509 525  87  69 652 496 623 562 476 675 149 405 734 783 780 660 593 240 331 425 717  96 261  86 761  20 762 383
  55 369 729 129 281 607 472 132 145 371 377 252 753 176 182 264 547 408 513 778 244 321 773 649 521 602 196 126
 633 750  31 216 501 616 588 612 498 578  59 151 366  38  22 743 468 206 214 577 378 735 543 263 324 314 442 124
 159 201 339 410 634  30 191 268 758 774 576 181 520 670 754 128 173 208 760 470 347 225 211 169 583 148 456 591
 172 704 667 271 230 619  17  66  25 215 170 370 698 394  36 117 299 740 567  26 540 242 362  83 130 563 294 597
 119  47 155 765 255 380 643 730 747 364 631 644 120 737 358  99 284 489 164 625   9 323 530 315 655 141  15 646
 574 229 512 467  32 708  81 270  98 673 345 210 492 609  11 102 751 200 519 693 554 365 250 528 188 185 624 720
 718 162  93 776  16  54  80 647 434 483 510 641 635 231 559 596 432 486 197 199 205 650 592 524  45 469 440 116
 499 421 674  75 605 515 280 304 355  35 209 731 474 251 429 556 473 611  51   4 363 147 260 716 748 436 103 665
 372 395 645 316 561 426 373  65 505 479 127 533 123 340 682 329 688 424 334  14 401 445 137 305 282 752 406 531
 460 428 204 419 342 435 404 154 453 457 412 313 258 353 549 352 451 400 407 461 535 502 298 376 399 388 387 393
 550 506  39 582 681 763 546 779  52  82 455 152 195  74 573 724 764 177 161 351 118   5   2 622 552 732 330 423
 384  76 553 617 403 614 733 503 422 114 283 526 632 202 687 238  62 143 306 648  24 518 241 160 529 296 478 598
 218 497 615 603 135 713   8 398 326 350 705 146  19 618 311 604 302  64 664  56 308  42 769 414  68 666 712 659
 541 163 430 348 166 359 447 259  77 433 320 328 558 272 608  95 485 413 544 463 663 685 222 224  78 606 715 488
 462 480 495  63 438 411 490 192 722  18 770 757 755 227 335   3 669 246 741 651 256 416 115 356  21 111 471 319
 360 312 736 277 226 771 228  50 193 584 653  73 409 587 144 165 100 767 571 542 179 279 458 719 415 446 198 548
 354 691   1 672 728 309 678 275 514 112 236 508 367 579 239 464 441 287 187 420 599 727 105 484 374  90 273 276
 637 448 444  23 654  40 104 629 784 707 575 108 175 101 267 368 220 661 613 361 668  60 532 262 475 357 711   6
 194 725 683 245 286 186  67 555 601 581 545 109 389 527  70 454 307 341 620 700 595 628 397  72 680  10 243 180
 317 221 586 346 336 247 709 701  48 157 131 431 477 136  84 379 642 292 689 375 696 325 742 739 391 138 452 203
  49 295  27 213 703 322 266 184 551 511 207 639  33 564 523 232 427 627 301 125  53 293 142 289  46 744  58 223
 686 265 721 167 487 522 657 254 133 285  13 481 621   7 500 677 288 332 122  94 449 710 107 749 417  28  91 333
 738  71 344 702 248 139 684 557 630 190 676  88 626 569 580 538 158 402 437 168 310 491 517 183 781 537 706 338
 150 679 278 759  44  12 465 178  34 782  89 600 269 640 494 343 482 772  29 257 466 589 777 385 566 560 212  79

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00601e+07us (= 10060.1ms, 10.0601s)
Satisfaction error: 9
Number of search iterations: 3083
Number of local moves: 2531 (including on plateau: 2483)
Number of local minimum: 19 (including on plateau: 335)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 43 766 694 219 504 253 768 690 636 568 775 699 61 274 386 714 140 113 217 493 418 382 570 590 41 745 534 396 => the sum is 12689 rather than 10990
Problem in row 4: 509 525 87 69 652 496 623 562 476 675 149 405 734 783 780 660 593 240 331 425 717 96 261 86 761 20 762 383 => the sum is 12860 rather than 10990
Problem in row 5: 55 369 729 129 281 607 472 132 145 371 377 252 753 176 182 264 547 408 513 778 244 321 773 649 521 602 196 126 => the sum is 10972 rather than 10990
Problem in row 7: 159 201 339 410 634 30 191 268 758 774 576 181 520 670 754 128 173 208 760 470 347 225 211 169 583 148 456 591 => the sum is 10934 rather than 10990
Problem in row 8: 172 704 667 271 230 619 17 66 25 215 170 370 698 394 36 117 299 740 567 26 540 242 362 83 130 563 294 597 => the sum is 9214 rather than 10990
Problem in row 25: 49 295 27 213 703 322 266 184 551 511 207 639 33 564 523 232 427 627 301 125 53 293 142 289 46 744 58 223 => the sum is 8647 rather than 10990
Problem in row 26: 686 265 721 167 487 522 657 254 133 285 13 481 621 7 500 677 288 332 122 94 449 710 107 749 417 28 91 333 => the sum is 10196 rather than 10990
Problem in row 27: 738 71 344 702 248 139 684 557 630 190 676 88 626 569 580 538 158 402 437 168 310 491 517 183 781 537 706 338 => the sum is 12408 rather than 10990
Problem in diagonal 0: 443 57 694 69 281 616 191 66 747 673 510 731 123 353 573 238 302 413 741 542 599 60 397 739 46 28 706 79 => the sum is 11017 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 714 570 703 447 495 509  35 771 134 371 142  11 675 364 582  30 351 572 623 467 124 718 661 220 491  45 164   1
 678  37  38 375 748 253 284 772 521 605 437 725 528 624 562 249  47 557 350 640 239 393 576 243 141 178 161 264
 466 613 233 560  33 547  97 307  12 223   2 529 245 236 285 416 621 136 733 216 197 457 313  41 312 482 339 272
 355 430 565   4 455 635  31 372 123 707 717 563 686 418  66 597  40 462 443 106 198 221 778 615 183 584 456 180
 302 537 403 139 688 186 214 121 664 632 207 670 708 511 504 188 273 175 641 490 677  94 309 200 376 594 192 295
 405 271 165 140 407 308 427 367 756 210 250 755 533 433  91 268 344 704  54 559 619 379 483  49 145 731 651 486
  22 551 564 522 639 586 241 108 746 512 716 550  71 267 208 458 278 555 240  65 306 211 120 487 631 614 647  75
 660 513   8 566 775 299 213 346  39 395 448 166 549 625  34 574 690   3 129 702 577 347  36 633 109 328 485 514
 578 589 365 281 680 378 469 766 315 687  27 127 492 451 488 225 445 277 569 323 238 609 684 519  21 170 212   5
 656 499 676 506 366 556 587 348 128 189 743 382  60 104 356   9 770 642 254 762  87 444 419 744 696 575 723 754
 520 751 567  10 181 148 665  67 204 406 116 494 637 144 719 629 645 322  29 606 685 174 689 441 779 226  56  80
 222 202 363 655 607 709 283 667  70 390 318 353 337 452 263 710  82 583 712 266 334  57 747 105 335 415 311 442
 638  64 292 573 286 663 340  51 780 260 336 749 357 242 231 332 414 515 358 503  69 646 422 270 497 303 218 581
  20 473 752 479 310 384 694 634 400 546 425 742 176 454 588 595 195 391 604 282 679 154 691 652 326  32 681 404
 463 401 435 383 256 380 420 304 423 361 354 387 314 411 421 434 410 341 673 386 388 359 262 470 397 498 321 338
 432 125 280  92 653 781 345 381 298 206 671 163 472 505 644 333  43 760 636 535 730 289 130 724 493  26 669 591
 288  28 489 431 784 540 119 426 392 461 571 622 229 396 693 244 475 496  95 257 370 230 782  25 349 612 385 201
 320 290 525 450  15  62 732 167 190 113 465 112 246 700 146 362 740 516 234  19 305 102 160 602   7 287 185 162
 769 251  16 706 439 368 616 199 291  93 649 137  61 705 738 111 737 464 460 643  50 764  59 343 143 753 275 150
  96  81 783 409 168 399 173 524 600 297 736 182 373  78 436 374 196 352 590 658 255 526 701 531 327 276 544 325
 184 126 518 610  99 159 413 510 468 618 527 316 674  89 389 398  72 617 611 217 558 172 107 585 138 324 726 765
 155 534 330  58 187 219 598 502 377 654  44 471  24 657 628 517 627 103 554 474 118 593 394 279 774 237 115 767
 152 429 438 539  52 697 722 739 603  90 156 171 133 147 773 763 269 532 274 720 265 228 248 478 412 224  77 659
 568 761 193 342 296 110 548 149 538 759 552  88 682 300  14 530 599  83 402  17 428 735  79 596 191 541 630 259
 695 227 329 543 507  84 408 650 592 417 100 424 369 446 157 215 626  23  68  74 440 699 153 158 672 757 698 459
 203 683 545  63 151 247 484 169 662 131 501 317 523  98  13 728 692 232 477 252 620 734 294  46 741  18 608 758
 235 745 301 776 205   6 117  73 542 480 179  55 750 580 293 648 261 319 135 666 713  76 561 453 536 449 360 476
 194 209 114 331 508 777 715 500 122 177 601 729  86 553 668  53  48 258  42  85 721 579 132 481 768 711 101 727

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00598e+07us (= 10059.8ms, 10.0598s)
Satisfaction error: 7
Number of search iterations: 3817
Number of local moves: 3183 (including on plateau: 3134)
Number of local minimum: 26 (including on plateau: 360)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 678 37 38 375 748 253 284 772 521 605 437 725 528 624 562 249 47 557 350 640 239 393 576 243 141 178 161 264 => the sum is 11225 rather than 10990
Problem in row 3: 466 613 233 560 33 547 97 307 12 223 2 529 245 236 285 416 621 136 733 216 197 457 313 41 312 482 339 272 => the sum is 8923 rather than 10990
Problem in row 8: 660 513 8 566 775 299 213 346 39 395 448 166 549 625 34 574 690 3 129 702 577 347 36 633 109 328 485 514 => the sum is 10763 rather than 10990
Problem in row 10: 656 499 676 506 366 556 587 348 128 189 743 382 60 104 356 9 770 642 254 762 87 444 419 744 696 575 723 754 => the sum is 13035 rather than 10990
Problem in row 14: 20 473 752 479 310 384 694 634 400 546 425 742 176 454 588 595 195 391 604 282 679 154 691 652 326 32 681 404 => the sum is 12763 rather than 10990
Problem in row 16: 432 125 280 92 653 781 345 381 298 206 671 163 472 505 644 333 43 760 636 535 730 289 130 724 493 26 669 591 => the sum is 12007 rather than 10990
Problem in row 18: 320 290 525 450 15 62 732 167 190 113 465 112 246 700 146 362 740 516 234 19 305 102 160 602 7 287 185 162 => the sum is 8214 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 377 757 151 238 335 459 617  60 778 511 645 130 733 292 240 357 230 108 249  90 391 320 414  55 755 644 296 758
 142 656  59 729 250 168  50 478 229 254 491 239  25 237 273 350 213 779 573 300 169  23 550 614  71 677 739 710
  30 143 624 593  64  80 455 358 173 582 261 400 495 545 222 318 356 399 623 708   1 180 657 480 528 765 196 754
 165 682 155 687 745  43 463  81 128 691 650 683 505  18  12  87 454 669 102 693 252  27 134 701 696 219 652 596
 499 553 604 641 226 613 431 336 264 664  76   6 761 572 616 642 152 627 182 137 534 294 417 469 248 706 206 288
 284 207 632 521 195 232 780  72 588 590 473  36 760 103  11 139  94 716 105 450 389 477 658  54 257 581 470 565
 501 243 122 186 589 721 578 234 597 274 772  37 506 540 711 741 317 625 770 218 245 734 172 337 508 767 603 607
 123  77 577 301   4 771 146 606  13  41 518 756 162 742 594 260 200 147 462 759 571 620 497 492 768 308 408 688
   9 781 544 434 653 636 611 660 153 448 730 246 600 583 209 622 554 140 503 471 376 719 673 272  15 524  46 287
 445 712 651  86 728 533 224  78  70 329 591 221 113 440 299 212 766 428 247 166 330 685 727 425 640 410 548 110
 319 631  69 355 163  16 743 749 314 171 370 339 158 621 539 297  74 479 325  73 420 694 311 353 519 474 198 286
 740  20 148 532  19 194 111 437 475 777 118 512 174 488 457  98 483 490 671 722 705 562 486 714 126 411 121 199
 639  67 332 406 504 484 426   5 432 472 384 244 177 774 649 460 438 775 566 446 291 380 189 482 561   7 371  29
 435 412 421 396 449 381 447 441 461 401 429 192 388 413 439 451 418 378 444 369 393 453 409 402  21 359 366 422
 351 361 416 372 333 419 392 403 394 436 430 375 407 365 699 352 347 390 397 398 328 349 405 383 374 387 360 367
 323 423 681 270 354 386 385 695 363 382 576 290 262 404 530 185 343 324 555 345 304 364 298 368 259 322 295 704
 464  89 648 135 494 655 580 115 481 241 106  62 515 342  66 585 667 502 612 116 316 626 601 698 326 227 190 531
 310 637 282 680 256 283 305 321 610 293 251 268 362 258 263 516 306 344 718 659 433 668 315 233 592 253 517  57
 615 348 735 161 563 307 236 537 303  22 726 458 279  49 179 443 136  44 331 510 467 662 764  95 570  93 340  92
 748 498 549 782 181 689 327 465 210 608 203 717 415  24 216 132 720  31 114 535 746 107  28 119 557 157 670 442
 684 208  75 395 633 753 302 255 170 654 235 424 707 125 750  38 529 117 456 476 267  45 663 514 536 312 575  79
 231 202 373 313 586 175 112 228 690 225 523 629 141 700  65 104 747 538 188  58 724 269  39  52 100 736  83 127
 783 271 738 167 579 144 164 697 635  88 379 643 211 120 154 567  85 744 752 101 723 183 150 427 676   8 281 520
 338 184  51 559 160 547 647 276 732 334 129 776 487 266 675 638 679  91 149 692 138 197  63 731  47 595 131 678
 275 217 634  96  42 341 686 773  34 187 215 618 598 784 568 762 513 278 500 145 176 525 205  82 193 178 763 602
 541 526 584   3 630 672  56 599 468  97  10 522 564 628 769 223 543 191 309 542  99  35 551 605 214  68 661 280
 587 466   2 751 703  84 702 546 560 493  33 715 220 509 496 674  17 527  26 569 489 507  40 277 124 156 558 159
  32 619 133 201 552 204  14 485 665 725 666 452 265  48 289 737 609 109  61 242 713 285 574 556 709 646 346  53

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00026e+07us (= 10002.6ms, 10.0026s)
Wall-clock time (full program): 1.00541e+07us (= 10054.1ms, 10.0541s)
Satisfaction error: 11
Number of search iterations: 2442
Number of local moves: 2047 (including on plateau: 2000)
Number of local minimum: 18 (including on plateau: 253)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 142 656 59 729 250 168 50 478 229 254 491 239 25 237 273 350 213 779 573 300 169 23 550 614 71 677 739 710 => the sum is 10048 rather than 10990
Problem in row 5: 499 553 604 641 226 613 431 336 264 664 76 6 761 572 616 642 152 627 182 137 534 294 417 469 248 706 206 288 => the sum is 11764 rather than 10990
Problem in row 6: 284 207 632 521 195 232 780 72 588 590 473 36 760 103 11 139 94 716 105 450 389 477 658 54 257 581 470 565 => the sum is 10439 rather than 10990
Problem in row 7: 501 243 122 186 589 721 578 234 597 274 772 37 506 540 711 741 317 625 770 218 245 734 172 337 508 767 603 607 => the sum is 13255 rather than 10990
Problem in row 8: 123 77 577 301 4 771 146 606 13 41 518 756 162 742 594 260 200 147 462 759 571 620 497 492 768 308 408 688 => the sum is 11611 rather than 10990
Problem in row 9: 9 781 544 434 653 636 611 660 153 448 730 246 600 583 209 622 554 140 503 471 376 719 673 272 15 524 46 287 => the sum is 12499 rather than 10990
Problem in row 10: 445 712 651 86 728 533 224 78 70 329 591 221 113 440 299 212 766 428 247 166 330 685 727 425 640 410 548 110 => the sum is 11214 rather than 10990
Problem in row 11: 319 631 69 355 163 16 743 749 314 171 370 339 158 621 539 297 74 479 325 73 420 694 311 353 519 474 198 286 => the sum is 10060 rather than 10990
Problem in row 19: 615 348 735 161 563 307 236 537 303 22 726 458 279 49 179 443 136 44 331 510 467 662 764 95 570 93 340 92 => the sum is 10065 rather than 10990
Problem in row 21: 684 208 75 395 633 753 302 255 170 654 235 424 707 125 750 38 529 117 456 476 267 45 663 514 536 312 575 79 => the sum is 10977 rather than 10990
Problem in row 22: 231 202 373 313 586 175 112 228 690 225 523 629 141 700 65 104 747 538 188 58 724 269 39 52 100 736 83 127 => the sum is 8958 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 661 204   6 732 303 590 707 627 604 127  41 501 201 619 727 527  39 165  26 760  71 108 579 125 583  85 505 767
 495 759 239 744 614 197  27 665  91 705 714 380  24 484 687 340 122  73 608 679 528 310  22  95 240 515 739  72
 694 170 730 187 486 673  55 156 238 575 225  56 172 420 147 153 765 676 440 138 766 704 246 324 475 541 551 227
 424 596 284 689 598 250 563 582 663 131 130 230 764 497 628 462 103 268 612 657 335 159  87  17 642 128 747 622
   4 100 181 591 650 461 438 646 776 209 644 134 554 113  23 389 516  90 226 312 713 706 534 588 769  99 219 305
 728 472 683 247 249  40 275 696 691 291 245 175 293 388 518  47 570  37 107 206 717  10 434 672 737 286 465 711
  25 414 228 660 535 160 578 288   5 629 307 470 235 213 617  51 690 559 669 748 695 616 229 283 648 182 190  66
 471 571 150 152 741 234 222 593 519 333 532   8  12 223 164 603 188 287 494  21 580 473 301 521 729 699 595 574
 176 273 655 347 189  98 453 167 565 427 734  18 474 538   1 260 510 548 761 693 106 750 550 562 212 700  57 166
  34 267 477 143  74 783 666 487 233 296  50 710 547 507  46 317 722 625 702 207 488 418 271 114 597 325 425 459
 618 545 162  11 718 577 755 493 316  77 439 584 242 104 253 254  28 469  97 149 634 441 256 670 599 684  79 736
 592 144 664 174 121  68 638 282 606 746 631 157 667 652 735  32 458 180 313  20 220 543 749 530  96 272 136 564
 680 751 555 640 503 572 339 186 218 155 517 607 442  76 566 437 278 320  16 719 101 184  80 610 294 601  64 479
 413 381 428 452 406 364 433 390 408 426 450 411 431 382 399 375 397 421 377 430 409 368 171 344 370 369 362 423
 419 412 394 374 392 398 379 350 407 662 385 358 415 367 422 404 363 365 359 376 345 405 371 356 332 436 366 378
 391 716 326 330 309 632 357 334 221 396 327 537 348 322 384 329 393 630 360 331 401 318 531 315 361 354 395 342
 782 504 142 556 772 352 489  48 338  38  88 659 715   7 500 123 252 306 573 141 499 656 464 177 526 623 257 403
 154 373 752 351 720 743 292 304 560 302 266 771 261 274 520 194 208 557 298 289 321 300 524 319 241 511 308 277
  63 386 281 168 485 402 139 417 600 192 132  42  65 102 467 668 269 145 124 540 105 119 533 496 762 118 567 682
 328 120 491 780 199 173  62 756 200 613 445 552 341 685  13 476 558 215 513 244 126 647 677 594 263 443 701  60
 203 721 355 205 112  93 726  33 522 544 777 698 602 738 774 447  35 633  78 460 314 514 383   3 214 262 349 195
 140 671 781 416 323 636 231  69  70 492 455 297 675 198 311 432 569 264 259 210 481 217 731 757   2 561 466 276
 758 457 444 523  43 137  49 343 742 193 643 410 539  89 449 775 589 745 185 658  61 763 129 299  84 169 553 161
 258 372  30 265 178 512 778  94 117 211  82 237 621 587 337 753 725 387 733 400 270 232 196 784 451 224 502 654
 585 478 641 110 236 285  81 779  15 770 279 480 754 645 202 498 109  83 708 609  67 549   9 454 111 336 611 506
 295  45  92 446 179 740 191 463 703 724 586 135 490 712 148 620 651 649 158 448 576 243 536 482  54 468  58 678
 546  59 529 116 216 637 525 723 133  52 251 681  75 768 255 568 635 688 686  36 435  86 624 353 483 653  14 163
  53  29 290 581 639 183 542  19 429 674 615 692  31 280 697 456 248 605 508 509 626 151 773 146 115 346 709  44

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.0065e+07us (= 10065ms, 10.065s)
Satisfaction error: 5
Number of search iterations: 3045
Number of local moves: 2541 (including on plateau: 2490)
Number of local minimum: 22 (including on plateau: 316)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 495 759 239 744 614 197 27 665 91 705 714 380 24 484 687 340 122 73 608 679 528 310 22 95 240 515 739 72 => the sum is 11168 rather than 10990
Problem in row 4: 424 596 284 689 598 250 563 582 663 131 130 230 764 497 628 462 103 268 612 657 335 159 87 17 642 128 747 622 => the sum is 11868 rather than 10990
Problem in row 19: 63 386 281 168 485 402 139 417 600 192 132 42 65 102 467 668 269 145 124 540 105 119 533 496 762 118 567 682 => the sum is 9069 rather than 10990
Problem in row 20: 328 120 491 780 199 173 62 756 200 613 445 552 341 685 13 476 558 215 513 244 126 647 677 594 263 443 701 60 => the sum is 11275 rather than 10990
Problem in row 26: 295 45 92 446 179 740 191 463 703 724 586 135 490 712 148 620 651 649 158 448 576 243 536 482 54 468 58 678 => the sum is 11570 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 353 148 692 229 572 741 482 126 545 168 106  88  12 438 489 619  69 592 703 364 457 347 722 143 155 656 215 759
 332 418  36 214 245 639 177 730  66 296 739 517 163  82  20 621 535 579 268 223 249 737 659 195 575 226 743 706
 251  59 727 780 627 310 725   7 608 343 304 620  61   4 139 767 275 668 145 713 270 174 117 432 567 717  81 499
 129  75 663 755 647 479 779 561  58 320 278 675 218 769  68 568 614  93  26  98 265 180 127 534 658 487 599 267
 753 782  21  86 666 688 277  77 372 308 254 319 330 325 510 183 732 311  24 213  74 244 676 632 603 433 623 474
 352 238 156 498 115 484  15 283 328  25 458 233 525 699 541 470 309 161 773 490   6 709 465 731 756 733 381  56
 140 241 273 184 752 622 634 188  52 665 664 208 434 321 231 657  95  18 524 655 596 536 356 652   8  99 605 580
 503 549 543 678  34 264 491 584 682 100 581 539  50  53 672 298 336 557 416 528 547 569  46 513  28 224 570  35
 566 164 448 508 697 105 322 615 637 576 122  89 698 702 612 694 291  72 594 650  55 151  64 456 559 431 643 290
 705 687  60 729 480 170 349 472 211 522 519 530 560 553 137  76 169 761 477  44 469 468 483  29  73 537 533 187
 210 700 217  51 419 496 601 266 527 710 504 772  42 222 441 677 272 227 548 111 598 764 532 760 236 758 295 583
 518 654 516 473 120 538 341 436 690 464 293  16 299  70 742 158 595 338 220 460 669 107 582 305 449 604  13 442
 248 708 133  57 294 740 754 346 684 459 411 565 393 191 259 409 203 515 280 749 382  33 633 234 230 312 494 274
 425 452 447 379 337 342 422 420 417 440 421 444 396 395 430 403 453 437 201 383 397 344 415 428 387 429 152 394
 376 408 400 378 359 384 369 390 426 412 389 365 366 391 374 486 771 385 363 404 360 392 350 288 386 318 373 327
  63 101 285 206 287 695 423 205 546 563  94 463 315 661 500  43  37 526  91 466 552 476 339 711 212 689 691 194
 660 269  65 207 367 781 406 775 113 696   1 313 300 331 667  78 326 153 597 102 108 617 613 680 198 307 193 314
 146  49 600 370 777  90 493 626 588   9  22  47 564 728 282 514 770 289 134  23 635 631 478 586 243 142  27 571
 209  30 784 186 141  96 368 104 505 271 646 297 501 258 554  19 497 445 555 762 228 531 641 292 670 573  83 744
 625 611 642 589 263 144 640  14 181 202 303 260 135 200 724 329 123 736 219 323 720 279 171 551 488 335 671 512
 185 237 240 175 562 333 306 673  80 124 340 721 707 593 242 507   3 734 125 475 167 179 540  79 324  41 109 401
 439 768 361 624 704 435 204 112  62 648 674  48 653 616 348 427 399 190 765 192 726 119 138 136 495  54 414 239
 747 451 371 649  85 130  87 591 159 116 645 481 766 154 550 147 121 443 757 281 176 398 149 462 718 638 471 247
 585 405 160 523 511  40 252 662 221 746 610 132 261 165 118 199 607 150 196 455 618 763 301 506 714 232 172 686
 783 235 542 110 529 302 701 255 644 189   5 253 630 521 556 629 679  39 693 606 128  10 286  38  71 544 750 262
 276 716 351 355 216 284 166 225 450 377 558 609 375 454 407 446 413 636 461 520 778 681 317 316 424  11 712  67
 380 578 748 587 182 574 114 502 362 467 715 735 485 492  32 178 577 250 738 683 358 197 628  45 173 357 246 157
  31 257 509 410   2  84  92 745 776 774 334 651 751 602 345 388 719 685  97  17 402 354 162 256 590 103 131 723

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00594e+07us (= 10059.4ms, 10.0594s)
Satisfaction error: 10
Number of search iterations: 2764
Number of local moves: 2296 (including on plateau: 2248)
Number of local minimum: 27 (including on plateau: 286)
Number of resets: 0
Number of restarts: 0

Problem in row 9: 566 164 448 508 697 105 322 615 637 576 122 89 698 702 612 694 291 72 594 650 55 151 64 456 559 431 643 290 => the sum is 11811 rather than 10990
Problem in row 11: 210 700 217 51 419 496 601 266 527 710 504 772 42 222 441 677 272 227 548 111 598 764 532 760 236 758 295 583 => the sum is 12539 rather than 10990
Problem in row 12: 518 654 516 473 120 538 341 436 690 464 293 16 299 70 742 158 595 338 220 460 669 107 582 305 449 604 13 442 => the sum is 11112 rather than 10990
Problem in row 16: 63 101 285 206 287 695 423 205 546 563 94 463 315 661 500 43 37 526 91 466 552 476 339 711 212 689 691 194 => the sum is 10434 rather than 10990
Problem in row 17: 660 269 65 207 367 781 406 775 113 696 1 313 300 331 667 78 326 153 597 102 108 617 613 680 198 307 193 314 => the sum is 10237 rather than 10990
Problem in row 18: 146 49 600 370 777 90 493 626 588 9 22 47 564 728 282 514 770 289 134 23 635 631 478 586 243 142 27 571 => the sum is 10434 rather than 10990
Problem in row 21: 185 237 240 175 562 333 306 673 80 124 340 721 707 593 242 507 3 734 125 475 167 179 540 79 324 41 109 401 => the sum is 9202 rather than 10990
Problem in row 26: 276 716 351 355 216 284 166 225 450 377 558 609 375 454 407 446 413 636 461 520 778 681 317 316 424 11 712 67 => the sum is 11601 rather than 10990
Problem in row 27: 380 578 748 587 182 574 114 502 362 467 715 735 485 492 32 178 577 250 738 683 358 197 628 45 173 357 246 157 => the sum is 11540 rather than 10990
Problem in diagonal 1: 759 743 717 658 632 465 536 547 650 477 227 595 409 430 391 315 313 22 271 181 673 204 130 511 110 351 578 31 => the sum is 11926 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 581 493 753 121  17 160 661 192 175 565 633  49 751 165 135  14 189 380 702 149 520 688 500 413 527 224 691 542
 401 655 337 156 223 683 289 198  61 544 758 348 382 687 431 221 275  44 703 636 458 187 139 197 728 578 154 517
 559 516 613 598 226  36 261 641 416 748 367 460  54 657 589 468 242 693 741 283 259 784 778 575  95 180 757 638
 264 345  65 417 668 398  42 109 700 365 248 459 659 191 606 595  84  56 642  79 487 453 476 592  27 743 277 745
 266 497 101  69 241 115 474 126 628 388 625 637 583 454 193 508 618 712 271  51 723  16 534  66 729 596 230 539
 574 594 281 650 675 136 771 369 774  88 499  78 501   3 231 211   6 273 726 738 515  25 201 492 597 579 181 222
 362 171 129 299 311 750  94 343 186 377 253 690  13  70 676 590  96 159 536 707 370  80 174 177  11  83 664 182
 124 209  48 470 220 689 759 335 143 317 564 670 256 213  58 315 430  21  71 560 151  73 720 538 375 760 228 530
 585 740 654 400 340 455 349 608 284 173 656 587 448  53 432 357 272 696 157 293 732 179 172 158 418 332 162 298
  52   1 489 698 531 570 680 319 395 716 577 140 773 342 546  77 117 512 190 646  85 379 502  34 467 420 110 622
 765 766  89 234 634 475 208 549 783 524 167 746 406 640 663 184 522 274  87 496 371 619  39 347 674 586 782  45
  55 276 554 545 227 152 483 514 426 330 602 442 214 123 393 428 772 647 245 346 627 644 339 296 381   9 681 239
 308   5 285 666 328 394 504 364 706 643 385 626 169 204 399 491 737 505 408 254 354 405 196  90 755 163 288 358
 292 440 411 677 260 314 327 376 378 329 304 344 421 443 252 521 495 481 219 374 384 717 359 386 397 464 390 235
  41 599 471 185 523 754 216 131 667 572 183 302  22 433 419 630 568 409 617 286 306 203 233 513 217 713 486 291
 352 373 461 736 363 392 415 407 333 485 360 205 490 478 518 301 164 351 338 528 422  62 423 548 297 537 202 449
 632 697 447  12 779 118  40 414 324 318 389 396 127 142 166 262 479 238 457   2 756 730 721 240 770  33 593 708
  24 776  93 526 679 744 270 607  26 130 472 316 145 540  82 439 320 477 210 463 569 620 250 629  97 341 533 612
 473 425 645 562  38 556 207 600  60 178 128 709 488 747 541 438 678 116 462 194 660 104 651 326  46 582 603  20
 361 368 232 742  50  76 648 767 591 781 268 108 686 704  57 780 669 777 694 571 269 444 649 768 246   4 734  18
 200  99 555  59  74 290 665 727 588 775 355 282 601 412 263 451 682 147 452 441 257 402 525 303 258 705 300  72
 404 529 255  35 410 133 551 218 100 498 350 278 310  81 132 722 480 749 558 535  10 752 615 725 652 195 507 206
 215 146 692 550 482 611 103 331 503 724 249 141 639 424 658 122  28 309 125 336   7 735 731 153 621 434 236 685
 287  29  23 251 673 243 113 106 212 111 279 580 711 662 718 244 509 148 684 719 188 605 107 532 161 307 138 624
 695 616 510 469 305 762 763 445 484  47 427 353 547 372 387 563 170  63   8 739 134 436  19 614 168 494 105 295
 701 280 715 294 553  92  37  43 112 120  68 144 403 604 671 356 366 383  31 446  67 312 552 506 573 150 561 456
 653 247 769 119 584 325 429 437 225 114  91 566 176 635 672 435 557 609 391  86 610 199  64 543 237 623  75 519
 764  98 313 450 576 567 631 714 710  30 733 334  15 511 102 267 465 761 265  32 699 137 321 229 466 155 322 323

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00588e+07us (= 10058.8ms, 10.0588s)
Satisfaction error: 10
Number of search iterations: 2399
Number of local moves: 2015 (including on plateau: 1969)
Number of local minimum: 20 (including on plateau: 222)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 559 516 613 598 226 36 261 641 416 748 367 460 54 657 589 468 242 693 741 283 259 784 778 575 95 180 757 638 => the sum is 13234 rather than 10990
Problem in row 4: 264 345 65 417 668 398 42 109 700 365 248 459 659 191 606 595 84 56 642 79 487 453 476 592 27 743 277 745 => the sum is 10792 rather than 10990
Problem in row 7: 362 171 129 299 311 750 94 343 186 377 253 690 13 70 676 590 96 159 536 707 370 80 174 177 11 83 664 182 => the sum is 8553 rather than 10990
Problem in row 8: 124 209 48 470 220 689 759 335 143 317 564 670 256 213 58 315 430 21 71 560 151 73 720 538 375 760 228 530 => the sum is 9847 rather than 10990
Problem in row 11: 765 766 89 234 634 475 208 549 783 524 167 746 406 640 663 184 522 274 87 496 371 619 39 347 674 586 782 45 => the sum is 12675 rather than 10990
Problem in row 19: 473 425 645 562 38 556 207 600 60 178 128 709 488 747 541 438 678 116 462 194 660 104 651 326 46 582 603 20 => the sum is 11237 rather than 10990
Problem in row 20: 361 368 232 742 50 76 648 767 591 781 268 108 686 704 57 780 669 777 694 571 269 444 649 768 246 4 734 18 => the sum is 13062 rather than 10990
Problem in row 21: 200 99 555 59 74 290 665 727 588 775 355 282 601 412 263 451 682 147 452 441 257 402 525 303 258 705 300 72 => the sum is 10940 rather than 10990
Problem in row 24: 287 29 23 251 673 243 113 106 212 111 279 580 711 662 718 244 509 148 684 719 188 605 107 532 161 307 138 624 => the sum is 9964 rather than 10990
Problem in row 26: 701 280 715 294 553 92 37 43 112 120 68 144 403 604 671 356 366 383 31 446 67 312 552 506 573 150 561 456 => the sum is 9596 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 450 260 602 247  17 388 323 273 488 339 591 454 489 148 397 652 606 478 563  42 761 708 117 533 183 151 213 517
 118 755  37 185 194 730  65 474 610 256 165 696 257 252 603 583 227 187  84 645 452 750 505  63 492 330 659 616
 223 473  66 491 369 717 319 186 723 348 589 238 701 154 711 136 222 568 707   7  72 442 687 684 512  97  28 520
 706 123 740 363  99 558 682 467 102 776 601 188 609 325  68 572  15 617 362 635  19 338 293 216 666  94 299 457
  86 104  44 112 678 248 586 584 510  80 393 521 190 737 671 200 262 261 147 383 113 486 516 643 702 629 697 407
 736 699 105 757 741 211 174 562 588 178 110 439 428 774 549 115 372 268  96  87 476 422  29 433  24 605 206 368
 592 570 483  82 482 309 638 241 129 514 649 321 743 681 766 769 751 632 519 254 720 164  46 494 547 619 615  57
 344 145 679   3 622 303 189 543 576 425 688 284 208 611 340 508   8 152 285 122 667 700 594 135 719 582 484  74
 205 573 280 778 331 106 511 228 192 614  78 226 103 504 221 621 767 459 120 212 463 162 289 128 550 567 169 167
 471 513 579 380 631 332 376  60 283 636 641 161 685 623 500 721 158 352 727 536 565  11  23 109  93  47 694  83
 618  13 526 133 134  36 308 255  35  85 447 747  34 302 754 715 548 695 464 689 335 496 546 224 391 274 524 662
 644 599  98 456 146  71   6 728 674  25   4 455 503  21 327 448 116 143 633 449  89 637 172 569 337  16  61 350
 317 229 781 234 690 310 225 197 477  81 114 578 253  39 555 420 214  70 669 259 320 111 175 712  38 668 725 639
 399 444 445 429 356 493 404 446 465 436 432 443 408 364 411 367 394 398 401 409 431  49 358 351 334 346 375 402
 406 410 413 418 421 366 386 400 657 381 414 384 416 365 385  54 382 419 306 342 392 373 316 341 692 415 347 389
 176 127 458 598 625 329 426  27 738 749 703 132 163 560  53 377 709 121 184 664 251  51 745 357 658 553  59 160
 440 620  32 646 240 733 746 525 326 472 734 233 277 207 156 509 656 140 286 137  45 378  75 627 453 265 297 735
 437 276 300 301 753 773 539 650 328 267 315 395 575 675  43 305 171 263 179 499 198 634 291 258 245 779 271 270
 528 131   9 538  69 355 462 199 661 541 150 101 435 336 481 235 470 732 531 480 604 561 333 535 580 760 460 232
 783 654 412 304 220 506 683 387  76 157 239   5 640 722 196 108 663 353 469 714 665 529 485 359  12  52 566  31
 177 731 313 670 716 552 527 417  22 203 501 130  90 515 181 100 626 772  41 556 219 250 651 434 168 551 173 704
 571 244  18 612 597  95 242 710 540 724 479 522 292 423 693 345 126 559 287   1 430 180 673 125 298 653 272 279
 349 324 530 141 507 354 204 744 159 595 438 713 765 142 144 236 360 107 780 246 311 191 153 672 630 502 498 195
 202 676 607 677 490  20 149 182 642 680 237 282 686 691  56 574 314  14 322 739 544 124 752  48 275  73 466 468
 590  64 361 139  40 405 215 343 296  26 312 217  62  92 593 648 784 647 523 655 119 596 587 534 264 705 403 770
  88  55 759 729 497 518 451 762 370 624 771 777 557 581 288  77 532 718 660 487 542 756 628 374 758 281 495 155
 243 782 545 249  30 608 379  10  33 577 193 748 371  79 554 537 307 441 218 266 461 613 209 269 231 210 170 585
  91 396 768 318 295 564 775 390 290 201   2 600  50  67 294  58 230 424 427 475 726 278 742 763 138 166 764 698

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00587e+07us (= 10058.7ms, 10.0587s)
Satisfaction error: 9
Number of search iterations: 2425
Number of local moves: 2024 (including on plateau: 1976)
Number of local minimum: 16 (including on plateau: 244)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 736 699 105 757 741 211 174 562 588 178 110 439 428 774 549 115 372 268 96 87 476 422 29 433 24 605 206 368 => the sum is 10552 rather than 10990
Problem in row 7: 592 570 483 82 482 309 638 241 129 514 649 321 743 681 766 769 751 632 519 254 720 164 46 494 547 619 615 57 => the sum is 13387 rather than 10990
Problem in row 9: 205 573 280 778 331 106 511 228 192 614 78 226 103 504 221 621 767 459 120 212 463 162 289 128 550 567 169 167 => the sum is 9624 rather than 10990
Problem in row 12: 644 599 98 456 146 71 6 728 674 25 4 455 503 21 327 448 116 143 633 449 89 637 172 569 337 16 61 350 => the sum is 8777 rather than 10990
Problem in row 13: 317 229 781 234 690 310 225 197 477 81 114 578 253 39 555 420 214 70 669 259 320 111 175 712 38 668 725 639 => the sum is 10100 rather than 10990
Problem in row 16: 176 127 458 598 625 329 426 27 738 749 703 132 163 560 53 377 709 121 184 664 251 51 745 357 658 553 59 160 => the sum is 10753 rather than 10990
Problem in row 19: 528 131 9 538 69 355 462 199 661 541 150 101 435 336 481 235 470 732 531 480 604 561 333 535 580 760 460 232 => the sum is 11509 rather than 10990
Problem in row 26: 88 55 759 729 497 518 451 762 370 624 771 777 557 581 288 77 532 718 660 487 542 756 628 374 758 281 495 155 => the sum is 14290 rather than 10990
Problem in row 27: 243 782 545 249 30 608 379 10 33 577 193 748 371 79 554 537 307 441 218 266 461 613 209 269 231 210 170 585 => the sum is 9918 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 533  66 262  18 310  78   1 319 405  98 208 378 600 593 295 305  37 638 633  33 197 637 217 358 325 577 551  25
 552 110 711 591 481  83 685  59 223 354 254 573 625 737 227 330 381 263 617 491 783  70 471 716 780 537 244 365
 634 588  51 520 566 396 429 368 639 554 618 207 195 440 497 231  84 331 546  82 119 280 160  43 428  35 157 609
 751 548 200 656 323 620  40 279 142 239 684  57 669 104 134 527 105 645 147 705 327 414 463 145 367 136 509 749
 218 670 169 250 155  31  53 258  58 412  34 742 498 628 293 189 665 356 282 564 221 676 722 434 522 726 712 452
   6 206 352 739  19 644 772  89  96 759 693 740  44 687 660 441 735 654 450  14 679  23 333 513 201  68 525 555
 135 178 677 188 225 455 394 316 362 190  88 161 203 675 623 360 672 721 144 137 616  61 699 117 720 102 162  45
 784 697 242 529 730 603 565 653 599 595 519  69 750 756 655 164 547 232 349 596 253 180 523 559 108 707 496 753
 326 252 499  52 355 411 251 506 468 176 572 320  74 100 103 738 483 342  42 681 283 284 298 562 729   7 311 140
 391 228 339 351 312 313 236  24 733 287 688 234 439 133 343 695 205 553 302 260 447  55  73 714 340 704 329 664
 291 435 112  97 270 241 568 328 457 337 369 532 286 230 774 611 690  76 179 571 543 495 489 511 747 582 748 488
   9 715 663 614 508 607 256 510 357 583 139 297 292 661  26 374 423 315 353 301 317 560 115 728 377 290 363 237
 261 570  77 710 769 415 646 409 334 268 667 516 694 680 713 526 211 604 193  46 541 132 281 210  17 578 610 557
 397 643  81 410 701 385 514 734  29 486 277 269 426 131 407 324 703 402 332  49 462 754 120 388 375 346 590 255
 528 350 413  80 651 425 392 624 321 174  90 493 128 594 451 364 540  39 627 482 456 744 727 199 182 156 376 384
 401 475 380 458 453   8 300 658 484 467 579 359 390 424  15 477 444 406 393 718   3 474 473 379 442 478  65 387
 209  99 741 404 257 763 689 517 265 539 466 544 166 464 485 736 534 696 549 752 758 626 294  93 238 636  16 285
 507 515 531 433 472 524 373 719 470 755  71 101 476  27 114  50 113 454 487 138 584 501 592 344 479 335 601 224
 621 492 530  32 170 171 229 177 760 550 545 150 437 642 494 682 438 181 569 192 761 708  62 123 175 278 361 460
  95 213 580 338 274 724 666 762 574 505 148 383  56 220 445 692 500 563 212 185 399 304 421 448 276 226 538 243
 766  21 683 706 432 416 395 717 461 770 146 446 341 214 630  30 249  28 386 480 398 124 219 768 648 775 151 125
 122 240  60 314 118 288 273 191 575 370 619 275 691 303 271 159 521 248 152 767 490 581 773 306 567 408 668 640
 635 602 106 673 465 556 449 576 731 318 649 777 127 308  10 107 246  54 781 632 129 111 613  72 647  22 247 347
 417  13 606 725 622 587 427 307  91 222 322 652 143 153 641   2 709 245 779 403 183 296  47 198 585 504 502 536
 558 400 650 235 535 184 686 172 662  63 202  92 420 187 518 598  79   5 597 700 612 782 743 443  75 436 141 215
  11 678 561 204 764 745 149 109 116 158 267 629 631 469 698 503 194 732 167  86   4 389 372 671  87 336 586 674
  67 371 348 430  41 154 130 264  36  38 657 216 771  48 272 186 173 776  20 757 126 608 605 659 459 259 165  64
 765 615 366 233  12 163 422 345 542 723 419 778 418 382 196 589 309 431 702 168 299 121  85 289  94 746 266 512

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00583e+07us (= 10058.3ms, 10.0583s)
Satisfaction error: 15
Number of search iterations: 2289
Number of local moves: 1957 (including on plateau: 1916)
Number of local minimum: 10 (including on plateau: 243)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 533 66 262 18 310 78 1 319 405 98 208 378 600 593 295 305 37 638 633 33 197 637 217 358 325 577 551 25 => the sum is 8697 rather than 10990
Problem in row 2: 552 110 711 591 481 83 685 59 223 354 254 573 625 737 227 330 381 263 617 491 783 70 471 716 780 537 244 365 => the sum is 12313 rather than 10990
Problem in row 3: 634 588 51 520 566 396 429 368 639 554 618 207 195 440 497 231 84 331 546 82 119 280 160 43 428 35 157 609 => the sum is 9807 rather than 10990
Problem in row 4: 751 548 200 656 323 620 40 279 142 239 684 57 669 104 134 527 105 645 147 705 327 414 463 145 367 136 509 749 => the sum is 10685 rather than 10990
Problem in row 6: 6 206 352 739 19 644 772 89 96 759 693 740 44 687 660 441 735 654 450 14 679 23 333 513 201 68 525 555 => the sum is 11697 rather than 10990
Problem in row 7: 135 178 677 188 225 455 394 316 362 190 88 161 203 675 623 360 672 721 144 137 616 61 699 117 720 102 162 45 => the sum is 9426 rather than 10990
Problem in row 8: 784 697 242 529 730 603 565 653 599 595 519 69 750 756 655 164 547 232 349 596 253 180 523 559 108 707 496 753 => the sum is 14213 rather than 10990
Problem in row 9: 326 252 499 52 355 411 251 506 468 176 572 320 74 100 103 738 483 342 42 681 283 284 298 562 729 7 311 140 => the sum is 9365 rather than 10990
Problem in row 10: 391 228 339 351 312 313 236 24 733 287 688 234 439 133 343 695 205 553 302 260 447 55 73 714 340 704 329 664 => the sum is 10392 rather than 10990
Problem in row 11: 291 435 112 97 270 241 568 328 457 337 369 532 286 230 774 611 690 76 179 571 543 495 489 511 747 582 748 488 => the sum is 12057 rather than 10990
Problem in row 13: 261 570 77 710 769 415 646 409 334 268 667 516 694 680 713 526 211 604 193 46 541 132 281 210 17 578 610 557 => the sum is 12235 rather than 10990
Problem in row 17: 209 99 741 404 257 763 689 517 265 539 466 544 166 464 485 736 534 696 549 752 758 626 294 93 238 636 16 285 => the sum is 12821 rather than 10990
Problem in row 21: 766 21 683 706 432 416 395 717 461 770 146 446 341 214 630 30 249 28 386 480 398 124 219 768 648 775 151 125 => the sum is 11525 rather than 10990
Problem in row 24: 417 13 606 725 622 587 427 307 91 222 322 652 143 153 641 2 709 245 779 403 183 296 47 198 585 504 502 536 => the sum is 10917 rather than 10990
Problem in row 27: 67 371 348 430 41 154 130 264 36 38 657 216 771 48 272 186 173 776 20 757 126 608 605 659 459 259 165 64 => the sum is 8700 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 462  77 578 507 646 343 259 205 688 593 252 301 558 555 182 579 145  71 388 529 215 482 269 607 161 314 270 754
 768 760 449 140 694 342 526 778 456 213  23 582 623 658  29 665 563  68  76  52 622 284 705  12 727 685 722 200
  42 600 703   3 181 536  50 241 356 413 292 746 134 248 125 428 687 196  22 659 122 433 739 584 701 588 566 595
 210 759 502 681 723  41 103 203 337 776 459 333 639 484 398  49 219 226  75  16 657 500 592  21 660 172 430 725
 250 783  47 377 682 163 294 655 675 111 199 192 664 689 666 651 309 191  64 523 100   1 431 661 644 511 376  81
   6 390 693 608 743 649  44  38 214 656 304  35 228 263 613 332 160 769 568 193 257 692 360 594 626 201 598 156
 137 243 491 267 303 239 604 299 777 561 169 211 728 634 435 442 642 631 399  62 153 504 392 766 230 272 397   2
 763 667  89 557 591  11 128 589 138  36 486 698 280 155 605 258 285 697  48 700 571  14 424 737  43 503  54 375
 180 216 212  40 575 365 654 516 550 255 492 624 574 319 118 548  96 542 179  63 535 538 242 344 494 756 422 541
 135 312 350 620   4  34 691 539  13 530 653 546 513 487 537 501 515 522  25 565 473 556 123 166 279 520 254 527
 621 338 643 569 114 176  30 699 567   5 784 277 405  74  61 736 524 525 678 758  69 246 437 454 453 387 190 206
 441 362 108 439 353 696 714 101  26 748  31 336  10 577 744 235 713 236 617 466 755 348 159 119 297 346 599 468
  94 463 171 564 450 423 586 470 131 476 570 417 403 183 596 383 382 410  15 229 400 234 619 455 551 444 480 391
 609 633 268 715 320 117 775 745 222 729  17   9 742 434 457 702 116 540 741 573 141 506 747 247 204  72 165 733
 395 419 368 409 187 372 393 352 379 411 404 407 389 102 381 374 363 311 552 371 354 373 369 339 730 412 367 707
 553 151 432 721 202 781 261 273 406 695 316 677 349 732 673 276 521 460 663 415 445 130 287 479  45 706 132 648
 322 549 308 328 545 547 330 638 327 326 325 290 300 112 384 773 313 317 334 518 302 767 380 396 245 174 307 533
 629 195 298 749 519 719 490 534 562 616 448 198 106 321 345 209 401 283 510 324 704 167 712 581 757 483  97 347
 282 485 447 237 452 752 443 385 495 289 420  53 464 386 467  66 318 109 323 465 630  70 147 286 499  93 139  83
 770  98 208 143 288 517 340 105 576 220 637 251 120 496  24 315 683 612 710 256 124 157 750 668  85 731 625 481
 635 357 414  65 149 238  55 221 427  67 690 587 716 514 121 378 740 471 113 194 164 724 142 726 416 734 672 260
  78 493 364 146 271 488 185  27 451 669 293 676  92 231 709 628 197 717 249  19  57 162 458 590 152 329 265 580
 720 370 780 531 394 178 751 606 508 186 335 559 148 115  20 110   7 331 753 585 359 708 227 240 275 274 532 253
 291 366 440 262 129 610 662 738 627 144 670 425 772 560 509 150 170  80 735 207 762 266 306 175 602  56  46 189
  59  86 615 127  39 601 426  79 711 461 310 632 497 358 544 233 498 217 640 478 583 645 158 224  73 554 671 650
 355  95  33 469 779 641 402 472  99 154 475  28 223 173 296 264 652 636 421 782 765 436 680 244 126  90 771 429
 611 505 684  37 597 278 489 474  88 543 528 136 281 618 774 614 603 104 674 341 225 686  84  87 438 351  82  58
 572 218 295 679  60 133 305   8 184 107 408 764  32 512 177  91 168 718 418 647 446 361  51 188 477 232 761  18

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00605e+07us (= 10060.5ms, 10.0605s)
Satisfaction error: 13
Number of search iterations: 2316
Number of local moves: 1946 (including on plateau: 1902)
Number of local minimum: 10 (including on plateau: 236)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 768 760 449 140 694 342 526 778 456 213 23 582 623 658 29 665 563 68 76 52 622 284 705 12 727 685 722 200 => the sum is 12422 rather than 10990
Problem in row 8: 763 667 89 557 591 11 128 589 138 36 486 698 280 155 605 258 285 697 48 700 571 14 424 737 43 503 54 375 => the sum is 10502 rather than 10990
Problem in row 11: 621 338 643 569 114 176 30 699 567 5 784 277 405 74 61 736 524 525 678 758 69 246 437 454 453 387 190 206 => the sum is 11026 rather than 10990
Problem in row 12: 441 362 108 439 353 696 714 101 26 748 31 336 10 577 744 235 713 236 617 466 755 348 159 119 297 346 599 468 => the sum is 11044 rather than 10990
Problem in row 14: 609 633 268 715 320 117 775 745 222 729 17 9 742 434 457 702 116 540 741 573 141 506 747 247 204 72 165 733 => the sum is 12279 rather than 10990
Problem in row 16: 553 151 432 721 202 781 261 273 406 695 316 677 349 732 673 276 521 460 663 415 445 130 287 479 45 706 132 648 => the sum is 12429 rather than 10990
Problem in row 18: 629 195 298 749 519 719 490 534 562 616 448 198 106 321 345 209 401 283 510 324 704 167 712 581 757 483 97 347 => the sum is 12304 rather than 10990
Problem in row 19: 282 485 447 237 452 752 443 385 495 289 420 53 464 386 467 66 318 109 323 465 630 70 147 286 499 93 139 83 => the sum is 9285 rather than 10990
Problem in row 22: 78 493 364 146 271 488 185 27 451 669 293 676 92 231 709 628 197 717 249 19 57 162 458 590 152 329 265 580 => the sum is 9576 rather than 10990
Problem in row 23: 720 370 780 531 394 178 751 606 508 186 335 559 148 115 20 110 7 331 753 585 359 708 227 240 275 274 532 253 => the sum is 10855 rather than 10990
Problem in row 24: 291 366 440 262 129 610 662 738 627 144 670 425 772 560 509 150 170 80 735 207 762 266 306 175 602 56 46 189 => the sum is 10949 rather than 10990
Problem in row 25: 59 86 615 127 39 601 426 79 711 461 310 632 497 358 544 233 498 217 640 478 583 645 158 224 73 554 671 650 => the sum is 11169 rather than 10990
Problem in row 28: 572 218 295 679 60 133 305 8 184 107 408 764 32 512 177 91 168 718 418 647 446 361 51 188 477 232 761 18 => the sum is 9030 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 614 267 208 533 345 115 540 635 105 215 570 145  53   2  55 704 228 125 639 265 361 718  59 156 169  23 758 757
 167 248 300 237 297 686 180 711 214 699 689 615 617 471 631  13 721  41  12 217 472 545 731 334 127 766 168  81
 174  67  22 262  89  94 457  36 719 597 295 640 293 776 707 579 266 694 723 705 260  37 374 712 218 703 445  46
 692 281 561 713 698  30 629 291 283  26 288 186  95 108 459 526 109 328 449 325 762 530 448 733 178 289   5 320
 360 268 764 450   1 377 354 409 575 741 511  73 608 209  74 777 505 463 238 688 249  11 675 474 501 485 426  29
  27 481  17 588  96 724 519 700 680 316 610  44 132 685 431 194  58 306 739 230 439 390 332 562 233 184 193 243
 187 454 104 140 773 232 349 647  80 150 245 304 467 662 783 324 487 549 322 512 303 173 191 499 682  66 181 464
 259 339 341 278 506 573 566 299 466 771 437 244 294 752 190 197 572  33 553 657 539 661 497 310  88  99 311 158
 317 498 674 367 204 626 171 205 628 714 743 287 772 211 453 333 161 656 465 406 151 252 529 493 725 660 195 188
 135  10 100 455 535 627 580  72 123 358  75 557 618 144 207 113 222 240 170  86 263 603 623 149 564 447 633 280
 784 256 469 654 595 715 509  85  70 508  18 368 456 486 221 665 616 484 226 761 442 269 129  91 446 102  38 527
 552 729 275 359 282 554 596 496 290  83 429 494 581 477 338 475 458 738 520 693 722 242 412 756 676 120 684 438
 691 162 489 601 555  79 668 495 130 133 613 717 253 563 229 443 461  32   8 571  60 531 550 398 254 270 286 748
 422 399 440 434 410 395 400 381 408 420 460 425 385  49 417 348 421 415 371 382 480 414 416 370 386 392 366 384
 394 411 397  82 372 391 393 427 413 383 401 373 235 720 264 271 428 350 407 369 380 335 351 558 331 376 782 396
  43 636 604 503 346 590 223 118 518 436 644 375 356   3 147 753  68 528 767 309 276 584 697  39 327 522 148 430
  57  28 645 379 683 479 101 524 646 364 770 344 664 681 543   6 538  40 491 432 742 768 274 433 318 548  45 134
 728 560 677 143 172 175 234 213  51 251 258 696 119 565 559 701 192 653 357 106  77 152 569 315 470 740 619 638
 219 781 103 747 363 126  25 137 301 279 198  78 117  54 658 114 667 199  15 669  48 157 765  92 632 336  98 625
 342 671 504  47 153 663 323 389 326 637   4 403 216 166  56 200 763 586 236 583 621 702 227 330 250 649 352 591
  71 378 780 163 607 716 774 110 634 121 111  14 749 652 737 502 365 606 611 732 296  64 257 650 261 585 154 589
 523 710 139 355 122 107  63 482 444 483 314 745 277 255 769 337 679 128 514  31 305  35  24 551 754 620 594 630
 755 578 176  61 224  93 736 272  97 567 160 473 490 182 353 641 746 404 131 424 598 709 536 273  21 142 521 321
 340 112 534 537 468  84 576 751 177  52 544 587 513 189 241 285 307 760 451   9 759 231 302 556 492 225 706 202
 423  65 642 666 308 247 185 201 779 648 124 778 500 343 593 510 599 246 643 179 405 600 212  50 726 210 574 750
 651 329 388 155 419 435 183 612 744 735 220 673 727 402 159 624  19 387 655  87 319 478 672 362  20 690 462 284
 516 670 441 476 708 515 622 775 582 138 734 206 313 488 298 239 292 312 141 546  69 452  62 541 532 164 568 730
 547 602 196 605 659 542  34 517 507 165 525 146  90 695 418 116  42 687 136  16 592 347  76 203 609 577 678   7

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00591e+07us (= 10059.1ms, 10.0591s)
Satisfaction error: 16
Number of search iterations: 2525
Number of local moves: 2157 (including on plateau: 2116)
Number of local minimum: 12 (including on plateau: 255)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 614 267 208 533 345 115 540 635 105 215 570 145 53 2 55 704 228 125 639 265 361 718 59 156 169 23 758 757 => the sum is 9364 rather than 10990
Problem in row 4: 692 281 561 713 698 30 629 291 283 26 288 186 95 108 459 526 109 328 449 325 762 530 448 733 178 289 5 320 => the sum is 10342 rather than 10990
Problem in row 5: 360 268 764 450 1 377 354 409 575 741 511 73 608 209 74 777 505 463 238 688 249 11 675 474 501 485 426 29 => the sum is 11295 rather than 10990
Problem in row 6: 27 481 17 588 96 724 519 700 680 316 610 44 132 685 431 194 58 306 739 230 439 390 332 562 233 184 193 243 => the sum is 10153 rather than 10990
Problem in row 7: 187 454 104 140 773 232 349 647 80 150 245 304 467 662 783 324 487 549 322 512 303 173 191 499 682 66 181 464 => the sum is 10330 rather than 10990
Problem in row 9: 317 498 674 367 204 626 171 205 628 714 743 287 772 211 453 333 161 656 465 406 151 252 529 493 725 660 195 188 => the sum is 12084 rather than 10990
Problem in row 10: 135 10 100 455 535 627 580 72 123 358 75 557 618 144 207 113 222 240 170 86 263 603 623 149 564 447 633 280 => the sum is 8989 rather than 10990
Problem in row 12: 552 729 275 359 282 554 596 496 290 83 429 494 581 477 338 475 458 738 520 693 722 242 412 756 676 120 684 438 => the sum is 13469 rather than 10990
Problem in row 17: 57 28 645 379 683 479 101 524 646 364 770 344 664 681 543 6 538 40 491 432 742 768 274 433 318 548 45 134 => the sum is 11677 rather than 10990
Problem in row 19: 219 781 103 747 363 126 25 137 301 279 198 78 117 54 658 114 667 199 15 669 48 157 765 92 632 336 98 625 => the sum is 8603 rather than 10990
Problem in row 21: 71 378 780 163 607 716 774 110 634 121 111 14 749 652 737 502 365 606 611 732 296 64 257 650 261 585 154 589 => the sum is 12289 rather than 10990
Problem in row 23: 755 578 176 61 224 93 736 272 97 567 160 473 490 182 353 641 746 404 131 424 598 709 536 273 21 142 521 321 => the sum is 10684 rather than 10990
Problem in row 25: 423 65 642 666 308 247 185 201 779 648 124 778 500 343 593 510 599 246 643 179 405 600 212 50 726 210 574 750 => the sum is 12206 rather than 10990
Problem in row 26: 651 329 388 155 419 435 183 612 744 735 220 673 727 402 159 624 19 387 655 87 319 478 672 362 20 690 462 284 => the sum is 11891 rather than 10990
Problem in row 27: 516 670 441 476 708 515 622 775 582 138 734 206 313 488 298 239 292 312 141 546 69 452 62 541 532 164 568 730 => the sum is 12130 rather than 10990
Problem in row 28: 547 602 196 605 659 542 34 517 507 165 525 146 90 695 418 116 42 687 136 16 592 347 76 203 609 577 678 7 => the sum is 10334 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  73 194 537 108 617 225 675 438 141 129 390 126 723 320 713 120 690 128 236 731 648  38 201 293 543 720 476 757
 138 745 472 635 274 626 734 333 401  93 244 655 739 624  74 144 297 276 602 661 681  34  87  56 323 769  92 181
 454  52 189 277 564  21 412 164 697  13 764 388 563 492 751 521 705 101 688 457 340 743 233 733 200 353 446 450
 408 571 604 684  61 754 516   1 286 583  67 611 234 192 695 556 238 222 488 590 294 331 644 279 673 753   2 451
  37 627  90 177 525 329 266  72 746 656 359  81  30 470 443 228 763 535 346 179 367 298 771 630 197 418 193 574
 463 262 343  26 427 599 332 747  80  17 260 495  24 762 127 575 539  46 606 687 641 707 612 561  82 601 519 148
 102 139 666 313 190 278 663  33 147 380 490 766 107  77 631 226 642 718 364 708 510 588 524 406  53 283 676 310
  91 259 664 344 224 341  70 591 665 471 397  79 680 737 111 634 618 477 158 505 565 301 328 767  83 115  36 326
 215 214  25 552 157 778 570 667 546 593 550 587 264 650 285   4  44 580  63 562 730 249 251 755 541 371 121  66
 567 629 429 756 594 478 744 218 456 533 657  59  65  15 544 258 765 615 530 350 484 475 211 153 361 603 221 616
 653 498 735 305 109  50 548 220 442 721 782 473 507 261 372 497 439 461   8 598   3 491  14 481 742 317 149 114
 761 386  96 480 337 724 180 165 512 339 161 452 528   9  64  42 482 660  39 231 592 674 622 508 239 342 585 780
 318 416  45 459 485 551 701 393 434 170 609 430 462 436 608 385 428 444 411  16  76 370 133 679 422 363 640 106
 711 741 288 382 405 433 414 467 773 455 381 357 282 391 636 420 424 683 103  54 230  27 396 410 184 295 203 445
 378 400 595 779 698 160 417 271 542 776 768 379 213 387 394 334 134 159 321 306 186 146 468 119 413 432 784 113
 195  78 269 540 322 207 647 693 621  35 578 304 348 716 247 324 356 246 375 489 702 536  29 596 369 398 116 654
 699 392  22 254 506 171 671 464 395 245 620 263 308 280 232 384 314 374 145 327 354 183 474 715 376 154 504 265
 579 315  94 404 403  23 377  28  75 110  32 672 722  55 559 777 577 307 569 205   7 646 487  57  10 130  41 300
 538 717 335 501 287 719   5 383 349 255 362 637 513 132 558 749 523   6 240 431 360 770 469 600 441 447 678  71
 402 219 486 531 496 527 252 399 284 555 532 185 479 188 140 517 176 700 725 178 227 526 223 199 292 241 605 706
 345 502 316 483 738 368 557 736 173 638 123 250  12 554 458 202 137 662 714 759 365 302 582 191 534 352 336 229
 628  69 619 649 783 573 155 632  60 268 105 586 633 704  48 303  85 112 312 152 760 174 750 117 581 407 136 589
 677 208 518  84  49  62 187 421 694 299 426  11 163 499 355 607 281 584 514 448 389 568  97 270 710 572 748 549
 143 670 639  20  99 272 196 692  51 275 325 125 774 289 691 547 366 296 703 256 553 291 669 168 466 494 511 409
 175 696 351 104 216 658 167 566 253 732 135 290 437 652  40 118  58 217 209 151 243 198 712 373 503 610 500 668
 435 122 689 358 204 509  43 415 347 235 124 729 453 311 182 150 613 522 651 273 419 682 520 560 740  47 338 319
 643  88 425 685 493 131  31 156 614 728 309 248 515 545 775 659  86 529  98 597 169 623  18 172 267 237 576 726
 162 781 449 100 727 423 460 625 206 686 440 752 212 242 257 709 210 330 772  89  95  19 465 142 645 166 758  68

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00589e+07us (= 10058.9ms, 10.0589s)
Satisfaction error: 13
Number of search iterations: 2970
Number of local moves: 2483 (including on plateau: 2439)
Number of local minimum: 28 (including on plateau: 292)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 454 52 189 277 564 21 412 164 697 13 764 388 563 492 751 521 705 101 688 457 340 743 233 733 200 353 446 450 => the sum is 11771 rather than 10990
Problem in row 4: 408 571 604 684 61 754 516 1 286 583 67 611 234 192 695 556 238 222 488 590 294 331 644 279 673 753 2 451 => the sum is 11788 rather than 10990
Problem in row 5: 37 627 90 177 525 329 266 72 746 656 359 81 30 470 443 228 763 535 346 179 367 298 771 630 197 418 193 574 => the sum is 10407 rather than 10990
Problem in row 6: 463 262 343 26 427 599 332 747 80 17 260 495 24 762 127 575 539 46 606 687 641 707 612 561 82 601 519 148 => the sum is 11288 rather than 10990
Problem in row 8: 91 259 664 344 224 341 70 591 665 471 397 79 680 737 111 634 618 477 158 505 565 301 328 767 83 115 36 326 => the sum is 10637 rather than 10990
Problem in row 10: 567 629 429 756 594 478 744 218 456 533 657 59 65 15 544 258 765 615 530 350 484 475 211 153 361 603 221 616 => the sum is 12386 rather than 10990
Problem in row 15: 378 400 595 779 698 160 417 271 542 776 768 379 213 387 394 334 134 159 321 306 186 146 468 119 413 432 784 113 => the sum is 11072 rather than 10990
Problem in row 17: 699 392 22 254 506 171 671 464 395 245 620 263 308 280 232 384 314 374 145 327 354 183 474 715 376 154 504 265 => the sum is 10091 rather than 10990
Problem in row 18: 579 315 94 404 403 23 377 28 75 110 32 672 722 55 559 777 577 307 569 205 7 646 487 57 10 130 41 300 => the sum is 8561 rather than 10990
Problem in row 19: 538 717 335 501 287 719 5 383 349 255 362 637 513 132 558 749 523 6 240 431 360 770 469 600 441 447 678 71 => the sum is 12076 rather than 10990
Problem in row 21: 345 502 316 483 738 368 557 736 173 638 123 250 12 554 458 202 137 662 714 759 365 302 582 191 534 352 336 229 => the sum is 11618 rather than 10990
Problem in row 25: 175 696 351 104 216 658 167 566 253 732 135 290 437 652 40 118 58 217 209 151 243 198 712 373 503 610 500 668 => the sum is 10032 rather than 10990
Problem in row 27: 643 88 425 685 493 131 31 156 614 728 309 248 515 545 775 659 86 529 98 597 169 623 18 172 267 237 576 726 => the sum is 11143 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 687  74 779 228 328  38 536 567 569 736 101 462 630 543 118  93 293  17 727  69 628 363 441  54 740 484 125 560
 130 768 212   8 493 445 783 539 760 153 270 771 204 351 621 763  62 279 564 109 755  86 131  47 127 121 765 673
 304 357  26 726 257 284  27 684 675 187 712 330 303  46 781 289 704 538  53 606 693 182  37 225 649 680 350 285
 162 403 665 518  60 344 524  13 314 639 492 247 206 618 479 213 590 411 529 522 733  68 331 488 611 120 268 422
 531 322 190 641 688 296 698 195 601  56 248 278 532 258 530 644 664 654 100 156 592  12 476 578  39  51 605 395
 234 660 191 640  65 633  71 117   5 742   9 647 631  40 706 311 308 126 730 658 192 280 645 485  44 480 595 745
 272 635 527 194 502 141 369 157 419 552 728 224 544  89 133 776 534 702 648 165 199 576 324 729  14 287 478  72
 714 231 775 379  43 555 638 723  50  36 551 642 370 451 333 181 158 343 515 237 563 241 748 288 335  81 243 566
 583 186  77 456 700  70  34 747 356 134  95  16 739 677 262 711 697 412  24 542 377 432 447 431 558 643 465 119
 380 283 198 144 510 143 105  97 227 457 174 275 103 169 473 183 261 561 512 540 255 528 622 321  31 784  79 554
  73 230 683 777 669 146 591 672 715 475 507 482  18  58 201 414 218 371 707 345  63 773 154 263 497  41 364 483
 107 149 163 741 309 223 193 506 689  85 548 695 713 568 367 106 467 111 535 663  15  19 545 312 661 589 709 202
 454 446 604 415 347 137 433 417 348 376 448 323 401 443 453 459 235 424 416 537 474 406 460 393 239 455  49 398
 408 336  83 438 437 349 463 452 487 464 407 180 778 382 444 405 138 292 396 513 378 429 469 388 341 353 420 360
 366 402 481 362 359 381 337 425 427 496 387 375 339 358 286 373 421 434 394 423 297 525 298 327 291 354 410 662
 681  29 498 329 276 313 413 615 245 571 251  10 271 766 603  59 691 214 559 167 122  87  21 616 731 757 659 436
 135 725 290 636 102 764 185 418  52 207 614 746 751 164 385 573 148 762 471 140 221 254 147 732 217 577 572   2
 315 756 197 250 562 632 600 282 674 124 340 550 391 705 306 701 617  33  99 346 188 634 450  25 754   4 150 305
 372 495 277 152 170  35 743 719 155 273 114 625 637 389 581 607 200  80 472 500 400 767  90 368 516 435 238 580
 593 582 588 249 570 694 166 108 244 442  76 259 171 769 128 557 547 565 266  20 620 584 310 520 274 242 668 178
 574  23 439 521 504 699 517 172 299 222 352 240  94 646  22 505 426 177 338 281  75 546 494 196 718 320 716 656
 477 553 612 409 215 332 220 113 236 667 690 491 653 579 232 626 466 749  78 724 307 523 300  84  30 386  96 142
  91 503 670  57 175 145  67 392  82 703 752 679 428 265 761  55 229 774 326 655 159 161 780 686 295 696 676 139
 264 489  42  98 136 549 744 355 596 651 301 267 216 430  92 556 734 737 319 750 650 710 627 233 599 671 116 317
 608 609 374  66 397 652 685 587 508 173 115 179 440 598 759 256 610 384 160 112 499 613 189 325 519 468 316 334
 692 533 110 720 717 511 383 208 470 623 657 501 294 390 151 318 302 597 176 738 129 104 585 575 399 226 219 586
 735  88 753  64 770 721 205 526 246 404 449   6 132 210 514 253 209 211 168 461 782 365 666 619 252 678  45 458
  48 123 486 772 629 758 260 184 541 342 602 490   1  28 269   3  61  32 708  11 624 722 203 682 509   7 594 361

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00595e+07us (= 10059.5ms, 10.0595s)
Satisfaction error: 8
Number of search iterations: 3461
Number of local moves: 2936 (including on plateau: 2888)
Number of local minimum: 26 (including on plateau: 343)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 531 322 190 641 688 296 698 195 601 56 248 278 532 258 530 644 664 654 100 156 592 12 476 578 39 51 605 395 => the sum is 11030 rather than 10990
Problem in row 10: 380 283 198 144 510 143 105 97 227 457 174 275 103 169 473 183 261 561 512 540 255 528 622 321 31 784 79 554 => the sum is 8969 rather than 10990
Problem in row 21: 574 23 439 521 504 699 517 172 299 222 352 240 94 646 22 505 426 177 338 281 75 546 494 196 718 320 716 656 => the sum is 10772 rather than 10990
Problem in row 23: 91 503 670 57 175 145 67 392 82 703 752 679 428 265 761 55 229 774 326 655 159 161 780 686 295 696 676 139 => the sum is 11401 rather than 10990
Problem in row 24: 264 489 42 98 136 549 744 355 596 651 301 267 216 430 92 556 734 737 319 750 650 710 627 233 599 671 116 317 => the sum is 12249 rather than 10990
Problem in row 25: 608 609 374 66 397 652 685 587 508 173 115 179 440 598 759 256 610 384 160 112 499 613 189 325 519 468 316 334 => the sum is 11535 rather than 10990
Problem in row 26: 692 533 110 720 717 511 383 208 470 623 657 501 294 390 151 318 302 597 176 738 129 104 585 575 399 226 219 586 => the sum is 11914 rather than 10990
Problem in row 28: 48 123 486 772 629 758 260 184 541 342 602 490 1 28 269 3 61 32 708 11 624 722 203 682 509 7 594 361 => the sum is 10050 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 783 704 780   1 166 491 506 267 608 718 278 246 236 197  23 344 214 679 650 275 446 562   6 351 271 593 297 298
 211 759 295 238 226 781 598 641 646 466  96 527 235 455 557  19 651  13 472  58 114 663 183 328  55 505 666 532
 196  89 688  86 703 240 407 450 764 178 283 712 162 657 770 714 757 391 150 643 224 229 566  92  69 249 618 152
 218 323 317 693 534 186 294 403  97 590 131 722 289 410 122 584 354  62 164 634 478 355 514 570 545 685 462 254
 645 180 624 290   7  74 310 644 678 621 329 654  56 307  20 424 502 212 112 664 368 588 596  79 607  94 628 677
 273 125 312 422 402 658 554 717 225  35 504 171 761 331 457 553 471 610  41 159 270  14 537 333 473 583 578 421
 771  72  24 149 662 611 511 640 744 669 263 366 659 139 151 541 765 490 191  33   9 353 137 230 529 251 416 614
 400 564 205 386 779 387 108 279 248 772 304 616  26 563 524 459 380 697 486 440 219 156 673 367 259 140 585 551
 206 492 445 389 293 193 220 420 528 181 775  50 751 711 350 106 683 315 559 157 262 432  42 595 438 379 730 288
 725 520 252 517 423 745 748  99 399 510 574 629 548 619 461  85 231 544 665 680 698  75 145 425 335 763 123 190
 373  37 696 221 182 434 456  30 573 601 469 560 720 482 198 167 201 185 433 499 713 550 415  90 453  10 533 709
  78 485 602 493  93  88 338 488 430  98 684 489 394 188 581 417 571 202 668 286  77 579 276 508 503 467 449 458
 256 443 464 549  59 483 444 441 397 257 447 647 146 622 427 412  43 393 716 442 383 746 204 130 479 546 398  16
  49 784 631  34 612 302 731 222 401 454   2 385 465 535 208 239 195   3  39 497 587 324 215 480 382 285 689 632
  17 158 336 752 245 538 363 498   8 352  65 481 681 405 396 649  38 513 381 609 749 119  83 753 724 374 243 460
 648 360 341 345 737 408 313 332 388 365 773 371 330 299 327 414 660 369 346 347 303 340 362 147 339 319 364 343
 536 232  95 199 135 116 525 292 274 124 726 192 642  54 636 241 691 168 742 419 686 296 390 418 755 721 558 127
 468 308 177  11 723 110 200 710 495 451 705  82 738 216 690  12 176 306 266 281 526 762 269 733 375 637 512  51
 253 626 760 507  57 104  91 778  22 142 623 515  70 741 209 766 361 372 223 594  66 172 769 708  67 575  21 652
 599 695 129 577 428  32 776 516 452 567 144 655 103 739 687 625 349 165 272 179 633 565 701 409 357  36 141 487
 496 476 429 448 411 740 699 227 217 756 463 395 436 247 311 121 291 153  25 378 210 715 597  52 569 521 237 370
 404 250  63 475  84 321 117 111 280 174  87 207 233 758 260  81 115 768 439  64 613 143 728 277 148 702 767   4
 194 732 305 320 556 255   5 334 539 322 750 134 627  40 735 337 203 555 774 743 348 692 160 376 729 242 138 719
  47 113 568 600 540 576 136 169 777 314 617  44 213 518 582 671 377 630 301 694  48 300 509 316 519 268 282 261
 547 234 184 635 494 661 676 736 128  27 356 101 530  80 670 591 561 258 674 552 580 604 318 359 100 431  68 102
 163 120 675 606 754 326 605  31 154 406 126 620 309 589 173 170 189 727 500 542 426 477 638 572 175  61 325 531
 700 437 522 782  46 474  15 287 413 187 284 264 107  28  73 501 603 543 109  45 470  18 615 586 682 118  29 384
 734 672  71 265 639 656 244 228 105 653 132 155 523  60 392 747 358 667 592  76 484 161 342 706  53 435 133 707

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00611e+07us (= 10061.1ms, 10.0611s)
Satisfaction error: 10
Number of search iterations: 2879
Number of local moves: 2454 (including on plateau: 2406)
Number of local minimum: 11 (including on plateau: 272)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 196 89 688 86 703 240 407 450 764 178 283 712 162 657 770 714 757 391 150 643 224 229 566 92 69 249 618 152 => the sum is 11239 rather than 10990
Problem in row 8: 400 564 205 386 779 387 108 279 248 772 304 616 26 563 524 459 380 697 486 440 219 156 673 367 259 140 585 551 => the sum is 11573 rather than 10990
Problem in row 10: 725 520 252 517 423 745 748 99 399 510 574 629 548 619 461 85 231 544 665 680 698 75 145 425 335 763 123 190 => the sum is 12728 rather than 10990
Problem in row 14: 49 784 631 34 612 302 731 222 401 454 2 385 465 535 208 239 195 3 39 497 587 324 215 480 382 285 689 632 => the sum is 10382 rather than 10990
Problem in row 19: 253 626 760 507 57 104 91 778 22 142 623 515 70 741 209 766 361 372 223 594 66 172 769 708 67 575 21 652 => the sum is 10844 rather than 10990
Problem in row 20: 599 695 129 577 428 32 776 516 452 567 144 655 103 739 687 625 349 165 272 179 633 565 701 409 357 36 141 487 => the sum is 12018 rather than 10990
Problem in row 22: 404 250 63 475 84 321 117 111 280 174 87 207 233 758 260 81 115 768 439 64 613 143 728 277 148 702 767 4 => the sum is 8673 rather than 10990
Problem in row 23: 194 732 305 320 556 255 5 334 539 322 750 134 627 40 735 337 203 555 774 743 348 692 160 376 729 242 138 719 => the sum is 11864 rather than 10990
Problem in row 25: 547 234 184 635 494 661 676 736 128 27 356 101 530 80 670 591 561 258 674 552 580 604 318 359 100 431 68 102 => the sum is 11257 rather than 10990
Problem in row 27: 700 437 522 782 46 474 15 287 413 187 284 264 107 28 73 501 603 543 109 45 470 18 615 586 682 118 29 384 => the sum is 9322 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 144  59 548  47 376 189 332 454 121  23 182 236 229 448 101 330 684 473  64 726 179 567 535 757 352 133 411 500
 253 755 164 778  49  53 761 339 166 338 707 245 209 776 559 234 746 111 562 207 554  55 756 311 132 259 760 151
 337 388 706  61 725 683 327 153   6 670 649 763 704 288 381 771 160 582 467 556 283 660 158  77 106 198 558 767
 589  58 309 694 697 256 340 747 105 313 519 460 439 626 301  43 712  70 247 199 595  91 397 561 541 163 606 312
 700 125 155  33 244 252 295  66 617 116 553  22 377 336 727 720 533 689 276 107 677 514 623 115 474 701 269 674
 516 655 495 267 210 654 226 742  15 600 370 137 591 325 469  81   4 497 667 165 599 733 468 329 211 739 200  25
 387 110  16 676 592 481 587  30 695 366  83 351 385 489  20 450 282 499 759 228 185 730 126 212 721 764 616 150
  35 517  82 609 287  88 735 588 586 555 575 142 206 713 305 699 444 343 718 417 538  39  37 527 637 320 183  65
 363  87 659 372 504 681 525 237  71 665 181 524 604 619 522 502  32 571 565  19 350 140  36 520 630   8 357 646
 647 573 118 432 779 191  28 135 658 550 656  79  80  44 641 585 602 219 610 143 424 462 741 284 307 264 170 568
 134 186 680 569 511 470 534 685 480 493 478 593  93 552 240 506 346  86 204  90   2 297 643 479 354 678 566  41
 461 521 490   7 278 477 607 203 476 379 503 117 491 442 423 484 405 436 431 501 430 496 498 453  63  54 419 445
 162 545 621 737  29 205 104 613 373 736 596 296 452 129  40 114 192 202 638 723 526 769 347 407 392 740 235 250
 437 415 393 466 380 408 465 421 404 428 420 425 416 360 401 254 434 375 443 413 402 394 409 384 368  27 399 449
  95 783 324 579 505 318 766 426 389 615 175 364 277 367 220 414 322  34 400 326 349 378 691  13 693 103 528 536
 187 386 174 100 446 123  67 171 666 574 294 317 635 341 772 422  42 762 193 597 768  14 459 537 603 242 672 729
 710 651 335 345 765 124 316 781 531 201 369 263 184 216 492 319 342  74 331 362 122 266 167 612 438 690 682 302
 751 173 223 512 458 515 578  69 239 289 383 139 540 745 601 108 102 608 194  56 640 300 196 653 412 543 692 271
 698 230 782 168 279 355 232 243 310 249 648 705 576 221 195 169 255 398 231 298 716 629 663 147 395 485 433 280
 361  94 285 645 577 146 708 487 265 214 406 523 222 128  52 482 775 333 644 673 714  62 303 374 455 197 475 390
 218 711  99 557 112 542  98 679 774 227 281 581 293  31 472 233 268 625 738 752 176 248 584 251  84 661 188 507
 356 306 532  75 447 773  48 549 157 109 274 456 178 583  97 551 353 634  11 262 304 508 286 594 688 590 260 180
 687 435 753 391 639 518 119 273 636  51 624 632 509  92 213   5 620 744 348 754 148 241 159 675 572  46  21  85
 457 633 451  73 321 598 291 224 154  18 650 770 530 131 652 750 113 152 539 749 136 463 546 127 161 614 246 441
 547 396 686 334  24 758  68 631 748 464  45 440  12 664 715 275 657  78  89 208 225 488 328 717 427 513 261 627
 138 156 580 418 149 358 642 359 732 258   1 622 724 703 177 190 410 618 172 570   9 605 290 734  76 563  17 719
 382 743  60 722 292 702 529 314 344 709 365 120 777  57 731 628 611 217 141 403 510 696 494  10 483 669  38 784
 238 299 270 323 315  72 662 371 272 780   3 668 257 564 471 671 544 560 308 486 429 145  50 130 215  26 728  96

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00589e+07us (= 10058.9ms, 10.0589s)
Satisfaction error: 9
Number of search iterations: 2366
Number of local moves: 2013 (including on plateau: 1965)
Number of local minimum: 16 (including on plateau: 261)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 144 59 548 47 376 189 332 454 121 23 182 236 229 448 101 330 684 473 64 726 179 567 535 757 352 133 411 500 => the sum is 9200 rather than 10990
Problem in row 3: 337 388 706 61 725 683 327 153 6 670 649 763 704 288 381 771 160 582 467 556 283 660 158 77 106 198 558 767 => the sum is 12184 rather than 10990
Problem in row 13: 162 545 621 737 29 205 104 613 373 736 596 296 452 129 40 114 192 202 638 723 526 769 347 407 392 740 235 250 => the sum is 11173 rather than 10990
Problem in row 16: 187 386 174 100 446 123 67 171 666 574 294 317 635 341 772 422 42 762 193 597 768 14 459 537 603 242 672 729 => the sum is 11293 rather than 10990
Problem in row 22: 356 306 532 75 447 773 48 549 157 109 274 456 178 583 97 551 353 634 11 262 304 508 286 594 688 590 260 180 => the sum is 10161 rather than 10990
Problem in row 25: 547 396 686 334 24 758 68 631 748 464 45 440 12 664 715 275 657 78 89 208 225 488 328 717 427 513 261 627 => the sum is 11425 rather than 10990
Problem in row 27: 382 743 60 722 292 702 529 314 344 709 365 120 777 57 731 628 611 217 141 403 510 696 494 10 483 669 38 784 => the sum is 12531 rather than 10990
Problem in row 28: 238 299 270 323 315 72 662 371 272 780 3 668 257 564 471 671 544 560 308 486 429 145 50 130 215 26 728 96 => the sum is 9953 rather than 10990
Problem in diagonal 1: 500 760 198 541 115 468 730 538 19 610 86 405 114 401 367 635 263 383 249 265 679 48 518 321 334 580 743 238 => the sum is 11108 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 250 123 186 733 610 654 205 479 569 712  27 167 464 641 166 122 708 726 435 502 366 229 465 287 520 320 231  93
 751 565  92 267 470  96 601 571  54 413 756 105 268 504 255 416 624 356 705 527 312 333 156  88 252 474 446 533
 184  45 658 160 115 656 777 199 196  72 780  94   7 351 342 500 497 181  19 405 491   4 344 466 577 183 443 279
 530 273 772 725  38 102 686 748  83 275 169 609 724 691 704 614 249 235 185 583 692 519 727 203 238 100 719 735
 221  78 326 408 555  37 230  95   5 659 682 588 529  63 305 161 192 590 277 643 589 677 720 321  15 172 746 622
 548 753  70 106 246 729 576  17 359 616 486 448  55 126 587  24 662 453 256 758  46 307  68 513 103 754 557 195
 125 480 572 499 471 517 631 247 278 559 197 629  32  22  28 541 579 697  34  10   1 722 131 679 764 615 553 377
 353 345 200 752 532 531  52  56  50 546 516  79 778 715 445 300  57 121 253  87 290 757 456 177 773 685 670 414
 328 306  80 329 728 644 478 299 676 315 266 561 482 563 110  71 510 350 597 292 127 535 613 264 633  47 637 763
 248 187 433 528 444 372 524  67 152 507 551 194 651 265  64 503 208 525 580 674 483 723 281 198 150 544 261 673
 189 493 162 109  36 537 174 472 501 743 492 496 694 455   2 476 293 638 744 317 652 489 311 379 599 262 137 138
 282 672 303 626 182 484  81 618 776  43 684 215 117 213 140  12 427 737 418 477 586 620   3 490 512 380 386 506
 451 611 130 423   8 436 438 508 688 415 437 542 514 385 462 441 759 575 767 144 536 454  21 298  69 396  49  33
 384 387 409 440 389 378 439 426 401 404 400 442 399 190 393 367 421 461 403 347 392 358 391 381 406 431 363 388
 368 410 397 449 432 354 369 398 411 434 348 364 340 784 336 349 395 419 402 371 339 310 390 370 373 394 324 360
 420 145 188 600 696  85  74 383 460 596 675 220 362 107 710 295 139 224 494 554 430 713 457 258 730 291 237 447
 605 522 783 202 212 244 296 241 606 124  59 245 309 159 323 703 731 332 667 289 603  39  42 450 509  66 547  11
 702 739  25  75 343 294 526 774 146 640 225 678 158 407 766 701   9  97 650 171 518 628 302  48 101 623  14 630
 422 236 761 543 760 149 671 286 655 112 304  62 488 598  30  35 459 240 207  41 680 782 148 570 762 429 272 288
 505 645 495 636 693 168 297 663 574 269 717 346 271 771 228 270 114 473 319 564  31  89 594 151 211 666  13 217
 135  40 732 585 646 552 740 742 515 233 283 301 280 338 558 745 567 327  16 365 232 660 617 595 549 157 361  23
 741 214 689 173 180 284 219 108 463 154 175 769 550 226 584 775 206 668 201 695 216 331 604 621 132 191 657 164
 143 259 417 335 330 581 308 687 749  26 768 133 653 243 664 251 234 176 458 573 227  18 538 193 276 428 591 562
 592 781 523 209 165 341 313 560  77 376 375 355 706  90 452 639 540 716 556 147 602 113  60 625 325 129 136 487
 750 374 647 179  73 120  98 104 607 498 170 632 334 669 648 204 128 322 178 134 481 254 699 627 475 239 711 635
 661 142 424 155 425 681  76 263 210 163 111 747 619  51 485 593 318 223  91 736 118  99 779 714 116 738  58 634
  82 467 274  61 690 257 545 642 700 770 119 260  53 755 469 568 382  44 721 578 285 141 534 612 468 511 649 718
  20 698 242 683 521 707 566 337  29 316 218 709 153 608 734 314 582  84 357   6 665  86 539 412 352 765 222  65

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00025e+07us (= 10002.5ms, 10.0025s)
Wall-clock time (full program): 1.00612e+07us (= 10061.2ms, 10.0612s)
Satisfaction error: 12
Number of search iterations: 2227
Number of local moves: 1929 (including on plateau: 1884)
Number of local minimum: 12 (including on plateau: 218)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 184 45 658 160 115 656 777 199 196 72 780 94 7 351 342 500 497 181 19 405 491 4 344 466 577 183 443 279 => the sum is 9025 rather than 10990
Problem in row 4: 530 273 772 725 38 102 686 748 83 275 169 609 724 691 704 614 249 235 185 583 692 519 727 203 238 100 719 735 => the sum is 12928 rather than 10990
Problem in row 5: 221 78 326 408 555 37 230 95 5 659 682 588 529 63 305 161 192 590 277 643 589 677 720 321 15 172 746 622 => the sum is 10506 rather than 10990
Problem in row 6: 548 753 70 106 246 729 576 17 359 616 486 448 55 126 587 24 662 453 256 758 46 307 68 513 103 754 557 195 => the sum is 10418 rather than 10990
Problem in row 9: 328 306 80 329 728 644 478 299 676 315 266 561 482 563 110 71 510 350 597 292 127 535 613 264 633 47 637 763 => the sum is 11604 rather than 10990
Problem in row 17: 605 522 783 202 212 244 296 241 606 124 59 245 309 159 323 703 731 332 667 289 603 39 42 450 509 66 547 11 => the sum is 9919 rather than 10990
Problem in row 21: 135 40 732 585 646 552 740 742 515 233 283 301 280 338 558 745 567 327 16 365 232 660 617 595 549 157 361 23 => the sum is 11894 rather than 10990
Problem in row 23: 143 259 417 335 330 581 308 687 749 26 768 133 653 243 664 251 234 176 458 573 227 18 538 193 276 428 591 562 => the sum is 10821 rather than 10990
Problem in row 26: 661 142 424 155 425 681 76 263 210 163 111 747 619 51 485 593 318 223 91 736 118 99 779 714 116 738 58 634 => the sum is 10430 rather than 10990
Problem in row 27: 82 467 274 61 690 257 545 642 700 770 119 260 53 755 469 568 382 44 721 578 285 141 534 612 468 511 649 718 => the sum is 12355 rather than 10990
Problem in diagonal 0: 250 565 658 725 555 729 631 56 676 507 492 215 514 190 336 295 731 97 207 564 232 331 538 625 475 738 649 65 => the sum is 12646 rather than 10990
Problem in diagonal 1: 93 446 183 238 321 68 722 290 292 580 638 427 441 393 784 362 245 225 112 574 742 219 581 165 179 424 467 20 => the sum is 10231 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 656 229 162 316 582  96 598 690  21 390 480 408 681 185 192 511 495  79 734 259  71 543 523 557 298 138 337 759
 755 121 104 114 103 753  12   2 227 500 190 412 303 744 510  77 719 740  51 325 704 737 177 301 533 476 742 558
 391  97 722 624  61 280 180 580  44  47 688 551 491 234 458 360 723 105 763 133  86 335 649  31 451 703 658 545
 747  16 680  57 635 370 300 627   6 700 623 269 775 521  56 446 284 142  60 182 176 449 462 438 665 585 484 235
 567 494  14 265 481 544 679 602 333 600 671 650 754 499  48  49 208 619 625 317  22 662 573 646 466 479 661  23
 608 461 191 238 653 677 708   4 146 599 200 447 168 483 743 423 135 757 605 211 377  55 626 716 379 181  65 134
 606 586  83 694 728 250 514 126 607 432 388 111  25 110 155 636 554  41 115 698 362 587 682 202 283 610 508 297
 127 588 745 738 457 167 559 375 644 194 248 621  76 345 611 267 518  19 764 355 541 507 326  13 563 174 218 230
 340 555 506 122 547 468 178 277 527 548  64 152 575 577 454 318 365 215  45 271 175 676 749 674  95 536 459 522
 273 164 780 455 245 224 553 382 528 769 154 530 342 529 709 404 274 193 493   3  67 715  15 629 633 163 260 504
 414 697 515 568 524  74 270 641 513 244 474 403 512 686 399  72 136 496  29 488 689 505 450  89  66 492 502  42
 486 187 117  80 264 710 752 279 571 106 302 321 634 109 157 501 472 210 572 108 615 299  73 315 591 643 249 542
 240 153 358 670 411  63 726 778 666 489 781  11 101 772 392 467 517 143 520 592 173 766 332 760 702 275 100 631
 430 421 387 405 416 422 372 445 389 378 385 418 381 420 434 123 415 435 516 396 145 393 402 413 441 354 406 448
 664 490 604 642 205 291 774 334 137 444 350 102 124 367 343 758 699 314 322 535 736 204 328 397 159  50 398 219
 118 336 373 252 400  39 344 150 356 320 561  34 429 368 348 353 669 614 714 220 593 584 765 538 331 684 156 341
 526 460 323 779 349 309 237 386 160 170 209 261 594 290 319 550 357 537 552 128 628 364 338 482 651 308 427 296
 425 313 401 130 695 618 256 236 696  87 311 186 206 199 630 453 324 609 683 613 732  10   7 564 761  84 141 620
 189 410 257 534 540  91 616 739 456 286 612 770 660 470 330 741 773 622 125 113 312  93 139 225  20 395 221 251
 711 782 647 207  99 596 437 503 242 212 471 288 531  46 266 339 576 232 304 464 233 228 556 439 198 363 285 735
 783 278 659 366 119 383  37  88 201 247 730 672 217 639 346 731 203 663 195 617 768 107 148 306 140 751 590 384
 329 678  69   9 272 560 179 409 293 718  30 675 223 226 595 196   5 463 546 352 442 376 562 292 497 667  28  33
  98 525 532 640  43 165 359 161 777 574  53  90 727 465 717 578  35 424 149 687 645 417 436 214 452  58 706 263
 246 762 589 693 147 638 351 433 725 305 197 597 169 281  82 289 407 294  70 603 473 183 295 569  85 692 756  59
  54 216 158 487 776 440 241 655 184 750 713 213 253 112 132 254  27 705 673 771  75 222 243 721 549  92 583 691
  36 685  62 144 361 784  68 579 746 172 566 707  26   8 767 469 648 632 239 565 729  32 701 166   1 188 431 478
 131  24 477 276 129 310 519 428 369  52 120 371 570 581 258 394 374 307 509 637  94 287 151  38 268 116 601 498
  40 262 475 485 748 668 171  81 426 657 419 720 443 724 539 231  78 380  17 347 327 654 282 255 712 733  18 652

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00592e+07us (= 10059.2ms, 10.0592s)
Satisfaction error: 8
Number of search iterations: 2410
Number of local moves: 2039 (including on plateau: 1992)
Number of local minimum: 11 (including on plateau: 253)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 567 494 14 265 481 544 679 602 333 600 671 650 754 499 48 49 208 619 625 317 22 662 573 646 466 479 661 23 => the sum is 12551 rather than 10990
Problem in row 12: 486 187 117 80 264 710 752 279 571 106 302 321 634 109 157 501 472 210 572 108 615 299 73 315 591 643 249 542 => the sum is 10265 rather than 10990
Problem in row 13: 240 153 358 670 411 63 726 778 666 489 781 11 101 772 392 467 517 143 520 592 173 766 332 760 702 275 100 631 => the sum is 12589 rather than 10990
Problem in row 21: 783 278 659 366 119 383 37 88 201 247 730 672 217 639 346 731 203 663 195 617 768 107 148 306 140 751 590 384 => the sum is 11368 rather than 10990
Problem in row 22: 329 678 69 9 272 560 179 409 293 718 30 675 223 226 595 196 5 463 546 352 442 376 562 292 497 667 28 33 => the sum is 9724 rather than 10990
Problem in row 27: 131 24 477 276 129 310 519 428 369 52 120 371 570 581 258 394 374 307 509 637 94 287 151 38 268 116 601 498 => the sum is 8889 rather than 10990
Problem in row 28: 40 262 475 485 748 668 171 81 426 657 419 720 443 724 539 231 78 380 17 347 327 654 282 255 712 733 18 652 => the sum is 11544 rather than 10990
Problem in diagonal 0: 656 121 722 57 481 677 514 375 527 769 474 321 101 420 343 353 357 609 125 464 768 376 436 569 549 188 601 652 => the sum is 12605 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 673   4 137 207 466 751  27 615 666  62 621 776 521 444 461 436 397 729 731 523  39 567 357  37 238 136  25 212
   3 778 605 300 398 688 130 373 245 632 475 115 724 451 119 534 674 537 711  59 564 712 277 283 552 649 743 568
 646 500 771  87 583 690 159 687 485 392 551 607  55  85 216 617 150 611 102 151 246  58 702 415 301 713   5 405
 714 696 738 732 173 118  82 285 676 539 110  92 191 585 269 662  16  66 347  71 433  65 348 685 578 677 134 254
 499 210 636 515 737  73 196 705 178 206  95 120 510 502  67  20  43 111  52 187 637 760  21 577 346 638  60 101
 308 183 604 430 237 742 152 306 691 142 644 297 659 668 648 554 192  10 620 470 399 209 661 424 487 619 558 658
 222 287 526 404  49 455 549  15 274 304  18 562  26 709  28 190 595  84 262 627 757 739 462 598 253 529 740 726
  75 773 532 623 457 459  88 536 479 671 445 195 784 354 219 602  70 701 781 672  69  63 770 325 618  56  83 665
 410 513 298 186 735 255 375 694 447 252 264 556 267 249 167 586 484 704 423 104 363 600 588  99 553 418  22 378
 717 476 540 235 240 205 157 599 179 557 575 497 654 135 527 198 774 103 163 460 596 279 775 608   9 168 440 124
 153 280 116 177 498 106 625 496 194 733 275 407  72 133 765 481  94 762 233 155  96  89 140 126 753 144 512 508
 108 663  33 719 518 160 572  76 483 670   1 342 215 232 656  86 344 227 590 647 389 333 393 768 319 228 730 488
 471 417 271 601 175 362 443 213 555 141 127 422 328 494 758 504 350  57 473 550 400 519 635 244 544 218 352 366
 535 364 431 528 425 429 428 516 409 353 408 310 456 266 386 469 257 368 414 282 314 250 587 380 295 434 309 387
 419 581 327 396 761  38 340 146 316 312 427 692 525 382 331 448 203 435 643  14 650 441  45 493 421 426 754  24
 391 747 361 239 505 260 394 317 241 311 291 349 722 689 343 359 234 370 367 259 744 355  23 603 437 288 693  98
 107  11 631  79 477 640  35 184 610 145 261 707 626  81 334 614 337 736  48 616 559 522 390 174 236 669  54 710
 323 286 723 569 242 411 383 230 642 645 305 149 105 759 189 718 566 211 188 265 224 442 128 721 412 132 358 664
 639  47 452 446 214 576 217  46 432 270 628 509 281 258 372 112 545  77 541 381 290 725 697 467 612 336 752  68
 272 185 193 749 351 256 597 169 376 296 782 324 468 226 531 511 699 420  51 302 202 533 503 113 777 695  64 345
 655 780 289   2 117 633 667 772 377 594 764 148 547 251 613 318 278 395  30 750 162  34 374 748 651 171 247 767
  74 507 329 131 307 571 657 439 766 561 143 158  50 565  32 335 720 458 543 480 486 172 624 199 122 675 530 356
 181 416 161 154 164 138 506 769 681 450 574 292  41 273 465 341 727 591 679 320 123 728  80 121 589 403 755 268
 563  42 652 303 180 684 708 100 114  29 147 715 464 582 384 322 542 622 449 339 593 139 609  17 474 653 243 321
 678 660  19 584 706 360 524  40  61 248 580 489 379 176 299 478 332 263 284 741 453 204 200 680  78 220 313 369
 746 293 208 197 517 592 560 438 182 231 385 221 413 482 538 294 641 492 682 491 514 401   7 402 201  91 165 606
 315 125 371 634 745  12 703 490 223 698 338 156 406 276 700  31  97 520 454 388 463 579 365 630  44 109 570 548
  93 166  36 763  13 326 716 734   8 546 756 783 501 683 573 170 629 330 129 686 225 472 229  53  90 495 779   6

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00666e+07us (= 10066.6ms, 10.0666s)
Satisfaction error: 11
Number of search iterations: 2726
Number of local moves: 2300 (including on plateau: 2255)
Number of local minimum: 18 (including on plateau: 264)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 673 4 137 207 466 751 27 615 666 62 621 776 521 444 461 436 397 729 731 523 39 567 357 37 238 136 25 212 => the sum is 10858 rather than 10990
Problem in row 2: 3 778 605 300 398 688 130 373 245 632 475 115 724 451 119 534 674 537 711 59 564 712 277 283 552 649 743 568 => the sum is 12899 rather than 10990
Problem in row 4: 714 696 738 732 173 118 82 285 676 539 110 92 191 585 269 662 16 66 347 71 433 65 348 685 578 677 134 254 => the sum is 10336 rather than 10990
Problem in row 5: 499 210 636 515 737 73 196 705 178 206 95 120 510 502 67 20 43 111 52 187 637 760 21 577 346 638 60 101 => the sum is 8802 rather than 10990
Problem in row 6: 308 183 604 430 237 742 152 306 691 142 644 297 659 668 648 554 192 10 620 470 399 209 661 424 487 619 558 658 => the sum is 12572 rather than 10990
Problem in row 8: 75 773 532 623 457 459 88 536 479 671 445 195 784 354 219 602 70 701 781 672 69 63 770 325 618 56 83 665 => the sum is 12165 rather than 10990
Problem in row 11: 153 280 116 177 498 106 625 496 194 733 275 407 72 133 765 481 94 762 233 155 96 89 140 126 753 144 512 508 => the sum is 9123 rather than 10990
Problem in row 17: 107 11 631 79 477 640 35 184 610 145 261 707 626 81 334 614 337 736 48 616 559 522 390 174 236 669 54 710 => the sum is 10593 rather than 10990
Problem in row 21: 655 780 289 2 117 633 667 772 377 594 764 148 547 251 613 318 278 395 30 750 162 34 374 748 651 171 247 767 => the sum is 12134 rather than 10990
Problem in row 25: 678 660 19 584 706 360 524 40 61 248 580 489 379 176 299 478 332 263 284 741 453 204 200 680 78 220 313 369 => the sum is 10418 rather than 10990
Problem in diagonal 1: 212 743 713 578 577 661 739 69 104 163 762 344 504 386 382 722 707 305 270 376 772 657 138 180 584 208 125 93 => the sum is 12074 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 402 127  86 447 279 410 652 193 117  15 720 500 495 512 321 581 466 469 251 341 427 316 590   1  51 120 168 757
 709  58 433 460 694 132 300 265 270 645 228 246  36 659 740  89 280 759 172  56 504 743  68 312 459 514 733 426
 243 541 722 259  64 515 170 774 441  72 438  54 628 155 197 135 237 102 653 485 746 650 715 317 380 128 471 134
 143 593   6 101 256  69 712 309 565 649 126 686 584  12 699 468 698 142 153 131 576 502 568 338 682 700   4 518
 661 359 323 458 665  47 603 674 777 310  60 773 240 293 442 461 252 174  61 457  28 334 695 336 771  95 238 403
 470 180 157 618 489 760 297 527 348  59 175 629 292 558 160 169 214 291 404 604 609 125 597 423 409 569 225 632
 529 621 118  38 556 449 637  57 599 708 634 721 109 748 119 384 731 276 601 647  55 595 633  10 230 580 611 267
 148 398 671 448 627 464 486  13 465 625 412 282  85 179 551 218 646  19  22 432 572 687 235 494 732 273 656 150
 242 484 226 612 284 199 555 392 552 476 327 496 573  83 445 202 413 547 130 492 683 755 454 158 166 217 487 340
 642  33 232 472 509 308  40  29 756 538  39 164 570 177 275  32  24 784 725 718 208 557 673 734 254 724 606 167
 467 436 615 596 352 207 662 313  62 247 681 524 704  84 684  90 462 110 106 478 257 123 490 752 519 311 124 534
 105 350 592 554 161 122 191  46  21 156 260 479 744 764 137 583 499 440 482 726 703 480 508 262 113 780 635  97
 562 112 535 253 173 747 266 564 664 719 261 192 363 220 244 450 737 660 342 183 185 222 329 640 571 216 539  41
 396  78 419 418 399 375 443 430 395 387 389 370 386 415 379 420 453 385 431 378 401 437 390 406 421 439 383 367
 393 579 397 121 772 234 349 382 289 353 591 391 365 344 377 394 405 369 417 368 233 346 372 705 422 315 347 360
 330 736 332 536 366 354 631 531 331 376  82 324 364 381 337 783 357 328 751 388 269 325 303 356 144 358 278 339
 507 227 301  93 133 630 100 145 181 741 692 318 691 271 701 644 302 577   5 651 258 434  26  42 255 600 689 728
 335  50 351 171 298 455 151 672 477 444 497  30 187 626 550 533 530 290 730  67 488 561 711 560 326 138 245 517
 613 714 322 710 617 178 707 451 215 288 184 463 475 416  63 545 203 114 272 559 304  73  17 205 587 248 750 697
 188 277 776 782  37 582 362 610 239 103 224 190 525 598 299 287 129 648 411 210 586  20 408 575 623 542 285 474
 735 506 159 314 522  66 429 194 657 294 345 729 766  71 139 186 510 658 206  44 229 221 189 636 678 676 141 690
 758 295 753 107  98 361 146 473 696   9 505 165 675 424 250  88 677 567 249 503 219 201 765 670 446 425 373  92
  27 745 501  76 483 521 481 111 195 602 663 666 333 456 553 306  18 620 643 286 668 407 176  80 588 116 578  91
 374 688 115 607 182 528 513 594 727 200 147 154 212  48  65 680 149 204 770 763 754 655 546 511  34 452 211 622
 589 343 563  45 775 526 263 274  77 537 781 540 241 355 566 716 769 723 702  70  31  53  11 320 163  52 414 491
 152  87  99 669  25 371   2 738  35 428 544  49 223 717 639 616 608 498 614 667 767 281 209 523 104 641  79 605
 196 624 693 761 654 638 574 516 307 778 585 236  81 685 296 768  23  96 679 283  94 779   7  75 319 213  14  16
  74 749 493 264 520 742 268 713 532 231 400 619  43 739 762 162 198 140   8   3 136 108 305 549 543 548 706 435

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00771e+07us (= 10077.1ms, 10.0771s)
Satisfaction error: 5
Number of search iterations: 2905
Number of local moves: 2457 (including on plateau: 2406)
Number of local minimum: 21 (including on plateau: 270)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 402 127 86 447 279 410 652 193 117 15 720 500 495 512 321 581 466 469 251 341 427 316 590 1 51 120 168 757 => the sum is 9814 rather than 10990
Problem in row 3: 243 541 722 259 64 515 170 774 441 72 438 54 628 155 197 135 237 102 653 485 746 650 715 317 380 128 471 134 => the sum is 10426 rather than 10990
Problem in row 7: 529 621 118 38 556 449 637 57 599 708 634 721 109 748 119 384 731 276 601 647 55 595 633 10 230 580 611 267 => the sum is 12263 rather than 10990
Problem in row 17: 507 227 301 93 133 630 100 145 181 741 692 318 691 271 701 644 302 577 5 651 258 434 26 42 255 600 689 728 => the sum is 10942 rather than 10990
Problem in row 24: 374 688 115 607 182 528 513 594 727 200 147 154 212 48 65 680 149 204 770 763 754 655 546 511 34 452 211 622 => the sum is 11505 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 778  49 101 718 687 456  39 727 439 558 165 578 323  80 334  28 492  79  48 159 122 240 389 555  87  20 504 751
 713 757 783 781 752  89 598 633 335  46 209 315 148 401 512 431 481 608 162 470 621 629   8 574 658  11 664 220
 297 678 724 206 158 779 509 199 362 584 372 140 586 730 604 208  25   1 572 590  64  73 383 245   5 721 619 556
 276 265 310 698  10 734 408  85 103  45 463  13 731 269 665 521 600 766 708 710 251 198 719 247 634 577 254 437
 280 722  55 637 661  78 689 204  83 743 537 774 595 631 772 270  43 110 175 191 132 424 744   7 694 176  98 465
 378 642 179 585 171 656 134  29 780 250 770 547 397 630 119 573 709 651 534  12 454 359 620  15 450 471 568 453
 682 130 474 177 183 653 614 308 241 717  69 256 494 354 173 765 623 545 434 571 216 597 769 373 185 761 523   9
 407 112  81 493 422 735 712 579 149 381 705  56 266 518 733  16 284 740 151 576 565  18 400 467 374 218 236 596
 152 394 189 181 385 197 775 580 550 306 430 688 275 136  66  60 672  92 644 569 141 628 649 736 468 357 488 182
 168 546 375 725 553 539 379 750 391 260 498 207 113 457  52 107 303 668 477 502 510 519 505 226 118 235 696 111
 202 511 133   6 566 626 486 452 723 704 475 131   3 675 738 142 402 526  57 121 538 506 253 755 225 147 444 443
 544 363 295 522 411 541 200 441  26 109 258 432 115 365  77 473 398 299 314 697 316 333 605 413  27 410  86 487
 641 219 242 469  58 548  74 777 654 517 603 227 415 671 277 420  93 716 756 416 691 298 229 520 759  40 476 624
 458 540 135 345 627  34 679 405  91 714 125 213 414 462 386 312 706 339 346 137 423 514 501 352 331 513 143 745
 507 406 763 172 302 433 307 387  32 262 693 632 636 380 360 426 169 351 429  53 105 144 239 602 461  61 370 228
 263 257 528 746 203  41 212 194  36 464 154 669 367 440 536 395 742 527 223  31 217 673 543 221 592  62 692 499
 557 328 399 321 338 336 324 279 329 343 326 224 309 480 332 376 283 337 293 647 773 349 318 304 670 784 341 290
 145  14 666 542 776  47  23 484 123 720 300 681 768  42 655 368 771 288 610 108  24 737 466 445 741 564 278 117
 233 663 390 170 344 305 106 291 563 726  97 342 560 561 530 617 232 588 259 355 184 319 508 702 252 729  17 347
 760 264 711 393 640 361 186 690 255 330 648 325 272  96 436 551 377  99 102 215 657 281 311 616 418 438 607 222
 320 237 442 313 449 483 754 201 497 287 425 384  19 120 273 606 124 150 404 591 214 167 403 187 421 667 581 139
 532 231 659 282  65 160 190 516 599  71 753 301 196 163 472 524 268 451 728 767 455 127 114 612 645 707 164 238
 211 613 601  54 715 317 261  84 639 210 234 193 695 161  95 703 417  50 192 188 350 758  88  76 593 448 529 392
 166 782 478 685 157 340 652 515 680 156   2 747 549 748 285 248 371 419 699  68 446 701 271  37  94 128 246 677
 353 104 396  75 289 178 660 676 495 286 155 582 382 583  44 683 618 700 274 622 739 435 126  72  22 638 153 650
 244 562  51 459 533 412 428  63 749 294 587 243  33 327 575 482 138 625 552 594 764  21 129 503 525  82 646 369
 427 116 635  30 531 180 491 174 496 460 348 611 686 146 567  70  90  35 489 674 609 554  38 366 249 490 500 684
 296 485 195 205   4 732 100 267 570 447 589 479 643 364 322 615 559 230 358 356 409 388 662 762 292 535  67  59

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00617e+07us (= 10061.7ms, 10.0617s)
Satisfaction error: 15
Number of search iterations: 2560
Number of local moves: 2160 (including on plateau: 2118)
Number of local minimum: 20 (including on plateau: 243)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 778 49 101 718 687 456 39 727 439 558 165 578 323 80 334 28 492 79 48 159 122 240 389 555 87 20 504 751 => the sum is 9506 rather than 10990
Problem in row 2: 713 757 783 781 752 89 598 633 335 46 209 315 148 401 512 431 481 608 162 470 621 629 8 574 658 11 664 220 => the sum is 12609 rather than 10990
Problem in row 4: 276 265 310 698 10 734 408 85 103 45 463 13 731 269 665 521 600 766 708 710 251 198 719 247 634 577 254 437 => the sum is 11697 rather than 10990
Problem in row 6: 378 642 179 585 171 656 134 29 780 250 770 547 397 630 119 573 709 651 534 12 454 359 620 15 450 471 568 453 => the sum is 12136 rather than 10990
Problem in row 7: 682 130 474 177 183 653 614 308 241 717 69 256 494 354 173 765 623 545 434 571 216 597 769 373 185 761 523 9 => the sum is 11896 rather than 10990
Problem in row 12: 544 363 295 522 411 541 200 441 26 109 258 432 115 365 77 473 398 299 314 697 316 333 605 413 27 410 86 487 => the sum is 9557 rather than 10990
Problem in row 13: 641 219 242 469 58 548 74 777 654 517 603 227 415 671 277 420 93 716 756 416 691 298 229 520 759 40 476 624 => the sum is 12430 rather than 10990
Problem in row 15: 507 406 763 172 302 433 307 387 32 262 693 632 636 380 360 426 169 351 429 53 105 144 239 602 461 61 370 228 => the sum is 9910 rather than 10990
Problem in row 16: 263 257 528 746 203 41 212 194 36 464 154 669 367 440 536 395 742 527 223 31 217 673 543 221 592 62 692 499 => the sum is 10527 rather than 10990
Problem in row 18: 145 14 666 542 776 47 23 484 123 720 300 681 768 42 655 368 771 288 610 108 24 737 466 445 741 564 278 117 => the sum is 11503 rather than 10990
Problem in row 20: 760 264 711 393 640 361 186 690 255 330 648 325 272 96 436 551 377 99 102 215 657 281 311 616 418 438 607 222 => the sum is 11261 rather than 10990
Problem in row 21: 320 237 442 313 449 483 754 201 497 287 425 384 19 120 273 606 124 150 404 591 214 167 403 187 421 667 581 139 => the sum is 9858 rather than 10990
Problem in row 23: 211 613 601 54 715 317 261 84 639 210 234 193 695 161 95 703 417 50 192 188 350 758 88 76 593 448 529 392 => the sum is 9867 rather than 10990
Problem in row 24: 166 782 478 685 157 340 652 515 680 156 2 747 549 748 285 248 371 419 699 68 446 701 271 37 94 128 246 677 => the sum is 11347 rather than 10990
Problem in row 27: 427 116 635 30 531 180 491 174 496 460 348 611 686 146 567 70 90 35 489 674 609 554 38 366 249 490 500 684 => the sum is 10746 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  96 579 777 514  16 551 550 158 714 259 584 549 727 180  67 629 119 191 685 329 222 720  66  89 764 131 218 506
 162 342 113 189 671 267 326 555 689 684 639 177 600 611   2 208 455  92 606 771  82 124 466 202 487 155 643 672
 285 782 258 212 722 328 597  34 197  97 763   5 593 337 298 215 234 539 523 204 734 205 511 179 136 619 356 129
 547 638  94 731 134 577 568 311  42 495  58 310 220 269 294 704 465 713 699 122  80 435 705 451 293 614  44 377
 226 528 276 228 677  18 674  74 548 353 580 274 501 185 161 561 604  91  57 251  12 109 556 442 698  70 296 236
 533  65 420 595 651 472 516 618 169 423 594 607 623 645 118  24 187 216 144 469 437 708 620 652  55  39  56 334
 383 151 123 515 505 102 156 101 398 196 227 710  31 261 756 518 160 711 500 250 345  85 750 316  19 264 566 631
  86 585 636 692 174 203 141 146 244 571 243 275 300 569 201  25 602  40  69 376 313 295 656 485 583 622 306 405
 712 554  23 270 292 431 745 765 320 696  10  41 241 647 163 498 184 573 432 467 601 633 299   3 538 238 331 283
  79 749 693 591 780 348 457 565 282 702   8 728 521  63 223 752 143 543 324 637 570 477 648 374 654 723 724 507
 576 682 578 658 312 725 242 246 775 530  29 103 545 149 540 368 776 612 262  72 403  75 335 364 737 517 178 452
 490 454 484  33 219 575 229 694 265 322 754 479  99 697 572 481  43 626 464 453 255 416 166 210 525 627  78 280
 461 148 448 443 450 417 193 410 526 440 438 418 412 436 434 564  95 400  53 406 430 424 478 171 445 446 304 700
 369 419 404 375 433 409 468 361 422 439  46 380 385 357 509 458 390 421 408 389 386 349 429 399 391 401 414 379
 365 268 378 373 344 441 346 370 402 598 587 411 327 392 363 397 690 388 338 358 387 372 615 120 381 347 366 266
 287 384 767  73 317 367  48 352 519 214 552 213 183 321 553 340 784 562 590 715 695 355  28 707 588  21 362  93
 628 281 305 354 581 138 524 686 586 778 126 278 673  83 350 289 395 759 427 117 644 279 396 168 273 470 207 195
  35 286 666 231 341  87 359 582 678  32 659 482 239 630 502 247 589  36 176 302 753  76 742 736  50 315 599 560
 371 235 164 747 393 198 650 339 153 130 290 772 766 770 668 114 142 447 746 330 473 522 107 491 232 497  77   6
 513 394 248 252 486  59 194 541 718 632 425 624 307  30 621 483 471  13 199 494 475 206 291 532 657 132 709 284
 719 108 237 125 605 625 781  60  98  22 667 691 200 729 444  90 499 641 192 240  81 655 110 496 592 167 783 333
 664 116 253 150 170 510 683 774  51 360 743 609 139 263 332 732 309 257 413 534  37 616 249 256 245 190 635 137
   4   9 717 779 529 106  20  27 474 735 182 751 100 111 675 233 773 104 449 557 663 559 463 665 133 761 186 225
 669 660 748 535 127 760 159 512  47 503 128 211 456 488 706  88 343 112 531 733 520 762 323 610   1 574 755 426
 221 145 135 172 217 297 721 209 716 336 758 537 314  11 603 768 288 670 608  26 646  45  64 563 157 542 741 480
 744 154 536 676 649 613 303 308  54 254 476 121 260 739  52 544 175 301 382 703  38 662 224 351 489 740 271 680
 493 634 492  62 188 679  15 730 738 140 319 173 567 459  14 152 757 504  71  68 527 596 546 681 460 115  84 726
 272 640  17 415   7 687 325 462 165  49 105  61 661 558 769 508 318 428 642 617 181 230 147 277 407 653 701 688

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00598e+07us (= 10059.8ms, 10.0598s)
Satisfaction error: 10
Number of search iterations: 2855
Number of local moves: 2434 (including on plateau: 2387)
Number of local minimum: 17 (including on plateau: 279)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 285 782 258 212 722 328 597 34 197 97 763 5 593 337 298 215 234 539 523 204 734 205 511 179 136 619 356 129 => the sum is 10092 rather than 10990
Problem in row 5: 226 528 276 228 677 18 674 74 548 353 580 274 501 185 161 561 604 91 57 251 12 109 556 442 698 70 296 236 => the sum is 9286 rather than 10990
Problem in row 7: 383 151 123 515 505 102 156 101 398 196 227 710 31 261 756 518 160 711 500 250 345 85 750 316 19 264 566 631 => the sum is 9730 rather than 10990
Problem in row 8: 86 585 636 692 174 203 141 146 244 571 243 275 300 569 201 25 602 40 69 376 313 295 656 485 583 622 306 405 => the sum is 9843 rather than 10990
Problem in row 10: 79 749 693 591 780 348 457 565 282 702 8 728 521 63 223 752 143 543 324 637 570 477 648 374 654 723 724 507 => the sum is 13865 rather than 10990
Problem in row 11: 576 682 578 658 312 725 242 246 775 530 29 103 545 149 540 368 776 612 262 72 403 75 335 364 737 517 178 452 => the sum is 11841 rather than 10990
Problem in row 19: 371 235 164 747 393 198 650 339 153 130 290 772 766 770 668 114 142 447 746 330 473 522 107 491 232 497 77 6 => the sum is 10830 rather than 10990
Problem in row 22: 664 116 253 150 170 510 683 774 51 360 743 609 139 263 332 732 309 257 413 534 37 616 249 256 245 190 635 137 => the sum is 10427 rather than 10990
Problem in row 24: 669 660 748 535 127 760 159 512 47 503 128 211 456 488 706 88 343 112 531 733 520 762 323 610 1 574 755 426 => the sum is 12487 rather than 10990
Problem in row 26: 744 154 536 676 649 613 303 308 54 254 476 121 260 739 52 544 175 301 382 703 38 662 224 351 489 740 271 680 => the sum is 11499 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 783 226 742 619 360 513 769 698 685 164 643 725 768   3  95 703 142  46 583 358 702 728 767  24 294 247 701
 439 181 173 278 208 779 680  93 261  38 355 163  67 469 138 629 498 265 693 466 150 279 524 499 262 673 718 535
 385 200 716 647 704 533  83 246 650 297 679 369 545 330 655 555 316 124 541 300  60 292 661  18 579 755 654 169
 538 105 754 258 126 243 515 110 443 122 664 692 117 387 235 312  48 699 274 345 539 509 544 506 674 112 645 474
 610 256 510 665 576 241 102 696 637 776 128 771  44 571  72  97 210  71   1 622 632 756 127 644 228 672 223  52
 740 656 166 577 349 582  57 207 382 745 144 604 503 296  53 263 130  54 318 149 526 630 594 753 329 146 436 601
 617 109 648 590 519 336  58 694  21 595 730 636 568 537 347 253  20 575  79 611 193 581 175 140 245 371 586 251
  63 540 397 143  27 584 111 120 620 116 565  77 774 145 585 219 564 616 557 119 534 689 290 531 710  68 763 463
 236 377 497 518 625   2 751 657 714  75 252 357 249 151 777  81 606 547 593 508 301 137 612 635 752 560  59 148
 170 596  45 780 750  69 626  28  62 291 522 589 663 662 549 361 359  13 516 668 623 342 271 374 602 670 599 272
 338 461 335 282 724 687 254 147  85 720 480 607 212 546 270  41 215 494  88 691 500 760 260  26 135 189 641 248
   9 455 428 437  76 478 184 479 485 476 405 530 517 159 438 477 404 454 471 639 427  42 481 446 431 205 467 490
 440 214 227 447 512 419 293 464 458 456 406 154 429 459 411 473 453 224 448 452 421 434 416 433 395 231 422 399
 460 426 412 420 425 415 384 353 393 418 400 423 450  17 391 378 379 424 403 413 352 402 441 381 444 362 407 417
 388 364  98 401 101 492 370 542 772  50 621 182 372 410 225 671 326 221 649 761   8 363 764 328 309 608 319 275
 646 660 136 203 675 700 781 743 493 651 232  61 295 288 598 507 108 172 327 735 521 239   4 706  96 153 160 100
 340 652 307 317 548 341 321 286 366 343 333 320 315 726 305  99 597 217 659 334 356 373 322 176 561 765   6 705
 190 398 567  86  70 311 331 339 562 234 264  39 152 681 118 739 551 666 600 178 465 432 283 408  31 240 475 155
 188 678 267 280 543 757 259 529 165 255 129 614 131 709 746 139 281 414 376  43 134 104  10 683 435 233  33 324
  34 344 747  87  55 723 523 502 237 495 717  66 113 230 284 559 676 532 177 211 156 125 483 346 766  56 501 449
 168 276 669 216  64 213 628 187 733 220 640 250 732 257 487 123 556 390 587  40 569 472 731 186 470 525 302 299
 688 514 351 736 734 195 171 609 161 552 238 266 684 323 202 762 749 738 727 536  14 132 563 520 653 578 306 491
 677 566 287 167 218 191 192 588 348 682 605 204 528 457 634 695 697 707  51   5 201 573  47 592 729 484 365 386
 737 722  15 511  49  92 719 367 115 380 770  80 273 222 686 504 773 721 183 198 488 430 196 199 496 482  78 375
 303 314 627 468 775   7 554  65 570 572  89 744 591 658 332 708 505 758 759 289 778 633 304  94 242 489 715 603
 553  82  29 354 445 141 308 631  22 174  30 442 244  35 558 298 157 209  23 638 741  84 389  37 197 185 206 409
 158  36 782 368 462 613 642 310 269 180 396 713  73 114 179 615  90 527 711 106 618 162 667 277 121 194 550 451
  91  25 574  12  11 486 580 229 268 392  32 394 624 383 712 337  19  16 133 350 325 313 103 285  74 690 107 748

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00596e+07us (= 10059.6ms, 10.0596s)
Satisfaction error: 17
Number of search iterations: 2309
Number of local moves: 1925 (including on plateau: 1884)
Number of local minimum: 17 (including on plateau: 241)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 784 783 226 742 619 360 513 769 698 685 164 643 725 768 3 95 703 142 46 583 358 702 728 767 24 294 247 701 => the sum is 13872 rather than 10990
Problem in row 2: 439 181 173 278 208 779 680 93 261 38 355 163 67 469 138 629 498 265 693 466 150 279 524 499 262 673 718 535 => the sum is 10513 rather than 10990
Problem in row 3: 385 200 716 647 704 533 83 246 650 297 679 369 545 330 655 555 316 124 541 300 60 292 661 18 579 755 654 169 => the sum is 12063 rather than 10990
Problem in row 7: 617 109 648 590 519 336 58 694 21 595 730 636 568 537 347 253 20 575 79 611 193 581 175 140 245 371 586 251 => the sum is 11085 rather than 10990
Problem in row 9: 236 377 497 518 625 2 751 657 714 75 252 357 249 151 777 81 606 547 593 508 301 137 612 635 752 560 59 148 => the sum is 11777 rather than 10990
Problem in row 10: 170 596 45 780 750 69 626 28 62 291 522 589 663 662 549 361 359 13 516 668 623 342 271 374 602 670 599 272 => the sum is 12072 rather than 10990
Problem in row 11: 338 461 335 282 724 687 254 147 85 720 480 607 212 546 270 41 215 494 88 691 500 760 260 26 135 189 641 248 => the sum is 10436 rather than 10990
Problem in row 18: 190 398 567 86 70 311 331 339 562 234 264 39 152 681 118 739 551 666 600 178 465 432 283 408 31 240 475 155 => the sum is 9565 rather than 10990
Problem in row 19: 188 678 267 280 543 757 259 529 165 255 129 614 131 709 746 139 281 414 376 43 134 104 10 683 435 233 33 324 => the sum is 9459 rather than 10990
Problem in row 20: 34 344 747 87 55 723 523 502 237 495 717 66 113 230 284 559 676 532 177 211 156 125 483 346 766 56 501 449 => the sum is 10194 rather than 10990
Problem in row 22: 688 514 351 736 734 195 171 609 161 552 238 266 684 323 202 762 749 738 727 536 14 132 563 520 653 578 306 491 => the sum is 13193 rather than 10990
Problem in row 23: 677 566 287 167 218 191 192 588 348 682 605 204 528 457 634 695 697 707 51 5 201 573 47 592 729 484 365 386 => the sum is 11876 rather than 10990
Problem in row 24: 737 722 15 511 49 92 719 367 115 380 770 80 273 222 686 504 773 721 183 198 488 430 196 199 496 482 78 375 => the sum is 10861 rather than 10990
Problem in row 25: 303 314 627 468 775 7 554 65 570 572 89 744 591 658 332 708 505 758 759 289 778 633 304 94 242 489 715 603 => the sum is 13546 rather than 10990
Problem in row 26: 553 82 29 354 445 141 308 631 22 174 30 442 244 35 558 298 157 209 23 638 741 84 389 37 197 185 206 409 => the sum is 7621 rather than 10990
Problem in row 27: 158 36 782 368 462 613 642 310 269 180 396 713 73 114 179 615 90 527 711 106 618 162 667 277 121 194 550 451 => the sum is 10384 rather than 10990
Problem in row 28: 91 25 574 12 11 486 580 229 268 392 32 394 624 383 712 337 19 16 133 350 325 313 103 285 74 690 107 748 => the sum is 8313 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 116 501 690 312 718 273 364 367  83 558 548 704  80 755 132 754 297 311 539  81  69 409 272 609   4 408 219 157
 322 490 106 158 447 354 296 568 192 155 352 612 594 455 100 567 693 713  72 314 519  88  18 477  84 163 482 252
 112 487 327 301 200 484 495 751 726 507 598 741 738 237 151 663 691 202 283 299 153 124 118  47 642 737  99  77
 492 543 577 659 460 520 281 472 125 259 224 441 606  34 777 169 593 585  74  94  14  39 223 614 635 335 226 416
 645 332 709 385 366 779 743 143 712 748 597 277  35 620 716 533 463 207 536 757 592 625 147 627 350 503 692 128
 544 715   6 626 753 733  82 205 517 703 239 357 725 145 160 701 278 676 174 768 188   2 342 763  22 185 217 164
 667  93 584 511 629  65 475 330 286 528 144 669 251   1  89 184   5  79 211 411 537 212 530 242 489 418 679 714
  33 650 265 486 610  95 571 344  16 235 683 382 105 678 747 203 570  44 442 317  57 724  29 187 705 264 274 225
 646 550 320 564 671 148 476  86 443 150 653  64 139 210 171 222  23 708 450 561 240 137 616 524 131 721 723 636
 719 165 491 331 102 651  11 497 572 569  21 175 208 209 462 496 340 268 774 488 759 696 611 510 410 254  45 156
 289 603 560 310 454 546 727 365 279   8  70 177 261 214 426 506 371 516 294 710 170 351 290 315 780 687 307 404
 269  73 470 478 390 557 631 641 583 285 770 267 368 271 387  91 523 438 167 605  19  25 623 398 576 702 194 189
 427 127 228 579 695 162 500 343 319 595 103 414 291 334 292 526 652 288 370 668 563 276 353 369 195  52 552 717
 434 359 407 266 396 323 502 428 384 328 509 358 566 394 436 466 547 341 392 136 306 399 361 377 378 360 424 413
 471 395 444 304 347 388 363 372 260 431 298 485 494 429 553 473 415 249 348 309 349 397 302 483 386 469 421 355
 417 400 617 694   7 220 758 764  54 435 581 318 430  42 275 412 745 582 699 657 243 666 672 736 140 775  37 467
 345 664 305  20 206 744  63 445 393 204 196  56 465 622 739 339 325 181 498 244 781 104 262  90 180 681 186 587
  96 643 356 675 245 379 321 282 529 554 380 270 515 246 574 680 688  76 108 182 772 134 638 608 656 599 589 425
 634 749 621  59  24 376 248 230 685 633 129 178 559 525 596 521 287 107 689 168 532  85 499 154 538 130 461 573
 637  17 446 256  61 109   9 474 464 231 234 284 647 481 439 459 551 735 221  66 639 778 453 173 700 456 300 670
 698 549 190 419 649 740 767 383 381 531 258 316 632 575 665 172 197  55 618 619 215 765 769 784 257 674 451 119
  48  58 146 142  36 555  46 452 624 263 654 732  27 640  62  75 115 684 236  87 336 750 686 706 449 138 440 534
 504 556 403 734 303 110 329  49 720 166 728 658 542 238 121 468 648 233  98 423 752  12 711 122 508  38 615 201
 512 391 313  15 580 152 565 682 250  13 229 655 247 761 422  71 123 590  97 448  40 697 280  50 578 176 613 401
 324 141 432  31 644  60 458   3 522 540 479 183 373 179 762 232 295 661 602 216  32 604  68 191 420 545  10 662
 199  92 120 518  67 513 541  41 213 480 514 591 660 771 437 114 193 333 562 402 601 375 746 505  30 308 607 457
  53 406 126 783 253 628 255 600 630 346 773 493  43 338 101 776 135 766 729 527 730 760 293 218 588 161 722 742
 337 241 731 374 677 326 113 673  28 535  26 133 389 586 198 117 227 362 707 433 782 756  78 111 159  51 405 149

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00586e+07us (= 10058.6ms, 10.0586s)
Satisfaction error: 16
Number of search iterations: 2450
Number of local moves: 2083 (including on plateau: 2043)
Number of local minimum: 8 (including on plateau: 298)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 116 501 690 312 718 273 364 367 83 558 548 704 80 755 132 754 297 311 539 81 69 409 272 609 4 408 219 157 => the sum is 10330 rather than 10990
Problem in row 2: 322 490 106 158 447 354 296 568 192 155 352 612 594 455 100 567 693 713 72 314 519 88 18 477 84 163 482 252 => the sum is 9643 rather than 10990
Problem in row 4: 492 543 577 659 460 520 281 472 125 259 224 441 606 34 777 169 593 585 74 94 14 39 223 614 635 335 226 416 => the sum is 10487 rather than 10990
Problem in row 5: 645 332 709 385 366 779 743 143 712 748 597 277 35 620 716 533 463 207 536 757 592 625 147 627 350 503 692 128 => the sum is 13967 rather than 10990
Problem in row 7: 667 93 584 511 629 65 475 330 286 528 144 669 251 1 89 184 5 79 211 411 537 212 530 242 489 418 679 714 => the sum is 10033 rather than 10990
Problem in row 8: 33 650 265 486 610 95 571 344 16 235 683 382 105 678 747 203 570 44 442 317 57 724 29 187 705 264 274 225 => the sum is 9941 rather than 10990
Problem in row 9: 646 550 320 564 671 148 476 86 443 150 653 64 139 210 171 222 23 708 450 561 240 137 616 524 131 721 723 636 => the sum is 10983 rather than 10990
Problem in row 16: 417 400 617 694 7 220 758 764 54 435 581 318 430 42 275 412 745 582 699 657 243 666 672 736 140 775 37 467 => the sum is 12843 rather than 10990
Problem in row 17: 345 664 305 20 206 744 63 445 393 204 196 56 465 622 739 339 325 181 498 244 781 104 262 90 180 681 186 587 => the sum is 9925 rather than 10990
Problem in row 18: 96 643 356 675 245 379 321 282 529 554 380 270 515 246 574 680 688 76 108 182 772 134 638 608 656 599 589 425 => the sum is 12220 rather than 10990
Problem in row 21: 698 549 190 419 649 740 767 383 381 531 258 316 632 575 665 172 197 55 618 619 215 765 769 784 257 674 451 119 => the sum is 13448 rather than 10990
Problem in row 22: 48 58 146 142 36 555 46 452 624 263 654 732 27 640 62 75 115 684 236 87 336 750 686 706 449 138 440 534 => the sum is 9721 rather than 10990
Problem in row 24: 512 391 313 15 580 152 565 682 250 13 229 655 247 761 422 71 123 590 97 448 40 697 280 50 578 176 613 401 => the sum is 9951 rather than 10990
Problem in row 25: 324 141 432 31 644 60 458 3 522 540 479 183 373 179 762 232 295 661 602 216 32 604 68 191 420 545 10 662 => the sum is 9669 rather than 10990
Problem in row 27: 53 406 126 783 253 628 255 600 630 346 773 493 43 338 101 776 135 766 729 527 730 760 293 218 588 161 722 742 => the sum is 12975 rather than 10990
Problem in row 28: 337 241 731 374 677 326 113 673 28 535 26 133 389 586 198 117 227 362 707 433 782 756 78 111 159 51 405 149 => the sum is 9704 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 336 229 295 538   4 169 252 369 781 306 644 452 750 515 340 357 504 110 297 237 759 693  46 641 201 111 465 589
 762 764 571 716 266 658 754 325 563 219 381  68 534 393 598 155 715 222 550 301  78 590 540 209 573 129 428 184
 527 677 748 126 671 424 344   6 141 138 227 742 772 319 185 282 191 632 505 483 456 296 347 616 278  67 305 618
 415 519 547  97  73  61 213 719 562  51 180  31 721 695  41 730 217 690 595 524 490 692 702   1 726 300  83  28
 665 783 172 264 332 652   8 722 751 154 647 135 638 216 492 104 486  56 245 766 543 197 117  66 377 200 769 433
 724 691 707 443 761 670  74 116 244 501  43 654 621 639 526  84 626 275 451 520 132 349  60  89 470 303 281 354
  64 224  99 668 523  92 624 572 311  35 682 152 287 130 193 102 623 466 280 746 384  49 752 156 569 725 168 674
  75 649 681 211 593 500 669 517 160  86 599 210 499 426 737 735  52 324 214 199 768 122 265  55 203   3 704 734
 348 192 181 687 512 363 604 636 627 610 162 323  21 778  36 613 183 622 537 711 298 101 124 148 712 255  22 584
 628 601 539  63 775 228 489 516 532 372 528 468 533  15  95 478   5 312 417  18 659 350 653 510 556 497  11 142
 782 189 206 254  85  50 165 679 502 457 723 176 361 494 477  32 310 770 676 565 600 248 760 662 696  65 673 771
  20 488 525 289 251 776 763 558  33 686  47 506 666   9 765 178 158 159 133 334 514 582 728 388 195 614 507 118
 440 450 231 329 402 473 427 429 482 432 435 434 339 460 445 438 394 446 366 449  30 472 179 437 299 422 411 439
 173 431 396 413 412 455 375 128 382 386 476 425 410 419 389 406 397 448 392 418 398 518 414 342 405 387 404 391
 338 367 376 740 362 383 407 371 368 379 370 355 341 333 395 442 364 380 335 399 149 378 374 353 625 400 576 330
 684 164 646  59 351 270 731 204 261 774 741  71 212 474 139 586 685 409 123 115 607  27 544 194 331 230 697 661
 611  17 320 581 318 145 454 294 356 277  42 551 243 552 663 683  70 580 441 672 733 284 235 667  98 560 453  90
 463 570 615 714 120 458 151 694 302  48 436 773 186 717 119 767 612 713  37 608 416 187 637 594 471 588 157 745
 108 629 242 484 591 747 701 360 285 293 568 283 315 496 290 268 732 240 467 233 150 246 421 286 253 257 757 288
 109 112 688 190 657 509  88  80 461 698 225 337  77 100 554 561 536  93 553  12  76 464 420 493 171 408 279 223
 153  26 359 114 241  54 321 678 221 256 272 498  53 481  72  19 316 249   2 144 480 215 207 758 548 680 597 107
 365 530 137 784 689 196 545  44  14 485 267 140 205 596 313 292 131 546 648 175 522 125 273 703 121 749 744 651
 587 373 779 549 343 236 317 617  69 592 134 567 609 475 708 166 208  62 274  34 291 619 263 508 385 555  40 630
 346  79 491 557 146 575 198 202 226 602  94 645 578 390 322 577 308 620 706 642 238 559  57 103 541 660  81 447
 247  24 271 430 739 232 513 182 606 633 579 583 328 358 705 462 239 755 635 640  87 720 718 469 127 700 564 170
 258 307  38  82 521 699 314  29 710 634 574   7 174 260 259 605 487  39 262 401 479 656 352 345 327 106 535 250
 542 738 105 585  91 188 444 163 304 177 511 675  58  16 529 650 777 503  96 531 643 756 147 566 309 743 143  13
 220 167  25  23 161 727  45 780 736 709 403 729 459 234 603 218 664 269 753 113  10 495 655 631 423 276 136 326

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00591e+07us (= 10059.1ms, 10.0591s)
Satisfaction error: 13
Number of search iterations: 2868
Number of local moves: 2472 (including on plateau: 2427)
Number of local minimum: 9 (including on plateau: 295)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 762 764 571 716 266 658 754 325 563 219 381 68 534 393 598 155 715 222 550 301 78 590 540 209 573 129 428 184 => the sum is 12246 rather than 10990
Problem in row 3: 527 677 748 126 671 424 344 6 141 138 227 742 772 319 185 282 191 632 505 483 456 296 347 616 278 67 305 618 => the sum is 11123 rather than 10990
Problem in row 4: 415 519 547 97 73 61 213 719 562 51 180 31 721 695 41 730 217 690 595 524 490 692 702 1 726 300 83 28 => the sum is 10703 rather than 10990
Problem in row 6: 724 691 707 443 761 670 74 116 244 501 43 654 621 639 526 84 626 275 451 520 132 349 60 89 470 303 281 354 => the sum is 11408 rather than 10990
Problem in row 7: 64 224 99 668 523 92 624 572 311 35 682 152 287 130 193 102 623 466 280 746 384 49 752 156 569 725 168 674 => the sum is 10350 rather than 10990
Problem in row 11: 782 189 206 254 85 50 165 679 502 457 723 176 361 494 477 32 310 770 676 565 600 248 760 662 696 65 673 771 => the sum is 12428 rather than 10990
Problem in row 18: 463 570 615 714 120 458 151 694 302 48 436 773 186 717 119 767 612 713 37 608 416 187 637 594 471 588 157 745 => the sum is 12898 rather than 10990
Problem in row 20: 109 112 688 190 657 509 88 80 461 698 225 337 77 100 554 561 536 93 553 12 76 464 420 493 171 408 279 223 => the sum is 9174 rather than 10990
Problem in row 21: 153 26 359 114 241 54 321 678 221 256 272 498 53 481 72 19 316 249 2 144 480 215 207 758 548 680 597 107 => the sum is 8121 rather than 10990
Problem in row 25: 247 24 271 430 739 232 513 182 606 633 579 583 328 358 705 462 239 755 635 640 87 720 718 469 127 700 564 170 => the sum is 12716 rather than 10990
Problem in row 26: 258 307 38 82 521 699 314 29 710 634 574 7 174 260 259 605 487 39 262 401 479 656 352 345 327 106 535 250 => the sum is 9710 rather than 10990
Problem in row 27: 542 738 105 585 91 188 444 163 304 177 511 675 58 16 529 650 777 503 96 531 643 756 147 566 309 743 143 13 => the sum is 11003 rather than 10990
Problem in diagonal 1: 589 428 67 726 66 60 49 768 711 417 770 158 438 389 333 212 551 436 293 461 678 545 236 146 430 38 738 220 => the sum is 10953 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 501 125 147  55 744 676 136 656 755 253 260 643 257 190 740 150  95 551 607 665 126 497 169  53 595 569 200 575
 196 198 754 318 319 276 684  40 183 219 673 121 533 743 696 775 609 370 252  90 635 698 540 657 152 652 478 266
  84 378 211 458 234 617  23 101 109 427 742  58  80 459 639 470 262 616  12 508 504 623 737 714 618  87 625 594
 114 283 223 729 327  26 384 613 221 220 735   1 340 170 325 348  46 528 432 301 250 590 693 462  25 621 174 463
 664 524 718 573 135 222 364 345 723 507 115 466  93 464  49 572 255 736 106 721 159  21 343 778 745 275 291 648
 342 271 546 741 583 694  57 277  62 679  37 688 153 201 254  13 552 267 476 762 177 356  77 246 705 284 545 314
 193 498 669 308 202 598 632 461 335 675 214 582 472 145 580   3  78 247 324   4 586 485 426 442 413 518 448 452
 692 166 608 414 513 568 783 531 116 724 315 500 651 681  76 615  19 235 375 108 612 399  74 263 423 337  61 309
 161 140 258  96 561 238 550 268 433 173 579 548 204 444  70 645 690 603  18 704 416 523 274 143 451 661 443 287
 730 760 720 203  33  17 415 111 525 157 517 544 585 119 188 522 629   6 703 619 244 117 547 556 216 191 477 539
 758  35 341 499 487  45 559 682 700 549 181  89 574 542 541 490 776 131 481 122 680  15  64  69 264 302 780 107
 293 172 627 764 685  86 516 779 313 777 689 771 770 488 483 701 564 317 560 412  30 278 512 449 361 162  31  38
 303 355 217  16  47 747 751 734 218 495 100 229 408 667 702 347 104  48  73 570 662 686 642 515 527 626 360 168
 390  63 394 409 445 447 431 387 424 434 376 362 397 436 358 428 402 380 420 368 406 405 411 401 366 421 441 388
 396 336 371 389 359 377 349 391 385 307 395 663 382 374   2 357 440 748 713 331 419 381 261 205 346 555 393 365
 403 647 492  54 506 132 571 475 558 601 537 334 505 606 199 536 641 659 249 398 554 245  82 404 719 141 176 727
 151 653  42 712 352 520 633  83 772 316 422 326   8 339 292 672 304 158 418 328 493 634 279 118 367 439 630 529
 567 127 273 294 591 320 240 738  14  22 102   5 660  66 538 322 226 596 532  59  28 711 597 450 189 123 243 112
 768 757 296 600 113 124 300 187 620 297 774 251 285 242 232 514 435 782 286 290 310 631 305  67 272  44 521 687
 644 231 530 299 225 562 212 372  50 373 369 716 750  36 628 146 332 110 726  52 206 207 503 759  88 715  41 185
 437 576   9 239 453 184 105 164 467 637 761 241   7 756 160 165 510 731 784 280 354 496 746 677  11 233 484 323
 658 511 543 156 139 237 650 593 133 154 622 691 144 722 732 194 210  81 195 175 163 363 180 602 182 725 599 636
 509 655 350 430 589 312 486 269 338  39 120 321  29 646 767  98 739 400 155 581 446 344 137 228 640 236 584 407
 480 208 383 213 638 473 186 482 167 753  24 683 270 142 465  94 311  97 678 695 763 282 329 330 649  51  56 192
  79 456 455 674 773 526 171  85 577 460 209  34 438 392 130 248 733 670 256 494 769 454  32 410 557 605  72 565
  71 611  99 563  91 728 128 468 624 553 578 471 588  27  75 592 469 265 134 215 281 103 717 288 654 474 417 706
  20 489 671 587 138 781 379 179 666  60  65 425 710 289 534 749 491  92 259 429 707 148 614 353 306 333 752 178
 386 765  43 197 708 457 295 519 502 129 479 227 697 604 535 224  68 566 766 709  10 298 699 351 149 610 668 230

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00592e+07us (= 10059.2ms, 10.0592s)
Satisfaction error: 17
Number of search iterations: 2189
Number of local moves: 1883 (including on plateau: 1843)
Number of local minimum: 5 (including on plateau: 238)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 196 198 754 318 319 276 684 40 183 219 673 121 533 743 696 775 609 370 252 90 635 698 540 657 152 652 478 266 => the sum is 12127 rather than 10990
Problem in row 4: 114 283 223 729 327 26 384 613 221 220 735 1 340 170 325 348 46 528 432 301 250 590 693 462 25 621 174 463 => the sum is 9644 rather than 10990
Problem in row 5: 664 524 718 573 135 222 364 345 723 507 115 466 93 464 49 572 255 736 106 721 159 21 343 778 745 275 291 648 => the sum is 11612 rather than 10990
Problem in row 6: 342 271 546 741 583 694 57 277 62 679 37 688 153 201 254 13 552 267 476 762 177 356 77 246 705 284 545 314 => the sum is 10359 rather than 10990
Problem in row 8: 692 166 608 414 513 568 783 531 116 724 315 500 651 681 76 615 19 235 375 108 612 399 74 263 423 337 61 309 => the sum is 11168 rather than 10990
Problem in row 9: 161 140 258 96 561 238 550 268 433 173 579 548 204 444 70 645 690 603 18 704 416 523 274 143 451 661 443 287 => the sum is 10581 rather than 10990
Problem in row 11: 758 35 341 499 487 45 559 682 700 549 181 89 574 542 541 490 776 131 481 122 680 15 64 69 264 302 780 107 => the sum is 10863 rather than 10990
Problem in row 12: 293 172 627 764 685 86 516 779 313 777 689 771 770 488 483 701 564 317 560 412 30 278 512 449 361 162 31 38 => the sum is 12628 rather than 10990
Problem in row 13: 303 355 217 16 47 747 751 734 218 495 100 229 408 667 702 347 104 48 73 570 662 686 642 515 527 626 360 168 => the sum is 11317 rather than 10990
Problem in row 16: 403 647 492 54 506 132 571 475 558 601 537 334 505 606 199 536 641 659 249 398 554 245 82 404 719 141 176 727 => the sum is 12151 rather than 10990
Problem in row 18: 567 127 273 294 591 320 240 738 14 22 102 5 660 66 538 322 226 596 532 59 28 711 597 450 189 123 243 112 => the sum is 8745 rather than 10990
Problem in row 20: 644 231 530 299 225 562 212 372 50 373 369 716 750 36 628 146 332 110 726 52 206 207 503 759 88 715 41 185 => the sum is 10067 rather than 10990
Problem in row 23: 509 655 350 430 589 312 486 269 338 39 120 321 29 646 767 98 739 400 155 581 446 344 137 228 640 236 584 407 => the sum is 10855 rather than 10990
Problem in row 24: 480 208 383 213 638 473 186 482 167 753 24 683 270 142 465 94 311 97 678 695 763 282 329 330 649 51 56 192 => the sum is 10094 rather than 10990
Problem in row 25: 79 456 455 674 773 526 171 85 577 460 209 34 438 392 130 248 733 670 256 494 769 454 32 410 557 605 72 565 => the sum is 11324 rather than 10990
Problem in row 27: 20 489 671 587 138 781 379 179 666 60 65 425 710 289 534 749 491 92 259 429 707 148 614 353 306 333 752 178 => the sum is 11404 rather than 10990
Problem in row 28: 386 765 43 197 708 457 295 519 502 129 479 227 697 604 535 224 68 566 766 709 10 298 699 351 149 610 668 230 => the sum is 11891 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 782  27 783 759  73 430 577  39  95 286 181  15 469 550 461 658 255 344 518 101 145 479 558 137 715  92 530 750
 107 131 272 617 523 572  61 246 161 745 538 236 474 732 340 742 122  33 774 282 510 648 570  44 273 561 738 287
 315 197 707 373 609 521 664 502 297 720 194 261 305 334 180 292 740   4  35 492 429 445 253 275 587 695 226 338
  45 507 169 129 281 271 655  26 722 776 279 421 139 781 515 702  24 274 534  67 657 293 277 529 689 633 618 335
 230 729 256 239 662  16 270 701 580 651 548 147 276  53  76 360 227 704 313 624 265 212 772 363 579 123 208   5
 646 156 148 120 188 327 711 251 199  65 470  31 604 428 551 258 278 182 725 767 118 549 586 232 602 640 563 595
 508 475 685 400 661 574 608 214 240  30 569  89 766 116 308  50 491 555 552 294 525 591 190   1  56 167 665 610
 301 576 114 559 307 630 462 627 676 189 192 773 739 303 719 471 611   3 660 482 650 144 486 594 318 532 775 536
 607 629 177  23 198 143 210 540 531 176 267 213  48 437 769 152 752  69 165 496 656 541 295 172 762 237  80 314
 105 494 539 296 231 136   7 636 761 504  22 489 248 731  79 377 519 755 511 613  68 164  90 684 423 456 593 459
 503 135 659 506 264 289 537 304 472 565 490 499 195  12 495  66 573 497 117 691 487  11 245 578 526 112 435 727
 442  43 554 356 712 716   6 290 638 175 674 458  78 533 605 434 468 623 113 509 733  34 672 364 242 262 170  86
 710 439 485  51 460  62 168 466 393 454 392 450 441 438 453 387 361 398 455 433 426 443 354  64 431 401 413 562
 448 403 465 447  57 171 410 436 406 424 399 404 397 319 396 394 409 384 415 457 405 545 362 425 432 383 402 395
 382 379 709 427 375 374 348 422 417 418 408 416 345 385 411 366 353 391 389 368 420 350 355 378 381 359 358 306
 367 444 388 590 516 726 352 371 317 332 370 372 679 346 322 376 300 316 343 380 336 488 347 341 309 330 321 311
 178 159  28 678 414 724 464 106 337 520 778 349  83 681 266 234 331 642 625 298  36 671 717 326 132 339 390 484
 763 699 749 621 100 173 121 553   2 501 312 568 667  10 205 524  38 619 202  25 151 127 263 446 154 269  20 133
 119 784 654 614 582 163   9 221  81 254 142 735 668 631 419 765 615 280 203 714 328  58 768 698 748 481 599 115
 543 581 233  82 756  84 252 635 225  97 126 149  96  49 641  74 310 323 677 201 560 302 110 556  14 598  46 693
 589 184  94 186 179 357 512 224 522 216 666 603 299 770  47 588 713  91 612 567 219 320 249 235 583 207 483 675
 218 260 288 498 780  40 193 124 500 342 626 670 185 480 157 706 217 283 228 628 585 206 187 146 620 744 478 601
 365 571 643 596 452 102 653  85 229 652 741 687 647 476 584 285 241 746 703  88 632 528 751 407  13 547 284 211
 616 324 162 514  55 686 592 111  19 566 718 191  59 250 723 600 158 544 351 243 760 764 183 697 204 680  70 150
  87 247 333 196 130 758 753 777 737 700   8 669 259 325 223 128 477 649  63 125  41 721 451 542 134 268 663  54
 694 637  72 440 449 639 734 747 622  37 606 369 575 153  17 141 634  93  18 730  99  71 244 754 220  42 690 463
 291  98 238 473 564 527 557 692 103 535 108 517 513 174 771 215 696 683 467 155  21 688 109 329 138 757  32 743
  29 682 386 200 412 779 104 644 708  60 166 209 736 493 257 645  77 505 222 160 728 597 546 673 705  75 140  52

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00588e+07us (= 10058.8ms, 10.0588s)
Satisfaction error: 12
Number of search iterations: 2688
Number of local moves: 2246 (including on plateau: 2201)
Number of local minimum: 15 (including on plateau: 283)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 782 27 783 759 73 430 577 39 95 286 181 15 469 550 461 658 255 344 518 101 145 479 558 137 715 92 530 750 => the sum is 10809 rather than 10990
Problem in row 2: 107 131 272 617 523 572 61 246 161 745 538 236 474 732 340 742 122 33 774 282 510 648 570 44 273 561 738 287 => the sum is 11339 rather than 10990
Problem in row 4: 45 507 169 129 281 271 655 26 722 776 279 421 139 781 515 702 24 274 534 67 657 293 277 529 689 633 618 335 => the sum is 11348 rather than 10990
Problem in row 5: 230 729 256 239 662 16 270 701 580 651 548 147 276 53 76 360 227 704 313 624 265 212 772 363 579 123 208 5 => the sum is 10189 rather than 10990
Problem in row 8: 301 576 114 559 307 630 462 627 676 189 192 773 739 303 719 471 611 3 660 482 650 144 486 594 318 532 775 536 => the sum is 13429 rather than 10990
Problem in row 9: 607 629 177 23 198 143 210 540 531 176 267 213 48 437 769 152 752 69 165 496 656 541 295 172 762 237 80 314 => the sum is 9659 rather than 10990
Problem in row 18: 763 699 749 621 100 173 121 553 2 501 312 568 667 10 205 524 38 619 202 25 151 127 263 446 154 269 20 133 => the sum is 9015 rather than 10990
Problem in row 19: 119 784 654 614 582 163 9 221 81 254 142 735 668 631 419 765 615 280 203 714 328 58 768 698 748 481 599 115 => the sum is 12448 rather than 10990
Problem in row 20: 543 581 233 82 756 84 252 635 225 97 126 149 96 49 641 74 310 323 677 201 560 302 110 556 14 598 46 693 => the sum is 9013 rather than 10990
Problem in row 23: 365 571 643 596 452 102 653 85 229 652 741 687 647 476 584 285 241 746 703 88 632 528 751 407 13 547 284 211 => the sum is 12919 rather than 10990
Problem in row 25: 87 247 333 196 130 758 753 777 737 700 8 669 259 325 223 128 477 649 63 125 41 721 451 542 134 268 663 54 => the sum is 10518 rather than 10990
Problem in row 27: 291 98 238 473 564 527 557 692 103 535 108 517 513 174 771 215 696 683 467 155 21 688 109 329 138 757 32 743 => the sum is 11194 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 220 678 197 266 115 187 767 245  40 544 198 743 622 239 247 568 168   5 768 667 760 442 227 299 196 170 628
 750  44  75 395 517 716 207 230 144 677 128 620 108 116  25 736 507 575 149 403 101 593 291 730 666 735 733  19
 528 649 469 598 102  62 558  90 761 148 529 702  50 566 246  38 439 161 270 250 468 717 237 655 155 723 759  60
 732 781 602 691  49 669 154 580 123 293 587 318 501 564 661 244 308  30 357 185 114 248 252 698 659 165 305 120
 141 569 188 344 676 109 672 448 629 559 494  13 459  85  69  24 589 769 689 696 763   1 758 650 530 145 505 126
 540 714 234 214 581 645  47 648 608 127  15 420 249 162 556 512 143 125 464 545 218 590  20 652 460 638 594 269
 440 577 447 206 441 287 630 479 509 140 393  74 152 538 297 771 654  68 724 458 263 586  36 571 264 314 515 156
 211 679 316  70 166 585 520 579  16 557 536 210 408   9  79 603 719 552 324 527 601 663 671 172 121  10 454 632
 465  77  22 728 685 216 429 193 525 681 524 276 167 277 110 122 215 118 639 550 703 265 775 563 521 259 261 624
 255 435 609 471 327 160 232 623 280 513 223  99 591 508 625 181 523 312 535 740 583  32 191 451 430 542 132 387
 443 189 486  51 534 461 449  81 492 444  71 514 319 466 502 476 506 477 472 488 484 522 503 490  91 480 470  29
 286 182 412 254 621 541 595 699 322 436  83 450 474 738 751 302 452 704 317 139  35 360   2 348 483 202 307 495
 175 158 467 546 321 774 766 100 113  66 186 533 399 617 582 346 722 734 195 176 296 561 397 612 391 352 281 124
 366 748 288 782 135 190 500 539 184 634 294 224 665 374 404 411 163 388 415 336 423 496 209 177 567 493 405 180
 407 371 383 414 335 370 406 341 394 353 377 426 438 413 670 499 300 385 369 340 358 380 367 402 396 363 351 382
 373 330 310 378 712 342 778 364 361 427 343 333 375 384 325 347 372 362 376 284 746 339 320 355 332 326 328 368
 574 334  59 498 205 111 258 389 350 705 275 708 169  87  26 644 271 279 511 673 487 570   7  92 204 597 455 742
 150 549  64 106 257 497 274 548  67 626 354 553 692 283 235 551  57 241 401  80 739 463 560 757 236 331 619 700
 253 599 251  27 434 311  95 489 453 278 306 636 462 282 298 662 422 713 243 303 526 726 437  98 615  55 637 379
  53 682 762 107 345 504 398 238 219 179 687 780  18  52 674 337 592 664  84 240  48 695  63  21 532 640 675 701
 229 131 192 765 584 721 157  72 425 773 688 390 329 772 711 610 417 386 295  41 138  61 356 173 718 433 392  31
 642 260 233 647   6 754 744  12 633 199 543 446 606 349 208 105  76 212 613 112 431 137 651 267 770 313 456 565
 627 725 783 510 457 481 605 222 686  56 225  34 729 242 491 256 213 537 519  65 153 428 174 473  28 753 217 301
 657 134 747 572  37 421 292 203 588 755 752 600  58 432  94 119  82 485  88 693 683 231 658 146 285 419  39 720
  45 416 697 226 531 424 289 779   8 478  93  46 272 749 776 410 130 221 596 614  43  11 684 194 737 117 694 710
 516   4 136 547 741 159 201 656 653 409 777 573 745 178 147  54 764 618 731 400  78 104 707 365  89  23 133 482
 315 171 518   3 290 323 129 607 727 273 604 631 709 680 578 715  96 555 381 616 200 142 576  97  73 660  17 304
  33 262 562 643 635  42 418  14 475 164 359 183 103 445 611 668 690 151 228 268 641 309 646 554 338 706  86 756

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.0059e+07us (= 10059ms, 10.059s)
Satisfaction error: 3
Number of search iterations: 2899
Number of local moves: 2390 (including on plateau: 2335)
Number of local minimum: 25 (including on plateau: 292)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 141 569 188 344 676 109 672 448 629 559 494 13 459 85 69 24 589 769 689 696 763 1 758 650 530 145 505 126 => the sum is 11700 rather than 10990
Problem in row 17: 574 334 59 498 205 111 258 389 350 705 275 708 169 87 26 644 271 279 511 673 487 570 7 92 204 597 455 742 => the sum is 10280 rather than 10990
Problem in diagonal 1: 628 733 723 659 650 20 586 601 550 535 477 452 346 404 413 375 708 354 278 219 72 744 481 37 226 136 171 33 => the sum is 11611 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 783 455 752 744 296 629 548 505 510 464 634 257  77 493 488  10 769 333  49  13 725 490 625 401 261 753 170  82
 632 241 430 780  25 677 439 561 117 743 249 688 419 385 682 732 344 670   8 604 475   7 372 534 571  23 389 435
 368 223 715 289 667 572 298 159 235 683 247 104 409 201 607 492 527 144 589 123 212 713  19 364 208 706 550 566
 312 526 171   4 568  79 178 375 478 400 316 358 496 672 601 180 284 651 542 618 429 433 664  34 655 233 179 363
 166 367  65 415 465 700 554 675  33 216 630 709 365  46 714 395 213 763   6 195  71 202 736 656 696 290   9 643
 559 563 203 239 347 631 138 600   1 641 122 775 265 169 558 767  63 246 125 155 353 408 613 584 362 487 764 252
 341 454 338 698 384 205 218 328 315 131 324 190 418 733 751 646 498 188 489 152 461 593 193 243  16 463 642  60
  24 107 650 361 738 373 390 582 283 731 539 420 286 622 506  98  51 254 701 428 594 761 306 491 350 569 396 676
  89 158 711 638 101 156 470 326 443 549 583 446 608 153 528 579 240 346 376 521 325 200 567 221 617 592 565 294
 684 784 547 748 708  39  62 749 686 494 331 515 127 192 591 666 730 292 495 546 707 230  75  14  76 570 187 168
 458 234 421 531 393 448 779 621 474 114 451 758 639  12  47 653 560 504 456 602 317 130 423 645 685 303 253 231
 148 703 366  27 432 529 319 146 113 105 727 472 577 437  70 330 524 135 209 185 658 721 271 557 251 337 207 264
 336 142 518 157 414 674 310 553 413 299 352 102  83 128 440 427 381 441 485 411 640 436 382 405 340 691 782 248
 512 109 126 244 457 305 728  97 444 633  32  87 596 438 402 523 399 690 624 668 354 580 285 133 551 719  26 228
 648 302 460 735  94 404 536  78 599 258 497 106 397 378 394 699  20 379 445 424 595 177  17 537 704 623 453  31
 245 663 314 161 729  61 468 774 745 267 590 139 720 307 100 380 273 573 766 270 141 121  43  90  53 710 181 772
 403 476  35 410 134 174 469 160 442 210  93 291  40 777  21  42 278 129 197 649  69 301 383 615 768 480 406 627
 759 724 576  84  73 776 137 388  81 771 308 687 136 673 211 281  88 313 742 369  48 661  55 740 407  92 635 175
 555 525 398 477 734 198 345 329 486 224  29 277 654 282 770  54 545 268 274 747 266 416 692 391 279   3  67 705
 232 387 112 671 320 538  38 293 762 511 610 540 280 295  68 172 606 194 318 222 765 309 503 678 321 167 500 578
 219 356 781  36 452  37 657  30 479 348 256 612 581 616 255 323 513 644 143 575 626 483 449 754  99 371  91 204
 226 199 229 637 773  18 214 145 149 426 357 484  96 508 183 543 620  45 636 124 147 189  44  50 111 173 417 541
  57 176 597 412 162 196 726 718 360 614 116  52 482   2 659 605 151 459 287 611 184 335  58 665 516 140 467 311
 322 603 425 349 215 259 756 374 509 392 481 242 447 680 227 217 355 746 269 473 544 669 695  80 332 522 564 778
 647 502 260 272 206 723 132 164 609 450 507 693 276 119  85 514 712 533  66 757 154 574 760 150 750  64  86 225
 737 327 186  72 532 250 103 535 422 110 519 587 755 716 182 466 660 118 628 300 697  59 652 275 339  15 585 163
 517  22 530 679 237 741 359 462 694  41 739 304 262 586 288   5 115 501 722 220 377 556 588 297 434 342 702 681
  11 662  74 120 334 598 619 263 108 165 351  95 499 370 562 191 471 431 343  28  56 236 520 386 238 552 717 689

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00586e+07us (= 10058.6ms, 10.0586s)
Satisfaction error: 17
Number of search iterations: 2500
Number of local moves: 2119 (including on plateau: 2078)
Number of local minimum: 16 (including on plateau: 243)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 783 455 752 744 296 629 548 505 510 464 634 257 77 493 488 10 769 333 49 13 725 490 625 401 261 753 170 82 => the sum is 12316 rather than 10990
Problem in row 2: 632 241 430 780 25 677 439 561 117 743 249 688 419 385 682 732 344 670 8 604 475 7 372 534 571 23 389 435 => the sum is 12232 rather than 10990
Problem in row 4: 312 526 171 4 568 79 178 375 478 400 316 358 496 672 601 180 284 651 542 618 429 433 664 34 655 233 179 363 => the sum is 10799 rather than 10990
Problem in row 5: 166 367 65 415 465 700 554 675 33 216 630 709 365 46 714 395 213 763 6 195 71 202 736 656 696 290 9 643 => the sum is 10995 rather than 10990
Problem in row 7: 341 454 338 698 384 205 218 328 315 131 324 190 418 733 751 646 498 188 489 152 461 593 193 243 16 463 642 60 => the sum is 10472 rather than 10990
Problem in row 8: 24 107 650 361 738 373 390 582 283 731 539 420 286 622 506 98 51 254 701 428 594 761 306 491 350 569 396 676 => the sum is 12287 rather than 10990
Problem in row 9: 89 158 711 638 101 156 470 326 443 549 583 446 608 153 528 579 240 346 376 521 325 200 567 221 617 592 565 294 => the sum is 11402 rather than 10990
Problem in row 10: 684 784 547 748 708 39 62 749 686 494 331 515 127 192 591 666 730 292 495 546 707 230 75 14 76 570 187 168 => the sum is 12013 rather than 10990
Problem in row 11: 458 234 421 531 393 448 779 621 474 114 451 758 639 12 47 653 560 504 456 602 317 130 423 645 685 303 253 231 => the sum is 12142 rather than 10990
Problem in row 12: 148 703 366 27 432 529 319 146 113 105 727 472 577 437 70 330 524 135 209 185 658 721 271 557 251 337 207 264 => the sum is 9820 rather than 10990
Problem in row 16: 245 663 314 161 729 61 468 774 745 267 590 139 720 307 100 380 273 573 766 270 141 121 43 90 53 710 181 772 => the sum is 10656 rather than 10990
Problem in row 17: 403 476 35 410 134 174 469 160 442 210 93 291 40 777 21 42 278 129 197 649 69 301 383 615 768 480 406 627 => the sum is 9079 rather than 10990
Problem in row 22: 226 199 229 637 773 18 214 145 149 426 357 484 96 508 183 543 620 45 636 124 147 189 44 50 111 173 417 541 => the sum is 8284 rather than 10990
Problem in row 23: 57 176 597 412 162 196 726 718 360 614 116 52 482 2 659 605 151 459 287 611 184 335 58 665 516 140 467 311 => the sum is 10118 rather than 10990
Problem in row 24: 322 603 425 349 215 259 756 374 509 392 481 242 447 680 227 217 355 746 269 473 544 669 695 80 332 522 564 778 => the sum is 12525 rather than 10990
Problem in row 27: 517 22 530 679 237 741 359 462 694 41 739 304 262 586 288 5 115 501 722 220 377 556 588 297 434 342 702 681 => the sum is 12001 rather than 10990
Problem in row 28: 11 662 74 120 334 598 619 263 108 165 351 95 499 370 562 191 471 431 343 28 56 236 520 386 238 552 717 689 => the sum is 9689 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  99 243   3  67 397 542  10 631 275  12 387 678 594 756 534 281 206  29  36 443 612 782 100 155  25 144  52 761
 647 755 749 263 693 279 351   2 637 608 231 248 267  61  43 607 151 177 414 268 516 213 551 570 555 529  68 537
 513 669 704 319 705 229 554 383 547 727 265  51 444 401 308 251  39 123  85 224 462  86 218  74 694 698 564 653
 367 297 718 783 395 104 357 109 618 434 197 638 336 282 358 266 707 162 479   6 176  44 191 650 658 774 174 710
 228 202 501 648 688 441 284  94 131 762 639 106 259 701 341 169 620 709 203 750 189  84 556 640 508  78 107 352
 713 216 651 126  88  53 205 120 584 641 139 342   5 111 617 470  91 623  55 610  73 175 619  28 199 572 561 689
 183 784 776 634 184 163 249 675 208 576 611 242 200 574 136  70 276 149 606 153 525 758 270 450 577 736 356 198
 731 655 114 517 178 720  34 548 502  37 779 122 590 253 345 712  75 519 686 140 540 527  38 652 247 410 108 211
  92 451 585 102 262 602 740 703 583 751 726 272 657 156 166 476 133 495 568 532  97 679 763 463 338 172 700 480
 478 201 225 526 230  11 781   1 747  24 674 624 333 260 746 466  20 748 471  96 335 494 271 150 601 646 484 347
 300 684 291  71 110 258 157 445  48 405 477 493 148 753 520 138 578 490 625 500 489 507 448 616 185 546 128 580
 287 269 579 234  81 379 687 739 670 615 452 465 388  63 307  98 460 711 179 305 663 212  27 630 454 302 273 461
 435  50 597 432 457 418 491 400 239 404 411 409 472  21 415 437 438 456 439 423 433 413 424 334 428 467 459 188
 412 665 427 453 567 425 349 455 392 233 141  80 382 386 407 402 376 420 633 499 384 398 535 159 399  65 431 515
 391 381 389 396 371 390 416 429 375 403 377 417 394 299 369 743 354 364 406 378 373 339 374 370 380 385 372 355
 154 127 320  79 671 775 771 353 722 363 311 622 368  82 497 738 210 512 586 180  18  95 293 621 764 217 430 252
 318 487 654 440 346 522 277 304 316 365 294 729 587 331 593 350 250 343 280 103 327 330 301 673 329 309 289 543
 656 539 310 721 780 317 147 528   9 181 283 691 533 194 204 560 514 313 661 724 288 303  87 278  76 475 505 113
 135 521 261 754 492 581 458 469 772 292 523  19 541 295 717  59 588 328 130 645 340 635 426 222 531  77  15 164
 699 241 115 683 332 565 314  17 256 558 207 190  89 609 708 695 550   7 306 257 697 553 742 524   8 464 573  31
 626 223 361 592 599  13 236 219 214 137 603 613  22 777 442 117 649 220 591 408 196 496 589 255 274 629 668 221
 215 468 285 325 238 664 195 232  46 337 672  16 730 286 765 571 734 557 146 676 725 158  64  30  56 240 773 165
 569  69 167 566 482 132 628 770 681  60  58 745 488 503  40 498 680 768 118 473 582 193 171 728 545 227 598  14
 486 685  47 421 116 760  33 644 344 145 575 124 636 682 142 660  57  66 246 752  54 393 666 101 559 170 759 667
 112 119 419  83 744 659 483 296 152 226 741 716 324 326 362 360 627  23 692 359 757  45 714 321 733 530 690  41
 549 245 125  42 161 244 538 509 485 536  62 511 436 366 595 160 778 312 642 134 187 767 702 447 446 605 237 254
 563 322 168 209 105 562 735 315 264 677  26 737  35 766 121   4 323 643 614 348 662 596 552 143 235 474  72 719
  32 422 449 504 518 182 510 600 173 481 129  90 732 696 192 632 506 723  93 604 290 715 298 706 186  49 544 769

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.0061e+07us (= 10061ms, 10.061s)
Satisfaction error: 11
Number of search iterations: 2535
Number of local moves: 2139 (including on plateau: 2093)
Number of local minimum: 20 (including on plateau: 240)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 99 243 3 67 397 542 10 631 275 12 387 678 594 756 534 281 206 29 36 443 612 782 100 155 25 144 52 761 => the sum is 8854 rather than 10990
Problem in row 6: 713 216 651 126 88 53 205 120 584 641 139 342 5 111 617 470 91 623 55 610 73 175 619 28 199 572 561 689 => the sum is 9376 rather than 10990
Problem in row 7: 183 784 776 634 184 163 249 675 208 576 611 242 200 574 136 70 276 149 606 153 525 758 270 450 577 736 356 198 => the sum is 11319 rather than 10990
Problem in row 9: 92 451 585 102 262 602 740 703 583 751 726 272 657 156 166 476 133 495 568 532 97 679 763 463 338 172 700 480 => the sum is 12744 rather than 10990
Problem in row 16: 154 127 320 79 671 775 771 353 722 363 311 622 368 82 497 738 210 512 586 180 18 95 293 621 764 217 430 252 => the sum is 11131 rather than 10990
Problem in row 22: 215 468 285 325 238 664 195 232 46 337 672 16 730 286 765 571 734 557 146 676 725 158 64 30 56 240 773 165 => the sum is 10369 rather than 10990
Problem in row 23: 569 69 167 566 482 132 628 770 681 60 58 745 488 503 40 498 680 768 118 473 582 193 171 728 545 227 598 14 => the sum is 11553 rather than 10990
Problem in row 25: 112 119 419 83 744 659 483 296 152 226 741 716 324 326 362 360 627 23 692 359 757 45 714 321 733 530 690 41 => the sum is 11654 rather than 10990
Problem in row 26: 549 245 125 42 161 244 538 509 485 536 62 511 436 366 595 160 778 312 642 134 187 767 702 447 446 605 237 254 => the sum is 11075 rather than 10990
Problem in row 28: 32 422 449 504 518 182 510 600 173 481 129 90 732 696 192 632 506 723 93 604 290 715 298 706 186 49 544 769 => the sum is 11825 rather than 10990
Problem in diagonal 0: 99 755 704 783 688 53 249 548 583 24 477 465 472 386 369 738 250 313 130 257 196 158 171 101 733 605 72 769 => the sum is 11148 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 566 777 107  69 557 327 129 577 401 163 334 154 438 171 582  78 219 383 567 177 548 274 342 164 607 746 749
 103 603 470 319  93   2  50 742 410 650 740  59 278 482 328  61 314 699 180 226 288 197 717 754 735  31 723 736
 673 344 733 512 337 266 583 779 708  60   9  14 467 766  94 196  81 468  85 174 454 427 166 604 584 690 504 212
 411 143  17 379 731 476 691 463 637  12 538 424 726  67 192 674 765 484  71 222 546 682  47 448 705   5  27 407
  23 221 124  33 645 678 158 768   8 594 101 485 659 664 287 253 595  48 610 596 770 363 760 669 275 178 323 102
 515 490 279 289 681 702 290  63 130 152 191 697  73 751 249 663 305 218 478 685 687 138 633 541  30 159 339 562
  62 620 564 591 214 601 588  95 578 479 291 592 707 706 199 242  25 542 243 358  26 600 325 453 602 295 283 109
 773 496 346 627  41 782 497 419 189  18 686 331 654 309 739 781 539 460 696 743 571 232 139 167 695 104 491  16
 183 119 586 268 132 670 581 530 599 728  34 311 235 170  10 741 712 389 570 534 631 149 269 611 247 403 270 308
 524 373 642 353 715 418 123 230  66 547 519 771  70 106 501 277  46 120 481 502 213 769 589 326 535  92 435 647
 100 540 181 255 506 499 701 241 148  22 521 480 635 161 423  24 559 498 464 223 532 649  45 658 184 756 527 458
 630 190  99 780 522 643 224 108 488 772 112 443  77 236 503 150 455 692 477 652 228  37 445 201 450 442 628 306
 205 330 661 336 558   6 248 552 260 298 563 576 320 714 636 393 738 613 206 280 598 465 437 626 509 493 211 234
 466 396 432 416 415 449 406 405 426  15 409 413  36 387 402 457 430 404 388 391 392 386 428 422 372 431 660 356
 364 368 354 429 351 390 301 574 412 441 382 397 384 375 360 366 343 370 644 380 414 377 374 345 381 398 357 359
  86   7 347 646 456 179 704 165 369 689 734  90 400 632 513 376 622 439 698  32 324 729 299 425  29 169 128 703
 700 533 355 394 471  35 118 666 641 257 683 272 677 625 732 117 362 282 293 329 281 748 292  74  75 676  56 246
 716 194 656 616 399 271 352 693 350 774 284 145 312 549 776 720 121 750 262 483 111 648 110 551 568 459 587 518
 217 434 561 294 662 619 618 137 474  54 116 259 500 348 573 472 688 151 322 667   3 125 554 202 140 639 553 608
 514 531 495 421 420 302 127 244 176 261 307 624 256 207 340 451 240 378  57 185 590 609 580 680 239 727 556 473
 267 672 315 144 193 157 447 265  19 318 452 511 555 300 606 536  82 761 767  98 195 231 508 725 621 565 160 520
 276 486  91 182 753 711 203 612  72 758 475 737  21  13 694 759 225 238 615 762 122 173  44  40 544 585 572 227
 752 517  55 487 528 187 778 258 623 156 614 516 755 162  51 216 220 349  64 316 709 198 332  38 146 657 710 523
 417  97 333 724 135  96 310  76 395 719 131  87 469 188  84  79 629 338  83 126 168 371 210  80 763 304 640 361
 367 321 545 115 365 722 229 597 215 252 264 172  39 579 492 537 461 141 303 462 744  52 653 313  49 286 114 651
 186 718 142 679 153   4  43 136 730 489 113 254 285  89 638 251 617 204 550 147 273 494 408 433 385  88 297 446
 634 237 675 593 200 510 529 747 721 757 783 341 671 440 263 605 233 175 335 105 436  68 684 209 713 208  28 133
  42 444 155   1 245  58 764 296 569 317 775 655 575 526 134  11 505 560 665 745 507 525 668  53 250 543  65  20

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00603e+07us (= 10060.3ms, 10.0603s)
Satisfaction error: 9
Number of search iterations: 2576
Number of local moves: 2195 (including on plateau: 2147)
Number of local minimum: 18 (including on plateau: 229)
Number of resets: 0
Number of restarts: 0

Problem in row 8: 773 496 346 627 41 782 497 419 189 18 686 331 654 309 739 781 539 460 696 743 571 232 139 167 695 104 491 16 => the sum is 12541 rather than 10990
Problem in row 13: 205 330 661 336 558 6 248 552 260 298 563 576 320 714 636 393 738 613 206 280 598 465 437 626 509 493 211 234 => the sum is 12066 rather than 10990
Problem in row 18: 716 194 656 616 399 271 352 693 350 774 284 145 312 549 776 720 121 750 262 483 111 648 110 551 568 459 587 518 => the sum is 12975 rather than 10990
Problem in row 23: 752 517 55 487 528 187 778 258 623 156 614 516 755 162 51 216 220 349 64 316 709 198 332 38 146 657 710 523 => the sum is 10917 rather than 10990
Problem in row 24: 417 97 333 724 135 96 310 76 395 719 131 87 469 188 84 79 629 338 83 126 168 371 210 80 763 304 640 361 => the sum is 8413 rather than 10990
Problem in row 25: 367 321 545 115 365 722 229 597 215 252 264 172 39 579 492 537 461 141 303 462 744 52 653 313 49 286 114 651 => the sum is 10040 rather than 10990
Problem in row 26: 186 718 142 679 153 4 43 136 730 489 113 254 285 89 638 251 617 204 550 147 273 494 408 433 385 88 297 446 => the sum is 9252 rather than 10990
Problem in row 27: 634 237 675 593 200 510 529 747 721 757 783 341 671 440 263 605 233 175 335 105 436 68 684 209 713 208 28 133 => the sum is 12033 rather than 10990
Problem in row 28: 42 444 155 1 245 58 764 296 569 317 775 655 575 526 134 11 505 560 665 745 507 525 668 53 250 543 65 20 => the sum is 10673 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 518 739 266 556 490 544 321 579 174 343  57  20 185 764 654  11 225 223 106 609 703 574 324  52 444 122 758 629
 210 331   1 322  95 545 587   2 307 125 526 139 471   8 611 116 644 167  66 691 437 503  26 154 766 143 463  58
 548 249 723 267 525 123 177 745 468 207 284  10 213  71 428 682 535 431 687  53 467 119  16  47 542 678 620 101
 707 187 442 710 377 719 433  61  46 203 137 618 730 278 643 775 418 344  18 172 268 173 235 298 479 326  70 595
 462 538 669 310 276 578 639 328 782 613 773 178 761 394 779 746 469 228 491  72  45 539 694 640 238 698 714 721
 747 196 583 562 269 608   3 270 576 756 294 495 507 742 171  81 722 347 549 315  37 663 630 370 696 760 273 625
 628  98 105 519  27 727  99  94 692 774 222 102  31 602 142 653 453 769 635 646 560 767 305 461 194  86   9 590
 150 572 354  40  41 741 376 660 533 636 484 204 531 114 189 220 569 456 584 426 546 253 303 551 372   5 378 702
  88 480 589 451 208 772  44  93 744  82 248 672 634 530 195 254 577 487 448 532 349 606 312 214 127 627 221 406
 543 752 604 717 749 157 445 216  43 494 623 768 111 597  30 541 104 271 497  62 638 168 599  54 186 252 617 152
  68  67 183 474 616 339 465 501 509 435 473 306 319 504 466 211 290 748 363 489 506 641 109 512 488 459 135 314
 523 313 348 612 534 275  76 776 257 481  38 133  49 712 528 327 677 731 296 510 500 690 242 147 421 293  63 131
 755 170 733  19 422 413 193 450 725 230 564 454 693 403 218 392 452 190 626 224 169 146 153 440  77 482 540 657
 417 415 438 232 420 411 381 446 402 365 407 397 439 375 425 408 356 390 398 449 334 414 385 384 396 373 393 340
 423 371 399 379 336 380 432 391 389 409 369 412 358 342 353 427 383 387 388 368 404 382 341 374 364 400 711 318
 316 457 231 419  48 124 554 460 655 715 701 603 337 536 239 351 202 765 201 141 492 759 164 593  13 240 649  25
 176 659 355 285 429 443 345 197 361 478 724 320 704 302 352 277 118 514 568 762 737 256 447 288 309 430  80  74
 229 191 367 199 777 244 778 237 179 476 475 205 513 592 566 708 243 297 107 515 236 323 718 681  24 165 274 671
 493 550 498 180 287 175 650 395 648 255 496 338 622 132 304 486  92 521 295 734 699 160 537 499  32  59 329 524
 679  28 570 565 684 665  12 108 226 300 458 716 596 683  23 552 156  51 751 292 151  75 149 522 571 668 709 675
 386 661 652 126 581  69 286 247 586 130 645 455 299 198 637 477 335 282 720  42 757  89 258 753 783 212  97 227
 601 697 401 706 689 291 144 732  50   4 113  65 666  15  85 580 317 234  36 695  79 332 754 700 673 553  83 346
 283 621  87 281 598 100 705 600  34  35  22 516 632 470 750 325 647 115 770 129 245 651 728  73 502 605 215 251
 138 241 182 743 145 472 259 662 441 686 547 631 181 280 265 120 416  90 410 680  17 260 658 103 624 505 667 279
 594 405 250 117 192  14 674 511 140 436 136 664  96 289 656 263 575 591 110 311 607 301 561 619 184 582 688 424
 209 781  64 780 357 264 740 508 112 610  78 573 188 784 434   7 128 567 246 350   6  84 527 726 685 163 555 464
  39  55 308 200 233 121 614 158 763 557 360 735  91  56 713 517 615 161 262 559 642 729 330 206 771 366 159 670
  60 166 588 219 585 676 558 563 148 155 736 261  33 217 134 483 272 633 362 162 359 333 485 529  29 738 520  21

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00597e+07us (= 10059.7ms, 10.0597s)
Satisfaction error: 10
Number of search iterations: 3249
Number of local moves: 2715 (including on plateau: 2668)
Number of local minimum: 22 (including on plateau: 318)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 210 331 1 322 95 545 587 2 307 125 526 139 471 8 611 116 644 167 66 691 437 503 26 154 766 143 463 58 => the sum is 8514 rather than 10990
Problem in row 3: 548 249 723 267 525 123 177 745 468 207 284 10 213 71 428 682 535 431 687 53 467 119 16 47 542 678 620 101 => the sum is 10016 rather than 10990
Problem in row 4: 707 187 442 710 377 719 433 61 46 203 137 618 730 278 643 775 418 344 18 172 268 173 235 298 479 326 70 595 => the sum is 10462 rather than 10990
Problem in row 5: 462 538 669 310 276 578 639 328 782 613 773 178 761 394 779 746 469 228 491 72 45 539 694 640 238 698 714 721 => the sum is 14375 rather than 10990
Problem in row 6: 747 196 583 562 269 608 3 270 576 756 294 495 507 742 171 81 722 347 549 315 37 663 630 370 696 760 273 625 => the sum is 12847 rather than 10990
Problem in row 12: 523 313 348 612 534 275 76 776 257 481 38 133 49 712 528 327 677 731 296 510 500 690 242 147 421 293 63 131 => the sum is 10683 rather than 10990
Problem in row 20: 679 28 570 565 684 665 12 108 226 300 458 716 596 683 23 552 156 51 751 292 151 75 149 522 571 668 709 675 => the sum is 11635 rather than 10990
Problem in row 22: 601 697 401 706 689 291 144 732 50 4 113 65 666 15 85 580 317 234 36 695 79 332 754 700 673 553 83 346 => the sum is 10641 rather than 10990
Problem in row 24: 138 241 182 743 145 472 259 662 441 686 547 631 181 280 265 120 416 90 410 680 17 260 658 103 624 505 667 279 => the sum is 10702 rather than 10990
Problem in row 28: 60 166 588 219 585 676 558 563 148 155 736 261 33 217 134 483 272 633 362 162 359 333 485 529 29 738 520 21 => the sum is 10025 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 577 318 189 235 760 645 385 455 219 376 172 105 187 691 670  62 394  67 436 587 552 118 303 665 441 166 431
 437 580 214 656 147  28 704  52 324 425 586 731 499 503 330 367 398 637 169 554 389  23 297 574 259 326 724  57
 553 636 116 270 639 620 127 635 357 226 770 594 663 719 766 366 334 738 582 275 669 158   9 450 373 335 399 718
  97 729  96 675 197 151  59 304 676  76 734 746 544 405 176 444 184 174 767 222  15 406 375 699 388 693 600 358
 506 782  73 200 659 714 168 461 773 374 265  89 148 651 527 286 317 617  51 201 157 579 302 648 638 150 332 322
 692 238 583 323 701   2 560 655  56 445   8 768 121 754 349 613 129 490 234 700 170  34 631 262  10 485 752 225
  58 271 783 345  41 209 623 344 608  54  35 402 232 203 160 244 593 672  95 610 242 141 556  82 575 125 289 177
 715 581  91  85 774 213 210  12 674 779 165  61 114 710 495 595 780 452  80 464 565 311 740  30  18 273 687 316
  84 689 432 597 186 559  77  92 707 745 161 564 397 274 551  42 434 115 130 727   4 602 208 599 144 590 664 688
 195 423  78 550 447 549 291 204 497 518 529 283 229 205 721 486 569 143 470 278 453 493 522 227 364 267 537 462
 287 531 421 502 346 284  94 627  45 498 488 603 342  26 442 500 507 526 477  36 463 489 479  63 469 484 467 494
 347 640 478 491 315  68 751 533 618 321 696 466  25   6 764 660   3 756 328 327 363 120 440 266 314 541 352   1
  49  65 288 616 504 662 607 107 307 149 298  53 413 650 514 771 268  14 505 459 294 230 117 194 353 409 261 598
 589 162 708 400 465 313 530 392 621 410 300 220 140 381 255 131 483 319 408 414 654 561 380 448 211 555 386 154
 624 481 601 183 435 277 356 524 276 666  33 540 606 135 251  43 668 377 677 630 615 215 680 146 417  31  38 685
 512 279  29 730 511 458 419 155 136 557 695  19 355 224  20 339 206 649 370 446 735  74 329 761 750 686 456  90
  83 422 542 609  13  50 776 726 133  64 661 384 237 568 562 236 331  55 508 563 720 337 451 520 216 336 588 299
 338 239 605 264 301 543  69 212 202 309 188 510 736 474 641 460   7 292 471 449 501 633 765 428 741  47 111 454
 192 480 584 778 725 775 365 110 472 249 528  71 308 382  93 733 269  60 252 185 233 690 424 539 545 164 132 652
 280 340 257 290 619 604 475 781 223  39 391 626 673 293 515 137 250 193 682 427 178 757 306 723  37 509 282 103
 429  24 625 247 179 698 163 742 744 722 592 253 711 482 245  46 658 614 629 113 207 310  88 679 415 717 354 359
 759 433 496 393 762 671 513 343 390 312 566 128 547 591 243  75 596 248 473 573 281 106  66 341  16 240 657 171
 100 487 228  40 578 430 647 256 369 241 404 516 567 152  27 572 361 167 124  99 379 403 122 350 612  81 182 351
 418 246 387 420 175 104 642 395 231 643 683 254 468 546 739 191 538  32 348 684  87 295 678 102 325 476 134 749
 368 190 371  48 305 519 199 272 142 571 181 439 777 517 138 521 728 585 221  86 396 706 109 411 634  44 769 743
 713   5 758 753 558 296 320 536 697 653 126 681 372  70 139 622 123 694 412 362 576 747 705 457 703 737 112 218
 628  22 632 180 101 173 217 709  98 646 333 401  17 763 258 732 492 534 748 145 772 407 523  21 535 532  11 360
 153 438 196 156  72 260 383 426 159  79 198 416 644 119 378 108 702 443 712 525 285 611 570 667 263 716 548 755

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00615e+07us (= 10061.5ms, 10.0615s)
Satisfaction error: 9
Number of search iterations: 3011
Number of local moves: 2522 (including on plateau: 2474)
Number of local minimum: 25 (including on plateau: 301)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 553 636 116 270 639 620 127 635 357 226 770 594 663 719 766 366 334 738 582 275 669 158 9 450 373 335 399 718 => the sum is 13097 rather than 10990
Problem in row 7: 58 271 783 345 41 209 623 344 608 54 35 402 232 203 160 244 593 672 95 610 242 141 556 82 575 125 289 177 => the sum is 8769 rather than 10990
Problem in row 9: 84 689 432 597 186 559 77 92 707 745 161 564 397 274 551 42 434 115 130 727 4 602 208 599 144 590 664 688 => the sum is 11062 rather than 10990
Problem in row 13: 49 65 288 616 504 662 607 107 307 149 298 53 413 650 514 771 268 14 505 459 294 230 117 194 353 409 261 598 => the sum is 9755 rather than 10990
Problem in row 15: 624 481 601 183 435 277 356 524 276 666 33 540 606 135 251 43 668 377 677 630 615 215 680 146 417 31 38 685 => the sum is 11210 rather than 10990
Problem in row 21: 429 24 625 247 179 698 163 742 744 722 592 253 711 482 245 46 658 614 629 113 207 310 88 679 415 717 354 359 => the sum is 12045 rather than 10990
Problem in row 23: 100 487 228 40 578 430 647 256 369 241 404 516 567 152 27 572 361 167 124 99 379 403 122 350 612 81 182 351 => the sum is 8845 rather than 10990
Problem in row 26: 713 5 758 753 558 296 320 536 697 653 126 681 372 70 139 622 123 694 412 362 576 747 705 457 703 737 112 218 => the sum is 13145 rather than 10990
Problem in row 28: 153 438 196 156 72 260 383 426 159 79 198 416 644 119 378 108 702 443 712 525 285 611 570 667 263 716 548 755 => the sum is 10982 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  44  97 714 482 412 670  98 664 567 318  51 152 275 182 489 181 553 514  25 128 661 289 177 306 642  43 607 546
 187 692 136 572 497  38 406  36 725  72 606 761 240 620  90 100 188 608 191 565 726 695 244 199 727 119 719 510
 479 703 154 311 718 276 771 449 158   5 736 515 623 686 197 768  14 464  20 189  81 140 308 629 480 710 331  75
 214 633 672 645 150 501 294 265 466 590  83 444 376 442 271 325 614  13 357 458 264 619 193 165 673 640 596 696
 691 323 509 310 643 679 667 753 455 712 268 230 316 740   8 270 685  46 148 418 756 665 281 649 262   9 549 587
 506 584 638  19 267 730 603  34 453 588 524 749 147 261 243 663 651 662  27 578 118  33 337 227   2 637  26 683
 211 139 585 746 617 113 660 534 151 190 544 521 477  67 627 502 717 290 639  89 394 625 728 707 538 779 654 347
 751 784 762 680 757 615 595 729  77 302 773 624 701 285 233 457 574 468 759 127 618 219  87 125 153  49 257  21
 536 734  88 447 481  95 365 303 505 202 684 780 542 405 706 142 307 610 304 555 545 203 157 467 238 131  10 448
 653 504 198 144  76 239 234 484  37  62 460 511 101 170 296 556 526 769 512 699 363 612 196 552  50 632 630 724
  96  29 700 246 236  16 589 693 772 111 218 576 602 495 245 335 722 436 155 598 738 115 513 678 192 539 183 162
 522 459 473 571  32 149 456 228 491 475 492  60 487 242 470 465 462 260 104 259 431 434 527 503 446 655 433 404
 783 332  79 186  56 450 390 600 305 543 312 320 381 224 216 352 161 577 563  15 255  63 613 599 621  68 593 107
 422 439 432 380 400 402 424 425 438 389 441  59 399 398 361 440 426 452 368 386 338 407 419 372 367 396 397 413
 395 341 355 420 427 388 401 410 408 345 383 360 393 392 339 344 359 328 370 765 430 353 379 415 326 373 417 374
 364 435 295 694 309 391 747 314 403 377 362 500 384 109 371 358 272 299 676 366 369 351 333 145 317 301 658 490
 354 428 319 409 474 745 123 135 217 775 562 758 485 560 569 704   1 208  58  55 280 300 486 179 126 212 463 340
  85 258 548 387 697 334 476 454 755  52 256 375 297 702  57 251 114 291 716 348 461 414 382 499 561 329 178 713
 586 195 483  71 564 583  80 171 223 293 274 106 322 674 631 634 156 741 469 143 215 437 592 421 705 169 313 739
 626 343 254 778 507 315 451 698 292 498 733   4 776 570 411  41   3 108 671 250 594 229 657  70 611  78 221 201
 385 102  73 604 688 777 184 220 760 252  94 286 122 185 715 573 763 568 641 647 616 209 605 767 750 566 429 330
 298 206 249 174 284 517 167 622 690 752 349  40 597  39 732 646 423 635 213 766 235 723 133   6 137 581 551 225
 742 668 416  82 494 247  64  54 141 350 146 207 160 519  84 278 529 708 173 689  45  99  30 176 226 117  18 582
  11 531 134 488 129 288 518 754 253 721 516   7 748 273 558 735 609 172 659  48  65 547 530 537 324 650  22 163
 175 159 591  42 283 168 601 493  24 445 681 669 180 557 652 166 269 210 579 520 636 743 200 731  17 287 675 237
 263 528 121 222  53 644  23  86 656 666  74 327  47 709 770  61 356 112 744 687  92 720 559  12 782 737 764 342
 580 103 781 648 204 554 282 116  28 628 248 541 130 138 525 110 443 105 471 478 132  69 550 279 194 472 205  35
  31 241 231 232 535  66 321 266 540 277 120 508 682 346 124 533  93 336 378 164 532 677 774 575 523 711  91 496

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00618e+07us (= 10061.8ms, 10.0618s)
Satisfaction error: 13
Number of search iterations: 2591
Number of local moves: 2225 (including on plateau: 2181)
Number of local minimum: 11 (including on plateau: 271)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 44 97 714 482 412 670 98 664 567 318 51 152 275 182 489 181 553 514 25 128 661 289 177 306 642 43 607 546 => the sum is 9887 rather than 10990
Problem in row 2: 187 692 136 572 497 38 406 36 725 72 606 761 240 620 90 100 188 608 191 565 726 695 244 199 727 119 719 510 => the sum is 11269 rather than 10990
Problem in row 4: 214 633 672 645 150 501 294 265 466 590 83 444 376 442 271 325 614 13 357 458 264 619 193 165 673 640 596 696 => the sum is 11659 rather than 10990
Problem in row 5: 691 323 509 310 643 679 667 753 455 712 268 230 316 740 8 270 685 46 148 418 756 665 281 649 262 9 549 587 => the sum is 12629 rather than 10990
Problem in row 7: 211 139 585 746 617 113 660 534 151 190 544 521 477 67 627 502 717 290 639 89 394 625 728 707 538 779 654 347 => the sum is 13191 rather than 10990
Problem in row 8: 751 784 762 680 757 615 595 729 77 302 773 624 701 285 233 457 574 468 759 127 618 219 87 125 153 49 257 21 => the sum is 12582 rather than 10990
Problem in row 13: 783 332 79 186 56 450 390 600 305 543 312 320 381 224 216 352 161 577 563 15 255 63 613 599 621 68 593 107 => the sum is 9764 rather than 10990
Problem in row 17: 354 428 319 409 474 745 123 135 217 775 562 758 485 560 569 704 1 208 58 55 280 300 486 179 126 212 463 340 => the sum is 10325 rather than 10990
Problem in row 21: 385 102 73 604 688 777 184 220 760 252 94 286 122 185 715 573 763 568 641 647 616 209 605 767 750 566 429 330 => the sum is 12911 rather than 10990
Problem in row 23: 742 668 416 82 494 247 64 54 141 350 146 207 160 519 84 278 529 708 173 689 45 99 30 176 226 117 18 582 => the sum is 8044 rather than 10990
Problem in row 26: 263 528 121 222 53 644 23 86 656 666 74 327 47 709 770 61 356 112 744 687 92 720 559 12 782 737 764 342 => the sum is 11157 rather than 10990
Problem in row 27: 580 103 781 648 204 554 282 116 28 628 248 541 130 138 525 110 443 105 471 478 132 69 550 279 194 472 205 35 => the sum is 9049 rather than 10990
Problem in row 28: 31 241 231 232 535 66 321 266 540 277 120 508 682 346 124 533 93 336 378 164 532 677 774 575 523 711 91 496 => the sum is 10403 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 172 122 749 414 279 682 334 372 772 203 113 555 767 722 111 132 339 488 554 257 296 186 743 683 697 410 757 463
   1 742 735 574  85 369 298 239 437 691 295 163 741 130 149 261 363 765 328 563  74 381  32 773  15 185 301 631
 373 190 713 379 759 715 112  93 490 515 299 142 382 694 249 597 570 435 266 431 712 285  61 138   6 189 485 710
  56 566  79 583 209 201 592 526 761 352 426 701 449 323 453 750  18 619 609 688 648 162 226 275 546 524 626  76
 582 613 331 198 137  36 776 212 136 242 739 315 647 327 564 245 168 101 517 654 428  27 484 689  68 655 632 467
 208 668 200 670 170 686 273 744  87  23  26 651 568 233 232 227 726 601 182 764 734 636 548 444 462  73  75 314
 306 278  65 755  72  92 598 719 608 152 637 464 312  39 674 519 158 412 117 665 204 539 589 290 590 254 677 205
 781 664 678 634 508 481 695 362 144 604 544 220 628 572 192 529 332 206  45 104 345 602   3 237 169 219  20 547
 318 620 160 100 184 640 751 535 576 497 353 541 243 207  69 370  70 356 324 725 766 297 591 498 253 491 234 221
 146 167 584 223  16 518 131 164 699 540 400 391 510 520 304 506 492 121 763 418 283  22 527 523 493 499 509 521
 708 210  60  83 747  84 705 650  94  12 504 733 718 440 482  30 259 155 720 322  29 448 260 141 662 556 472 706
 525  40 157 447 704 562 569  24 487 748 551 114  34 143 140 148 680 693  66 346 657 724 103 326 624 600 191 587
 347 557 145 105 558 530 337 320 642 573 470 262 173 359  38   2 171 455 501 330 153 177 476 528  91 645  13 133
 430 390 419 421 397 459 450 405 415 420 404 403 357 364  21 432 375 398 425 394 385 422 386 446 438 374 361 399
 621 736 406 454 617 542   9 183 392 368 595  46 377 251 367 348 616 341 366 606 336  59 365 197 378 393 692 329
 732 473  99 354 593 360 230 263 270 119 228 723 625 429 675 321 416 300 737 109 358 384 644 389 395 350 351  63
 479 309 627 134 325 194 685 246 672  41 666 633 166 653 777 411 214 159 673 496 538 536 174 486 740 630 549 671
 571 469 553 310 401 258   7 511 272 577 269 552 679 585 753 502 580 690 180 115  37 586 407 471 127  47 294 187
 264 303 783 531 265 267 110 333 280 376 178 434 500 123 244 641 468 284 255 288 643 639 252 661 250 248 596 774
 676  86 268 383 477 277 516 409  55 667 224 150  97 380 638 769 335  43 408 125 465 460 308 684 443 659 175 503
 424 709 281 199 716 196 652 461 388 225  95 313 316 770 522 282 612 216 567  71 176 475 703  28 193 433 349 618
 387 211 550  53 276 413 286 660 711 474 779 594  11 730 305 588  48 560 213 513 505 687 731 287  67 656 605  78
  98  57 151 302 116 106  54 559 439 247 129  35 436 649 338 235 532 696 714  82 512 728 669 445 752  52 165 274
 222 156 483 775   8  31 291  88 599 319 622 402 126 537 681  33 607 543 700 102 610 342 340 456 307 494 458 658
 746 124 466 615 478 128  81 135 188 780  51 603 108 489 729 635 717 217 240 581  80 215 758  89 139 289 417 423
 236  19 317 698 533 778 507 534 293 442 565  49 241 181 441 707 311 480   4 396 292 161 154 256 756 118 371 271
 343 784 229 579 578 762 514 614  58 721  90 457 561  96 611 107  42  10  64  77 545 760 451 355 754 202 495 147
 238 727 702  17 782 623 427 629  25  62 738 344 218  44 231 663 771 646 452 768 179  50   5 195 575 745 120  14

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00602e+07us (= 10060.2ms, 10.0602s)
Satisfaction error: 13
Number of search iterations: 2247
Number of local moves: 1864 (including on plateau: 1820)
Number of local minimum: 8 (including on plateau: 268)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 172 122 749 414 279 682 334 372 772 203 113 555 767 722 111 132 339 488 554 257 296 186 743 683 697 410 757 463 => the sum is 12372 rather than 10990
Problem in row 2: 1 742 735 574 85 369 298 239 437 691 295 163 741 130 149 261 363 765 328 563 74 381 32 773 15 185 301 631 => the sum is 10321 rather than 10990
Problem in row 4: 56 566 79 583 209 201 592 526 761 352 426 701 449 323 453 750 18 619 609 688 648 162 226 275 546 524 626 76 => the sum is 12044 rather than 10990
Problem in row 6: 208 668 200 670 170 686 273 744 87 23 26 651 568 233 232 227 726 601 182 764 734 636 548 444 462 73 75 314 => the sum is 11225 rather than 10990
Problem in row 8: 781 664 678 634 508 481 695 362 144 604 544 220 628 572 192 529 332 206 45 104 345 602 3 237 169 219 20 547 => the sum is 11065 rather than 10990
Problem in row 13: 347 557 145 105 558 530 337 320 642 573 470 262 173 359 38 2 171 455 501 330 153 177 476 528 91 645 13 133 => the sum is 9091 rather than 10990
Problem in row 17: 479 309 627 134 325 194 685 246 672 41 666 633 166 653 777 411 214 159 673 496 538 536 174 486 740 630 549 671 => the sum is 12884 rather than 10990
Problem in row 20: 676 86 268 383 477 277 516 409 55 667 224 150 97 380 638 769 335 43 408 125 465 460 308 684 443 659 175 503 => the sum is 10680 rather than 10990
Problem in row 22: 387 211 550 53 276 413 286 660 711 474 779 594 11 730 305 588 48 560 213 513 505 687 731 287 67 656 605 78 => the sum is 11978 rather than 10990
Problem in row 23: 98 57 151 302 116 106 54 559 439 247 129 35 436 649 338 235 532 696 714 82 512 728 669 445 752 52 165 274 => the sum is 9572 rather than 10990
Problem in row 25: 746 124 466 615 478 128 81 135 188 780 51 603 108 489 729 635 717 217 240 581 80 215 758 89 139 289 417 423 => the sum is 10521 rather than 10990
Problem in row 26: 236 19 317 698 533 778 507 534 293 442 565 49 241 181 441 707 311 480 4 396 292 161 154 256 756 118 371 271 => the sum is 10111 rather than 10990
Problem in row 27: 343 784 229 579 578 762 514 614 58 721 90 457 561 96 611 107 42 10 64 77 545 760 451 355 754 202 495 147 => the sum is 11006 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 397 474 167 462 729 113  94 774 341 450  46   8 591 736  88 437  84 479 175 764 417 681 132 400 209 451 541 750
 639 755 570 249 173 684 574 588 193 201 599 208  42 100 172  59 626 568 492 676  95 733 220 770 547  41 737 145
 727 722 553 197 716 455 438 545  20 305 619 537 487 500 753 180 731 304 762 746 313 280  18 411  93 709 178 216
 718 253 782 693 572 151  49 324  89 444 206  26  82 465  23 283 659 135 719 700 756 159 168 499 704 458 147 726
  44 252 346 214 466 672 665  90 359 121 448  97 771  13 562 139 217 177 670 482 493 235 563 651  35 768 745 695
 336 414  70 236 319 361 198 760 486 655 317 561 741 104 152 721 565 382 688 162 640 242 644 114 567  53  31 471
  39 617 713  98  79 748 592 661  62 618 423 345 696 286 210 593 149 203 386 576 327 646  21 580 274 241 663 144
 587 552 497 131 353 476 642 559 600   6 185 133 302 583 296 119 211 523 244 430 443 759 340 507 612 674  68 158
 581 571 536 550 275 509   9  56 557 508 415 702 127 514 297  40 510 463   4 554 516 725 269 410 102 605  29 556
 535 407 532 521 373  14 495 453 445  17 538 634  96 765 542 751  11 248 520 138  51 233 330 278 440  92 484 677
 309 189 223  60 105 387 662 728 679 165 110 267 254 260 205 637 763 166 707  83 598 459 481 573 628 633 257 402
 213  65 322 334 513 290 754 625 575 164 363 480 331 195 776 250 335 604 434 522 564 528 439  33 436 355 418  72
 146 431 446 285 419 579 318 435 533 224 358 181 293 428 630 412 475 666 468 366 157 635 530 303 148 202 398 524
 442 416 426 421 457 396 394 365 239 489 424 408 403 329 356 406 369 344 405 384 381 350 399 441 391 392 362 401
 409 784 740 155  27 282 738 179 338 742 141 371 433 326 404 230 374 694  24 196 690 354  75 687 360 585 315 337
 268 698 247 775 780 701 473 255 715 779 106 120 347   5 683 339 376  34 551  48  12 427 555 734 298 226 118 176
 624 653 199 660 472 724 582 108 125 325 515 526 503 375  67 566 299 467 221 277 502   2 643 188 228  28 686 425
 758 675 333 743 310 232 154  55 380 420 284 378 413 682 549 773 767 632 261 124 321 234  50 501 292 136 262 271
 540 273  77 429 169 187 377 712 769 272 558 288  85 622 192 207 560 364 266 456 735  58 452 218 781 294 664 385
 265   1  10 342  63 229 351 711 259 710 739 586 595 308 316 454 153 140 589 231  69 546 370 529 301 601 163  30
 281 129 142 496 613  91  74 256 708 395 531 614 641 629 620 519  22 494 348 306 258 390  54 596 488 539 548 597
 470  87 483 732 761 287 222  81 238 505 752  15 137  61 648 616 747 291 101 295 130 194 184 320 723 182 490 225
 669 328 610 170 190 491 778 191 621 657 156 652 215 174 703 143 658 219 543  99 525 161 584 200 117 477 352 307
 464 240 383 602 112 312 245 517 422  78  43 578 389 504 485 623  25 263  38 627 705 393 720 126 757 518 647 650
 115 160 615 103 636  37 111 279 300 512 673 777  76 717 461  32 706 609 608 498 311 134 766 123 109 544 388 590
 150 527  66 357 611 569 243   7  86 372 680  19 577 264  36 447  71 772 449 668 606 506 697   3 689 691 478 349
 212  47 246 607 511 314 289  45 107 783 534 749 714 367 332 343 276  64  80 460 171 603 692 128 645 379 638 654
  52 270 656 368 186 699 469 631 744  73 227 730 649 678 432 671 251 685 237 122 204 323 594 667  16 116 183  57

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00591e+07us (= 10059.1ms, 10.0591s)
Satisfaction error: 8
Number of search iterations: 2364
Number of local moves: 1958 (including on plateau: 1909)
Number of local minimum: 16 (including on plateau: 255)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 639 755 570 249 173 684 574 588 193 201 599 208 42 100 172 59 626 568 492 676 95 733 220 770 547 41 737 145 => the sum is 11456 rather than 10990
Problem in row 3: 727 722 553 197 716 455 438 545 20 305 619 537 487 500 753 180 731 304 762 746 313 280 18 411 93 709 178 216 => the sum is 12515 rather than 10990
Problem in row 10: 535 407 532 521 373 14 495 453 445 17 538 634 96 765 542 751 11 248 520 138 51 233 330 278 440 92 484 677 => the sum is 10620 rather than 10990
Problem in row 16: 268 698 247 775 780 701 473 255 715 779 106 120 347 5 683 339 376 34 551 48 12 427 555 734 298 226 118 176 => the sum is 10846 rather than 10990
Problem in row 20: 265 1 10 342 63 229 351 711 259 710 739 586 595 308 316 454 153 140 589 231 69 546 370 529 301 601 163 30 => the sum is 9661 rather than 10990
Problem in row 21: 281 129 142 496 613 91 74 256 708 395 531 614 641 629 620 519 22 494 348 306 258 390 54 596 488 539 548 597 => the sum is 11379 rather than 10990
Problem in row 22: 470 87 483 732 761 287 222 81 238 505 752 15 137 61 648 616 747 291 101 295 130 194 184 320 723 182 490 225 => the sum is 9977 rather than 10990
Problem in row 24: 464 240 383 602 112 312 245 517 422 78 43 578 389 504 485 623 25 263 38 627 705 393 720 126 757 518 647 650 => the sum is 11466 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 375  65  55 685 698 393 695 355 524 561 586 138 343  59 434 771  46 568 719 247 239   3 370  60  44 761 429 767
 409  28 751 253 367 479 353 357 612 111 206  13 672 384 303 203 149 244 703 697 674  85 153 770 752 188 512 513
 271 160 187   2  69 743 340 467 166 171 128 195 773 229 671 531 327 407 142 676  92 596 118 580 468 680 522 109
  95 255 572 768  74 104 193 134 333 750 475 282 545 502 460 684 207 567 254 526 517 124 577 416 623  15 696 242
 452 702 565 267 317 362  22 214 156 636 498 315 154 175 740 216 432 548 632 749 601 646 665 455  36  58 354 481
 373 536 310  39 650 563 778 164 766 368 413 101 102 736  96  26 540 306 718 110 645 146 611 723 559  50 159 402
 259 558 170 186 582 721 640 289 323 279  40 564 507 658 670 541  62 535 148 208 351  83 647 542 245 125 712 345
 639 780 681 249  17 420 232 544 389 576 235  71 539 257 642 329 496 619 654 179 593 501 328 133 516  45 117 209
 728 352 236 463 196 473 454 444 651 705 747 458 211 549  11 136 730 230 143 630 503 278 720  72  88 318 386  78
 291 687 161  68 190 616 489 218 372 603 181 394 269 112 391 486 628  32 669 312 602 678 311  76 777 713  77 587
 688 224 414 359 174 165 465   1 403 243 436 588 745 240 430 550 387 614 103 584 476 201 456 538 443 396 509 158
 392 589 274 324 667 554  70 763 425 574 360 552 457 335 578  34 180 397 410 304  56 709 139  93  54 735 419 546
 286 764 155 400 313 284  33 177 145 381 459 617  80 724 657 183 152 127 431 480 379 492 776 107 398 600 772 219
 406 380 466 477 659 322 401  42 388 105 426 742 701 347 296 433 144 172 184 374  18 605 690 482 726 510 168 326
 450 225 385 276 656 173 706 699 762 562 234 755 427 760  14 620 491  87 238  98 560  52 682 525 483 643  73 365
 499 725 573 453 265 263 500 553 739  86 273 625 302 325 113 774 428 223 613  84  91 199 471 283 141 638 228 523
 663 215 260 634 661 300 624 461 474 233 298 272 332  16 252 222 734  67 664 321 338 737 261 344 287 348 533 439
 308 395 583 585 349  25 404 485  35 408  75 147  12 504 741 757 781 511 213 547 629 178 597 487 556 122 350 412
 369 337 292 108 447 140 782 405 693 268  81 633 131 754 106 519 435 708 399 495 307 451 258 221 722 299   4 626
 198 167 514 631 679 281  48 704  90   7 330 116 339 114 363 293 599 202  10  66 783 575 266 675 508 376 151 411
 506 472 189 746 277  53 377 738 129 527 295 264 569 237 212 607  19 759  89 748 571 241  38 627 364  64 610 662
  79 415 784 655 182 606  31 537   9 520 717 609 494 301  27 250 598 320 765 383  63 251 418 490 356 366 518 246
 185 532 615 707 618  21 248 446  37 660 689 591 157 137 534 210 692 464 469 121 280 358  29 390   5 197 668 557
 488 132 448 309 744 732 205 641 521 126 595 714 314 336 288 421 424 130 204 226  30 677 686 673 438 579 220 115
  23 341 382 120 331 779 648 445 275 361 604 440 769 716 169 449  24 608 462  61 753 505  99 294  97 683 262 290
 515   8  20 378 710 162 775 123 727 200 653 227 346 649 622 191  43 644 176 594 192 711  82  94 256 581 756 555
 621 231 731 119  47 590 342  41 652 441 637 297   6 305 470  57 551 371 285 733 163 592 100 417 570 566 150 758
 422 715 217 729  51 666 135 543 194 528 319 270 694 529 700 497 691 530 493 437 484 316 442 423 478 334 635  49

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00612e+07us (= 10061.2ms, 10.0612s)
Satisfaction error: 11
Number of search iterations: 2365
Number of local moves: 1975 (including on plateau: 1930)
Number of local minimum: 18 (including on plateau: 253)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 409 28 751 253 367 479 353 357 612 111 206 13 672 384 303 203 149 244 703 697 674 85 153 770 752 188 512 513 => the sum is 10941 rather than 10990
Problem in row 3: 271 160 187 2 69 743 340 467 166 171 128 195 773 229 671 531 327 407 142 676 92 596 118 580 468 680 522 109 => the sum is 9820 rather than 10990
Problem in row 5: 452 702 565 267 317 362 22 214 156 636 498 315 154 175 740 216 432 548 632 749 601 646 665 455 36 58 354 481 => the sum is 11448 rather than 10990
Problem in row 13: 286 764 155 400 313 284 33 177 145 381 459 617 80 724 657 183 152 127 431 480 379 492 776 107 398 600 772 219 => the sum is 10591 rather than 10990
Problem in row 15: 450 225 385 276 656 173 706 699 762 562 234 755 427 760 14 620 491 87 238 98 560 52 682 525 483 643 73 365 => the sum is 12001 rather than 10990
Problem in row 18: 308 395 583 585 349 25 404 485 35 408 75 147 12 504 741 757 781 511 213 547 629 178 597 487 556 122 350 412 => the sum is 11196 rather than 10990
Problem in row 20: 198 167 514 631 679 281 48 704 90 7 330 116 339 114 363 293 599 202 10 66 783 575 266 675 508 376 151 411 => the sum is 9496 rather than 10990
Problem in row 23: 185 532 615 707 618 21 248 446 37 660 689 591 157 137 534 210 692 464 469 121 280 358 29 390 5 197 668 557 => the sum is 10617 rather than 10990
Problem in row 24: 488 132 448 309 744 732 205 641 521 126 595 714 314 336 288 421 424 130 204 226 30 677 686 673 438 579 220 115 => the sum is 11416 rather than 10990
Problem in row 27: 621 231 731 119 47 590 342 41 652 441 637 297 6 305 470 57 551 371 285 733 163 592 100 417 570 566 150 758 => the sum is 10843 rather than 10990
Problem in row 28: 422 715 217 729 51 666 135 543 194 528 319 270 694 529 700 497 691 530 493 437 484 316 442 423 478 334 635 49 => the sum is 12521 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  84  47 568  97 706   7 260 437  53 582 772 519  26 248 605 174 215 231 179 783 487  99 433 665 141 632 779 765
 696 150 149  95 743  58  79 626 707 773 285 127 528 137 200 273  13 725 257 655 375 232 770 443 287 640 278 689
 249 315 275  20 471 637 564 719 192   2 166 532 357 500 263 683 196 235 240 567 113 730 252 425 708 749 117  68
 504 774 621 763  74 780 181  90 662 109 358  81 128  43 379 741 452 201 309 518 164  62  29  33 124 661  98 524
 191  36 434 509 704 721 135  45   9 622 710 549  11 354 323 624 529 674 147 617 572 467  72 648 172 652 393 105
 646 781 439 360  85 585  82 508 571 409 314  55  73 753 461 534 583 541 221  27 577 470 677 114 225 328 133 438
  32 497 126 525 193 543 270 693 125 176 144 210 610 517 747 581 723 118  22  38 578   5 691 675 769  48 761 573
 247 274 428 426 120 584 608 554  51 684 764  54 701 261 293  87 745 759   8 685 100 595 139 565  64 606 603 111
 563 145  96 547 702 322  69 756 190 454 739 784 129  16  17 679 681  89 160  19 734 738 185 502 729 513 219 213
 778  18  92 659 198 388 326 238 246 639 396 645 222 580 182 148 752 570 688 459 116 636 104 256 474  46 535 599
 670 664 658 754 308 268 522 220   1 668 143 631 306 347 510 157 251 153 205 650 493  24 384 345 760 349 340 209
 206 762 755 169   6 635 272  76 489 676 214 424 342 491 574 410  88 714 711 281 218 259 304 230 312 367 630 619
 295 657 423 290 341 413 361 416 286 666 365 709 255 311 310 269 363 401 329 338 421 615 302 254 450 335 279 536
 321 352 327 333 397 378 429 404 458 494 353 445 395 271 121 462 344 453 297 412 441 484 446 777 366 370 301 359
 464 317 351 383 284 447 516 348 449 427 479 380 420 296 325 432 303 435 389 373 430 350 362 398 414 417 415 386
  44 468 394 280 482 382 411 337 477  71 440 343 644 716 402 634  41 472 496 305 385 651 377 186 390 418 455 289
 499 369  30 431 374 101 457 456 512 553 490 224 339 486 442 744 266 392 495 152  10 643 506 511 466 483 376 183
 620 202 520 140  50  63 481 422 654 175 156 161 444 671 159  61 132 686 776  78 627 539 647 550 282  12  70 407
 576 492 726 542 548 501 136  31 480  49 460 298 588 530 488 223 216 559  60 355 476 545 751 204 419 400 130 207
 245 173 276   3 695 705 601 233 560 579 612 724 189 364 733 300 158  37 555 168 277 299 533 391 403 591 123 463
 485 523 628 371 515 165 163 558 107 265 505 316 561 320 531  59 503 551 597 465 399 239 405  28 642 258 537 294
  56 330 313 700 698 108 507 170 623 264 598 669 177 381 694 138 715  23 690  83 680 262  14 540 602  94 162 699
 119 569 731 184 678 469 596 717 727  67 142 372 241 740 663 291 616 587 521  77   4 527 178 594 687 746 768 242
 475 692 253  66 188 334 748 514 234 757 629  15 641  75  21 228 607  80 195 697 732 368 782 618  93 154 319 103
 208 609 211 771 187 146 151 267 713  35 122 346 653 728  65 473 552 194 667 775 478 197 203 556 593 217 307 566
 332 237 742 562 538  34 625 199 735  25  52 712 656 575 283 544 171 331 590 638 110 180 244 288  42 592 703 250
 649 406 106 767 614 718 758 236 387 557 448 436 750 112 526 408 660  57 600 324 227 672 589 155 336  86 546 737
 736 131 318 243  91 498 682 720 292 212 134 229 604 167 673 633 115 722 586 451 766 102 611  39  40 226 613 356

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00596e+07us (= 10059.6ms, 10.0596s)
Satisfaction error: 10
Number of search iterations: 2450
Number of local moves: 2091 (including on plateau: 2045)
Number of local minimum: 16 (including on plateau: 236)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 84 47 568 97 706 7 260 437 53 582 772 519 26 248 605 174 215 231 179 783 487 99 433 665 141 632 779 765 => the sum is 10594 rather than 10990
Problem in row 3: 249 315 275 20 471 637 564 719 192 2 166 532 357 500 263 683 196 235 240 567 113 730 252 425 708 749 117 68 => the sum is 10345 rather than 10990
Problem in row 4: 504 774 621 763 74 780 181 90 662 109 358 81 128 43 379 741 452 201 309 518 164 62 29 33 124 661 98 524 => the sum is 9463 rather than 10990
Problem in row 5: 191 36 434 509 704 721 135 45 9 622 710 549 11 354 323 624 529 674 147 617 572 467 72 648 172 652 393 105 => the sum is 11025 rather than 10990
Problem in row 8: 247 274 428 426 120 584 608 554 51 684 764 54 701 261 293 87 745 759 8 685 100 595 139 565 64 606 603 111 => the sum is 11116 rather than 10990
Problem in row 12: 206 762 755 169 6 635 272 76 489 676 214 424 342 491 574 410 88 714 711 281 218 259 304 230 312 367 630 619 => the sum is 11234 rather than 10990
Problem in row 18: 620 202 520 140 50 63 481 422 654 175 156 161 444 671 159 61 132 686 776 78 627 539 647 550 282 12 70 407 => the sum is 9785 rather than 10990
Problem in row 23: 119 569 731 184 678 469 596 717 727 67 142 372 241 740 663 291 616 587 521 77 4 527 178 594 687 746 768 242 => the sum is 12853 rather than 10990
Problem in row 24: 475 692 253 66 188 334 748 514 234 757 629 15 641 75 21 228 607 80 195 697 732 368 782 618 93 154 319 103 => the sum is 10618 rather than 10990
Problem in row 27: 649 406 106 767 614 718 758 236 387 557 448 436 750 112 526 408 660 57 600 324 227 672 589 155 336 86 546 737 => the sum is 12867 rather than 10990
