@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 134  36 641 563   5 464 588 611 665 531 172 586 613 111 105 585 221 121 535 167 528  70  61  30 639  19
 209 240 638 647  42 576  14  10 506 478  18 617 621 632 609 628 210  93  43 152  51 234 307 144 549 533
 486 607 104 141 557 642 161 163 573 594 440 175 387 604  77  88 127 120 650  22 344 164 532 553 128 362
 195 403 447   9 550 487  47 530 574 556 634 137 554 619 537 457  52  56  39 433  25  21  78 349 512 500
 521 590 568   8  89 466  63 536 540 548 636  94 575 539 236 241  49   2 663 276 106 416 371   1 567 100
 545 425 396 355 558 589 135 245 480 296 502 174 523 520 470 593  96 354 605  82  28  85  46  79 580  40
  64 498 208 129  11 570 263 312 441 452 600 386 572 407 544 459 133 463 649  23 351  26  27 157 465 591
  16  53 437 444 596  83 482 426 569 606 445 148 587 198 435  44 358 287   4  17 511  57 627 438 429 504
  75 513 414  65 270 501 555 475 147   7 603 217 391 424 467 190 518  20 410 382 182 247 360 313 514 541
 474 479  13 124 365  48 499 618 201  54 427 126 431 494 490 493 231 372 181 373 648 149 227 402 393 489
 404 317 412 377 446 399  74 327 428 436 392  67 166 413 179 547 338 185 232 488 154 477 469 405 291 378
 323 468 449 289  87 257   6 450 454 422 347 108 375 290 472 516 320 132 505 309 200 370 491 340 398 423
 394 388 258 542 318 366 342 353 324 418 471 415 397  15 306 341 359 237 311 251 310 551 448 244 109 333
 381 256 301 292 659 408 293 411 165 357 286 361 243 652 343 562 224 272  37 330 419 348 332 367 180 322
 400 483 283 335 337 406 265  62 363 238 390 524 509 325 496 430 261 267  68 255 374 456 189 336 223 526
 156 328 268 346 214 308 552 275 159 235 668 629 271 249 266 122 529 383 485 254 334 655 222 492 285 116
 215 184  71 304 566 495 546 658 218 225 262 670 170 264 284 350 676 458 204 101 376 385 345 326 246 202
 560 252 462 579 239 171 314 123 635 329 212 302 146 242 273 510 191 443 298 610 453 615 379 196 131 136
 592  55 192 461 280 300 623 631 107 138 281 451 211 294 248 139 481 637 115 667 269 522 364 303 297 143
 331 169 260 380 229 434 674 199 153 228 233 401 187 356 219  72 559 671 253 620 507 299 282 625 145 315
 599 113 150 657 162 203 460 455 205 230 193 664 158 295  98 130 584 476 278 656 421 543 420 259 319  73
 515  35 305 503 581  60 125  84 669 177  50 409 119 173 602 117 571 288 352 577 197 662 220 640  97 673
 339 176 643 118   3  76 597  33  69 194 321 660 155 432 168 178 661 612 369 624 651 250 226 578 517 151
 527 473 538 565 368  38 274  90  86 316  81 216 140 142 484  95 442 626 601 583 213 384 675  99  91 654
 186 646  66  34 653  59 183 622  41 633  45 206 188  80 279 417 598 644 525 110 519 207 595 561 672  32
 160 614 277 534 616 395 666 102  29 103  92  58 112  31 114 497  12 582 389 439 630 608 508 564  24 645

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.52268e+06us (= 6522.68ms, 6.52268s)
Wall-clock time (full program): 6.57651e+06us (= 6576.51ms, 6.57651s)
Satisfaction error: 0
Number of search iterations: 2304
Number of local moves: 852 (including on plateau: 395)
Number of local minimum: 192 (including on plateau: 56)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 374  38  51 654 212 192 543 624  94 126  42 171  52 662 101 546 375 390 600 626 559 136  55 329 619 630
 659 658  45 670  82  81 617 603  54  96  39 460  34  56  95 377 620 449 536 622  36  68  32 640 504 668
 490 641 661  78  47 471 633 537  22  70 118 164  84 515 145 494 551  30 594 566 179 289  35 638 656  93
 339 403 121 625 663 225 548 542  85  88  62  74  69 676 116 540 651 418 553 524  72 206 650  61 415  75
 574 245 489  49 629 648 613 652  44  87 120 176 175 115  43 611 520 293 610 434 219 645 173 156 404  77
 563  91 109 181 614 631 533 509 132 188 250 222 155 191 149 623 558 513 586 560 100  59 448 122 577 137
 673 168 210 204 667 189 420 655 157 674 217 140 282 147  67 564 158 601 196 618 182 216 486 102 649 159
 523 214 615 170 202 130 666 407 125 165 162 161 142 290 664 657 507 427 439 452 306 107 328 243 539 160
 152 211 239 660 510 178 532 227 653 280 228 183 266 114 138 333 589 177 642 585 402 323 251 307 422 199
 675 646 345 278 223 580 530 305 391 367 315 284 285  76 252 310 236 268 405 231 277 302 213 224 469 314
 257 260 244 254 304 616 527 482 234 215 274  86 238 431 185 198 291 294 549 501 275 582 271 550 465 218
 208 200 340 279 300 426 424 628 335 197 312 671 334 298 313 249 276 242 369 303 299 296 256 383 467 396
 355 365 283 368 326 379 338 287 508 353 342 281 262 318 261 186 352 363 258 269 330 447 394 332 493 351
 413 301 386 286 473 357 272 393 378 341 309 336 317 292 201 172 412 432 389 235 423 321 401 382 255 324
 253 308 316 360 425 327 229 381 233 230 380 264 387 470 221 440 462 370 241 395 247 348 456 337 263 458
 117 441 349 343 362 331 297 270 359 442 320 443 497 466 455 166 459  79 419 154 505 409  27 454 209 428
 148 376 444 400 437 372  21 445 354 573 421 347 408 361 385 450  58  65 246 344 397 411 259 499 207 373
 131  37 366 429 414 512 169 195 237 406 478 480 433 487 461 358  57  16 392 180 562 552 417 388 163 481
  80 435  60 485 399 346 193 194 491 430 502 451 436 446 416  63 463 190 150 468 529  26 555 350 205 438
 112 521 607 371 113   9 141 103 547 545 384 541 503 364 511 105 484 240  19  53 464 474 517 556  11 506
 144 472 492 568 479   6  83  50 410 526 554 476 561 557 518  46  66 288   3  17   7 583 534 590 273 498
 322 575 453 151 135 477  90  98 605 587 528   1 581  48 598 134 356 522  41 167 592 311 531  15 295 588
 644  14 488 319 123 127 146   4 612 475 599 571 483 232 606 153   5 535 220 248 576 184 267 578  23 569
 265 565 591 584  29  24  89  71 627 203 632 525 643 567 635 187 124 457  97  28 639 572 516  18  73  40
 104  12 398  25 133 570   8  31 595 593 634 621 636 602 596 174  64 496 128 111 495 609 637 514   2  13
 226 604  99  10 500 597 139 108 519 544 579 672 538  20 669 665 106 647 119 110 129 325  92  33 143 608

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00553e+07us (= 10055.3ms, 10.0553s)
Satisfaction error: 2
Number of search iterations: 3715
Number of local moves: 1366 (including on plateau: 595)
Number of local minimum: 302 (including on plateau: 82)
Number of resets: 2
Number of restarts: 0

Problem in column 17: 375 620 551 651 520 558 158 507 589 236 291 276 352 412 462 459 58 57 463 484 66 356 5 124 64 106 => the sum is 8800 rather than 8801
Problem in column 18: 390 449 30 418 293 513 601 427 177 268 294 242 363 432 370 79 65 16 190 240 288 522 535 457 496 647 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   4 349   9 312 255  93 417 537 649 614  72 440 646 314 606 209 611 557 581 159  85  35 615  76 136 420
  44 114  63  46  33 574   7 618 162 582 182 546 648 507 597 362 623 547  79 107 518 195 519  34 553 541
 617 655 222  22 186 156 332  31 593 633 516 199 640 636 601 436 449 525 121 137  14 142  12 515 183 229
 305 577 322 394 150 600  77 248 465 523 102 568 556  89 550 140 622 158 641  39 129 189 169 608 569  11
 663 485  25 560   5  52 105 492  65 405 258 529 539 621 563 424 571 132 603 551 502   1  96 444  10 100
 548 514 244 388 639  17   6 587  37 566 275   2 347  27 512 559 443 580 208 138 323 286 524 358 558 115
 439 281  24 239  21 452 352 477 421 490 543 588 672  16 283 644 433 532  62  83 552 161 442 429 108  57
 498 605 313 579  61 411 152  20 501 141  69 627 403 561 573 415 425 642 575 428 149  30 328 175  67  53
 570 585 147 338  81  48  26 423  49 544 489 653 236 486 470 335 399  19 474 340 536  66 361 381 382 363
 457 343 407 453 325 513 265 112  99  68 230 472 393 396 359 432  78 304 504 318 441  71 527 111 450 673
 487 348 391 469 379 400 268 218 294 289 445 321  28 497 228 274 345 531 339 264 412 344 215 390 103 522
 146 287 385 364 334 227 177 479 467 422 271  60 402 488 350 383 270 375  88 660 387 505 194 355 333 392
 408 430 326 434 320 308 250 240 202 306  50 638 414 473 261 298 351 295 217 562 389 220 466 120 386 437
 256 337 369 413 409 139 426 476 367 300 365 416 540 384 377 273 213 280 277 238 301 631 291 188 225 310
 293 368 404 373 555 460 451 233 154 496 296 356 456 127  18 237 576 448 419 327 317 266 592 173 221 184
 410 262 607 185 309 125 431 179 620   8 346 549 200 231  80 645 101 196 635 247 269 511 360 257 584 454
 259 212 455 252 299 357 176 246 628 630 353 168 311 178 106 324 669 288 216 366 395 674 297 483 174 285
 282 160 447 378 591 626 535 232   3  51 458 223 254 657 316 315 207 509 204 276 203 517  15 599 401 342
 226 380 251 245 643 503 495 629 462 224 510 181 151 272 319 134 145 609 263 542 163 538 290  54 482  90
 278 210 602 131 171 463 665 117 619 113 206 214 143 109 530 187 242 153 651 661 205 647  87 494 572 331
 193 284 354 144 658 666 526 664 243 234 197  58 191 180 124  42 133 438 241 260 397 484 533 398 564 595
 155 170 671 165 435 650 596 235 520 164 461  13 157 110 654 637 123 219  59 613 201 670  64 475 493  91
 253  40 598  97 589 211 594 374 341 491 545  74  86 135  56 279 508 126 370 481 190 172 652 329 586 624
 478 668 446 583 468  75 371  98  94 303 656 267  47 336 104 667 119 130  70 122 659 330 406 676 148 480
 459  82 198 612 578  43 567 464 192  38 302 616  92 471 128 118 116 167 528 292 565 610  84 634 418 427
  73  55 521 625 307 632 534 372 554 166 604  23 249 500  36  32  29  41 376 590 499 506 662  45  95 675

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00548e+07us (= 10054.8ms, 10.0548s)
Satisfaction error: 2
Number of search iterations: 3262
Number of local moves: 1110 (including on plateau: 589)
Number of local minimum: 257 (including on plateau: 73)
Number of resets: 1
Number of restarts: 0

Problem in row 3: 617 655 222 22 186 156 332 31 593 633 516 199 640 636 601 436 449 525 121 137 14 142 12 515 183 229 => the sum is 8802 rather than 8801
Problem in row 15: 293 368 404 373 555 460 451 233 154 496 296 356 456 127 18 237 576 448 419 327 317 266 592 173 221 184 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  78 545 498 109 135 367 578 490  17 659 364 640  13 535 351 517  54 126 592 664 144 569  25  68  10 653
 670 316 557  71 613 600 151 125 141  90 473 580  75 138 118 339 284 480 169 616 630  66 675   6 648 170
 577 287 145 540 191 651 518  14 399 452 267 219 181  34 148 642 497 416  53  55 192 635 646 547 268 227
 564 165 153  88 549 632 379 365 519 206 197 322 654  24 415  86  99  21 363 565 147 618 655 166 638 211
 361 672  64 278 103 637   9 610 674 625 156 503   5 182 333 650 104 214 649 128 115   2 657 131 615 324
  27 551 409 193 160 217 608 591 136 572 553 595 101 460 447 224 405 235 513 340 505 392 203  92 117 155
 186 229 612  62 660 435 510 667  77 575 233 422 453  70 583 663 119 236 601 105 314 239  51 174 243 282
 455 311 305 454 570 223 201 609 423 352 332   1 208 469 402 108 259  49  48 603 246 434 521 611 180 427
 244 254 196 526 652 387 204 250 644 593 500  65 149 286 389  98 562 596 205 264 212 209 313 120 329 554
   7 173 171 355 265 280 534 276 100 658 668 327 366 468 511 398 620 381 200 139 431 262 321 275 320 295
 225 605 330 312 266 157 464 349 198 121 559  32 599 231 604 499 508 346 466 347 418 187 317 210 195 256
 237 338 199 386 474 494 315 328 302 116 408 493 380 248 530 230  59 656 129 207 404 537 377 252 292 410
 391 626 428 634 641 306  16 283 202 393 560 152  30 462 281  45 273 645 143 343 247 336 142 487 442 293
 444 356 581 299 456 372 334 520 331 285 253 358 271 348 215 341  81 446  93 378 354 360 443 475 296 111
 470 598 413 240 113 432 388 588  38 260 241 465 441 189 218 383 325 185 539 337  96 318 308 350 394 472
 132 433 371 261  43 222 407  57 669 382 162 643 501 567 368 179 406 478 127 123 671 421  22 582 300 274
 319  47 492 213 536  83 450 258  15 647 291  84 531  37 269  44 481 228 597 451 489 529 439 459 436 376
 177 419 401 307  35  95 424 373 255 298 359 576 297 485 568 662 245  87 397 538  73 412 257 533 374 154
 673  26 353 429 479 525 552   4 639 400 168 437 617 342 102 194 385 420  74 438 310 106 417 471 158  82
 488 548 467 390 326 345   3 159 584  76 220 175 491 430 303 482 507 571 362  12 110 124 384 323 476 445
 403 140 550 483 164  20 167 375 542 133 130 495 506 546 440  50 289 477 541 188 532  42 528 309 463 288
 676 183  61 370 172 294 226 134  79 114 232  52 619 335  80 290 563 590 449 589 458 666 272 414 426 457
 301 623 357 566 395 176 279 556 544  46  56 234  29 516 425  41 594  31 344 486 249 448 561  69 624 251
 270 112  39 573  85  72 558 621 238 522 512 502 107 161   8 396 504 543 150 216 606  97 190 636 496 587
 122  23 586 602  91 633  11 163 574 137 242 411 555 607 184 661 484  67 628  40 263 614  19 527  33 524
 304 221  63  60 627 146 515  36 461  89 665  18 622 631 509 579  94 277 369 629 585 178  58 514  28 523

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00534e+07us (= 10053.4ms, 10.0534s)
Satisfaction error: 1
Number of search iterations: 4549
Number of local moves: 1491 (including on plateau: 694)
Number of local minimum: 405 (including on plateau: 80)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 0: 78 316 145 88 103 217 510 609 644 658 559 493 30 348 218 179 481 87 74 12 532 666 561 636 33 523 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 671 547 616  94 578 590 628  38  49 565 665  84  75 658 125 340 106 481 153 524   9  83 139  78 642 263
 648 231 675  43 109  27 576  67 468 558 507 655  47 577  19 150 301 442 151 553 586 132 171 103 385 620
 112 544 205  61  11 137 284 579 618 484 425  87 180 575  35 478 157 645 166 662 650 666 126 630 108 176
 100 335 676 225  68 290 246  79 119 528 539  40 198 600  13 501 183 644 215 506 472 627 674 669 174  80
 217  50 514 230 670  88 498 410 182 673 637 101  39 657 173 445 102 660  91 589 555 423 120 276 135 266
 313 133 525 235 247 138  60 202 390 585 607 160 615 617 113 380 529 638  63 563 461 573 117 164 186 187
  98 321 609 194 163  46 602 237 148 614 659 209 178 661 134 502 329 548 270 325 245 267 149 629 497 167
 234 471 332  73 122 216 441 667 110 488 265 204 214 411  53 260 612 608 664 551 668 391 264 128 127 227
 152 454 510 177 307 257 241 181 672 509 552  82 634 218 271 229 633 200 129 317 588 159 581 130 318 300
 244 269 495 155 185 337 184 362 275 504 238 326 280 345 393 354 233 243 293 663 398 640 154 595 347 289
 196 364 591 105 242 161 141 306 369 386 414 413 503 383 197 496 557 286 366 256 632 310 248 308 252 319
 169 571 433 339 422 258 170 261 353 255 394 359 322 207 367 375 382 485 223 330 226 344 368 572 492 124
 222 490 598 331 412 323 239 328 350 287 463 443 304 435 292 273 444 277 195 365 206 343 342 312 268 259
 363 396 465 334 282 372 373 434 415 314 236 272 355 288 392 399 311 189 432 371 140 357 361 285 338 327
 452 179 172 404 299 316 158 250 156 118 476 360 341 409 224 424 381 420 520 428 374 281 320 511 427 401
 324  62 254 303 462 418 521 403  64 349 526 536 459 294 416 121  25 309 582 203  21 274 530 455 451 439
 448 279 190 356 429 513 298 240  15 221 297 457 611 479 483  18  16 453 387 116 379 450 291 487 486 402
 389 144 111 431 400 519 467 358 493  81  48 546 408 220 417 518 447 146 336  51 232 523 446 251 278 541
 437 253  33 545 516 474 580  22 421 346   7 377 115 123 533  57 384 480 494 430 262 249 538  65 583 477
 395 192 211 449 466 351 419 456 470 114  85 543 460 104 569  71 508 136 534 499  96  45 426 540  69 593
 515 535 143 639  20  17 491  70 560  93 191 592 348  59 537 505 295  95 482  54 388 333 622  76 610 531
 549  86  97 587   6 603 208 406 556  56 147 597 584 168 570  99 438 210 475  30 407 305  12 542 599 464
 517 654 142 625 574 469 436 500 621 302 175  66 564   5 566  74 512  14 193 213 212 532 296  77 370  92
 562 596 162 635 631 651  26 647 315  52  72 653  28   2 604 559 188  37 489 165 219  42 643 228   1 594
 440   4  10 605 567 624  41 646 554 283 145 636 378 199 649 623 527 131 376  29  23  55 458  89  90 619
  34 641  32 626 613 606 473 652  58  36  31   3 561 107 656 550 201  24 522   8 352 397 405 601 568  44

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00524e+07us (= 10052.4ms, 10.0524s)
Satisfaction error: 1
Number of search iterations: 3939
Number of local moves: 1123 (including on plateau: 491)
Number of local minimum: 375 (including on plateau: 59)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 1: 263 385 630 674 423 461 325 664 200 233 496 367 435 355 360 526 221 493 22 419 17 6 625 162 4 34 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 676  36 309 629 604 662 675 654  94  77 121  44  98 448 178 456 110  83 471 668 521 557 141 411  49  29
 632 672  60 609 612  90 153 630 144 146 116  81 542  53 108 466 495 107 155 252 641 576  73 160 564 664
 530  51 653 666 560 198 464 257  82 102 132 125 547  55  95 610  76 379  79 633 549 555 104 644  57 598
 674 173  43 368 191 636 150 616 134 355 579 137  99 183  45 608 109 138 551 273 536 202 667 593 582 159
 620 162  85 131 370 193 580 528 133 140 199 152 136 602 165 618 188 103  78 322 656 594 655 617 111 663
 184 265  48 597 563 621  97 468 473 518 660  68 157 458 300 455 286 264 161 244 671 234 135 168  67 639
 404 129 171 127 377 487 486 606 122 185 649 277 648  64 148 516 341 661 106 611 490 330 285 230 187 164
 589 292 346 179 588 462 158 575 227 130 573 182 245 271 156 522 258 622 627 203 650 228 163  91 249 215
 585 669 279 291 529 417 591 313 396 172 658  37 254 237 235 453 112 321 204 634 502 243 154 113 222 180
 261 559 373 314 260 519 444 255 280 665 206 331 349 220  84 483 600 205 342 413 328 242 414 169 207 278
 316 395 211 335 394 599 214 553 303 170 571 334 343 304 259 440 651 312 329 231 339 263 181 351 147 256
 305 324 296 392 494 323 647 283 320 367 149 421  88 224 673 479 238 192 325 474 297 366 446 177 233 268
 319 445 359 301 266 350 269 282 412 362 293 382 239 318 226 416 210 353 402 348 383 372 251 429 467 347
 374 428 307 262 354 397 294 378 422 387 176 290 295 371  34  47 556 275 477 454 208 420 386 406 447 356
 289 443   8 200 360 405 388 276 267 520 476   5 299 358 434 384 302 338 369 441 190 484 415 389 425 336
 195 337 423 287  20 308 407 345 375 424 248 435 393 333 385   1 306 507 431 514 213 365 489 380 317 363
  70 221 565 488 472 189  39 409 390  96 229 332 326 451 562 232  28 376 433 250 352 533 364 463 523 408
 186 105 534 541 340 145 419 400   6 503 478 461 512 401 515 216 459  80 225 197 246 457 524 410  23 418
 124 498 496 566 426  31 128  27 505 501 499 427 509 438 357 284 492 247  21  32 100 460 554 497 526  56
 240 218 525 527 167 398  30 117 640  17  58 657  69 450 481 142 635  86 590 545 120 452 437 270 430 500
  72 465 574 552  62 439 480  74 470 511 114 570 491  35 504  75 643 485 123 212  25  93 586  26 638 482
 544 538 637 272 119   7 139 126 631 581  63 532  10  12 548 253 615 403 219 506  92 543 613  40 517 241
 344 449 572   9  18   4  50 194 432 578 381 567 550 603 605 217 288 510 540  33 201  89  22 539 537 469
 143  15 298 101 236 310 577 327 568  16 281 659 475 624 623 311 442 561 614  41 166 118  59  13 628 595
  54 399  46  19 196 587 607  66 391 652 531 670 558 646 535  65 274 601 436  61 151  11 508 619   3 115
  71 513 583  38 223  24 315  42 584 626 361 625 569 642 546  52  87 592 493 209 174  14 175 596 645   2

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.90024e+06us (= 3900.24ms, 3.90024s)
Wall-clock time (full program): 3.95297e+06us (= 3952.97ms, 3.95297s)
Satisfaction error: 0
Number of search iterations: 968
Number of local moves: 547 (including on plateau: 151)
Number of local minimum: 56 (including on plateau: 13)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  71 666 674  75 630  55 633 626  61 601 564  60 534  74 423  13  30 432 482  70 125 671 161  33 370 667
  62 653  41  73 662 104 378 645 454 576 651  39 474  59 416  46  14  40 668 614 491 607 579  19 342  94
 100 673 479 120 632  10 506 320 418 593 554 143 522  93 590  58  37  45 447  65 647 357 108 624 521 139
  98 672  78 675 646 178 520 634  96 570 561  57  68  50 539 259  52 595 555 148 527 621  35  16 502  49
 110 168 145 151 422 117 642 330 172 604 617 116 560 188 641  89 307 600 573 354 664 193  99 237 543 159
  83 510 103 174 540 127 138 175 486 574 557 165 655 162 612 181 244 173 449 547 410 207 495 176 661 197
 106 220 137 169 602 133 649 166 164 578 598 221 654 141 628 289 113 122 505 623 592 205 452 102 546  86
 229 305 158 288 518 163 639 670  82 332 588 413 135 177 663 198 171 160 473 299 470 263 435 189 559 224
 179 279 212 217 475 214 222 202 464 208 465 150 609 187 167 242 451 131 501 567 492 615 538 140 565 309
 200 183 240 376 389 230 256 226 551 676 252 184 154 260 420 232 637 487 291 285 458 253 359 658 249 294
 355 201 346 190 587 583 323 267 248 344 231 251 297 206 274 648 273 255 596 298 640 281 286 275 254 292
 316 302 382 313 356 196 348 238 444 329 627 328 380 272 277 392 311 322 599 319 318 170 353 268 280 361
 340 304 245 331 308 341 429 335 367 209 324 315 368 373 349 303 327 276 424 338 436 366 369 312 419 293
 362 284 287 296 278 310 306 300 317 218 388 350 339 426 337 271 375 336 371 402 394 326 295 401 415 417
 347 352 266 264 134 377 360 405 400 421 448 234 334 343 191 364 247 399 499 365 384 396 333 283 386 269
 430 379 374 409 223 446 393 411 124 440   2 314 414 463 383 257 459 385 194 111 241 443 199 434 483 390
 508 497 406 321 236 437 450 398 358   7 204 466 441 488  20 397 182 351 128 455 325 472   8 372 403 471
 433 404 428 512 115 494 461 387 210 290 123 529 509 439  21 484 345 407  56 391 243 460  53 363  92 552
 517 431 481 408 258 457  34 119  63 485 381 462 478 553  44 467 519 515  32  36   1 535 476 568  25 456
 438 442 548 516  69 504 130 511  54 144 107 490  47 445 503 500 453   9 265 301 156 544 469 425 233 498
 636 513 507 575 105 246  12 586 412  91 157 526   6 530 219 395 541 514 121 180  67 493 228 581  28 532
 489 155 608 545 282 635  17 569 477  85  38 594  29 525 142 577 195 528 118 192 147  15 622 591  76 550
 582  42 563 580  90 531 572  23 558  66 132 665 153 523 114 652 669 537  87  97 225  31  11 480 270 549
 566 136 556 524  77 597 203 186 571  18   5 536 152 585 211 250 620 213  84 496 112  88 611 625 129 650
 584   3   4 656  95 657 101  48 644 126 146 631 262 610 468 619 616 542 261 605  51 109 638  26 235  64
 660  27 533  43  72 659  79  24 606 216  81 562 227 629 149 618 613 427  22 643 185  80 589 603 215 239

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00532e+07us (= 10053.2ms, 10.0532s)
Satisfaction error: 2
Number of search iterations: 3327
Number of local moves: 1045 (including on plateau: 484)
Number of local minimum: 287 (including on plateau: 56)
Number of resets: 1
Number of restarts: 0

Problem in row 10: 200 183 240 376 389 230 256 226 551 676 252 184 154 260 420 232 637 487 291 285 458 253 359 658 249 294 => the sum is 8800 rather than 8801
Problem in row 23: 582 42 563 580 90 531 572 23 558 66 132 665 153 523 114 652 669 537 87 97 225 31 11 480 270 549 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 564 154  54 596  47 583  18 129 640  65 643 594 653  34 634 630  71 216 185 597 631  20 131 592 306  14
 193 308  80 593 419 633  16 360 430  45 610 163 626   4  55 650 554 611  33 563 602  28 120 648 237 220
 140 229 142 507 251 276  91 194 450 108 627 625 521 568 659 612  32 646 212 523 589  27 159  22  29 562
 114  94 287  36 105 605  99  82 574  21 565 541 606 119 601 576 608 384 476 467 542  46   7 511  83 652
 241 104   6 493  11 638 505 457 359  26 566 264 510 509 147 445   5 550 525 577 571   8  76 575 173 460
 464  58 443 517 118  15 305  88 581 115 426 169 488 588  92 586 556 372 532 587  48  57 411 489  97 599
  35  50 538   9 239 498 110 520 492 313 637 548 438 536 618 516   2 549 469   3 402  23 409 365   1 481
  67 198 466 558 213 502 473 103 530 421 369 277 462 582  12 540 522 386  17 176 373 215 174 472 222 471
 428  81 524 514 238 546 380 261 437 291 266 133  13 415 455 219 531 452 500 124 442 207 410 436 202 296
 404 134  10 491 439  24 535 465 190  39 453 527 470 435 290 403 102 342 456 320 416 221 446 337 351 501
  59 268 158 497  25 433 427 425 526 376 480 311 417 400 303 324 280 490 339 348 496 302 413  85 100 519
  77 379 191 315 414 378 318 408 307 275 513 336 398 389 304 245 422 298 329 423 217 201 431 461 289 483
 385 459 377 281 208 325 334 366 396 391 233 301 399 354 333 371 441 330 429 358 282 345 363 155 397 188
 374 343 288 299 319 265 223 214 368 309 327 392 518 475 381 393 394 228 260 279 401 370 390 364 353 274
 331 440 270 406 335 362 317 367 230 326 341 572 349 253 434 328 323 338 278 297 231 451 332 355 295 240
 321 254 395 300 346 273 344 206 262 662 555 357 182 250 186 361 382 418 224 258 218 590 292 458 503 204
 189 628 236 387 293 227 184 494 352 551 243 232 383 314 211 356 226 195 200 515 267 623 242 424 482 347
 171 447 322 235 504 257 178 157 663 632 259 256 234 187 449 284 248 649 340 412 247 534 255 172 584 125
 647 604 639  61 560 294 246 529  96 557 116 552 149 180 263 192 252 160 533 271 138 420 350 375 547  70
 156 544 636 205 537 272 454 609 146 567  98 249 316 203 539 196 485 179 168 651  84 487  79 143 621 177
 620 468 269 209 474 660 569 657 164 477 181 486 210 244 512  72 310 123 112  93  90 543 664 117 312 166
 495 655 670 151 641 165 614 141 122 629  86  56 183  78 121 167 561 152 153  95  63 669 656 225 578 675
 667 405 170 448 388  43 162 150 107 559  66 579 145 668 463  69  62  60 595 197 672 570 665 113 645 132
 607 591 432 126 508 444 622 600 136 283  74 161  49 285  41  75 635  42 673  53  73 528 676 286 666 135
 573 407 613 478 624  31 616 644 137 148  37  19  38 603 658 127 199 580 109 484  87 642 144 553 111 139
 479 499 585  89 545  52 661 175 106 615  30 101  44 128  40  64 598  51 654 130 619 674 506  68 617 671

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00539e+07us (= 10053.9ms, 10.0539s)
Satisfaction error: 2
Number of search iterations: 3051
Number of local moves: 760 (including on plateau: 246)
Number of local minimum: 249 (including on plateau: 31)
Number of resets: 1
Number of restarts: 0

Problem in row 21: 620 468 269 209 474 660 569 657 164 477 181 486 210 244 512 72 310 123 112 93 90 543 664 117 312 166 => the sum is 8802 rather than 8801
Problem in row 23: 667 405 170 448 388 43 162 150 107 559 66 579 145 668 463 69 62 60 595 197 672 570 665 113 645 132 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 539 282 571  29  94   4 579 489 581  31 191 617 262 583 558 569 591  33 490 552 141 293  49  25 647   1
  63   6 542  11  34 580 567 197 623  69 368 577  22 582   3 575 559 554 425 532  43 611 553  10  50 645
 629 216   8  39 172 565  18 496 599 595 195  78 568  14 530 538 109 588 628 505 221   9  52 158 657 614
  15  44 442 264 105 527 534 243 155 279 224 562  20 406  27 600  38 477 586 651  89 602 594  88 609 620
 570  28 550 168 319  54  82 513 385 627 429 133 551 450 541  95 561 409  86 524 157  16 103 357 633 460
 427  62  87  76   7 117 504 512 500  57  24 531 535 619 464 143 589 488 247 548 175 560 494  90 517 428
 563 411 413 220 198 536  36 150 285 564 126  21 528 556 557 470 435 511 369 352 228  97  46 129 454 546
 576 323 405 205 213 521 468 320 395  13 270 601 426 643  60 329 461 128  75 403 263  26 417 451 478 331
 493  65 495 371  19 142 476  12 486 519  83 529 265 566 351 342 501  56 188 604 102 378 469 466 446 377
 430 449 379 227 225 302 343  72 518 392  70 480 509 439 353 318 100 335 236 485 271  98 350 471 492 457
 453 423 465 272 152 153 266 134 436 355   5 386 418 506 475  81 383 508 414 419 239 151 458 401 467 381
 516 226 416 348 122 245 455 373 298 235 526   2 544 356 394 148 462 363 407 482 231 223 339 399 367 324
 481 366 424 257 283 334 185 420 382 261 444 374 278 238 267 456 431 389 288 277 473 312 337 217 354 273
 347 443 304 372 387 296 289 322 327 291 260 307 303 325 370 452 248 364 330 388 404 332 336 384 280 341
 675 274 321 415 483 547 314 268 362 249 390 361 252 311 338 256 286 218 290 294 422 297 365 281 215 317
 358 242 276 349 421 459 194 574 437 246 671 201 287 125 359 630 139 222 655  84 376 640 184 190 232 250
 164 212 545 497 670 447 284 499 269 333 605 135 254 230 344 326 210 313 123 121 578 669 167 295 206 305
 138 572 255 520 658 202 649 525 668 208 176 515 275  67 299 234 253 340 229 200 445 163 597 233 160 219
 113 434 179 300 523 316 613 662 181 632 380 193 408 237 345 635 145 171 676 180 610 214 162 192 170 130
 440 241  55 487 391 463 292 259 124  85 642 118 618 306 346 154 116  73 472 648 514 402 585 543 169 258
 111 636 240 309 653 637 661 251 207 308 375 136 199 159 173 626 186 187 634 140 165 596 438 615  68  91
 144 474 115 652 491  48 104 412 161 644 639 147 638 209  47 189 114 101 590  79 608 665 204 555 178 593
  30 502 127 606 667  61 203 156 131 607 177 650 166 244 573 119 397 612  77 132 393 182 656 646 616  71
  53 587 396 660 498 540 211 441 112 433 533  45  58  92 328 108 674 672  80  51 448 398 641 631  74  37
  41 659 654 625 537  42 410 484  59 146 598 510 107  35 603 315 149 666 174 110 584 507 106 301 196 183
 432 624 137 522 479 663  64  17 120 622 400 592 310 503  96  93 664  23  32  40 621 360  99 673  66 549

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00555e+07us (= 10055.5ms, 10.0555s)
Satisfaction error: 2
Number of search iterations: 3375
Number of local moves: 996 (including on plateau: 517)
Number of local minimum: 310 (including on plateau: 87)
Number of resets: 2
Number of restarts: 0

Problem in row 14: 347 443 304 372 387 296 289 322 327 291 260 307 303 325 370 452 248 364 330 388 404 332 336 384 280 341 => the sum is 8802 rather than 8801
Problem in row 18: 138 572 255 520 658 202 649 525 668 208 176 515 275 67 299 234 253 340 229 200 445 163 597 233 160 219 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 160  58  34  51 265 663 498 664 564 545 629 645  52  80 561 445  18 527 142 637  88  23 114 555 110 673
  97 143  43 266 123 269 540 460 511 516 518 627  99  45 584  36 472 122 668 244  72 559 672 595 343 177
  22 136 569 221 118  47 625 666 613 565  85 133  82  54 610 180 531 505  86 388 146 653 634 574  17 541
 159 553  63 493 304  81 640  25 226 458 406 510  42 125 592  59 529 660 536 124 104 656 587 327 205 337
 500 174 138 198 674 524 268 169 368 534 130 621  33 293 444 154 496 170 379 544 383 560 165 278 129 475
  93 354  87 260 166 227 549 585 239 300 669 661 281 134 222  68 614 586  65 657 418 662 145 384 151 224
 246 185 238  90 187 172 428 646 623 503 220 127 624 649 671 207 644 111 326 252 218  92 312 102 393 535
 228 655 497 135 203 261 469 459 295 638 420 286 271  44 537  24 588 186 453  37 499 434 210 355 332 285
 235 552 232 164 289 214 513 419 470 628 521 339 189 107 212 231 395 243 248 580 594 270  60 446 171 479
 144 352 650 375 318 294 591 411 581 436 290 385 200 202 188 219 241 256 234 282 253 324 396 482 346 351
 465 340 274 279 519  50 480 341  10 410 173 400 109 255 331 554 426 272 338 329 606 313 168 301 607 451
 401 349 335 413 179 250 254 404 306 433 273 626 412 369 257 330 360 216 377  75 358 432 431 263 381 317
 435 441 262 392 386 249 526 344 283 119 298 284 403 356 376 316 462 225 237 320 229 275 675 215 345 348
 387 276 473 208 380 622 251 365 195 363 196  62 389 398 491 287 347 334 478 321 296 485 280 302 357 258
 421 370 416 464 333 414 190 259 374 175 367 211 486 378  48 402 504 528 183 417 204 483 113 305 619 137
 325 481 630 409 314 440   3 242 303 297 422 230 408 209 307 310 194 562 309 438 362 153 515 495  77 366
 359  69 676 597  12 391 457 328 236  76 489 665 155 466 617 364 291 245 407 474  56 264 447  79 382 199
 397   6 101 620 192 476   7 152 206 448 201 542 443 507 520 487 315   9 512 517 176 611 299 353 556 148
 405 593 612 543 373 558 178 490 572 456 618  40 449  53  11 533 150 342 131   4 654 492  39  49 336 120
 437 182 582 635 213 425 439 450 139  66 603 322 121 583 538 454  91 240 463  57 502  98 399  31 599 132
 455 217 467 557 423  41  16 522 233  67 372  89 501 567  27 484  30 494 197 566 570  38 616 319 424 509
 667 452 608 427 632 149   5 162  84 161 371  61 551 573 311 539 181 147 575 514 223  35 609  78 292 394
 506 598 577 193 508 568 115 116 140 361  14 112 589 590  74 547 247 523  64 461 550 390   2 128 670 158
 633 546  46 548 471 106 126   1 184 191   8 430 615 563  32 631 429 641 647  15  19 156 532 604 350 277
 596 117  95 100 648 651 103 108 468  29 488  70 658 600  83 415 105  21 652 477 642 288  73 605 442 267
  28 602  96 163 571 659 530  13 578  26  20 323 639 601 157 525 141 636  94  71 579  55 308 576 167 643

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.52603e+06us (= 9526.03ms, 9.52603s)
Wall-clock time (full program): 9.57905e+06us (= 9579.05ms, 9.57905s)
Satisfaction error: 0
Number of search iterations: 3056
Number of local moves: 915 (including on plateau: 477)
Number of local minimum: 277 (including on plateau: 66)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 201 667 620 656 584 224  84   5 100 605 630 662 138  13  71   6 250 169 597 606 534  15 641 618  96   9
  24 613 108  72 649  92   3 163  46 292 593 664 637  11  61  16 112 156 643 386 651 595 642 624 296 652
 547 634 552  32 564  22 409 548 129 629 639 598 214 636 165  65  31 151 171 102 208 128 631 246 199 551
 124 526 560 658 522 264 435 198  52 604 617 550 191 557  25 194  18  66 586  75 525 203  83 432 235 501
  14 625 589 609 669  73 227 488 147 267 184 529 155 456  21  50 205 125 570 520 559   7 587 579  87 459
 474 515 536 577 470  12 228 545  59 176 538 610 167 413   4 148  60 396 513 518   8 144 381 583 247 479
  19 487 554 596 392 213  33 369 157 485  17 571 133 411 496 540 158 355  38 541 517 271 458 512  23 455
 134 451 446 448 493 210 258  82 143 431 426 434 154 469 382 523 491 480   2 361  76 182 516 514 120 575
 535 461 442 506 500  20 207 380 333  56 407 359 274 553 323 524   1  89  30 486 527 107 370 439 365 507
 440 436 321 457 146 153  26 472 200  48 489 443  80 282 510 346 230 394 463 304 428 422 539 468 471 233
 351 390 452 508 424 132 310 261  74 141  39 299 444 339 338 418 331 393 391 404 484 453 511  10 406 498
 437 319 367 309 427 121 405 467 181 429 403 273 307 318 368 454 389 430 297 172 423 477 379 212 251 186
 398 266 425 420 376 215 268 419 293 295 287 344 324 401 244 362 341 311 353 378 385 433 259 308 255 441
 328 371 329 239 638 305 616 360 447 345 280 236 277 316 350 302 306 337 283 222 372 229 294 281 408 330
 313 291 238 326 445 320 660 240 421 248 537 356 162 289 388 270 335 272 298 340 383 384 262 377 303 343
 275 265 402 412 278 494 317 395 416 633 349 366 288 226 352 336 217 243 322 257 145 237 364 607 374 231
 400 263 193  94  91 561 628 234 332 673 342 354 502 202 178 253 578 185 269 276 312 495 285 209 558 334
 279 218 252 254 187 475 449 152 635  99 602 225 627 363 645 314 483 327 375 241  57 462 190 196 478 216
 180 284 114 173 301 599 565 568 410 492  85 160 591 150 543 315 563 195 175 249 415 566 206 562 166 174
 574  88 115 136 106 588 521 256 464 242 546  98 387 260 519 221 603 159  97 650 580 503 223 117 556 192
 481 131 189 245  43 615 300 646 608 531 130  93 542 113 170 621 509 290 648  51 347 504 168 142 594  90
 450 161 219 119 204 544 612 101 647 325  53 220 665  69 197 657 499 666 473 675  47 567  40 140 373  78
 466 118  29 671 110 654 533  58 663 232 179  42 490  28 659 585 417 674 414 286 103 105  70 109 438 668
 183 137 626 122  34 619 476 211 600  81 358  77 528 614 582 188 622 676  63 623 139 164  54 357 532 135
 601  35  55  67  62 644 104 530 655 397  44 126 460 672 661 611 497 592 149  41 399 576  79 123 505 116
 573  49  68  95  86 632 127 653 590  45  27 111  64 640 549 482 555 670 581  37 177 572 569  36 465 348

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00529e+07us (= 10052.9ms, 10.0529s)
Satisfaction error: 2
Number of search iterations: 3404
Number of local moves: 1067 (including on plateau: 485)
Number of local minimum: 283 (including on plateau: 59)
Number of resets: 2
Number of restarts: 0

Problem in column 9: 100 46 129 52 147 59 157 143 333 200 74 181 293 447 421 416 332 635 410 464 608 647 663 600 655 590 => the sum is 8802 rather than 8801
Problem in column 12: 662 664 598 550 529 610 571 434 359 443 299 273 344 236 356 366 354 225 160 98 93 220 42 77 126 111 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 361 423 443 635 672  78 184  95 660  76 148 126  46 247 430 109 183 502  28 106 560 642 674 644  53 676
 648 662 656  64  51  68 104 298 585 332  91 156 403 121 547  36 154 310  73  65 542 620 613 650 658 294
 534 555 395 368  89 103 545  55 667 537 526  56 657  69 649  52 654 564  41  88 318 197  57 315 597 113
  49 670 466 632   4 286 655 108 608 363 360  96 498  93 506  74  72 622 192  60 627 480 442 630  62 146
 217 375 137 489 663 513 520 171 604 629 571 462 240  92 139 160 118 653  80 117 163 671 553 263 134  67
 143 600 132 508 382 320 549 237 304 116 492 178 479 201 588 673 182 631 162 168 130 455 614 258 138 161
 236 539  24 147 120 191  99 151 195 507 329 414 638 668 174 173 144 532  54 651 457 592 659 669 164 274
 215 432 141 459 210 186 586 580 333 552 427 251 373  82 193  71 208 497 647 282 300 619 481 211 261 204
 112 159 339 575 347 348 496 238 500 224 518 228  86 504 264 241 584  81 609 165 216 101 617 589 157 503
 246 544 280 190 275 267 444 618 135 666 624 646 167 233 317 177 350 440 288 214 244 374 336 231 205 290
 255 616 431 334 548 572 306 206  26 385 511 475 362   7 285 641 194 516 341 346 176 187 438 198 279 166
 254 372 633 322 220 256 295 415 328 528  47 664 242 426 283 338 561 260 232 270 250 367 369 281 409 179
 425 292 364 266 287 441 359 340 271 434 311 225 153 661 309 218 345 342 188 262 472 278 436 408 421 293
 181 327 299 419 490 393 331  94 406 352 379 398 277 145 485 202 297 319 486 302 313 353 324 460 229 540
 351 150 378 272 410 301 465 365 129   2 305  32 412 411 573 454 388 428 452 384 448 343 323 314 354 357
 439 133 386 326 308 335 402  58 376 476 405 577 417 593 447   1 213 291 219 381 235 289 259 387 377 471
 404 394 307 200  27 303 418 554 456 227 114 371 437 463  77 397 435  10 536 625 400 245 296 123 515 467
 451 312   8 284  29 199 383 450 527 610 321 209  17 433 429 484 389   9 458 482 470 370 325 128 446 578
 493 102 574 330  85 399  34  15 477 422 169 634 531 223 366 543 461  70  44 407 491 594 124 413 420 380
 464 268 337  45 637 550  23 501 185  16 230 175 243 519  87 252 568 356 595 449 556 149  31 512 523 530
 453  12 257 473 505  75 424 541 122 239 478 358 392 483 416 612  33 474 567 611  19 131  83  21 621 401
 557 276 189 602 316 524 127 510  48  37 222 136 521 587 107 494 645  97 607 517 514  13  18 110 559 468
  22 172   6  38 601 529 212 582  59  98 226 652 390 639 155 626 469 105 551 525 579 170 396  42 566 391
 623  61 445 221 675 533 269 558 596  35  50 590 234 142 140 569 599  90 180 643  25  30  11 248 636 598
 605 152 583 563 355 509  84 499  79 665 603 581 546 119 265 576  20 349 606  66 196 488 115 158  14   5
  63 203 591  39 495 522 487 562 125 273 344 111  40 640 570 628 535 253 565 615 100  43 207 538   3 249

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.00252e+06us (= 8002.52ms, 8.00252s)
Wall-clock time (full program): 8.05522e+06us (= 8055.22ms, 8.05522s)
Satisfaction error: 0
Number of search iterations: 2531
Number of local moves: 920 (including on plateau: 373)
Number of local minimum: 214 (including on plateau: 40)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  68 637  76 304 122 113  60 155 631 636 654 624 239 547  77 628 153 211 577 579  38 284 622 137  67 562
 627  16  43 104 606  65  28 574 646 228 634 270  63 597 308 609   4 559 602 568  86 295  69  39 605 556
 540  26 178 315 516 118  25 420 576 621 175 142 135 593 448 613 595   9 206 564   2 197 452 457 555 323
 592 290  44  84 591 141 611 221 518 596 647 195 458 590 107 566 526   6 190 584  62   7  81  31 587 476
 537 124  12  40 551 151 525  11 506 635 558 150 569 639 358 541 586  13  17 303 550  21 140  93 514 657
 581 264 532  49 533  18  87 128  45 499  50 229  30 399 356 567 415 158 472 531 519 204 513 508 491 623
 548  66 453 167 485 160   1 408 492 483 428 173  37 582  90 439 528  23 459  15 575 147 552 402 527 561
 497 310 183  32 502 121 481 278 490 444 421 156 478 106 201 521 505 300   3 410 397 199 507 169 520 570
 382 162 565 380 346 186 389 126 245 510 572  97  10 530 447 512 373 159   8 475 436 139 443 297 583 429
 336  70 467 383 446 489 368 405 334  19 471  41 364 406 440 433  22 432 409 355 451  20 517 344 366 413
 468 179 441 261 394 496 302 371 317 460  92 473 426 400 131 144 419   5 398 287 474 247 403 361 504 348
 416 379 299 192 425 480 438 482 326 274 375 263 385 437 109 360  36 430 350 422 314 292 442 242 392 241
 509 374 391 377 267 367 341 248 370 404 249 234 424 395 363 205 196 401 351  46 353 337 372 407 461 359
 246 275 311 305 316 369 223 610 307 319 313 354 352 450 524 257 423 312 434 283 193 357 381 243 256 388
 265 182 293 331 322 268 387 501 376 279 288 273 484 253 486 343 289 218 640 285 172 653 329 330 161 393
 250 616 194 664 342 335 198 431 332 224 174 638 102 309 515 129 185 280 220 667 210 573 298 333 286 296
 227 601 390 648 252 378 254 365 325 672 340 511 259 213 529 276 202 266  71 294 255 494 386 233 189 171
 321 281 338 538 236 260 235 617 456 157 219 500 655 320 240 339 347 649 237 291 244 560 277 238 138 108
 644 230 231 345  91 477 659 544 214 262 258 652 495 226 318 181 134 411 645 146 251 604 208 222 187 166
  85 534 125 396 217 301 282 539 212 170 232 626 612  58 207  33 362 554 188 629 180 603 542 651 272 191
 271 536 216 641 164 632 225 466 112  99 571 455 557 269 674  95 650 633  73 145 412 414 168 184 110  29
 114 600 588 546 675 630 176 563 203 177 100 469 143 154 327 111 200 607 656 152 136 445 209 615 163  42
  47 417 671 462  75 549 580  55  83 120 465 435 117  59 669  79 449 523 454  80 670 306 668 661  53  54
 149 618 498 599 148 585 658  94 470 427  89 324 215 116 105 660 488 543 101  61 614 463  72 578  74  52
  57 665 673 535  64 493 643 133 127  51 328 503 598  34  96  82  48 479 553 165 545 522  27 642 608 130
  24 349 589 103 115 619 625  56  88  35  98  14 594 119 676  78 666 620 487 464 662 418 123 384 132 663

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.82299e+06us (= 4822.99ms, 4.82299s)
Wall-clock time (full program): 4.87566e+06us (= 4875.66ms, 4.87566s)
Satisfaction error: 0
Number of search iterations: 1364
Number of local moves: 548 (including on plateau: 173)
Number of local minimum: 81 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 674 658 207 675  55 663  95 459 394  28 364  84 146 118  41 433 242 340 122 574 661 147 454  33 468 666
 673 431 190  72 594 120  94 562 417  32 626 157 623 139 395 402  96 511 664 507  64 108 489  70 130 635
 138 187  89  51 127  34  54 547 154  90 573 620 427  48 621 499 480 131 655 548 637 651 585 676  82  97
 160 609 103  30 669  75 151 628 466 116 295 633 328 124 649 563 136 464 646 492  37  14 605 533 132 143
 179 123 627  57 604  77 494 508 126 223 608 377 622 268 141 619 481 174 145 161 112 587 662 575  66 185
 201 113 484 164 196 653 586 656 165 128 611 659 195 166 172 566 220 576 536 184 671 156 114 221 260 148
 191 645 636 194 168 182 410 280 424  73 571 149 248 129  61 642 215  85 286 648 612 314 631 647 262  98
 163  80 600 245 170 225 318 304 643 265 603 231 606 125 159 650 351 535 393 137 110 252 205 644 610 177
 293 204 470 264 134 240 551 625 208 211 362 121 316 155 135 570 667 668 171 306 407 162 241 552 657 111
 266 178 624 277 244 246 238 203 253 665 578 329 298 175 256 488 287 539 188 331 230 343  78 672 598 217
 275 292 438 327 243 367 506 378 401 269 226 392 369 209 259 251 274 416 257 324 380 197 479 442 474 356
 227 258 206 202 299 337 247 254 321 670 415 404 301 358 283 513 263 284 387 400 365 349 389 359 334 376
 285 261 436 198 414 384 449 406 660 289 342 335 350 325 193 354 271 447 272 142 388 237 315 255 279 514
 294 233 281 411 313 375 421 302 323 537 601 273 309 440 303 346 212 296 347 311 357 270 319 228 338 361
 396 336  99 312 297 451 372 434  23 425 282 418 345 200 567 249 398  81 457 450 432 521 383  65 348 460
 412 446 386 322 276 462  88 422 471 344   4 505   2 437 382 308  39 443 448 403 371 543 213 310 374 390
 430 366 183 458 317  45 409 455 101   8  36 326 509 385 550 219  26 524 495 368 529 461 546 341 423 291
 370 435 352 360 572 544 189 445 115 525 339 105 397 588  44  87 405  47 210 355 534 490 541 235  21 496
 441 290  43 596 426 463 119 158 452 453 399 531 419 420 497 192 502 186 117  16 363 428  83 305 320 582
 532 491 333 528 519 527 379  42  93 472 107 456 486 517 523  76 555  38 498  92 332 439  25   1 267 473
 558 487 199 593 561 475 476  12 483 216 150 477  15 512 330 181 408 482  24 224 300 579  31 518   7 503
 381 444 250 465 515 520 580  67 214 467  68 429  18 557 560 140 485  53 614  22  91 478  52 288 542 501
 583 569 307  69 353  56  71  29 616 510 152 167 584 595 589 109 504 530  40  62  19 549 618 373 278 469
 592 602  27 640 100 106 218 413  63 538 232   6 545 629 500  58 540 234 102 556 599  86 144 229 516 526
  13  60 590 639   5 559 632  79 577 634 222  11 104 617 581  50 568 153 554 591  20 391 553  59 522  17
  74   3 641 652 630 615 654 133 638 613  35 607 239 565  10 236 176 564 173 597 180  49  46 169 493   9

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00541e+07us (= 10054.1ms, 10.0541s)
Satisfaction error: 2
Number of search iterations: 3440
Number of local moves: 1074 (including on plateau: 492)
Number of local minimum: 286 (including on plateau: 60)
Number of resets: 1
Number of restarts: 0

Problem in column 12: 84 157 620 633 377 659 149 231 121 329 392 404 335 273 418 505 326 105 531 456 477 429 167 6 11 607 => the sum is 8802 rather than 8801
Problem in column 24: 33 70 676 533 575 221 647 644 552 672 442 359 255 228 65 310 341 235 305 1 518 288 373 229 59 169 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 427  99  49  32 145 208 605 665 574 662  79  92 429  75 180 433 501  84 560 130 553 610 194 617 127 671
 439 378 298  85  60 161 483 421 660 581  57 153 589  36  68 584 563 184 467  50 556 576 415 659 156 122
 446 657 368 554 672 102 210  58 109 159 111  38 420  89 221 374 167 580 629 118 473 582 675 674 243  72
 524 158 517 635 670 539 226 103 616 399 228 131 303 108 121  51 561 394 326  81 666 468  95 648  76 157
 496 123 271 119 279 255 651  87 242 596 206  23 639  80 197 570 557 101 628  62 614 669 676 479 154  27
 204  40 627 222 174 664 555 173  97 575 125  44 551 175 297 653 144 216 504 266 661 599 603 587  24  21
 185  20 654 455 134 201 254 211 634 272 217 233 309  29  39  98 593 172 564 619 512 453 521 484 673 265
 214 640 275 244 143 112 622 238 250 656 430 199 203 138 258 638 302 229 667 152 543 652 547 285  47 117
 611 141 445 332 168 291 567 311 613 318  45 251 424  71 148 506 390 647 240 212 505 316 290 525 257 178
 579 267 403 205 218 263 457 151 219 531 209 169 569 181 247 241 668 308 356 137 658 494 249 487 195 340
 642 224 435 304 234 443 162 188 296 600 313 177 293 270 350 344 540 239 338 191 380 516 391 458 213 260
 414 353 416 261 104 337 324 383 359 282 186 436 193 330 142 329 321 371 323 465 452 398 385 461 404 372
 295 146 301 262 269 268 273 319 347 331 300 253 358 498 442 306 281 333 336 381 485 314 413 370 486 434
 264 488 299 287 386 325 419 292 335 346 286 392 530 423 220 352 227 305 339 232 327 389 294 322 373 349
  10 363 365 379 431 375 310 246 388  70 274 328 476 276 438 507 376 426 425 510 115 307 432 280 411 283
 165 440  82 448 428 343 393 537 444 405 202 437 114 527 474 357 377 520 278 499 171 248 342 187 259 124
 289   7 312 369 170 351 528 464 417 354 535 470 256 395 182 534 230 407  53 523 176 366 348 225 422 418
 139 495 466 406 400  90 402 362  66 189 508 502 110 471 559 382 490  56 387 518 237 192 491   1 360 522
 120 341 207 469 578 562 529  16 541  34 481 441 179 591 626  11 477 532 164 231  33  64 462  94 397 621
 196 480 136 412 361 533 135 409 334 277 364 401 133 493 544  42 489 511 367 509 223  26 284   2 595 545
 384 410  48 601 566 105 396 513 449 245 550 592  96 565 568  91  78 598  19 475  74  73  67 190 460 588
 320 456 235 454   8 463 106 519 459  86 643 618 116 645 655  37  28 546 450 515 128   9 160 166 571 408
 482 538 583  65 650 607 132 492 215  52 644 625 497 623 620  22 183 606  35 140 149 100  15  63 633  30
 608 632 163 597 624 630  43 585   5 126 536 573  25 526   4 288  41 317  93 572  18 147  54 355 636 602
 345 315 594  46 451 514   6 472  77 500 641 646 447 637 552 503 129  12 236 604  31 150 198  69  14 612
   3 590 252 558 478  59  13 586  55 155 631 577 542 549 649 548  88 107  17 609  61  83 200 113 615 663

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00527e+07us (= 10052.7ms, 10.0527s)
Satisfaction error: 2
Number of search iterations: 4317
Number of local moves: 1245 (including on plateau: 616)
Number of local minimum: 386 (including on plateau: 64)
Number of resets: 2
Number of restarts: 0

Problem in row 9: 611 141 445 332 168 291 567 311 613 318 45 251 424 71 148 506 390 647 240 212 505 316 290 525 257 178 => the sum is 8802 rather than 8801
Problem in row 24: 608 632 163 597 624 630 43 585 5 126 536 573 25 526 4 288 41 317 93 572 18 147 54 355 636 602 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 457 660 281 649 243  40 181 586 600 275  51 588  19 556 598  22 517 403 378  94 104  39 625 159  48 628
 271  41   2 648 585  99 196 639  10 124  30  50 654 627 551 619 543 620 170 402 538 136 547 509  12 178
  54 530 193 609 106 194 559 249   1  20 277 610 589 575 595   3 613 539 374  77  68 195 640   8 545 578
   5  29 562 303 525 516 552 641 571 191  27  16 540  21 612 564 496 579  82  81 488 465 461 131 246  97
  88 582  17 587  46 157  45 203 524  60 210 581 594 561 645 497 481 520 336 443 272  25 577 112  85 553
 107 599 572 560 498  76  75 590 583 134 145 485 489 526 618   6 477 409 623  31  38 190  59 542 237 132
 315 514 467 490 466 494   7  84 657  65 251 176 501 656 455 529 452 486  62   4  18  14 624 555 396  63
  37 377 431 419 156 495 393  33 503 197 424 470 400 442 519 558 541 568  13 476 220  23 458 216 206 226
  72 436 483 456 508 499 482 360 450 219  15 114 368 399 511 597 398 427 428 412  89  34 432 438 148  26
 108 515 504 350 475 391 532 580 327 341 205 472 463 387 223 394 324 535 110  80 407 366 453 177  47  35
 471 384 459 622 340 401 282 172 451 260 227 449 247 446 512 479 429 437 105  93 513 392   9 225 163 233
 383 447 270 389 367 531 263 348 388 280 385 183 346 326 290 435 414 229 175 135 373 406 343 364 320 411
 382 464 362 371 363 345 250 420 405 468 284 273 269 321 433 186 240 379 285 376 204 380 308 365 317 351
 331 386 358 293 316 295 214 323 337 492 408 359 357 381 179 267 257 294 487 372 307 328 421 469 291 279
 338 254 217 615 404 415 278 248 349 339 311 258 297 369 305 355 296 330 570 300 244 334 322 314 410 329
 228 332 354 147 292 344 261 264 192 313 208 283 304 325 342 187 235 347 630 672 395 426 252 491 370 607
 510 299 238 298 255 352 318 262 127 353 605 232 158  91 150 209 665 236 670 184 602 259 268 614 616 230
 484 199 253 310 413 182 153 215 356 335 673 287 202 289 288 265 211 635 448 653 301 152 221 309 634 333
 306 167 241  69 138 573 638 422 198 617 361 128 154 213 207 166 222 169 480 621 601 423 185 569 440 493
 668 231 286 171 168 312 506 439 120 434 445 390 113 180 274 302 245 200 566 474 565 591  67 266 212 576
 505 151 644 164 647 659 218  86 133 478 522  74 276  78 146 651 139 130 118 397 534 664 115 319 425 528
 430 116 155 143 663 549 592 242 111 500 375 256 142 162  70 629 188  43 201 675 418 537 674 239 502 189
 527 234 536  11 122 119  58 658 137 632 606 661 454  44  32 117 102  28 224 563 462 473 521 174 669 637
 441  71 666  24  66 101 608 149 593 603 554 643 125 631  36  87 141 123 611  64 507 636 109 655 140 417
 633 662  90  61  55 533 596 144  52 548 550  96 567  95 161 103  92  56 557 604 460 642  57 165 676 546
 650 121 160  42 584 129 544 444 626 523 652 667 173 100  49 574  83  79  98 518  73 671  53 416 646 126

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00535e+07us (= 10053.5ms, 10.0535s)
Satisfaction error: 1
Number of search iterations: 4250
Number of local moves: 1431 (including on plateau: 728)
Number of local minimum: 352 (including on plateau: 95)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 457 41 193 303 46 76 7 33 450 341 227 183 269 381 305 187 665 635 480 474 534 537 521 655 676 126 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 161 480 632 118 121 168 653  56 489 440 379  91 503 154  18 654  52 413 429 645 619 493  41 671 247  74
 651 652 128 558 485  76 647  92  67 544 182 114  69 642 526 551 124  26 172 568  72 294 105 656 438 362
  66 304 663 120 148  63  84 178  57 394 463 243 470 162 639 556 102 662 100 675 670 447 181 626 667  61
 456 596  40 668  89 133 330  46 130 436 132  39  87 659 108 664 640 220 401 636 110 499 592 471 555  64
 614 587 205 157 603  73  59 163 361 657  36 280 649 576  62 125 187 674 140 398 661 363 146 266 673  86
 665 641 189 143 259 628 399  49 218 466 129  65 351 219 134 593  83 144 272 486 562 523 109 672 203 599
 595 650 265 184 171 319 601 122 271 573 416 195 629 608 167 101 188 505  30 235  96 531 314 138 627 270
 418  60 582 451 590  13 185 616 147 488 520 384 217 340 354 142 553 283 381 459 152   3 580 151 199 533
 291 251 200 107 303 191 569 301 239 139 180 175 615 458 223 298 369 635 365 177 666 572 170 464 197 646
 226 216 315 173 273 255 386 299 236 604 648 494 602 462 302 228 460 311 248 208  16 567 323 234 250 465
 202   9 274 169 275 212 137 310 232 378 229 516 550 591 160 588 518 373 508 268 198 563 342 565  17 617
  81 658 297 231 316 410 396 201 241 324 478 374 338 380 502  25 328 252 282 408 571 669 347 230  42 420
 164 227 242 279 434 542 300 313 263 368 196 473 261 237 308 245 427 355 433 422 634 260 305 285 356 472
 240 318 536 309 452 392 353 431 289 116 501 443 295 474 439 253 331 317 179 215 423 344 517 411  12 211
 387 214 430 415 419 277 349 403 335 221 136 625  79 329 293 404 165 312 375 377 278 383 643 127 437 388
 390 405 371 364 402 496 287 477 535  78 207 366 119 357 370 389 421 407 345  22 269 519 288 341 417 159
 135  90 206 483 479 506 495 156 441 210  55 400 155 333 511 541   7 631 513 549 174  45 585 412 339 350
 193 123 543 453 491 327  31 570  37 521 435 457  80 343 583 566 360   5 540 194 428 117 264 367 391 382
 426 589 497 334 186 552 352 106 455 141 322 424 448 131 325  23 534 487  75 376 281  47 446 204 548 492
 150 507 395 539 528 524 450 514 296 145  43 530 209  10 461 103 346  88 522  11 406 467 385 442 393 337
 149 166 267 598 504 126 545 618 638 637 476 560 306 158 244 425 454 112 607 409   2  99 432  95  70 104
 613   6 469 611  14 621 512 515 500  48 578 249 233 257 633  19 620 358 225 238 192   1 290  29 622 348
 326 276 537  53  24 532  32 510 538  44 624  50  71 286 584 498 444 222 397 414 336  33 660 449 529 332
 183 153  15 644 284 564 594 546 630  58 554 547 292  51 676 509  77 321 586  85 254 224  93  20 482 359
 574 525  35  34 372 481  27 600 597 581 575  97 561  94 176  54 527 111 655 258 256 623 605 262   8 113
 445  98 468 606 579 320  28 609 559 190 307 610 612 490   4 246 484 577  21  68 475 115  38 213  82 557

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00544e+07us (= 10054.4ms, 10.0544s)
Satisfaction error: 2
Number of search iterations: 4336
Number of local moves: 1281 (including on plateau: 582)
Number of local minimum: 386 (including on plateau: 68)
Number of resets: 3
Number of restarts: 0

Problem in column 15: 18 526 639 108 62 134 167 354 223 302 160 502 308 439 293 370 511 583 325 461 244 633 584 676 176 4 => the sum is 8802 rather than 8801
Problem in column 16: 654 551 556 664 125 593 101 142 298 228 588 25 245 253 404 389 541 566 23 103 425 19 498 509 54 246 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 251  24 583 671 668 259 133 576   3 428  86 585 515 630  97 172 624 532 631 529  25  64  99 353 225  38
 674 209 676 476 288  68 101 605  33 579 107 245 113 335 375 595 369 629 103  17 447 569  96 675 413   4
 314 254  27  81 191 581  90 140 486  29 643 566 426 598 169 565 593 385  30 591 173  85 534 297 496 457
 125 614 596 662 124 538  92  34  13 573 587 475  37 278 627 606 600  95 310 174 312  62  48 641 572   6
 558  53 657  10  21 406  11 584 546 325 609 395 580 404  15 461 564 199 561  78 179  42 603 417 518   5
 524 382 104 415 204  40 129 296 525 432  12 491 542 479 198 441 488  80 550  36 507 263 511 184 490 478
  76 514 482  55 552 672 331 531 277 436 155 527 502 321 156 602 458  51   2 228  32 545 492 206 233 365
 150 462  50  72 445 210 207  22   7 548 431 537 469 440 536 328 472  19 522 193 301 272 500 656 554 398
 105 551  74 517 218 188 393 405 219 177 661 495 419 516 132 430 497 166  14 167 367 222 586 384 418 480
 320 526 361 485 588 400 262 464 410 185 663 286 250 420 108 238  20 226 638 110 344 145 280 374  59 639
 324 618 289 397 100 376 424 454 477 533 182 520 544  70 248   1  41 354 190 423 229 161 498 612 396 340
  91 442 330 171 455 456 351 381 279 387 494 118 341 326 380 128 327 196 373 474 356 619 342 339 243 402
 390 449 439 383 292 252 433  16 460 358 519 284 285 435 237 205 412 368 448 311 294  57 508 189 388 389
 242 347  79 578  23 268 355 535 608 295 253 275 261 613 306 371 333 317  58 636 450 528  82 338 304 346
  35 300 645 256 362 135 471 391 319 247 302 336 650 323 408 370 329 414 176 599 316 244 223 224 539 187
 350 378 266 274 178 616 549 422 139 211 352  18 308 249 574 489 111 444 401 334 309 501 220 652 119 337
 221 453 136  71 197 521 504 364 318 366 264 246 260  88 359 201 446 568 555 164 282 503 332 590 195 597
 232 215 271 541 553 283 543 130 270 106 386 654 258 214 626 640 147 142  47 269 468 510 267 411 202 416
 141 255 499 181 530 394 567 363 372 632 673 506 153 194 290 303 315 345 438 594 160 452   9 183 163  89
 660 617 467 265 216  93 429 114 642 463 170 165 149 180 633 610 407 577 298 547  28 200 127 483 186  75
 644 117 427 148 392 669 487 287 322 123 307  65 157 357 621 158 115 343 231 425 658 443 512  84 239 470
 379 230 146 667 664 120 560 122 484 313 235 403  87  43 481 493 168 540 421 126 635 659 208  45  49 523
 655  44  67 473 175 192 203 648 257 434  56  98 213 557 570 137 241 601 607 465 138 144 670 236 349 571
  60  94 234 563  52 377 273 459 589 212 109 399 281  69 575  61 559 628 154 513 592 505 611  77 151 604
 615 622 620 227 666 556 437 159 625 293 240  66 348  39  26  83 102  73 634 217 562 646 152   8 651 134
 665  31 276 162 647 131 466 299 121 116 305  46 653 623  54 112  63 509 409 582 637 360 291 143 649 451

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00029e+07us (= 10002.9ms, 10.0029s)
Wall-clock time (full program): 1.00553e+07us (= 10055.3ms, 10.0553s)
Satisfaction error: 2
Number of search iterations: 3451
Number of local moves: 1103 (including on plateau: 458)
Number of local minimum: 310 (including on plateau: 69)
Number of resets: 2
Number of restarts: 0

Problem in column 16: 172 595 565 606 461 441 602 328 430 238 1 128 205 371 370 489 201 640 303 610 158 493 137 61 83 112 => the sum is 8800 rather than 8801
Problem in column 20: 529 17 591 174 78 36 228 193 167 110 423 474 311 636 599 334 164 269 594 547 425 126 465 513 217 582 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 673  53  31 427 516 422 439  95 131 111 447 650 592  76 651 321 116 498 204 145 658 481  70 662  47 285
 610 418  66 569 581 503 665  46 670 118 451  71  79 440 138 411 140 541  75  30 667 259 124  80 671 378
 233 509  48 521 559  89 660  92  97  85 558 663 645 134 584 654 535 455 161 144 132 163 548 269 154 109
 653  35 652 656 632 110 317  41 529 415 537  56 586 634 166  34 674 172 122   7 298 146 661 421 214  33
 174 664 209 573 638 648 345  65 309 196 425 142  68 494 655  67 130 642 194  84 580 676 167  42 137 477
 568 310  64 553 384 150 151 457 393 264 588 284 413 105 607 647 566 525 547 192 225 368 148 100  86 106
 562 117 186 496 420 126 428 649 331 115 646 306 526 520 141 158 195 603 238 668 107 286 222  78 155 522
 311 181 200 611 546 619 555 639 153  94 502 385 101 598 210 596 123 426 188 147 267 212 171 102 236 628
 279 666 282 406 184 271 231 218 431 202 626 176 252 604 249 133 250 672 301 234 190 617 254 263 247 563
 215 193 139 262 391 224 659 349 149 669 644 572 219 620 237 242 178 550 258 266 318 177 217 227 325 501
 540 170 409 330 380 179 333 275 152 175 557 564 352 618 191 297 240 433 187 442 189 211 441 180 281 675
 257 221 260 366 183 270 294 162 327 229 338 536 292 436 446 291 335 622 243 295 602 657 273 289 347 230
 344 360 265 274 328 361 251 342 399 308 203 355 357 483 276 472 465 375 362 315 322 255 216 405 565 143
 307 314 235 316 312 290 300 367 403 430 313 514 280 454 303 261 320 223 404 466 358 326 373 113 438 381
 302 356 412 353 340 394 156 407 474 531   2 245 398  88 383 372 334 199 560 382 304 341 390 453 397 228
 487 485  32 408 512 486 351 423 513 401 120 299 402 112 511  25 449 125 253 429 392 387 323 459 359  58
 201 508 576 389 450 371 336 248 293  52  87 329 545 168 350 462  91  90 364 519 369 370 386 480 484 283
 424  39 492 343 517  43  72 272  83 365   1 332 374 277 400 445 339 414 416 608 491 410 435 505 448 256
 185 589 471   3  11 468 493 593 108 561  50 574 476 182 490 482 539  59  45 495 515  40 396 470 443  63
 207 571 444 160 464 379  44 579 354 625 268 324 377 208 119 437 497  51 518  20 458 220 544  10 463 460
 169 363 552  26 239  15 157 500 556 507 104 226 542 337 524 288 479  93 528 631  77 434 587 376 388 103
 128 583 452 197  36 533 499 205 640 346 395 164  99 136 554 467 510 244 530 585  23  69 590 597  98 121
 461 127 606 319  17 643 278 551  38 504 213  13  21 549 173 114 630  49 478 543 616 159  18 615 534 532
 419  96 613  54  82  61 475   4 605 232 198 570 591 489 129 473  60  28 599 612  14 417 582 348 594 456
  37 627 527  24   5 523 296 621  22 629 287  19   8  27 305  57 600 577 488  73 567 506 636 624  81 635
  55 246 578 165  74 623  16 601 641 637 241 432 206  12   9 595   6 135 538 469  62 614  29 633 609 575

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00541e+07us (= 10054.1ms, 10.0541s)
Satisfaction error: 1
Number of search iterations: 3360
Number of local moves: 1055 (including on plateau: 492)
Number of local minimum: 282 (including on plateau: 52)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 673 418 48 656 638 150 428 639 431 669 557 536 357 454 383 25 91 414 45 20 77 69 18 348 81 575 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 602 599  55  74 130 238 426 638  79  14 676 163 671  38  59 625 463 129  54  41  90 541 556 659 513 668
  23 103 142 112 169 151  61 152 623 652 113 158 664 615  17 448 552  78 439 618 471 328 503 577 392 640
 193  97  73  63 563 124 605 123 177 596  46 462 663 636  33 667 660 388  58  52 550 157 569 555 548 143
  85 233 144  26 266  53 255 600 674 644  68  65 673 650 194 529 559  27 655 100 237  31 619 670 627 117
 173 431 252  48 657  92 661 203 161 656  45 160 201 114 251 639 606 131  98 581 181 654 207 575 480 544
  82 393 167 147 645 653 517 104 249 219 175 200 127 295  94 630 637 186  44 211 573 578 532 101 607 635
 280 498 141 521 672 205 327 528 419  64 242  60 136 658 133 567 603 227 148 669 105 590 164 223 551  70
 222 611 218 304 497 214 593 647 221  57 288 631 197 247 196 460 170 230  16 369 305 665 612 258 453 120
 301 508 145 269 271 621 558 483 137 102 212 533 134 307 259 217 188 183 381 190 614 553 519 440 538 138
 140 153 651 329 341 235 530 165 244 309 482 198 246 265 417 336 311 291 155 229 330 648 516 432 485 363
 526 226 232 428 277 150 492 338 499 281 584 168 231 317 429 356 187 479 322 372 298 224 199 434 443 310
 609 632 174 216 179 308 403 213 349 405 146 382 313 360 441 302 522 321 414 386 303 436 119 191 390 287
 357 345 353 326 352 409 270 289 220 282 286 454 273 335 422 358 284 245 501 320 455 206 262 279 468 450
 475 276 318 243 337 387 283 215 456 202 445 319 452 368 389 254 355 351 333 208 323 399 264 350 293 506
 500 275 367 540 296 488 407 413 331 285 334 300 154 248 347 108 459 346 400 178 430 268 507  50 379 391
 359  29 378 340 239 383 290 397 332 236 375 408 343 253 491 458 128 371 394 424 433 250 470 415 344 261
 306 182 404 402 365 398  56 210 364 339 260 312 324 451 515 362 527 412 476 256 366 457 166 225 121 545
  28 502 582 477 589 361  11 292 272 478 354 107 342 411 495 435  81  40 496 469 467 536 437  62  93 384
 420 192 444 613 149 294 278 376 505 560 374  51 314 537 171  25 395 385  32 474 401 524 180 380 263 464
 534 176 568 539  72 442   9 410 610 547 297 348 423 377 576  84 461 481 561  67 370  21 132 504 162  30
 598 118 315 473 447  15  95 325 565 472 514 406 626 484 487 116 106 489 418 564  36 135 446  19   7 525
 427 571 572 566  77 493 240 465 591 531  88 416 520  20 646 267 125 624  43 228 543  91  71 449 115  22
  86 583 580  37 622 608 601   5 592  83 604 554  49 156 634 189  47 586 518 486  13 316 494  99 172  87
 509 549 373 616 425 643 139 421  39   4 510 629 546 466 579  96  75 633 597 126 111   6  35 649  24   1
 570   8 512 535  42 562 109 490  80 542 617 642 110  34 523  89  66 574 620 588 209 185 204 195 257 438
 396 511 641 557 122 274 585 299  12 241 666 675  69 159   3 184 234 594 628 595 587   2  18  10  76 662

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00531e+07us (= 10053.1ms, 10.0531s)
Satisfaction error: 2
Number of search iterations: 3214
Number of local moves: 1185 (including on plateau: 457)
Number of local minimum: 259 (including on plateau: 56)
Number of resets: 2
Number of restarts: 0

Problem in row 11: 526 226 232 428 277 150 492 338 499 281 584 168 231 317 429 356 187 479 322 372 298 224 199 434 443 310 => the sum is 8802 rather than 8801
Problem in row 26: 396 511 641 557 122 274 585 299 12 241 666 675 69 159 3 184 234 594 628 595 587 2 18 10 76 662 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  27 577  23  21 578 515 483 342  43 230  20 125  12 613 662 616  66  35 552 663 660 656 122 573 571  16
 271  17 205 129 631 649 569  83 249 611 632 119   5 560 646  26  76  89 619 185   7 600   8 652 633 530
 594 431 264  46 191 643 655 495   3 423 150  78 126 181 603 485  24 381 535 588 602 592  13  62  37 599
   1 582   2 321 561 665  42 516   4  51 629 167 210 137 576 627 463   6  14 604 598 586 251 593  29 566
  45 480  28  50  22 509 591 174 161  48 538  36 453 493 572 497 513  30 489 547 642  80  95 618 567 523
  55 114 155 142 583  31 609 454 166 529 459  40 428  60 536 545 438 442 549 382  39 581 209 458 348 449
 479 551 198 246 534  49  15 203 159  77 556 462 410 200 388 575 279 400 488  53 498 518 173 419 314 557
 630 533 519  86 399 555 435  11  68 130 192 134  25 471 650 587 257 371 170 478 590  10  96 486 532 386
 439 474 553 235 443 543 559 487 148 491 469 367 220  63 457 524 169  18 546 502 219  38 184 115  57 481
 188 346 472 196 511 465 369 357 510 368 377 239 351 417 195 245 384  41 568 447  90 248 106 374 437 500
 482 425 429 223 294 420 306 508  59  44 336 475 189 320 402 241  56 379 514 426 337 468 201 525 308 434
 311 302 373 325 383 304 116 259 341 359 421 254 427 531 266 252 448 430 287 350 376 323 476 352 240 295
 387 397   9 385 313 392 233 270 401 265 441 537 316 375 255 261 244 296 349 473 380 411 317 409 281 404
 412 277 365 432 310 339 364 467 470 278 293 333 455 416 413 179 526 226 224 113 358 275 280 260 574 162
 398 393 334 548 263 501 307 258 394 396 353 309 222 291 347 456 256 503 283 253 300 290 345 178 318 305
 319 378 232 452 187 331 273 322 414 440 391 227 267 212 282 405 424 520 361 299 328 231 433 355 450 268
 236 172 298 444 247 215 111 451 356 661 436 370 589 243 146 330 671 217 207 340 276 186 517 274 484 324
 204 329 407 338 136 343 344 563 171 541 648 315 584 647 335 124 197 492 128 372 406 216 312 213 292 144
 284 395 362 354 237 234 199 668 601 558 208 214 585 390 154 327 297 194 303  88 332 288 636 127 477 289
 228 202 608 418 250 100 667 285 617 507 147 634 218 176  84  97 120 206 522 670 262 389 461 579 211 143
 229 190 225 564 121 175 177 550 504 139 163 554 666 499 104 326 360 637  87 542 272 466 527 152 540  32
 269  92 669 403 672 109 140 123 446 580 153 506 135 180 160 112 605 521 645  61 615 612 621 105 149 118
 565 141 366 654 193 108 151  65 596  98  72 626 628 651 158 641 659 562  70 164 156 445 644 221  93  74
 415 623 639 544  64  81  69 301 658 625  34 614 638  73 145 107 539 653 157  71 238  99 494 490  67 363
 676  94 496 635 620 422 505 182 622 110  19 460 595 464 183  85 133 528 101  75 168 102 607  79 675 165
 657 286 570 610  58 103 512 408 640 242 664 606  47 138  82 131 597 624  33  54  52  91 673 132 117 674

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00539e+07us (= 10053.9ms, 10.0539s)
Satisfaction error: 2
Number of search iterations: 3518
Number of local moves: 1033 (including on plateau: 321)
Number of local minimum: 303 (including on plateau: 44)
Number of resets: 2
Number of restarts: 0

Problem in column 8: 342 83 495 516 174 454 203 11 487 357 508 259 270 467 258 322 451 563 668 285 550 123 65 301 182 408 => the sum is 8802 rather than 8801
Problem in column 20: 663 185 588 604 547 382 53 478 502 447 426 350 473 113 253 299 340 372 88 670 542 61 164 71 75 54 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 676  12 549 669 578  55 369 348 602 571  99  90 134  51   4 661  56 104  93 545 646  65 231 360 561 672
  74 660 465 590 461 184 509 546 365 515 362  37  95 583 420 181  46  60  24 411 114 640 650 458 298  53
 125 666 673 395 665 211 605 193  87 445 149  19  57 252 329 601 103 118 113 645 618 319 493 402 174 344
 107 108  66 326 623  58 307 591 510 337  32  50 664  28 655 391 675 141 195 555 662 538 539 496  70  77
 190 144 642 670 572  73 418 198 330 390 639  38 209 123 659 178  49 105  83 152 543 386 607 617 658 128
 170 414 409 534 569  96 412 200 153 312  64 256 651  41 649 671 159  98 328 547 575 196 311 638 133 215
 237 250 435 505 656 117 614 306 474 566 148  92 439 132 564 652 551 119  68 654  48 202 275 233 223 241
 668 254  31 489 486 197 613 308 295 406 180 301 138 404 463 224 595 427 400 185 453 373 157 320 246 188
 167 212 603 554  84 187 501 279 628 473 137 251 110 253 634 528 469 657 235 242 227 292 216 497 120 245
 357 136 478 609 428 584 574 272  45 177 285 331 214 322 143 363 413 176 201 535 508 332 297 182 674 165
 142 163 514 394 419 643 399 206 314 663 430 171 479 596 221 166 371 217 219 300 173  62 556 498 199 286
 310 309 550 426 507 379 372 570 204 471   6 277 232 352 532 438 160 589 351 186 175 405  42 321 294 343
 155 290 289 384 424 381 388 441 257 278 582 271 274 315 259 368  40 422 376 401 345 317 488 205 464 387
 316 442 436 226 480 518 284 239 440 416 336 347 261 267 346 234 358 383 299 483 192 431 288 270 213 296
 576 367 150 450 318 364   9 100 349 303 333 366 335 462 403 243 467 470 323 325 258 447 417 244 398 324
 604 338 522 370  27 382 598  97 121 228  29 269 287 282 273 109 452 342 593 375 443  91 490 421 629 429
  89 281  39 172 238 460 622 520 255 147 625 667 126 533 203 129 268 495 565 112 247 503 612 260 293 340
 457 304 164  86 264 356 280 291  34  67 557 397 459 353 389 407 437 262 313 506 475 451 359 265 327 541
 425 455  26 115   7 434 122 229 135  80 361 456 548 526 585 466 472 446 341 516 525   3  22 485 454 567
 408  10 140 208 130 220 339 374 484  23 517 647 393 524 151 305 468 600 248 162 536 487  25 354 544 504
 380 611  63 266 124 127  35 444 599  88 615 499 540 378 102 154 513 249 580  78 225 492 392 139 476 632
 558 587  59 156 562 641  21 106 621 396 588 635  54 579 218 179  43 521 648  52 189 101 477 116 194 500
 494 608  76  36   8 283   2 553 415 183  47 592 573 449 385 502 568 537 619  44  16 240   1 512 531 527
 519 530 637  79  72 644  13 529  94 481 433 491 633 158 161 236 377  85 350 511 432 482 577  15 191  71
 586  14 616  17  81 610 334 559 542 222 594 624 276 631  33 410 131 552 606 111  30 423  69 230 355 145
  11 636 169  75  18 597  61 302 448 563 653 627 620 207  20   5 560 626 630 168 146 523 210 263  82 581

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.05926e+06us (= 7059.26ms, 7.05926s)
Wall-clock time (full program): 7.11209e+06us (= 7112.09ms, 7.11209s)
Satisfaction error: 0
Number of search iterations: 2018
Number of local moves: 857 (including on plateau: 333)
Number of local minimum: 152 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  58 555 148 676 550 500  30 107  77 493  40 564  18 349  47 576 665 305 626 656  80  81 479 661  98 362
  24 666  79 621  93  25  44 102  49 530 615 650  73  31 659 597  16 333 303 583 673 592 632 607 175  29
  64  99 671 606 568 467  48 141  56 473 674 649 114 454  55 618 191 108 350 663 133 521 547 340  85 106
 204 214 190 376 601  66  62  33  46 591 652 423  61 377 662 614 144  14 640 159 578 543 654 647 174  76
 222 198  59 435 570  22 263 160 186 653 230 625 117 509 158 604 657  54 489 496 172 643 514 593  69 103
 147 124 130 590 129 421 195 264 131 635 484 602 120 528 237 278 225 189 655 449 622 118 631 537 145 215
 140 136 260 551 651 518 629 101  86 556 194 512 163 574 277 504 128 176 168 667 249 262 439 444 224 192
 229 193 165 558 139 586 177 648 188 459 238 571 119 669 275 247 460 157 185 480 164 603 341 519 166 265
 111 330 196 488 181 503 245  35 660 670 110 452 291 646 232 235 239 180 554 638 241 207 515 428 161 253
 254 231 187 441 221 470 203 361 255 317 137 182 351 636 153 511 217 487 582 572 234 342 248 581 268 360
 286 326 216 199 390 319 279 290 414 516 545 287 297 280 310 363 339 664 282 169 338 294 347 552 226 273
 364 355 240 420 296 250 354 236 270 675 406 373 284 352 316 417 465 252 288 243 401 365 308 299 271 301
 289 170 394 430 375 424 413 327 391 285 345 336 321 309 302 233 380 369 329 337 359 313 348 403 276 343
 353 448 323 356 379 378 328 344 152 292 443 298 269 392 395 311 257 312 398 283 324 261 307 508 370 320
 381 385 322 331 346 463 178 412 447 300 422 267 431  39 211 318 272 437 335 400 334 367 426 384 227 366
 455 408 425 325 461 154 397 494 357 223 244 418 505  28 315 109 306 100 434 208 475 389 462 251 451 407
 388 386 569 258 387 202 371 259 332 151 499 374 405 368 415 453  84 410 150 149 404 383 219 213 491 481
 436 396 548 167 445 293 506 507 474   1 314 411 469  53 382  42 399  96  21 256 495 498 409 242 456 485
 372 416 546 132 517 304 525 442 536   9 393  70 450 184 402 201 432 419  60 113 562 468 112 135 523 478
 560 579 510 123  57  34 553 563 477 210  26 266 433  23 486 627 639 457 206   7 526  65  75 155 585 559
 535 471 446  87 502  68 466 522 612  41 458  32 497 143 561  97 440 527 438 218  13 483 171  19 482 472
 541 624 476  89 246 138 587 609 645 173 575  94 540  88  17   4 600 584  43 209 608  71  83  38 531 588
 641 539 605 179 532 577 197 156 617 146   5 122 589 358 566  27 616 542 567  95  92  15   2   3 464 549
 623  10 212 281  90 520 594 524 637 205  74  78 628 220 104  91 492 529 533 595  12 183 228 200 573 565
 513  52 274  37  67 672 619 630 580 125 134  63 658 634 644 295 127 501  50  51 596 613 142  36 668  20
 611 490 610  45   8 427 538 534 126  72 544  82 598 557 620 429  11 599 115 105 116 121 162   6 642 633

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.3647e+06us (= 3364.7ms, 3.3647s)
Wall-clock time (full program): 3.41838e+06us (= 3418.38ms, 3.41838s)
Satisfaction error: 0
Number of search iterations: 573
Number of local moves: 439 (including on plateau: 69)
Number of local minimum: 20 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  32 634 559 572  92 212 674  87  48 479 579  41  65 653 609 436 665  12 593 299 523 103  27 115 551 141
  74 668 582 662  69  62 672  43 655 465  33  25  93 649 658  73 616  54 531 666 502  45 171  55 656  22
  66 651 590 664  35 534 375 511  61 548 152  56 158 632 602  96 643 104  50 622 113 153  36 659 565 125
 106 513 599 613 545  86 673  46  52 604  97  39  60 603 508 196 581 441 309 175 170 482 670  14 585  34
 216 614 554 592  67 159 675 134 123 562 185 135 117 594 166 178 501 443 444 644 197 388 522 181 267 143
 118 583 584 587 275 204 596 183 105 539 210 269 121 516 663 215 597  70  49 503 179 131 440 243 628 193
 198 483 165 477 148 208 527 249  94 207 300 303 260 365 631 272 626 576 639 180 378 130 564  75 552 194
 168 495 610 287 174 280 355 652 219 661 184 471 231 218 169 224 550  78 489 223 671 128 525 320 242 177
 248 110 506 413 202 291 541 139 676 445 233 111 211 286 535 536 529 353 505 157 660 191 263 120 279 261
 317 187 205 403 252 298 526 294 250 669 277 292 612 126 251 319 414 381 657 186 102 667 486 226 222 182
 347 259 200 270  77 478 452 199 156 574 577 188 262 302 254 642 369 240 490 575 271 220 615 149 321 314
 281 306 238 439 380 116 283 307 476 284 325 246 264 290 257 305 350 563 606 327 304 173 618 434 382 247
 393 241 340 442 297 417 360 357 326 289 295 288 372 228 328 424 419 344 390 266 333 342 195 364 336 415
 361 343 227 189 206 499 172 491 509 276 457 429 301 237 352 235 108 384 377 391 322 480 451 315 358 331
 335 324 371 385 473 496 308 133 392 330 409 245 356 376 374 395 285 458 338 406 310 351 318 396   3 234
 514 339 432 312 366 214 221 520 346  40 398 313 435 329 421 213 447 107 362 397 438   1 389 540 334 373
 379 418 337 236 412  20  91 425 462   9 538 368 367 524 431 407 256 519 400 311  26 323 164 504 472 402
 405 422 449 122 423 433 176 466 332  57 488 547 282 454 167 348   8 268  88 411 470 497 150 507 363 468
 556 464  79 136 428 469 109  38 611 408 578 450 456 498 430  31 151  95  11 463  72 586 387 427 383 485
 420  51  21 293 558 494 132 459 410  81 437 394 573 426 446 484 190 345 101 217 461 448 163 567 155 475
 474  68 258  47 621 354 147 630 401 203 515 605 512  44  29 569 349 645  80  58  19 570 316 591  98 598
 492 154 129 244 399 650 274 568  83 253  23 553 623  71  99 487  76 557 201 112 239 517 481 453 416 647
 542   7  59 225 560  82 370  85 571 278 555 532 493 138 119 386  28 467 359 546 636 625  15 404 209 510
 608 460 500  24 638 637  42 533 641 140 530 654 588 100 114 146  16 160 273 521 624   6  84   4 192 566
 544   5 144  30 561 580  37 619 162 145 161 646 648  53  64 595  10 537 230  18 549 617 455 620 142 629
 607   2  63 137 543 528  13 633 640 255 265 601 341  89 124 589  17 600 229 127 232 627 296 518  90 635

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.98061e+06us (= 4980.61ms, 4.98061s)
Wall-clock time (full program): 5.03177e+06us (= 5031.77ms, 5.03177s)
Satisfaction error: 0
Number of search iterations: 1247
Number of local moves: 475 (including on plateau: 122)
Number of local minimum: 103 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 639  65  39  96 137 479 568 336 460 635 207 496 645  40  76 520 442  28 220 545 295 619  54 486 149 525
 372 217 136 157 228 487 465 661 164 658 516 526 647  87  93  75  70  79 245 640  49 546  92 642 492 457
 438 676 617  85 142 630 671 674 154 653 411 190  38  32  78 147  34 131 582 329 505 521  62 262 110 629
 556 198 169  29 102 495 160 593 391 655 588 611 103  60  68 657  88 581 175 138 609 299 668 558  61 189
 203 156 663 672 113 498 100 194 564 626 181 660  86  46 255 211  47 580 548  95 163 667 101 452 284 636
 355 675 665 144 310 637 150 463 162 422 651 648 271  55 119 165 143 195 153 666 634 114 215 449 155 185
 278 307  21 300  97 633 458 225 624 193 654 552  90  51 531 607 212 133 604 510 342 135 177 577 373 117
 605 116 286 610 201 468 462 186 592 340 557 662  57 268 202 206  69 659 669 167 134 231 248 447 187 172
 178 251 290 623 130 456 176 240 415 643 209 380 269  59 664 326 199 538 620 270 238 277 158 467 298 427
 559 232 146 349 399 649 266 297 522 233 263 132 351 205 345 108 421 171 574 325 583 323 221 589 334 204
 567 320 184 223 170 437 275 304 518 236 348 252 173 335 145 359 431 587 196 390 341 314 362 652 439 243
 182 296 313 324 214 371 309 404 273 216 631 549 319 256 293 429 414 330 606 279 283 301 141 445 388 235
 374 285 292 237 670 397 357 274 311 246 392 333 393 389 331 337 346 440 288 375 361 376 258 338 210 191
 291 222 306 302 267 434 289 322 347 282 315 401 265 673 474 303 318 227 407 257 339 128 343 281 530 478
 412 354 224 409 446 180 328 378 356 327 472  99 229 363 396 493 122 426 400 381 364 433 417 226 213 353
 383 500 436 494 402 168 161 533 239 253  15 360 305 369 367 366 280 416 350 485 107 308 365 241 490 408
 384 419 444 398 387 321 386 420 242 118 385 264 435 484 475  77  13 441 461 508 148  73 506  52 528 432
   5 555 382 410 497 174 379 370  16 197 294  72 430 596 166 450 622 317 542 358 403 488 443 573  25  37
 394 405 473  27 481  11 511  81 287 352  36  58 550 480 524  35 491 261 368 451 471 428 529 218 547 332
 247 464 418 613 453 123  80 512  33 489 234  71 424 627 576 565 616 260  67 560   8 501  53 230 448 129
 272 519 532 502 563 244 395 124 316 183 127  14 554 455 104   6 570 477  48 459   3 534 523 152 572 553
  82 425 499 466 638  83 540 482 200  45 188  22 536 628 618 504 544 219 151  10 598  31 517 249 503  23
  50 469 454  30 632  63   4 591 312 120 423 603 476 514  66 569 608 377  74 406 250  98 646 111 276 579
 208 614 106 562 513 344 112   9  91  94 125 602 561 507 650 586 539 254   2  89 413 509 594  17 585 115
 126  41 179 599  12  18 584   7 612 543 470 139 575 566 595  56 621 515 259  24 535 483 571  44  26 601
 641  20 527 140 597   1 615 121 600  42 109 105  19 656 590 644 541 159 192  84 625  64 537  43 578 551

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.98512e+06us (= 3985.12ms, 3.98512s)
Wall-clock time (full program): 4.03847e+06us (= 4038.47ms, 4.03847s)
Satisfaction error: 0
Number of search iterations: 1103
Number of local moves: 723 (including on plateau: 303)
Number of local minimum: 56 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  49  18  61 649  97 346 496 548 365 657  85 222 666 509 479 640  27 318 564 178  62  86 654 597 201 227
 605 286  45 435 587 238 621 648 130  48  74  40  12 594 488  75 262  58  54 662  77 647 530 552 673 360
 603 644 515 234 480 116 113 344 170  31  96 438 555 396 221 611 141 169 519 126 520  35 592 305 254 573
 508  71 159 454 638 193  20 612 209 570 655 179 474  79 412 563 428  88 415 187 108 261 576 223  56 663
 653 162 118 670 494  36 354 656 242  33 138  84 646 623 181 197  13 117 651 634 571 258 609 148 133 380
 260 230 151 489 493 283 109 250  99 183 618 580 194 114   2 127 136 384 667 675 452 568 669 290 233 545
 146 219 676 596 497 264 631 161 110 411 100 253 147 139 263 461 449 478 319 442 578 176  19 401 330 535
 245 341 635 172 317  68 195 591 273 645 246 156 558 167 472 608 145 243 284 613 316 165 436 137 140 633
 433 229 503 560 325 307  60 153 658 364 200 211 297 322 538 332 309 620 135 291 203 303 404 184 210 650
 323  89 202 225 434  95 473 385 239 553 173 551 315 232 537 228 664 630 299 528 190 300 374 171 249 342
 476 174  24 629 212 542 244  46 180 306 235 217 154 421 661 251 198 541 296 355 483 382 643 274 310 547
 255 432 308 361 369 224 320 463 408 518 298 164 429 160 602 329 527  14 123 381 397 400 327 266 413 313
 259 237 270 207 585 277 334 363 278 399 402  26 668 616 208 499 257 338 247 358 456 386 372 265 312 182
 188 406 269 357 370 446 279 674  73 321 425 288 326 398 379  91 282 437 271 231 533 486 593  51 294 333
 256 373 377 191 345 498 419 295 356 285 393 267 475 391  41 566 281 458 510 292 403 529  29 353 340  78
  64 389 293 155 302 196 439 175 549 366 276 460 417 414 163 532 390 405 469 324 427  98   3 394 639 462
 383 572 248  21 453 395  72 131 440 625 423 577 523 430 626 455 348 350  25 287 105 450  22 467 331  42
 328 101 448 272  70  94 392 387 214 516 416 482 351 512 371 491 470 192 622 280 106 240 150 490 375 431
 368 557 410 447 124 567 407  83 522 120 459 484  92 543 168 590 598 189  82 468 157 177 119 471 495 104
 343 524 424 215 129 418 185 426  57   4 502 617 481 554   5  53 477  76  38 505 111 562 539 604 507 445
 652 588 584 443 311 337  15 444 335 525  52 504  30  90 112 199 513 511  39 226 409 637 144 514 579   8
 420 550 586 583 349 600 466 216 619 487 546 166   6 241 457  50 441 464 213 128 304  10  93 659 115  32
  65 665 641  67 252 556 501  59 451 500 531 206  87 122 339 465 582  47 143  81 636 595 268 301 492 149
 362 581  69  28 367 561 536   1 627  23 236 388 671 102 559  11 186 624 534 378 601 517 132  44 521 142
 540  16 125  66  80 575 506 485 565 107 615 599 218  43 359 314 574 422 610 134 220 526 152 606  55 289
  17 347 660 275 121 569 614 205 632 204 607 642   9 589 158  63 103 628 672  37 376   7 352  34 544 336

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.66042e+06us (= 6660.42ms, 6.66042s)
Wall-clock time (full program): 6.71312e+06us (= 6713.12ms, 6.71312s)
Satisfaction error: 0
Number of search iterations: 2033
Number of local moves: 926 (including on plateau: 396)
Number of local minimum: 175 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  62  77 255 646 106 593 202  17 125  35 655 645  54 229 105 603 602 201 188 654 567 587 289 579  89 636
 242 108 401   9 110 564 577 137  84  52 633 660  30  99  74 637 592 553 420 605 549 126 197 474 650 218
 192  26  40  19 436 617 583 489 116  91 597 578  80 217  24 616 627 516 193 651 613 350 279 585 253  13
 492  29 609 450 134 573  50  18  51  64 666 604 114  56  86 563 565 358 493 179 647 195  16 649 580 560
 151  11 540   1   5 568  49 212  90 464 502 535  63 119 160 444 588 619 305 439 554 457 337 551 498 539
  47 590 159 371  71 431  39 130  75 631 543 505  10 375  33 548 537   6 432 606 426 370 186 632 522 526
 150 323 607 216 203 442 146 434 112 494 534 547 509  81 177 524 542 121 120 512 550 127 245 569   8 508
 470 304 472 148 115 465  79 152 199 396 446 480 561 462 220 506 419 113 501 423 417 128 252 521  37 515
 377 575 530 555 138 343 557 143   2 504 428 608 389  66 223 486 410  53  14 545 533   4 369 404 490  55
 382  92 453 207 467 525  97 463 360  78 461 339 422 101 344 383 478 142 303 538 572  45 258 400 485 406
 495 519 385 481 285 301   7 456 310 455 222 302 366 319 314 376 527 459   3 364 391 390 295  88 184 507
 451 263 460  27 379 357 167 328 441 412 298 239 394 405 452 421 430 237 362 367 356 363 291 145 397 359
 381 349 500 329 352 435 278 318 308 333 477 438 398 283 403 342 392  60 351 384  12 346 365 294 265 408
 437 395 353 445 315 156 640 299 414 236 286 284 313 326 448 331 306 378 388 355 260 407 225 380 170 254
 386 244 429 425 269 556 325 393 595 215 368 266 293 274 418 409 246 280 209 312 182 336 523 416 241 191
 194 591 228 402 320 327 316 270 335 454 176 338 300 348 259 321 330 226 642 276 297 628 517 219 273 214
 340 559 162 673 234 247 317 233 443 262 332 131 354 292 487 275 249 630 264 204 168 615 544 290 200 296
 268 644 635 235 483 213 511 231 324 256 307  83 175 659 281 210 190 669 663 206  93 221 496 272 311 165
 198 248 132 594 541 240 566 135 599 147 174 211 250 618 491 171  72 499 643 122 180 574 586  25 596 189
 238 309 153 674 532  73 652 415 322 638  22 224 582 558 277 141 251 172 227 661 205 447 173  61 658 136
 581 166  95 155 529 164 471 552 584 287  96 267 187 667 497  41  59 620 282  67 672 610 513  44 334 261
 424 374 104 271 570 288 479 665 668  98  94 133 614 546 625 181  68 449 372 118 257 163 629 185 230 196
 624 656  42  21 531 154 373 626 621 488 161 208 600 473 675 149  28 169 469 144  69 433 466 103 157 361
 612 562 345 671 528  58 475 662 399 413 243 102 622 411 571  32 124 178 183  15  85 111 129 648 107 514
 576 117 123 676 664  46 458 503 601 641  23  38 510 476 639  48  82 440 427  34  70 232 482 158 598 140
  31 670 589 100 484  65 387 520 623 657  57  36 611 341 518  43  87 653 347  20  76 536 139 109 468 634

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00542e+07us (= 10054.2ms, 10.0542s)
Satisfaction error: 2
Number of search iterations: 3067
Number of local moves: 1101 (including on plateau: 517)
Number of local minimum: 275 (including on plateau: 54)
Number of resets: 2
Number of restarts: 0

Problem in row 24: 612 562 345 671 528 58 475 662 399 413 243 102 622 411 571 32 124 178 183 15 85 111 129 648 107 514 => the sum is 8800 rather than 8801
Problem in row 25: 576 117 123 676 664 46 458 503 601 641 23 38 510 476 639 48 82 440 427 34 70 232 482 158 598 140 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  75  22 634 621 233 575 495 567 392  24  28  20 167 400 663  51 120 279 539 598  26 627 202 455 568 420
 569 484 553 667 669 111 462 511  84 562 618  43  87 140 578  65 474  45 331 148 146 497  52 514 254 137
 109 524 485 613 467  82 672 401 107  78 498 183 101 114 576 116  89 346 546 136  90 512 643 580 616 117
  55  48 671 313 466 129 640 652  98 169 363 257  34 447 172  93 118 412 638 100 492 476 670 675 500 113
  44 197 538 560 361 542 210 633 191  49 676  37  12 561 664 189 211 480 564 128 124 297 134 508 629 262
  61 108 612 110 626 651 526 184 156  66 127 166  96 218 488 200  88 628 525 666 358 605 242 550 600 144
 204 662 513 182 505 126 655 196  59 591 554 212 422 245 258 207 215 198 619 521  73 461 159 541 152 271
 264 333 307 239 631 188 653 646 329 280 405 161 494 162 199 145 138 593 459 180 243 632 143 674 178 125
 192 155 529 235 325  99 460 519 673 577 463 246 133 281 217 326  68 647 622 274 486 312 115 290 248 309
 170 106 263 300 549 130 317 171 185 665 381 194 573 216 230 227 668 175 609 157 658 391 299 493 330 344
 176 174 261 270 247 607 354 293 284 278 570 206 287 285 323 320 623 390 393 250 224 590 397 260 417 322
 351 311 308 375 378 316 314 186 220 302 587 319 305 430 520 386 328 334 324 384 219 490 231 228 382 273
 376 190 362 343 291 396 275 395 336 440 267 306 321 332 193 404 523 409 441 283 359 318 249 352 303 337
 340 370 345 251 435 348 365 272 403 360 298 209 572 450 349 394 259 265 383 255 356 418 244 237 221 402
 226 535 366 310 341 304 431   6 426 223 372 448 398  53 445 364 301 153 373 457 266 439 374 419 414 357
 368 229 112 438 203 296 327 454 478 449 201 406 238 434 446 451 187 355 339  19 335 276 389 482 367 522
 620 501 119 432  64 347 387 473 411 491 168 443 415 433 256 444  25  71 121 481 428 253 423  79 531 385
 424 458 149  36  21 510 429 437  33 468 241 533 477 603 503 380 565 123 236 408 413 269 407 225 436  17
 586 483 399 579  47 551 160 151 315 131  83 416 214  74 427 537 534   1 141 475 559 181 507 252 442 556
 499 464 342 530  57 369 122  95 515 517 234 532 179 547 371 548 540 555 286 142  77 163 604  27 470  16
 625 509   5 487  10  15 177 536 584 388 410 453 581 528  58 608 282 479   2 544  23  40 469  32 452 504
 601  18   7 425 213 496  13 552 592 506 154 639 566 471  80   8 472 104  56 617 648  31 502 456   3 571
 611 630  92  70 195 589  67  81 597 222  35 595 165 102 599 657 543 288 135 659 624 277  97 139  91 641
 635 644 421 350 656 147  46  38 173 465 353 614 660  94  69 516 574 594  39 105 289 132 558  63   9 557
 606   4 379  11 150 240 158 292 615 295 377 645 650 596  76 563 588 294  50 582 649  42 164  62 103 610
  14 642  29  54 661 637  86  60 545 205 338 518 654 585  41 602 268 583  30 232 636  72 527 208  85 489

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.345e+06us (= 5345ms, 5.345s)
Wall-clock time (full program): 5.39759e+06us (= 5397.59ms, 5.39759s)
Satisfaction error: 0
Number of search iterations: 1350
Number of local moves: 634 (including on plateau: 221)
Number of local minimum: 82 (including on plateau: 36)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 671 645 161 676 486  68 674 593  78  75  57 568  72 545 633  38  84  91  93 625  76  56 636  92 668 340
  44 452 667 618 507  51 430 506 590 574  85 188 651 282 124 135  64 368 537 145 247  74 361 163 319 619
  29 538 514 675 601  40 654 666  20  97  37 635 236 298 323  96 662  63 130 637 148 104 112 325 527 634
 107 498 628 419 480  86 143 366 471 100  45 663 661 578  83  90 132  79  48 579 672 157 268 606 201 641
 639 609 321 381 335  46  95 258 580 597 248 194 237 570 117 167 534 105  94 176 664 600 369 169 178 518
 245 577 602 533 599 501 150 612  88 192 198 146 363 626 461 183 397 114  77 620 331 158 142 103 227 556
 435 524 250 495 512 217 420 544 632 640 181 193 563 394 140 149 222 108 255 274 138  62 455 154 253 591
 586 536 235 573 567 159  80 673 190 164 463 261 659 653 128 251 129 133 644 136 243 284 338  99 171 446
 436 295 141 418 647 216 152 308 650 165 242 224 291 622 333 264 151 642 270 631 273 172 200 372 196 490
 156 249 231 613 669 184 180 526 279 208 277 289 390 513 410 186 655 166 240 571 173 259 400 197 287 493
 211 315 464 520 670 207 175 271 286 428 638 269 267 362 275 346 344 327 162 185 234 388 447 299 312 399
 292 246 336 494 326 283 379 339 276 348 354 328 395 320 359 317 427 189 214 407 300 345 398 303 470 356
 371 318 294 252 334 437 477 272 309 425 195 329 367 421 337 314 310 265 349 459 392 293 239 416 285 341
 221 387 262 324 351 281 256 302 305 405 342 260 403 280 489 229 353 304 377 479 355 376 301 375 426 358
 374 218 382 347 332 296 228 386 364 434 209 472 458 393 322 219 389 451 460 402 215 233 311 288 266 352
 415 478 316 202  31 530 137 443  32 119 408 511 380 278 313 396 307 439 391 412 429 385 383 432 409 225
 384 496 450 232 102 101 413 131 457 204 404 587 370 378 182 414 106 508 442 144 492 569  98 438 487 212
  39 468 423 205 118 454 483 525 179 596 160 206  25  10 541 595 444 517 519 373   4 433 466 440 462 116
 516  58 453 120 187 497 406 191  59 576 503 210 499 170  43 424 500 431  17 357 422 554 482 411 474 241
  50  33 473  82  67 522  55 441 540  19 467 523 123  60 445 559 521 481 564  30 449 465 589 502 594 147
 646 491  69  65 199 562 605  61  81 592 529 476 153 230 401 549  27 627 297  70  36 469 548 555 350 113
 115   2 448 238  14 656 557  42 616 475 624 607 509 126  54 528  28 532 584 257 604   5  22 547 558  53
 510  21 109 139 213 649 552 263 531  52 244  16  71 220 561 621 643 515 543 343 648 630  35 539   8 125
 365  15   7  89 254 484 581  66 168 610 652   1 560 122 504 535 546 505 583 110 585 611 575  41 111 121
 456 155  23  73 174 614 485   3 603 572 657  47  11 223 658 588 203 226 551  49 665 553   9 629 550  24
 488 177 542  18  26 660  34  13 417 134 582 598  87 127 565 608 623 615 360 330   6 566 617 306  12 290

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.54462e+06us (= 4544.62ms, 4.54462s)
Wall-clock time (full program): 4.59708e+06us (= 4597.08ms, 4.59708s)
Satisfaction error: 0
Number of search iterations: 1059
Number of local moves: 594 (including on plateau: 146)
Number of local minimum: 54 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   4 119 112  96  62  54 191 546 653 206 548 210 122  72 598 480 574 651 608 652 578 625 584 151  30 275
  71   6 659 161 638  27 172 644 655 601 173 276  16 114 633  51 619 654 569 260 201  29 356 509  94 613
 139   9 118  69 628 182  58 646  25 596 140 593 589  19 660 155 563 604 602 553  79 526 565  12  50 621
  60  13 539   1 647  11 284 556 401 623  68 163 481 230 184 505 387 588 657 627  32  53 251 351 534 555
 516  55 541  14   3 609  40 450  26 587 175 355 551  45 294 162 496 507 603 508 189 261 517 525 278 494
  15 186 594 170 502   7  21 605 550 449  38  93 504 279 466 407 524 538 455 581   2 583 597  17 149 469
 495  41 542 111 376 523  18 554 252 478  36 503 460  22 392 131 519 530 415 309 121 482 341  65 513 572
 394 152 544 273 451 473 157   8 518 446  43 483  44 443 208 498 501 471  31 560 110 468 448 492  74 511
 465 227 389 237 414  10 243 464 429 461 313 283 436 171 535 458 564 296 439 344  88 476  34 462 141 422
 144 205 531 185 447 515 196 489 475 393 348  23 403 209  28 485 248 229 437 398 364 323 442 434 340 510
 493 282 417 380 433 456  76 427 491 435 187 338 286   5 512  35 180 477 411 301 358 405 353 453 264 346
 396 452 366 238 397 350 291 431 416 349 326 399 368 419 317 327 365  20 413 204 378  46 300 420 428 385
 375 234 410 367 339 332 272 352 312 232 372 383 423 319 259 369 334 514 222 315 224 474 343 408 310 307
 361 412 357 360 328 347 631 337 299 295 271 281 331 277 242 318 333 269 213 432 311 325 463 342 225 441
 381 354 316 314 374 329 335 247 373 545 402 386 254 384 359 322 308 377 324 297 370 231 262 320 292 345
 267 395 246 425 239 306 421 263 304 293 440 547 147 382 472 379 330 438 390 457 207 274 167 298 424 290
 459 658 202 321 101 289 484 178 270 624 305 406 258 288 215 265 629 245 199 404 634 188 522 106 249 302
 176 506 233 561 256 303 533 235 595 214 650 200 244 487 562 287 216 371 203 226 445 218 177 211 567 125
 193 543 166 444 228 285 673 143 600 194 192 549 190 669 479 571 127 145 591 217 198 280 128 236 586 174
 241 400 160 566 268 169 362 154 129 212 640 559 626 454 197 266  98 221 150 665 467 219 610 620 165 183
 576 558 113 648  99 529 607  61 117  70 528 240  81 612 636 643 336 159 132 134 672 253 133 100 606 158
 521 532  63 568 668 615 497 142  73  97 635 527 136 599 148 146 153 130 102 168 573 663 181 592 220  52
 670 664 426 409 109 661 363 107  87  48 490 223 116 499 123 250 108 124 257  64 500 642 645 590 470 156
 135 656 662 630  84 104 674  67  89 179 418 622 671 667 164 579 103  75  86  59 537  95 195 552 641  57
 637 585  56 614 618 666 632 115  80  91 486  77 676 616  33 575  66  90  37  24 675 126 138 430 611  47
 617 557  39 639  92 649 570 580 582  83 577  82 388 520  85 137 120  78 255  42 488 536  49 105 540 391

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.85436e+06us (= 5854.36ms, 5.85436s)
Wall-clock time (full program): 5.907e+06us (= 5907ms, 5.907s)
Satisfaction error: 0
Number of search iterations: 1566
Number of local moves: 807 (including on plateau: 368)
Number of local minimum: 78 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 388 564  80 246 281  79 108  41  67  51 217 477 649 558 216 394 661 522  86 501  64 554 602 364 359 672
  73 624 664 450  65  61 527 104 114 456 263  52  81 507 303 480 660 570 390 412  14 102 629 116 671 413
  32 569 548 549 259 525 148  70  37 500 402  71 170 339 511 561 482 550 144 168 318 332 597 150 668 101
 182 581 665 137  42  49 395 614 152 471  45 503 637  20 197 555 541 505 141 112 656 165 583  99 211 543
  26  96 652 650   4 504 533 528 129 658 157 142 158 435 574 673 591 422 464  91 475 135  13 133  40 518
 350  97 107  76 208 669 153 207 648 195 499 205 212 322 437 590 568 620 408 196 341 126 542 174 666 185
 429 199 143 439 653 176 622 588  90 497  54  69 118 612 553 625 508 610   7 675   8 557  92 111  98 268
 117 219 122 334 175 252 127 651 409 278 645 190 255 659 265 473 537 177 628 179 621 161 367 210 261 489
 587 235 123 283 169 203 121 192 601 635 667 244 147 595 343 163 181 670 215 146 461 186 566 171 266 631
 241 383 164 391 202 271 231 305 253 452 642 232 254 416 606 167 465 599 292 289 567 288 250 189 251 401
 222 233 362 162 156 301 245 200 594 239 585 349 243 335 384 389 308 342 338 381 331 295 575 333 242 657
 249 286 323 304 613 275 229 441 609 274 663 325 290 449 369 106 299 300 258 352 256  60 496 236 312 427
 273 634 298 119 214 309 320 396 347 400 329 257 514 269 260 313 512 154 319 551 204 674 282 345 330 178
 376 294 346 417 198 353 377 240 407 418 270 316 373 296 340 536  22 336 291 392 398 311 230 596 317 351
 223 371 451 454 459 315 443  75 355 213 363 592 457 247  33 328 397 386 453  68 370 520 173 467 360 228
 314  10 406 424 604 433 285 446 399 361 324 589 584 358 191 337 404 448 405 462  77 430 105 184 155  66
 426 411 486 490 491  24 403 468 647  85   6 385 472 630   1 640  36 375  28 502 187 556 264 372 366  50
 547 378 442 469 432 481 302 458   3  57 444 445 380 234 226 521 310   5 419   9  87 544 483 495 262 368
 478 510 393 470 438 608 607  34 218 455  47 431 559 225 100  82 277 420 130  19 632 348 110 523 463 224
 382 440 529 124 414 498  17 151 120 580 515 560  72 209 494  94 180 188 447  21 488 428 676 539 387 248
 572 476 633 423 327  27 284  74 552 138 140 626 415 516 506 172  46  58 365 493  39 530 136 646 519  88
 524 526 535 356  23 532 577 571 326 206 160 354 421 272 113 128 194  62 485 600 538  84 374 466  53 321
  38  18  95 565 578 636 166 563 546 436 221 598 287  43 460 115 134  25 579 603 201  12 492 615 582 193
 623 586  55 267 638 644 619 487 379 103 220  83  35   2 237 149 306 276 562 611 513 617 109  29 307 344
 474  31  48  63 627 517 357 618 183 159 643 227 425 238 509 132  93  56 293 534 410 641  11 576 639 297
 655  30 131 139 531  59 605 279 616 484 280 479 593  15 573  78  89 125 654 434 545 145  44 662  16 540

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.39632e+06us (= 6396.32ms, 6.39632s)
Wall-clock time (full program): 6.4491e+06us (= 6449.1ms, 6.4491s)
Satisfaction error: 0
Number of search iterations: 1955
Number of local moves: 798 (including on plateau: 341)
Number of local minimum: 142 (including on plateau: 46)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  17 599 511 371  27  66 586 234  39 666 222 541 529 665 414 577 592 248 659 649 120  69  51  90   3 256
 574  62 416  99  57   6 226 255 252  15 650 590 640 660 627 641 632 153 653 622  33  52 140 593  97  55
 532 612 172  18 550  31  24 544  53 619 490 131 551 235 465 658 624 167 514 379 100  63  93 657 517   2
 513 436  36 470  54 109 115 542   1 565 655 105 585 254 573 567 634 181 667 639 449  41 296 239  49  26
 552 581 530 147  22  96 547 508 312 579 478 535  25 213 206 643 583 161 566 635  21 117  44 609  80  11
 422 400  20  34 539  37 571 113 534 636 656 473 526 133 166 491 475 136 563 595  28  76 116   4 557 500
 502 426 114 125 495 111 420 493 448 524 507  64 202 251 247 192 531 101 506   8 504 209 268 472 528 553
 457 380 128  85 489 137 497  50 409 569 461 397 587 512 238 509  23 121  42 411 434 334  81 499 484 467
 369 432 163  84 492 298 546 540  61 629 459 376 607  67  19 525 266  71 456 452 157 454 237  35 510 496
  12 215 142 232 462 149 477 445 501 102 241 443 413 471 246 233 421 481 289 458 428 402 144 520 424 450
 367 390  56 498 220 139 423 337 229 527 410 548 198 430 358 460 286 433 373 377 384 382  48 479 225 224
 345 419 350 447 332 602 285  13 427 326 320 463 347 399 368 425 279 342 291 383   5 406 146 277 451 353
 407 469 346 391 348 274 280 311 217 441 482 292 331 265 453 304 297 271 330 200 395 429 250 341 325 352
 408 378 174 372 288 393 273 284 258 293 389 310 412 363 549 318 415 405 178 361 272 401 305 240 294 468
 398 242 317 327 366 329 385 387 307 480 354 505 328 283 205 253 351 244 336 276 374 278 522 301 338 315
 349 264 637 375 182 444 204 308 381 343 392 324 287 578 608 370 195 359 228 344 262 197 464 231 281 194
 364 260 295 314 403 417 214 319 243 184 339 323 236 598 630 208 396 600 386 193 210 306 446 439 211 267
 173 145 638 589 175 418 130 216 561 316 263 564 176 494 488 340 221 663 261 170 257 249 487 187 299 321
 218 360 309 455 322 438 219 661 357 154 183 169 159 558 556  79 223 664 591 201 616 180 601 171 127 230
 156 141 356 486 108 560 138 606 648 188 191 168 355 259 483  32 245 555 122 537 335 594 596 190 621 132
 275 107 313 404  72 674 151 668 611 162 160 185 212 503 269 333 118 521 106 186 562 597 536 625 148 303
 177 165 576 582 669 670  88 143 112  78 199  87 155 196 362 302 179 516  82  40 662 533 673 642 290 623
 676 519 584 633 570 618 150 394 442 152 134  10 203  58 103 207 123  59  95 119 631 615 515  92 485 614
 126 645 435 431 282 672 610 189 110  60   7 652  16  98  65  43 559 613  73 437 518 628 554 300 135 543
  47  86 580 605 651 538 588 158 617 104 129 476  75  94  74  77   9 270  46  38 604 545 620 523 675 572
 365  68 603 227 626 575 654  83 671  89  30  70 646 164  29  14 124 466 388  91 440 644 568  45 647 474

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00032e+07us (= 10003.2ms, 10.0032s)
Wall-clock time (full program): 1.00553e+07us (= 10055.3ms, 10.0553s)
Satisfaction error: 2
Number of search iterations: 3080
Number of local moves: 1057 (including on plateau: 403)
Number of local minimum: 247 (including on plateau: 45)
Number of resets: 2
Number of restarts: 0

Problem in row 2: 574 62 416 99 57 6 226 255 252 15 650 590 640 660 627 641 632 153 653 622 33 52 140 593 97 55 => the sum is 8800 rather than 8801
Problem in row 20: 156 141 356 486 108 560 138 606 648 188 191 168 355 259 483 32 245 555 122 537 335 594 596 190 621 132 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 376 353 113 117 528 569 347 177 653  33 105 561 295  80 313 551 660  44 579 173 324  16 142 624 639 429
 393 272  75 621 208 534 504  98 263 550 363 446 359 181 266 271 558 378 434 470  85  38  13 383 441 597
 587  96  52 503 584 567  60 645 641  76  87 184 501  83 154 626 462  14 120 531 463 395 137  15 620 598
 513 656 480 213 450  81  50 516 115 576  56  48 608  40 370 224 669 431 275 194 147 112 546 663 153 615
 297 642 102   3 568  82 162 108 594 179 428  77 629 128 338 220 583 602 200  79 572 667 237 139 646 519
 570 138 327  21 638 676 238 249 146  86 409 148 311 544 186 497 574 382 165 269 673 300 106 630 336 182
 589  49 235  30 657 245  58 658 386 101 166 223 654 252 187 586 413 634 614 116 329  78 209 188 578 566
  67 588 299 339 126 124 283 256 507  26 247 254   4 273 655 285 610 557 466 132 609 174 427 358 581 554
 490 672 267 310 344 221 205 167  54 668 333 542 195 401 332 141 357 317  97 100 379 661 307 293 475 473
 502 222 308 536 268 360 457 279 248 671  32  65 218 203 233 489  64 617 197 603 241 270 264 423 526 505
 454 390 402 189 253 618 374 261 144  37 432 286 436 342 216 644 341 274 298 234 366 214 328 392 407 469
 417 414 508 465 304 265 377  11 229 477 316 664 425 492 140 236 207 206 613 114 292 255 349 354 210 461
 303 244 452  41 635 387 372 276 190 460 495 239 388 517 309 540 405 456 315 445 411 212 246  84 211 168
 346 258 228 262 251 415 518 442 537   1 476 398 373 488 611 424 368 157 364 440 320 361 306 437   8  12
 191 334 345 302 343 593 647 514 380 426 217 321 185 250 319 601  29 243 467 444  90 122 500 375 331 232
  73  92  45 438 675  34 152 159 340 478 391 430 394 143 291 408 367 662 652 127 277 548 605 323 134 563
 464 420 403 396 125 192 433 389 322 314 545  35 573 525 399 381 506  53 400  43 193 484 524 225 242 215
 130 365 665 410 499 486 325 301 123 204 183 290 348 231 201  89 487 337 482 498 259 421 522 483 326 136
  25 485 312 533 176 133 362 453 412 523  59 439 448 511 160 356  95 580  88 543 335 404 582 287 281 219
 169 459 280 555 416 164 178 451 447 520 494 288   6 481 107 104  23  74 631 535 532 591 491 515 110 180
 145 435 493 575  69 633 527 385 510 509 352 474 260  57 305 419 150  55 175 592  27 606 350 172 479  47
 472 539 559 612  17 422  36 547 111 538 623 458  94 109 643 406 418 636  19 571   5  18 449  22   9 468
  91 562 577 284 118 529 443  42 455 318 512 590 384 521 471  31 163 156  46  99 541 595 240 553 351 129
 330  28  10 282  62  63 552 560 371 397 622 496   2 632 296  51 151 549 226 640 171 648 616 670 257 119
 158  20 637 199 355  39 585 659 599 530 230 227 650 666 625 155  71 294 600 202 564   7 170 121 289 149
 649  68 627 565 131 369 556 198  24 103 628 619  61 651 674  66  70  93 278 607 596 604 135  72 161 196

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.00557e+07us (= 10055.7ms, 10.0557s)
Satisfaction error: 2
Number of search iterations: 3113
Number of local moves: 1091 (including on plateau: 374)
Number of local minimum: 284 (including on plateau: 54)
Number of resets: 2
Number of restarts: 0

Problem in column 5: 528 208 584 450 568 638 657 126 344 268 253 304 635 251 343 675 125 499 176 416 69 17 118 62 355 131 => the sum is 8800 rather than 8801
Problem in column 12: 561 446 184 48 77 148 223 254 542 65 286 664 239 398 321 430 35 290 439 288 474 458 590 496 227 619 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  21  64 655 119  90 205 613 582 521 106 616  94 365 168  71  66 618  78  35 634 476 664 590 639  91 620
  40 654  62  52 460 135  39 653  70  83 423  86 500  87 630 167 626 622 560  43  31 675 587 672 665 179
  28 614 511  53 641 441 181 571 666  46 668 174 498 126 603 185 596  23 497  72 162 111 558 325 375  76
  32  77 624 268 617 148  42 422 607  97 433 101 105  50 604 150 663 647 593 103  96  57 629 573 396 667
  95 474  89 138  54 319  48 407 648 644 506 224 408 161  55 113 584 671 154 122 139 585 567 609 434 553
 637 360 479  58 676  75  81 659 117 125 140  37 489  99 163 151 589 508 252 235 156 217 619 562 656 661
 190 153 658 210 566 116 669 546 110 670 180 159 209 182 220  65 565 292 214 623 118 274 594 638 390 191
 238 523 107 583 264 239 226 494 247 188 591 270 526  73 294 189 480 276 557 170 241 195 588 502 491 249
 137 580 218 192 551 200 335 237 577 381 574 240 662 149 278 202 269 321 242 250 204 258 544 465 559 176
 282 481 615 178 627 201 266 183 248 212 631 255 599 304 295 253 121 223 556 244 374 260 132 415 650 196
 628 417 651 277 236 273 263 306 229 363 290 256 367 177 673 291 207 301 272 309 550 222 160 435 393 254
 357 455 171 660 234 279 338 427 293 198 430 541 344 372 447 228 388 145 373 287 206 285 215 444 330 354
 331 324 337 186 300 316 342 425 265 392 379 350 376 349 394 348 297 358 346 356 308 245 318 334 412 413
 305 312 383 340 378 284 377 449 395 437 289 257 303 315 414 211 323 347 442 307 382 320 353 327 164 387
 366  36 385 403 368 518 466 133 359 424 362 288 345 470  51 416 251 462 332 314 432 428 401 243 281 267
 352 473 459 438 419 123 311 172 286 369 310 361  44 443 418 398 439 339 402 421 405 364 458 173  69 355
 490 175 391 471 420 487 445 262 283 275  30 380  34 317 467 453 169 504 406 461 326 530 246 232  79 468
 485 155  60 463 197 545 343 477  59 448 384 351 400 525 493 336 333 486  80 456 519 516 115 120  45 410
 298 450 100 371 166 483 484 299 404 531 280 492 129 527 554 426 187 397 208 501 313 579 128 152 233 109
 488 227 503 469  33 524   1 141 221 409 142 386  41 446 451 510 457 512 454 535 529 522 114 134  88 464
 399 147 513 642 131  19 543 389 193 575  38 528 370 440 478 517  29 452 507 520  17 496  25  93 203 537
 640 230 219 635 261 581 568   9 296 561  74 633 136 645 184 652  85   3  47 495 570 499 127   4  98 549
 411 595  49 431 429 509 563 144 472 157  84 600 505 578 539 515 436  20 165 552 475 146 124  92 108 102
 621 271   2   8  26 540 533 130 104 538 143 482 158 569  13 649  15 602 514 572 611  27 225 586 328 534
 608 542 231 564 601 643 112  68 576  24 605 646 547 632   5 674  63  18  61 213 536  67  82  10 657  16
 322  12 329 592  56 598 612 216 555 548 199 610 341 597   7 636  11 194 532   6 625 259 302  22 606  14

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00551e+07us (= 10055.1ms, 10.0551s)
Satisfaction error: 2
Number of search iterations: 3058
Number of local moves: 1048 (including on plateau: 467)
Number of local minimum: 269 (including on plateau: 65)
Number of resets: 2
Number of restarts: 0

Problem in row 7: 190 153 658 210 566 116 669 546 110 670 180 159 209 182 220 65 565 292 214 623 118 274 594 638 390 191 => the sum is 8802 rather than 8801
Problem in row 11: 628 417 651 277 236 273 263 306 229 363 290 256 367 177 673 291 207 301 272 309 550 222 160 435 393 254 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  63  88  59 173  74 121 318 520 609 661 654 222 171  16 675 108 539 629 588  68 553  91 623  77 593 508
 285  28 662 152  95  92 641 575 417  69 663  47 151   5 317 572 668 655 389  23 545  25 543 570  10 602
 258  43  12 192 131 169 481 307 638 221 628  45  57 239 622 647 639 456 606 147 584 125  64 630 498 362
  70 274  80 612  32  60 528 227 616 646 182  40  83 146 460 425 613 186 516 117 566  65 640 504 604 509
  39 118  87  71 672  84 344 203 666  90 123 614 176  67 449 582 552 556 290 107 643 284  62 676 579 667
  85  52 156  72 195 193 530 610 576 225 110 445  48  49 503 601 599 644 185 233 246 656 178 600 673 337
 353 306  99 252 155 287 410 532 194 596 235 507 188 292 560 196 585 603 241 180 665 231 168  96 234 636
 431 312 106 157 149 214 651 561 347 355 273 457 260 311 546 216 209 150 586 124 250 217 158 671 469 621
 505 139 164 595 253 263 145 567 664 238 255 415 243 658 383 174 199 674 328 135 232 166 122 476 244 564
 223 104  89 537 198 266 254 540 277 386 268 626  98 271 529 197 594 361 324 308 204 480 177 283 633 574
 305 282 411 330 315 141 571 299 369 190 300 421 379 189 329 368 319 320 272 590 407 200 522 333 281 358
 485 286 322 144 143 404 303 269 403 248 313 669 265 429 518 441 148 473 256 289 218 416 438 376 229 316
 395 343 270 426 488 615 435 279 335 396 338 237 442 165 339 365 357 230 257 210 398 301 259 394 251 276
 208 399 261 384 535 356 409 349 351 489 418  46 264 340 275 321 501 288  30 375 405 408 350 385 359 295
 207 262 434 297 370 387 348 514 304 294 336 380 371 423 219 450 325 390 428 378  44 483 314 167 374 302
 134 487 360 436 366 364 367 461 181 226 397  53 536 354 466 392 401 220 500 439 327 161 424 341 332  76
 323 453 331 458 352 414 213  11 346 472 455 138 534 451  86 486 388 245 119 517 278 326 440 447 402 116
 293 309 419 462 420 393 413 467  31 206 133 373 422  42 126 345 519 267 499 474 494 372 452  37 433 400
  55 597 363 459 551 497  27   3  29 443 465 334 471 342  73 470 184 496 377 412 432 506 544 511 127  33
 627 533 563 448 382 479  66 240 249 490 427 170 591 454 191 101  54  93 437 296   1 589 477 430 202 211
 524 482 559 478 475  17 512 463  38 464 492 130 484 391  97 527 160   8 136 541 153 513 568 280 215  94
 619 491 659 142  22 515 112   7 554 526 525 502 660 637 111  13  19  34 547 446 493 381 521  24 183  58
 538 573 495   6 598 632  36 154 175 542 550 611 531 608 163 228  26 523 583 581 102   4  82 242  81 137
 555 657 548 653 558 562 103 224 179 105 132 565 129 625 444 406   2  78  21 580 468 635 100  15 298 159
 634 605 642 247 620 645 510 291 212 172   9 162 670 648 115  56  61 109 236 607  79 549 557  35 310  20
 587 578 650 618 652 631  75 128  41  51 120 592 577 649 205 114 140 113  50 624  14 617  18 201 187 569

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00541e+07us (= 10054.1ms, 10.0541s)
Satisfaction error: 2
Number of search iterations: 4249
Number of local moves: 1201 (including on plateau: 620)
Number of local minimum: 368 (including on plateau: 69)
Number of resets: 2
Number of restarts: 0

Problem in column 7: 318 641 481 528 344 530 410 651 145 254 571 303 435 409 348 367 213 413 27 66 512 112 36 103 510 75 => the sum is 8802 rather than 8801
Problem in column 26: 508 602 362 509 667 337 636 621 564 574 358 316 276 295 302 76 116 400 33 211 94 58 137 159 20 569 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 673 404 446 463  20 672 355  70 631  51 144  32  45 561 152 160  49 676 638 655 585 227 531  57 109 395
  89 469 671 118 623  47 439  74 101 661 453 236  60 110 657  88 542 394 429  64  97 649 541 600 424 165
 592 651 408  85 550  41  72 163  40 436 218 367 138 606 545 581 518 252 135 111 267 530 234 499 619 143
 196 633 482 624 602  34  68 142 153 618 120 659  65 537 665  43 133  63 636 116  38 666 669  33 563 243
  35 458 647 161  18 108 136 569 372 383 641 123 194 326 104 190 675 131 514 557 390 674 640 130 414 211
 175   1 576 601 642 648 199 158 155  75 529 654 105 628 558 230 406 225 173 349 182 166 282 139 421 524
 191 508  67 132 645 630 360 235 470 172 596 202 115  93 571  50 658 216 183 567 233 176 578 609 148 396
  73 169 646 348 162 249 251 616  79 471 667 594 189 247 644 226 566 245 389 231 253 171 238 195 214 668
 193 180 487 483 391 185 314 200 451 461 559 256 413 298 501 241 554 468 257 284 114 208 275 324  52 652
 517 466 589 351 279 617 273 321 149 597 224 586 248 269 212 354 265 232 229 304 266 206 223 147 341 536
 203 528 352 209 332 308 213 262 634 627 533 228 286 338 168 281 270 140 484 476 254 113 454 255 632 221
 258 532 660 222 312  17 151 335 574 328 346 274 309 358 498 337   6 420 381 369 240 319 377 452 410 316
 174 313 615 340 272 278 325 423 305 310 371 288 435 287  76 401 330 297 277 434 359 299 375 220 580 417
 361 331 271 317 357 409 107 296 374   3 301 380 493 393 670 370 443 339 141 215 472 290 385 347 416 320
 551 303 382 350 398 378 323 307 412 511 293   7  81 322 300 276 237 291 294 432 444 415 418 397 364 315
 157 460 197 302 384 437 546 485 126 188 327 480 400  46 295   9 428 620 134 353 306 520 526  94 507 474
 207  23 285 430 612 503 365  36 494   2 368 112 356 402 488 449 336 426 345 492 128 366 399 219 442 516
 376 137 184 598 156 448 539 459 181 388 510  98 583 425  44 523 102 170 119 205 407 477 491 362 386 433
 411  83 244 150 489 280 548 311 450 129 187 462 555 525 263 465 117 549 445 164 217 521 159 527  95 455
 500 268 125 438 475 512 167 422 457 473 103 427 387 342 653 486  30  14 577 246 343 419  86 504  55 292
 575  80  92 145 440 441 405 560 373  69  10 564 579  77 177 505 447 513 509 556 261 582  82 478 260  21
 289 329  31 543 186 344 363 572 570 639 318 502 540  61 264 626 179  48  39 538 464  16  42 496 552 250
 127 490  24  37  58 535 515 467 534 481 100 242 595 522 121 608 613 198 124  91 565 593  28 625  13 495
 573 519  29 590  12  11 562 497 204 607 259 553 605  15   5 664  27 614  84 431 603  26 544 479 192  96
 662 379 201 610  53 547 637 611 178  62  25  19 622 392  99  54 283 604 629 506 650  66  78 591   4 239
 643  87  90 154 333 122 568 210 334  59 599 456 403 621  71 584 587 656 635  56 663 106 146  22 588   8

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00552e+07us (= 10055.2ms, 10.0552s)
Satisfaction error: 2
Number of search iterations: 3576
Number of local moves: 1058 (including on plateau: 420)
Number of local minimum: 301 (including on plateau: 57)
Number of resets: 2
Number of restarts: 0

Problem in column 19: 638 429 135 636 514 173 183 389 257 229 484 381 277 141 294 134 345 119 445 577 509 39 124 84 629 635 => the sum is 8800 rather than 8801
Problem in column 20: 655 64 111 116 557 349 567 231 284 304 476 369 434 215 432 353 492 205 164 246 556 538 91 431 506 56 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 245 103 525 653  99  95 281 658 523 213 537  40 497 410 522 328 649  72 178 401 177 136 643  38 629 149
 627  20 553 626  70 548  56 672 435  93 108  53 417 511 630  66  64 146 403 542 140 118 670 125 524 584
 248 598 597 294 167 183  81 538 123 431 128 157 151 212 583 106 509 567 514 599 216 455 155 512 636  41
 470 224 586 531  45 535 113 592  71 308 465 205 613 148 279 115 159 101 662 666 153 111 540  52 575 482
 208 163 593 300 508 604 440 664 105 648 564 164 510  75 582 558 199  43 204 551   8 452  98 250 242  68
 142 169 628 574 138 652  85 502 180 437 580  91 220 165 616 210  96 110 559 554 375 121 173 198 635 591
 674  51 657 302 402 261 675 492  79 483 209 285 638 570 186 117 189  92 257 484 590 305 131 233 206 232
 235 237 176 200 207 145  27 384 605 600 336 301 222 625 566  73  97 458 668 601 307 608 139  61 264 659
 127 576 278 226 315  80 246 258 505 650 594 181 656  86 602 130 172 665  50 442 107 671 171 286 450 277
 362 351 490 228 316 225 463 396 267 479 348 457 634 293 585 327 349 214 488 454 223  10 188 150 388 116
 438 236 366 120 374 265 291 185 340 595 303 408 367 313 663 394 272 268 317 443 460 253 276 217 319 318
 667 234  44 312 373 255 324 661 369 441 152 323 141 288 562 298 244 287 669 361 295 411 322 218 280 270
 418 314 284 385 383 378 126 563 407 474 350 325 227  15 297 390 355 618 424 283  67 299 247 581 132 459
 251 335 231 406 462 219 398 203 339 331 359 254 380 342 333 633 337 341 400 230 606 252 344 397 306 112
 154 352 310 332 386 273 269 241 347 416 660 530 409 338 102 239 259 134 311 395 266 330 445 430 494 379
 467 433 170 393 387 372 260 196 640  36 158 334 501 654  18  82 429 122 275 184 495 480 453 382 504 377
 428 100 371 289 309 404 412  87 569  39 533 274 321 676 360 489  90 464 143 343 644 420 481 353  23 179
  89 487 144  31 499 434 588 399   9 320 414 515 446 637  83 565 528 471 187  47 376 389 469 356 263  55
 357 421 238 364  65 425 447 174  29 485 476 503 135 423  49 449 529 391 175 190   5 427 498 607 526 413
 415 496 197 491 546 477 329   6 358  78  14 215 466 119  22 109 507 571  42 436 549 426 615 292 478 547
  60 518 448 368 326 365 486 545 544 162   2 624 161 256 271 614 240 632  58  25  74 422 557 603  21 419
 521 561 147 456  28   4 617  69 517 192  54  30 168 543 451 568 262 621 304  94 578 519  13 468 516 500
  26 520 160 363 475 642 536 156 550 296 282 641 249 166   7 532 506 539   1 392 534  88 439 556  16 129
 472 631 370  33 655 345 473  59 137 194 541 673 124 104 195 577 646 620 555  57 444  32  48 182  12 622
 623 290  37 513 647 596 346  17 193  46  62 579 114 243  35 221 527  63 552   3 461 573 610 609 229 612
  77 381 201  11 619  19 432  84 560 354 572 639  34 589 202 611 587 191 405  24 651 493  76 645 133 211

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00554e+07us (= 10055.4ms, 10.0554s)
Satisfaction error: 2
Number of search iterations: 3288
Number of local moves: 1097 (including on plateau: 415)
Number of local minimum: 283 (including on plateau: 57)
Number of resets: 2
Number of restarts: 0

Problem in row 7: 674 51 657 302 402 261 675 492 79 483 209 285 638 570 186 117 189 92 257 484 590 305 131 233 206 232 => the sum is 8800 rather than 8801
Problem in row 16: 467 433 170 393 387 372 260 196 640 36 158 334 501 654 18 82 429 122 275 184 495 480 453 382 504 377 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 676 662 482 601 593  42 335 188 557  72 459  28 667  99 551 119  76 628 225  53  73 230 190 530 238 427
 112 669 665 397  25  44 139 615 491  83 410  36 651 154 623 121 245 126 558  77 512 616  92 632 660  48
 658 171 672 654 586  40 479 120 624  66 507  98 157  81 566 106  59 643 401 559 138 539 110 458 130 179
 472 133 136 405 191  52 193 153 587 172 595 125 584 534 605 288 234 642 227  87 143 631 674 609 113 217
 573 167 655 657  67 652 145  58 465 235 532 140 151 123 298  18 599 117  91  90 306 466 633 500 484 579
 181 152 282 591 240 646 146 270 653 649 576 101 175 111 598 277 115  39 108 105 618 462 577 420 545 164
 406  65  93 635 626 124 668 156 541 142 533 378 158 226 218 192 100 134 168 671 198 639  68 460 594 608
 279 248 258 592 622 213 229 485 220 223 162 148 285 528 334 281 287 132 673 256 104 536 661 477 170 398
 324 216 187 510 588 224 160 323 572 257 524 147 197 487 232 233 228 656 664 201 215 520 242 495 194 205
 159 131 280 537  62 182 261 209 450 670 562 221 569 375 299 278 663 237 353 249 452 264 320 426 183 409
 212 186 309 580 289 449 293 314 389 330 492 302 208 174 319 438 236 436 290 666 185 428 255 434 333 254
 369 189 390 415 597 214 394  82 352 247 414 675 219 199 135 317 503 308 269 273 360 606 265 440 266 303
 367 370 284 638 508 274 294 413 422  95 259 359 184 429 315 260 504 326 354 283 310 307 250 435 196 365
 376 384 244 231 286 356 276 202 166 366 312 550 372 349 386 338 329 253 363 374 552 451 388 291 295 311
 342 316 321  21 432 517  26 400 509 339 340 403 399 332  23  19 453 347 511 275 408 296 494 313 535 430
 568 318 393 137 346 357 556 377 118 300 416 345 358 102 439  22 383 343 488 305 268 200 385 331 522 424
 348 444 417 262 368 419  29 271 468  64 180 328 496 538 391 402 350 423 407 404 344 364 381 246 441  16
 412 456 327 241 361 519 546 433  17 292 141 355 336  47 554 493 341 129 475 442 469  51 518 252 431 163
 501 418 525  63 251 421 463  88  50 474   4 531 516 498 620 446 382 490 155 448 267  24 373  85 297 411
 351 497 596 122  96 464  94 602 150 553  70 514 447 116  78 425 457 454 483   8 476 210 521 211 567 239
 178 523 565 103 203  89 461 570 114 470 304 325 515 396 272 600 480  20  31 502   9 204 486 207 544 630
  57 506  27 243   5 177 322 650 144 455 445 489 467 578 555 607  12  30 589 547 478 395  14  80 379 549
 571 371 473   1 481 582 611 604 437 581 263 392 564 561  56 641  34 529  79   7 499  84  13  71 169 127
  55 590  60   6 387 603 443  61  75 543 161 644  69 585  97 619 575 526  45 640 612  35  41 380 301 648
  32   2  74  10  43 636 613 583 176 560 107 540  46 542 128 647 629 471 621 634 610  37 337  15  49 659
 222 617  86 149 548 505 625 574  54 563  33 627  11 637 109 614 527 362 173 645 195 206 513   3 165  38

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00541e+07us (= 10054.1ms, 10.0541s)
Satisfaction error: 2
Number of search iterations: 2984
Number of local moves: 1028 (including on plateau: 488)
Number of local minimum: 260 (including on plateau: 56)
Number of resets: 1
Number of restarts: 0

Problem in row 4: 472 133 136 405 191 52 193 153 587 172 595 125 584 534 605 288 234 642 227 87 143 631 674 609 113 217 => the sum is 8802 rather than 8801
Problem in row 22: 57 506 27 243 5 177 322 650 144 455 445 489 467 578 555 607 12 30 589 547 478 395 14 80 379 549 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 646 309 267 612 148 572 270 527 157 136 153  86 657 186 173 534 649  70 316 583 164 269  71 318 667 261
 558  31 235 601 176 106 538 586 197 329  26  69 315 395  62 593 368 178 618 619 314  22 545 289 462 569
 580 221   8 600  19  14 581 607 519  57  84   1 630 610 131 108 573 159 587 622 205   2 167 493 609 614
 641 334 125  25 191 151 490 638 248 147  13  52 599 594 257   6 516 195 511 589 123 546 187 559 525 539
 597 122 487 495 281 443 526 536 551  15 514   9 637 484 172 426 366  78 276 636 115 133 162 249 111 380
 434 466 132 571 199 528  76 483 320 156 602 513 562 499  77 482 531 170 520 104   4 237  53 144 488 450
 282 501 154 554 256 433  11  72 561 356 486 481 419 542 449 523 415   5 505  10 509 265 169 220 134 489
 565 480  82 414  66 548 452  17 496 262 418 244 475 529 543 105 445 440  20 485 504  99 209 247 429 227
 350 129 408 121  75 385 431 508  42 185 420 407 668 223 306 510 570 110 459 497 102 179 627 427 240 422
 193  41 285 438 307 393 460 341 396 274 439 458  85 469 364 553 582 174 404 351 442 150  21 236 290 655
 446 141 464 353 165 430 410 343 372  63 456 375 436 392 435 232 405 532  16 381 383 158 465 273 231 444
 397 259 358 324 212 388 360 255 322 633 379 400 201 402 277 168 401 387 304 293 398 332 354  88 441 468
 411 299 369 365 579 391 319 447 337 126 382 302 367   7 428  38 374 413 384 317 225 313 333 288 342 645
 305 386 326 363 323 362 394 376   3 390 308 423 321 230 327 653 530 135 455 541 373 300 357 301 216 103
 338 241 598 245 590 311 451 266 190  43 330 620 340 200 424  97 238 291 517 297 239 432 264 258 634 347
 652 295 344 210 370  90 146 272 284 626  68 476 183 674 349 555 160 298  51 564 605 416 130 533 138 312
 137 463 283 279 437 213  29 211 628 621 560 339 243 658 181 145 310 399 166 242 229 616 502 296 550  64
 346 278  67 202 203 268 275 198 665 378 252 182 234 640 253 352 175 515 623  94 556 271 192 659 568 355
  48 656 577 149 567 294 254 644 152 592 214 112  61 194  98 250 171 189 670 100 613 454 448 494 578 222
 206 219 246 521 472 208 635 207  89 604 260 204 196 184 218 224  12 557 127 661 155 631 642 632 474 217
  91 549 522 263 518 188 228 114 345 425 328 524 287 128 500 537  65 608 118  24 663 491 498 507  54 226
  28 643 506 215 406 624 107 177 101 471  35 650 574 120 552 512  83 611 119 651 124 584 251 453 109  95
  40 563 292 403 603 336 591 280 348 163  73 540 161 116 576  45 113 666 461  50 492 142 647 615 389  96
  81 673 672  32 478 377  79  55 335 617 662 606  80  74 595 639 143 473 117  33 412 648 660  46  34 180
  58 409 325  87 535 417 596  56 676 503 664 588  23  18 479 470  59 477 421  30 566 654 544  37  49  60
 371  93 669 359 625 331  92 585 467 629 675 140  47 233 575  44 547 671  36  27 286 457 303 139  39 361

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.17592e+06us (= 6175.92ms, 6.17592s)
Wall-clock time (full program): 6.21855e+06us (= 6218.55ms, 6.21855s)
Satisfaction error: 0
Number of search iterations: 1875
Number of local moves: 761 (including on plateau: 295)
Number of local minimum: 143 (including on plateau: 37)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 387 600 658 201 671 571 422  64  68 151  36  44  18 147 471 178  95 622 542 663 135 636 148 590  76 607
 563 643 403  37 453 421 673 125  35 114 139 505 676 117  14 580  79  99 546 532  84  59  22 639 675 568
 618  20 624 547 645 463 611  19 119 516   6  10  89 157  56 621  49 525 521 634 381 175 183 526 141 545
 668 129 507 342 672 511 478 116 171 475  97  78 361  29 627 577 318  92 585  45  96  47 674 592  54 460
 245 444 515 124 670 610 605  11  15 190  25 138 112  41  57 651 161 524 637 664 249 653 173 647 143 497
 242 172 564 169 633 660 206 162 170 448 248 194 254 144 394 593 177 268 613 669 616   7 247 228 211 512
 493 280 635 165 558 442 638 543 238 287 269 213 217 127 480 244 266 164 596 398 419 168 187 223  55 496
 231 200 608 230 215 642 163 239 235 667 346  16 250 290 368 632 289 352 344 359 527 176 126 544  91 661
 587 185 556 304 292 503 107 174 181 598 278 297 189 246 595 227 113 625 599 203 520 202 142 467  75 536
 296 252 429  82 513 540 396 210 198 285 357 261 437 283 340 281 413 307 654 152 243 295 462 279 354 482
 665 275 335 298 316 154 218 574 434 343 251 313 328 263 300 219 265 140 504 362 438 322 345 286 417 436
 399 166 450 339 445 259 464 466 212 267 402 256 232 350 326 579 380 180 390 363 309 377 236 385 209 360
 317 274 184 293 240 609 407 666 237 412 199 329 395  67 378 426 276 312 495 364 229 310 376 294 365 347
 149 374 425 221 222 195 375 308 315 414 273 324 241 311 260 490 470 473 291 337 348 449 373 392 416 355
 393 191 208 481 277 439 366 418 451 397 420 306 205 284 271 288 305 389  85 411 501 409 519 282 323 182
 351 455 225 443 226  83 502 400 487 428 367 458 333 559  48 554 401 334 216 120 188 456 457 118 446 146
 459 332  60 561 433   2 454 262 477 264 105 410 555 388 369 122 272 382  28 584 488 461 441 379 320 193
 447 535 405  24 137 650 372 415 302 319 431 427 358 498 370 383 506 214 150  94 386 207 341 167 430 233
 132 494 104 606 500  46 486 257 465  62 531 349 371 649 314  86 258 578 220  66  77 557 528 485 472 108
 321 518  21 508 133  13  63 597 432 517 553 424 565 408 253  61 452 566 179  23 435 440 570 131 384 234
 353 391  71 523 115 136 404 548 646  38 541 331  51 537   8 186 469 567 156 489  73 468 476 533 604  87
  34 492 130 603 153 338  33 588 619 204 629 641 659 614 145 423 491 406  43  74 303  72 514  26 479  88
 100 106 270   3  40  98  39 330 620 134 484 644 581 586 602  32 539 299 192 601 583 102 591 530 499 196
  58 626 325 576   5 255 103 336 510 572 652 628 594 562 560 101 551  65  52  30 549 474  31   1 573  12
  69  17  80 552 109 111 123 617 509 110 522 623 575 529 538  70 550 160 121 483 534 648 612  53 327 159
 224 630   9 569 128  50  93 356 655 589 640 582 155 615 657 197 656 158  42  81  90 631  27   4 662 301

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.33504e+06us (= 5335.04ms, 5.33504s)
Wall-clock time (full program): 5.38749e+06us (= 5387.49ms, 5.38749s)
Satisfaction error: 0
Number of search iterations: 1359
Number of local moves: 502 (including on plateau: 151)
Number of local minimum: 96 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 556 210 201 654 651 614  68  43 276  21   7   6 625 645 555 587 616  31  59   1 594 347  96 637 648  53
   9 514 618 551 610 653 534  40  29  17   8  54 557 605 246 632 253 599  70  24  30 306 177 560 584 521
 311  36  10 646 633 595 288  25  44 214 578  84 540  45 561 638 281 564  91  61 548  27 541 446 520 474
 300 221   2  87 593 475  37 100 118  48 579 228 613 589 559 628 585   4 342 194 519 122 282 417 591 568
 231 154 542 562 191 647 533  14  18 169 506 186 518 563 424 611 466 615 108  55  94 161  89 165 652 527
  85  47  49 582 509 493 139 184  51 190 554 245 537 168 588 640 496 425 420 206  11 115 512 384 598 573
  86  82 515  95 526 547 199 445 544 360 472 225 213 181  13 550 608 434 262 392 412  75  38 524 513 490
 558 178 406 505 473 565 224 438 271  32 397  97 411 449 503 460 442 469  64   5 107  57 114 552 478 546
 208 170 480  93 500 485 104 462 525 296 409  34 440 117 492 365 516  56 290 157 477  33 486 601 488 517
  50 116 461 491 444 179 316 465 435 132 532 155 489 217 484 447  39 572 223 287 448  69 483 494 371 402
 426 498 398  88 423 357 303 370 441 380 454 275 386 418 363 183 364 350   3 198 293 401 368 279 405 377
 270 416 459 451 280 432 244 470 251 285 248 257 463 429 291 413  15 393 408  22 439 373 479 264 366 383
 274 358 315 415 324 378 427 374 321 312 218 403 359 338 390 283 314 254 382 343 344 322 353 215 436 349
 277 331 268 242 263 356 395 381 389 394 240 319 345 452 302 284 376 391 414 388 387 337 229 385 305 351
 375 230 125 299 269 339 456 273 318 372 310 421 267 320 428 367 256 325 396 672 329 404 336 313 294 307
 327 332 278 437 249 235 407 219 308 272 212 617 289 655 243 326 362 348 265 430 352 522 252 236 298 330
 530 260 109 209 192 297 574 193 250 600 361 335 323  99 624  63 620 207 566 658 239 630 237 162 159 304
 634 571 328 196 255 187 597 266 399 333 234 501 355 464  77 226 354 643 286 400 167 450 205 334 173 166
 523 670 188 147 259 195 507 676 258 340 163 543 131 567 241 112 156 145 140 471 369 662 671 174 261 232
 545 495 606 182 227 153 668 176 663 586  52 553 151 531 171 317 138 126 431 609 152 667 202 129 204  67
 603 172 602 141 189 341 481 180  98 639 135 476 203 164 175 211 127  76 569 590 660 379 233 549 143 665
 148 619 292 160 453  42 301 666 631 346 197 443  78 528 570 124 499  90 538 455 410 295 458  73 185 200
 596 529 150 309 119  71 536 577 247 664 644 576 220 110 149 101 238 457 504 649 580 468 158  12  65  72
 128 581 669 510  60 123 130 621 636 641 583 467 146  35 136 113  92 539 622 508 121 433 626 133  28 120
 535 592 627 612  26  23 222 656 657 497 650 659  80  46 142  79 106  81 673 422 144 511 502 134  20 105
 216 419 103 137  83  19 111 487 623 661  58 642  62  66  74  41 482 607 675 604 575 635 674 629  16 102

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.11486e+06us (= 5114.86ms, 5.11486s)
Wall-clock time (full program): 5.16757e+06us (= 5167.57ms, 5.16757s)
Satisfaction error: 0
Number of search iterations: 1261
Number of local moves: 562 (including on plateau: 186)
Number of local minimum: 80 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  12 135 164 231 557  25 224  47 611 545 573 317 583 631  11 125 648 598 249 612 177 562 118 352 484 210
 549   7 580  65 556  23  58  52 554 637   8 605  82 636 532  62 528 578 113 569 524  84  73  86 626 614
 571  83 351   4 507  21  59 238 630 225  16 526 621 559   5 148 619 516 606 629 584 645   6  14 117 501
  20 207 509 285 581 388 341  18 640  95 245  56 513 558  68 144 543 575 539 500   2 436 199 259 538 542
 429  97 552 540 312  81 296 116 602 130  53 384 514 512 467  46 613 593  93 519  92 517  94 145 438 566
 423 187 544  91 553   3 407 531 497 133 140 180 568 617 567  27 547 601 149 489 103 511 172  69 198 493
  79 126 404 564 458 195  13  50 563  36 520 127 361 537 485  51 191 505 477 494 409 411 475 242 412 616
 368 478 597 521 499  67 111 402 491 106  40  98 490 434 382 171 442 459  72 591 495 426  33 104 443 481
 119 461 420 533 446 214 265 105 454 448  89 185 408 462 389 194 346 406 482 535 375 465 416 146  43 395
 157 480 364 414 284 424  85 380 594 121 383 151 300 457 350 403 441 390 452 330 451 529   9 309 115 428
  38 255 272 345 472 120 139 385 453 298 486 152 476 333 425 474 422 417 440 427 356 487 492 222  37 378
  31 211 518 439 358 297 449 366 430 336 464 349 329 504 386 347 362 405 392 248   1 334 277 310 337 321
 548 344 306 280 316 369 226 228 421 387 323 302 253 319 444 305 450 332 473 186 315 335 400 281 303 355
 527 343 374 324 353 221 318 290 372 396 359 435 399 283 239 295 370 307 365 183 401 357 271 304 348 367
 293 313 282 218 410 498 659 627 266 202 173 128 247 257 638 331 325 241 314 339 273 371 460 455 220 261
 223 415 204 299 252 643 668 168 181 287 269 274 644 256 301 322 178 360 279 311 268 456 320 394 541 289
 608 432 227 237 234 546 391 338 141 270 147 634 250 254 160 555 278 292 599 150 649 264 340 488 229  88
 625 236 166 381 622 588 377 260 240 577 156 510 192 328 288 342 574 354 174 217 263 267 244 437 175 208
 576 212 657 525  35 673 508 579  96 235 413 570 654 206 182 326 137 246 275 153 262 162 216 469 276 158
 190 496 213 233 155 471 286 615  80 582 503 431 109 167 560 623 169 107 159 658 209 132 589 466 379 219
 550 663 136 647 184 376 671 595 131 291 666  63 188 197 243 586  75 142 134 258 600  49 639 447 200  70
 294 642  99 641  60 196 468 154 203 603 215 590 143 193 179 609 112 123 418 230 251 665 572 419 561 161
 502 662 101  77 110 676 397 363  32 205 672 534 114  28 656 624 201  61  87  17 650 176 515 620 655  66
 463 163 635 189  44 675 232 610  71 565 596 470 165  19  64 633  54  42 669  15 170  41 660 530 373 653
  55 670  78  57 433 618 674 652  26 506 664 138  90  24 651 522  76 122 667 102 398  45 604 587 308  34
 551 483  48 661  10 393 479 632  22 585 628 592 108  30 129 536 100  29 124  39 523  74 607 646 445 327

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00534e+07us (= 10053.4ms, 10.0534s)
Satisfaction error: 2
Number of search iterations: 3168
Number of local moves: 1136 (including on plateau: 617)
Number of local minimum: 275 (including on plateau: 72)
Number of resets: 1
Number of restarts: 0

Problem in row 6: 423 187 544 91 553 3 407 531 497 133 140 180 568 617 567 27 547 601 149 489 103 511 172 69 198 493 => the sum is 8800 rather than 8801
Problem in row 16: 223 415 204 299 252 643 668 168 181 287 269 274 644 256 301 322 178 360 279 311 268 456 320 394 541 289 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 381 611  45 593  94  85  12 545 532 192   8  32 618 628 627  33 559  87 555 566 646  67 373 157 561 194
  71  31  98 118 602 313 113   1 637 354 619 186 624 558 582 522  30 508 216 518 604  39 440 359 117 541
 543 636 504 640 537 299  19  93  15  20  22 388 595  52  42 623 574 413   2 609 605 159  82 162 515 652
 452 643  72   5 531 497  77  91  26 437 562 308 589 511 178  34  88 119 230 630 408 152 591 588 645 337
 613 616 198 626 664 196 108  40 519  24 493 158 348 569  41 126 600  25 478 607 535 617 204   4 217 175
 506 641 584 551 481  44 128  11  54  50   3 491 463 612 304  13 647  53 240 500 578 633 207  86 661 260
 475 503 116 568 525 292 275  57 358 447 353  36 520 608 594  38 173 389 554  46 434 539  29 138 473 261
 360 409 509 550 399 139 239 432 560 444 318 321 422 394 369 320 356 170  17 547 498 523 144  18 231 112
 384 400 429 486 416 199 238 448  83  78 487 530 439 517  35 184 449  16 417 428 495 401 326 526 370  21
 450 536 330 424 349 109 247 512 371  60 528 137 459 454 477 164 104 403 456 427 406 383  14 490 502   9
 467 433 411 451 382  74 150 480 516 254 274 483 435 436 200 352 351 431 445 395 197 390  61 208 402 123
 404 412 386   7 474 441 234 443  10 419 374 372 266 458 438 375 344 420 460 396 314 249  84 376 494 151
 280 322 357 256 361 293 350 228 470 410 307 315 426 407 341 343 269 346 329 347 265 301 317 461 334 366
 212 237 311 423 215 296 418 287 380 291 405 294 603 355 268 270 312 455 430 233 336 298 501 226 193 552
 222 331 243 385 273 340 421 211 281 285 106 213 327 345 393 476 332 271 342 191 368 415 597 546 310 577
 179 365 262 565 323 466 398 534 364 610 335 387 305 276 457 302 414 206 250 253 251 244 235 257 201 362
 319 163 156 167 277 615 479 333 284 544 227 248 169 339 232 465 306 563 572 295 258 180 540 282 202 586
 378 168 210 279 218 651 496 246 272 587 245 309  80 114 297 190 367 510 316 606 214 635 462 219 153 579
 141 131 259 177 290 529 553 195 425 283 255 241 155 229 657 205 391 575 665 166 581 397 392 663 100 146
 236 171 185 223 161 662 667 524 464 165 147 638 121 242 224 542 666 620  96  89 183 338 499 181 288 469
 148 325 654 203 132 127 505 658 149 590  99 379 286 160 634 642 188 140 580 115 300 134 649 489 263 252
 176  55 601 129 631 492 507 596 142 598 625 303  73 136  65 130 264 573 482  97   6 671 363 377 225 484
  64 267 135 324 189 567 648 599 639 521 629 514  43 145 655 570 143 576  27  23 105 669 328 220 154  47
  62  79 488  70 120 556 571 527 548 102 583 676 103  69 182 549 557 133  56  59  75 187 653 650 674 471
 622 107 644 513  81 453 670 172 110 472 125 174 111  92 446 660 289 124 485 621  90  58 659 533  48 442
 656 209 614  68  76  66 278 538 592 564 672 668 221  95  63 673  28 675 101  37  49 122  51 585 468 632

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00532e+07us (= 10053.2ms, 10.0532s)
Satisfaction error: 3
Number of search iterations: 3070
Number of local moves: 846 (including on plateau: 306)
Number of local minimum: 297 (including on plateau: 38)
Number of resets: 2
Number of restarts: 0

Problem in row 9: 384 400 429 486 416 199 238 448 83 78 487 530 439 517 35 184 449 16 417 428 495 401 326 526 370 21 => the sum is 8802 rather than 8801
Problem in row 24: 62 79 488 70 120 556 571 527 548 102 583 676 103 69 182 549 557 133 56 59 75 187 653 650 674 471 => the sum is 8800 rather than 8801
Problem in diagonal 0: 381 31 504 5 664 44 275 432 83 60 274 372 426 355 393 302 306 510 665 89 300 671 328 650 48 632 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 507 214 190 620 270 282 579 654 662 158  56 612 322  40  95 219 570 261 140 653 117 443 327 553 120 137
 449 315 121 252 658 665 577  32 136 411  49 465 669 112  16  94 524 671 135 640  67 534   5 508 529 167
 615 392 487 303 466 666 458 605 578  99  86 441 676  41 237  12 159 459  92 652 171 110 125 610 119 142
 618  78 595 673 253 601 513 330 208 564  18 177  55  23 186 122 207 546  43 651  81 664 216 541 205 633
 408  53 472 614 424 670 440 661 641 672 139 457  26 178  97 105  48  98 371 589 474 254 464 147 127 172
 533 318 189 453  68 398 567 663 627 397 141 624 209 222 232 187 504 109 188 363 655 539 157 223 165  70
 557 368 111 421 204 278 518 471 535  82 104 337 409 130 556 460 391 242 306 545 221 613 593 155  21 173
 227  65 108 218 183 451 635 494 406 447  24 581 146 296 582 220 389 668 642 283   6 538 649 148 294 101
 193 531 200 258 497 427 498  33 543 571 463 170 255 516 210 224 484 263  71 370 160 272 138 225 657 572
  66 473 527 390 355 264 393 621  79 622 512 353  60 175 401 320   8 243 656 492 285 268 176 240 548 274
 480 483 233 491 129 552 637 468 352 550 580 591 348 152 154 305 299 153 279 490 244 118  47 116 249 301
 399 329 316 374 317 347 361 250 239  72 325 248 290 235 291 444 332 115 609 503 675 335 350 251 499 295
  93 280 372 469 407 328 262 312 418 432 212 275 385 338 102 215 410 334 308 395 554 323 638 394 289 256
 106 247 379 286 559 357 314 366 413 349 382 378 260 346 257 364 307 383  75 362 416 583 331 342 124 515
 284 313 359 281 309 373 271 150 502 417 439 181 345 321 343 369 201 380 445 230 339 647 420 213 477 192
 197 194 302 231 381 482 599 182 367  64 455 476 344 360 434   3 375 520 537 168 179 437 356 358 446 354
 428 351 475 196 419 277 134 144 435 384 412 365 607 164 107 276  89 377 597 191 462 488 288 403 336 396
 456  73 400 226 587 184  11 324 198 300 584 525 436 461 604 479  59  22 592 185 505 174  80 304 481 551
 454 149 245 388 500  38   7 544  51 267 625 486 311 563 510 287  42 234 376 340 433 298 496 575  14 568
  91 489 292 199 438  46  61 131 588  31 602 145 509 519 404 562  90 517 532   9 501 297 549 636 526  37
 523 273 442 596  69  74  96 333 151 114 414  29 608 448 606 585 660 511 616  19  13  34 228 646 326 387
  27 558 415 269  50 161 667  76  28 450 246  45 565 632 103 547 470 238 211 143 402 310 555 536 645 452
 495 561 560 485 590 430  62  87  52 166 162 133  58 628 493 506 467 100 113 425 431 195 341 241 478 542
 266 405 540  57 528  25  17 623 429 229 514 265 217 648 629 619 574 522  54  44 630 169  30  10  83 674
 203 650 386  15  77 132   1 163 128 530 631 236 603 659 586 634 573 576 202  39 180   2 644   4 426 521
 126 639  85  36  63 293 123  84  35 423 626 206  88 594 566 643 569 259 611  20 600 156 598 422 617 319

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.61201e+06us (= 7612.01ms, 7.61201s)
Wall-clock time (full program): 7.6646e+06us (= 7664.6ms, 7.6646s)
Satisfaction error: 0
Number of search iterations: 2458
Number of local moves: 892 (including on plateau: 385)
Number of local minimum: 210 (including on plateau: 42)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 568 561 499  74 401 544 180 255  86 641 648 316  61 590 264  66 659 226 305 195  81 505 427 540  14  95
 595 577 647 585 661  18 224   1 106 146 545 342  65 600 638   9 288 193 228 605 270  38 483  88 356 493
 649 652 157 147 510 281  28  87  71 654 582 163  76  12 188 223 587 120 564 634  72 541 569 603 573  58
 651 597 581  57 604 174 271 416 325 300 560  33  34 350 456  52 528 123 639  94  80 369 578 199 576 154
 502  46 466 114 667 172 285 364  69 343 571 332 217 105 137 309 552 460 559 503 112 119 433 644 513 207
 525 549 526   3 476   4 243 148 449  96 374 475 141 614 290  51 488 189 563 608 177 672 190 311 546  93
 624 467 447 121 237 482 213 521  26 496 465 668 269  73 212  83 511 127 422  29 196 400 599 543 472  98
 538 459 474 130 523  84 286  85 260  54 469  10 132 497   6 537 515 468 452 484 567 517 547  19 197 491
 508 417 161 382 408 392 249 435 455  78 533  32 463 509  79 293 310  89 399 431 208 420 534 167 438 411
 501 246 409 201 376 413 274  47 454  30 436 381 451 406 334 338  64  27 504 629 113 377 373 594 421 402
  25 372 396 315 457 480  39 593 464 340 404 275 415 348 254 192 461 450 336 320 232 410 353  40 437 393
 366 439 367 445 134  20 339 145 370 251 314 371 361 434 485 360 365 319 267 333 294 326 312 351 592 441
 229 448  17 390 500 295 616 352 385 425  97 265 234 557 391 108 375 395 403 341 429 407  99 388 301 354
 384 357 216 308 345 355 397 389 335  59 306   2 551 386 623 368 643 302 519 322 298 258 344   7 329 398
 273 318 158 566 268 473 428 282 262 284 142   5 330 362 453 379 272 287  91 591 424 612 183 554 487 317
 198 256 418 279 363 601 498 586 304 570 462 583 331 323  31 276 164 244 220 210 430  70 514 542 153 175
 238 151 221 261 292 194 553 620 283 645 215 252 152 139 530 321 327 250 209 602 669 259 556 432 245 185
 263 247 203 266 240 637 187 138 506 670 358 655 168 248 548 636 479 579 230 236 126 176 307 346 182 170
 297 205 211 589 166 239 516 606 527 666 160 520 149 218 490 299 257 394 150 233 419 184 101 481 235 489
 214 191 619 622 383 380 222 225 118 674 219 535 635 627 186 277  60 242 133  11 630 140 204 444 135 675
 169 179 202 446  48 584 478 349 598 278 442 550 529 103  62 562 470 663 200 136 477 280  67  15 618 296
 162  41 173 653 347 159 253 227 628 378 289 574 611 129 458 613 122 607  68  44 673 676 107 524 104 181
 115 155 241 231 156 111 412 337 387  82  35 588 664 558 610 662 110 405 518 495 443 171 507  45 117 646
 178 143 165 426 128 642 313 656 206 414 116 440 575  50 631 512  21 531 621   8 144 124  53 572 640 492
  13 665 291 658  55 596 671 328 494 102  36 359 632  24 423 660 131 486 109 617 657 100  37  49  43 565
  16  63 536 532  56 471 626 609 633 125  23  75 555 539  22 615  42 625  92  90 580 650 324 303  77 522

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.83094e+06us (= 5830.94ms, 5.83094s)
Wall-clock time (full program): 5.88388e+06us (= 5883.88ms, 5.88388s)
Satisfaction error: 0
Number of search iterations: 1843
Number of local moves: 731 (including on plateau: 254)
Number of local minimum: 145 (including on plateau: 32)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  63 178 592 588 186 540 559  30  97 112 620 608 233 116 610 622 314 590 332 493 599  21 147  24 130 397
 555 281   8 307 541 309 639 613  64  90 595 612  76  44 589 565 586  66 235 481 633  69 603 128 108   4
 171 247   3 356 478 226 632 505 254 579 629 621  94  27 336 602 591  51 232 616 611 204  84   6  61 585
 548 153 596  92 121 563 575 551  14 431 619 624  87 139 564 496 545 513 406 562 266  10 132  99  86   9
 556 151 508  43  17 240 645 554  38   7 523 550  49  42 528 421 533 123 372 569 494 140 522  96 514 566
   5  57  89 492 188 477  25 538 507 491 479 499  45  67 472 511 644 440 495 448  95 114 203 432 463 525
  56 152 531 512  48 537 101 489 500 136 567 543 517 465 449 460 532 322 144   1 104  15 546  12 560 502
 461  16 450 470  55  18 651  52 480 224 476 571 120 475 466 459 428 627  33 552 443  85  82 447  37 623
 504  46 544 287  58 539  29 420 110  32 413 402 357 503 486 487 509  79 217 469 558  60 464 424 454 350
 576 205 416  23 143 141  78 490 501   2 347 498 363 264 404 497 422 442 427 398 390 190 179 462 414 529
 425 278 572 423 353 444  93 389 371 359 164 407 386 395 383 369 405 169 176 295 411 274 401 135 354 370
 439 273 474 415 412 391 468 392 483 349 488  13 275 211 445 218 199 279 299 321 396 269 394  11 452 435
 259 245 381 380 457 268 441 351 229 320 263 338 375 373 361 403 286 437 330 366 253 276 316 399 317 377
 312 329 434 455 328 368 181 189 333 382 305 345 355 388 284 261 433 280 471 456 331 358 304 326 352 241
 419 334 265 258 340 246 248 484 308 288 408 335 294 310 605 223 315 342 578 250 277 520 162 385 318 289
 376 374 148 367 303 515 191 346 570 243 267 138 311 343 325 669 197 215 647 200 297 653 378 285 183 260
 300 601 341 242 272 557 473 251 196 327 298 302 313 323 220 244 659 257 568 172 283 339 671 170 213 209
 234 553 387 600 618 324 482 652 646 547 225 195 115 231 255 156 117 451 157  41 214 430 173 587 174 237
 134 379 597 187 296 458 208 400 319 658 262 202 149 221 119 160  71 364 510 219 607 417 673 577 446 168
 344 518  47 365 384 222 426 306 292 606 118 230 617 100 103  59 271 212 530 663 182 630 649 594 175 158
 282 626 142 127 583 674 150  80 290 561 137 194 643 614 154  65 291 145 598 337 238 638 348 467 216 201
 207 526 102 582 642 360 163  91 580 542 161 198 637 549 252 635  68 521  62 192  75 534 113 524 236 249
 227 581 256 672 438 155 516  70  74 193 131 180 676 640 109  88  22 409 159  53 228 648 362 593 655 666
 650 485 184 293 584 166 436 393 519 535  36  20 668 631 107  19 210 177 122 146 270 625 106 656 634 129
  34 609  77 167 429  35 206  54 453 654 239  72 636 670 125  73 126 628 536  83 506 667 665 301 675  81
 664 604 657  98 527  28 185 111 573 133  31 105 410 660  50  39  26 662 165 418  40 615 124 661 574 641

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00545e+07us (= 10054.5ms, 10.0545s)
Satisfaction error: 2
Number of search iterations: 3284
Number of local moves: 928 (including on plateau: 359)
Number of local minimum: 271 (including on plateau: 41)
Number of resets: 1
Number of restarts: 0

Problem in column 12: 608 612 621 624 550 499 543 571 402 498 407 13 338 345 335 138 302 195 202 230 194 198 180 20 72 105 => the sum is 8802 rather than 8801
Problem in column 17: 314 586 591 545 533 644 532 428 509 422 405 199 286 433 315 197 659 117 71 271 291 68 22 210 126 26 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 510 615 443 579 208  37 108 141 584  74 348 522 110 101 603  85 608  25 617  92 562 161  35 638 407 588
  59  18 490 582 578 596  34 230 654 657 125 650 136 104 457 471 561  36 546  60 591 205  87  56 676 142
 581 644 587  28  98 554 191 648 441  91 252 500 113 296 455 415 592 126 545 574 641 122 139  21  47 100
  95 121 206 489 270  69 120 595 658 359 496 633  46  29 417 580 590  30 175  90 660 413 670 234 668  88
 124 566 237 188 632 233 539 272 662 200 356 631  38  45 618  67 440  57 129 260 555 659  44 422 190 637
  61 651  72 128 107 472 675 444 655 606 204 376  54 250 501 586 667  42 145 170 428 164  65  41 621 616
 149 318 105  52 217 117 656 288 434 181 589 553 242 322 567 663 515 197  80 669 653 186 109 177 187 575
 557 160 118 520  71 624 284 649 150 165 194 369 408 256 664 674 525 231 627 330 420 227 103 102 153 220
 135 167 173 532 294 665 281 602 312 159 426  68 171 273 447 605 418 652  76 218 390 548 446 214 297 232
 353 666  77 537 283 629 213 365 526 639 300 134 254 166 430 246 361 352 327 282 339 311 226 239 306 241
 301 178  89 671 315 535 259 276 504 672 424 367 314 299 155 364 527 189 156 265 568 274 317 240 278 264
 451 492 307 287 661 174 195 323 251 275 223 370 406 235 316 248 346 523 379 419 342 249 397 363 196 372
 404 262 319 405 423 224 222 399 344 258 328 337 302 542 377 236 391 435 244 255 362 412 309 298 421 292
 303 460  13 366 257 396 464 333 119 395 268 458 277 289 394 378 286 409 389 320 411 382 436 332 212 454
 336 308 386 331 325 410 494 456 266 172 228 267 355  17 392 349 215 463 445 351 221 517 380 371 403 343
 469 358 466 163 414 269 476 202 157 385  16 533 253 345 291 438 169 310 290 439 176 347 321 497 503 514
 470 179 340 449 429 462 388 279 229  63 425 541 295 271 210 384   1 374 453 437 192 502 559 143 507 219
 304 448 368 375 360 211  27  86 341 491 238 487 373 465 398 484 148  19 433 263 261 475 558 461 393 334
  55 518 512 162 620 493 468 329 245 564 478   8 450 543 115  20 293 549  50 442 198 326 387 483 431  62
 338 499 611 335 401 459 313  43   6 538 132  64 636 506  26 495 147 550 383  10 131 508 640 521  93 416
 498 350 642 225 529 243  40 357 199  97 427 146 645 452 203  73 106 180 547 400 130 519 473 481 534 305
 598   7 594 354  23 324 572 623  84 486 524  39 573 601  48  15 158 619  49 516 207   5 647 482  70 583
 488  79 511  51  99 285 531 183 144 152 643 184 597 634 216 247 140 600 528 576 111 480 209 604  32 477
 485 123   9 509 569  31 625   3 154 530 544 479 628 610 168  11  78 577 505 556  33 151  24 673 593 133
 563 182 513  81  66  96 612 474 607 570   4  83 565 599 280 127 138 626 112 622 137  12 635  94 467 536
 114 432 613 402 552 193  14 201  75  22 609   2 560 551  53 540 381 630 571 185  82 646 585 614 116  58

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00552e+07us (= 10055.2ms, 10.0552s)
Satisfaction error: 2
Number of search iterations: 3128
Number of local moves: 1155 (including on plateau: 442)
Number of local minimum: 261 (including on plateau: 59)
Number of resets: 2
Number of restarts: 0

Problem in row 10: 353 666 77 537 283 629 213 365 526 639 300 134 254 166 430 246 361 352 327 282 339 311 226 239 306 241 => the sum is 8802 rather than 8801
Problem in row 12: 451 492 307 287 661 174 195 323 251 275 223 370 406 235 316 248 346 523 379 419 342 249 397 363 196 372 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 666 234 671  48 114 645 496  94 423 129 439  79 646 654 116 563  46  22 313 607 214 154 672  31  62 663
 462 399 617  24 579 611 431  27  55 103 493 108 583 657 142 599  36  61  65 504 172  87 674  35 641 636
 629 667 653  34 622 447 568 354  68  75 596 156 233 649 652 343  59  43 105 670 120 171 196 385 160 146
 358 239 675 676  92 575  99 305 188 115 121  73 442 597 444 511 460  91  86 461 527 523 582  28 106 427
 658 495 138 329 628 362 388  45 189 553 119 126 266 656 162 500 190 177 148 186 166 655 135 643 268 619
 372 492 170 235 637 403 254 147  47 110 587 125 623 659  53 665 228 184 287 625 112 150 221 182 635 598
 424 524 130 346 648 662 581  42 176 153 571 149 547 557 201 452 218 279 260 445 134 632 157 270  78 165
 548 605 291 161 173 344 187 639 365 168 241 378 613 263 229 585 244 267 255 117 290 180 198 227 560 673
 381 355 256 340 213 642 164 128 669 331 595 281 193  57 295 633 328 661 257 351 151 294 311 202 306 407
 546 223 275 159 203 433 440 253 139 668 247 222 337 323 200 333 591 259 192 338 199 293 283 578 494 573
 377 610 310 137  30 615 502 300  84 237 576 336 326  52 312 417  58 232 316 335 392 361 321 631 274 660
 317 308 209 450 391 443 345 280 360 432 264 368 394 426 238 211 327 516 262 374 278 419 339 215 285 350
 348 603 370 302 269 389 367 341 301 380 315 224 356 357 261 296 216 195 435 375 324 258 420 225 405 469
 277 330 322 240 373 491 249 400 349 251 390 307 292 402 236 409 434 210 325 359 393 364 271 489 226 412
 265 536 379 386 416 334 318 408 474 396 453 185 208 191 353 273 514 468 347 507 404 197 456 231  25  77
 101 487  11 246 477 107 206 505 484 284 519 242 425 448 520   9 503 446 488  50 438 441 458 397 398 111
 243 109 567 616 437 212 179 217 612  17 525 552  13 169 414 314  15 473 506 167 383 528 544 565 384  40
 174  38 533 366 572 181 204 369   7 564 508 539  80 382 455 102 537 342 124 593 272 509 470 499 286  95
  74 123  39 430  26  93 245 428 466 303 541 395 464  64 566 363 467 155  85 387 664 490 480 530 472 451
 127 471 411 592 406 152  70 479 449 555  16 554  90 421 320 304 332 556 584  37 485 413 418 113 158 288
 248  69 545 475 522 297  82 422 609 454   1 483  56 429 497 163 540 465 534  18   4 478 482 517 289 122
 319 175  33 498 252 118 481 551 219 145  72 640 140  76 512 178 476 526 529 436 501   6 513 486 621 298
 282 133 542 538 518  41 141 207 624 620  63 510 601  19 515  66 562 415 550 574 371   2   5 410 463  29
 459 136  14 559  20 143 604 634 521 606  44 561 230 183 376 194 299 532 627 144 580  23  96 250 614 352
  97 131 569  12 100  51 549 618 647 558 401 570 589  21  88 220 586 600 590  60 577 543  32 457   3 132
  49 309  71 602  83  10 651 608 276 594 104 638  54  89 644  98 535 626 531  81 650 630  67 205 588   8

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.51808e+06us (= 4518.08ms, 4.51808s)
Wall-clock time (full program): 4.57076e+06us (= 4570.76ms, 4.57076s)
Satisfaction error: 0
Number of search iterations: 1043
Number of local moves: 578 (including on plateau: 189)
Number of local minimum: 58 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 391  50 148 650 532 538 124 676 665 646  35  86  45 546  98 364  87 372  88 458  23 648 187 668  34 642
 674 407  65 597 580 447 121 117 223 487  18 228  61 114  75 103 445 581 662  39 503 466 669 586 123 410
  95  94 371 486 673 490 128 656 147 618 145 140  47  21 564 639  84 568 649 151 115 614 492 638  76 100
 196 175 536 624 227 600  82  42 164 448 389  80  89 430 628  78  66 672 661  30  33 652 664 116 489 630
  71  58 565 521 671 491 192  57 158 543 157 535 282 523 631  38  62 637 239  77  55 647 237 563 629 162
 150 143 181 273 517 663 109 666 229 606 415 132 231 262 456 126 130 195 152 165 621 640 459 644 505 131
 198 118 161 460 658 575 392 224 398 531 153 651  60 438 506 675 170 500 107 185 272 595 176 202 129 267
 168 186 542 594 660 236 218 406 308 454 127 667 160 533 585 154 275 266 645 219 155 450 184 166 167 276
 102 205 296 552 222 258 255 566 670 442 163 299 206 615 240 217 346 432 216 106 242 488 171 384 455 653
 246 232 235 194 225 577 659 287 241 480 133 465 268 525 612 257 250  92 323 277 179 404 428 330 579 303
 263 635 641 214 221 220 191 261 504 347 654 361 283 620 351 365 180 292 249 190 344 422 270 226 252 245
 369 321 197 412 332 317 248 306 643 417 213 374 373 298 274 264 333 316 318 284 307 408 238 322 657 260
 302 289 204 269 396 409 474 421 309 294 358 259 348 386 301 311 548 353 159 335 354 400 362 314 331 315
 290 304 433 356 429 297 320 271 254 203 342 244 379 401 411 360 230 310 300 350 352 278 366 385 380 556
 295 291 441 312 341 327 281 286 423 188 177 425 368 375 370 367 376 403 418 343 355 141 446 336 338 378
 414  43  41 395 253 313 345 512 340 324 337 108 339 328 440 357 383 394 363 473 453 325 207 482 381 451
 200 388 182 463 349 493 334  93 382 472 111 319 439 377 416 326  51 359 569 402 387 138 437 477 211 426
 528 436 462 146 393   5 443 280  74 234 475 464 390 189 468 497 526  53 471 562 435 120  99 467  83 501
 551 513 419 199 444 112 470  20 193 476 609 469 522 135  25 507 397 288 553 547 514 233  59 413 122  11
 485 449 461 434 149 208 478 509 431 183 399  49 508  54  32 457 572 481 524   9 494 174  17 265 420 559
 518 516 427 452  44   3 498 209 530  70 598 537 424  26 172  12 479 496 285 510   6  90 596 544 210 549
 515 519 144  19  10 201 627 540 256  72 483  24 588 169  97 511 591   1 495 633 578 215 589  40 329 555
 484 604 561   7  56 101 554 527 405  46 573 567 634  81  27 626 576 119 243 622 623 113  36  22 590   4
 611 592  31 105  29 134 605  73 136 137 616 602 534 293 173 545 583 529   8 632 613  48 156 104 607 305
 617 625 558  52 251 539 557 584 125  69 550 574 587 560 279  63 520  64  67 599 178  79 601  16  85   2
  68 608 499  15 139 247  96 212 593  14 571 142 636 502 570 582 541  28  37 603 610  13 655  91 619 110

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.84863e+06us (= 4848.63ms, 4.84863s)
Wall-clock time (full program): 4.90212e+06us (= 4902.12ms, 4.90212s)
Satisfaction error: 0
Number of search iterations: 1190
Number of local moves: 550 (including on plateau: 160)
Number of local minimum: 75 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 151 222  84 648 258 665 420 175 144 318 638 286 313 618 486 535  48  90 357  63 626 574 277 658  43 104
  76 605 646 106 428 244  67  42 157 463  34 202 195 456 592 620 636 167 333 246  47 344 566 619 582 328
  17 179  96 595 471 119  94  13 207 611  77 422 138 545 588 557 608 391 148 396 554  64 610 527 604 170
 225 526 562 271  98  29 208 593 229 388 624 210 283 211 542  12 596 609 590  61 122 572   3 558 559 120
 576  39  78 606  87 539 401 520 416 445 488  54 137 508 389  28 214 213 553 366 514  91 570 439 519  11
 251 186 172 536 160  32  65 670 153 672 491  70 494 385 147 555 475 237 584 218 661 133 363 140 411 540
 505  66 529 101 264  73   8 523  41 492 630 177 123 150 407 478 500 321 541  23 504 524 489 327 487 518
 450  81 165 163 230 473  80  95  82 569 654 392 269 623 226 472 413 367 384 496 311  18 459 462 651 216
 481 419 537  25 300 112 206 495 292 100 544 552 440 129  46 502 442 531 400 417 643 121 194 196 298 379
 497   2 470 466 490 550 575 457 414   9  26 370 455 578 290 412  79  31 452 438 436 145 159 469 141 390
 397 174 434 221 382 364 421 409 369 551 533 324 350 166 124 431 161 169 146 336 404 398 349 247 297 644
 306 430 353 378 371 376 425 443 395 320 454  21 176  10 250 377 637 259 334 393 323 236 187 380 499 468
 406 564 108 525 360 338  55 267 441 580  37 284 663 374 399 453 474 359 340 316 255 383  20 418 289  93
 332 291 281  24 325 408 337 386 234 356 224 261 373 603 354 285  59 322 296 534 339 361 447 479 341 549
 667 248 335 331 365 352 664 293 503 217 275 329 295 345 239 265 262 435 279 498 287 362 315 245  88 307
 274 522 351 600 423 304 131 233 243 509 581 268 348 143  45 616 154 114 242 355 621 235  83 220 579 607
 278 299 203 252 254 219 647 125 231  38 556 228 656 613 109 314 676 449 591 282 249 372 346 232 309 273
 601 597 199 276 240 671 598 193 674 171 183 510 241 127 649  33 227 257 260 507 256 460  72 107 164 528
 198 571 432 501 548 134 631 586 136 461 128 190 561 402 156 302 215 516 602 342 189 263 191 201 310  35
 467 625 118 465 312 640 563  58 464 192  69 585 188 375 512 178 270 433 484   6 330 162 650  71   1 583
 543   4 212 317 426 200 546 666 568  85 319 594 567 485 642 437 209 135  14 238 358 660   5 184  86 301
 142 639 633 155 655 205 197 110 182 381 126 560 180 294 444 612 403 589  15 645 185 657 181 130 368 113
 152 565 483  60 223 305 415 139 515 115  50 493 517 105 303 173 480 506 653 614 168 272 532 662  97 204
 117 448 629 446 424 427 451 288 652 405   7 627 429 482 253  62  89 622  52 513  99  57 635 103 410  74
 641  22  92 116 632 394  49 347 538  27 577 634 102  44 343  36  16 530 132 387  40 668 587 659 615 573
  51 477 599 617  75 628 547 675 521 326 476 158 308  30 266  56 458 149  19 111 280 669 511  68  53 673

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00542e+07us (= 10054.2ms, 10.0542s)
Satisfaction error: 1
Number of search iterations: 3211
Number of local moves: 984 (including on plateau: 340)
Number of local minimum: 291 (including on plateau: 53)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 151 605 96 271 87 32 8 95 292 9 533 21 663 603 239 616 676 257 602 6 358 657 532 103 615 673 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 318  59 615  38  93 163 637 540 546 128 103  23   1 523 669  88 628 289  54  90  89 564 552 665 651 675
 630 648 476 659 627 603  41 660 395  51  99  60 120 471 641 301 626 107  12  21 101 673 638  26  53  62
 644 559 625 610  61 643 325 672 470 309 198  32 116 466 141  96 370 213 104  76  48 624 573 306 477  43
 667 203 544 109  35 121 555 265 467 560 418 100 136 131 493 618 160 233 647  47  87 593 642 119 670 181
  79 225 549 134 629 650 239 484 571 528 541  40  72 671 505 566 581  42 139 127  46 456 178 149 545  55
 122 114 604  44 509 543 463 142 557 135 502  83 129 636 162 576 558  98 108 287  74 575 605 389 522 264
 179 209 185 230 158 211 371 191 608 570 666  57 228 481 147 170 515 439 105 676 302 633 598  65 632 175
 249 226 535 138 298 229 542 159 590 145 146 321  85 613 164 634 464 614 458 327 292 473 194 227 172 506
 310 283 254 154 176 224 537 550 668 572 419 169 125 238 561 207 480 503 304 271 240 664 190 171 295 236
 174 132 381 137 155 113 521 324 663 539 584 455 272 494 369 277 674 322 215 166 273 601 200 396 167 197
 232 199 284 242 567 193 258 180 595  73 347 323 443 378 148 661 286 606 165 234 247 631 517 250 442 300
 188 382 496 256 416 363 338 251 320 278 305 623 387 349 285 329 441 391 276 297 244 210 275 410 421 270
 314 280 235 223 417 279 259 504 246 383 436 156 316 296 446 281 346 495 373 333 290 444 368 445 222 414
 339 326 260 412 384 362 221 348 204 375 319 261 413 423 263 352 344 353 218 411 313 392 366 293 440 409
 356 359 336 262 248 489 388 288 267 425 332 291 429 453 328 482 216 266 257 491 357  39 334 342 451 315
 437 220 415 341 331 447 401 330 350 404 343 499 312 420 282 168  68  49 662 448 475 124 379  63 307 526
  71 430 117 450 408 299 367 351 253 435   6 516 398 205 483 360 365 206 345 335 454 231 427 372 399 518
 385 337 431 386 488 406 201 106 294 407   5 479 596  22 402 422  81  50 612 434 438  11 393 403 465 547
 525 508 498 433 461 361 153 202  34 214 520 426 649 457  97 303 186 380   9 468 556  29  56 577 102 597
  64 374 144 530 524 358  37 377 118 112 189 400 459 182 519 513 269 376 551 617 655 177 424 274 161 397
 533 340 507 653 563 432 591  18  15 500 173 487 123  17 622  58 151 478 390 527 354  69  16 553  24 607
 490 585  66 587  30 469  94 529 183 510 130 452 536 449  67 110 152 364 657 600 485  78  77 589 460  52
 474 580  84  31 574 317 501 133  14 534 486 586 620  36  91 150 245 619 255 562 582 268   3 492  10 554
  28 579  27 639 311 497 308 583 243 208 472 654 616 140 569  86 512 640 592 192 532  92  13   2  82 184
 531  45 126 538 143   4 212 594  19 187 548 652 609 217  95 588   8 157 635 196 621  80 355 645 394 602
 462 599   7 565 195  25 241  20 111 219 514 656 611  33 252 405  75 511 658 568 646  70 428 578 237 115

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.3831e+06us (= 3383.1ms, 3.3831s)
Wall-clock time (full program): 3.43554e+06us (= 3435.54ms, 3.43554s)
Satisfaction error: 0
Number of search iterations: 626
Number of local moves: 483 (including on plateau: 99)
Number of local minimum: 17 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  19 524  52   2 299 625  46 578 156 225  71 505 104 613   7 478 630 243 604  57 606 626 418 542 620 151
 187 168  60 556 249  63 204 468 118 142  22 490  12 643  49 569 523 599 575 317 549 579 106 644 342 567
  65 417 618 545 257 535 167  96 125 590 621 576  97 571  18 628 660  24 205  25  21 570  53  28 633 656
  50 539  69  51 280  16 242 580 173 165 611 487 169 563  37 533 586  29 444 136 541 461 302 624 515 598
 102 272 185 203  80  31 218 640   4 221 608 603  27 585 219 617 559 237 595  33 395   6 594 615 605 547
  15 129 443 197  73 472 266 532  86 546 560 473  55 622  91 562 565 455  67  14 596 552 139 452 383 456
 491 429 143 159  79 592   3 470  77  75 493  26 477 514 587 460 612  62 646  17 372 416 182 496 413 510
 508 528  87 558  61 534 234 481  95 209 500 485 499 432 516 511 457 188  36 212  35 502  20 397 324 392
 433 463 379 403 191  82  43 424 155 459 445 497 430 334   5 464 420 119 382 339 434 312 369 425 367 427
 553 495 246 438  94 105  90 328 244 364 482 550 537 404 412 407  85 316 391  92 449 441  40 437 435 366
 355 331 276 408 183 325 196 398 356 343  10 428 421 256 422 306 387 536 471 285 406 349 287 357 308 401
 446 132 411 345 245 291 273 439 295  68 380 492 385 361 147 521 402 359 451 278 426 335 376 152 454 337
 450 223 293 305 374 279 368 250 386 503 498 370 284 384 313 297   1 194 321 440 453 419 363 296 436 301
 314 260 294 340 394 341 573 270 388 475 409 399 254 298 315 480 153 352 348 235 338 180 281 263 329 518
 255 323 274 322 326 177 649 192 447 564 354 614 290 134 373 360 319 309 288 410 220 332 265 377 248 378
 163 282 519 479 365 230 568 240 405 261 241 300 353 509 350 178 213 351 311 489 251 289 193 303 654 304
 236 336 286 600 531 396 467 310 597 362 375 198 269 318 277 247 668 164 200 431 111 238 228 347 216 393
 195 641 344 206 414 264 557 389 540 661 381 110 113 330 476 371 275 201 239 653 522 154 259 186 231  89
 670 465 268 262 602 144 462 637 616 126 202 258 108 112 358 199 175 638 650 582 140 217 442 145 208 115
 657 466 581 229 555 107 448 307 651 665 506 114 123 211 283 162 415 636 141 346 184 149 253 224 166 222
 109 233 267 252 658 672 488 170 520 400  66 214 593 127 662 124  23 652 215 642 629  93 607 226   9 150
 584 133 271 512 327 675 529 117 664 676  44  34 631 116 610 130 174 591 157 548 161  83 619 172  72 171
 601 207 526 648 504 103 513 189 292 100  13 320 669  76 517  56 131 390 176 530 574 210 674 501 160 122
 609  45 673 128 543 589  98 120 458  70  64 181 635 148 527  88  58 623 666 671 179 588 645 333   8  54
 507 639 577  81 566 667 561  39 469 483 190  30 632  41 647  11 232  59  84 525 135 146 663 158 627  32
 227 121 659 572 551 486 538 137 484  48 655  47 634  99 583  42  78 474 138 494  74 554 423 101  38 544

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00028e+07us (= 10002.8ms, 10.0028s)
Wall-clock time (full program): 1.00563e+07us (= 10056.3ms, 10.0563s)
Satisfaction error: 2
Number of search iterations: 3812
Number of local moves: 1132 (including on plateau: 468)
Number of local minimum: 347 (including on plateau: 69)
Number of resets: 2
Number of restarts: 0

Problem in row 15: 255 323 274 322 326 177 649 192 447 564 354 614 290 134 373 360 319 309 288 410 220 332 265 377 248 378 => the sum is 8800 rather than 8801
Problem in row 23: 601 207 526 648 504 103 513 189 292 100 13 320 669 76 517 56 131 390 176 530 574 210 674 501 160 122 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 647 277  44 595 298 466  11  25 530 589 596 159 116 171 522 216 226 372 554 562 411 161   3 622 626   2
 625 301  50 653 603 351  15  38 643 317  40 536 473 635 637 140  61 569  28 534  70  85  43 639 143 572
 612 527 400 618 290 579 224 137 658 672 582 508 121 287  51 148 329 190  55 273 471 553  66   4  36 410
 491 650 203 433  10 598 419 179 593 606 628 308  74 591 107  46 249 256  18  45  96 144 424 514 520 599
 545  31 126 557   8 418 464 470 594 583 574  93 113 213 238  83  67 535 498  20 565 475   5 509 463 555
 567 255  30 454 237   6 559 244 272 412 512 206 141 319 560 131 265 515 450  72 621  57 465 413 539 499
 488 223  63 443  79 479 607 177  69 455 521 303 234  37 655 279 119 426 507 497  29 428  88 638 489 468
  42 435   9 501 133 543 343 392 573 500 517 182 438  26 486 506 431 585 323  71 186 124   7 406 519 523
 330 440 199 105 370 548 322 495 518 484  27  41 399  87 541 448 297  80  12 563 547 459 151 382 503 453
 576 422 172  60  92 366 385 441 436 504 408 458 146 193 551  14  23 396 405 294 516 398 221 420 421 483
 374 176 257 258  91  34 427  56 326 391 368 342 379 360 296 409 333 359 608 276 371 447 357 404 645 457
 476 461 264  73 401 675 269 437 346 232 338 390 101 304 376 425 386  84 394 528 336  65 191 451 417 381
 230 306 467 315 472 524 423 239 496 362 358 355  19 334 445 165  13 546 365 307 281 673 183 270 321 332
 414 442 387 189 389 627 344 378 180 295 337  47 300 185 345 310 416 474 380 490 331 218 212 328 278 505
 480 243 348 205 327 312 231 367 388 544 375 341 383 164 145 352 283 207 377 587 384 302 568 340 187 361
 236 254 492 353 611 288 202 570 316 102 197 662 320 657 311 175 219 619 194 142 138 242 644 241 325 291
  90 135 542 209 526 356 253 403 318 566 286 592 309 564 220 485 204 167 446 268 267 363 525 262 245 200
 289 248 510 228 629 313 665 634 395 222 235  99 439 558 174 652 293 462 149  33 127 364 571 169 225 118
 233 251 561 184 415  95  77 610 208 210 227 661 513 660 229 481 393 122 620 250  97 247 434 195 397 430
 162 407 532 215 115 299 631 614 130 106 201 577 651 158 284 584 529 188 349 600 604 111 285 152 181 136
 153 120 633 540 597  17 261 266 314   1 493 350 460 617 173 444 640 157 624  94 198 605 456 103 274 211
  54 100 538 108 642 260 263 139 125 292 150 275 654 586 170 537 666 196 160 667 656 664 533  64 280  22
 154 178 556 482  76  86 636 552 114 110  58 369 615  49 129 449 613 259 575 511 549 581 601 214 168 117
 246 641 217 339 630  39  68 659  21  59  89 669 478 192 354 580 646 104 469 663  53  62 649 282  98 494
 271 676 578 252 648  35  32 132  82  78  52 155 590 402 674 240 671 609 166  81 347 668 588 616  24 134
  16 602 623 432 112 487 670 147 156 109 632 123 335 452 128 502 429 324  75 373 550 305 531 163 477  48

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00487e+07us (= 10048.7ms, 10.0487s)
Satisfaction error: 2
Number of search iterations: 3359
Number of local moves: 1222 (including on plateau: 552)
Number of local minimum: 270 (including on plateau: 50)
Number of resets: 2
Number of restarts: 0

Problem in row 5: 545 31 126 557 8 418 464 470 594 583 574 93 113 213 238 83 67 535 498 20 565 475 5 509 463 555 => the sum is 8802 rather than 8801
Problem in row 19: 233 251 561 184 415 95 77 610 208 210 227 661 513 660 229 481 393 122 620 250 97 247 434 195 397 430 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  20 651  66 572 570 403 536 666 159 113  67 628 114  40  59 261  42 481 213 668 385  84 664 658  75 606
 140 674 122 669 394 275  99  80 324  69 568 641  94  79 463 250  53 660 464 508 547  55 182 135 610 646
 169 349 662 436 631  74 583 661 154  81 549  41 116  62 118 469  85 510 426 143 656 218 615 654  73 266
 111 434 102 593 636 162 659  97 138  35 590 632 174 255 242 338 166 597 596 109 635  28 551  78 173 670
 283 447 193 655 326  44 672 233  70 126 665 171 134 128 100 334 421 569 476 121 534 614 633 220  72 560
 675 640 345 584 637 671 652 180 263 287 219  56  57 243 204 667  89 663 236 150 350 328 189 244  43 129
 634 207 147 145 216 528 676  77 224 101 624 211 181 235 146 579 105 387 545 673 594 252 563 311 230 210
 556 413 580 142 141 281 433 609 188 274 195 214 152 653 256 503 170 564 592  60 492 333 231 300 215 254
 278 495 130  61 621 526 258 179 657 107 567 453 161 647 238 617 245 374 415 208 454 178 319 317 186 110
 619 148 339 337 144 380  96 167 177 620 312 192 259 279 268 484 550 512 650 386 595 315 280 251 232 209
 460 229 416 239 378 352 248 491 520 373  83 437 441 103 302 440 133 347 612 247 565 412 284 253 190 246
 187 269 546 369 196 393 422 240 297 391 367 399 290 304 212 448 225 488 498 341 458 301 257 322 309 272
 327 314 358 288 217 267 368 379 362 194 156 202 514 496 197 205 443 456 414 292 340 285 465 305 477 480
 335 438 355 308 286 321 298 262 365 449 405 420 390 264 330  39 332 291 364 323 418 227 423 366 375 417
 360  98 115 430 354 559 310 221 392 586 371 318 424 320 137 200 348 241 222 404 299 451 446 571 295 329
 343  93 500 303  48 228 363 382 376 408 270 370 307 359 487 136 461 396 344 483 294 351 356 377 470 296
 444 206 176 466 479 313 384 411 357  32 429 442 432 331 523 472  38  50 191 455 112 389 361 431 383 494
 316  65 409 515 490 199 473 486  52 400 104 445 501 388 419  86 346 234  90 185 172 293 518 589 601 425
 325 183 410 524 527 131 402 282 505 336 428 627 459 450 598  36 513  14  12 435  82  21 467  33 471 530
 153 457 407 478  26 260  18 509 485 544 529 475 502 522 506  54 401 125  30  23 151 406 117 557 541 525
 468 201 353  16  15   4 493 517 395 381 521 482 548 160 622 163 608 157 276 439  22 533  95 625 504 203
  34 184 499 535  87 562  51 398 629 452  45  71 605 626  19 237 531 271 149 516  46 591  24 538 582 519
  88 543 542   6 139 540  25 265 566 639  63 575  27 532 642 223 643  13 226 372  92 554 175 588 474 249
 561 600 342  76 585 587 123 427 539 578  58 164 644 599 507 511 649 119 165 155 273 397  17   9  10 106
 638   1 555   7 120 168  68 553 576 648 613 127 630 108 604 497 623 124 289 616  37 574  11   5 607   2
 277 462 132  47 537 573  91  29  31 577   3   8 645 618 602 552 581 158 306 489 198 611 558  64 603  49

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00531e+07us (= 10053.1ms, 10.0531s)
Satisfaction error: 2
Number of search iterations: 4301
Number of local moves: 1469 (including on plateau: 755)
Number of local minimum: 367 (including on plateau: 83)
Number of resets: 2
Number of restarts: 0

Problem in column 5: 570 394 631 636 326 637 216 141 621 144 378 196 217 286 354 48 479 490 527 26 15 87 139 585 120 537 => the sum is 8800 rather than 8801
Problem in column 26: 606 646 266 670 560 129 210 254 110 209 246 272 480 417 329 296 494 425 530 525 203 519 249 106 2 49 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 640 520 658 615  77 151  35  36  90  98 116 558 394  47 389 628 659 593  58 599 432 353  51 408  14 582
 652 676 405 529  82  46 133  55 167  31 669 521 650  59 477 134 668 657 665 333 372 179 219 112 160 150
 655 613 645 414 643  57 122 226 136  38  40 560 630 162 673 604 165 583  63 454 662 124 114  23 288 107
 620 512 495 375 672  28 125 479 410 104 149 675 636 176  39 585  54 587  68 523 471 108 637 127  97  49
 632 480 547 592 671  44 117  45 137 469  74 358 342  70  75 608 158 569  42 571 492 621 109 147 651 180
 605 622 531 510 154 163  48 175 121 332 183 548 647 310 123 539 435 484  66 606 570 440 238  94 119 138
 609 367 518 646  89 318 269 234  95 189 284 227 457 145  65 467 202 339 212 666 674 193 300 667 203 366
 607 258 524 591 194 263 255 660 172 231 262 629 634 229 174 530 305 196 252 369  86 242 103 135 276 624
 396 589 177 430 259 198 207 317 173 304 233 465 517 483 192 267 279 514 225 448 563 274 178 282 551 280
 482 382 256 638 101  78 295 250 397 188  80 195 546 206 289 215 564 486 345 580 507 526 208 211 323 453
 504 327 200 399 232 209 417 245 385 283 618 380  99 185 199 337 346 257 444 661 205 463 670 181 201 354
 401 393 438 461 230 156 217 329 379 642 314 222 328 334 241 403 516 575 204 247 275 302 265 251 352 326
 363 392 197 349 449 423 291 240 264 273 287 377 626 169 213 384 505 458 277 270 164 239 293 639 223 436
 278 387 296 235 143 325 415 370 316 281 359 351 374 324 357 485 341 350 489 313 356  92 388 298 557 321
 120 452 182  52 168 451 253 376 409 390 371 365 400 331 340 502 429 335 404 373 294 446 364 443 244 307
 159 115 450 260 309 427 308 303 426 362 498 455 406 315 473 290 475 391 320   3 141  84 322 381 627 501
  61 155 494 216 361 419 488 271 398  13 428 537 220 348 497 344 336 285 442 286 221 243 413 487 422 416
  15 503 100 268 383 559 338 299  56 439 431 481 129 500 552 157 459 292 411 261  53 519 347 543 395 311
 224 360 153 368 499 476 528  73 407 433 588  22  60 468 611 111 297 130 254 210 140 434 535 421 527 472
  11  67  72 306 565 474 418 601 462 445 568  85 132 522 595   2 470 144 578  10 266  20 490 649 412 437
 218  34 464  29 493 509 581 343 567 545 536   4  87 441 538 466   9  18  43 187  88 654 572 386 456 533
   5  76 110  71  64 554 574 544 617 378 460  96 228 555 534 102   6 106 594 236 424 301 598 506 566 496
  21 118 126  32 586 540 532 542 511 596 584  19  27 602 579  50 573  33 600 249 248 515  25 549 402 142
  37 105 556 161 597 656 550 562 612 425  12  30  79 577   7 214 508 184 633 190 148 576 491  24 447 420
 131 152 113 171 610 663 644 603 541 664 631 513  62 590   8 186   1 166 478  17 330 237 625 312 272  81
 355 146  93  83 170 614 641 623 553 648  26 128  91 653 561 191  41  69 635 139 619 616 246 525  16 319

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00538e+07us (= 10053.8ms, 10.0538s)
Satisfaction error: 2
Number of search iterations: 3111
Number of local moves: 1124 (including on plateau: 433)
Number of local minimum: 252 (including on plateau: 56)
Number of resets: 2
Number of restarts: 0

Problem in column 3: 658 405 645 495 547 531 518 524 177 256 200 438 197 296 182 450 494 100 153 72 464 110 126 556 113 93 => the sum is 8800 rather than 8801
Problem in column 19: 58 665 63 68 42 66 212 252 225 345 444 204 277 489 404 320 442 411 254 578 43 594 600 633 478 635 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 398  69 251  72   6  19  41 633 609 482 647 190 113 337 285 453  13 516 645 650 612 666 303  58  70 663
 469  26 556 662 588 363 629 291 656 447  23  27  97  18  91 615 637  21 584 604 451  90 210  77 547  22
 514 571 195 458 535  36  68 431 582  32 228  29 234 127 380 519 271 555 454 649 639  25 480 501 148 140
 660 414 570 610 429 523  67 410 288 102  35 152 212 667 196 607 110  99 488 503 172  49 640  87 508 203
 528 436 490 253  51 107 597 600 671  38  73  74 635  39 478 552 205 139 553 616 121 596 183 204 450 112
 356 209 160 456 318 499 669 591  37 182 673 222  63  64 133 471 487 194 590 236 665 307 492  43 268 416
 468 392 213  96 674 496 654 630 336 374  81 216 180 668 317 569 300 260  34 534 379 134 188 155 175 278
 574 651 593 664 135 141 266 675 274 181  52 325  24 652 125 481  88 231 284 280 199 193 657 192 643 221
 568 541 418  98 151 242 641 381 560 247 218 186 378  76 215 238 507 462 389 323 632 101 545 343 246  95
 340 626 605 385 286  86 273 115 250 659 361 123 276 187 536 394 425 479 644 598 252  82 302 206 208 103
 262 618 256 319 258 441  44 150 517 142 422 658 305 358 281 277 311 249 334 272 622 406 165 219 661 254
 313 185 245 283 315 572 320 405 329 444 338 676 147 235  84 670 308 207 332 333 470 296 330 351 350 263
 357 345 467 375 542 120 367 419 322 241 306  92 382 339 399 387 448  79 347 122 372 257 401 349 371 595
 293 233 295 376 366 384 344 672 327 267 411 586 403 164 248 413 244 653 321 265  12 360 353 415 259 137
 364 613 393 619 229 290 331 170 427 438 383 316 475  20 161  78 237 232 412 131 362 550 287 433 355 495
 312 184 484  89 477 497 153 104 390 391 342 352 463 423 370 189 171 166 417 396 510 397 310 420 167 627
 335 289 459  71 279 505 328 294 270  59 264 282 400 434 341 201 326 437 223 583 457 575 348 440 162 439
 136  28 297 465 544 455 521 388 515 298 442 407 432 202 240 230 518  62 226 502 154 443 424 377 149 346
  75 655 146  56 144 177 531 369 386 524 445 373 324 539 243  15 529 435 472 421 368 525  33 489 520   7
 128  60 129  54 404 506 100 174 191 239 621 564 601 530 549 466 474 509 409  83 173  61 365 476 486 449
 527 217  16 460 359 580 132 117 526 483 452 513  55 426 620  53 446 512 106 105 111 504 214 551 225 491
 227 200 498  80   9 511 538  40 114 554 537 500 624 559 561 304 309 579 145 354 158  14 594 548 198  46
 494 402 261  50 473  31 606 163 169  66 493 522 592 543 430 168 631 563 197 108 124 557  45  85 461 567
   1 628   3 634 533 211 126  42   2 648 301 611 159 408 603 157 224 573  47  65  93 464 558 599 546 565
  94  30 269 576 566 614 299 428   5 646  17 585 589 178 623 176   4 275  10  11 577 587 255 602 143 642
   8 179 532 540 130 395 156 109  48 617 636 220 638 608 292 118 578 314 138  57 116 562 119 581 485 625

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.42516e+06us (= 6425.16ms, 6.42516s)
Wall-clock time (full program): 6.47824e+06us (= 6478.24ms, 6.47824s)
Satisfaction error: 0
Number of search iterations: 1949
Number of local moves: 794 (including on plateau: 355)
Number of local minimum: 173 (including on plateau: 50)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 267 573 622  76  22 669 375 436 454 569 584 538  36  75 555  99  98 101  47 517 651  72 607  45 675  38
 525 407 124 286  46 639 512  89 613 623 632 455  18 667 603  83 151 120  80 153 668  66  78  32 648 483
 358 634 671  25  44 490 361  65 411 482 445 578 126 552 498  55 519 155 130 140 539  67  57  93 663 643
 558 476 137 460 176 665  33 593 588 171 135 470 118 548 674  73 458  69 111  97 590 114 644  91 610 142
 554 571  71 133 178 469 416  58 422 602 672 534 127 640 658 222 102  17 174  94 163 505 188 170 583 479
 383 587 654 206  50 347 540 636 566 230 186 660 212 405 666  53  81  61 166 280 190 205 110 103 575 649
 609 591 116 478 117 633 529 162 550 438 631 615  63 655 522  86 197 211  79 451 167 216 123 156 181 225
 527 585 147 381 139 475 650 670 599 234 195 628 104 544 189 183 194 214 656 164 200 191 159  77 172 524
 518 219 238 580 233 562 627 561 673 250 213 283 239 210 508 177 245 676 242 224 261 131 259 226 215 231
 638 218 240 421 217 435 430 187 535 657 307 262 254 235 342 387 306 318 173 327 290 247 276 258 236 605
 589 251 296 367 355 547 570 248 377 309 333 193 356 199 201 256 266 553 165 319 344 298 349 220 324 516
 175 273 310 621 313 500 335 275 265 232 625 326 362 297 502 257 343 338 295 243 386 291 322 278 292 345
 341 304 336 331 412 368 325 642 371 274 268 279 300 302 406 288 393 308 303 337 330 281 370 340 244 348
 389 311 364 323 352 229 354 320 282 317 305 392 378 293 366 301 380 287 388 403 329 332 379 334 365 328
 395 461 357 160 453   4 346 353 384 385 420 401 321 444   1 397 253 373 415 294 351 312 315 359 471 376
 113 372 409  39 413 192  88 404 196 423  74 499 408 463 390 284 394 207 459 314 418 437 382 533 428 462
 108 439 399 168 457 316 426 557 125 115 450 467 441  64 360 440  21 424 374  84 452 363 429 417 449 456
 391 501   9 241 410 185  70 446  82   5 369 466 434 414 350 565 443 299 398 513 425 486 400 447  20 432
 221 180 488 154 396 260 107  51   7 503 560   2 523 509  13 492 491 289 582 468 473 496 506 464 480  85
 136 100 542 203 472  95 132 465 122 563 531  42 494 431 228 487 484 419 530  24 493 198 481 559 143 427
  10 134 507 545 532 442 144 477 119 223 520  23 574  90  68 474 448 433 515 551 148 543 511 594 141  35
 208 150 600 614 541  29 237 121  14  60  28  27 497  48  56 601 592 514 182 526 564 581 635 572 549 255
 157 184 618 598 556 152 149  37 402  19 277 105 489 269 249 629 617 568 537 579  96 577  11 595 129 202
 264  59 510 567 641  40 227 109 252 504   3 285 606 128 161 604 626 624 528 495  87 619   8 521  62 271
 209  52  30 485 630  43 546 263 246 597  12 179 662  49 204 647  54 611 620 596  41 536 586 653 112 138
 158 169   6 339 646  15 272 576 146  16  26  92 659 270  31 661 645 612 652 608 145 637 616 664  34 106

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00033e+07us (= 10003.3ms, 10.0033s)
Wall-clock time (full program): 1.00562e+07us (= 10056.2ms, 10.0562s)
Satisfaction error: 2
Number of search iterations: 3084
Number of local moves: 1097 (including on plateau: 571)
Number of local minimum: 279 (including on plateau: 80)
Number of resets: 2
Number of restarts: 0

Problem in row 5: 554 571 71 133 178 469 416 58 422 602 672 534 127 640 658 222 102 17 174 94 163 505 188 170 583 479 => the sum is 8802 rather than 8801
Problem in row 19: 221 180 488 154 396 260 107 51 7 503 560 2 523 509 13 492 491 289 582 468 473 496 506 464 480 85 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  34 666  80 600 104 507 632  81 497  25 528  46 164  23 577 517  87 657 490 585  89  98 560 107 641 406
 549 580  48 459 623 504 377  76 574  62 339 133 647 676 597 124 132 160  72 496 106 147 540  51 673  56
 129  70 352 251  61  93 108  39 537 551 525  44 655 491 605 506 178 512 431 546 510 143 674  73 642  75
 128 625 593 140 194 155  95 126 610 145 579 125 189  24 520 450 463 529  92 643 313 635 620 144 582  82
 663 121  58 182 650 173 138 177 652 204 552 161 307  50  84 667 456 651 411 609 618 522 134 122 210 229
 123 505  65 624 379 662 190 117 646 494 156 211 508 199 559 206 118 478 656 614 654 115 119  74 192 137
 568 239 116 257  78  41 341 247 570 223 536 130 670  53 660 669 521 386 461 672 583 218 157 135 150 120
 171 648  94 201 376 181 203 671 315 575 665 227 151 146 479 224 541 398 675 180 613 200 243 195 215 214
 165 233 158 263 136 235 661 186 604 231 588 241 154 276 163 664 413 653 599 564 500 249 338 114 193 220
 261 309 278 295 486 272 264 327 410 659 291 205 283 267 237 254 483 344 558 306 586 314 236 296 292 288
 317 242 342 226 539 240 184 300 332 265 608 258 280 248 246 428 628 542 658 167 355 390 363 221 256 166
 385 274 185 212 275 271 298 284 345 581 169 668 225 294 259 217 471 509 335 426 477 423 308 287 319 304
 301 244 337 388 369 290 262 343 312 302 448 311 228 396 365 325 299 277 346 392 449 260 435 360 476 286
 331 409 371 401 336 333 383 322 281 380  96 320   7 359 412 429 384 389 238 403 442 351 328 370 368 358
 375 361 191 447 432 374 100 347 303 397 440 407 436 316 381 416 362 293 443 353 305 109 324 458 340  91
 354 378 427 310 101 373 455 469 334  12 424 350 372 422 421 148 356 255 196 444 207 433 462 321 357 420
 492 395  15 451 102 402  64 393 414  28 131 457 499 430 364 387  31 326 439 438 323 349 366 475 467 563
 425 330 454 434  86 408 404 400 202  79 269 418 515 511 437 468 230 127 174  47 282 441 503 394 415 348
 473 485 523 489 245 417 556  40  42 391  71 452 141 470 480  67 175 152  60 518 285 481 367 482 405 534
 474 516 466 533 266 382  43 622 289 572  97 545 498 460  22  52  88 198 153  36 419  27 526 565 487 465
 557 208 639 501 484  29 524 636  63 472 213 514  33 399 446 464 105 162 139  35   8 495 519 606   2 548
 590 159 649  26  30 527 544 538  19 531 268 569 530 566  59  38 453 112 172  21  55  83 550 645 513 554
 616 584 638 279 634 561 547 633 110 232  45 607  20 603   9 222 250  85  17  68  66 591 113 629   5 637
  49 197 535 216 567 149 592 578 183 273 445 571  69   3 179 170 615 297 630 111 187 543   1 595 553 493
  18  10 598 602 621 626 219 640  54 555 176 329 601 587   6  77 644 252 168  37 270 611   4 488  32 576
 253  13 589  14 627 596 617 209 103 562 142 502 619 532 234 612 318  57 188  90  99 573  11 594  16 631

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.51622e+06us (= 5516.22ms, 5.51622s)
Wall-clock time (full program): 5.56977e+06us (= 5569.77ms, 5.56977s)
Satisfaction error: 0
Number of search iterations: 1393
Number of local moves: 629 (including on plateau: 274)
Number of local minimum: 75 (including on plateau: 40)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 382 176 613 624 531  85  25 629 544 104 675  70  95 107 178 139  26 117 576 625 508 658  55 611 171 477
 204 669 592 386 219 436  48 620 666 450 128 642  31 626  44 147 413  32 494 439 114  59 569 540  42 191
 145 172 577 566  68 286  49 673 668 487 138 504  41 596  34 146 503  33 649 662 202 122 105 676 174 525
  87 541 562 674  72 455  75  39 617 659  79 672  35 671  47 463 661 260 193 607  98  83  51 490 165 445
 170 507 599 505 347 101  67 600 164 468 161 409 169 598 344 605 643  84 331 141  46 667 181 574 143 177
 200 650 529 237  97 653 218  88 228 239 236 632 153 645  96 492 536 262 512 167 150 136 132 593 280 640
 130 590 108 573 195 608 421 213  65 444 235 639 156 526  62 621 616 371 221 185 173 240 230 519  13 647
 297 570 155 321 482 266  64 484  73 166  80 367 255 299 216 271 472 214 655 585 378 351 242 459 414 665
 157 670 259 491 106 563 134 180 646 456 121 664 190 224 250  78 568 370 388 179 277 184 460 447  76 663
 619 551 254 473  43 283 364 199 152 631 183 318 225 163 210 488 560 187 506 222 275 233 207 417 423 615
 660 285 168 232 261 549 489 127 234 327 350 387 160 244 379 516 533 278 554 359 135 241 279 401 324 329
 274 365 303 520 341 356 497 288 154 245 248 430 328 420 348 320 340 346 246 211 252 308 470 363 437 391
 343 269 291 537 276 339 383 374 192 393 377 395 362 295 358 426 408 302 307 223 394 267 201 429 323 337
 310 158 264 458 400 289 100 293  21 565 440 243 305 309 523 306 485 434 355 410 231 361 479 189 438 435
 338 284 390 399 325 273 292 298 304 496 290 126 404 442 427 428 270 296 451 357 384 411 227 334 149 406
 301 263 441 405 319 253 196 313 203 206 397 287 326 522 582 403 446 389  22 548 586 314 342 148 229 360
 317   8 376 120 578 220 535 486 493 188 432 300 415 353 500 433  93 294 208 336 162 330 316 332 558 418
 368 396  27 268 475 345 591 197 354 311 443 322 513   6 335 480 129 375 457 469 373 352 530  77 466 142
 249 392 499 175 431 124 465 425 416 118 454 151 422 483 501 113  66 579  38 534 567 110 366  86 652 385
 369  45 528  24 550  36 381 515 476 209 419  82 584 398 538 461   9 552 125 115 628 610 380 133 622  12
 612 256  18  90 557 407 553 102 583  19 539 412 502 532 542 217 258 604 123  74  20 448 547 212 462 112
 424  69 464 186  11 555 648 521 517 194 580 131 638  56 561  89 238 511  94 510 509  28 603  58 602   4
 581 144 372   1 481 251 467 572 524 119 564  61 614  40 518 247 140 595  54 571 452 559   5  60 627 182
 333 272 312 315 471 265 545   7  53 635  37 282 618  91 656 257 109 587 111  29 597 606 634 349 527 103
 478 449  71  16 575 215 651 556  52  15 594 159 623  92 495  14 198 630 633 226 636 609 644  23  10 137
 453  50  30 205 589 588 543   2 402 657 601 116 637  63  57 641  81  99 498  17 654 514 546 281 474   3

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.0053e+07us (= 10053ms, 10.053s)
Satisfaction error: 2
Number of search iterations: 3382
Number of local moves: 1116 (including on plateau: 446)
Number of local minimum: 323 (including on plateau: 73)
Number of resets: 2
Number of restarts: 0

Problem in column 3: 613 592 577 562 599 529 108 155 259 254 168 303 291 264 390 441 376 27 499 528 18 464 372 312 71 30 => the sum is 8802 rather than 8801
Problem in column 5: 531 219 68 72 347 97 195 482 106 43 261 341 276 400 325 319 578 475 431 550 557 11 481 471 575 589 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 364 568  96  24 520 657  21  71 632 566 659 672  25  27 594  38  57  40 519  47 544  52 627  90 628 663
 192 666  50 102 660 645 481 149 620 548 664 180 452  30  77 109 571 230 615 108 139 145 533 103 269 463
 673 539 668  63 423 631 199 104 637 164 134  54  97 289  75  94 532  65  45 601 126 654 515 667 661  91
 531 535 101 170 454 612 641  67 652 599 120 150  93 105  61 131 567  60 564  79 176 674 646 426 469 118
 557 262 156 676 403 525 395 151 559 309 675  76 655 220 127  69 551 239  82  49 198 344 639 161 541 182
 656 618  92 113 591 223 433 442 522 414 121  46 592 171 111 226 545 195  66 244 665  81 512 240 640 242
 400 206 235 211 650 351 346 148 213 547 393 243 648  87 295 200 565 123  14 669 187 140 597 297 507 529
 552 271 209 189 642 575 598 129 270 527 274 133 215 159 137 217 614 287 253 419 157 169 643 219 358 585
 573 154 249 207 526 294 574 222 112  31 383 321 272 174 166 256 602 237 633 193 248 232 496 658 583 405
 457 178 128 307 172 595 610 241 181 570 277 281 301 319 330 354 190 381 356 233 208 231 450 415 448 588
 323 462 228 155 306 278 205 435 334 283 524 201 329 224 246 670 596 197 132 362 359 265 342 671 499 175
 261 276 484 258 238 263 352 335 267 603 290 590 388 303 404 153 389 260 285 394 252 537 341 251 402 225
 332 429 280 299 305 410 236 399 314 367 382 282 390 372 337 317 322 185 488 311 386 440 214 247 464 293
 304 320 413 374 302 286 310 482 379 336 373 333 325 338 284 318 300 254 355 376 183 312 375 188 409 572
 357 350 308 384 407 275 347 434 291  20 369 279 523 298 315  17 397 380 316 401 327 441 345 392 385 443
 245 497 360 427 114 371 343 324 378  51 124 339 451 420 436 349 418 408 417 411 456 430 160 363  85 424
 368 422 489 486 273  99 191 472 340 471 492 141  68 431 398 353 212 504 500 218 391 361 221 406  15 479
 348 453 416 503 510 177  32 508 366 122 288 447 478 387 444 425 194 326 446 543 438 476 119 168 179   8
 162 493 370 505 257 449 167 116 561 163 468 412  37 521 626 460 331 377 487  59 328 560 144 494 184  70
 234 475 455 466  36  22  95 589 530 202 477 514  28 474 470 483  89 467 495 437 550 540  73 365 147  88
 255   2 396 432 158  64 461 538 130 517 227 611  56 609 593 607 143 546 421 578  11 459 142  80 264 501
  74 586 555 636 100  34 173 146  44 513 196 296 580 616 587 629 210 584 554 458 617   1  12 480  48  72
  58   9 528  10  35 216 229 439 125  83 623 502 516 498 428 465  55 625 165 506 473  98 445 608 509 553
  16   4 292 577 518 313 490 604  33  42  41 485  84 649 556 638 107 644 582 534 600 562  13 136  78 203
  18  19 619 622 115 186 259 635  43 204 117 579 536 511 651 647 138 606   5 542 630  39 135 653  26 266
 491   7 624 605  86 250 613 621 268 549 110 634 662 569  53 576 106 581   6  29 152 558  62  23   3 563

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.82838e+06us (= 4828.38ms, 4.82838s)
Wall-clock time (full program): 4.88041e+06us (= 4880.41ms, 4.88041s)
Satisfaction error: 0
Number of search iterations: 1160
Number of local moves: 596 (including on plateau: 211)
Number of local minimum: 68 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  66  17 557   6 150 163 642  19 602 338 654 636  64 669 646  16 438 521 369  55 295 623 667  41 540   7
  82  28  37 633  53 638 644 195 583 168 526 632  84 603 586  18  71 432 470 172 157 627 634  48  89 591
 350  23  15 662 573 575 587  42 382 449 639 641 106 534 626 375  85 181  54  13  44 229 585 353 552 126
  62 464 118  34 555 572 652  20 508  57 549 500  68 530 584  90 407 270  52 121 222 559 655  59 488 605
  87 511 536 546  22 533 544 186 206 228 643 451  46 499 614  63 574 167 400 213 456   8 664  65   1 538
  43 608  26 518 550   3 601 101  70  73 551 545 616 589 543 114 514 368  69 197   9 446 532 156 436 523
 180 493   2 554 563 426 505 173  10 233 497 617 266 590 629 474 461  72 145 354 416 113 515   5 494  14
 215 450 581 392 465 568 326 236 133 125 509 510  35 495 561 124 434 283 136  30 199 171 485 422 418 498
 176 516 565 522 466 527 525 473 174  96 490 208 445 453 454 367  36 178 345 246  80 475 512 109 359   4
 135 423  21 411 496 414 371 261 201 506  11 386 399 313 503 248 481 443  88  60 352 491 477 324 507 479
 162 427  45 467 535 437 207 458 194 403 315 460 415 397 318 463 462 249 431 219 459 378 130  47 234 489
 409 370 372 337 299  32 263 304 373 440 365 402 343 404 363 346 262 447 410 395 226 254 290 334 374 387
 377 316 301 184 366 469 348 320 356 327 333 344 361  12 340 282 430 570 413 429 421 232 257 286 376 351
 405 336 360 480 412 380 312 484 358 321 251 260 398 268 252 341 330 364 303 329 335 362 293 277 305 285
 420 339 311 267 349 287 275 273 442 548 307 401 394 388 384 255 300 604 289 389 235 143 214 391 331 265
 417 309 288 175 292 209 347 383 217 597 673 160 611 237 139 204 191 218 578 433 513 596 258 274 279 203
 606 302 306 444 322 243 188 296 294 381 328 385 276 147 153 556 668 357 196 504 332 648 144 325 161 239
 492 284 269 278 227 323 221 245 624 476 216 317 183 165 247 280  81 441 625 425 600 308 129 660 435 250
 457  56 281 212 297 164 202 393 529 487 238 223 244 256 149 520 240 645 651 455 615 137 225 558 253 314
 630 192 609 190 159  93 406 566 661 620 140 141 198 230 211 132 185 424 428 607 675 128 200 592 179 205
 501 131 542  61 580 658 169 472 547 419 102 241 220 148  83 539 127 486 468 653 193 154 259 666 271 111
 452 656 595 298  77 142 182 564  74 291 119 107 621 138 224 671 635  95 593 439  78 528 115 676 319 112
 618 637 158 110 120 105  38 569 482 519  58  99 657 231  50 483 610 471 187 448 665  94 342 396  92 562
 663  75 628 310  91 103 116 650 531 502 108  29 576 355  86 670  49 264 242 408 517 379  24 647 104 674
 524 672 659 588 612 177  79 478  98  97 146  39 577  27  31 599 189 134 649 594  76 151  40 553 622 390
 272 166 619 122 170 560  51 640 152 100  33  67 598 123  25 571 541 117 210 613 631 567 155 537 582 579

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.98904e+06us (= 4989.04ms, 4.98904s)
Wall-clock time (full program): 5.04262e+06us (= 5042.62ms, 5.04262s)
Satisfaction error: 0
Number of search iterations: 1261
Number of local moves: 643 (including on plateau: 202)
Number of local minimum: 76 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 642 564 656  47  60 170  38 673 107  70 499 632 117 591  97  85 480 124  62 588 464 197 664 127 377 670
 640 533  50  42 147 105  91  73 116 176 497 360 160  40 555 601 671 622 574  69 596 200 645 174 399 666
 146 660 550  55  57  96 156  67 248 113 628 130 162  80 641 357 316 638 526 169 332 606 661 187 637 583
  78 577 129 397  94 566 134 542 102 182 372 535 307  41 517 675 558 475 114 611 518 598 261 126 138 154
  33 214 672  88  37  81  75 569 166 158 599 196 508  89 662 193 544 644  64 635 534 646 520 212 521 141
 467 239 151 155  48 584 516 118 132  44 618 491 504 164 253 171 246 592 406 144 668 594 260 161 581 494
  92 586 252 456 233 172 669 539 184 152 560 313 614 143 514  90 277 322 379  72 287 167 524 192 634 378
 115 431 230 122 125 202 654 503 223 199 384 639 548 163 218 207 658 329 674 319 159 258 589 142 562 148
 204 667  52 295 178  99 256 136 631 201 610 663 242 257 339 210 272 311 402 157 348 183 536 306 627 619
 100 245 216 455 270 195  45 657 249 219 490 269 321 250 236 507 407 386 286 340 350 597 626 194 498 392
 374 454 188 355 232 179 312 488 363 243 479 356 304 208 254 418 649 290 376 325 358 255 396 283 513 149
 302 510 247 238 448 337 191 551 352 206 303 607 273  46 279 485 291 587 301 368 240 343 317 292 300 387
 341 226 344 409 353 280 441 221 259 410 263 388 297 394 489 323 235 274 264 308 298 391 430 333 370 460
 276 349 288  25 472 293 421 417 299 403 268 373 426 278 265 336 487 231 342 414 330 335 315 435 338 385
 266 404 345 381 419 334 364 395 362 434 228 234 530 320 365 420 262 354  82 318 463 429 296  19 453 324
 359 241 186  34 438 423 369 289 425 424 225 511 412 413 400 111 244 443 153 284 466 495 203 401 437 415
  74  59 458 505 382 556 531 411 275 476  93 110 457 474 481  43 189 459 224 309 492 393 389 433 123 405
 552 109 398 469 590 366 449 310  98 572  12  87 101 582 471 267 180 103 527 506 112 529 427 496  36 452
 422 139 314 451 676 580 432 128 445 442 215 522 470 367 177 375  54 500 198 650  29   8 220 595   9 383
 462 285 351 439  17 557 211 408 559 541  49   4 486 478 305 346 205 120 563 447 545 108  26 440 347 502
 523 326 528 617 538  20 515 361 328 537 140 446 468 609  79 593 450 104 428  13   2 168 190 501 251  66
 543  86 477 629 512 578 493 181 390 416 131  15 137 573  83 436 217 600  77 570 461 444  53 484 185  30
 568 133 585 294 648 651 604 173 624 549   7  68  35 616 547 665  51   1  63 575  22 567  16 636  71  32
  56  28  18 576 625 603 532 271 630 465 229 380 222 612 553 647  84  76 643  21  95 135 165 371 282 482
 620 227 633 652 623 121 237 281 621 608 571 145 525 473  10 209 119   3 554 565  27 150  58 602 106  61
 546 509 483 615 579 653  65  39 613 561 331 327 175 540  11  31 655 213 519  24 605   5  14 659   6  23

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00535e+07us (= 10053.5ms, 10.0535s)
Satisfaction error: 2
Number of search iterations: 3073
Number of local moves: 1165 (including on plateau: 571)
Number of local minimum: 231 (including on plateau: 73)
Number of resets: 1
Number of restarts: 0

Problem in row 2: 640 533 50 42 147 105 91 73 116 176 497 360 160 40 555 601 671 622 574 69 596 200 645 174 399 666 => the sum is 8802 rather than 8801
Problem in row 10: 100 245 216 455 270 195 45 657 249 219 490 269 321 250 236 507 407 386 286 340 350 597 626 194 498 392 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 625 516 652 608 104 515  50 117 126 673  28  47  36 658  66 661 607 637 571  60  62 511 105  67  56 643
  24 480 604  63 443 560  74 471 157 622  98  48 168 559  64 628 502  86 554 599  93 581  76 494 668  85
  45 423 654 458  61 555 563 151 430 454 130 285  87 525 115 123 120 110 653 670 235 669 503 667  57  58
 674  82 278  49  34 127 544 100  32 583 109 588 468 173  71 675 418 656 439 646 125 531 603 621 142  33
  25 589 638 633 146  81 245 112 214 200 626  68 375 557 153 472 572 676 635 252 538 389 184 201 167  53
 281 427 193 509  84 613 541 255  80 383 566 172 190 639 158 150 650 103 617 139 665 497 196 186 342 165
 174 548 204 618  90 210 274 171 154 162 248 373 222 517 198 605 671 182 532 645 155 584 220 644 118 282
 218 620 202 659 156 211 176 273 169 212 372 195 246 660 164 561 556 657 672 205 160 662 132 227 208 228
 570 580 324 178 133 203 290 180 188 136 609 587 611 380 325 508 242 518 438 166 304 444 289 149 250 199
 241 636 225 349 258 207 641 299 322 276 280 284 448 320 271 534 485 510 456 344 298 238 251 175 221 232
 351 240 307 268 404 392 233 321 303 339 539 426 597 279 152 642 187 310 540 219 264 436 328 216 236 272
 410 330 306 209 224 185 300 305 318 399 334 513 393 314 386 194 630 297 440 329 323 294 312 256 464 336
 254 326 301 341 396 237 260 394 287 179 387 416 586 524 385 317 283 340 407 327 275 313 346 244 333 343
 230 286 347 431 359 377 134 402 476 206 397 267 363 243 360 462 350 467 257 293 253 366 379 425 369 302
 352 308 378 411 478 335 354 403 435 500  95  78 370 277 355 183 450 412 106 266 449 338 463 415 111 479
 332 362 429 331 414 357 395  14 364 453 229 424 406 434 433  92 381 345 191 315 309 263 483 319 361 365
 413   3 477 259 446 420 441 384 526 116 316 388  69 247 409 376  89 353 292 520 452 234 447 391 296 437
 428 122 521 140 390 367  99 374   7 545 398 495 102 108 400 356 405 231 368 466 451  55 493 523 498 459
 408   8 473 129 577 489 470  73 432 501 249 148  83 486 530 197 337  59 213 442 536  94 512 421 465 469
 487  79 568  13 562 474  52 491 475 504 181 460 269 107 484 288 131 382  51 542 457 114 535  23 505 567
 455 422  18 529 634  12 124 522 371 481 170 592 527  70 482 217  40 161  20 507  26 177 546 632 547 519
 593 121 569 492   1 490 623 663 666 295  11 445 358 145 596 128  30 215   2   9  88 582 533 159 499 488
 598 265  42   6 558 594 550 514 606  97 573 564 223  96 417 262  77  65  72  31 579 226  15 575 565 631
 591 543   4 506 585  39 553 615 461 419 578 270 401 144 528 119 189  91 113 163 552  38 549  54 655  41
  17 348  44 537 624 141 576 602 612  37 614  19 629 147 648  16 261 627 135  46 601 143  10 101 647 619
   5 137  43  75 640 610 239 595 590  29 664 649 574 192 651  35 138 311  27 600 551  22 291 616  21 496

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.00218e+06us (= 4002.18ms, 4.00218s)
Wall-clock time (full program): 4.05484e+06us (= 4054.84ms, 4.05484s)
Satisfaction error: 0
Number of search iterations: 841
Number of local moves: 493 (including on plateau: 158)
Number of local minimum: 43 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 657 436 122 258 591 574 647 113 576 337 646  29  56 588  74 572   9 124  71 186 655 423 441 133  57 426
 121 674 100 114 652 658 232 349 145 548 549  84  37 579 175 456  82 669  91 628 654  73  75 665 350  41
 615 613 236  53 477 273 568  40 543 209  49 138  16 325  12 562 664 631  83 622 468 318 179 612 152 343
 159 384 107 129 519 475 620 524  51 668 643 136 364 422  34 533  26 120 116 553 542 578 672 153  43 230
 106 512 127  30 594  36 577 181 527 659 251 131 667 373 314 525  14 563 167 586 442 506 554  90  55 214
  86 585 462 235 511 154 619 614  99 112 172 193 670 656 101 538  81 640  85 565 447 378 215 132 244 207
 126 520 416 265 536 253  98  89 551 161 421 584 150 606  88 561 140 504  44 502 596 515 139  77 218 641
 183 467 662 231 460 276 625 165 633 123 229 288 592 505 260 267  63 309 675 241 225 547 187 280 102 206
 221 661 617 194 570  97 597 264 202 216 185 234 170 573 180 479 266 676  69 671 228 589 388  45 171 238
 158 452 644 673 507 252 399 338 249 283 142  80 328 398 263 439 407 160 363 222 259 227 336 663 287 272
 290 393 660 298 308 495 476 205 284 306 226 200 330 203 303 651 254 341 245 213 317 481 134 666 248 274
 323 375 195 331 333 335 630 190 419 289 242 649 346 396 326 301 208 431 233 247 376 277 397 340 257 355
 394 188 557 352 366 219 406 390 311 459 342 358 294 329 285 286 224 415 418 299 332 379 196 324 292 386
 370 449 490 296 201 109 304 385 408 281 360 197 428 339 312 291 372 424 316 371 454 345 491 262 268 278
 307 410 374 443 239  54 321 270 409 425 411 310 464 417 497 297 356 381 347 295 466 361 367 433 108  39
 401 427 315 387 220  59  48 395 400 414 105 404 465 351 250 174 319 458 535 261 496 204 430 382 446 455
 513  72 334 354 156 438 211 412 461  22 256 147 448  32 555 348 539 189 599 327 435 162 369 471 437 514
 516  31 420 392 198 469  95 362  67 377 581 380 583 166 429 463 368 501 405 402 148 119 237 212 489 391
 484 275  92 365 182 528 302   2 494 434 556 453 560 141 432 255 550 353 636 478 135  64   7 499 474  50
 413  60 111 493 157 320 359 492 168 616 559 472 587   1 521 125 482  68 534 149  33 293 210 487 582 509
 544 176 444 540 178  27 191 146 217 118 571 488 163 445 451  24 510 486 517 483   6 240 389 357 500 590
 552 184 117 626 322 279  79 440 498 485 595 575 243 151 450 177 603  23  78  35 155   4 546 530 532 522
 545 344 282  17 130 607  93 609 537  13 103 566 173  20 600  96 648  87 271 305 269 602 558 300 623 403
  62  52 526 621  11 529 169 645  28 567  38 518 604 246 598 144 541  76 629 104 137 457 627  15 634 223
 637  19 199 480  70 650  25 601 503 564 508 569  58 473 653 143 470   8 632  46   3 128  47  65 639 611
  18  42 192 624 313 635 110 580  21 115  61 618   5  66 638  94 605 164 642  10 523 531 610 608 593 383

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.32234e+06us (= 5322.34ms, 5.32234s)
Wall-clock time (full program): 5.37497e+06us (= 5374.97ms, 5.37497s)
Satisfaction error: 0
Number of search iterations: 1351
Number of local moves: 696 (including on plateau: 293)
Number of local minimum: 98 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  74 629 164  54 577 506  88 600 397 259 141 108 521 665  48 481 636  49 621  59 589 226 575 100  75 559
 120 643 458 119  77 656  84 566 476 109  46  85 395 654 122 388  82 132 632 478 634 616 435  72  61 661
 106 625 218 182 187 310 561 262 222 104  45 190 468 602 114 671 117 592 123 128 658 564 509 676  97 470
  25  60  78 673  37 553  86 241 620 278 138 131 607 110 588 170 118 507 601 134 608 510 641 485 158 644
 146 129 416  83 649 669 210 124 570 466 105 102 674 135 544 112 161 386 635 445 670 436 369 184 232 149
 174 667 155 172 253 675 212  43 571 204 133 126 652 672 257 456 623 568 427  40 251 376 565 223 199 107
 186 143 451 294  71 350 595 121 145 198 215 272 514 191 585 206 127 344 163 660 492 465 542 655 169 647
 150 139 224  98 173 662 413 115 140 289 137 178 582  81 615 167 664 381 666  99 491 557 659 548 335 238
 214 159 474 165 306 342 619 153 593 657 228 277 617 116 211 240 156 653 225 201 483 460 573 233 166 280
 325 152 430 157 266 324 604 305 237 258 285 229 203 426 323 332 605 261 216 234 249 560 618 651 260 291
 193 400 315 303 351 356 213 663 358 281 296 207 348 248 314 175 387 390 275 370 567 410 282 383 394 322
 482 331 628 269 371 360 668 290 270 301 308 365 337 372 265 307 268 327 230 180 245 302 459 200 367 299
 243 293 469 316 311 519 288 364 402 263 431 313 349 295 317 547 136 368 247 380 333 274 286 375 328 354
 362 393 239 330 221  18 298 321 287 399 319 446 355 404 374 373 438 340 406 531 217 457 396 363 312 202
 441 309 392 304 415 209 326 442 418 192 338 255 347 292 352 403 297 283 453 378 334 346 417 408 242 208
 447 444  51 512 448 197 196 353 549 398 455 401 412  31 384  69 414 329 464  91 341 254 385 336 433 407
 489 503 318 366 345 195 168 411 467  41 425 160 284 439 422 511 389  35 535 551 176  56   9 501 471 534
 361 359 522 513 405 479 488 391  32 437 463 452  12 461  55 276 497 432  65 504 177 227  33 188 499 473
 343 454 279 429 493 171 477  39 440 443 494 498  64 563 357 527  66  22 377 552 236 271 183  70 421 532
 536 614 194 516 556  62  68 472 490 250 434 486 125 300 520   2 487 423 539  14 162  30  89 246 646 540
 525 147 496 526 555 264 273 579 252 517 495 515 103 462  80  93 424  44  17 508 578 181  50 583 528   6
 450  42 580 545   1 419 379 529 420 576 484 569 111 624 449  21 533 148  10 594  20  53  92  96 538 518
 550 546  94 648 480  95 244 554  29 541 558 530 185 612 113 500 320  90 505 428  73 409   8 596  36  57
 633 562  27 574 144 205 130 627  19 640 609 645 154   7 475 599 256 502 189 603  67 101 339   4 611  79
 587  34 543  47 537  26 590  16  15  58 581 631 231  11 650 584 524 598 142 626  63 637 235   3 613 219
 639  24 586 606 572 179 523 220 382 642 638 630 151  28 267 591  76 597  38  13  87  23  52 622 610   5

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.20606e+06us (= 4206.06ms, 4.20606s)
Wall-clock time (full program): 4.25938e+06us (= 4259.38ms, 4.25938s)
Satisfaction error: 0
Number of search iterations: 912
Number of local moves: 542 (including on plateau: 174)
Number of local minimum: 40 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 124  79 641 633 117 635  67 539 544 370  19  66 127 446 553 245 632  42 569 628 188  90  72 668  70 637
 147 373  88 651 622 650 262 660 112 467 128  24  55 612 480  28 543 102  33 636 242 580 104 160 595 447
 638 675 442 286  91 438  50 532  92 590  47  85  84 550 413  40 671 108 639 623 162 107  75 603 101 659
 330 411  80 634 256 353 249 566  59 581 154 561 131 228 520 176 169  21 502 558 174 617 653 105  68 645
  87 215  57 178 524 193 170 510 318 654 126 585  96 613 672  37 607 148 448 560  89 662 177 172 279 624
 557 163 216  83 132 661 150 644 138 352  36 231 159 596 587 116 476 271 548 511 673 646 161 155  51 488
 664 209 123 335 125 166 669 667 196 428 329  38 168 505 619 129 562 264 415 598  93 582  69 451 171 226
 232 350 144 115 276 493 473 674 253 601 261 310 313 602 206 175 220 431 657 495 173 549 202 269  94 233
 295 441 240 195 212 237 251 460 410 620 436 158 331 294 290 321 530 627 485 571 348 111 186 187 145 420
 265 496 272 311 250 537 225 517 322 383 371 229 301 575 376 236 388 434 243 402 223 404 201 268 324 248
 113 486 670 241 308 498 281 412 663 194 316 291 239 523 305 414 198 118 211 525 366 319 303 238 299 270
 222 214 246 244 465 379 283 459 541 533 419 398 277 247 463 207 221 387 287 576 309 300 406 337 182 199
 258 418 230 340 203 386 263 259 472 356 338 440 183 293 302 427 396 367 393 468 179 339 334 469 471 217
 394 325 361 360 190 274 347 381 332 363 355 346 327 307 390  17 429 481 400 189 461 384 349 506 266 267
 430 365 317 343 273 357 285 213 487 328 377 110 345 378 342 304 374 380 282 284 351 359 364 424 306 423
 257 252 358 134 484 320 401 219 315 234 205 458 416 491 235 375 490 391 449 180 372  86 421 535 369 354
 445 140 312 514 483 344 443  76 368 157 474 399 289 227 120 526 278 336 389 152 297 426 570  77 504 455
 499 466 519 534 479 457 326 143 260  97 547 323 450 151  22 482 556   9  26  82 422 462 453 494 478  64
 615 224 452 652   4 382 435 280 333  41 470 439 521 165  32 563 164 559 149  74 464   2 676 403 518 184
 568 292 579 405 513  61  23 208 314 433 456 385 417 167  63 515  95 500  18 296 572 564 437  15 408 497
 625 153 552 489 444  98 522  49 392  60  34 567 597  65 536 629 362 341 218  53 137 507  99 454 618 200
  44 298 255 501   1 109 643 136  25  39 583 614 512 139 254 591 130 395 475  56 658 197 648 551 538 409
 432 555 407   8 611 516 665  16 492 106 594   7 545 210 185 425  81 397  78  43 616 114 578 542 573   5
 527 565  46  30 546 141 529 119 666  31 606 528 631 103 509 600  14 503 156  62 477  52  12 135 592 621
  20  10 608 574 604  45 656  27  48 275 531 610 647 122 146 593  73 584 191 121 655 288 609 554 204   6
  13 626 586  11 588  71 133  35 649 508 589 599 640 192 181 630 142 605 540  58 100  54 642  29 577   3

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.80145e+06us (= 4801.45ms, 4.80145s)
Wall-clock time (full program): 4.85385e+06us (= 4853.85ms, 4.85385s)
Satisfaction error: 0
Number of search iterations: 1163
Number of local moves: 582 (including on plateau: 178)
Number of local minimum: 63 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   2 530   3  10 153 382 655 636 653 640 641  46 521 540 166  30 627 173 593 442 118 367  57 650 165   1
 167  22 128 615 156 648 140 603 574 514 616 611 585  97  47 150 578 438  85  68  19 597  48 623   7 665
 622  36  44  84 187 580 632 247 600 672 621  32 630 193 141  33 639 125 253 360 587 570  61 300 336 216
 575 207 155 255 288 561 572   9 581 265 564  20 555 566 233 225 577 550  96 340  38 576 468 371  92  62
 536 152 549 117 272 112 498 535 463 523  86 667 291 598 122 107 610  45  69 113 462 424 119 538 662 132
 638  89 104  72 214 635 508 558 584 518 524 599 260 553 215 109 142 182 195 285 487 236 278 542 219  55
 569  95 493  90 539 488  66 232 642 497 447 589 151 507  18 459 525 529 266 279 513  56  75 519  27 130
 479 201 129 452  88 450 594 429 449 467 238 670 126 543  39 526 548 460  16 470 477 426 185 103 210  26
 486 511 505 176 159 423 475 430  28 408 190   8 516 502 370 271 461 457 437 432  13 440 453  40 194 416
 418 482 388 131 100 454 501 344 395 402 204 102  12 286  58 406  87 427 443 483 464 422 490 532 342 428
 372 391 419 439 228 612 425 628 114 312 343  23  50 390 258 199 451   4 431 368 392 385 354 299 381 533
 410 400 455 413  59 235 397 345  17 337 120 676 290 276 295 401 399 284 510 421 386 379 417 123 320 436
 349 415 377 374 242 403 355 303 333 309 138 626 373 384 301 347 310 346 305 249 434  21 361 362 375 409
 269 331 296 376 592 332 352 520 327 531 396 671 145 339  15 363 404   6 319 358 365 357 208 229 334 366
 323 304 251 257 643 625 318 348 293 245 306 472 297 329 656 324 292 241 280 196 551 481 124  49 328 268
 298 322 212 308  91 282 240 364 359 273 660 162 287 209 563 652 148 405 613 591 220 316 224 541 239 222
 189 256 197 302 503 314 380 264 218 313 527 631 394 283 562 398 307 369 509 147 179 250 263  35 465 546
 203 177 254 547 669 289 311 115 602 231 174 633 192 512 586 243  99 246 573 186 261 601 205 139 412 341
 221 473 664 144 624 200 262 657  93 484 191 217 658  82 495 213 105 565 275 184 230 281 491 183 353 456
 227 315 583 528 500 211 448 164 198 237 223 172 492 149 557 506 160 588 476 134 226 171 537 127 383 489
 458  63 270 393 411 202 206 133 378 168 356 180 471 248 582 474 267  74 675 157 661 188 666 169 674 277
 158 494 645 673 335 175  64 552 101 154 420 110 478  76 554  53 499 651 637 170 161 244 614 106 181 496
 137 663 629 620 567  79 135   5 274  67 606  65 178 387 485 517  11 604  14 644  94  51 330 568 605 466
 350 595  41 619 515  24 136  34 163  83 116 121 338 108 596 654 435 389 146 608 294 259 617 649 407 504
 111 668 351 326 252  54  60 321 325  81  52 618  78 571 446 607  77  98  29 469 579 560 634 445 444 544
 234 609 659 480 414  31  71  25  37  70  42  80 433  73 441 534  43 545 556 647 590 143 522 559 646 317

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00495e+07us (= 10049.5ms, 10.0495s)
Satisfaction error: 2
Number of search iterations: 3261
Number of local moves: 1046 (including on plateau: 470)
Number of local minimum: 260 (including on plateau: 62)
Number of resets: 2
Number of restarts: 0

Problem in row 5: 536 152 549 117 272 112 498 535 463 523 86 667 291 598 122 107 610 45 69 113 462 424 119 538 662 132 => the sum is 8802 rather than 8801
Problem in row 25: 111 668 351 326 252 54 60 321 325 81 52 618 78 571 446 607 77 98 29 469 579 560 634 445 444 544 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 302 173 628 632 274 204 472 126 589 577 364 416  87 221  18 665 159 197 309 640 257 407 165 549 104 266
 158  13 116 607 153 588 636  83 528 240  52 160 479  75 523 618  26 581 187 575 135 590  60 651 338 629
 231  22  23  56  53 541 120 616 570 612  43  50 672 284 306 671 543 531 574 594 250 548  59  44 241 547
 100 355 412 139  94 662 487 653 496 593 443 584 601  68 374 505  17 512  33   2 166  30 591 535 339  10
  41 147 514  90 291 530 538 334 534 566 518 152 525  45 150 555   4  74 277 366 513 357  20 440 621 599
 232 163 610 445 124  21 550 300 605 370 392 138 149  70 252 458 450 638  99 485  89 376 403 411 455 516
  86 551 363 480  84 488  58 336 380 508 592 117 236 132 203 563 578 182 244   8 489 208 319 561 378 657
  54 119 444 452 571 556 503  11  61 502 428 298 595 146 115 303 393 539 110 495 522 130 109 558 425 362
 506 466 627 312 184 438 486 565   1 451 271 220 434 214  39 476  62  73 475 398 406  97 446 520 253 381
 469 449 290 164 579 239 337 390 545  16 367 457 625 227 180 414 245 333 442 459  93  31  78 437 462 473
   7 497 368 371 280 460 436  82   3 175 572 325 418 283 463 415 140 269 573 413 454 385 562  19 305 526
 409 210 162 276 493 272 498 611 484 256  92 448 349 417 389 346 178 383 388 322 354 429 260 328 268 179
 626 465 296 335 348 301 365 379 515 275 341 251 174 288 238  66 263 663 395  65 353 343 470 384 310 292
 233 148 467 324 433 352 315 524 396 394 350 186 342 453 387 344 408 215 295 267 307 492 327 377 304 161
 297 603 405 369 372 308 318 185 431 224 281 410  29 279 299 332 171 282 654 424 329 213 345 199 642 400
 404 358 255 254 423 373 504 582 248 313 435 212 286 430  98 580 649 447 242 225 265 226 316 285  80 311
 351 293 399 630 464 340 218 259   5 631 347 494 441 660 229  85 170 264   6 317 397 567 262 207 258 507
 102 323 289 432 172 196 200 249 273 360 125 637 243  32 604 359 481 652 222 183 617 536 468 235 667 144
 668 217 181 188 606 219 402 129 209  79 142 169  88 670 553  72 537 401 330 261 552 490 669 190 532 247
 634 576  36 151 421 234   9 596 569 314 194 278 191 655 560 613 529 391 133 609 111 382  27 326 155 107
 500 294 375 105 554 666 456 427 176 201 157 614 230  81 499  95 156 195 619 206 533  96 656 141 661 108
 137 583  91 597 386  42 223 361 633 205 331 598 320 615 546 114 471 192 112 461 585 647 211 113 106 121
 586 510 167 650 356 559  47 131  28  24 608  51 228 675 568  25 620 128 643 635 189 426 659  63 103 122
 587 198 674 542 474  71 509 664  57 202 544 644 645 540 123  12 519  34 477  67 216 127 168 623  49  35
 517 420 118  55 478  77  38  15 419 673 154 270 177 639 646 101 511 143 321 287 136 246 527 557 676 600
 564 648 491 145 134  64  76 193  46  40 658 622 237 602 439  14 521 482 641  37 483 422 624  48  69 501

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00507e+07us (= 10050.7ms, 10.0507s)
Satisfaction error: 1
Number of search iterations: 4550
Number of local moves: 1299 (including on plateau: 587)
Number of local minimum: 381 (including on plateau: 67)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 1: 266 338 44 591 357 89 8 110 73 245 415 389 288 342 410 435 631 273 129 9 666 386 650 674 420 564 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 635  26 148 326 659 633 606 174  42  11 624 518 572 156 645 524 388 560 270 607  31   1   2 611  28   4
 598 205 127 336 625 662 620  68  15 121 653 629 277 129 599 153  10 649 199 516 499 366 122 119   3 501
   9 315 279 369 616 627 507 550 449 128  76  81 600  63 632 413 408  13 569 623  78 477 445 330 138   6
 619 484 146 292 584 591 555 139  18 589 476  82 197 152 520 145  16 470 167 383 395  38 663 462 259 359
 613 602 494 505  29 486 334  69 180 579 450 312 211  97 158  98 564 451  39 257 603  27 481 348 232 582
 509 630 100 522 626  86 246 113 103 573 157 432 496 668 557  93 464 181  14 343  23 240 593 540 245 247
 521 498 231 472 307 389 123 106 282 529 448  20 386 387 258 417 333 407  60 541 537 195 495  21 164 674
 526 535  25  17 497 512 380  47 200 425 440 354  74  80 490 176 562 622 565  70 543 329 350 351 460 171
 492 468 224 278 548 473 339 404 349 596 538  73 295 117 360 124 340  43 335 239 500  65 345 375 368 513
 325 453 159 370 444 355 519 183 272 151 168 567  96 416 363 426 423 161 373 318 108 186 506 502 583 374
 142 670  94 458 415 504 361  19 248 433 676 317 438 436 428  12 331 390 643  56 222 322 275 467 411  33
 263 478 409 424 414 290 527 324 229 536 447 218 398 401 427 193 261 517 353  62 581 267 281  75 310 116
 396 321 289 605 382 109 403 154 225 474 304 341  66 669 238  87 280 454 405 475 469 358 365 297 319 316
 342 381 215 244 288 162 346 410 590 299  41 328 483 442 286 463 337 443 226 306 587 255 471 367 178 311
 125 559 356 213 314 303 419 435 384 439 233 227 293 207 236 291 327 309 385 332 412 459 377 466 338 362
 252 271 394 209 323 208  30 144 434 392 552 320 638 265  45 544 137 241 285 554 175 617 194 644 400 533
 235  22 673 250 308 546  64 420 508 264 253 298 301 615 274 266 551 249 184 493 251 577 287 269 182 461
 300 296 391 553 347 243 254 230 430 376 172 441 268 556 452 196 190 656 217 284  37 592   8 313 510 489
 185 418 604 431 177 221 283 658 661 357 206 655 147  67 187 631  99 189 646 437 140  51 539 105 488 219
 223  50 665 155 228 446 654 511 242 260 179 657 305 491 220 485 201 198 397 372  59 457 130 636 378 202
  53 166 651 294  95  24  61 628 421 132 610 120 558 482 102 637 580 111 133 276 571 666 256 191 639 344
 216  88 650 429  84 455 150 597 487  91 170 618 515  32 110 575  36 163 563 465 634 379 528 169 545  52
 210 104 479 594  55 118  89 664 237 160 214 399 393 660  35 273 402 514 523 588 647 107 561 135 406 234
 652 126 204  79 134 188  72 525 578 141 609 115  77 531  44 534 585 672 601 101 422 480  85   5 570 671
  58 595 262 203  90 136 667 621 641 614  57 530 143 114 549 503 612  92 566  49 165 648  71 456   7 352
 302  40 532 173 212  34 192 608 576 131  48 149 574 568 586 542 364  46  83  54 112 642 371 547 640 675

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.77107e+06us (= 7771.07ms, 7.77107s)
Wall-clock time (full program): 7.82351e+06us (= 7823.51ms, 7.82351s)
Satisfaction error: 0
Number of search iterations: 2741
Number of local moves: 796 (including on plateau: 280)
Number of local minimum: 236 (including on plateau: 27)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 561 628 651 169 571 141 214 155 578 109  33 593 660  78  46 569 124 666 559 322  88  71  44  55 609 507
 661 377 485 675 674 676 117  87 458  70 119  65 635  95 189  40 462 409 577 310  83  50 648  48 421 370
  63 524 497 200  85 118 134 133 673 105 190 587 650 454  58 436 173 349 411 478 195 248 206 672 505 657
  35 563 584 358 297 110  79 663 104  76  84 623 637  64 135 208 192 586 638 156  92  38 669 668 631 511
 185 579 604 132 667 187 544  69 555 115 340 630 543 157  61 481  72 429 662 153  90 624  98  60 162 602
 251 343 432 140 516 664 160  97 665 196  94  99 480 136  43 492 113 575 583 496 670 139 116 120 647 534
 128 413 659 151 656 193 542 201 567  74  75 203 242 254 148 621 596 289 611 258 108 227 620 199 545 221
 284 407 531 212 198 122 177 646 253 204 233 127 570 309 294 554 581 267 501 130 158  77 629 131 566 640
 154 351 494 302 166 215 344 652 171 211 321 230 209 152 288 595 644 293 580 167 174 137 582 186 530 653
 235 328 368 331 106 114 613 163 266 655 225 329 191 265 275 573 264 606 367 290 229 250 506 381 449 422
 218 448 443 255 323 271 256 194 408 471 453 268 320 269 352 347 262 245 518 300 338 410 495 295 316 326
 325 373 276 307 202 226 311 348 272 164 607 341 145 362 476 334 397 308 513 396 547 335 238 303 312 383
 337 339 282 261 283 395 387 365 420 406 390 415 291 514 301 363 350 424 313 123 273 356 431 207 353 222
 355 473 345 434 259 274 213 450 366 314 232 385 241 333 249 423 342 457 304 403 318 298 361 228 299 445
 336 244   6 441 239  42 369 360 459 401 474 414 364 491 437   4 523 319 252 402 287 464 324 463 306 380
 435 260 100 405 393 433 412 416 468  23   1 379 425 521 330 372 371 504 247  52 466 391 188 527 419 263
 428  16 243  49 537 533 181 332 455 292 603 346 522 488 465 176 183 223  57 526 359 398 197 529 386 277
 446  34  89 278 427 461 430 392 508 479 384 515 280 357 490 149  31  24 147 477 535 536 440 426 438  28
 375 394 107 417 374 546 472  45 205 399 467 483  56 489 525  73 482 281  53 645 444 498 170 539 161 101
 556 234 354 389 512 486 182 493  82 643 475 418 172 144  80 143 520 553 146   7 551 541  37 502 285 296
 589 270   8 538  93  86 447 129 219 550 456 615  59 590 568 378 470 625 180  66 517 558 178 400   2 210
 560 184  30 564  25 588 376 460   9 605 612  14 510 627 500 317 179 126 138 327 548  12 565 532 388   5
 616 159 220  10 404 452 246 562  41 592 614 576 451 439 639 216  27  39 175 549  36 585 382 503  11 257
 591 150 654 634  81 642 487 600 142 633 231  18  26 574 632  17 557 121  91 528 540 671  47  13  19 102
  62 112 236 552 617 168 509 484 240 442 469 125  68 610 626 279 237  51  67 618 519 601 608 315  21 165
  15 598 103 597  96 658 599 305 217 572 619   3  54  29 594 641 649  32 111 622 636 286  22 499  20 224

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.49545e+06us (= 4495.45ms, 4.49545s)
Wall-clock time (full program): 4.54791e+06us (= 4547.91ms, 4.54791s)
Satisfaction error: 0
Number of search iterations: 1076
Number of local moves: 537 (including on plateau: 163)
Number of local minimum: 56 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 652  15 620 152   3 345 249  88 574 166 610 634 240  76  60 148 501 443 644   9 213 541 603 580 624  11
 535   6 640  64 614 136 512  42 587  47 285 588 642 244  14 104 144 597 579 577 612 419 632 122  46  13
 567 563 516 310 319   8 550 458 117 241 522 553  94  52 141  80 191 601 530 571  27 586 595  10 573  26
 540 102 600 627 593 128 628 135 234  66 402 656 631 248  48   7  29 569 329  23 113 542  24 513 566 448
 539  95 499 131  12  22 506  43 447 479 498 471 200 111 216 596  17 616 331 552 157  38 464 557 626 578
   5 167 453 110 264   4 549 158 374 126 408 584 153 129 454 317  86 551 507 436 503 365 555 455 599 489
 592  31 477  70 218   1  18 118 519 534 581 476 201  34  30 545 106 474 456  21 497 518 510 570 615 589
 305 112 532  71 487 496 490  97 473 299  77 441 204 162 526 425 189 382  44 438  41 583 437 480 450 560
 400  92 346  72 495 478 605 195 292 138 392 434 103 185 140 463 175  33 439 531 421 544 422 449 469 488
 548 411 360 302 147 391 352 460  58  16 192  57 108 332 475 442 295 598 428 417 381 389 393 467 350 432
 523 446 486  36  35 502 286 340 427 394 219 404  87 221 414  83 273 444 341 451 426 347 482 459 287 388
 217 397 288 505 335 353 306 265 326  19 314 379 376 406 324 293 289 440 330 383 275 424 364 316 457 420
 492 398 409 351 395 327 297 429 366 282 356 291 368 296 413 370 139 270   2 304 431 361 336 472 283 363
 371 325 246 220 322 277 337 407 251 423 517 470 334 328 284 433 342 238 639 257 377 290 274 271 261 307
 349 380 254 209 621 671 256 309 343 255 430 659 252 250 229 333 527 247 308 159 321 385 227 315 300 212
 279 358 298 378 405 177 262 176 318 369 663 186 500 237 225 528 401 386 562 242 357 278 312 259 410 235
 187 245 190 536 625 266 183 208 591 673 582 197 354 462 311 294 515 313 119 211 676 232 228 163 168 272
 179 253 198 572 452 267 281 263 667 338 461 301 649 608 617 184 547 160 142 303 233 178 348 143 269 188
 260 607 207 633 355 107 320 675 223 520 585 231 651 641 172 226 239 145 590 215 214 182 202 203 193 205
 156 645  50 384 375 559 655 511 130 236 151 164 653 604 564 280 561 416 155 662 121 165 150 170 199  85
  78 538 173 276 435 672 206 485 154 373 268 114 418 661 533 367 622 194 362 105 657  61 180 669  84 116
 123 493  53 558 339 635 109 514 171 372  32 146 222 399 668 396 623 133 174 403 670 654  25 230  65 594
  79 637  37 664 224 415 101 611 390 619  62  73 565 468 504 210 483 181 521 196 445 132 465  89 243 387
  96 524  75 556 125 525 554 609 575 618  20  56 359 543 650 494 258 169 127 636 466  63 481  91  49  82
  55 323 660 602 508 509 161 576  45 630 115  99 344 491 124 646 643 120  68  51 100 484  54 658  69 666
 674 638 134 412  98 529  28 629 149 568  59 137  93 613 665 537 606  81  74 648  67  40  39  90 546 647

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.0053e+07us (= 10053ms, 10.053s)
Satisfaction error: 2
Number of search iterations: 3154
Number of local moves: 1140 (including on plateau: 491)
Number of local minimum: 275 (including on plateau: 67)
Number of resets: 1
Number of restarts: 0

Problem in column 6: 345 136 8 128 22 4 1 496 478 391 502 353 327 277 671 177 266 267 107 559 672 635 415 525 509 529 => the sum is 8800 rather than 8801
Problem in column 23: 603 632 595 24 464 555 510 437 422 393 482 364 336 274 227 312 228 348 202 150 180 25 465 481 54 39 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 165 553  91 594 152 635  76 125 552 392  54 656 630 159 606 632 620 584 485 627  13  84 217  72  19   8
 389  15  94  57 263 614 297  16 598 382 176 658 570 186 646  73 629 522 547 155  12 615 617 318 141 211
 177 593 215 641 500 623 289   5  23 451   2 503 604  21 628 467 650  46  33 605 544 566 372  52 144  47
 180 521  50  64 601  97 224 105 498 275  38 599 556  69 535   1 634 569 456 581 554 595  89 585 182 143
 235 602 239 589   6 496  98  55  77 119  31 461 523 178 489 502 532 528 518 596 564 237 324 582 114 106
 510 578  65 610 504 517  34  43 104 195  59 548 476  82 571 555 572 609 538 533   4  20 233 590 109 142
   7 454  60 652 530 587  26 223 579  36 148 507 557  24 540 525  22 412 108  14 329 574 539 396 464 488
  32 400  63 453 474 573  29 312 406 490 323 649 422 463 560 247 480 414  10 438 475 369 240  11 283 185
  93 563 236 252 493 546 174 203 469  87 258 559 492 325 415 164 447   9 458 481 483 484 397 497  17 199
 536 424 226 413 294   3 260 259 471 160 107 244 542 379  18 444 448 432 487 576 420 445 373 262 246 332
 116 394 238 431 636 462 267 256 567  48 435 328 417 404 446  79 342 520 350 218 524 418 138 326 349  92
 231 370 221 378 319 407 264 242 450 452 376 295 495 351 266 383 251 337  78 430 368 386 395 315 333 408
 346 302 170 419 305 278 310 468 293 391 345 254 210 362 398 429 465 232 352 341 340 331 360 357 385 358
 287 482 384 387 440 327 307 288 191 296 356 228 402 388 516 304 220 311 284 343 411 334 375 330 272 338
 659 273 436 425 433 198 393 381 298 366 359 354 206 270 348 292 335 175 306 361 317 457 134 336 380 309
 541 276 363 173 131 168 499 316 390 410 405 344 367 339 314 640 299 158 268 265 320 241 618 303 216 437
 665 101 565 219 181 321 558 501 253 506 179 355 212 187 374 308 313 222 207 472 243 282 527 250 399 401
 245 163 428 172 135 269 592 416 670 645 513 132 145 505 291 205 154 322 637 113 110 214 473 300 466 486
 531 149 653 230 285 156 442 671 301 591 608 162  85 669 213 129 261 280 537  75  40 279 534 209 511 200
 526 208 426 112 204 167 660 449 286 577 663 137 277 647 190 171 271 519 249 365 196  95 118 120 580 588
 494 353 515  74 189 673 626 613 150 470 512 227  96 551 136 274  56 194 124 248 290 100 364 188 622 662
 460 648 459 491 675 201 478 644 111  28 479 257 121 603  44  51  27 140 377 126 434 664  37 103 477 666
 183 147 642 612 169 202 550 607 616 197 643  30 184 638  83 611 133 122 139  61 166  99 427 655 651 234
 409  70 676  80 193  88 281 423 225 255 657 151 146 403  86 529  42  68 509 639 421 568 102 672 508 600
 123 117 619 192  58  66 624 583  62 543 561 128  25  53  49 633 157 455 654  71 549 229 668 625 371 586
 661  45 667  81 631 127 443 597 161 439 514  35  41 545  39 153 441 621  90  67 674 115 130 347 562 575

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.3699e+06us (= 4369.9ms, 4.3699s)
Wall-clock time (full program): 4.42223e+06us (= 4422.23ms, 4.42223s)
Satisfaction error: 0
Number of search iterations: 978
Number of local moves: 617 (including on plateau: 216)
Number of local minimum: 44 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 614 657 470 547 280 477 605 299 534  34 288 411  39 663  58 585 634 499 358 137 112 165  89  29  82 135
 289 644 115 114 536 518 334  20 556 119  91 603 505 588 393 307 622 385 100 616 142 218 167  50  93 676
 666 651  90  67 506 531  76  42 599 258  92 538 171 670 290 129 131 606 674  41  98 394 359 659  87 376
 474  46  97 577 586 543 647 232 504 261  79 669 234 526 642  31 664  37 279  43 525 195 117 127  83 583
 639 132 148 235 387 212 311  60 570 205 172 527  53 658 521 524  96 557 257 121 177 638 539 162 260 640
 277 143  95 241 455 655 567 178 495 396 425 102  21 637 155 253 403 667  70  68 386 619 481 652 194 166
 434  75 156 146 191 183 550 186 459 340 208 229  28 554 587 138 374 239 643 645 349  52 617 660 199 559
 580 353 104 246 450 516 607 564 533  74 187 254 245 209 203 153 545 508  99 219 511 158 444 348 107 584
 589 200 623 169 523 671 363 118 400 238 248 661 149 154 546 231 448 635   5 161 226 225 464 259 122 373
 230 255 414 344 571 673 268 111 236 190 250 300 296 202 582 544 646 151 321 496 240 333 457 314 251 126
 565 159 120 196 401 329 256 105 631 249 537 139 343 108 592 665 214 412 176 228 264 384 625 313 362 428
 282 247 216 233 242 294 320 501 513 555 157 141 354 368 672 395 298 309 269 379 271 369 615 465  45 291
 150 346 310 573 252 552 335 375 284 278 297 338 274 179 608 285 301 541 332 207 237 345 318 388 472 224
 418 370 355 458 188 286  72 489 436 656 331 626  36  78  27 123 193 520 453 352 305 350 287 562 404 426
 262 456 435  14 173 449 272 337 206 110 438  30 443 482 515 446 389  16 512 569 407 390 447 365 312 326
 415 351 497 263  26 601 433 480 125 429  64 317 383 461 175 402 357 632 303 283 275 371 360 323 409  66
  80 397 420 293 452  47 566 424 164   6 517 479 440 392  40 549 341 372 330 432 406 405 192 266 469 322
 441 507  15 471 134 103 377 551  38 467 568 498 487 356 510 327 380   1 442 430 221 514 133 170 478 182
 417 243 201 145 530  94 366 109  77 423 460 391 540 490 306 419 342  33 398 410 468 535 147 431 427 399
 163 316 485 181 319  59 641 486 184 483 367 597 422 624 500 611  35  24  48 144 522 529 244 215 548  54
 174 475 484 610 210 220  12 553   2 598 445  61 648 140   4 295 324 339 451 302 473 416 265 437 590 273
  19 304 579 558 308  13 113 627 198 675 382  57 509  63  49 503 364 572 502 463 276 124 488  71 576 408
  86 222 578 462 618 130 180  23   9 197 574 361 466 101 292 136 628  32 636 494 413 491   8 575 561 528
 336  22 594 668  55 106 128 620 227 629 519  51 630  56 381   7  10 560  11 633 581 454 439 270 654 160
  85 609 604 378 223 328 213 662 653 281 563 217 593  25  84 267  18  81 600 315 591  62 347  88 421 493
 116 621 596 612 185 211 189 649 168 650 542 204 492  17  69 476  44  73 532 613 325  65 152 602 595   3

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00029e+07us (= 10002.9ms, 10.0029s)
Wall-clock time (full program): 1.00555e+07us (= 10055.5ms, 10.0555s)
Satisfaction error: 1
Number of search iterations: 3154
Number of local moves: 1130 (including on plateau: 502)
Number of local minimum: 271 (including on plateau: 55)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 1: 135 93 659 117 638 386 645 99 635 646 665 672 179 36 30 64 6 38 109 641 220 308 462 594 609 116 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   6 604 269 640  15 623 631 653  76 624 611 161 616  64   3 660 104  72 667 143  84  93 135 644  40 563
  24  21 169 671  78 669 647 634 603 630  74 137 642 595  23 285  41 229 364 626 613  46 152 619  54 155
 605 317   1 578  56 606 141 234 622 635 103 532 520 111  16 618 133  11 556 559 593  18 113 463 581  79
 568  63 153   4 108 577 560 398 213 594  82 204 609  45 533 600  19  33 507 538 549  69 572 612 582   9
 583 275  99 587   2 608 562 172  39 592  22  12 461  85 540 570   8 390 526 511 509  81  44 546 518 459
 552  95 106 475 114 170 501 207 567 575  90 202 553 488  97 561 473 484 437 571 178 115  68 495 539  88
 543 328  98 470 162  13  60  32 524 541 497 512 196 565 491 504 480  20 397  14 519 482 171 476 462 244
 469 440 531 400 273 209 525 267  61 521 506  89 329 517 444 431 422 236  17 458  94  87  67 456 466 486
 424  59 474 498  47 419 454 158 465 550 258 259 173 432 369 414 453 128 243 460  38 175 436 535 435 445
 413 493 409 487 145 446 415 190 485  10 455 410 142 481 412 514   7 271  91 464  62 248 439 584 386 342
 438 388 116 359 279 405 416 428 150 407 323 408 307 242 447 399 403 182 391 452 355 233 450 281 262 280
 423  71 442 527   5 427 290 266 366 332 350 305 448 394 393 349 124 451 433 360 163 362 392 356 396 376
 346 378 389 402 375 367 287 344 425 247 337 341 295 327 312 272 319 373 313 300 374 357 301 343 361 316
 379 401 353 331 352 421 371 311 385 370 368 377 324 358 289 283 347 306 291 339 286 278 309 334 320 318
 381 256 284 297 335 348 340 574 217 333 325 443 528 383 537 263 321 270 276 296 288 384 293 230 322 277
 241 576 304 210 467 227 315 551 160 252 508 503 411 219 206 663 303 264 265 224 294 483 282 251 314 308
 167 628 225 245 534 345 226 554 330 292 254 548 471 235 221 240 657 382 253 302 220 500 228 310 188 246
 211 516 645 237 515 261 184 298 676 122 192 615 625 165 250 257 201 651 274 194 336 441 232 299 166 238
 218 195 649 255 672 522 260 621 185 239 249 123 157 215 203 205 380 479 670 197 198 494 502 164 176 573
 200 181 536  83 557 547 668 338 149 168 639 144 351 212 187 120 457 569 130 648 477 395 585 183 126 151
 146 607 610  92 530 180 223 468 154 372 545 426 189 191 231 127 542 186 449 177 652 555 199 222 148 580
 208 138 510  65 614 179 564 363 665 134 662 666 268 110 214 159 216 420 174 354 417 365 632 156 118 430
 129 602 147 125 654 101  55 107 490  42 598 674  35 591 620  52 596 566 418  49 429 627 643 139 119 193
 646 434 117 100 659  70  43  86 112  53 136  73  28 588 661  66 673 637 492  50 629 617 499  27 641 664
  77 633 529 105 597  30  29 489  96 140 121 132  75 589 579  80 472 601  36 478 387 658 513  25 675 655
 404 102 636 558 656  31  34  58 586  26 496 505  48 599 523 109 650 590 131  37  57 638 544  51 406 326

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.12496e+06us (= 4124.96ms, 4.12496s)
Wall-clock time (full program): 4.17918e+06us (= 4179.18ms, 4.17918s)
Satisfaction error: 0
Number of search iterations: 910
Number of local moves: 648 (including on plateau: 209)
Number of local minimum: 42 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 346  62 574 614 179  60 676 652 549 104 635  85  51 572  77 253  55 173 131 171 251 129 503 667 562 670
 101 674 588 115 659  91 495 594 524  87 117  97 116 661 109 672 626 107 121  29 266 199 500 540 144 569
 191 119 425 209 627  58 612 519 550 124 463 100 143 564  65 625 148 279 375 226 665 507 618 335 132 122
 224 526 609 621 295 159 247 536 571 166 525 167  61 546 108 656 517  37  57  78 232  88 577 512 156 530
 236 153 646 628 367 154 174 510 644  48 616 125  75 605  92 169 243 102 160  90 539 640 480 598  39 668
  71 136 213 194 239 675 142 651 624 114 561 151 134 490 216 631 593 221 130  98 671 145 513 533  54 601
 332  59 138 442 666 538 669 642 255 246 428 244 235 462 215 168 326  53  35 147 481 389 296 639  99 597
 599 256 222 633 233 175 242 388 207 190 630 292 252 479 231 211 202 164 607  63 203 362 645 537 200 578
 186 318 189 566 220 137 284 419 604 185 615 245 545 283 126 197 341 585 399 230 206 135 293 617 323 553
 258 180 673 152 250 361 161 459 359 449 309 417 353 370 269 310 218 383 264 196 260 288 420 534 267 641
 170 352 237 350 336 276 182 446 403 437 385 217 373 400 366 195 386 408 443 349 376 198 354 643 270 249
 602 339 363 378 178 334 312 342 201 330 306 324 265 632 308 379 331 192 262 429 254 458 278 317 390 297
 384 277 300 466 280 401 431 263 183 347 274 387 393 404 259 165 414 219 433 371 303 522 398 234 348 345
 238 423 227 229 176 316 188 294 396 402 445 541 314 340 515 313 374 344 291 427 450 275 327 204 360 392
  21 487 501 272 508 319  30 395 418 424  81 289 357 447   3 380 489 271 358 451 364 441 502 298 422 273
 302  26  47 368 436 438 454 554 321 409 304 141 484 113 391 465 214 467 381 647 397  67 307 241 412 415
 453 257 281 356 299 394 430 146 448 311 469 322 351  34 523 568 328 343 421 413 377 282 411  49 439  96
 290 460 478 111  46 573 470 118 205 547 110 514 325 172 492 551 106 369 476 494 576 440  82 225 285 286
 475 543  64 212 472 337 407  76 406 301 228 488 608 177 329 535 544 521 333 483  56 455 149  69 497  36
 434 320 528 223 158 471  74  68 181 435 163 565 663 187 464 520 531 432 457   5 128 498 567 140 456 133
 509 580 570 240 591   8 505  86  15 416  94 560 468  42 589 582 103 511 496 555   4 482  28 112 516 139
 552 559 477 248 208 473 638 120  32 584  14 648 444 184 548  31 474 268 452 529  89  11 410  95 620  93
  84 527   9  10 657 485 532 365 157 563 499 595  13 405 654  83  79 504 486 461 261 613   1  16 619 123
 542  27 372  22 150 655  24  12 355 426 210 606 493 162 660  43 596 653  23 600 658 583  18 315 579  17
 590 518  45 556  80 575  40  41 155 650 127 662 649  20 558  66 557 603 581 637  70 587  72 287   2  73
 611 623  25 586 491 338 382 105  38 506 193  19 636  50 634  33   6 592 629 622 664   7  52  44 610 305

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.96153e+06us (= 5961.53ms, 5.96153s)
Wall-clock time (full program): 6.01368e+06us (= 6013.68ms, 6.01368s)
Satisfaction error: 0
Number of search iterations: 1546
Number of local moves: 665 (including on plateau: 229)
Number of local minimum: 113 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 290 609 195 249 632 134 658 346 209  66 120 515 218 156  25 581   6 630 510 611 562 152 112 593 620   2
  52  16  44  14 551 116 579 536 613 109 145 326 141 582  96 589 530 640 271  86 606 460 528 588  22 561
 127 508 394   9 600 585 563  48 594 198  61 180 182  85  50 504  10 607  49 535 621 527 529 162 440 633
 161 564 210 664 234 146 651 625 498  21  38 540 279  26 545 650  88 477 553  28 558  32   5  18 631 559
  15 462  53  12 483 104 514 472 584 304  37  90 208 121 419 599  67 560 617 569 490   3 500 539 433 546
  51 131 265 541 499  80 114 274 534 519 487 238  13 282 256 387 407 517   1 547  73 548 492 478 602 465
 110 469  56 549 634 391  23 431 570 330 130 520 438 202 204 430 363 417 111   4 413 451 494  81 565 415
  36 447  77  46 568 475 578 573 412 320  34 184 181   8 461 557 516 365  69  78 398 532 497 524 459 406
 172 445 496  75 334 488 555 449  83 474 336 199  64  98 457 523 416  19 359 362 381 484 319 533 372 308
 250 526 126 352 268 315 435 442 434 100 468 147  30 237 470 408 136 420 272 191 635 467 367 429 432 444
 205 421 115 258 473 411 427 393 343 511 317 328 481 323 357 479 422 439 436 347   7 390 587 108  20 203
 280 491 232 348 266 341 446 301 471 437 456  54 458 236 113 337 450 159 277 383 404 453 426  41 538 403
 303 281 428 322 350 243 261 641 356 327 273 518 246 292 355 339 247 369 399 313 311 379 221 360 329 338
  42 377 333 441 321 392 270 395 418  57 410 507 276 344 464 278 414 245 368 324 397 489 371  33 486 349
 386 262 331 300 231 296 307 287 661 194 425 495 616 396 306 283 312 129 351 400 342 275 252 424 251 289
 505 128 482 358 259 267 226 241 405 294 454 501 601 385 222 325 244 353 513 370 228 345 382 174 207 332
 314 340 216 160 176 373 286 242 299 610 298 580 604 660 366 254 318 200 335 550 260 220 233 230 389 288
 645 212 284 452 672 521 211 269 671 257 525 531 642 522 248 235 225 201 186 133  95 255 217 168 197 227
 388 175 572 556 117 122  65 595  91 480 619 375 166 455 297 167 670  62 657 623 376 150 219 401 215 188
 566 178 309 189 157 239 665 119 165 503 253 576 653 643 124 263 302 229 295 291 138 583 105 638 354 264
 618 140 575 173 151 663  76  97 103 293 509 542 361 608 656 144 675 132 574 624 310 206 240 224  39  68
 644  74 652 622 384 603 177 193  47 380 598 125 423 614 476  43 597 316 155 135 142 590 154 402 185  70
 673  79 493 667  84 163  82  60  24 577 567 374 592 591 543  99 409 627 143 512 102 148 676 179 214 123
 668 171 662 285 158 223 139 596  35 648 629 305 443 364 537 190 615 506 655 196 192  63 169 187  93  72
 646 626 552 485 170 463 466  58  92 153 448  11 378  17 571 106 149  45  59  87 666 544 101 659 637 612
 654 669 649 674  29 647  27 118  89 639 164  40 107 554 183  31 213 137 586 502  94  55 605 628  71 636

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.4801e+06us (= 3480.1ms, 3.4801s)
Wall-clock time (full program): 3.53337e+06us (= 3533.37ms, 3.53337s)
Satisfaction error: 0
Number of search iterations: 927
Number of local moves: 625 (including on plateau: 265)
Number of local minimum: 38 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 655 468 556  74 648 251 625 416 495 256 588 343  47 127  55 169 458 587 153 158  59  64 486  91 643 329
 132 541 100 510 389  99 538 534 597 262 593 393  68 144 376 497 375 484 124  52 220 442 550  40 592 149
 606 527 667 660 653 118 439  24 276 644  33 613  50 228 545 192  16 106 406 131 119 668 189 536 176 179
 289 632  67 314 146  17 326 107 114 130 571 658 243 457  39 147 633 516 296 382 244 563 624  44 573 669
 165 422  61 120 390 585 618 129   5 492  86  79 444  76 518 546 240 217 583 143 596 303 616 580 540 247
 383 656  37 163 511 664 494 183  34  69 623 301  45 293 214 190 348 182  98 612 350 642 490 310 645 264
 184 479 121 666 232 128 436 215 432  95 403 302 607 321 665 359 255 617 630 440  36  53  82 239 554 250
 155 480 148 295 649 324 500 405 401 595 193 566  77 641 341 552 305 205 280 216  87 453 575 162  28 168
 368 657 138 499 364 266 561 549   3 160 150 242 551 338 213 482 260 191 548  89 164 454 509 196 530 319
 263 508 317 308  54 257 361 646 345 249 173 252 367 288 156 438 352 284 152 112 294 673 354 591 333 674
 202   1 568 369 279 578 273 433 235 126 402 381 300 258 267 598 194 275 277 283 363 675 491  63 519 391
 640 412 234 650 307 399 421 404 197  62 198 426 335 659  12 557 358 272 297 377 476 469 101 210 186 142
 449 357 553 223 427 370 395 318 337 161 353 505 122 298 323 185 386 415 342 246 346 286 475 347 254 328
  83 419 521 278 287 320 268 104  66 413 676  78 388 224 304 400 493 522 448 360 181 171 474 471 200 652
  23  29 501 483 356 589  25  35 435 429  96 543 631 582  88 609 351 313 366 459 418 445 547  19 371  58
 614 188  22 473 229 325 362 292 334 327 355 233 282 103 437  14 639 394 253 671 569 446 195 385 281 378
 496 207 544 424 199 111 532 513 452 274 397 460  93 204 462 503 472 451 178 409 374 221  72 145 236 372
 539 373  32 504 135 455 209  43 555  46 533  85 506 626  97 340 489 672 507 285 387 417  27 430  21 488
  31 116 450 226 477 434  75 559 431 662 478 414 441 524 219 139 523 166  80 230 407 151 248 330 565 425
 157 218 423 245 485  73 140 525 608 537 572 463 269 270 315 175 237 225 456  26 515 167 465 535 174 526
 562   4 464 570 311 290 238 636   7 133 528 420 603 481 512  71 531 574 211 466 410  60  30 447  65 177
 461 125 487  13 154 529 109 398 542 590 332 222 635 208 558 231  81 113 265 670 443 349 379 316  10 581
 584 261 628  42 498 610   8 206 339 567 134 201  56 137 380 312 110 428 619 605 604 180 212 517 227 336
 467  57   6 331 594 384 620 170 601 259 102  15 654  51 514 611 502  38 241 621  94 141 396 622 108 602
   2 299 577 271   9 520  41 306 638 600 117 586 576 634 627  92 123  84 344 599 637 136  11 615 309  48
 291 365 579  90  18 105 187 651 322 663 115  20 411 629 564 392  70 470 647 159 408 172 203 560 661  49

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.14343e+06us (= 9143.43ms, 9.14343s)
Wall-clock time (full program): 9.19633e+06us (= 9196.33ms, 9.19633s)
Satisfaction error: 0
Number of search iterations: 3064
Number of local moves: 1020 (including on plateau: 344)
Number of local minimum: 287 (including on plateau: 42)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 563 673 546 104  58  34 137 581 650 504 349  57  56  16 567  59 666 244  80  26 548  22 648 632 361 620
  17 652 622 333  98 667  72 307 436 573  74 197  95  21 562  41 438 674 238 200 654 610 475 269 354 122
 114  51 669 665 471  77  69 126 649 582  39  45 469 146 496  28 634  62 107 139 335 575 672 528 670 383
 182 571 110 348  82 118 486 657 473 597 614  12 175 111 601 448 489 129  40 214 554 285 180 551 545 229
  10 163 490 661 435 518 162 105 588 176 547  19  53 166 340 388 215 613 134 587 658   9 565 243 553 403
 599 284 120 536 194 569 636 169 566 487 561 188  71 241 351  43 282 651 141 168 671 148 159 586  33 347
 639 412 127 178 319 147 535 375 530 234 196 462  99 185 222 125 177 424 171 346 584 635 628 572 221 258
 275 236  75 331 179 155 304 339 232 676 314  55 507 140 642 211 202 115 382 594 517 549 626 434 153 558
 130 108 173 230 595 212 266 208 476 659 556 250 186 359 598 192 267 675 322 294 497 552 422 209 170 195
 281 287 276 280 578 217 511 323 522 409 152 327 227 213  64 472 576 271 292 106 502 662 174 465 187 427
 268 204 237 278 450 199 279 121 655 149 358 316 264 430 353  32 283 498 583 325 499 459 210 653 113 585
 263 311 512  52 352 297 270 364 301 317 191 356 131 596 401 245 423 441 602 318 247 357 629 223 274 328
 343   8 384 295 378 309 362 324 240 248 437 608 633 300 320 394 306 257 514 449 239  94 432 289 302 336
  44 410 254 484 308 342 293 366 299 255 391 425 413 265 313 385 226 365 660 290 315 369 377 277 341 334
 429 332 415 103 219 305  97 466 231 260 442 326 408 321 135 393 399 463 510 350 363 428 405 203 609 189
 494 402 376 488 286 421  30 345 480 296   6 447 160 482 491 218 242 389 381 288 580 371 367 252 407 102
 303 420 474 370 445  73 458 404 132 145  86 419 560 396 555 508   5 259 400 395 154 481 534 416 310 100
 617 360  90 525 128 443 541 503 193 184 453 406 256  85  38 623 398 338 559 460  84 368  76 417 451 205
  88 493 592 513 380 355 470  79 109 457 249 542 433 344 312 440 418 668  14 207 158 392 431 477 119  61
 539 372 206 426  42 397 439 515 157 374 577 478 272 387 414 532 589 138 456   4 142 190  91 143 390 531
 479   3 557 492 225 537  27 509 117  46  13 505 526 521  24 444 527 485 637 611 165 603 233  47   1 467
 500 454  54  18 468 379 461 262  36 664 529  37 612 590 411 591  83 198 261 506  48  81 150 337 452 618
 483 446 550 251 464 593 183  15 167 124 228 533 524 640  23 579 540  50 615 643  96  20   7  29 543 455
 607 520 495 101 386 564 519 574  31 136 172 516 501 621 246 164 216  78 600 625  60 112  25 298  66 568
 161   2 253 646 656 329 624 641 330 116 663 631 523 619  87 630 151 224  35  11  68 273 220 181 638  89
 373 627 144  93 605 544 570 123 201 133 604 644 647 606 235 616  49  92  67 645  63 156  65  70 538 291

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00549e+07us (= 10054.9ms, 10.0549s)
Satisfaction error: 2
Number of search iterations: 3051
Number of local moves: 1057 (including on plateau: 415)
Number of local minimum: 268 (including on plateau: 43)
Number of resets: 2
Number of restarts: 0

Problem in row 17: 303 420 474 370 445 73 458 404 132 145 86 419 560 396 555 508 5 259 400 395 154 481 534 416 310 100 => the sum is 8802 rather than 8801
Problem in row 22: 500 454 54 18 468 379 461 262 36 664 529 37 612 590 411 591 83 198 261 506 48 81 150 337 452 618 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 314 598  57 647  99 379 539 228 500 494 610 503 183 329  85 117 127  90  47 604  75  66 657 655 614 184
 669 516 672 511 648 391 139 402 621  74 555 529 463 530  61  87  59  52 100 154 531  65 132 124 627  89
 310 483  53 637 625 103 523 192 496  43 653 440 109 168 336 122 643 198  48 597 437  62 147 162 554 660
 595 582  63 676 358 133 145 423 605  82 666 434  60 128 581 107  68 536  78 607 508  80 462 550 110 164
 388 608 158 144 656 152 166 560 664 135 564 541 385 611 129 115 160 212 180 141 569 668  30 148 601 116
 578 575 197 189 101 622 567 566 576 233 134 495 665 146 178 286 619 308  58 142 673 288 199 156 153  97
 641 452 173 112 185 206 454 243 571 299 214 671 667 645 257  86 220 118 215 659 172 630 119 457 105 230
 670 658 176 161 218 194 431 182 632 165 361 435 226 247 324 235 521 259 649 481 240 186 121 488 244 297
 652 580 216 290 202 386 381 303 635 157 287 638 223 482  36 143 207 674 196 169 626 193 187 484 340 114
 327 663 209 227 208 330 465 270 445 225 229 261 594 623 267 174 661 262 360 304 306 245 210 448 269 219
 420 469 177 137 175 249 590 278 281 289 675 662 372 238 383 395 204 167 406 241 347 364 279 501 250 252
 320 446 276 234 332 335 609 362 359 319 273 318 328 291 475 305 264 222 232 409 253 298 313 615 296 317
 345 430 272 341 268 489 301 316 473 405 384 363 309 343 398 271 190 356 251 404 339 263 254 392 302 342
 352 350 371 357 315 346 366 418 203 365 312 311 239 344 367 321 326 334 415 433 387 393 231 325 337 283
 417 221 246 373 322 380 285  56  17 390 394 401 382 403 348 266 466 274 354  77 439 498 502 464 410 416
 181  11 205 407 419 355 400 497 429 397 126 375 323  24 349 532 224 432 442 514 412 450 338 512  51 396
 453 237 331 293 408  13 562 102 333  21 477 455 546 444 378 471 248 163 486 467 300 236  96 425 351 505
  49 213 411 451 518  32 295 631   3 528 487  73 427 460 545 195 389  20 491 509  35 456 478 258 421 426
  54 123 558 447 551 579 149 159 242 428 480  95 136  64 376 399  44 504 374 499 492 414 617 179 368 470
  38 217 549 537 507 557  14  67  76 443 535  79 534 275 369 548 441 458 552  33 170   7 553 280 436 526
 130  69 472 506 540  98  39 613 113 468  40 191 125 106 533 624 461 513 485 282 294 527 519 424  55 574
 256 104 618 559   2 565 151 639  28 600  29   4 449 255 599 644 493 577 370 422 140   1 522 211  16 547
  10  81 490   5 474 583  94 642  31 459  50 155 200  84  18 588 524 556 586 591 520 538   8 438 561 515
 111  72 616  91  25 108  83 542 150 646  42  46 628 640 171 593 517 606 572  19 277 612 654  23 544 413
  45   9 651 377 525 596 510  88  26 573 131 284  27 568 636 592 587 260 589   6 188 629 570  12 307  15
 476  34 584  92 120 620 543  22 292 563  93  41 201 353 602 585 138 650 265  37  71 633 603  70 479 634

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.0054e+07us (= 10054ms, 10.054s)
Satisfaction error: 2
Number of search iterations: 3140
Number of local moves: 1052 (including on plateau: 381)
Number of local minimum: 257 (including on plateau: 59)
Number of resets: 2
Number of restarts: 0

Problem in column 12: 503 529 440 434 541 495 671 435 638 261 662 318 363 311 401 375 455 73 95 79 191 4 155 46 284 41 => the sum is 8800 rather than 8801
Problem in column 22: 66 65 62 80 668 288 630 186 193 245 364 298 263 393 498 450 236 456 414 7 527 1 538 612 629 633 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 653 143 640 127 620  44 256 244 624  40 223 566 614 248 561 645 337  21 123 599 189 315 324 612  11  22
 630 601   5 472 126 281  17 664   4 584 656 574  53 161 554  14 533 155 196 558 177 257 204 635  90 600
 623 235 573  12 631   9  28 651 606   2 185 500  48 259 552 288 279 556 109 175 490 501  23 504 334 628
 350  56 108  67 562 380 543 493 597 528 247  97 639 104 610 321  50 154  66 470 672 107 193 674 115 598
 634 158 604 546  24 225 518 489 516 217 578 141  57  43 665 582  78  91 152 499 120 529  84 559 416 276
 496  46 629 568 549  25 429 474 122 378 538 661  41 282 525  54  69 545  88 358  13  75 462 431 368 575
 540 133 632 564 513 387  18 475 548 483 450 182 144 494 190 359 557 550 117  82  20  27 132 508 218 478
 412 569   7 618 407 299 544 666 343 425 426  92 531   1 487 396 539 211   8 443 169 138 166 502  77 325
 292 338 465 536 477  47 297 367 376 392 249 372 602 511  61 402 520  32  26  89 422 364 381 444 118 621
 616 486 507 379  30 170 265 348 453  72 649 153 331 473  87 491 400 517 222 447 137 283 484 393 148 260
 198  16 394 592 421 200 440 310 373 495 530  42 532 306 411 316  64   3 469 176 644 280 361 355 449 424
 503 413 351 390 295 446 159 505 366  59  10 433 509 385 149 388 370 522 419 481  83  94 415 188 524 344
 339 437 305 269 369 420 436   6 326 356 480 140  98 322 391 434 327 619 318 250 371 414 638 255 168 313
 172 333 301 408 311 571 464  36 226 323 362 460 194 267 382 302 395 345 452 136 457 537 432 308 278 349
 332 210 445 224 354 488 459 271 399 384 662 383  85 389 215 236 579 174 360 245 353 307 233 303 375 336
 286 347 289 199 510 455 456 234 252 352 646 277 293 497 184 658 203 398 294 320 312 290 253 119 314 363
 173 111 186 273 274 466 342 330 150 626 272 238 317 239 254 209 595 448 534 515 563 417 183 275 570 241
 206 613 242 181 139 430 627 266 237 263  15 642 207 365 231 243 192 648 251 116 441 605 654 228 547 212
 202 615  19 401 163 418 227 670 291 467 208 555 232 581 374 285 220 335 671 145 197 403 329 195 527  71
 219 178 284 128 191 521 655 404 134 160  86 660 636 586 309 114 442 180 479 264 565 409 458 103 560  76
 201 580 669  80 526 663 167 270  74 156 650  52 667 246 102 164  63 296 657 438 216 341 179 258 439 647
 101 461 261 147 609 346 221 298 162 607  34 187 130 427 668  96 213 171 591 471 673 410 229 340 551 397
 268 583 106 625 205 652 423 110 151 405 165 131 603 596  79 146 553 230 567  93 506 577 357  73 468 129
 214 541 617 100  29 523 121  99 454  31 377 498 611 240  68 585 572 622 476 112 287 576 542  65 386  55
  60 135  37 262 428 300 594  51 535 590  45 124 113 451 105 485 589 319 637 676 675 512 593  39 142 304
  81 463 125 633  38  35  95  70 482 406  58 641 514 328 587 588  62 659 519 643  49  33 492 435 608 157

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.42285e+06us (= 7422.85ms, 7.42285s)
Wall-clock time (full program): 7.4752e+06us (= 7475.2ms, 7.4752s)
Satisfaction error: 0
Number of search iterations: 2613
Number of local moves: 903 (including on plateau: 414)
Number of local minimum: 196 (including on plateau: 62)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 358 534  14 564 291 221 596  28 145 370 573  86 276 184 665 490 121 603 161 552 451 483  16  44 591 384
 636 372   4  10  25 658   7 128 148 419 609  94 615 152 608 651 263 288  47 576 582  97 393 437 312 670
 205 330 236 100  17 476  23 126 630 600 404 472 527 536 112 543 648 619   8 235 556 140 566  71  76 546
 594  46 178  39  98 435 357 195  66 386 618 313 612 240 118 502 513 617 548 414 461 105 149 220 631 346
 208 129 580  88 268 567 360  61  30 601 541  31 657 652 492 418 397 477  69 270  11  73  33 649 547 592
  59 133   2 402 514 173 399 524  29  12 504 506 466  54 116 479 655 613 498 584 383 168 583 175 574 196
 256  79  82 491  78 448   9 183 391 356 389 533 550 445  72 595 586 449 458 166 538 324 487 154  21 661
 363 530 157 350 620 569 553 280  43  77 436 497 193 597 181 201 509 303 279 106 499 343 439   6 587  83
 146 269 144 398 403 493 529 406 337  64 456 423 525 520 174 635 496 336 411  87 164 237 488 274 344  42
   5 361 349 422 512  27 441 522  41  26 581 482 561 452 446 317 159 190 401 339 468 327 545 226 463 138
 244 306 348 234 378 454 354 375 425  85 365 369 417 305 405 408 428 421  32 395 409 233 624 153 334 300
 359 355 204 264 577 453 329 429 646 377 113 252 309 332 526 442 101 297 367 420  80 191 374 207 387 410
 516 322 412 447  18 351 473 390 353 489 212  37 302 283 388 249 616 494 294 366 379 219 285 319 310 277
 326 293 459 392 247 478 486 457 424 284 345 135 115 320 362 321 368 258 251 519 433 531 238 257 272 230
 189 292  99 286 427 505 373 239 248 307 642 304 673 202 241 474 186 633 331 192 265 120 232 676 194 471
 598 250 197 278 225 426 231 261 638 475 301 614 380 438 227 137 260 156 500 255 352 266 537 413 215 171
 187 394 485 296 455 218 340 165 501 515 460 216 273 217 211 262 632 315 281 214 299 540 228 443 170 484
 325 338 364 462 224 588 254 142 572 104  96 130 203 182 172 298 139 664 308 672 400 434 259 430 656 385
 590 323 503 242 328  90 155 675 431 674 125 295 213 200 341 107 290 188 607 176 206 629 151 347 626 289
 563 558 528 246  75 245 335 599 621 167  65 198  51 160 282 253 507  57 625 554 141 568 440 464  84 415
 623 523 535 333 470  70 671 122 316 444 143 180 150  52 660  55  49 469 645 124 275 539 179 667  40 467
 407 643 589 610 627 376 117 653  20 222  35 641 185 381 511 169 108  15  91 110 565 342 158 243 551 432
 287 542 549 559 560  67 147 634 517 521 510 267  63  58 229  81 123  22 644 575  92 555 639 450   1 109
 311 605 640 132 579  89  93 557 544 628 162 659  45 578 177 134 119  34 495 662 114 508  48 666 127  95
  50 163 480 585 131 271 637 647 314 562  13 465 416 668 481 518 210 209  68 136  56 223  60 199 669 570
 396 111 663 571 654  53 532   3 371  36 103 602  24 593 604  62 318  74 382 102 622 606 650 611  19  38

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00031e+07us (= 10003.1ms, 10.0031s)
Wall-clock time (full program): 1.00586e+07us (= 10058.6ms, 10.0586s)
Satisfaction error: 2
Number of search iterations: 3656
Number of local moves: 1070 (including on plateau: 388)
Number of local minimum: 329 (including on plateau: 57)
Number of resets: 2
Number of restarts: 0

Problem in row 3: 205 330 236 100 17 476 23 126 630 600 404 472 527 536 112 543 648 619 8 235 556 140 566 71 76 546 => the sum is 8802 rather than 8801
Problem in row 26: 396 111 663 571 654 53 532 3 371 36 103 602 24 593 604 62 318 74 382 102 622 606 650 611 19 38 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 248 669 561 599 104 626  16  44  82 153  81 183 401  23 496  78 135  46 512 649 624 349 159 653 659 651
  74 632 589 605 676 549  75  73  10 635  19 372 468 101 387 657 107  65 128 224  52 324 647 523 670 139
 662 228 630 641  58  88 122  59  83 514   6 129 567 665 451  70  55  24 112 558 174 661 655 672 471 446
 272 382 530 364 508 205 111  26 637 439  72  71 671  77 622 196  90 498 109 594 488 522 675 106 486  50
 368 162 168 601 666 643 210 176 131 517  41 262 583 146 645 216 155 650 357 421 264 664 191 145 202 217
  60 116 232 584 668  40 150  92 201 663 132 236 667 148 245 141 593  97 625 230 673 578 198 407 550 475
 433 301 510 552 161  99 329 556 118 600 271 172 658 244 542 182 314 295 180 149 214 494 169 621 500 137
 565 119 249 460 208 108 206 287 639 533 276 160 491 147 656 253 163 263 616 377 173 554  54 598 437 209
 609 143 156 294 212 200 334 136 144 532 188 674 187 194 613 158 633 288 154 448 466 595 302 167 363 611
 631 195 239 308 405 310 336 157 242 546 376 225 247 342 203 255 190 652 315 575 338 503 266 297 435 213
 484 199 260 280 181 291 250 330 644 504 604 258 261 234 304 317 229 177 227 463 398 425 303 346 505 327
 361 293 654 648 207 252 331 403 282 389 197 629  93 268 392 251 152 223 351 360 393 385 292 193 406 395
 296 459 318 185 369 400 352 289 411 440 309 339 457 374 259 418 313 397 221 243 226 298 489 219 436 284
 476 285 362 408 453 328 456 279 333 281 347  36 265 164 283 286 335 267 529 274 373 311 277 592 402 399
   7 383 434 312 321 344 426 379 481 322 257 356 404 499 526 497 381 367 332  94 269 320 427 326  30 307
  63 449 306 348 432 416 462 366 345 240 378 316 473 270 394 300 319 365  15 246 442 254 493 420 237 452
 151 465 419 386 396 341 417 441 543  69 438 102 464 458 278 450  53 487 429 430 299 178 388  89 103 527
 323 428 423   3 415 384  67 492 343 354 485 380 477 478 455 424 444 211 355  39 218 192 445 410 370 186
 124 482 467   4 534 409 483 391 524  61 536 506   8 563  28 469 538 414  87 461 557 133 502  64 431  25
 179 566   1 184  47 454 134 507 447 241 537 519  66 588  17 617 474 479 539  42 642 121 358 480  27 535
 340 495 520  85 470  31 541 619 531  95 577 547  79 509  34 515 518 591 472 165   2 275  96 140 142 412
 581  32 110 113  14 525 620 571 390 235 490 350 231 513 353 573 501  84 608 337  86 325 443 568 126  22
 273 511  37 371 559 614 528 615  35 120 590 634 256 627 130 572 305 580 597 100  76 105 359  51 127  29
 607 612  43  80 555   5 623 574 551  98 569 586  21  38 233  62 628 610 125 545 638 170 189  12   9 618
 596  57 570 166  68 560 576 375 606  49 603 238 215 587  33 204 540 548 290 602  56  20  11 117 562 553
  18 138  13 220 114 579 646 564  48 171 422 521  91 544 222 640 636 123 516 175 660  45 413 585 115 582

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00914e+07us (= 10091.4ms, 10.0914s)
Satisfaction error: 2
Number of search iterations: 3555
Number of local moves: 1215 (including on plateau: 507)
Number of local minimum: 312 (including on plateau: 58)
Number of resets: 2
Number of restarts: 0

Problem in row 12: 361 293 654 648 207 252 331 403 282 389 197 629 93 268 392 251 152 223 351 360 393 385 292 193 406 395 => the sum is 8800 rather than 8801
Problem in row 25: 596 57 570 166 68 560 576 375 606 49 603 238 215 587 33 204 540 548 290 602 56 20 11 117 562 553 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 318 637  51 610 638 555 143 131 160 183 537  40 618 291 557 172  10 640 656  74  42   6 649 600 413  70
 608 643 647 585 147 576 641 157  94 237 552  45 553  20 129  25 583 646 144 354 110  96  37  16 645 511
 574 544  24 566 571  86 625 312 606 572  34  14 145 470 584 233 189 523 613  19  57  22 615 599  68 136
 559  44 227 114 536 128 528 205 633   2 101 621 519  53 480 273 623 592 541  18 252  49  80 570 488 565
 604  50 265 554 380 165 590  95 568  46 217 477  26 505  33 208   5 453 614  55 119 598 650 487 562 475
 351 479 561 547 466  29 108  78 290  79 631 540 510 115 506  39 503 588 507  81   9 149 433  56 664 482
 242 550  43  76 512 268 271  82 123 419 582 569 474 167 539  85 469 499 502   3 422 112 504 542 532 214
 467 491 245 500 535 184 472  47 135  30 517 438 402 409 396 476 417  23  11 350 348 398 543 526 383  58
 455 416 166 494 501 193 493 525  32  75 509 363  35 194 465 444 496   4 427 196 345 423 442 534 490  84
 478 429 207 405 484 169  64  77 104   1 412 481 533 234 418 331 516 264 346 386 424 320 458 407 410 443
 389 388  15 392 430 156 387 450 428 390 461 497 385 190  88 224 236 394 408 261 284 251 495 316 439 447
 356 498 446 420 414 406 462 459 425 379 326   7 323 399 378 195 360 285 367 168 338 116 393 293 302 286
 314 257 306 352 437 333 355 376 353 341 259 209 342 471 325 492 337 361 336 270 391 282 374 258 464 206
 558 319 401 296 225 300 304 292 545 307 377 298 220 343 216 397 309 359 426 400 278 395 178 266 411 381
 248 289 321 317 404 349 344 219 617 347 303 594 223 327 452 311 369 330 254 473 192 294 365 384 180 295
 636 287 288 162 235 457 324 158 340 364 556 313 328 267 274 181 308 269 456 538 370 549 262 241 276 362
 244 310 315 199 246 375 445 332 373 560 339 150 232 280 513 372 358 215 281 485 371 283 628 202 489 204
 170 228 635 197 175 601 159 657 210 221 139 322 155 454 277 666 203 518 222 279 644 415 152 239 247 616
 191 226 596 176 164 448 151 563 299 508  63 212 255 305 171 622 250 201 667 581 334 578 133 431  97 579
 357  92 403 198 154 673 603 627 564 441 124 148 275 522 368 624 546  93 182 593 177 243 256 137 161 240
 263  59 486 120  71 634 229 597 632 530 231 107 661 440 186 595 253 382 366 272 629 591 103 130 121 113
 218 297 434 122 654 435 146 676 329 609 105 238 187 531  69 620 671 213 118 463 179 200 230 260 125 672
  54 587 211 142 188 449 173 163 529 612 658 117 652 567  90  72 106  91  98 573 514 551 660 249 174 521
 126 605 421 141 102 548  89 460 335 589  73 670 575 153 663 520  36 140 134 639 655 630  83 301  52  61
  13  28 436 451  67 185 674 580  17 527 668 669  62 626 100 109 607 132  87 611 642 602  66 138 577 127
   8  48 651 665  65  99  21 483  60 432  27 662 111 468 524 515  41 586  38 659 675 648  12 619  31 653

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.42168e+06us (= 4421.68ms, 4.42168s)
Wall-clock time (full program): 4.47411e+06us (= 4474.11ms, 4.47411s)
Satisfaction error: 0
Number of search iterations: 1029
Number of local moves: 510 (including on plateau: 178)
Number of local minimum: 67 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 272 512  63 655 465  25 355 673 168 642  65 526 102  32  36 469  77 444 532 625 119  61 522 633 630  98
  80 659 188  69 672 121  73 514  86 638  58 617  34  62 326 175 593 639 649 177 503 125  75 650 662 356
  41 448 466 150 378  87 598 529  74  90 140 666 644 105  39 614 524 491 621 130  71 527  28  23 646 671
 117 566 196 612 591 106  82 494 112  31 138 674 136  38 667 653 520 504 490 124 173 238 224 436 661 218
 128 154  76  46 342 365 569 597 675 127  49 606 162  96 628 554 568 657 501 144 114 636  70 209  52 676
 242 584 120 585 592 462  78 440 314 167 133 479 161 157 174 146 631 637 460 203 669 193 139 607 155 273
  93 497 287 364 207 170 620 573 172 107 303  67 264 163 540 181 613 626 564 563 135  95 288 495 182 632
 263 261 213 417 543 339 645 523 470  99 184 276 159 208 525 262 434 587 336 582 259 160 158 429 149 320
 296 560  79  48 531 663 179 419 541 233 271 237 270 166 572 123 629 446 516 195  92 198 274 517 147 599
 220 555 225 134 280 281 407 428 239 282 278 567 230 152 539 277 373 515 550 148 268 350 283 553 329 338
 366 197 345 183 447 219 658 298 395 344 544 302 351 545 279 295 533 108 390 192 341 252 255 201 204 557
 194 317 393 256 297 546 371 299 246 319 305 335 668 156 536 304 164 250 581 624 222 284 153 410 306 265
 396 266 357 328 377 427 521 380 324 309 425 310 358 385 241 289 361 318 240 186 442 187 369 236 461 308
 245 251 402 313 291 360 481 322 362 325 346 311 253 352 333 347 370 376 286 235 349 499 450 343 292 307
 411 438  53 403 214 423 367 300 530 216 382 330 202 397  66 331 312 449 229 441 498 500 375 374 316 244
   7 421 426 392 141 414 388  84  20 323 315 618 435 337 507 359 227 348 243 453 405 457 538 433 477  33
 463 269 468 452 178 221 191 290 354 455 294 301 368 389 413 363 327 467 145 482 248 493 386  50 485 249
 474 143 458 383 488 492 401 384   4 353 443 473 379 464 321 406   1 293 137  83 508 381 445  85 415 387
 549  15 552 409  72 400 340  13 416 537 478 254 589 615 142 424 126 190 234 217 480 510 608  60 483  88
 412 418 496 548 176 534  18  11 394 579 580 113 634 451 205 513 111   6 228 109 562 509 372 232 472 118
 622 169 399 583 223  35 200 422 404 600 652  56 551 561 171 484  89  59 206 547  16 476 456 247  54 519
 640 260 559  17 570 431 110 226 556 437 574  51  37 511 577 535 211  45 185 439 610   5 487  57 459 212
 602 506 627 210 454 432 332 334 558 571 518   8  21 641 420  14  97 165 104 267 575 505   9 231  24 576
 619  40 586 578 103 611 275  30 656 391 129  22 660 648 475  10 601  26 132 489 116 588 665  12  81 258
 398 115 616 664 101  47 285  29 609   3 594 131 486 565  42 654  94 100 199 604 430  44 670 635 595  91
 651 180 151   2  68 590 257 189 122 623 603 471 647 605  27  19 215  55  43 542 596 528 502 643  64 408

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.39158e+06us (= 3391.58ms, 3.39158s)
Wall-clock time (full program): 3.44507e+06us (= 3445.07ms, 3.44507s)
Satisfaction error: 0
Number of search iterations: 641
Number of local moves: 475 (including on plateau: 118)
Number of local minimum: 20 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  15  36 601  35  10 544 581 619 498 123 597 625  52 280 617 592 188  17 212  69  83   6 604 545 624 628
   1 521 130 591  47 611 600 459 203 186 579 589  25  33 256 484  59  58 367 621 540 598 620 584  13  26
 568 577  78 590 236  72 626 562  99  12 549 647 550 398 587 169 264  24 458  88  21 607   9 546 419  45
 500 610 473  22  31 136 555 575 165 118 298 530 506 230 641 576 134 241 595 512 105   3  20 605  86 534
 603 559 174 492 303 609  38 143 547 121 554 447 301 125 535 637   5  14  11 437 524  34 539 245 327 477
 561 594  79 374  27  23 557 483 146  56 487 645  92 426 596 560  62  87 409 455  91  50 627 216 520 578
 405 572 526 517 205 502  42 571 465  64 341 583 112 261 475  43 472 160 390  19 209 155 311 480 461 460
 445 499 608 462   2  80 366 384  29 107 536 415 451 114 552 443 181 295   7 548   8 528 400 357 516 468
 452 448 511 377 176 132 538 124  18 440 513 244  73  28  16 422 433 386 503 391 376 283 490 406 585 436
 396 491  51 288 233 324 269 348 335 239 564 299 402  61 523 565 423 122 514 347 388 371  39 435 457 317
 479 428 486 541 222 148 449 149 482 297   4 328 464 147 332 259 478 359 413 382 383 399 403  95 344 330
 432 358 315 497 249 525 563  60 420 240 275  53 489 325 192 481 272 279 306 282 266 355 421 139 537 470
 387 430 444 323 379 225 276 495 278 189 362 368 238 427 277 171 381 356 338 343 410 300 471 248 346 339
 200 319 215 369 395 202 326 284 442 349 322 307 504 466 380 294 271 378 394 372 467 412 235 401 243 254
 438 268 257 424 446 334 393 260 182 532 314 227 229 340 365 226 320 439 305 285 350 291 342 219 652 363
 206 616 345 375 476 252 360 184 217 392 650 191 316 237 308 404 321 507 313 318 663 157 270 329 108 286
 228 331 352 129 542 281 195 602 179 649 258 567 214 566 290 293 485 429 251 172 569 333 208 336 141 201
 665  41 274 231 508 558 197 224 661 296 302 310 234 586 411 638 287 654 289  44 312 175 113 373 255 163
 242 250 354 210 518 292 162 364 675 631 177 263 588 150 211 218  84 529 612 351 469 220  98 527 253 353
 309 111 618  54 417 247 669  77 676 515 454 119 640 639 140 170 463 173  37 672 190 207 434 194 187 389
 110 185 615 151 644 668 120 496 158 646  81 142 166 643 246  94 509 660  40 407 670 580  90 304 144 232
 262 199 161  74 450 178 117 408 505 570 103 126 659 453 193 501 582 593 635 101 198 667 519 168 156 223
  93 109 221 674 632 474 180 154 613 630 196 106 662 551 265 204 456 416  55 137 273 634 159 213  65 629
 115  82  30 145 656 623  66 553 104 574 152 531 655 397 153 167 658 431  89 138 606 385 648 666  49 128
 614 135 361 673 441 267  46  96 131 337  85  71  63 425  76  57 599 543 636 657 533 418 664 100 671 102
  75  32 522 183 556 494 510 127 573 488  48  68 116 493 164 133 414 651 622 653  97 633  67  70 642 370

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.22884e+06us (= 4228.84ms, 4.22884s)
Wall-clock time (full program): 4.28181e+06us (= 4281.81ms, 4.28181s)
Satisfaction error: 0
Number of search iterations: 956
Number of local moves: 582 (including on plateau: 221)
Number of local minimum: 43 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 204 636 662 505 600  72 461  76 154  99  39 612  74  58 522 555  33 183 236 675 470 267 439  29 526 614
 643 644 191 633 385 510 542  32 599  98 112  63  23 661 672 481  45 113  34 578 123 648  91  30 383 467
 482 217 435 134 606 584 602  77  56  97 119 576 667 424 106 519  64 152 198 559 278 365 389 615 133 347
 319 164  95 415 570 208  79 345 665 485  61  68  65 622 525 130  44 645 638 402 153 178 647 646  36 596
 159 610 260  90 671 545 566  75 393 551  38 491 212  86  52 561 125 180 535 630 368 480 124 168 158 673
 427 239 150 101 649 376 663 166 284  19 502 190 141 189 274 621 199 122 465 409 674 541 162 508  70 660
 553 192 240 218 540 632 670 177 242 229  94 616 193 650 155 276 344 187 108 440 459 664 135 147 230 410
  67 337 234 176 382 475 210 478 148 297 139 423 246 417 604 206 252 422 550  83 623 639 165 282 295 651
 506 149 221 231 498 179 593 235 587 657 286 476 144 203 142 279 338  20 605 499 359 215 515 172 220 472
 676 126 655 303  73 512 348 363 275 411 304 552  46 364 608 312 256 205 479 557 111 146 209 121 534 255
 669 404 272 233 507 601 331 248 296 466 356 313 395 136 280 451 324 211 315  54 353 469 369 287 300 161
 370 305 294 264 543 560 224 266 263 250 390 268 110  59 418 432 381 521 379 431 433  55  71 668 589 257
 249 394 437 326 504 457 575 184 145 396 289 350 378 214 290 352 336 216 374 245 227 654 310 357 342 200
 262 258 273 341 332 403 325 298 261 219 335 384 497 631 291 156 309 407 301 625 495 247 244 321 327 259
 120 292 270 454 320 318 572 194 477 528 285 306 238 186 416 366 429 392 114 173 340 562 442 225 452 330
 322 118 137  57 202 445 175 471 666 514 420 223 500 371 317 103 354 513 453 143 426 398 361 444 281 387
 196 372 425 339  51 391 446 463 181 351 434 380 413 226 450 414  60 554 100 329 520 419 568 308 386  25
 362 358 307 509 641 170  35 486 430 105 349 157 388 408 400 531 571 532 116 163 355  37 311 618   1 460
 117  84 334 462 185 375  62 489 346 581 447 314 441 523 436 490 328 333 104  17  89 406 438 343 574 483
 188 530 496 577 271   2  27 635 299 449 569 640 539   3 421 241 591  92   5 624  88 405 529 115 412  53
 197 617 456 269 151 253 580 373  66 323 511 171 401 160  82 546 652 455 458 140  18 473  50 642 464 293
 213 428 592 518  14 102  26 594 627  48 564 169 524 536 367   4 590 474 609 127 501  42 488 538  93  13
 254 468 658  21  69  87  41 302 573 448 567 132 563 487 397  47 598 611 558  80 492  40   8 516 656 129
 586 237  22 503  16  85 288 533 637 537 360 316 443 597 549  96 548 399 283  31 251 195 585   7 588 109
 579 128 484 493  10 277 222 659 107   9 628 583 595 547  12   6 377 243 556 613 517  49 544 167 131 265
  81 494 201 629  11 182 138 582  24 634 603  28 565  43  15 626 653 619 228 174  78 207 607 527 620 232

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00529e+07us (= 10052.9ms, 10.0529s)
Satisfaction error: 2
Number of search iterations: 3106
Number of local moves: 1071 (including on plateau: 470)
Number of local minimum: 241 (including on plateau: 48)
Number of resets: 1
Number of restarts: 0

Problem in row 18: 362 358 307 509 641 170 35 486 430 105 349 157 388 408 400 531 571 532 116 163 355 37 311 618 1 460 => the sum is 8800 rather than 8801
Problem in row 23: 254 468 658 21 69 87 41 302 573 448 567 132 563 487 397 47 598 611 558 80 492 40 8 516 656 129 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 660  99  27 619 517 562 595 278 233 129 331 578 116 641  54 217  25  59  67 389  50 155 606 452 669 673
  18 655 113  89 104 240 145 363 603 412 523 612  31 534 659 385 506  49  21 106 304 630 166 415 457 661
 119 196 573  81 475 588 643 478 484 428  51 527 264 232 136  86  32 454 246  62 658  77 496 388 525 502
  41  92 110 668 162 399 463 343 608 143 279 609  39 421 117 522 128 214 156 615 651 115 593 584  64 665
 169  91  71 472 670 344 582 198 321 592 185 248  98 628 224 133 400 613 510 231 207 408 247 392 449 318
 284  33 124 263 167 652 626 460 138 258 349 512 182 464 141 495 565 197  37 168 332 597 553  69 664 471
 181 624 173 213 491 216  10 536 514 204 456 407 100 631 598 160 177 453 359 193 103 667 637 434  38 226
 153 159 229 622 122 548 492 656   8 206  76 635 351 564 310 404 194 602 151 567 294  60 296 666 199 237
 283 254 250 265 275 657 218 135 473 287 158 256 306 600 292 674 618 458 200 140 187 461 629 208 322 195
 268 220 269 271 519 561 419 675 379  68 252 466 223 180 345 262 676 663 251 601 134 320 309 355  72  43
 179 242 202 646 369 227 352 616 556 295 335 273 314 276 201 575 297 489 316 210 126 121 524 570 299 191
 307 405 189 235 375 123 324 539 257 368 291 272 543 330 403 398 465 377 410 164 137 439 289 486 382 293
 380 354 259 361 374 442 414 139 373 288 433 364 532 186 378 329 219 313 285 308 360  70 356 353 530 401
 462 303  45 327 192 243 336 221 286 367 507 255 236 290 420 393 444 639 301 350 516  40 319 260 417 632
 277 302 371 280 323 346 426 109 348  80 515 270 607 413 326 365 334 298 341 429 526 505 146 386 234 244
 144 342 610 551 640  58 396  48 205 662 370 347 112 411 381 333 212 383 642 406 586  94  15 282 176 395
 455 542 253 493 402 172 230 627 261  23 391 239 479  47 328 443  90 481 541 300 225 490  42 430 238 579
 424 560 554 423 384 438 397 183 215 550 157 190 118  97 445  30 469 142 366 358 476 281 477  46 538 483
 518 499 467 431  61 147 487 546 544 500 501 474 497 102 488  52 163  44   4 447 513 535  95  14 587  85
 504 480 418 422  79 274  56  19 357 312 441 537 376  63 468 508 409 559 647 325 552  53 161  82 545 154
 448 547 633 228 470 427 574 338 152  12 571 317 531 125 437 101   3  83 533 589  29 188 432 305 653  75
 577 245 623  24  74 267   9 211 203 557 494  17 339 649 654 555 650  65 605 503 672   2   6 222 485  93
 648  88 644  11 340  78 446 315  34 520 580 148 591 209  87 451 362 165 521 372 585 563 387 131  66 459
 596 450 390 174  73 132 111 108 625 425  26 127 590 440 175 558 171  96 416 549   5 671 528 611 178 576
 599 583 568 482 529 149  28 266 569 498 509  16 581 184 130  35 620 311 634 170   7 621  57 540   1 114
 107 436 636 150 614 511  22 394  55 617  20 105 645  84 604 337 572 594 241 249 566 638 435 120  13  36

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00535e+07us (= 10053.5ms, 10.0535s)
Satisfaction error: 1
Number of search iterations: 3362
Number of local moves: 1004 (including on plateau: 381)
Number of local minimum: 288 (including on plateau: 51)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 660 655 573 668 670 652 10 656 473 68 335 272 532 290 326 333 90 142 4 325 29 2 387 611 1 36 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 401 655 661 670 560  80 118  58 259 649  48 656 380  79 593  60  31  73 373 163  89 225 550 592 152 626
 644 630 507 177  52 674 363 346 508 423  71 536  67 165 629  51 653  28 255 161  84 195  92 428 651 411
 149 525 594 642 124 114 191 113 545 611  77 395 613 105 491 472  25  97 274  44  61 119 624 634 606 556
 123 496 616 506  78  62 164  69 153 585 162 464 672 174 665 189 233 197 447  70 652  74 640 666  38 607
  81 539 196 579 100  39 167 125 452 505 179 568 618 157 663 148 218 211 582  75 619 116 608 444 217 595
 238 668 557 648 159 151 180 251 108 580  45 641 514  43 469 279 187  68 424 130 669 216 565 617 257 137
 355 490 460 228  93 265 453 158 633 335 106 223 513 212 310 253  91 280 455 671 198 283 529 486 210 511
 138 261 183 493 112 314 443 488 673 590 141 132 612 133 190 194 224 103 659 181 657 308 548 272 154 598
 171 519 512 567 147  33 166 156 620 122  88 254 602 214 489 241 139 284 621 201 405 286 660 554 203 547
 173 463 266 300 309 339 168 205 312 664 318 206 615 188 518 281 647 256 589 250  59 178 510 430 349 208
 311 237 676 145 658 305 220 316 235 329 365 457 170 301 345 441 330 410 323 204 278 240 226 527 249 503
 500 227 389 143 209 432 479 327 313 292 350 675 270 287 388 244 242 236 302 426 290 358 456 437 343 186
 325 440 245 293 391 406 282 344 387 374 184 383 398 413 258 234 285 337 494 200 267 356 427 341 390 347
 320 439 319 260 306 247 362 382 331 322 231 353 417 271 357 393 288   3 352 277 449 334 298 448 446 596
 377 291 348 297 403   5 219 385 381 155 480 333 340 263 364 402 416 467 307 576 262 315 304 269 422 420
 342 368 351 450 399 361 418 246 336 146 375 378 303 530 474  30 415 384  83 425 328 371 295 182 360 451
 419 193 409 414 332 481 392 296 394 396 466   6 324 435 367 461 369 372 104 386 485 421 117 229 532   1
 299 128 497 359 498 533 354 586 202 484 473 445  40 317  56 408 370 509  37 516 404 492  35 221 515  23
 326 134  24 294 581 571  95  41 454 459 501 102  90 475 239 504 438 431 150 321 478 471 436 213 531 442
 470 101 144 129 542 502 110 544  82 397 543   2 215 520 248 538 517 495 338 458 476 604  99 120 400 207
 499 199 142  85 523  14 429 468 366 140 600 433 275 487 462 551 465 521 176 540 232 434  65  27 605  63
 526 407  16 482  10 591 546 524  46  86 625  15 121 587  36 577 578 636 535 522 553  21 276 185  32 268
 412 222  50  19 534 379 597 537  76  49 654   7 160 575  22 572  18 562 136 650 574 646 289 252 566 243
 631 115  13 230 570 667 632 622 564  11 569 549 131 623  87 135 643 558 584 192  57 483  47  29   4  54
 559  20  53 264 528 635 639 552  98  42 609 477 169 610  17 588 603 645  94 599 109 627   9  72   8 175
  12  34 573 127 583 601 614 662 273  55 541 111 172 637  64 555 376 638 107 563  66 628  96 126 561  26

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.0053e+07us (= 10053ms, 10.053s)
Satisfaction error: 2
Number of search iterations: 3151
Number of local moves: 846 (including on plateau: 332)
Number of local minimum: 257 (including on plateau: 38)
Number of resets: 2
Number of restarts: 0

Problem in row 4: 123 496 616 506 78 62 164 69 153 585 162 464 672 174 665 189 233 197 447 70 652 74 640 666 38 607 => the sum is 8802 rather than 8801
Problem in row 24: 631 115 13 230 570 667 632 622 564 11 569 549 131 623 87 135 643 558 584 192 57 483 47 29 4 54 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 531  56 668 138 650 331 500  62 614 432 599  86 165 585  82 199  45 317  90 202  34  36 452 579 675 673
 544 618 176 676 667 103 663 118 410 488 602 362 402 455  97 108 183 117 238  70  81 613  94 559 121 236
 302 603 664 156 395 134 274 507 530  37 497 190 608 345 482 195 175 511   7  66 194 406 251 285 604 383
 396  61 527  31 661 177 158 486 149 558 191  75 670  63 217 101 441 615 459 491  35 572 472 560 605  30
 189 242 140 116 629 624 598 128 537 587 639 150 672  41  77  32 113 659 653 102 512 241 337 597  57 129
 436 671 426 157 212 277 611 600 564  64 513 160 413 143 343 490 144 485 320 281 107  91 211 526 171 385
 220 130 346 470  78 423 674 215 583 133 619 349 119 315 142 180 224 617 529 595  98 218 553 463 324 184
 244 634 273 204 288 278 255 313 665  20 145 577 286 540  38  60 609 267 641 543 401 260 109 657 316 178
 186 489 152 229 197 408 126 206 538 643 265 169 660 293 214 100 514 669 525 532 306 154 179 654 240 153
 223 647 246  51 168 188 328 155 502 578 231 221 374 200 420 379 644 318 658 348 283 228 252 503 296 360
 159 311 295 332 369 326 546 300 213 181 371 279 666 243 375 216 642 483 481 226 356 193 425 174 234 405
 266 314 376 312 319 366 480 323 299 276 247 301 233 263 222 626 350 656 290 414 389 269 621  18 310 261
 297 357 330 275 373 250 198 427 329 568 209 412 112 390 646 245 591 182 466 104 351 607 304 309 370  99
 460 335 421 163  47 475 257 364 230 298 384 400 294   8 388 287 442 237 456 518 307 567 355 192 522 394
 570 322 484 341 120  15 259 139 545 541 166 411 382 445 431 282 435 391 398 353  17 407 258 358 339 392
 555 105 506 428 135 173 386 464  95 462 336 499 469  71 342 359 125  69 262 637 340 361 554 253 443 372
 256  39  43  87  92 479 563 457 365 131 439 454 327 434 403 582  83 201  22 528 581 516 551 196 422 550
  29 164 333 440 515 409 187 424 449 419 136 352 399 380 418 303 248 635 378 589 458 367 225 185 347  12
 620 268 429 417 627 574 492  68  48 471   3  80 305  89 569 474 146 433 235 573 571 437   2  79 404 387
  58 444 438 415 448 284 115 254  14 501 519 632 114 478 289 565 453  40  10 473 616 495 610  16  11 509
 590 552 504 584 508 203 487 566  33  52  28 111 232 496 548 477 450 334 291  74 124 446  93  59 494 465
 132   1 594 612 468 547  44 510  67  54 549 451  76 535 593 321 354 151 172 148 588  49 270 524 628 363
  88 520  65 576  46  53   9  25 280 110 539 586 338 638 521 534 517  23 606 498 308 592 393 264  21 651
 630 467 127 397 625 533 227 542   5 601 381 210 207  84 430 461 416 162 161 170 652 505  50  96  13 649
 476   4 219 561 122 648 292 493 596 271  26 622  73 631 137 580 208 106  85  27 556  24 557 640 272 575
 344 447  19 633  42 523  72 655 141 325 167 662 205 636 377 645 249 123 368 239 536 147 623  55 562   6

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00526e+07us (= 10052.6ms, 10.0526s)
Satisfaction error: 1
Number of search iterations: 3368
Number of local moves: 1218 (including on plateau: 527)
Number of local minimum: 311 (including on plateau: 64)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 1: 673 121 285 472 241 107 595 641 669 644 216 222 390 294 411 336 131 449 68 115 203 468 576 127 4 344 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 659 511 403 257  50  15 595  74 662 437  69 645 558 468 170  26 651 195 117  49 298 185  88 653 561 405
 396 670 106 672 149 635 173 621  39  30   8 663 557 538  21 630  85 279 154 491 272  73 646 345  83 465
  78 620 660 270 664 627 232 230 605 565 612 199 131 273 629 206  55  81  10 110 431 144 609 358  24 378
 115 315 628 654 186 643  93 121 142 496 640 309 189 433 489 648 120  48 177 348 201  89 104 601 482 530
  70 576 552 194 657 532  90  94 376 221 514 661 463 665 513  67 666 143  32 282 122  84 354 205  61 607
  77 674 479  91 190 375 108 132 102 636 495 447 224  80  34 671 555 246 202 137 676 139 591 299 466 675
 162 164 259 128 184 448 655 105 397 551 524 175 619 200 409  25 622 331 133 158 353 266 472 258 593 610
 368 264 251 269 320 429 111 631 107 652 602 157 278  71 669 342 204  62 310 147 124 242 492 614 618 467
 333 146 597 255 254 554 198 525 216 182 192  99 215 596 487 360 181 436 560 302 312 163 550 176 369 543
 247 193 444 138 432 458 262 359 334 223 313 172 243 357 323 314 673 539 389 229 332 152 563 265 377 470
  35 318 324 114 248 519 338 260 361 238 571 100 340 267 235 480 494 418 210 287 341 502 536 188 421 656
 296 394 291 356 336 226 649 233 274 207 371 231 449 351 603 355 303 126 402 346 392 384 453 275 168 330
 500 293 427 244 367 228 155 473 401 329 562 398 350  31 335 305 587 325 307 407 209 391 203 370 592  12
 379 286 388 459 311 295 386 454 464 393 290 373 234 289 339 123 512  76 411 639 227 322  98 284 326 443
 253 380 424 481 165 191 347 119 510 337 321 483 508 280 212 366 288 426 400 281 385 241 349 328 252 474
  87 362 423 214 300 613 304 462 460 430 422 169 319 414 156 382  65 439 344 308 316 600 372 440 297 103
 520 544 374 434 240 178 413 509 469 471 217 442  66 493  46 484 150 196 438 486 343 420 395 263 135  75
 450 219  56 548 268 213 589 383 504 644 457 387 501 516 327 249 127  17 416 446 451 534 113 166  95 125
 428 390  54 505 410 419 581  18 485 435 594 537 608 363 183  37  41 415 276 568 364  53 301 455 261  20
 408 109 160 490 527 306   1 567 574 118  64 623 535  13  57 564 517 580 399   3 586 478 381  16 667  58
 559 140 112 365 533 441 632 406 522  86  82 547  40  59 412 541 445 528 488 476  47 456 498 187 136  63
 499 570 572 624 647  97 569 582  72 151 134 239 174 129 167 141 526 583 292 475  44 452  22 285 575 180
 545 130  11  19 417  28 577 599 515 222  33  60 477 529 461 256 546 616 573  79 617 542  27 518 179 225
  38   7 497  92 634  29 633 425  51   4 590 236   2 277 642 549 283 507 579 531 220 626 197   6 540 606
 641   5 161 611 159 250  42 211  14 506  23  45 503 553 588  43  96 585 584 650 615 625 116 578 352 245
 658 521 148 317 153  52  68 208 145 237 101 404 218 556 294 637   9 604 598 566 523 638 271 668 171  36

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.90185e+06us (= 7901.85ms, 7.90185s)
Wall-clock time (full program): 7.95444e+06us (= 7954.44ms, 7.95444s)
Satisfaction error: 0
Number of search iterations: 2276
Number of local moves: 953 (including on plateau: 378)
Number of local minimum: 179 (including on plateau: 35)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 516 639 102 647 553 206 129 132 575 145  18  89 608  27 632 613  23 556  29 669 235 181 529 431 466  50
 646 245 629 564 676 149 108  42 382  98  61  57 643 176 550 618 184 113  85 228 654  46 555 123 592 577
 488 492 635 218 128 463  81 110  75 589  40 453 306 118  43 165 612 571  26 201 630 526 514 116 631 570
 670 666 294 621 364 458 121  51  63 199 286 265 664  60 342 662 173 464 188 191 337 168  32 653 248 561
 568 602  73 576 661 127 151 507 106 572 183 160 560 158 657 600 144 225 170 138 498 663 355 174  31 142
 579 584 636 523 194 357 673 310 166 250 140 156 115 126 308 595 566  80 369  71 442 527 533 164 162 175
 672 574 648 633 125 182 155 281  78  97 242 445 154 236  67 177  91 131  74 652 545 531 264 616 610 521
 251 478 190 449 409 157 267 638 278 104 210 253 479 163 185 273 596 120 537 279 311 198 448 655 240 634
 109 659  87 506 180 328 327 367 223 303 292 231 644 256 381 141 261 658 203 215  55 339 391 321 650 674
 219 554   8 607 591 298 326 239 400 497 385 237 227 232 119 280 341 380 322 587 305 329 266 244 511 297
 503 283 171 645  62 345 274 143 178 316 423 122 135 295 399 599 450 217 462 221 363 675 515 347 314 344
 408 510 335 275 133 146 287 468 192 307 288 333 389 107 455 313 439 411 513 421 440 372 406 350 207 296
 495 205 270 320 300 336 444 349 284 351 414 186 430 378 195 405 309 348 301 376 508 302 374 269 353 299
  37 386 331 340 396 417 334 246 426 315 289 509 660 366 387 383 317  20  99 398 373 213 583 260 282 434
 312  86 390 325 388 371 395 304 358 500 539 377 161 318 222 362 544 477 197 393 435  21  65 456 528 277
 241 402 474 359 370 404 338  22 403 365 352 379 332 412 354 204  83 209 416 249  72 536 285 420 580 540
 226  68 625 172 441 480 428 475 667  64 196 233 485 255 425  12 490 330 361 254 323 512 465 482 193 139
 105 229 483  13 418 547 517 573  25 546 437 451 446 519 243 588 410 268 394 524  82 234  39 117 469 124
  90 319 137 252 484 429 656 356 427 604 438 585 454 489 494 522  77 247 262 324 150   3 293  84  10 615
  28 167 472 112 501 476   7 413 422 459 343 419 114 611 470 220 153 535 491 291 384 111 346 609  96 551
 424  19  56  76  41 433 290 496 559 460 504  30 563 525 538 375 212 594 493   6 259 499 258 562 436  93
 401 208 211 216  59 471 452 473 557 481 590 461  49 641  11  52 368 541 578 147 520  88  95 443 552 136
 271 100 640 257 502 534 649  36 486  47 447 569  79 543 622 360 565  48 567 605  53 671   4 101  44   1
 432  69 532  24 668  92 169 549 202 542 614 598  45 619 651  58 159 200 620 593 179 626 276   2 152 130
  16  70 238  38 148  14 558 597 642 487 603 617   5 623  34  35 606 601 407 505 582  15 392 530 214 224
  94 187 134  33   9 581 665 624 627 103 467 586  54 548  17 189 628 457 637 263  66 415 518 272 230 397

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00539e+07us (= 10053.9ms, 10.0539s)
Satisfaction error: 2
Number of search iterations: 3203
Number of local moves: 1106 (including on plateau: 470)
Number of local minimum: 269 (including on plateau: 50)
Number of resets: 1
Number of restarts: 0

Problem in row 1: 516 639 102 647 553 206 129 132 575 145 18 89 608 27 632 613 23 556 29 669 235 181 529 431 466 50 => the sum is 8800 rather than 8801
Problem in row 8: 251 478 190 449 409 157 267 638 278 104 210 253 479 163 185 273 596 120 537 279 311 198 448 655 240 634 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 667 532 104 673 675 649 113 595 503  76 504  33 221  74 115 507  85  53 101 309 647 664 300  29 160 412
 668 661 484 653 671  83  91 476 420 290  55 229  32 119 157 656 142 251 272 643 447  54 488  57 652  50
 147 151 674 569 670  67 631 635 592 103 315 458  30 110 130 525 517 201 179 625 384 137 506 102 214 129
 617 571  48 381 242 531 154 636 436 441 465  96 207 353 187 657  45  42 155 405 478 663 659  51  95 186
  79 109 287 560 131 621 651 479 637 580 470 111 628 312 193 163  81 194 146 543 492 510 642  36  82  64
 167  88 127 672 614 654 334 619 603 123 644 231 600 185 224 170  87 169  84 400 662 212 630  60 203 239
 159 246  73 490 267 213 658 297 607 357 615 200 578 618 223 164  69 100 236 676 632 259 257 225 439 143
 669  75 183 508 329 125 230 665 597 210 604 126 253 209 271 433 226 261 660 118 646  77 307 211 481 327
 158 252 176 551 471 472 655 502 590 348 579 278 181 216  89 568 234 301 156 321 640 280 240 233 122 188
 273 250 184 491 639 270 375 584 218 305 376 308 205 296 333 445 666 285 486 208 352 120 369 177 175 411
 196 295 220 291 452 316 380 382 443 461 394 202 438 282 173 548 228  70 339 344 292 435 407 361 564 288
 235 237 284 322 342 247 335 368 609 199 268 341 358 457 289 442 286 547 388 304 241 150 602 263 385 302
 190 161 232 299 314 351 360 345 434 306 355 485 383 429 410 349 390 346 319 403 427 303 311 325 243 331
 274 281 283 401 276 324 262 293 317 404 509 362 338 366 354 255 416 350 417 372 408 347 265 512 198 217
 264 336 446 254 418 370 337 244 330 378 386  35 168 174 373 498 371 530 359 227 413 540 399 515 397  39
 387 431 340 275 363 367 277 258  86  43 266 406 364  94 310   9 527 533 326 480 419 332 513 456 444 495
 389 482 575 245 148 323 428 206 195 489 222 396 432 124 550  58  66 440 521 463  97 415 343 499 128 567
   6 552 494  90 391 455 425 152 121 453 139 514 318 487 483 298 522 260 536 114  61 426 424 477 136 467
 475 501 473 249 141 409 365 279 189  44  98 379 538 393 414  28 516 557  21 518  78 645 116 356 423 596
 535 546 493 165 374 542  46   2  17 505  52 451 553 395 454  59 459 422 545  65  37 430  62 421 612 559
 524  47 634 313 377 105 520  20  16 133 166 398  99  34 599 112 466 616 539 108  49 587 526 593 572 648
 611 566 437 135  68  93  14  24 149 469 448 523  19 613 650 153 468 629 549 460 162   5  31 500 561 464
   4 256 573  10  71 586 541 140  80 554 294 582 591 576 589 172 178 544 248 134 144  12 219 562 585 556
 474 633 392 107 138 106 462 191  13 320 182 581  92 623  72 449 588 534 606 497 132 565  18 529   1 496
 570  23 558  56 204 511  40 171 402 583 215 626 577 638 537 528 574   3   8  26 192  25 145 641 328 620
  63 519  27  41  15  11 117 238 197 627 180 450 598 624 622 555 594 563 605  38 269 608  22 610 601   7

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.16655e+06us (= 5166.55ms, 5.16655s)
Wall-clock time (full program): 5.21883e+06us (= 5218.83ms, 5.21883s)
Satisfaction error: 0
Number of search iterations: 1230
Number of local moves: 853 (including on plateau: 380)
Number of local minimum: 61 (including on plateau: 52)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  47 672 177 140 484  63 119 503 324  70 660 270 669  44 118 486 257  90 478  93 506 268 398 602 650 613
  35 142  78 122 558  89  67  10 513  31  34 670 644  15  18 541 571 676 561 120 579 597 182 657 623 668
  22 603  33  57 123 420  76 647 147 331  53 648 138  58 440 638 645 624 673 128 536 620 236 328 425 152
 165 584 131 641 175 289 189 598  83 327 651 586  66 174 303 545 649 172 112 404  55 567 408 633  79 215
 512 599 145 601 574 116  72 562 642 158  41  45 202  49 345 450 674 160 135 618 115 155 448 531 666 186
 232 203 566 168 221 292 218 216 529 469 104 653 308 600  94 141  87 634 163  96 581 192 663 569 636 166
  42 617 234 206 629 363 652 639 204 416 429 330 264 134 148 164 607 197   8 605 385 284 510 485 124 125
 157 137 156 107 418 306  82 392 667  95 659 194  88 170 199 490 407 187 610 583 533 304 635 619 271 335
   7 269 146 260 149  61 608 622 577 637 298 262 111 230 130 278 543  73 585 646 632 239 453 259 497 229
 208 243 413 301 340  60 325 526  81 621 321 376 386 277 286 300 346 411 412 296 548 178 389 525 351 281
 293 261 217 220 200 240 241 415 265 661 207 251 235 179 546 383 472 611 316 353 578 299 258 427 475 198
 606 227 181 212 237 242 334 494 273 297 640 320 176 332 432 279 291 377 184 193 538 319 248 410 422 537
 414 406 311 476 333 399 367 317 468 209 183 219 290  52 507 225 359 479 387 391 275 348 362 460 254 310
 266 285 382 295 249 252 253 419  24 631 442 445 616 366 305 423 280 344  32 263 282 374 447 288 483 355
 477 596 214 430 205 443 403 491 350 358 455  56 364 435 318 302 384 368  85 315 381 361  28 190 402 390
 354 360 143 446 397 343 373 349 337 106 191 393 339 449 436 100 267 394 283 371 224 434 522 388 329 473
 417 395 675 456 336 493 433 231 314 162 474 375 480 396 461 312 113  86 439 341  62 441  99 222 121 467
 654 326 276 524  80 463 457 144 347  38 379 426 488 542 424  65 171 523 437 233  54 517  23 274 470 466
 576 554 322 110 487 459 338   3 444 245 511 489 519 588  40  37 226 499 570 421  46 129 126  74 438 550
 409 508 458 540 103 495 238 213 370 250 527  91 454 464 357 378 365 557 405 127 136 492  13  50 287 514
 539 167 587 516 431 451 575 159 502 161 188 352 658 342 482 518 102 153  59 572 196 471 210  84  17 309
 501  14 614 627 549 534 547 323  48 552 151  12  51 504 500 428  11 180 462 532  64 515 664  29  20 369
 625 109 556   2 452 592  71 307   5 401 223  43 496 553 590 594 671  21 509 185 228 521 565 108 201 173
 612  75 604 582 380 195 528   4 573 356 246 535  36 568 114 400 105 150 313 551 481 133 544 555  69  92
 630 372 662 169 132 498 609 211 560 563 139 505  68 615 628 294  97 244 564 247 256  16  98   9  26 589
   1  77 520 593 559 643 626   6 154 656 595 255 655 665 580  30 101 591  19 117 530  27 272  25 465  39

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.89761e+06us (= 6897.61ms, 6.89761s)
Wall-clock time (full program): 6.94998e+06us (= 6949.98ms, 6.94998s)
Satisfaction error: 0
Number of search iterations: 1955
Number of local moves: 884 (including on plateau: 346)
Number of local minimum: 166 (including on plateau: 43)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
   8 134   6 550  18 565 634 609  27 223 587 582 661 617 131 616 576  35  52  58 608  29 265  10 572 628
 402 631  13 561 143  98 414 507 525  32 627  44 624 625 645 302 468  11  86  37 508 168  38 555 527 210
  90 603  12  23 568 506 485 585  67 115 612 299 660 659 116 636 219 580  50 141 126 455  97  47 579 471
  79 453 194   1 122 559 135 623 213 494 175  78 570 633 644 615 466 501  93 228  21  45 100 606 516 637
  95 551   9 460  76 505 590 428 586  85 552  51 571  36 207 573 130  14 230  80 378 558 528 620 529 359
  72 251 536 626 553   2 423 532 137 449 556 209 475 543  49 544 459 581 150 123 155  65 212 526 117 456
 290 156 435 465 187 557   5 512 540  28 515  40 404 181 519 594 478 458 145 510  19 470 374 500 399  20
 340 479 497 492   3 498 403   7 163 129 462 406 511 474 489 483 445 481  17 577 108  96  94 545 493 109
  30 372 447 533 357 454 538 560  41 419 133  42 564 473 356 541 306 136  66 520  34 575 486 336 361 121
  56  43 384 436 583 522 514 394 178 420 491 326 461 415 176 412  39 389  73 411   4 632 269 439 342 392
 309  55 434 379 407 424 383 338 274 518  15 291 365 442  25 105 452 440 294 288  63 523 537 503 457 480
 321  83 430 334 270 322 349 380 441 448 444 362 400 425  54 437 371 345 443 307 195  33 405 368 464 370
 413 390 328 377 429 418 327 467 298 312 344 364 325 569 330 331 324 363 211 276 355 426  22 295 262 245
 433 396 341 317 386 339 197 255 332 188 352 233 451 408 222 216 397 391 673 385 438 263 235 247 313 393
 358 279 427 421 376 266 320 367 246 296 252 381 284 409 375 410 482 180 314 369 431 249 398 353 315 243
 476 208 502 148 277 308 241 159 360 643 289 286 254  77 335 640 542 229 292 275 622 280 595 224 282 257
 283 272 285 300 278 237 316 182 469 562 201 350 234 621 273 193 226 311 401 343 214 382 651 161 417 639
 463 588 144 248 268 657 183 354 646 281 348 509 103 101 387 118 655 221 614 261 641 140 215 301 190 165
 593 192 323  81 656 162 204 293 347 304 287 477  64 114 658 152 599 231 674 238 487 124 567 319 337 318
 610 574 259 198 422  88 618 146 521 484 171 267 191 264 488 260 107 671 672 630 310 205 154 206 113 172
 504 524  48 157 244 566 196 139 613 217 112 546 242 170 548 203 184 346 496 534 666 125 584  91 351 395
 670 578 604  84 297 333 132 173 236 635 199 239 102 106 554 138  69 592 432 149 601 675 605 151 142 305
 530 200 256 185 665  46 250 147 663 600 153 531  53  59 258  68 202 668 676 589 472 669 450 127  31 253
 547 220 596 373 611 179 164 120 174 642  99 650 111  71 160  87 490 446 549 654 186 607 104 662  74 225
 597 240 653 539 189 166 128 158 629 167 177 591  60  82 303  70  89 119 535 649 664 388 218 517 602 271
 232 329 638 513 416  24 652 366  75 110 648 647  61 227 499  57  26  62 563 169 495 619 598  92  16 667

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.53179e+06us (= 4531.79ms, 4.53179s)
Wall-clock time (full program): 4.58455e+06us (= 4584.55ms, 4.58455s)
Satisfaction error: 0
Number of search iterations: 1039
Number of local moves: 614 (including on plateau: 148)
Number of local minimum: 47 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 107 656  81 154 603 501 650 622  82   8 606  53 175 504 115 452 495  37 211 671 182  18 594  73 520 630
 199   9 469  23 486 626 547 546 673  80 576 170 611 530  14 134 159  76  71 654 551 106 185  92 624 590
 203 667 625 668 334 582  94 559  50  33 525 253  56  72 202 417  63 198 172 293 675 146 136 674 566 538
 147 629 207  44 597 604 651 601 121  91 399  26 676 596 258 535 126 125 308 109 561 124 338 238 132 558
 120 237 137 167 553 655  69 639 133 225 665 153 659 503 465 358  93 214  46  42 161 662 657  13 584 591
 645 108 166 212 623 543 152 500 114  43 669  97 116 549 387 489  95 158 257 649 537  99 117 276 643 557
 149 672 151 102 627 446 588 311 112 299 232 267 200 641 453 646 171  41 103 145 670 219 250 184 595 527
 210 155 191 391 586 633 405 511  24 277 564 220 129 574 648 555 227 224 292 607 181  88 305 278 222 304
 160 236 286 335 190 467 254 567 640 249 397 269 245 472 480 531 188 228  74 186 274 294 150 554 539 536
 234 255 404 309 605 496 192 351 197 644 262 295 187 573 631 661 221 148 285 177 266 550 241 111 122 384
 240 666 251 346 268 436 259 585 289 260 332 282 318 213 620 229 242 478 195 275 310 194 429 353 208 523
 362 239 402 344 331 416 313 356 288 140 320 256 223 355 458 135 363 317 215 349 600 389 463 377 544 246
 440 303 297 464 347 392 380 231 230 406 448 498 476 354 359 438 216 370 366 144 369 319 284 342 301  28
 263 287 291 247 233 333 337 348 314 357 173 451  78 306 423 450 383 321 413 302 428 466 442 283 381 491
 330 217 545 324 433 164 374 336 261 477 329 447 281 204 420 272 441 323 315 290 435 350 421  21 415 376
 375 340 457 327 482 143 378  62 516 273 414 449 270 426 119 339 343 365  66 352 393 483 243 460 326 400
 445 431  35 265  68 157 408 394 341 484 201 361 571 444 244 300  54 481 475 371 382 425 514 373 398 179
 479 390 422 360 165 193 443 113 456 461 459 403 396  45  29 128 617 279 528 264 409 529 364 386 424  59
 487 419  10 522  30 296 578 505 432 345  36 581 541 454  60   5 439 401 492 427  84 430 437 565  51 174
 368 462 407 517 395 123  70  16 526 534 226 499 619  83 176 100 519 533 658  40 502 379 410 418  65 156
 468 577 608 434  98  86 556  58 552 506 196 493 411  47  22  49 385 652 388 615 235 490 548  89 206  32
 638 163 513 488   3  55 322 180 636 316  61 563 162 248 271 139 583 510 412 532  17 298 598 521 367 205
 509 515 540   7  34  52 130  77 580 618  87 470 104 105 455 570 569 485 647  25 372 508 169 592 110 471
 642  11 660 664 280 138  90  19 599 473  79  27 621 328 612 168 542 663 613 653   4 101 474 307   2  31
 524 142 579 575 252  75  64 218 494 609  38 616 637  48 312 183 632 560 610   1  85 562  20 634 325   6
  57  15  67 512 178 189 497  96 141 593 507 602  39 127 568 518 635 614 589 628 118 572  12 587 131 209

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00535e+07us (= 10053.5ms, 10.0535s)
Satisfaction error: 2
Number of search iterations: 3085
Number of local moves: 1026 (including on plateau: 360)
Number of local minimum: 257 (including on plateau: 42)
Number of resets: 2
Number of restarts: 0

Problem in row 1: 107 656 81 154 603 501 650 622 82 8 606 53 175 504 115 452 495 37 211 671 182 18 594 73 520 630 => the sum is 8800 rather than 8801
Problem in row 13: 440 303 297 464 347 392 380 231 230 406 448 498 476 354 359 438 216 370 366 144 369 319 284 342 301 28 => the sum is 8802 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 651 644 571 500 199 520 544 526  47 143  14 668  64  79  55  27 246 449 482  39 574  86 513 437  91 632
  85 620 409 548 188  52 590 406 140  67 535 589 583 294 613  24 250 105 102 582 631 116 674  51 256 291
 104 657 581 650 203 563  78 636 216  81 145 133 524 534 530  43 469 117 134 172 671 519 165 638  89 149
 577  58  20 114 604 565 612 329 157 477 640 573 426 464 585 196 248  68 101  77 120  82 435  48 617 608
 174 144 177 347 676 538  38 614 286  74 607  45 618 564 512 139 334 108  90 673 662 197 595 207 146 236
  87 540 639 596  83  10 176 625 266  61 601  26 374 314 591 242 479 289 187 271 675  76 649 148 141 655
 185  97 180 220  92 666 539 575 457 290 150 132 658 263 559 336 633 206 222 594 460 516 293 234 106 138
 307 635 162 529 588  40 603 184 231 170 169  50 491 151 654 634 624 233 621 230 147 509 425 113 166 135
 204 440 418 489 201 376 368 235 297 386 611 265 168 383 481 208 198 380 398 244 653 270 495 137 227 269
 202 395 342 282 372 319 225 392 161 664 186 402 667 659 557 173 285 167 123 331 445 205 578  57 302 310
 160 279 340 382 360 308 316 506 299   3  59 375 407 641 511 669 645 260 193 215 259 214 359 436 341 264
 283 598 175 100 275 423 337 415 351 238 349 298 255 642 397 468 278 378 267 324 217 243 432 304 253 501
 249 178 525 400 412 476 224 306 369 237 388 442 358 136 251 396 315 171 339 301 295 268 560 343 505 357
 366 257 200 465 385 461 420 280 277 288 318 328 335 258 313 212 370  53 323 551 346 384 296 333 637 345
 311 441 103 276 390 410 424 262 356 467 389 252 365 325 503  75 622 480  12 195 327 403 281 309 377 446
 416  29 411 393 427 399 194 562 387 408  16 579 326  44 163 458 413 401 450 119 456 367 567 462  32 322
 439 422  73 592 371 330 344 211  63 321 487 587  30 353 483 619  96 417 429 473 391 305 240 232 433  60
 443 354 488 379 156  84 292 428 431 284 438 533 404 287 218 221 121  93 448 518 122 510 179 361 463 546
 615 164 115 155 381 434 494   4 355 549 338 466  21  25 226 455  37 474 545 528 181 663 107 616 541 312
 556 209 484 223  70 394  33 118 444 602 576 523  13 127  46 606 554 472 421  22 245 486  95 499 536 447
 550 273 558  88 190 609 219 320 496 213 111 498 210 142  35 599 475 521 452 522  98 124 241 610 593  54
 303 459 497 110 183 228 515  72 552 568 364 414 363 352 239 570 129 572 300 451  17 504  31 537  18 453
 569 373  71 154 471  36   5   6 490 623  65 502 153 660  80 532 158 514 470 586 492 247  42 627 646 229
 600 272 189 454 672   2 191 112 561 665 580  94 130  49  28 348  41 628 419 555 126 543 362   1 626 553
  15   9 531  23 182 128 527 192 605 648 566  19 597 508  62 517 152 584 630 159 125 647  56 656 652  11
 350 254 542 332 670 430 493 485 507 274  99   8 261 547 109  34 629 661 643  69  66 317 131 405   7 478

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.48033e+06us (= 8480.33ms, 8.48033s)
Wall-clock time (full program): 8.52947e+06us (= 8529.47ms, 8.52947s)
Satisfaction error: 0
Number of search iterations: 2599
Number of local moves: 852 (including on plateau: 330)
Number of local minimum: 190 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 218 592 135 599  37 661 510  68  94 622 588  57 411 120  70 122 641 518  88 356  49 189 675  51 656 674
 642 676 673 507 557 111 568  52  41 619 265 235  86 108 670 164 126 609  93 114  42  27 648 144 361 663
 179 436 669 655  32  47 643 249  59 625 667  82  58 332 659 383 463 529 136  53 118  99 566  20 458 584
 547 596 185 379 170 492 494 119 630 626 113  73 662 165 142 101 200 615 315 234 477 267 416 148 460 175
 161 516 665 580 664  91 600 121 127 116 107 166  54  66 103 322 159 672 444 618  31 634 395 660 590 139
 376 468 158 671  50 527 553 143 256 146 260 154 149 205 329  33  84 565 528 339 297 447 587 247 561 668
 123 454 167 544 471 251 657 184 654  90 150 229 195 182 173 562 252 627 451 298 384 310 476 162 525 230
 174 519 194 469 289 178 612 647  96 353 610 151  95 106 269 110 257 577 414 640 293 245 550 196 554 203
 168 426 302 425  89 621 632 278 617 437 601 160 147 214 181 221 169 357 226 581 340 275 190 242 575 327
 591 462 318 409 312 207 287 213 316 574  85 291 145 296 313 163 446 224 551 633 432 284 491 311 238 209
 666 503 211 387 351 250 608 274 217 303 597 254 272 202 338 369 109 188 623 277 279 292 281 117 585 248
 441 386 140 393 440 342 331 288 324 364 398 262 206 306 472 448 236 225 496 450 223 192 394 341 359 344
 455 372 263 210 380 243 271  97 385 300 413 415 354 314 326 542 276 335 294 465 325 320 367 246 388 445
 299 180 533 520 261 391 305  65 474 199 347 336 216 370 515 363 402 466 346 321 352 323 330 392 255 240
 467 348 259 197 573 377 375 396 443 390 371 285 319  19 362 198 345  28 475 286 309 545 430 244 343 417
 212 373 368 191 328  56  23 549 133 461 452 482 406 478 410  44 177 204 442 422 419 439 483 484 457 308
 232 186 227 350 208 487   8 464 501 337 420 459 233 418 555 403  76 421  29 431 486 407 427 360  81 595
 598 270 526 264 358 378  77 365 399 540 241 505 400 537  10 438 493 401 412  22  43 404  64 374 258 424
 603  18 355 115 193 104 219 502 429 428  35 594 435 366 571 453 485 280  40  61 572 423 112 512 333 563
 155 273 560 131  83 504 283 488 381 534  26 522 499 434 530 220 564 141  21  12 650 489 187 552  92 470
 134 231 508 157 480  36  15 539 456  74 558 408 495 511 490 473 548 100 304 578 156  13 153 638 349 397
 128  25 517  79 497 579  39 644 604 102 543 405 645 481  14 538 509 172 290 521 616 129  11 586  67  60
 629   2 138 301 583 546 176 589 253  63 237 498 535 658 559 500  16 201  72  75 651 636  87 524   4 268
 523 152  78 183 532 569 266 479  38 433  46 652 541 653 132 646 570  69 624 582   6 614 130 105  80  98
  71 334 628  55 635 239 125 606 567  17 282 513 607 649   5 536 593  62 531 137 631 222  34 506 171  45
   9   3  24  30 228 514 124 382 307  48 389 613 637 611 602 449 605 215 556 295 620 576 317 639   1   7

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00552e+07us (= 10055.2ms, 10.0552s)
Satisfaction error: 2
Number of search iterations: 3584
Number of local moves: 1100 (including on plateau: 408)
Number of local minimum: 319 (including on plateau: 54)
Number of resets: 2
Number of restarts: 0

Problem in column 13: 411 86 58 662 54 149 195 95 147 145 272 206 354 216 319 406 233 400 435 499 495 645 535 541 607 637 => the sum is 8802 rather than 8801
Problem in column 15: 70 670 659 142 103 329 173 269 181 313 338 472 326 515 362 410 555 10 571 530 490 14 559 132 5 602 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 596  69 574 569 581 332  23  80 526 632  76 275 523  74  33 570  65 676 541 461 623  25  40  46 117 674
 563 521 221  68 587 103  97 104 198 604 488 593 642  95  36 127 519 555 126 559 612  17 616  38 670  42
 572 473 662 545 584 537 399 165 463 145  34 153 648  73 385 124 528 156 547 123 514  15  44 675 135 102
 485 458 636 573 650 491 527 134  83 157  48 672 580 212 260 659 649 113  93 138 331  55 647  31  82  37
 594 660 408 217 118  81 440 155 651 597 111 133 214  60 497 615 128 673  87 631 532 645 130 167 190  67
 196 568 554 634 246  43 422 310 666 177 663 538 150 208 184 166 181 664 656 669 524  98  28  66  51 139
 285 551 182 140 174 625 652 499 142 228 265 577 263 244 343 187 661 644 266 658 510 188 206  70 179  62
 243 430 249 191 350 334 639 258 579 225 250 119 630 262 144 223 654 254 565 219 530 202 294 203 646 108
 414 434 560 657 152 496 176 148 270 222 423 509 261 233 540 197 210 465 389 476 436 322 240 192 115 264
 286 512 517 323 364 489 433 321 338 291 171 281 230 224 508 132 598 216 172 668 484 186 238 297 229 293
 447 359 227 387 215 606 643 109 278 248 288 671 392 312 421 185 169 295 309 194 351 388 373 416 211 307
 601 201 279 284 213 518 412 381 522 336 353 146 247 236 251 290 235 415 300 289 543 272 296 273 504 404
 448 330 372 375 365 544 314 195 366 199 256 267 282 257 376 368 358 193 384 231 480 349 355 420 320 397
 319 400 438 316 354 426 403 306 356 333  26 419 308 302 360 220 318 242 280 395 437 490 374 283 379 317
 468  61 413 274 405 377 271 326 315 327 411 276 363 324 151 401 371 347 424  53 346 505 390 361 431 410
 398 120 352 357 234 112 205 548 471 393 299 427 342 301 114 525 313 180 432 449 161 406 386 516 378 382
 143 149 131 506 335 409 107 367 501 394 513 369 370 402 125 175 396 481 492  84 304 329 445 462 340 472
  47 237 470 362 486 459  24 446  59 511 487  52 495 550 341 453 443 298 452  75  18 435 417 303 425 456
 116 158  91 457 498 464 380  89 467 475 562  11 154 418 305 611 455 454   3  54  71 552 439 469 607 441
   2  77  78 556 493 268   8 428 534 344 482 483 503 500 218 533  35 478 460   9  64 542 407 466 391 442
 170 204 479  29 614  12 136 539 162 520 531  85 292 549 558  99  10  56   1 561 348 474 605 589 621 557
 241 110 173 546  27 245 337 590  39 429  30  45 477 588 178 494 232  90 553 602  49 567 536 571 608 444
 277 626  32 226 591 239 269 586  50 287 619 345 163 564 585 600 160 613  20 105  86 451   4 603 122 578
 529 450  19  57   5 259 253 582 622 610 566 502 129 507 583 627 189 101   7 311 147  16 633 575 339 183
 106  14  92  58  72 168 655 620 121  96 640 200 137 641 638  13 599  79 624 252 159 635 617 609 328 628
 255 629 592  94  88 164 576 515  22  21 209 653   6 665 667 207 325  63 618 535 141 637  41 100 383 595

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.0053e+07us (= 10053ms, 10.053s)
Satisfaction error: 1
Number of search iterations: 3451
Number of local moves: 1036 (including on plateau: 463)
Number of local minimum: 311 (including on plateau: 41)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 1: 674 670 675 647 645 524 658 565 465 598 185 251 257 308 276 299 394 59 89 8 12 27 226 19 14 255 => the sum is 8800 rather than 8801
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
  46 104 603 638 462 473 649 569 373  45  93 512  44  89 671  90  23  76 114 539 458  80 187 526 667 670
  97  18 672 658 609 601 313 483 427  75 517 662 105  88 157  62 161  49  35  27 509 500 599 524 650 203
 673 564  70 559 579 596 436 513  98 102 537 666  47 198  96 417  57 132 664  38 119 136 481 284 152 587
 171 656 624 669 578 566 174 613 189 158 449  28  78  87 107 457 179  77 575  86 140 608 660 641 137  94
 199 366 615 358 556 195 160 586  83 235 653 209 113 138 181 639 176  59 657  34 250 661 654 542 415  67
 182 490 191 563 541 651 167 589 145 125 547 108 291 665 112 604 151  79  95 150 674 214 166 612 503 186
  92 246 521 655 329 480 551 159 236 170 605 154 101 230 268 492 110 468  52 342 244 607 648 201 675 165
 277 504 164 467 594 399 194 634 663 260 652  71 175 265 131 469 221 130 676 149  73 242 121 562 433 275
 239 225 296 443 519 204 668 508 281 208 178 124 261 227 278 571 276 293 333 377 222 375 220 288 528 659
 318 485 538 593 640 212 177 264 259 642 445 272 219 274 365 550 324 146 286 285 237 266 300 263 207 234
 305 477 334 536 369 192 354 228 148 379 428 252 390 414 429 420 314 257 336 294 262 283 218 328 302 552
 292 491 312 409 307 323 233 339 190 241 348 631 341 232 335 568 356 301 289 346 231 315 309 223 637 202
 317 573 357 363 279 297 224 326 362 217 298 306 416 308 330 584 316 395 320 384 247 332 310 349 322 269
 287 493 254 248 411 380 385 345 394 331 188 350 229 249 370 352 494 418 392 134 183 368 371 271 498 406
 488 340 413 215 299 419 303 351  30 304 347 216 343 327 460 196 128 412 319 471 472 267 451 479 387 364
 401  82 337 205 163 388  24 478 381 463 453 426 441 372 290 361 355 465 459 404 344 321 325 400  39 424
  43 142 484 106 422 360 456 452 434 403 506 386 389 367 402 169 430 438   5 476 393 338 410  40 391 359
 396 251 437 200 280  54 258  25  72 448 256 475 439 496 423 407 555  20 408 405 447 382 505 534 197 431
 421 245  15 213  60  91  41 383 518 425 466 502 450 464 527 226  53 545 535 206 510 570 435 461  65 374
 577 565  85 135 180 376 155  68 378 522  32 295 582 397 515 172 523 576 554  10 454 482  51 144 487 486
 553 211 442  64  56 153 507  84 501 531 444 497 628 470 533 103 558 455 432 602  11   1  66 143 156 600
 499 255  42 139  14 546 540  58 626 557 118 474 440 549 529  74 645 543  69 581 495 162 520 240  50  36
 590 243 273 238 210  12 622 311 633 621  16  21 532 525 630  22 514 591  31 618 598   6  48 115 193 588
 636 253 100  81  13 127  19 129 619 168   3 511 574 560 629 116 644 635  26 610 592 583 572 353 126 122
 647  33 561  37 147 109 611 173 141 548 123   7 530 625   4 282 632 614 595 617 516 117 111   8 567 446
  55 489  61   9 184 597 580 133 620 623  99 646 643 185  29 398 606 627 544 616 120 585  63 270  17   2

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.43949e+06us (= 3439.49ms, 3.43949s)
Wall-clock time (full program): 3.49277e+06us (= 3492.77ms, 3.49277s)
Satisfaction error: 0
Number of search iterations: 992
Number of local moves: 645 (including on plateau: 256)
Number of local minimum: 36 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 136 local moves
Selected variables are frozen for: 0 local moves
68 variables are reset when 136 variables are frozen
Do a restart each time 676 resets are performed
############
Solution:
 666 379 267 121 339 345  64 373 288 648 335 291 340 674 455  92 125 133 525 259 605  85 590  73  53 676
 530 330 318 113  30 589  93 117 295 537 413 406 146  44  76 375 201 212 421 223 522 650 294 649 670 547
 126 447 644 114 633 566 276 441  72  40 667 506  63 100 171 360 673 190  25 128 324 119 290 663 523 640
 352 480 557 349 659  22 562 183 195  50 269 221  81  35 575 662 166 647 383  31 452 582 102 501 550 135
 202 469 153  51 593 285  27 131 443 483 658 244 159 208 618 157 365 637 503 426 242 493 471  57 236 490
 112 289 643 176 251 271  97 449 139 124 611 615  65 327  58 517 645 247 474  84 536 651 599 556  86 179
 602 357 512 101 160 485 433 476 238 168 465 524 591 430 478 180 137 106 311   1 224 565 574  82 273 328
  49 489 612 632 237 627 296 664 141 610 435  89 115  45 616 423 286 534 656 436 151 142 381  46  23  66
 192 571 594 302 468 564 243 279 583 229 209 418 250 660 107  37 628 308 234 395 123 184 492 240 225 266
 631 509 516 207 282 600 198 154 368 329 367 272 301 181   7 411 274 230 520 581 163 228 475 334 470 193
 630 505 149 587 164  52 376 277 532 194 434 300 227 586 347 323 341 169 197 222 220 665 417 390 216 281
 104 477 333 306 130 558 561  59 186 462 570 654 312 284 620 533  80 573 322 215 377 245 336 233  94 177
  90 260 319 614 636 510 454 386 638 404 253 416 268 309 235 466 287 257 280  39 332 219 405 326 226 172
 165 661 261 495 217 387 270  69 459 167  28 400 374 396 439 507 337 350 116 412 174 511 362 539 596 109
 246 392 409 584  16 438 461 293 385 304 348 143 432 488 152 252 120 479 138 491 608 145 299 364 372 442
 494  56 262   6 428 361 668 487 653 371 199 303 639 105 391 161 397 444 211 370 451 355 136 189 310 354
 445 110 200 567 419 394 321 402 646 248 408 502   4 518 353 232 275 384 521 393 108 103 111 346 388 403
 497 579 585 626  32  20 134 464 410   2   9 185 482 440 456  13  21  61 540 453 338 496 588 356 541 473
 256 150  34 543 398  70 499 675 378 429 178  99 531  96 431 249 420 191 187 634 305 144 264 484 515 641
  54  33  55 514 580  91  74 467 313 529 129 148 351 450 535 625 498 601 560  26 369 553 206 513  67 460
 427 292 162 458 255  11 446 317 265 463 538  77 425 613 343   8 578   3 254 598 415 140 342 527 486 358
 559 424 170 569  41 363 472 315 359 642  19 437 214 500 551 624 542 563  38 549  83 132 182 422  14  17
 316 414 382  42 548 508 603 263 595  48 528 544 572 118  29 577 314  78 504 218   5  60 258  68 617 592
 196  98 278 380 175 457 204 298 122 621  75  62 655 606 283  87 669 519 241 576 448 622  95 210 619 205
 203  18 147 297 481  71 568 127  88 526 325 399 597 545 155 307 407 213 604 652 671 158 188 609  79 366
 657  12 239  47 629 156 401 635  10 173 331 546 607  43 320 623  15 672  36 389 555 554 344  24 552 231

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.5457e+06us (= 9545.7ms, 9.5457s)
Wall-clock time (full program): 9.59842e+06us (= 9598.42ms, 9.59842s)
Satisfaction error: 0
Number of search iterations: 4883
Number of local moves: 1694 (including on plateau: 904)
Number of local minimum: 438 (including on plateau: 116)
Number of resets: 2
Number of restarts: 0

