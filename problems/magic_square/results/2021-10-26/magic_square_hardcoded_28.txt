@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 783 150 765 665 621 105 130 777 636 717 102  48  50 391  29  33  84 585 207 141 591 714 774 677  34 123 676 382
 616 325  85  73 732  81 640 733  22 738  76 122  24 761  54 688 629 264 559 669 133 740  25 642 619 119 769  52
 476 172 778 161 757  30 193 590  38 595  96 113  78 784  63 497 546 413 734  97 644 178  56 592 645 780 694 190
 695 726 218 753 756  90 101 153  66 593  58 124 110 743  61 548 106 675 746 103 598 171  41 760 782 273 729 211
 564 223 262  98  18 138  87 710 773 664 144  53 243 682 379 202 720 731 723 107 533 498 159 772 606 176 610 115
 643 131 254 167 237 771 246 583  83 748 389 214 301 730  88 579 233 558 175  35 687 741 348 764 354 140 696  95
 538 709 151 168 620 315 744 142 109 444 100 173 349 673 715 705 226 572 210 314 247 779 189 186 569 426 472 145
 667 521 183 295 269 245 271 581 257 335 626 320 139 618 162 524 749 565 127 239 362 678 177 285 529 396 658 212
 781 179 260 132 215 707 358 278 467 463 155 345 192 775 289 306 755 646 276 266 767 650 197 209 309 235 573 205
 600 200 253 287 288 224 165 330 166 549 460 265 125 770 187 758 465 776 768 410 454 137 256 728 603  92 471 203
 305 356 126 404 244 275 236 201 666 297 670 294 477 522 281 763 737 547 633 225 259 505 204 449 329 267 537 181
 249 250 394 270 373 400 312 174 198 333 727 417 412 411 311 674 628 553 367 399 346 442 386 317 375 299 530 443
 384 350 526 425 148 420 318 469 339 300 213 342 431 221 647 331 602 510 494 291 409 380 390 344 321 438 514 433
 532 462 238 392 448 268 182 322 222 445 303 307 293 578 528 408 360 422 518 219 372 450 554 584 357 340 488 398
 313 511 461 512 466 272 435 401 405 437 418 503 368  72 263 439 523 324 429 258 452 365 517 395 283 493 338 337
 403 298 451 292 474 366 434 428 304 447 351 479  11 473 421 424 371 441 508 501 388 453 457 416 541 310 252 296
 319 481 430 370 516 580 231 241 290 563 415 566 478 359 440 170 383 332 347 334 363 352 500 381 406 280 302 561
 114 343 482 160 468 355 475 240 652 455  57 506 716 158 542 146 121 638 509 560 227  31 540 490 543 484 341 637
 284 495 456 639 407 376 713 536 432 169 480 519 393 464 374 108 323 459 135 397  71 491 423 492 194 507  46 607
  37 525 458 377 692 617 327 154 531 534 328 277 555  49 217 568  42  51 369 562  82 574 575 504 567 708  86 624
 118 487 539 515 427 597 587 766 326 129 615 609 693 180 248  45 104 228 436 486  17  94 550 255 513 663 149 614
  77 589 570 671 599 630  27 446 499 556 721 520 634 164 594 206 552 134 195 489  69 282 385 152 485   1  40 703
 378 613 582 576  80 196 648 419 706  28 605 483 627  47 649 557 631 143  12 470 571 308   8 208  64 700 136 545
 184 496 702 684 116 739 622  68 691 191 586 752 608  14 601 120 261  16  67 686 625  55 535   5  75 641 188 662
 316   6 690  32  23 147 527 704 659 156 680 577 762  59 698 232 199  65 651 668 544  43 683  89   9 750 274 747
 216 697  20 735 655 672 551 117 699  74 725 654 502 128 711 234  36 242  91 653 336 111 681 185 588   2  15 660
 112  99 612 402 279 742 685  13   3  26 661 719 701 157 759 364 251  79 611 657 220 163 724  70  60 712 387 722
 286 596  44 736  62 632 745 414 751   4 229 689 718   7 679 361 353  21  93 754 623 604 656  39 230 635  19  10

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00608e+07us (= 10060.8ms, 10.0608s)
Satisfaction error: 2
Number of search iterations: 3339
Number of local moves: 1098 (including on plateau: 569)
Number of local minimum: 274 (including on plateau: 73)
Number of resets: 1
Number of restarts: 0

Problem in column 4: 665 73 161 753 98 167 168 295 132 287 404 270 425 392 512 292 370 160 639 377 515 671 576 684 32 735 402 736 => the sum is 10991 rather than 10990
Problem in column 22: 714 740 178 171 498 741 779 678 650 137 505 442 380 450 365 453 352 31 491 574 94 282 308 55 43 111 163 604 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 153  84 581 489 201 616 613   2  46 584 196 137  53 749 650 636 583 482 702   8 152  86 778 765  23 782 375 464
 493 770 575 723 286 110 680 154  28 164 208 291  33 762 210 554 579 207 774 141  57 118 704 739  97 748  78 707
 195 763 686 720 611 163 587 652  68 186  67 529  25 270  64 700 592  32 705  42 634 553 232 725  75 722 264 128
 226  65 747 578 212 114 772 231 215 753  94 456 330 729 220 176 477 162  70  35 419 241  92 764 547 746 767 752
 243 781 780 674 277 187 125 760 221 536 109 386  49 209  73 784 703  34 695  39 599 394  83 713 191 768 437 140
 676 647 745 612 155 409 472  93 150 206 716  58 181 117 252 642 669 237 165 238 413 135 756  55 151 730 541 769
 161 275 631 681 268 263 615 699 146 366 145 483 204 203 107 714 732 106 570  82 662 690 211 131 124 751 721 249
 738 130 653 779 660 326 224 708 183 294 349 361 239 148 172 260 504 256 425 258 783 622 296  76 289 285 775 197
 572 348 609 573 544 364 244 271 755 357 229 487 293 288  95 216 673 227  77 344 585 555 132 336 262 290 742 522
 733 269 659 373 637 313 332 246 119 757 424 192 200 777 223 248 776 180 624 324 596 492 166 297 245 305 171 312
 594 282 236 478 657 445 143 205 301 316 759 358 350 310 233 353 253 694 497 234 591 391 396 218 251 355 711 379
 121 655 405 388 356 706 279 189 400 242 284 574 354 295 461 551 442 352 287 199 568 691 321 389 300 457 325 399
 378 434 377 320 542 384 304 417 509 318 283 184 508 465 407 311 423 219 308 530 698 463 306 374 406 322 362 438
 365 254 299 468 604 359 380 469 432 372 257 265 298 385 319 397 331 460 371 369 632 668 416 337 345 564 173 401
 247 410 338 323 446 395 448 340 339 532 343 214 307 475 392 459 452 502 193 273 552 174 449 682 545 266 408 486
 368 255 476  17 510 479 454 420 507 414 433 230 402 334 280 443 427 421 535 363 495 521 523 393 525 335  40 390
 556 533 481 485 112 169 577 398 404 431 435 115 347 387 412 519  21 527 515 649 382  56 601 158 603 185 506 426
 370 484  30 418 516 198 441 422 450 455  96 524 505 629 217 560 473  29 429 656  37 327 360 550 641 403 503 267
 278 500 274 513 228 127  51 607 466 436 539 546 367 565 383 672  48 520 453 415 213 342 566 696 225 328 142 490
 571 518  69 104  52 411 606  12  99 620 430  88 588 567 614 138 491 589 240 644 621 179 743 428 537 261 160 610
 103 561 159 123 259 467 462 563 458 250 470  15 548 597 630 549 188 598 451 499  72  91 133 514 474 534 640 582
 444 675 177  10 526 317   7 600 665 562 480 635 440 540 586  87  89 619 496 528 167  74   6 202 761 105 654 538
 494 439 543 346 235  26 108 683 645 498 576 559 773 709 608 101  85 678  60 679  61 120 333  18 710 190 156 557
 222 617 276  47  79 666 531 511 677 590 651 736 643  41 726 113 182 488  14 712 315 447 663  11 580 100 272  80
  90  22  44 471 281 771 626 628 719   1 292 512 685 309 658 111 129 623   3 639 147 627 664 684 501  38 688  27
 329 175   9  43 718 750 116 646 661 558 648 687 766  13 693 351 341 376 134 728  36 517 149  45 741  16 139 605
 569  24  50 136 303 731 625  59 593  66 737 633 744  54 667 314 157 618 602 692 122 727 717 671 144 102  62  71
 701  20  81  98 715 724 168   5 734 126 740 735 758  63 638  31 170 754 595 670 381 689 194  19 697 302 178   4

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00592e+07us (= 10059.2ms, 10.0592s)
Satisfaction error: 1
Number of search iterations: 2789
Number of local moves: 921 (including on plateau: 338)
Number of local minimum: 225 (including on plateau: 40)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 153 770 686 578 277 409 615 708 755 757 759 574 508 385 392 443 21 29 453 644 72 74 333 11 501 16 62 4 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 776 765 644 733  84 675 218 371  47 453 777 111 752 113 468 515 715 695 641  41  36 108 216 520  64  65  39 348
 702  80 743 591 603 110 102 440  33 679 146 763 497 177  37  90 626 130 581 145 773  29 706 713  68  18 737 671
  88 694 666 689 190 235 654 635 161 616 199  69 205 236  74 403 636 518 600  32 112 732  95 525 332 784  27 783
 772  85 208  96 141 751 103 781 602 723 766 160 645  91 414  51 745 496 517  82 124 151  61 746 172 779  86 642
 757 152 169 683 782 780 115 344 128 594 755 200 661 568 653 101 541 565 640  55 153 188 134 608  77 122 171 294
 167  98 174 767 219 758 143 670 184 540 198 133 275 535 507 267 397 278 705 667 234 132 738 727 116  43 704 614
 740 154  87 351 700 575 119 764 214 707  67 157 193 451 618 687 714 703 759 206 264 701 202 159 158 106  28 406
 203 247 178 398 258 444 149 228 175 505 327  59 622 368 646 123 771 721 562  70 770 303 245 698 185 239 728 768
 136 237 127 516 651 532 255 668 301 624 308 380 564 621 542 273 333 304 690 778 354 163 269 430 192 221 288 233
 213 419 324 595 287 756 296 634 194 424 329 305 506 741 769 744 260 589 464 251 256 223 201 183 246 165 286 330
 226 144 316 346 220 681 224 471 487 601 362 585 272 604 735 313 350 656 673 240 352 364 357 241 232 441 270 227
 140 355 225 428 422 499 280 688 297 474 427 584 284 638 573 242 501 318 536 265 309 312 347 410 328 335 399 374
 319 164 484 491 343 238 321 503 277 652 337 534 253 531 774 504 386 402 494 291 186 373 404 356 479 196 435 263
 314 387 315 590 377 396 336 322 217 511 369 300 375 359 358 283 376 508 438 391 761 298 307 510 429 262 500 401
 366 339 523 323 392 292 310 539 342 363 437 389 372 649 311 400 493 460 170 334 459 299 452 395 530 445 266 340
 448 538 388 436 378 472 593 118 442 276 331 455 259 431 519 370   4 100 382 417 547 557 394 522 413 412 450 338
 325 447 551 268 485 454 546 180 470 381 384 393 421  48  20 326 274 486 248 462 478 434 456 463 482 659 426 423
 390 317 569 383 461  49 620 187 513 289   5 209 663  83  52 548 443 252 282 467 457 416 580 528 628 458 578 563
 529 495 418 349  10 139 576 135 405 231 611 420 577  42 179  30 633 481 107 439 489 475 579 492 597 533 521 498
 583 574 407 469  78 249 490 121  14  16 617 367 480  44 483 596 561 466  40 550 409 545 567 150 477 599 432 606
 509 502 537 341 549  72 544   9 571  17 555 680 558 353 197  19  26  93 215 559 408 720 566   1 598 648 655 488
 524 607 554 290 610  46  23 514 615  94 385 527 182 250 207 526 637 129 281 613 629   8 719  71 664 582 117 586
 669 476 672  12 211 302 592 446 762 142 229 612 191 257 189 643  73  92 131 552 619 449  75 125 630 662 605 572
 243 726 691 104  31 176 631 560 699 195 623 570  25 271 320 360  79  97  76 588 676  53 658 553 627 722 625  11
 105 674 156 415 639 293 716  35 760 166 650 657 306 411 126 632  34 114 148 712 279 750 708  54 725   3 665  57
 345 543 137 181 710 109 686 120 718 295  66  15  21 736 433 717 147 711 244 587  50 730 742 155 724 775 212  81
  22  24  45  89 512 677 739 285 684 254  38 696 693 697 361 753  62 365 204 465  58 748 210  99 754 709 734  13
 379 747 682  56 647 230 609 222 678 168 692 660 138 685 425 473 173 261 162 731 749 729   2 556  63   7   6  60

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.0059e+07us (= 10059ms, 10.059s)
Satisfaction error: 2
Number of search iterations: 3214
Number of local moves: 1084 (including on plateau: 525)
Number of local minimum: 283 (including on plateau: 77)
Number of resets: 1
Number of restarts: 0

Problem in column 16: 515 90 403 51 101 267 687 123 273 744 313 242 504 283 400 370 326 548 30 596 19 526 643 360 632 717 753 473 => the sum is 10989 rather than 10990
Problem in column 21: 36 773 112 124 153 234 264 770 354 256 352 309 186 761 459 547 478 457 489 409 408 629 619 676 279 50 58 749 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 138  39  36  95 536  56 772 609 552  40  61 753 665 735  30 769 679  32 725 387  62 365 741 608  51 178 746 530
 782 132  31  87 596 117 408 716 160  96 361 647 150 654  71 272 694  84 766 540  48 244 308 629 754 720 152 771
  82 122  34 175 588  94 305 659  79  70  92  41 743 636 213 780 767  85 707 715 773 273 696 760 578 112 101 710
 129 111 651 764 683 171 779 708 364 130 157 649 648 657  77 661 486  76 733 149  50 321 606 173 616 189  83 169
 162 670 144  65 755 612 594 704 231 153 127 369 541 595 209 556 237 188 770 756 236 501 277 751  78 411 185 113
 172 294  44 734 567  91  47 599 713 256 193 154 688 757 131 758 690 148 248 668 225 194 723 627 164 513 203 389
 190 142 143 299 653  89 765 201 640 762  99 557 719 742  42 642 684 353 261 687 136 781 295 257 106 250 288 207
 125 135 238 251 730 118 481 384 170 267 182 485 409 597 183 292 768 116 483 722 593 255 682 658 777 585 176 128
 174 196 192  81 705 312 477 336 776 265 554 453 247 628 326 711 300 165 211 784 264 701 739 637 114 252 270 120
 316 254 402  72 498 205 783 271 359 763 214 468 586 291 195 318 507 258 615 184 352 340 663 167 729 390 342 448
 228 377 233 241 662 309 219 303 376 368 759 515 276 323 350 200 591 727 282 259 775 512 245 310 621 266 314 349
 327 440 109 274 458 467 358 493 533 354 227 373 484 332 508 275 634 249 284 355 386 731 281 330 656 322 362 388
 357 345 412 317 519 339 262 583 380 296 449 495 401 235 335 338 420 407 307 315 383 589 242 243 778 372 430 441
 431 324 306 490 480 443 234 500 325 461 590 447 177 269 344 472 216 363 410 542 466 290 464 398 224 434 367 522
 435 334 333 360 278 356 414 534 424 457 428 115 395 432 403 436 450 320 222 460 417 374 473 370 444 446 343 537
 455 382 505 469 253 459 329 419 289 375 404 218 240 413 438 391 406 385 509  67 465 442 397 429 399 520 553 379
 415 405 550 622 107 516 139 525  29 445 126 348 528 471 283 592 287 572 416 581 426 331 268 423 474 573 351 187
 568 561 492 494 221 548  69 366 297 551  88 220 476 454 545 565 394 518 499 439  93  24 392 285 532 319 463 517
 549 619 302 531 232 378 215 535 491 133 685 140 524 645 506 496  43 582 191 158 576 212 217 623 456  60 421 470
 510 504 497 502  21 511 452 514 347 604 558  53  19   4 614 579 100 618 301  28 422 560 602 624 260 563 598  25
 655 660 479 643 223 672 145 198 427 562 607 475 600 286 544  75  15 451 341 121 650 210 156 437 202 577 521  58
 489 635 678 584 239 488 613 102  13 482 539 425 503 141 487 108 180 721 703 462 304 418 134 147 313 103 433 546
 666 686 709 699 204  68  66 620 166 564 610 527  22 124 674  86  97 611 137  35 728 311 151  27 529 570 605 698
 538 569 559 632  38 630 197  20 146 526 575 206 186 230 574 179 263 646  45 601 566 677 580 400  49 749 555  55
 717 738 673  26  90 697 748   2 671 712 706   9 626  18 714  98 105 328 681 371  52   1  16 571 279 159 639 543
 702 587 745 523  59 726 393  54 737 226 617 676   7 181 747 168  80 669 119 163 641   8   6   5 280 478 693 700
 675  11 732 667 199 774  74  12 631 691 736 547  73  17 695 110 689 638  10 337 740 692  33  64 298 155  46 644
   3 718 761 293 396 744 652  23 664 381 246 625  57 123 752  63 208 680  14 104 161 633 603  37 229 724 750 346

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00601e+07us (= 10060.1ms, 10.0601s)
Satisfaction error: 2
Number of search iterations: 2600
Number of local moves: 983 (including on plateau: 369)
Number of local minimum: 210 (including on plateau: 43)
Number of resets: 1
Number of restarts: 0

Problem in row 14: 431 324 306 490 480 443 234 500 325 461 590 447 177 269 344 472 216 363 410 542 466 290 464 398 224 434 367 522 => the sum is 10989 rather than 10990
Problem in row 24: 538 569 559 632 38 630 197 20 146 526 575 206 186 230 574 179 263 646 45 601 566 677 580 400 49 749 555 55 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  90 666 563  58 676 716 663 660 112 371  47 328 622  91 682 691 136 262 726 738 361 102 206  23 761 202  11 426
 231  22 672 665  97 630 604 677  40  13   4 633 737 188 684 645  52 178 706 695 235 254 299 127 689 650 275 288
 214 704 692 669 631   7 658 562  26 678  86 252 698   3 673 712 182  24 184 679  55  17 644  45 564 351 683 297
 110  12 589   5 147 623   1 659 145 578  85 735 757 210 641 687  37 601 654 707 217  20 268 472  76 642 554 758
 260 553  25 731 139   6 479  14 339 661   9 616 219  34 685 739 559 703 605 571 141 119  16  88 719 580 646 734
 629 590 185 531 693 131 352 745  83 583 265   8 377 103 657 586 123 608 546 653 225 557 413 640 529 149   2  27
  44 647  99 611 680 699  10 686  57 502 600 163  81 444 492 664 296 700 312 635  41  48  42 510 729  35 539 624
 159 671 201 511 561 545  38 124 213 670 507 245 207 313 506 423 521 534 468 567 348 515  53  30 587 455 541 477
 405 438 238 617 569 638 114 522  28 614 574 216 270 327 464 544 568 628  73 401 243 169  32 353 543 397 532 473
 117 662 246 517 493 560 197 581 249  31 535  71 428 395 606 565 367 481  59 230 411 519 142 523 499 609 431 466
 420 520  64 536 497 495 416 427 289 636 199 556 162 211 421 424  18  87 530 433 308 451 524 370 579 471 548 398
 378 501 301 612  92 355 280 345  49 613 527 435  72 494 379 656 410 381 307 430 153 445 526 490 487 514 415 343
 489 437 315 456 483 496 422 418 347 414 396 309 165 439 408 373 542 513 125 324 407 505 267 409 404 419 266 442
 454 402 417 448 538 432 391 399 346 584 436 364 387 406 461 360 465 318 498  21 204 447  29 376 462 503 488 354
 344 337 269 552 440 467 412 482 460 469 356 281 449 323 358 485 317 394 383 508 264 332 486 302 248 446 533 293
 450 311 306 190 340 316 369 459 429 403 434 272 452 389 196 386 329 388 443 357 732 227 258 500 463 335 709 547
 271 385 349 330 321 303 643 359 668 392 341 342 374 259 322 366 775 298 585 504 375 368 336 588 256 250 326 304
 681 233 528 176 205 240 362 480 573 220 694 728 742 525 130 331 234 425 441 458 618  93 697 129 195 242 291 319
 287 251 558 610 241 294 675 286 637 708 290 384 372 365 133 350 295 314 779  98 232 300 774 773 200 283 222 279
 721 160 582 292 224 191 599 253 576 237 453 325 261 474 118 183 273 208 168 743 380 784 780 710 257  77 179 782
 634 244 717 218 229 128 626 334 592 157 639 711 484 247 285 203 140 126 733  65 778 756 393 174 226 746 193 212
 724 274 607 170 187 236 764 172 741 109 239 540 751 625 192 104 305 152 333 132 727 701 198 763 223 135 730 156
 749 181 512 186 255  19 572 134 475 277 747 320 649 594 310 138 620 101 400 555 648 596 390 702 278 143 155 284
 221 154 754 173 718 769  61 209 652  50 263 651 470 766 189  79 715 772 166  51 765 518 667 776 106 100  95  80
 759 105 457 777 478 228 113 164 781 177 722 566 120 748 116 150 740 744  69  94 276 753 591 167 148 121  43 783
 476 771 690 161 215 151 550 180 602 194  96 575 175 688 146  67 598 382  70 144 760  74 755 363 570 767 714  56
 619 723  39  66  89 595  68  62 713 491 750 282 338 655 621  33 603  75 516  60 537 705 627  78  84 736 762  63
  54  36  15 122 752 720 551 597 768 158 696  82 171 674 115  46 770 593 111 137 549 615 577 509 108 632 107 725

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.21184e+06us (= 5211.84ms, 5.21184s)
Wall-clock time (full program): 5.27033e+06us (= 5270.33ms, 5.27033s)
Satisfaction error: 0
Number of search iterations: 869
Number of local moves: 609 (including on plateau: 146)
Number of local minimum: 40 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 773  51 748  90 764  27 122 720 155 755 184 677 362 537  82 100 406 547 131 722 173 112 521 523  91 621 359 637
  25 768 695 156 163  23  29 573 132 769 771  46  68 222  70 679 185 687 549 777  15 130 579 684 752 729  45 669
  24 129 660 750 520 190 104 604 654  59 620 154 239 353 145  92 680 738 144 730  44 609 756 384 157 757  31 663
  64  28 172 694 751 103 698 585 632  40 708 192 175 511  63 666 290 541 158 784 102 150 774 563 138 766 136 506
 183 148 205 147 762 180  81 735  69  53 670 151  37 464  89 749 741 582 279 765 275  80 739 770  83 673 639 641
 249  19 152 783 638 761 108 534 116 274 776 186  73 448 266 651  38 432 781 423 193 300 566 754 235 419 126 689
 410 197 257 723 264 110 704 527 758 105 212 746 188 171 227 676 672 280 342 674 717  39 562 340  75 557 262 195
 709 229 267 225 631  86 661 539 140  74 718 177 236 153 265 248 653 619 531 559 338 258 571 516 221 481 220 665
 743 223 209 141 161 201 324 686 601 170 289 149 237 614 179 304 211 650 744 624 214  87 778 662 208 705 224 652
 399 312 337 216 125 767 286 217 760 719 272 260 210 685 166 284 444 553 271 428 396 341 555 383 413 782 167 242
 168 617 588 252 379 780 319 412 612 139 759 162 299 560 261 169 202 273 507 405  78 411 501 623 364 400 425 325
 281 366 230  72 414 763 409 309 636 429 292 772 322 328 468 256 204 339 431 779 453 298 484 351 471 234 329 270
 313 538 500 370 245 243 244 335 577 443 311 447 358 486 308 291 745 385 724 354 285 494 278 440 349 238 395 294
 296 466 363 259 580 330 345 514 426 293 445 463 437  95 387 465 373 371 226 288 487 467 380 480 435 456 402 461
 393 334 310 401 352 332 418 392 247 327 540 255 451 441 356 367 450 424 361 711 283 333 386 318 398 489 369 552
 317 343 404 643 420 479 388 478  17 526 159 495 408 455 488 442 565 436 515 301  54 492 348 397   4 438 394 584
 512 378 449 434 528 377 474 218 569 482 457 269 314  26 533 570 374 593 305 206 578   7 303 251 544 381 483 375
 297 422 357 648 497 469 390 315 368 586  98 417 509 336 503 470 532  49 347 250 505 740 316 189 376 128 550 326
 556 433 592 630 331 477 452 194 295 502 499 490 427 109 542 459 568  55  77 165 472 454 232  32 421 365 699 462
 519 485 536 476 567 626 572 137 543 321  84 682 522 124 634 625  61  67 143  62 548 701  97 233 605  99 491 430
 174 561 551 633 599 697 603 504 346 391 583 587 616  47 416 263 439 118  13 323 307 525 268 135 446 382 350 113
 493 702 598 510 581 508 517 142  18 664 607 608 458 564 554  43   8 228 513 203 524  30 181 134 721 107 657 117
   5 628 602 558  96 545  14 178 496 246 473 675 610 240 742 576 595 196 646  11 589 668   1 276 629  58 518 119
 706 712 133 530 101 302 647 146 360 600 254  33 574 736 535   6 591 733 187  22 627 726 213  12 681 123 594 106
 590 160 596 546 320 253  93 198 403 713  85 644 678 658 734 575 121  52 287 219 671 725 277  50  65  20 642 615
 655 635 372  66   2 700 703 460 475 611  79 127 737 200 606 120 640  76 407  60 707 622 182 115 649 199 728  57
 747 415  71  21 164 306 667 282 344   9   3 597 692 731 683 231 114 775 715 111 645 693  94 716 732 176  41 215
 389 691  36  16  35 355 618  56 241 690  42 529 753 696 688 613  88 191 656  34 710 498  48 659 727 207 714  10

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.74954e+06us (= 4749.54ms, 4.74954s)
Wall-clock time (full program): 4.80821e+06us (= 4808.21ms, 4.80821s)
Satisfaction error: 0
Number of search iterations: 786
Number of local moves: 629 (including on plateau: 140)
Number of local minimum: 29 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 784 127  99  52 755 759 231  21 778 559 133 656  94 624 111 113 195  98  44 758  31  15 745 706 671 531 533 767
 501 780 120 107 409 556 641  93 615 697 769 628 308 483  73  89 136 147 228 222  88  80 781 632 631 380 739  57
 558 765 240 205 742 779 177  26 634 542 589 606  28 566 101 733 350  35 159  85   7 121 417 640 736 717 366  66
 621  20  53 173 186 777 176 727 595 686 172 740 182 124  84 763 766  72 140 315 109 110 672 730 451 488 756 302
 345 134 208 162 773  69 685 108 514 775 760 747  97  61  11 774 382  67  17 694 187  40 287 743 630 271 681 768
 653 252 150 729 576 718 402 138 684 535 237 613 448 712 204 259 191 178 137 251 431 214 731 117 713 468 189  60
 528 148 654 184 275 216 248 209 594 674 119 679 583 732 171 164 702 264 219 618 335  68 196 168 667 676 502 397
 754 203  87 144 286 776 317 695 201 722 455 741 441 326 234 174 772 185 157 663 340 130 213 292 511 707 167 297
 625 188 294 139 211 651 126 762 268 783 260 680 307 321 225 517 364 145 463 141 202 562 461 194 458 728 688 227
 547 299 288 151 400 250 224 623 771 664 764 342 605 280 220 283 374 123 611 633 158 235 257 349 721 256 362 200
 753 272 328 324 269 516 230 447 212 493 649 453 660 277 422 232 175 749 243 416 480 476 215 442 411 337 131 378
 584 267 312 295 384 183 199 385 399 518 504 604 498 301 329 282 748 279 373 563 586 421 262 356 481 323 289 265
 450 254 666 281 353 428 316 352 478 492 408 407 354 226 360 682 412 383 258 543 358 370 347 379 392 261 361 419
 334 752 223 782 372 236 396 410 343 577 253 443 388 367 300 339 387 303 330 404 365 306 332 395 499 338 423 393
 376 266 433 381 377 444 415 414 320  45 357 161 348 539 438 333 474 424 351 485 497 375 546 432 390 389 425 555
 420 398 241 403 344 313 440 435 319 274 460 359 229 405 452 310 439 386 494 527 459 245 429 426 304 521 462 496
 206 565 391 530 642 536 449 368 135 305 491 247 105 454 551 293  96 564 489  39 568 457  54 437 394 534 515 575
  95 490 470 466 484 464 413 519 473 156 309 475 142 479 588 471 486 587 355 170 346 550 597 401 278  71 249 406
 296 506 629 363 571 513 561 509 538 166 477 285 169 318 540 369  37 574 284 100 500 529 495 446  58   8 487 662
  79 467 593 627  22 522 526 560 418 270 552 180  29 570 290 434 505 510 710   5 273 683 648 573 239  86  74 545
 179 336 524 619 687  10 427 532 155  24 430 132 341  36 544 525 445 668 592  12  55 598 567 612 198 569 670 503
   1 703 581 465 482 106   3 217 456 244  14  64 751 699 724 737  42 596 508 607 652 255 125 578 115  82 603 580
 325 657 644 549 537  30 548 553 112  16  34  81 371  65 646 572 507 638 582 327 585 698  92 608 163 469  27 554
  23 665 770 601  19 512 701 210 636 104 602  18 735 314 616  32 436 720 617 298 726 609 622  75 122 102  46  59
  41  51 591  62 637 276 639 523 263 291 238 193 579  38 620  49 590 557 610 103 700 761 541  83 472 614 221 647
 146 659  13 708  91   4 190 153  25 192 645 160 725 673 723 677 658 331 689 719 691 705 143   9 129 242 181 709
 246 116 696 738  43 149 711 690   6  33 233 218 757 322 669 714 207 661 675 600 626 734 165  90   2 118 715  56
 520 650 693 750  63 197 599 311  48 152  76  78 716 678 744  70 114 746 655 692 635 643  50  77 154 704 128  47

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00603e+07us (= 10060.3ms, 10.0603s)
Satisfaction error: 2
Number of search iterations: 2436
Number of local moves: 1019 (including on plateau: 471)
Number of local minimum: 170 (including on plateau: 63)
Number of resets: 1
Number of restarts: 0

Problem in column 3: 99 120 240 53 208 150 654 87 294 288 328 312 666 223 433 241 391 470 629 593 524 581 644 770 591 13 696 693 => the sum is 10991 rather than 10990
Problem in column 10: 559 697 542 686 775 535 674 722 783 664 493 518 492 577 45 274 305 156 166 270 24 244 16 104 291 192 33 152 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 718 503  68  49 579 108 776 507  57 125  26  25  40 770 562 522 742  33 687 416 643 777 726 765  30 223  74 439
  34  90 117 120 734 651 595 232 115  69 704 170 141 699 725 760 610  65 636  44 751 545 719 471 184 109 200 700
 137 652 769  55 656 667 553 252  73 102 172 151  78 773 479 478 460  59 161 122 574 678 577 732  24 187 617 752
  94 128 126 188 741 772 629 533 658  20  72  51  46  42 611 565 572  50 659 143 454 623 761 779 768  39  95 771
 204 549 100 257 674 762 775 632  28 194 154 127 140 692 490 528 766 113 218  22 269 559 556 586 637 229  35 694
 121 616  53  93 747 767 745 714  29 162  16 166 155 133 266 746 680 118 721 165 138 717 783 782 521  70 173 593
 289 443 157 408 147 219 756 764 129 220  62 105 182 731 709 701 689 534 159 148 226 781 492 474 520  98  89 758
 114 566 111  82 763 282 461 738  99 273 179 655 264 192 469 622 759  71 665 231 310 662 627 344 654 263 248 286
 216 537 294 283 265 253 570 670 619 152 360 211 250 319 755 640 591 285 744 176 242 327 328 575 270 202 259 597
 291 695 485 146 215 382 588 350 307 542 295 139 256 287 727 633 476 224 335 237 233 628 341 679 529 222 415 333
 241 548 705 418 225 280 349 649 784 168 164 298 398 268 673 373 388 303 322 315 239 348 339 691 720 206 278 300
 272 668 301 638 228 354 308 299 343 484 422 666 356 279 605 180 275 288 320 347 212 523 543 312 576 400 386 405
 515 466 402 304 467 387 353 290 293 384 330 684 244 780 394 380 297 551 249 362 317 571 434 277 345 214 271 429
 302 417 355 482 296 383 243 359 399 401 407 385 392 284 468 381 305 423 337 483 390 510 406 432 428 470 455 397
 395 463 393 379 541 274 281 262 441 368 453 318 234 568 504 427 267 419 412 481 326 371 465 276 421 438 351 462
 451 436 435 369 367 311 409 426 457 334 411 499 378 513  12 372 389 509 445 377 458 321 245  58 370 639 641 358
 472 314 340  86 450 413 448 505 516 178 365 391 511  43 495 580 364 477 500 496 446 514 181 255 246 403 561 440
 581 236 414 506 498 607 313 444 512 502 519 425 424 456   6 404 569 171 585 361 475   1  37 550 185 497 338 374
 592  67 631 620 546 555 306 486 376 494 524 201 560 531 119  54 124 635   2 590 716 207 323 177 198 433 599 324
 363 131 449 644  47 525 526  23 578 552 452 292 683 621 104 491 459 682 532  85 396 431 487 135 258 442 342 260
 647 375 657 329 538 558 217 754 642 594 488 554 615 557 240 106 186 530  77 489  21  79 153  17 473 603 430  60
 712 331 583 706 501 156  18   5 536 582 563 464 685 517 325 149  19 589  61 663 653   3 508  87 247 722 567  38
 544 261 728 420 357  91  56 193 573 646 447 547 650  36 366 112  27 596  76 676 614  52 564 601 110 437 675 535
 540 235 634 584 134 613 169 174 167 743 625 672 539 183 205  96 150 609 480 713 618 158  88 410  15 690 645 101
 598 123 602 693  97  83 195 199 600 711 703 527 608 160 352 227  64 661 604 697 518  66  10  32 332 587 750 191
 740 493 210 686  48  84 144  63 710 702 708 736 724 189 132 221 316 739  92 681  14 163  75 175 612 723 707 103
 677  41 735 730 116 346 203 213 753 624 698 774 749  31 190 197 208 626 251 737   8 145 142 309 648 748  11  81
 130 606 136 715  13 107   4 254 196 664 671 757 688 336   7  45 238 630 660 733 729 230  80   9 669 696 778 209

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00601e+07us (= 10060.1ms, 10.0601s)
Satisfaction error: 2
Number of search iterations: 2829
Number of local moves: 945 (including on plateau: 435)
Number of local minimum: 223 (including on plateau: 50)
Number of resets: 1
Number of restarts: 0

Problem in row 21: 647 375 657 329 538 558 217 754 642 594 488 554 615 557 240 106 186 530 77 489 21 79 153 17 473 603 430 60 => the sum is 10989 rather than 10990
Problem in row 27: 677 41 735 730 116 346 203 213 753 624 698 774 749 31 190 197 208 626 251 737 8 145 142 309 648 748 11 81 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  23  84 140 543  99 699 744 724 715 704 390 265 772  93 162 285 113 373 220 723  85 648 737  77 127  28 652 765
 170 145 641 254 132 762 622 100 741 709 770 266 720 669  62 742  83 286 180 271  11 711 631 696 258  20  29 309
 205 434  24 115 550 729 767  39 155 733 579 106 635  16 654 758 186 141 248 752  51 700 671 738 601  19  41 343
 431 701 109 227  44 768 735  64 650 637 298 282 231 239  48 553 629 462 244 776 684 161 705 597  21  31 319 344
 174 208 686 130 757 753 749 656 345 501 747 164 150 167 142 639  67 101 251 582 138 608 626 524  68 636 256 165
 183 235 414  35 397  33 644  57 681 589 592 598 565 634 607 618 736 233  82 568 529   8 351 689 110 566 224  12
 156  59 217 659 679 606  18 118 230 253 777 616 682 526 784 674 300 126 623  43 617  42 595 154 401 485 339 211
   3 197 551 574 604 564 549 409 677 612  88  70 562  61 578 570 611  22 241 667  17 534 530 268 603 605 219   4
 250  50 713 482 535 163 538  86 360 181 596 358 590 477 515 600  81 242 169  27 464 624 628 511 478 509 190 573
 544 519 583 547 620 528 647  26 496   1 471  52 436 561 510 446 577  25 782 137 323   5 425 680 461 362 213  13
  36 660 196 545 316 552 487 274 558 499 388 445 440 500 410 481 385  30 193 508 493 455 413 712 442 452  73  47
 400 417 421 276 363 354 722 314 325 433 381 525 532  87 504 521 105 178 398 405 469 459 357 303 372 451 439 479
 403 203 489 567 424 472   7  95 429 531 320 457 581 588 338 404 453 278 312 492 670  38 382 297 420 443 437 460
 394 395 427 426 418 465 661 229 467 315 359 326 719 571 237 214 356 379  89 330 406 396 380 450 348 407 342 484
 346 503 441 310 448 273 370 374 710 333 411 322 387 572 368 454 470 402 386 284 383 756 144  15 476 347 355 350
 331 371 491 340 302 222  46 498 317 349 299 527 780 688 341 367 292 361 199 318 748 369 301 332 692 391 306 412
 695 352 294 313 609  75 335 625 283 103 497 334 134 321 280 327 649 506 296 308 366 281 324 399 542 264 732 746
 259 376 328 245 384 287   9 540 520 221 731 119 430 419 392 307 763 428 533 288 305 263 610 364  37 423 655 754
 602 726 179 236 149 128 377 563 575 507 275 769 337 257  72 184 225 739 516 269 416 267 415 466 108 422 468 743
 614 438 136 212 172 249 207 685 728 246 587 702 216 304 665 191   2 645 781 779 148 378 195  74 293 116 584 643
 734 664 176 255 262 121  90 714 270 642 192 783 152 586 490 336 215 495 693 129 353 311 279 200 494 228 613 513
 717 488 252  91 698 773  63 486 202 764 146 408 147 226 435 261 557 771 676 260 168 512 104 463  92 153 560 517
 683 238 204 721 223 375 232 599  58  49 206 188 210 718 505 187 185 621 675 593 365 716  60 295 691 247 632 514
 633 630 131 697 774 272 171 653 143 133 177 646  80 112 209  96 760 537 694 160 159 474 111 761 122 690 389 576
 473 585 775 569 240 447  10 556  40   6 277  94 243 546 289 290 393 759  54 539 666  14 658 708 706 751 182 120
 750 541 651 173 615 124 234 594 125 198 201 502 135 123 591 194 673 687 475 157 672 483 107  65 727 449 678  66
  56 114 555 703  78  79 329 432  32 707 166 518  71 778 663 102 456 523 458 580 730 559  76  97 638 755 444 291
 725 657 766 745  98 117 627 480 158  34  69 548  53 151 139 189 668 640 522  45 554 218 175  55 662 740 619 536

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.30244e+06us (= 9302.44ms, 9.30244s)
Wall-clock time (full program): 9.36254e+06us (= 9362.54ms, 9.36254s)
Satisfaction error: 0
Number of search iterations: 2492
Number of local moves: 993 (including on plateau: 382)
Number of local minimum: 200 (including on plateau: 49)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 201 614 664 450 373 169 128  30 118  72 623 677 108  61 766  52  44 556 750 747  69 514  57 783 652 474 524 714
 780 432 650 137 142 343  62  19  95  58 661 759 114  92 742  31  77 695 574  93 741 592 705 683 129 671 781 132
 646 416 636 398 484 679 172  50 173  33 122 767 117  37 160 138 551 476 768 755  78 733 598 638 109 765 415  76
 161 526 607 770 336 407 192 115 212 253 553 149 304 267 641 221 184 744 166 774 100 698 189 715 648 675 328  55
 749  96 616 119 775 410 111 145 752 144 753 140 188 246 179 152 131 776 237 730 185 502 121 773 227 647 473 613
 700 182 694 472 215 488  68 183 154 158 612 710 110  88 101 644 478 168 130 656 276 634 751 640 174 591 772 141
 342 649 771 233 194 465 763  89  83 219 777 761 323 147 187 124 633 355 143 263 113 760 178 706 252 691 521 248
 311 186 268 148 218 729 203 778 190 210 782 261 333 196 216 285 609 209 171 340 707 685 191 703 353 699 717 292
 594 225 657 271 156 784 397 466 762 375 331 381 294 364 287 245 654 307 258 195 217 530  85 637 317 401 538 262
 289 618 244 241 243 737 404 339 324 711 226 471 240 274 235 779 363 348 170 197 345 467 485 593 222 746 302 377
 627 365 314 437 356 547 396 419 198 349 453 199 208 116 242 769 756 370 459 249 220 531 361 510 347 590 256 346
 525 408 383 391 740 207 337 414 624 379 351 482 284 386 228 334 757 269 393 443 469 486 280 445 176 362 232 205
 380 764 181 257 247 550 296 392 405 438 371 390 493 545 293 376 162 446 238 429 434 448 332 470 403 350 516 384
 283 204 495 433 501 330 389 727 382 481 421 422 275 385 288 352 360 359 418 259 455 357 290 378 358 460 423 505
 372 327 523 297 589 123 344 543 411 428 310 326 427 286 456 686 308 273 322 458 270 557 490  51 417 329 468 599
 374 319 491 461  23 499 464 475 457 440 354 511 452 321 402 565 367 387 309 320 439 681 430 316 301 300 106 426
 558 368 519 583 399  71 462 580 517 298 563 264 560 395 279  25 335 552 442 513 518 441 479 125 412 444  11 277
 305 155 533  21 568  87 512 291 266 549 582 536 295 663 539 605 487 177 504 572 313 214 451 251 554 250 146 564
 716 406 151 522  32 282 508 579 388 272 588 366 180 449 672 492  81 639  38 507 480 231 555 303 528 255  94 676
 127 584 103 496  29 260 606 562 265 206 318 642 597 702 689 629  53 424 477  79 425 165 532 200 537 126 611 546
 628 635 561   5 743 157 722   8 413 527  70 529 600 394 566 420  80  98 544 581  66  74 447  65 436 202 687 732
 596  82  45 559 688 211  10 503 454 577 586 575 615 643 630  91 234 112 617 540 570 312 515 254 621  54 281  15
  84 163 278 509 622 120 150 587 542 674  48  99 601 595 734 608 338 497 494 631 520 105  36 299 619 135 224 678
 167 463  43 669 107 682 620 567  17 435  18  59 625 651  20 569 571 236 585 541 604  49 731 369 745  34 133 680
  39 610 153  27 723 136 748 578 725 696 104  90 535 658 736 500 229 139 645  40 626  63 573  12  24 159 668 754
 102 431 213 666 718 306 506 709 720 655 223 164 724 662   2 400 728 653 576  26 670  73  97  42   1 315 602   6
   9   4  22 692 704 713 719 239 659 693  56  67 667 735 697 489 712  60  28   7 739  47 548  16 690 230  75 673
 325 758 175 726  64 498 701 603 684 660 134 193 721 632   3 409 708 665 534  46 341  41 483  13 738  35  86  14

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00595e+07us (= 10059.5ms, 10.0595s)
Satisfaction error: 2
Number of search iterations: 2224
Number of local moves: 1064 (including on plateau: 386)
Number of local minimum: 157 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

Problem in column 5: 373 142 484 336 775 215 194 218 156 243 356 740 247 501 589 23 399 568 32 29 743 688 622 107 723 718 704 64 => the sum is 10989 rather than 10990
Problem in column 20: 747 93 755 774 730 656 263 340 195 197 249 443 429 259 458 320 513 572 507 79 581 540 631 541 40 26 7 46 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 773 726  12  55 536 754 770 463 485 660  81 201 741 613  91 128 533 104 261 476 751 530  30   3 679 493  33   8
  72 126 193 133 698 569 146 755 121 137 112 151 658 153  29 783 608 775 682 595 540 557 746  57 527  74 233 760
 158 312 321 526 771 559 689 664  84 781  39 438 730  88   9 171 752  70 191 127 688 281  67 200 769 780  18 707
  44 592 110 375 243 715 202 714 304 155 122 163 647  94  35  85 740 772 220 174 725 762  63 670 782 713  61 708
  19 724  53  66 697 218 753 719 764 195 225 722 729 744 176 124 166  23 570 132 657 600  80 779 178 109  50 718
  65 617  17 646 700 703 686 641 564 144 159 462 774 588 116  45 310 118 702 162 491 255  79 384 638 639 106 179
 164 492 152 287 615 601 634 632 731 115 165 234 539 197 245 125 545 466 453 349 593 756  62 268 500 656  43 371
 230 784 189 721 431 738 250 495 264 378 393 183 619  69 190 407 238 306 671 327 251 237  96 331 663 665 242 622
 169 680 108 293 187 364 285 748 550 170 258 614 532 265 366 276 723 346 672 750 624 213 241 212 585 130 316 313
 154 767 188 618 150 388 295 138 215 370 107 266 342 246 727 294 284 254 778 694 572 709 272 417 548 208 334 655
 204 357 360 348 244 324 192 335 299 344 759 565 149 323 282 381 314 777 279 300 605 666 307 296 555 628 160 637
 157 584 464 270 291 305 227 765 434 319 209 693 214 749 216 706 322 408 355 415 606 249 341 333 372 286 308 392
 477 400 404 362 426 292 470 507 428 339 645 311 358 274 380 289 317 353 427 283 347 469 328 343 399 437 481 444
 239 260 325 374 301 345 248 487 459 196 391 442 302 554 433 541 513 473 373 382 336 523 503 505 259 458 403 365
 351 271 472 454 338 414 410 394 359 377 509 278 514 455 269 320 330 451 436 401 465 280 267 690 386 460 263 376
 367 484 288 568 425 332 354 203 413 416 368 385 326 387 490 586 221 471 406 421 303 337 369 558 389 379 228 516
 510 543 488  38 309 508 511 318 612 571 483  92 502 432 422 419 114 544 395 546 396 528 273 452 224  34 474 252
 435 447 409  41 441 591 499 450 519 578 184 277  22 420 405 429 398 140 352 449 177 412 567 430 498 506 574 340
 602 217 551 610 468 120 529 113 446  13 439 223 475 603 350 599 147 587 145 648 182  68 652 482 186 597 520 418
 560 363 553 579  86 496 576 411  77 549 478 168 489 457 582 494 173 674  58 105 236 139 524 448 298 581 596 240
 479  56 644 247  36  10 486  97 512 604 423 537 589 561 397 625  87 440  99 653 531 562 535 598  64  95 766 257
 685 290 538 542 480  28 443 390  26 649 577 659 207 504 650 525   2 642 467  25 315   7 556 518  73 445 630 117
 737  42 515 180 563 181 580 219 681 633 643 156  24  32 691  51 461  40 456 676 100 129 761 552  59 424 768 636
 728 161 701 501 131 103 402  54 705 102 675 683 123 687 742 497 383 590  98 256 222 521 517 136 297 232 716  27
 734 226 677 522 566 616 205  37 575 167 361 626   6  52 640 668 651 262 607  14   1 235 678 661   4 135 735 329
 673 148 776 210 611  47  16  21  76 667 736 733  78 711 696 534 695 101 635 356 111 199 684 253  82  11 547 583
 573  46 743 704 175 594  83  48  89 669 732 609 211 712 662 141 206  93  60 654 134 623 629 185 231 621 758   5
 631 275 739 720  71  75  49 172 198 692 717 119  90  20 699 747 757 710 142 620  31 143 763 229 745 194 627  15

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00578e+07us (= 10057.8ms, 10.0578s)
Satisfaction error: 1
Number of search iterations: 2288
Number of local moves: 1007 (including on plateau: 456)
Number of local minimum: 186 (including on plateau: 46)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 8 233 780 782 779 79 756 251 750 778 777 322 289 433 455 326 92 184 13 77 97 443 181 131 522 776 46 631 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 729 738  65 679  35  62 494 659  31  42 773  30 660 671 769 365  56 472 666 148 533 390 156 135  95 678 118 741
 755 140  57 102 110  89 665 725  78  15 617  51 614 746 586 602 722 778 623  36 134  74 760  52 173 742 758 186
  98 753 106 485  66 121 718 683  86 166 581  38 767 559 776 737 123 771 764  53 305 644 561   6 636 141  96 150
 199 640  91 132  54 136 687 726 139  84 124 381 544 756 740 654 144 620 695  94 692 277 604  37 707 611 159 264
  76 652 639 154 287 688 702 523  46  64 689  20 502 747 307 172  79 223 601 183 629 506 188 658 147 634 712 162
 229 610  99 300 195 751 467 708 191 137 782 206 662 701 605 179 774 545 261 308 491 210  21 567 105 656 101 129
 233 535 167 279 714 266 781 205 313 270 762 181 584 289 208 759 131 696 262 133 539 268 297 537 333 724 271 252
 113 693 234 108 303 243 570 772 267 286 457 265 743 736 257 209 230 138 109 613 670 754 770 455 204 227 269 295
 180 749  90 155  61 283 579 214 780 216 299 509 744 184 328 761 224 290 165 752 582 691 323 569 273 281 291 417
 220 619 505 198 293 312 426 357 256 763 345 241 405 458 248 510 768 383 603 375 325 669 178 249 380 354 187 363
 311 451 119 185 361 522 699 392 473 330 784 226 331 231 237 470 236 700 263 193 705 775 247 322 235 278 434 480
 212 213 341 259 284 217 350 218 309 320 474 626 346 294 196 637 641 416 319 335 681 777 484 414 347 327 310 643
 386 388 344 240 779 359 222 296 254 428 653 419 528 379 646 396 453 258 342 326 377 486 373 464 245 276 401 272
 336 318 251 448 415 225 391 427 468 384 352 479 542 454 410 306 228 512 440 366 374 409 343 394 527 493 329 369
 317 518 514 433 324 517 362 292 370 450 232 498 360  73 407 447 497 429 334 408 471 321 442 301 452 549 304 368
 465 280 540 340 515  68 364 469 332 385 371 462 441 387 397 285 488 157 538 367 194 444 525 571 255 420 443 487
 431 466 459 422 421 337 483 438 460 356 349  22 378 411 608 351 358 389 583 413 246 143 425 395 432 519 445 250
 403 478 507 430 563 513 221 501 607 437 114 616 477 496 580 112 446 126 577 355  47  75 550 177 621 456 436  69
 504 170 595 648  77 622 253 526 649 461 372 393 215 664 435 151 524 565 406 481  67  80 115 192 625  92 618 490
 594 500 600 492 412 627 404 463 548 475 376 541 207  87 423 382   3 553 239  41 100 202 476 516 552 612  83 482
 495 104 588 499 677 530 130 111 591 599 511 630 189 642 107 628 160   8  81 589  55 566 572  58 536 578 555 201
 534 161 638 606 520 529 315 543  24 631  28 597  59 551 399 508 585 314 554 418  72  29 103 503 609  26 685 449
  39 146 710 489 694 164 163 521 655 733 168 632 116 149  63  43 562 120 574 587 424 532  13 720 615  45 680 633
 661  50 556 686  14 546  49   5 596 593 558 676 190 158 576 348 573 203   1 697 302 439 242 672 645 219 171 564
 690 244 684 783 704 731 152 145 765 400  16 531  18 117 339 560 402  70  10 568 275 650  60 682  19  27 635 713
 673 127  71 575 647 674  88  34 698 668  23 667   2  32 182  93 557 288  85 717 316 122 739 703 590 153 732 734
 709   9 663 766 735 142 211  12 651 750 176 715 197   7 128 125 728 706 174 723 727 175 748  17 592 274  48  82
 398 238 757  97 730 716  44  25 353 547   4 338 169  11  33 200 298 260 721 711 657 282 675 624  40 598 719 745

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00024e+07us (= 10002.4ms, 10.0024s)
Wall-clock time (full program): 1.0061e+07us (= 10061ms, 10.061s)
Satisfaction error: 2
Number of search iterations: 2369
Number of local moves: 771 (including on plateau: 290)
Number of local minimum: 191 (including on plateau: 35)
Number of resets: 1
Number of restarts: 0

Problem in row 4: 199 640 91 132 54 136 687 726 139 84 124 381 544 756 740 654 144 620 695 94 692 277 604 37 707 611 159 264 => the sum is 10991 rather than 10990
Problem in row 7: 233 535 167 279 714 266 781 205 313 270 762 181 584 289 208 759 131 696 262 133 539 268 297 537 333 724 271 252 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 444 660 612 624 593 712  43  30  41  96 105 392 778  39 665 445 634  13 540 678  79 416 579 735 123  70 389 455
 190 783  48  86 605 774  22  57  73 528 766  80  35  62 569 706 733  26 694 775 449 553 782 724  29  55 765  21
 196 685 115 110 598 726 142 144  46 510 139 173 746  59 306  69 122  93 710 784 454 727 594 679 638 767 621  37
 464 676  94 137 546 533 121 193  16 200  84 161 751  47 738 542  60  50 721 652 699 208 772 702 769 135 691 228
 126 781 109  51 773 780  71 538 165 659 151 134 100  63 655  61 374   8 639 714 770 696 749 645  66 145 728 239
 252 641 729 205 725 503  64 310 101 758 212  82  81 203 155 689 713 154 716 550 407 708 614 722 136 251 132 177
 524 441 127 260 512 756 243 221 321 153 131 183 120 320 684 754 301 178 247 688 656 715 730 554 201  85 771 114
 627 204 740 130 667 358 285 361 210 736 147 141 206 219 779 764 174 562 682 342 346 305 617 599 281 143 241 124
 112 648 235 214 608 521 680 326 768 172 164 232 279 138 709 777 160 376 615 290 558 372 693 559 287 149 111 237
 747 187 370 194 531 590 315 500 333 619 213 337 189 275 222 672 226 568 341 317 718 362 470 543 316 378 198 259
 683 211 218 277 294 382 759 265 271 224 233 182 379 492 604 327 234 573 351 373 575 363 690 401 344 400 419 466
 405 483 262 236 353 537 312 371 289 368 395 386 170 291 336 339 643 752 402 359 517 471 469 551 324 328 257 384
 462 366 343 776 307 514 511 225 230 753 297 311 414 479 314 409 322 451 380 330 350 223 207 516 460 313 375 352
 302 278 494 347 442 428 456 486 427 338 418 425 421 432 269 335 349 429 309 238 383 410 571 355 415 431 529 273
 227 398 393 276 493 541 319 298 465 329 280 505 387 364 475 461 440 457 397 394 534 485 296 308 356 472 249 391
 565 360 367 411 480 216 567 323 545 242 377 424  53 399 332 447 430 426 340 345 381 331 490 459 487 477 283 433
 476 536 245 589 473 293 452 438 468  77 530  38 532 303 417 502 467 522 484 478 286 254  31 169 423 499 489 519
  78 365 396 439 548 195 369 581  72 609 525 434 508 518 450 406 453 390 422 496 133 403 282 217 448 474 595 184
  19 300 507 577 436 209 446  44 412 597 591 601 644 481  20 437 600 253 555 509 166 435  45 292 420 523 299 572
 535 547 664 482 113 266 404 668 527 631 520 698 304 504 150  40 498 274  14 284 179  83 108 244 637 539 408 669
 267 185 501 578 175 255 629  15 495 563 611 649 488 583 116  42 586 231 140 385 354 491 188 263 515 584 557 544
 270 570  28 630  25 191 199 561 705  88 497 413 564 707 620 549 443 661 152  27  75 646 176  90 603 640 103 757
 256  99 592 623 163 258 574 673 576 288 526 560 610 588 318 202  24 325 463 157 118 618 334  54   4 513 711 763
 602 156 636 658  87   5 159 762 662  49 458 687 695 732  17 388 580 633  97  32 250 158   3 357 552 192 635 748
 628 272 248  18 168  58 686 596 674 642 663 677 626 743 240 181 616 606 197  68 607 215 171 119   9 632  74 556
 675 129 585 622  91 162 657 704 697 229 613 670 128 506 647  33 146 666 104  52 587 295 148  67 653 348  34 742
 741   6 681 737  95 102 745 566 700 264 625 761 717 720 107 246  12 582  92   2  98  36   1  10 744 755 106 739
 117  23 651 703  89 125 760 734 701 268 719 654  65 723  76 167 650 731 186 671 261  11 180  56 750 692 220   7

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.6392e+06us (= 8639.2ms, 8.6392s)
Wall-clock time (full program): 8.69786e+06us (= 8697.86ms, 8.69786s)
Satisfaction error: 0
Number of search iterations: 1893
Number of local moves: 563 (including on plateau: 145)
Number of local minimum: 140 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 519 491 241   3 435 756  34 105 134 221 665 782  94 680 688 525 102 222 623 716 710  96 698 418 296 112 609  15
 596  91 700 524 552  63  81  22 654 352 741 468   8 718 760 778 755 369  61 234 736 593 196 136  83 268 446   5
 693 508 622 428 290 637  70 444 126 169 667 544  93 106 549 776 478 460 725 324 721  99 139  92 173 178 726 153
 745 555  78 774  59  90  49 269 652 719  68 621 128 735 215 225 404 275  52 783 675 167 318 746 732 474 216 166
 498 754 149 564 784 164 159 303 742 758 372 619  60 157 769 299 214 207 110 326  66 180 228 165 753 779 711 100
 145 704 750 323 775  36 107  76 739 697 151 673 587 738 479 158  12 266 568 728 578 185 219 193 148 307 191 457
 777 310 709 354 781 315 625  97 601 577 507  85 384 194 636 217 302 230 229 548 188 425 295 707  56 328 239 274
 633 646 522 757 747 620  28 163 615  46 627 582 743 255 518 261 155 246 175 780 248  95 125 348 294 278   2 481
 161 583 262 282 174 208 409 415 684 389 664  50 306 283 375 631 448  48 374 540 764 340 182 176 516 751 573 402
 203 744  53 267 250 156 628 413 529 373 570 772 254 666 204 714 515 142 218 554 391 272 325 644 501 284  71 277
 336 431 288 407 132 342 572 717 475 546 643 659 353 183 603 103 224 691 143 770 292 733 114 381 209 177 253 213
 490 350 242 416 252 297 305 327 337 205 367 401 195 371 724 245 590 749 341 238 382 504 383 437 314 597 356 575
 257 505 377 291 379 412 258  89 146 122 585 527 759 414 763 567 276 484 403 551 330 388 343 495 285 349 316 319
 308 497 147 360 358 512 411 312 465 440 313 376 434 179 247 260 357 368 771 430 483 273 463 311 500 532 362 521
 477 141 392 533 476 406 442 427 359 329  10 517 265 351 423 485 727 530 339 541 249 602 421 410 482 387  43 226
 231 385 424 443 591 470 417 447 140 301 563 289   9 395  32 345 433 236 539 119 408 429 492 432 687 528 438 767
 542 426 370 461 472 344 436 420  64 333 129 281 574 595 569 380 117 715 240 320 334 331 550 506 458 190 439 394
 449 466 399 453 405 520 220 469 211 111 264 668 363 606 531  30 419  25 270 489 400 451  41 613 566 390 681 480
 503   7 576 293 355 553 579 332 243 653 422 378 335 271 445 617 467 509  47 322 614 184 547  79 454 486 263 456
 473 108 599  39  45 511 600 559  54 650 210  20 611 487 120 608 510 471 513 286 557 160 534 462 171 317 612 703
  21 537 494  57  69 618 671 181 300 212 734 279 690 640  82 536 365 526  14  38 170 670 773 598 580 168 629 338
  51   6 397  13 616 682 683 701 686 189 398  84  11  19  31 561 674 499 584  65 502  26 648 592 655 496 565 556
 130 309 118 121 656 346 104 723 624 626  23 562 493 610  18 535  72 366 347 115  86 677 642 645 586 604 364 488
 298 123 441 459 256  87 450 689  77 740  55  40 514  67 396 695 641 630 768 192 647 589 694 186  29 605  62 560
 162 197 124 672 187 202 639 752 144 135 661 321 594 538 280 206 543  37 649 201  58 706 152 676 635 632 150 737
 198 200 731 696 235 662 720 762  98 761 464 154 729 127 138  27 660 393 581 304  80 452 765 137 131  35 708  42
 523 657 669 713 558 251 545  74 386 109   4 237 712 588 172 133  75 638 607 232 233 685 679  44  33  16 766 651
 571 259 116 287 101 730 748 702 705 227 113   1 692  17 223  73 455 658 699 244  88 678  24 361 663 722 199 634

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.82799e+06us (= 8827.99ms, 8.82799s)
Wall-clock time (full program): 8.88695e+06us (= 8886.95ms, 8.88695s)
Satisfaction error: 0
Number of search iterations: 2385
Number of local moves: 1040 (including on plateau: 479)
Number of local minimum: 198 (including on plateau: 55)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  41 306 694  39  74 315  72  64  62 110 752 659  89 700 717 756 729 746 534 736 704  28 672 102 692 355   7 235
 607   6  42 250 202 573  16  34  45  48 593 699 759  91 711  21 757 641 665 712 769  76 750  71 654 561 363 274
 673  11 727 660 285 322 334  99  23 116 726 698 265 253 650 771 762 622 387   8 633 142 621 115 210   2 180 695
 634 620 544 559 293 683  15  22  60  75 710 662  29  10 602 631 713 743 208 616 732 129 143 640   9 311 349 248
 661 645 745 639  95  19 216 145  30 488 618 638 341 625  59 594 764 604 326 224 577  73 503  96 189 131 290 655
 679 684 674 687  87   3 225 357  25 101 761 584 337  55 629 644 693 151 303 740 533  36  12 109 501 565 244 571
 635 632 489 637  79 280 132 617 165  63 626  27 155  53 588 610 589 600  93 652 651 366 611 583 121 172 281 483
 512 716 541 612 185 228 346  40 246 178 478 678  26 664 563 527 560 578 113 506  13 167 472 649 535  98  82 677
 523 608 562 502 515 186  56 586 425 568 574 529  31  68 449 701 518 570 127   5 486 301 498 569 126 227 104 576
 537 587 517 500 123 217 268 128 490 138 497 580 203 442 670 509 539 551   1 581 609 148 575 438 317 352  33 440
 424 516 468 444 288 179 152 530  49 380 452 552 158 492 540 465 591 456  18 567 557 404 474 499 595 242  17 481
 428 554 459 549 374 164 364 345 491 457 464 360 381 441 371 493 329 461 417 601 414 230 432   4 418  43 426 520
 494 287 372 354 463 553  77 542 548 436 485 547 320 388 455 353 289 321 415 376 312 410 443 407 347 161 382 453
 394 475 397 446 423 328 572 365 448 393 332 350 260 496 412 383 526 402 392 522 264 429 323 433 377 434 379  35
 384 338 314 370 420 416 546 390 368 391 395 435 342 439 458 419 339 229 403 469 330 480 471 359 431 343 401 310
 451 510 240 316 271 543 386 309 335 340 409 367 327 286 462 255 460 331 733 278 333 556 398 308 238 648 470 430
 154 385 413 484 450 667 647 373 362 300 234 220 536 324 214 192 222 291 666 262 467 421 389 399 239 505 643 531
 259 282 292 296 524 627 408 195 375 313 538 411 724 422 298 270 299 153 689 466 283 780 188 205 307 508 742 136
 236 396 166 254 690 730 671 369 356 749 223 219 304 247 263 196 284 325 758 249 183 532 318 218 336 744 775 199
 297 378 319 427 445 646 738 658 566 669 256 173 725 257 294 252 141 295 212 176 149 519 182 160 741 405 605 305
 124 213 302 134 657 598 688 477 680 215 175 258 686 233 231 114 245 267 261 232 784 590 204 709 170 706 676 361
 146 351 269 139 243 476 473 682 653 207  81 211 656 767 266 348 118 765 273 728 275 184 358 137 279 737 454 714
 241 276 226 117 596 781 400 198 685 707 206 177 582 768  20 776  84 277 514 159  65 681 779 197 221 597 513 147
 251 150 162 122 777 201 592 772 703 739 209  85 437 642 705 133 156  88 511 190 487 697 614 783 479  38 200  67
 100 168 140 708 718 406 606 615 719 755  69 120 734 558 169 119  92  83 585 181  57 668  70 636 778 344 731  61
  86  90 753 130 504  24 747 603 722 774  51  47 619 579  78 187  37 144 564  14 163 482 193 675 763 715 495 751
 237 748 111  94 702 105 630 721 696 735  44 624 773 555  50  97 108 171 550 112 106 770 194 723 157 447 623 107
 782  58  52 521 507 720 613 754 663 545  32  80 191 135  66 174  46 125 272 628  54 691 103 766 760 599 525 528

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.00278e+06us (= 5002.78ms, 5.00278s)
Wall-clock time (full program): 5.06173e+06us (= 5061.73ms, 5.06173s)
Satisfaction error: 0
Number of search iterations: 824
Number of local moves: 584 (including on plateau: 179)
Number of local minimum: 32 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 362 718  50 745 733 672 250 198 706 659 725 764  37 152  95 139 732 684 185  94 173 126 168 146 220 695  19 743
 311 445 730 709 723 740 236  55 268 658 704 698   6  21 169  73 694  30 130   2 129 131 629 748 707 147 376 721
 144 124 726 651 720 708  82 176 269 308 669 770   5 111 291  12 599 614 261  23 247 315 555 574 671  25 677 663
 140 193 646  47 630 777  13  42 606 321 754 768 102 125  44  10 532 210 115 618 201 143 464 690 763 686 702 648
 265  80 500 700  20 640 170 186 685 678 676 517  66  32  46 150 617 699   7 148 182 511 312 540 693 621 649 600
  90   9 661 620 719  28  91  26 583 631 589 128 253 178 563  85 633 461  24 645 209 588 384 546 688 603 722 233
  41  57 655 674 619 650 230 205 666 164 481 466 189 133 548  36 234 673 227 596 211 330  27 585 578 623 499 593
  17  65 538 534 502 626 212  40  34 551 627 572 612 595 564 338  70 624 145 524   4 552 322 592 180 535 559 456
  33  84 604 670 616 609  29 141   8 522 475 664 568 541 601 290 471 503 458 336 123 246 283 637 460 454 495  69
 160 342 554 506 444 252 259 378 325   3 485 470 136 605 515 452 163 562 224 529 215 569 496 602 113 550 628 453
 492 465 586 549 344 573  11 219 400 364  16 638 447 390 462 457 497 542 240 560 300 302 276 543 420 287 455 155
 399 516 584 412 467 519 318 393 469 119 531  72 478 348 448 507  88 484 463 576 279 120 254 387 557 351 337 514
 489 594 395  15 491 530 307 430 413 486 521 512 443   1 571 316 295 518 435  53 323 525 381 404 231 415 406 490
 504 434 545 437 501 389 320 441 431 429 229 382 533 397 424 426 438  51 414 488  35 379 281 547 340 317 459 419
 286 417 598 468 508 421 297 386 451 355 402 324 361 391 358 380 343 479 396 346 409 416 213 313 359 357 473 483
 294 724 425 350 427 244 375 423 349 717 195 225 401 332 184 365 607 245 553 292 520 636 696 335 272 339 156 309
 222 226 407 278 241 394 446 505 487 326 377 746 408 285 296 782 369 360 354 403 567 258 701 214 436 333 264 305
 731 289 298 299 235 331 474 440 372 405 367 267 341 256 306 347 304 712 681 493 527  64 477 428 439 334 385 388
 737 251 363 366 314 482 433 610 284 778 228 137 329 328 371 327 319 310 625 282 728 615 353 370 383 277 142 248
 691 204 374 223 266 208 734 558 761 179 280 579 303 232 301 239 345 756 263 368 656 257 450 273 679 373 238 200
 561 680  60 237 270 203 773 591 741 255 356 271 510 654 199 260 611  96 665 196 472 449 587 151 249 108 103 682
 513 476  99 202  98 187 781 494 217 632 288 175 657 528 751 760 523 221 692 161 703 642 275 149 172 162 242 190
 757 714 177 191 159 114 667 779 194 418 243 293 716 711 138 747 398 166 715 197 635 432 783  79 104 158 117 188
 647 613 167 122  18 118 652 697 100 206 153  78 644 641 742 771 174 157 544 772 608 566 192 758  54 105 135 556
 705 216  22  39  31 262 769 784 537 480  89  97 660 774 750 653 132  81 274 675 582 753 581  48 739  49 134  74
 570 662  43 112  58  14 710 729 154 107  61 101 639 766 110 780 498  45 597 165 755 392 736 181 352 765 767 121
 713 749 106 762 109 207 683 526  38  68  59 183 411 687 509 536 218 127 738 759 622 590  52  63  56 577 775  67
 116 643  77  71 727  92 668 539 442 171 410  93 735 776 634 752  86 580 565 689 575  83  62  87  75 744  76 422

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00598e+07us (= 10059.8ms, 10.0598s)
Satisfaction error: 2
Number of search iterations: 3359
Number of local moves: 968 (including on plateau: 352)
Number of local minimum: 288 (including on plateau: 40)
Number of resets: 2
Number of restarts: 0

Problem in column 4: 745 709 651 47 700 620 674 534 670 506 549 412 15 437 468 350 278 299 366 223 237 202 191 122 39 112 762 71 => the sum is 10989 rather than 10990
Problem in column 8: 198 55 176 42 186 26 205 40 141 378 219 393 430 441 386 423 505 440 610 558 591 494 779 697 784 729 526 539 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  24 754 106  34  63 752  44 432 784 283 671 312  50 774 378  72 554 108 721 625 440 142 504 716 711  33 125 778
  95 298 775  46  51 779  52 206 724  76 564  55  43 562 641  59 510 783 766 685 128 183 467 401 709  94 736 502
 770 737 777  68  27  67 622  61 764  14 655  16  56 692 577  17 140 691 667 636 509  75 552 756 614 199 135  96
 107 531 738 695  36  88 138 103 567  39 762 278 136 733 668 101 543 145 147 599 475 126 612 682 781  97 556 507
 184 717 112 197 224 780 227  92 104 155 497 428 153 735 693 124 576 660 151 757 466 176 628 707 592 122 522 211
 157 188 156 773  54 680 178 132 728 117 179 445 230 446  86  57 514 782 700 666 776 461 166 447 723 202 760 187
 174 588 238 209 111 262 729 198 170 701 712 745 208 615 236 233 623 274 127 678 415 264 640 494 257 213 659 217
 226 749 195 316 245 214  99 669 200 300 769 763 357 746 670 180 718 169 222 559 275 303 644 243 606 267  90 196
 160 255 118 244 285 437 220 159 358 248 229 521 435 747 713 772 652 311 324 348 186 254 690 369 708 277 597 373
 263 297 204 231 232 261 313 246 318 694 286 519 266 252 761 207 620 352 703 624 748 175 656 374 499 356 228 305
 284 269 341 212 327 550 339 393 677 321 363 663 225 731 627 172 536 607 265 240 320 381 633 295 338 258 332 291
 317 383 360 190 177 354 343 268 626 563 768 493 314 315 259 474 476 287 270 740 404 237 251 565 503 289 472 292
 294 364 436 322 433 335 325 281 349 282 326 549 390 457 398 566 604 328 767 219 452 290 439 458 359 272 329 366
 279 468 336 362 441 463 395 414 337 382 367 429 353 400 397 430 376 443 442 424 306 347 368 280 396 379 480 496
 431 388 385 409 423 413 365 469 511 420 389 402 542  78 380 304 448 453 330 309  89 434 462 603 410 411 345 387
 394 344 331 471 481 403 422 250 384 425 307 421 346 377 508 310 334 444 427 350 271 506 391 192 465 483 416 537
 530 193 450 602 438 163 518 412 501 406 589 308 386 591 470 455 205 234 361 405   4  93 464 534 407 524 392 355
 459 449 516 417 484 399 535  40 479 492 575 191 273 456 490 520 130 486 478 547 570 569 488  38 194 491 139  85
 601 583 586 596 529 637 548 541 546 340 495  45 568  47  15 473 249 544  22 618 114   9  77 182 372 555 585 513
 572 553 571 558 408 545 517 533 418 610 482 223 477  60  29 460  71 515 370  11  65 710 143 540 141 454 333 621
 539 168 673 631 635 557 686 299 301 658  70 247 505 171 489 590  28 584 105 235   5 642 149 639 371 487 523   3
 632 561 638 661 689 662  19 702  31 129   1 201 605  32 115 582  30 154 526  53 512 657 342 527 109 573 653 594
 617 560 485 500 647 241 579 630   6 609  49 221 664  84 288 587 351 538 593  26 681 650   7 528  10 734  80  25
 722 131 616 672 613 123 674 611  13 634   8 742 525 150  21 532 296 144  64  48 578 741 293  20  62 727 498 732
 646 110 574 679 725  23 645 649  79 648 173 148 715 218 375 551 203 137 600 239 698 684 216  35   2 426 116 676
 730  58  18 643 697  82 146 739 687 580 121 152 699 119  81 753 260 134 675 100 619 598 276 113 419 651 120 720
 771  41 164  37 765 654 683 706 167 256 133 714 743  83 323 704 185 102  98 162 719 595 189 210 158 751 696 181
  12 253  91 215 750  66 629 755 161 608 451 759 726 319 302 705 758 581  69  87 165 688 242  42  74 665  73 744

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.00614e+07us (= 10061.4ms, 10.0614s)
Satisfaction error: 2
Number of search iterations: 2265
Number of local moves: 1035 (including on plateau: 449)
Number of local minimum: 179 (including on plateau: 62)
Number of resets: 1
Number of restarts: 0

Problem in column 11: 671 564 655 762 497 179 712 769 229 286 363 768 326 367 389 307 589 575 495 482 70 1 49 8 173 121 133 451 => the sum is 10991 rather than 10990
Problem in column 23: 504 467 552 612 628 166 640 644 690 656 633 251 439 368 462 391 464 488 77 143 149 342 7 293 216 276 189 242 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 691  37 674  25 269 686 678 232  40 277 713 689 684 228  39 690 347   3 101 758  12 696 671 734  98 669 234  15
 166  95 707 340  30 682 681 702 263  65 619 641 736  74  92 706 324 278   9 193 629   1  11 727 685 742 120 672
 135 253  14 200 663 774 633 157  13 250 749 391 719 731  78 237 623  56 245 725 673 695  68 712 728  29  23 416
  43 206 212  67  54 655 687 645 624  17 721 122 704  99 661 701 294 150   4 700 733 698  63 659  41 622 204 604
 265 164 573 216 665   5 603 346 720 286 627 310 716 126   2 722 179 281  22 656 746   8 215 637 602 705  28 565
 594 574 240 103 123 152 652  59 714  18 618 211 575 680 591 582 426  46  38 626 611   6  97 643 569 541 318 583
 255 590 287 203  81  19  85  10 539 398 530 192 658 670 654 380 282 144 589 522 578  55 562 717 657 526 131 676
  76 610 143 571 534 505 588   7 667 163 586 210 382 475 646  70 223  51 517  20  52 601 561 519 650 642 312 609
 595 430 660 197 142 639 230 165  96  88 487  93 585 521 476 556 115 307 614 675 109 462 552 455 533 480 173 555
  31 367  24 375  91 538 389 548 631  16 458 351 528 474 222 516  66 433 149 535 580 531 560 587 470 524 497 499
  60 567 378 254 468  21 485 409 511 242 289 180 421 460 320 544 199 520 415 412 545 457 341 628 298 488 514 564
 508 493 518 208 241  90 542 537 469 325 496 227 366 328 536 492 168 172 446 434 449 439 452 185 406 651 356 456
 428 304 509 315 408 128 385 477 372 317 486 445 427 369 419 371 557 549 502 359  89 442 283 464 473 349 395 368
 364 501 404 311 568 411 441 410 280 350 423 381 376 405 374 482 306 326 331 484 238 392 365 543 361 401 322 440
 379 429 394 338 472 576 451 370 414 481 495 267 420 396 353 355 362 387 503 431 358 463 329 264 270 397 303 333
 506 444 336 465 425 260 344 305 443 435 190 400 600 363 407 467 551 316 422 342 386 448 357 284 220 334 547 393
 740 438 279 507 402 291 268 327 343 647 271 747 214 330 314 139 759 384 248 450 257 146 301 275 244 399 540 730
 236 224 709 436 181 187 454 615 239 295 256 723 559 297 418 300 504 490 272 373 348 249 323 377 770 217 525 413
 743 437 354 510 390 337 584 229 243 711 299 616 233 127 766 313 621 285 745 159 332 108 292 154 360 160 606 276
 598 188 664 739 756 247 225 274 699 532 308 319 171 178 262 196 613 554 608 773 251 118 125 261 273 309 558 191
 596 729 592 617 252 161 137 767 335 694  73 491 209 202 158 777 644 620 290  62 461 169 133 132 302 403 632 352
 666 762 424 630 182 198 162 737 383 752  87 494  32 231 668  35 553 638 748 296 266 635 741 104 138  53 174 201
 293 259 483 593 640 653 195 213 218 500 130 577 170 148  48 184 527 771 735 151 219 710 761 153 750 107 738  64
 339 145 246 581 708 498 167 570 479 513 754 489 100 763  86 321 703 769 186 129  69 194 726 466 114  71 768  36
 634 688 156 781 523 417 453 512 112 683 121 176  47 782 744 124 183 566 753  94 110 105 111 155 780 113 288 779
 189 221 778 447 579 459 147 258 141 649  27 693 207 783 715 597 106 550 757 134 599 765 662  33  44 235 140  75
 515  84 175 529 755 724 119 546 776 679  61 478  34 102 177  50 697 612 605  26 718 772 692  79  72  49 784  80
 345 751  57 432 388 677 205 563 226 607 116  77 117 648 764  83  58 732 136 471 572 625 636  42  82 775 760  45

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00596e+07us (= 10059.6ms, 10.0596s)
Satisfaction error: 2
Number of search iterations: 2318
Number of local moves: 871 (including on plateau: 298)
Number of local minimum: 185 (including on plateau: 43)
Number of resets: 1
Number of restarts: 0

Problem in column 24: 734 727 712 659 637 643 717 519 455 587 628 185 464 543 264 284 275 377 154 261 132 104 153 466 155 33 79 42 => the sum is 10989 rather than 10990
Problem in column 26: 669 742 29 622 705 541 526 642 480 524 488 651 349 401 397 334 399 217 160 309 403 53 107 71 113 235 49 775 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 145 647   9 681 694 631   8  97 635 699 735  15  69 719 451 161 632 618  39 646  41 369  27 754 516 167 736  49
  20  19  37 189  82 752 295  35 745 704 723 293 583 751 722 255 710 669 345 519 112 665  44 756 653 226  12  75
  18  63 357  14 657 717 701  25 766  13 761 748 591 690 271  46  31 675 123 624   5 436 470 673 707   4 666 138
 524 613 163  67 746  88 634 489 633 661 644 703 659 626  61 249  24 596  26 702 413  73 152 554   1  86 676 127
   6 749 182 683 394 688 601 282 612 696 629 720  16 670  89 140 310 731  85   3   7 150  17  10 737 517 540 726
 122 609 254 695 715  34 732 220 595 550 687 561 100 558 639 184 376 650 103 603  38 128  32 708 574 242 227  54
 577 679  99 542 640 551  79  40 541 643 552 585 110 536 141 195 137 641  33 469  56   2 236 495 668 398 615 730
 623 505 111 214  23 567 575 187 598 530 604 693 512 579  11 107 108 547  45 548 531 553 235 415 392 177 667 333
 484 628 160 580  58 543 620 461 589 256 325 625  60 593 130  92 400 691 407 464 496  78 104 533 637  76 522 378
 578  21 344 386  64 564 622 283 399 419 277 568 162 520 600 262 468 485 439 581 514  65 268 222 572 318 498 491
  68 570 174 534  22 535 245 380 549 414 462 508 528 292 486 482  81 617 393 526 490  72 312 493 320 452 383 602
 501 186 170  50 472 463 559 241 518 387 401 317 286 324 483 339 359 276 457 389 352 560 209 375 545 539 642 590
 114 636 350 474 147 434 473 497 305 246 321 237 368 511 403 443 341 405 521 336 525 456 265 711 278 475 411 307
 500 355 306 353 509 261 465 507 430 335 406 330 402 492 455 252 356 537 476 563 388 263 300 440 338 309 319 343
 315 259 479 197 408 215 313 427 412 374 329 250 327 244 416 342 566 296 529 763 433 506 555 421 328 431 426 429
 337 556 460 365 377 299 467 232 370 323 397 199 557 381 441 364 706 194 395 447 349 571 504 280 422 281 284 432
 351 239 471 424 448 230 371 366 231 372 423 435 418 294 316 331 417 396 481 438 503 544 510 487 347 334 385 428
 287 382 409 253 332 175 302 410 169 458 477 373 274  74 727 630 684 367 733 285 149 685 663 354 404 538 240 156
 437 193 546 314 234 297 420 654 190 478 275 168 340 257 664 562 741 311 221 269 677 698 494 119 159 682 390 200
 188 217 592 728 348 515 272 499 450 218 264 288 201 266 326 753 757 158 363 212 358 597 610 229 102 658 205 616
 362 273 446 762 453 180 207 771 289 322 379 291 121 308 672 744 587 178 270 196 769 569 523 126 251 391 260 290
 298 304 619 721 444 113 767 651 267 384 303 301 171 124 608 649 238 109 527 142 165 778 513 172 213 764 202 442
 779 247 655 224 775 783 211 223  62 772  95 143 743  66 660 621 233 219 686  59 203 139 705 173  98 181 573 662
 782 129 605 750 502 115  77 768 136 361 225 166 680 132 210 747 185  53 740 765 713 135 645 449  96 488 179 157
 739 125 734 454 243 228  80 774 151  29  93 466 760  70 155 656 627 192 360  71 714 599 459 101 773 729  43 565
 692 586 784 106 191 148 164 258  48  94  28 638 588  55 700 584  30 198 725 105 697 346 780 176  51 770 671 777
 718 445 716  47 480  83 576 607  52 118 133 153 712 120 117 594 742  91 759 208 678 279 776 116 724 611 131 204
 425 755 758 183 532 781 154 606 248 134  42 216 652 738  36 206 144  90 709  57 614 674 582 648  84 146  87 689

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00034e+07us (= 10003.4ms, 10.0034s)
Wall-clock time (full program): 1.00621e+07us (= 10062.1ms, 10.0621s)
Satisfaction error: 2
Number of search iterations: 2209
Number of local moves: 958 (including on plateau: 465)
Number of local minimum: 178 (including on plateau: 47)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 20 19 37 189 82 752 295 35 745 704 723 293 583 751 722 255 710 669 345 519 112 665 44 756 653 226 12 75 => the sum is 10991 rather than 10990
Problem in row 22: 298 304 619 721 444 113 767 651 267 384 303 301 171 124 608 649 238 109 527 142 165 778 513 172 213 764 202 442 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 246 106   9 752 684 697  81 731 628 618  86 219 194 714 190 645 725 294 366 670   1   4 683 732 140 382  42 351
  36 327  13 656 751  66  28 694 721 769 639 232 121 737  33 706 729 680 184 623 588   3 705 756   7  82  34  70
  76  97  18 451 690 668 166  85 719 704 165 323 657 692 138 634 767  25 754  55 271  44 610 654  31 711 701  84
  23  67 176 149 671 716 642 615  32 770 556 335  53 609 669 606 762 691  78 596 686 188 152 734  22 116 255  21
 131  45 104 626  27 586 627 567 579 649 575 278 648 487 170 661 712  60 650 647 687   5 682  24 600  16 133  14
  74  26 510 644 733  11 631 736 646 539 688 234 622 558 557 758 652 191 667  38  12 199  20 589  80  79 258 238
 112 179 111 502 503 573  88 580 522 481 570 198 666 549 569 525 593 330   8 492 566 212 515 560 118 672 177  19
 273 154  30 453 643 655 318  10 625 604  15  57 620 633  56 595 439 612 607 638  47 225 663 599 529 559 256  75
 233 277 341 527  62 574 563 722  69 395 497 347 546 571 528 401 538 361  50  43 544 519 629  72 463 585 293 240
 436 264 411 597 590 605 421 454 500  39 467 201 562 673  35 214 659   6 124 477 584 568 613 518 475   2 220 275
 288 183 459 471 292 458 281 576 434 178 468 110 520 461 545 431 457 387 524 632 211 484 582 521 399 413 108 117
 207 282 343 511 489 239 428 141 423 550 530 321 535 473 320 437 125 496 418 449 310 483 444 346 508 488 397 297
 364 272 302 353 359 416 543 367 319 505 269 433 462  91 405 495 432 357 561 426 305 456 469 342 440 474 379 394
 512 307 315 410 420 283 427 425 298 231 325 482 485 363 419 295 476 450 244 356 547 438 464 402 311 200 552 553
 470 393 753 507 390 322 284 447 424 414 251 445 377 442 396 291 441 354 312 268 339 355 406 336 301 501 316 455
 337 651 408 352 551 274 300 204 317 217 443 526 383 371 344 386 296 267 365 324 375 384 286 772 329 417 738 373
 490 517 708 182 360 493 290 245 350 309 368 768 345 340 227 331 334 392 378 409 372 308 333 348 313 369 696 415
 592 472 554 181 285 391 407 380 376 370 374 591 193 385 266 358 303 460 249 494 398 699 202 157 328 403 624 498
 499 602 534 208 280 430 287 362 205 536 400 572 162 235 757 388 259 128 773 389 689 276 254 223 306 261 509 466
 577 516 548 780 119 452 228 143 314 236 252 674 210 771 608 279 197 765 155 782 349 260 180 189 206 263 446 491
 587 565 247 213 187 192 185 537 169 506 230 601 250 153 700 114 241 760 326 665 774 248 221 262 619 137 578 723
 540 635 698 159 203 126 653 289 216 253 229 641 338 172 242 222  92 709 747 243 741 594 209  96 164 742 533 504
 784 718 743 127  77 778 171 332 224  89 265 581 215  61 523  99 142 167 542  93 163 636 677  98 766 748 531 640
 616 598 703 156 480 120 713 541 173 151 750  17 764  71 144  90 195 129 678 660 381 603  83 465 514 218 257 720
 664 621  58 759 158 715 226 100 478 564 186 658 145 109 724 113 123 107 122 102 134 749  94 270 776 755 745 735
 685 611 763 150 132  73 710 139 435  95 160 555 105 175 695 739  65 429 513 130 148 637  63 702 744 479 196 662
 726 777 404  68 161  29 675 146 730 115 746 532  37  40 679  41 101 676 448 237  87 630 168 174 761 304 717 781
 412 728 727  46 693  48 617 422  64 103 486  59 775  54  51 136 135 707 147  52 681 783 583  49 740 614 299 779

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.32926e+06us (= 7329.26ms, 7.32926s)
Wall-clock time (full program): 7.38809e+06us (= 7388.09ms, 7.38809s)
Satisfaction error: 0
Number of search iterations: 1627
Number of local moves: 689 (including on plateau: 221)
Number of local minimum: 110 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 698  59 702 666 710 749 193  24 235  19 283  70 691 715 660 300 714 108 177   8 147 734 485  23 741 672  73 334
   2 579 718 752  37 736 185  78 717 187 744  22 724 699 738  12 757 742 701  46  28 755  61 294  91 555  13  17
 652 256 668 709 722 679 253 268 658  18 704  49 694 708 622  11 352 656  60 200 239 125 697 159 602  14 136  79
 127 402   6 731 712 626  40 220 664 630 655 382 612 321 618 232 696 155 661  45  16 695 324 328   9 342 628 113
 623 246 711 674  65 636 642  29 665  20 700 667 597 663 670  76 595  58 329 138  88 627 488  10 525 196 119 133
 633  25 557 673 687  41 529 156 659 457 728 520 631 559 420 202 478  85 608 523 162 593   5 143 685  83  30 118
  34 583 548 600 644 540  27 126 572 499 509 319 639 517 725  87 587 591 651 123 217 296 109  72 584  53 624 114
 637  75 446 513 640 604 128   4 578 580 586 415 543 635 474 170 553 489 481 490   1 610 130 180 571 195 140 122
 632 263 501 564 614 550 134 124  15 497 515 150 671 603 576 183 514 561 495   7 164 521 173 218 634 102 533 476
 479  90 566 425 491 532 526 205 538  71 551 505 556 508 445 568 428 419  43 316 241 455 176 110 619 168 486 473
 560 306 356 416 404 470 537 314 423 510 326 466 487 359 484 524 449 336 407 197 311 426 112 248 519  94 408 541
 465 175 469 504 376 199 596 279 527 350 506 215 589 545 387 534 343 518 453 152 418 616 236 153 424  56 447 458
 384 462 411   3 522 414 480 282 373 341 443 442 393 409 444 335 483 392 386 333 312 472 303 461 434 397 539 340
 395 412 441 385 403 330 364 322 383 431 357 477 286 417 310 454 452 368 439 471 292 291 435 302 492 396 456 429
 348 459 493 309 344 307 380 363 450 401 354 422 339 563 451 391 377 371 410 500 372 503 413 355 238 398 390 289
 369 370 366 332 381 399 315 657 432 358 365 360 304 245 448 406 258 536 331 421 278 601 353 375 367 379 438 546
 237 305 234 285 327 688 463 713 427 299 191 512 298 261 378 507 770 213 265 346 516 273 254 530 394 482 362 460
 323 611 221 243 288 293 361 498 250 208 758 317 301 233 374 270 440 347 277 577 582 249 751 748 269 761 160 280
 275 606 345 405 287 244 225 569 165 729 325 262 266 252 338 581 295 267 690 297 496 318 625 590 271 735 181 351
 206 599 171 320 141 276 169 721 730 204 558 645 260 290 227 647 284 172 223 549 675 251 609 769 264 617 132 281
 313 681 135 231 203 228 230 389 198 400 242 388 207 771 192 638 274 137 210 705 436 151 740 689 224 573 764 641
 684 272 746  26 149 222 783 682 194 308 161 259 219 201 240 570 257 255 146 629 646 768 535 547  63 598 209 621
 107 754  82 167 190 430 594 648 131 157 100 781 166  50 121 669  97 680 158 732 692 229 437 677  89 620 782 650
 142 475 163 111 723 189 649 562 216 759  93 115 154 103 129 468 120 762 179 552 747  64 567 772 182 542 686 766
 186 502  51 739 145 188 643 750 105 743  32 676  62  95  74 703 178 247 117 511 707 144 116 494 767 464 778 773
  98 592 716  38 615  31 214 737 174 654  67 184 139 212  42 588  36  86 554 720 693  33 678 531 780 226 775 777
 607 784  68  92 101  52 756 544 467 575  57 765  96  35 349 211  55 733 776 683 760  84 565 433  48 528  39 727
 774  47  99  77  69 337 574 726  44 585  80 605  66  21  54 653 148 706 763 719 753 106 613 779 104 745 662  81

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00031e+07us (= 10003.1ms, 10.0031s)
Wall-clock time (full program): 1.00613e+07us (= 10061.3ms, 10.0613s)
Satisfaction error: 3
Number of search iterations: 2437
Number of local moves: 1078 (including on plateau: 416)
Number of local minimum: 212 (including on plateau: 39)
Number of resets: 1
Number of restarts: 0

Problem in column 21: 147 28 239 16 88 162 217 1 164 241 311 418 312 292 372 278 516 582 496 675 436 646 692 747 707 693 760 753 => the sum is 10989 rather than 10990
Problem in column 26: 672 555 14 342 196 83 53 195 102 168 94 56 397 396 398 379 482 761 735 617 573 598 620 542 464 226 528 745 => the sum is 10991 rather than 10990
Problem in diagonal 0: 698 579 668 731 65 41 27 4 15 71 326 215 393 417 451 406 770 347 690 549 436 768 437 772 767 226 39 81 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 498 586 333 753  89  70 248  14 746 690 737 700 726 256 265   7   6 768  51 174 646   9  98 375 757 687  27 674
 365 381 326 701 742  46 196 169 752 710 770 731 661 771 110   5  36 739  22  29  60  74 719 226 680  80 208 681
 225 761  12 733 667 653  79   2 764 638 736 264  17 657  68   3 735 722  19  32 708 123 745 183 543 159   1 741
 350 534 604  66 682 124 168 607 666 594 581 655 407  48  31  49 675 442  21 715 155 288 747 144  15 280 679 662
  16 694 676 688 756 142 160 691 628 705 559 621 738  53 134  55 576 558  23 596 209  76 590  57 238  71   8 672
 133 438  96 697 490 150 122 651 634 703 599 699 545 759  93  24 400 654  37  13 618 329  88 143 562 129 524 660
  97 707  84 561 603 513 304 615  45 613 456 497 175 564  86 611 511 629 233 215 114 346 619  77 166 239 693 617
 156 582 504 572 650 475 184  95 539 460 533 600 537 454 121 518 398 212 191  87 231 552 689 211 165 258 525 492
  18 631 342 520 589 530 290 569  47 554 502 568 597 567  28 614 529 210  20  10 548 181 695 228 189 141 523 750
 131 570 553 514 476 300  64 488 587   4 556 566 213 417 609 593 457 608 549 536 137 157 391 173 125 163 465 588
 268 494  25 345 485 427  78 550 402 512 493 433 458 595 516 320 468 337 389 557 448 115 610 435 217 200 521 292
 565 663 573 495 451 551 244 487 477 531 426  35  85 412 296  11 510 585 206 449 575 102 372 430  61 463 527 408
 301 605 547 437 316 428 295 341 429 229 387  63 469 544 445 441 491 282 411 421 484 404 356 424 450 305 293 392
 397 379 434 446 461 371 336 453 439 347 314 393 419 357 274 338 382 462 479 199 517 507 496 340 322 432 373 323
 310 396 598 297 275 261 563 285 308 294 395 281 623 348 501 269 267 279 506 364 405 420 532 366 443 361 483 560
 413 418 470 385 431 289 409 273 378 374 423 335 649 444 352 647 207 403 355 266 486 353 388 315 515 369 221 422
 358 190 440 251 522 351 383 139 360 362 399 334 370 716 473 499 401 394 601 474 324 577 259 384 325 509 309 286
 670 257 299 284 235 276 668 291 246 328 331 321 656 447 425 368 188 773 250 471 306 380 147 698 641 635 254 145
 652 318 772 271 220 410 359 237 127 311 349 414 571 376 620 390 713 236 478 241 302 459 317 313 673 354 204 303
 343 255 130 684 180 197 467  99 712 344 298 277 339 138 307 386 243 584 472 783 262 546 363 541 744 763 270 263
 624 219 540 185  92 538 702 778 161 272 234 179 278 245 729 214 140 218 725 176 784 452 170 780 633 580 312  30
 505 135 330 287 227 714 636 152 332 283 216  90 455 253 508 555 109 249 724 203 755 671 195 781 579 616 327 103
 648  41 201 100 106 777 765 481 224  94 148 182 482  65 749 740 205  56 612 727 223 626 177 464 627 642 677 151
 466 128 686  72 779 416 692 232  83 222 187 711 198 760 602 592 158 162 743 678 178 721 242 367 319 436 117  43
 643 193 194 240 164 247 767 132 591  52 101 153 171 489 683 519 665 167 709 706 578 728 107 542 118 535 723  73
 625 252 406 136  33 260 526 658 172 202 112 751  42  54 664 717 669  81 644 640 192 415 113 659 696 377 774 120
 528 105 748 154 230 754 782 769  50 500 104  26  69 119 718 730  75  34 758 622 108 645 126 630 149 632 766  59
 685  58  67 116  39 720 503 732  91  62  44 111  40  82 583 775 776 146 762 606 637 734 639 704  38 574 186 480

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00596e+07us (= 10059.6ms, 10.0596s)
Satisfaction error: 2
Number of search iterations: 2317
Number of local moves: 832 (including on plateau: 302)
Number of local minimum: 186 (including on plateau: 43)
Number of resets: 1
Number of restarts: 0

Problem in row 4: 350 534 604 66 682 124 168 607 666 594 581 655 407 48 31 49 675 442 21 715 155 288 747 144 15 280 679 662 => the sum is 10989 rather than 10990
Problem in row 8: 156 582 504 572 650 475 184 95 539 460 533 600 537 454 121 518 398 212 191 87 231 552 689 211 165 258 525 492 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 114 446  11 206 565  60 778 726  73 687 319 782 388  57 709 150 637  71 697 558 178  85 405 739 757  89 598 105
 153  30  28 143 738  29 770 776 134 740 496 641 665  95 202 583 608 166 536 667 146 111 745 753 618 132 128 157
 549 771 547 330 681  99 137 774 113 305 161 625 656 174  79  94 783  84 675 605  21 619 612 775  75 131 449  66
 680  54 172  69 651 761 123 127 411 710 520 545 515 567 195 139 690 118 524 115 185 229 691 295 208 212 735 749
 750 530  31  80 768 760 165 624 124 718 481 559 251 723  64 485 561 169 196 692 192 129 713 149 173  74 764  65
 175 657 162 133 685 359 181 116  51 724 733 539 772 182 257 163 777 455 717 186 148 752 780 201 160  90 742  93
 499 104 170  87 557 205 355 145 167 744 663 708 568 223 220 190 472 230 779 293 252 781 393 748 254  81 343 759
 591 253 216 307 683 582 353 261 158 222 694 321 438 677 308 317 655 435 721 272 318 263 235 716 102 346 443 103
 703 673 204 242 773 136 310 291 737 290 633 689 660 433 188 180 286 345 722 664 194 228 240 211 130 215 392 221
 763 620 326 434 648 238 120 241 231 615 274 623 734 331 350 270 448 584 614 306 138 337 522 156 380 243 197 247
 666 765 168 244 245 597 365 237 260 227 767 457 269 296 674 236 370 672 374 352 276 264 684 304 292 248 422 259
 335 325 465 414 596 301 531 439 416 386 424 606 324 338 413 585 769 267 191 363 364 375 652 232 312 155 147 265
 500 320 397 294 410 450 399 258 385 329 387 575 378 354 280 419 391 646 303 282 284 467 348 421 678 360 466 209
 406 309 344 390 340 451 336 395 327 396 297 262 784 361 275 394 366 356 504 339 617 347 246 372 427 278 525 546
 493 430 381 408 412 492 357 315 469 452 494 420 171 302 409 101 460 495 512   5 349 501 594 373 351 440 437 367
 425 442 459 287 288 379 277 333 502 233 332  86 249 383 535 377 415 441 470 403 342 401 571 404 454 630 488 384
 376 458 486 389 225 316 289   9 487  22 484 273 456 542 322 574 239 341 556 474 476 407 398 541 497 382 463 508
 255 468 300 417 299 473 218 516 654 478  76 527 119 432   2 400  98 566 429 313 671 554 464 578 445 635 142 461
 552  49 538 491 362 521 510 358 428 266 179 426 125 616 475 177 599 482  72  56 453 471 423 601 164 483 600 513
  33 519 588 537  62 553 751 621  77 518 200 214 198  16 569 668 281 159  67 109 609 551 189 514 447 741 636 563
  92  53 647 489 224 523 505 526 644 627 271 122 203  27 573 639 436 283 135 511 590 581 184 402 576 533  91 503
  50 509 532 548 140 550 650 570 479  41 154 121 176 572 592 444  55 534 256  83 714 577  26 498 543 562 328 686
 418 268 544 506  97 106 528 670 607  17  14  58 602 507 604  70  10 462  20 682 720 662  44 587 747 629  68 743
  47 285 728 586  61 626 431  63 725 529 712  39 219  45 213 610 100 693 334 480 622 579 151 183 706 555 649  19
 311 540 631 756 207 679  88  59 593 661 217 187 112 638 560 699 117 580  82 144 755  52  78  37 731 715 108 653
 371 250 517 695 199 736  96  42 323  15 659 107 298 729 632 603 279 758 126 658 707 634  23 141  32 643  12 705
 193 628 698 762  36   1 754 732 711  34  35 368 642 730 589 727  48 595 226 702  24   8 369  46  43 719   6 564
 490 234 700 746  38   7 613 766 704   4 314 110  18 640 701 696  40   3 152 676 645  25 210  13 688 669 611 477

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.33521e+06us (= 5335.21ms, 5.33521s)
Wall-clock time (full program): 5.39516e+06us (= 5395.16ms, 5.39516s)
Satisfaction error: 0
Number of search iterations: 960
Number of local moves: 591 (including on plateau: 171)
Number of local minimum: 40 (including on plateau: 10)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 169  61 455 764 741 101 520 590 556 706 155 109  48 151  72 117  92 739 569  91 401 127 650 518 240 686 782 780
 113 778 753  97 670 737 759 135  88 181 107 740 144  38  70  80  53 678 468 125 462  55  42 648 703 702 781 783
 657 712  65 104 220  47 769 146  51 765  74 546  49  32 248 729  82 766 697 726 510 547 167 628 279 756  34 584
 656  86  57 775 635 152 545  73 137 705  39 312 528 626 106 187  63 727 652 281 531  36 138 619 676 728 303 617
 362 112 128 698 784 119 625 323  41 444 767 751  30 139 164  81 713 684 709 200 701  44 108 530 736 651 121 225
 738 221 733 683 634 723 550  96 111 361 180 568 163 159 261 162 239 157 685 199 290 253 762 644 133 224 285 776
 725 254 236  64 661 223 772 258 246 391 198 345 228 203 245 244 349 227 611 208 743 699 215 654 694 346 194 757
 773 280 147 154 690  85 557 748 231 774 266 710  89 115 191 174 534 645 177 299 760 210 185 745 284 189 298 680
 413 158 434 186 409 356 602 217 587 241 742 667 293 176 229 309 308 149 414 262 572 731 216 768 433 627 202 289
 188 251  56 673 671 779 485 322 338 481 197 544 747 269 268 348 464 294 614 331 618 274 120 580 214 212 422 230
 402 153 204  67 389 263 707 386 307 411 717 720 207 364 233 337 326 183 250 165 771 730 369 755 302 374 428 470
 306 287 327 355 649 243 521 264 211 276 170 368 332 591 320 436 315 291 352 495 512 754 379 660 385 319 242 630
 377 524 426 363 295 450 451 353 459 454 419 336 270 222 427 358 515 283 421 310 484 453 777 235 373 316 499 140
 448 381 213 325 367 365 519 378 360 370 483 275 442 304 190 278 718 555 425 492 317 749 314 286 209 339 458 430
 255 259 507 420 473 330 341 480 384 273 452 398 340 417 347 474 329 342 344 514 410 343 465 260 439 509 397 488
 501 554 431  31 383 321 479 489 148 173 482 497 416 404 395  79 456 412 272 446 438 371 506 350 562 333 681 380
 513  37 392 403 131 407 238 548 445 393 563 461 552 357 624 486 477 388 366 478 399 505 432 195 335   2 467 396
 460 621 471 553  71  75 296 324 536 126 372 390 435 523 449 423 539 525 564 300 160 487 503 196 418 472 540 161
  40 559 517 490 257 529 168 429 375 124 567 226   4 334 516 612 201 636 604 508 132 586 526  22 476 493 463 596
  93 592 354 588 134 447 249 491   6 440 597 166 558 574 500 577 206 598 566 527 256  52 615  76 629 561 535   3
 582 443 696 551 292 457   5  11 695 606 318 469 620 400 494 579 301 594 571  19 103 609  94 123 622 387 156 193
 692 605 565  84  87 633 129 475 607  95 394  26 599 659 658 541 437 537   7 638  33  29 496  78  66 542 735 543
 498 578 585 641 237  12   9 672 763 116 689   1 538 640 613 704 504 277 192 595 265 376  10 178 573  14 560 150
  68 668 642 583  23 679  46 714 549 600 715  99 610 406 724 581 182  28 102 687 311 647 646 297  13 145  20 205
  24 576 655 533 351 637  21 734 732 669 653 179 666 631 664 643 601  17 100 570 267 282 219 288 105 130   8  35
 232 693 143 171 252 675  50 589 639  60 424 184 744 752 502 708 750 118 142 328 141 218 663 110 359 247 688 408
  43  15 721 575 415 623 172  45 677  90 114 632 722 746 719 716 770 122  62 593 305 441 682 313  58 511  83  25
 662 532  77  59  69 522 405 700 711 665 136 271 616 758 761  27 466  18  54 603  98 382 691 234 674 175 608  16

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.84934e+06us (= 6849.34ms, 6.84934s)
Wall-clock time (full program): 6.89915e+06us (= 6899.15ms, 6.89915s)
Satisfaction error: 0
Number of search iterations: 1570
Number of local moves: 712 (including on plateau: 282)
Number of local minimum: 102 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 624 117 432 270  77 737 111 733 388 738 185 688 275 529  24  36 638 622   5 293 497 158 654  86 650 646  49 728
  98 669 475  72  56 484  18 217 169 746 670 285 328 616 690 219 726 130 656 105 235 222 667 377 683   7 652 718
 137 187 272 424 123 298 176  13 625 280 678 213  52 614 514 162  62 627 576 381 430 634 741  61 681 677 621 731
 557 223 159  99 122 674  64 699 107 721 704 499  28 692 156 119 747 578 113  93 429  67 660 618  22 735 659 645
  74 102 127 611 672 220  73 589 154 709 706 725 181 644 115 101 569 715 617 128 538  34 572   6 390 495 515 608
 679  48 300 518  26  32 757 700 160 556 508 452 132 133  88  20 708 565 449 566 604 651  57 702 649 195 204 531
 610 562 583 108 196 534 504 675 206 705 371 575 175  17 564  66 676 550 480 666  63  69 191 121 581 765  83 294
  94  58  53 473 612 522 287   1 282 453 642 607 595 686 374 216 311 513 472 573  11 521 523  15 586 469 559 482
 460 580 594 178 555 443 104  41 477 537 626 707 136 524 623 134 602 420  19 208  65 419 355 628 516 236 221 582
 471 496 502 491 467 713 151 517 340  45 446 307 168 606 305 364 462 552  59 405  54  71 485 682 466 511 525 329
  35 327  60 306 751 547 276 288 437 560 640 411 717  25 252 657 455 124  50 492 171 448 629 486 444 661 200 541
  40 317  80 510 350 509 413 476 428 507 685 234 315 558 435 433  27 209 408 680 464 304 439 396 291 694 385 403
 505 613  92 463 404 372 229 653 143 406 409  51 378 401 389 335 519 543 577 457 172 436 255 490 498  84 588 528
 415 266 767 425 239 325 489 481 568 410 376 296 321 736 416 358 535  39 356 391 316 297 362  29 526 544 370 337
 501 451 431 546 400 478 333 423 368 310 384 314 395 441 351 347 278 331 549 487 382 345 488 322 402 264 360 309
 202 445  31 192 458 442 563 245 373 147 407 696 342 118 716 379 269 339 470 238 665 703 262 346 397 592 421 532
 503 398 719 283 344 320 579 141 366 313 447 648 145 349 286 380   3 319 359 281 483 542 587 591 743 170 426 265
 729 323 173 393 367 165 493 203 745 601 247 643 781 308 630 697  44 593 338 224  42 240 246 174 357 277 597 361
 290 354 603 267 295 244 599 250 241 637 289 324 750 619 722 689 387 279 567 211 341 248 545 259 212 326 253 189
 182 752 711 227 687 353 399 605 332 231 392 494 714 214 249 527 434 226 183 548 673 150 258 734 237 198 116 164
 312 761 760 777 334 302 318 779 474 167 184 152 166 161 256 506 225 778 180 417 763 257 268 571 394 299 230 199
 658 148  81 641 536 533 749 292 615 139 120 254 584 698 635 701 144 284 218 146 365 773 348 260 188 207 422 251
  43 671 551 228 740 386 330 186  46 103 179 125 574 205 138 720 756 274 695 748 459 414 197 620  78 273 512 739
 742 242 363 155 530 693 554 271 753  97  21 142 193 126 215 732 647 585 663 352 479 662 461 301  87 500 261 163
  75 684 450 766 232  10 774  96 780 210 100  68 755  90 758 633  14 636 263 590 744 375  91 712   8 129 770 177
 768 233 782 775   2 418 727  30 570 112 153 336 454 631 243 710 609  33 465 639 438 456  82 596  23 561 140   4
 427 201  55 194 691 157 730 632 303 110   9 668 553 114 776 149 131  37 664 655 764 723  47 769 772 106 468  85
 759 762 784 598 724  79 190 754 540 440 412  76 783 135  70 600  12  89 539  16 343 771 520  38 109 369 383  95

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00591e+07us (= 10059.1ms, 10.0591s)
Satisfaction error: 2
Number of search iterations: 2512
Number of local moves: 911 (including on plateau: 362)
Number of local minimum: 193 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

Problem in row 4: 557 223 159 99 122 674 64 699 107 721 704 499 28 692 156 119 747 578 113 93 429 67 660 618 22 735 659 645 => the sum is 10989 rather than 10990
Problem in row 18: 729 323 173 393 367 165 493 203 745 601 247 643 781 308 630 697 44 593 338 224 42 240 246 174 357 277 597 361 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 434  80  97 692 764 602  21 667  16 129 683 426  58  94 755 675 172 779 167  51  31 708 504 753 782  44 681 125
 752  62 173 744 457 120 627 765 135 242 632 114 777 206  45 741 401 123 560  30 222  27 691  77 639  70 783 775
 132 713 770 747 609  23 156 676  55 150 180 412 155  99 772 517 126 134 147 694 634  41 526 725 766 608 271 152
 592 771  92 781 647  89 230 108 139  39 750 735 773 145  57 686 707 768 348 307  61  52 591 143 290 119 655 315
 597 133 351 550 721 130 154 115  38 176 742 640 507  78 736 757 738 682 715  79 218 105 245 197 740 182 525 138
 581 356 184 645 599 746 216 241  36  90 603 493 140  42 168 784 767 164 731 179 146  66 780  96 730 175 580 652
 737 106 193 729 217 354 300  84 329 331 661 734 282 264 142 594 697 644 200 319 368 754 620 157 573 177 236 188
 732  95 289 633 695 161 205 723 149 136 712 468 314 350 215 240 701 704 278 191 776 257 221 118 717 397 360 153
 638 169 296 459 566 212 235 189 763 248 621 657 291  82 317 320 358 726 250 207 166 508 391 352 643  98 714 514
 583 148 328 373 625 395 304 160 355 536 658 635 487 323 247 255 305 243 693 239 405 151 299 422 574 380 266 601
 325 383 131 759 346 386 306 268 342 286 617 431 294 165 382 229 310 600 698 181 449 374 298 301 674 748 453 254
 477 293 327 420 357 483 279 281 428 387 604 711 363 178 246 333 575 699 295 341 432 287 472 474 511 223 288 226
 190 210 390 413 485 196 393 512 198 269 528 461 214 494 237 312 394 398 680 546 506 466 267 471 532 332 467 430
 396 162 238 339 338 362 308 710 378 253 548 424 475 309 326 384 402 419 370 379 375 530 277 524 637 433 376 318
 202 578  29 473 429 618 435 455 498 311 607 539 292 392 272 353 400 416 349 414 447 262 418 381 265 345 446 364
 359 478 436 337 437 438 452 377 367 482 121 263 469 518 335 372 584 464 369 496  54 486 454  71 324 492 385 570
 529 234 410 388 444 336 497 513 549 258 365 344 450 503 284 456 404 303 519 445 199 427  85 510 228 334 407 569
  75 389 561 259 366 579 495 465 505 537 183 280 208 371 463 545 448 252  26 562 488 500 211 547 195 663 411 406
 501 330 347 274 439 557 423 522 576 481 270  46 631 458 343 425 590 509 297 273 491 225 103 542  64 421 443 409
 232 502 563 194 361 520 555 399 533 582 415  37 316 685 489 490 213  50   6   1 244 636 587 593  40 564 612 571
 186 649 534 124  48 535 499  12 589 565 203 158 515 521 669 516  14 541 611 538 220 403 110 624 185 577 231 613
 159 703 678 107 192 553  91 249 441 527  34 442 656 606 586 313 187 204 622 551 702   5 626 733 233 544 170  76
 163 719 572  28 321   3 761 598 523 659  47 408 558 671 751  65  67 224 670 654 664 283   2 596 116 552 171 144
 117 646 665  83  17 585 554 440 749 588  73  60 128 709 722  25 543 285 531 595 684 616 127  18 260 690 476   4
  87 615 610 112  59 642 614 651 648 619  15 322 629 568 660 137 673 480  86 559  63 650 479  69 122 101  43 677
 209 688 540 104  81 653 700 745 706 696  24 219 141 641  19 102  93  68 302 679 687 756 276 716  20 470  88 567
 227   9 556  49 261   7 460  32 605 689  72 256 666 758 739 113 111 100 462 762 774 743 662  53  56 623 417 728
 778 769 630 174 109 705 720  33 340 724  22 275 201 760  13 251  10  11   8 718 484 672 668 727  74 628  35 451

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00604e+07us (= 10060.4ms, 10.0604s)
Satisfaction error: 2
Number of search iterations: 2268
Number of local moves: 917 (including on plateau: 259)
Number of local minimum: 168 (including on plateau: 29)
Number of resets: 1
Number of restarts: 0

Problem in row 5: 597 133 351 550 721 130 154 115 38 176 742 640 507 78 736 757 738 682 715 79 218 105 245 197 740 182 525 138 => the sum is 10989 rather than 10990
Problem in row 13: 190 210 390 413 485 196 393 512 198 269 528 461 214 494 237 312 394 398 680 546 506 466 267 471 532 332 467 430 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  92  58 168 705 678 252 236  50 165  49 147  46 645 751 212 638 700 635 141 698 657 744 721  89 757 699 232  25
  38 143 167  54 724 110 184 100 181 619 391 746 101 726  27  81 672 735  19 659 135 642 761 640 145 718 733 739
  34   8 731 676 648  37 380 156 226 556 120 714  28  15 140 736 649 630 190 313 617 734 667 680  14  16 568 707
   7 703  52  26 581  41 197 349 142 767 152 113 591 420  24 643 243 677 131 709 742 686 688 694  65 750  85 712
 162 704  82  55 272 164 137  76  22 634  79 550 682 612 604 740 646 625  66 624 513 730 637   2 177 651  69 675
   6 599 128 679   9 108 185 139  18 711  11 628 685 626 623 552 696 639   5 610 186 669   4 546 592 632 118 586
 555 710 565 123 618 237  62  47 267 655  97 281  35 627 544  73 741 460 253 641 536  13 567 584 180 745 109 665
  32 534 582 523 587  12 301 390   3 583  29 270 286 531 693 602 549 476 202 580  21 543 144 473 129 616 631 668
 558 435 456 524 563 203 288 306  10  40 250 271 588 497 481  43 615 608 146  20 570 539 528 501 509 598 284 559
 514 364  64 504 426 233 429  17 459 127  23 292 566 469 378 520 440 499 442 541 493 557 468 533 576 419 187 450
 445 554 489 545 448 369  80 302 462 578 339  45 411 519 407 266 490 472 199 372 337 259 500 502 416 385 393 406
 424 574 537 422 307 503 452 138 298 453 289   1 386 430 474 522 412  61 309 441 510 423 463 443 479 454 485 300
  48 530 360 310 538 405 410 352 475 653 316 325 338 329 511 290 551 222 333 483 402 361 425 395 348 409 376 495
 461 492 494 179 449 358 340 327 343 397 305 219 451 401 389 324 408 561 351 518 387 480 312 446 444 331 457 366
 363 383 526 388 248 265 414 458 560 359 508 370 398 394 418 368 404 371 488 213 421 381 384 505 417 362 246 377
 326 258 231 367 382 434 585 579 375 428 548 521 487 547 438 379 357 403 374 484 355 238 662 283 170 274 332 173
 663 330 279 356 341 702 470 697 304 334 436 477 347 247 317 464 748 427 575 344 205 256 277 314 239 261 263 318
 255 437 439 276 295 553 230 498 515 482 756 229 323 415 257 319 354 466 589 245 280 365 299 163 763 161 684 342
 471 321 569 467 235 720 673 540 373 191 400 447 345 311 210 217 346 336 597 308 297 433 200 496 269 303 562 353
 350 182 211 209 315 773 674 605 716 178 695 532 278 262 725 399 192 396 636 743 215 171 220 221 293 282 195 322
 647 216 573 781 652 650 291 621 535 242 431 273 432 275 320 106 166 335 516 223 753 287 194 254 527  57 517 116
 728 249 172 155 244 729 754 664 656 158 758 622  93 126 264 176 151 133 600 102 542 778 207 218 491 296 596 328
 681 174 204 708 294 392 776 609 692 183 455 529 189 234 770 193  56 175 661 251 690 117 512 198  87 268 732 160
 601 701 611 769 760 593 590 752 660 132 506 285  70 125  90 629  44 114 595  83 228  96 240 768 486 206 188  68
 465 225 722 260  75 119 507 689 614 122 723 666 620 124 783 159 154 214 613  53  77 153 603  36 706 691 683 134
 719  99 774 715 208 670 658 654 749 201 747 687 755  95 111 121  71  39 771 571  91 130  51 157 150 224 713  59
 607 766 577  78  63 594 572 148 606 633 762 780 772 777  42 759  31 112 775  94  86 107  60  84 779 149  74 103
 738 241 227 136  30 764 115 727 564 525 717  72  88 105 737 671 104 169 413  67 644  98 196 765 782  33 478 784

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00032e+07us (= 10003.2ms, 10.0032s)
Wall-clock time (full program): 1.00624e+07us (= 10062.4ms, 10.0624s)
Satisfaction error: 4
Number of search iterations: 2322
Number of local moves: 937 (including on plateau: 424)
Number of local minimum: 177 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

Problem in row 15: 363 383 526 388 248 265 414 458 560 359 508 370 398 394 418 368 404 371 488 213 421 381 384 505 417 362 246 377 => the sum is 10989 rather than 10990
Problem in row 17: 663 330 279 356 341 702 470 697 304 334 436 477 347 247 317 464 748 427 575 344 205 256 277 314 239 261 263 318 => the sum is 10991 rather than 10990
Problem in column 12: 46 746 714 113 550 628 281 270 271 292 45 1 325 219 370 521 477 229 447 532 273 622 529 285 666 687 780 72 => the sum is 10991 rather than 10990
Problem in column 15: 212 27 140 24 604 623 544 693 481 378 407 474 511 389 418 438 317 257 210 725 320 264 770 90 783 111 42 737 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 744 125 781  91 620 555  41 750 653 583 417  87  52 485 749 105 167 442 151 390  12 666 622 713 134 773  74   8
  86 765  29  69  63 722 731 599 502 574 782  72  77 657 705  26 118  94  31 673 573  68  90 736 732 561  75 780
  55 655  80  82 109 777  56 720 534 742 514 114 764 464 769 119 155 107  73 424 431 669 703 166 113 776  35 784
  78 591 149 770 250 648  98 733 135 755 623 137 375 153 160 103  36  79 567 562 707  81 762 165 761 632 126 754
 241 282 760 566 759 501 190 528 686 220 450  27 728 699 771 140  89 172  83 516 541 725 663 223 110  95 117 108
 254 723 196 133 147 402 184 708 507 226 752 228 629 779 552 131 127 350 120 410 606 730 546 238 193 748 198 173
 104 661 152 205 194 691 772 753 132 185 633 208 124 714 557 188 259 624 136 697 504 712 276 211 171 163 201 763
 159 505 233 235  71 734 304 676 214 257 496 229 704 677 492 264 227 482 255 724 363 627 342 248 216 654 266 336
 298 279 206 236 191 634 162 767 766 209 693 222 181 280 595 246 121 719 197 658 643 718 252 215 169 251 774 308
 263 231 161 306 341 556 230 354 735 529 740 224 429 323 612 249 183 665 326 756 757 305 289 186 288 348 317 287
 245 200 221 189 143 768 283 488 243 721 592 225 563 717 564 642 299 565 327 218 700 268 320 290 295 284 353 267
 285 270 234 452 394 539 316 351 421 273 409 313 338 347 315 551 739 240 355 659 639 558 329 339 261 423 309 331
 356 385 333 364 303 545 335 439 393 371 369 399 610 381 377 374 334 586 373 433 405 260 360 352 397 343 412 401
 388 292 145 293 475 484 319 411 446 357 307 434 470 322 783 330 372 302 468 489 219 420 398 408 328 403 449 478
 404 413 321 384 426 346 422 337 456 458 425 406 438 436 416 361 362 297 430 294 428 503 395 349 396 418 325 344
 370 380 451 462 435 382 519 448 440 366 281 443  30 461 156 291 511 217 359 437 102 497 491 391 479 455 542 594
 466 407 498 427 499 368 445 213 474 286 199 483 311 378 414 447 471 296 367  58 154 477 515 400 465 513 486 473
 525 444 441 493 476 275 419  66  22 506  16 481 310 459 376 463 512 258 531 112 432 383 570 469 638 379 480 454
 613 537 587 453 530 122 559 269  21   6  23 518 415 472 179 617 365 535  17 111 242 490 523 560 596 572 571 487
 544 543 494 585 601 207 509 142  62 603 204 510 508  25  18 277 524  46 554 392  96 272 588 550 520 532 589 495
 517  14 597  64 576  76 647 332 578 527 178 457 637 386  61 274 548 146 652  47  20 630 460 577 671 580 581 157
 579 210 619 618 569 100  49 129  60 621 522 584 138 150 195 709 650 549 521 164 237   1 128 533 607 608 538 602
  51 628 651 698 662  34 553  40 636 625  65 590 467  24 262 635 645 345 598  42 301  37   2 540 582  45 664 568
 694 148 710 600  11 256 646  50  39   5 547 668 614  38 202 615 340 689 729 212 593 106 575 536 605   3 675  84
 679 387 640 604 641 141 667  54 318 672 175 670 203 674  59 747 616 244 681 300  28 247  43 688   9  53  48 702
 678 170 609 738 701  99 168 180 715  32  93 741 101 158 174 687 778 690 660 649 312 278 611 123  33   4 716  92
 631 726 685 115  97  15 682 314 626  10 253 745 130 187 389 743 696 500 692 239 265 177  67 727 695 182 358  44
 683  19   7 758 706  13 684 139 176 271 232 775 644 144  88 656 746 751 737 324 680  85  70  57 526 192 711 116

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00604e+07us (= 10060.4ms, 10.0604s)
Satisfaction error: 1
Number of search iterations: 2839
Number of local moves: 945 (including on plateau: 325)
Number of local minimum: 246 (including on plateau: 31)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 744 765 80 770 759 402 772 676 766 529 592 313 610 322 416 291 471 258 17 392 20 1 2 536 9 4 358 116 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 310 140 425 164 406 647 323 134 581 777  88 467 763 231 120 118 101 757 656 776  70 770  22 692 108 755 328 261
 180 769 151 495  74 617 385 589 651 712 743  81 278 680 193 383 132 115 488 154  84 730 232 448 131 741 246 509
 159 782  23 135 113 577  54 704 643 453 106 196 562 571 189  56 578  92 586 104 298 751 112 455 387 765 760 779
 395 139 569 555  89 528 335 710 312 728 738 122 762 518  52 123 256  99 462 191 737  10 137 354 774 512 116 667
 632 775 195 103  53 321 523 628  34 537 542 671  11 758  69 472 192  50 724 204 747 124 208 128 772 240 494 783
 206 657 249 552  82 732 198 674 685 169  66 251 306 588 483 736 170 282 693 277 102 476 726 590  64 257   6 713
 622 194 234 694 414 496 707 669 157 735 221 635 268 258 239 311 119 429 421 237 373 205  55 551 171 241 566 768
 372  78 100 593 209 250 584 160 652 648 149 390 217 668  58 752 295 175 631 269 514 262 178 734 655 699 213 485
 366 613 315 695 156 371 381 750 773 230 673 245 176 715 530 244 190 307 110 784 356 165 218 531 224 287 181 404
 670  95 188 718 700 484 379 177 697 709 313 273 227 706  68 220 265 148 661 473 219 252 255 629 408 380 359 317
 327 351 147 690 263 274 544 596 611 579 587 430 412 394 260 533 125 705 508 459  61 420 290 297 299 247 111 469
 172  79 506 660 329 320 364 391 439 363 419 599 331 333 305   8 517 434 492 369 479 749 319 468 370 308 403 464
 292 362 377 510 457 767 314 281 339 401 316 612 350 330 301 272 341 283 450 427 549 454  57 619 461 436 285 347
 353 501 184 766 155  44 637 253 358  67 361 309 445 416 398 780 442 388 405 554 423 438 365 541 141 153 746 367
 233 326 665 478 547 460 407 563 378 486 375 280  29 266 608 352 431 337 304 109 296 529 410 440 182 452 560 487
 384 376 489  96 526 538 435 397 392 447 493 226 342 458 238 357 418 409 433 142 336 740 300 291 432 402 334 559
 441 519  12 130 443 386 417 498 212 480 527 708 515 522 279 477 374 259 540 222 215  13 389 400 415 638 641 318
 426 368 507 456 463 422  60 470 242 162   1 574 696 207 595 471 546 437 129 145 499 564 570  93 583 664 466 174
 610 393 745 572 567 585 158 248  49 524 504 505 677 503 322 482 303 166 202 646 550  42 634 179 411   9  59 345
  46 606 633 396 451 343 107 413  28 614  32 598 553  45 532 491 594 603 211  26 449 601 602 150 543 600 683  40
 199 642 580  41 525   2 444   5  63 302 511 428 534  15 539 759 649 687 684 360 625  25 666 346 698 556  18  87
 152 703 500   3 521  83 228 349  73 286 565 536 582   7 644 714 575 474 163 399 561  72 686 465  65 620 689 275
 254 114 771  77 186  62 127 576  75  85 597 167 591 121 675  33 679 624  97 754 516 623 605 568 630 662 645  76
 548 136 748   4 325 475 640 235 615  51 271  47 105 513 535 729 722 502 185 663 592 289  80 229 653  90 382 626
 639 627 214 731 650 210 609 187 201 146 446  48 490  39 558 144 682 688 168 702 481 717 725  31  20  24 520 293
 497 607  19 236 744 616 658 276 348  35 197 338  38 267 742 654 716 678 161 200 672  14 720 284 340  98 764  71
 727  17 733 424 781 294 216  30 701 138 604 618 173 573 739  94 223 203 243 621 143 691 753 133 721  37 324  36
 778  21 711  16 761  86 756  27 681 126 545 636 557 288 719 225 355 659 183 723  43 264 676 344 332 117  91 270

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00601e+07us (= 10060.1ms, 10.0601s)
Satisfaction error: 2
Number of search iterations: 2567
Number of local moves: 966 (including on plateau: 399)
Number of local minimum: 202 (including on plateau: 40)
Number of resets: 1
Number of restarts: 0

Problem in row 2: 180 769 151 495 74 617 385 589 651 712 743 81 278 680 193 383 132 115 488 154 84 730 232 448 131 741 246 509 => the sum is 10991 rather than 10990
Problem in row 11: 327 351 147 690 263 274 544 596 611 579 587 430 412 394 260 533 125 705 508 459 61 420 290 297 299 247 111 469 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 132  31 583  72 776  70  65 569  59 773 676 145  33 638 491  28 763 523 552 715 760  71  32  50 762 105 732 784
 718 768 629  67 567  43 675  69 155 772 724 373 117 633  64  53 180 172 753 754 719 158  57 126 739  96 627 182
 174 226 777 136 512 108 499 765 648 140 782 445  55 656  84  78 112 679 586 219 689 118 202  85 736 778 457 244
  44 151 717 471 135  61 107 707 195 781 593  26  75 598 700 187 125 721 742 634 652 139 650 138 620 209 744  68
 211 274 571 725  91 775 622 672 100 123 101  74 149 747 728 374  98 134 486 194 148 780 282 774 632 407 502 216
 260 128 448 106 104 639 239 756 236 661 431 144 193 752  87 153 225 659 683 579 686 197 722  92 286 591 726 207
 162  88 738 714 665 233 771 644 544 303 709  83  73 712  46 109 159 766 545 143 749 227 147 285 680 150 311 234
 204 693 735 333 641  47 130 395 733 188 185 713 270 555 769 113 161 670 601 262 635 264 177 323 230 261 608  94
 345 330 470 664 761 246 412 224 764 251 299 142 757 503 102 320 127 489 546 660 614 268 164 399 171 191 474 297
 178 265 240 758 215 779 366 231 642 705 350 249 381 603 357 167 375 284 613 119 616 186 727 190 175 288 730 201
 160 473 218 228 666 181 307 168 290 243 556 640 294 355 697 289 770 678 573 356 509 363 287 455 275 199 468 292
 378 304 759 336 309 439 266 589 327 443 329 696 279 354 413 532 325 324 745 461 259 428 359 332 277 124 250 353
 433 296 387 367 257 783 393 636 501 235 203 397 767 371 319 267 331 478 248 281 372 438 314 389 295 405 386 441
 417 338 198 422 442 342 346 293 360 419 410 456 447 321 308 494 377 594 370 380 605 406 189 475 396 362 414 409
 316 528 476 358 326 507 436 626 206 518 392 469 388 526 351  97 394 348 365 116 352 328 453 301 517 391 536 369
 559 315 368 432 411 451 402 481 485 566 488 173 302   2 403 590 492 253 306 278 376 340 537 339 462 347 334 498
 427 361 479 522 464 258 280 535  52 341 385   5 454 379 241 480 525 463 318 425 562 337 408 543 424 497 390 435
 317 554 550 538 131 322 220 466 460 300 122 434 487 291 516 563  36 152 213 541 222 452 484 515 596 558 423 527
 529 568 444  77 418 420  93 426  99 578 576 165 429 520 477 602 437 415  51 625 223  38 692 534 459 398 247 450
 637 493 364 305 252 446 440 263 531 600 179 383 508 217  25 404 588 548 156 103 115 560 530 623 421 542  86 671
 599  58  49 519 137 581 723  66 276 495 183 533 547  41 561 511 496 500 283 597  21 695 521 238 582 549  37 592
 575 514  82 449 310 609  80  39 612 524 344 272 482 146 607 667 539  24 184 587 254  81 658 685 120 669 271 606
 565 472  19 490 504 619 624  15 621 701 643 335 553 208 570 646 557  10  95 430  40 610  17 631 349  20 133 513
 662 647  35 506  48   3 458 312 313   6  34 746 690 221 269 465 585 618 256  89 237 704 645 654 580 731  60 416
 663 694 229  18 577 540 551 401 212  56  22 743 682 111 157 674  27  90 141 706 129 673 572 698   7 684 192 741
 699 630  14 255 668 615 687   1 708  42 604 710 467 176 384 716 681  79  29 702 169 751  76 242  16  63 232 574
 617  54 166 382 595 170 584 343 210  30 657 691 483 200 611 734 750 205  45  23   4 729 688 163  62 720 510 564
   9 737 245 740   8 703 214 298 651 196  13 748 628 154 653 677 755 114 505  11 273 649 400 711 121 655 110  12

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.53064e+06us (= 6530.64ms, 6.53064s)
Wall-clock time (full program): 6.58973e+06us (= 6589.73ms, 6.58973s)
Satisfaction error: 0
Number of search iterations: 1303
Number of local moves: 645 (including on plateau: 255)
Number of local minimum: 84 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  51  36 159 756  92 772  29 323 769 110 752 523 516 774  86 567 109 519  84 202 686 563 146 184 668 601 129 784
  50 124 169 507 742  94  26 231  75 780  70 640 484 783 106 664 194 450 553 164 707  44 654 732 619 189 524 615
 689 755 631 698  99 604  77 353 547 197 632 775 451  89  85 727 165 104  65 183  82 171 195 647 620 496 139 714
  64  49 743 469  34 154 255 564 685 781 723 575 782 137 125 731 190 123 508 722 265  42  73 648 461 260 130 697
 227 417 144 657 107 773 118 128  97  79 630 633 757 188 234 181 151 746 387 638  25 585 281 777 610 753  91 576
 150  76 103 751  54 776 305 710  68 173 762 479 497 152 153  95  48 267  88 677 498 292 778 655 674 736 261 712
 192 135 213 593 143 280 337 331 729 162 235 612 765 187 161 667 211 747 174 439 250 745 340 119 642 700 256 625
 284 236  59 513 295 178  81 645 670 223 767 720 641 180 232 141 269 405 221 167 759 272 158 717 548 376 637 596
 172 395 102 546 293 313 208 520 763 122 673 694 185 219 330 244 168 240 740 713 222 314 270 127 653 560 703 501
 266 551 262 503 205 274 264 212 148 768 319 771 324 372 602 249 207 237 737 209 279 287 397 389 577 320 687 574
 220 296 238 749 333 356 708 215 251 629 613 487 214 247 304 352 258 401 243 241 224 466 425 436 525 624 349 586
 329 203 599 675 406 447 464 715 341 303 315 661 233 204 403 350 343 230 289 342 210 310 431 357 532 701 246 351
 298 407 348 608 440 290 328 649 345 444 321 362 492 225 312 474 779 288 282 433 378 206 326 420 306 454 385 390
 448 388 475 452 365 239 522 354 485 458 381 218 435 322 413 361 325 283 409 396 301 511 253 432 421 430 471 442
 494 477 338 276 412 373 473 438 369 327 515 384 105 393 394 510 371 332 400 517 467 429 408 359 346 402 318 363
 422 565 271 285 470 437 358 252 309 377 449 457 428 383 443 291 423 398 311 424 427 441 335 339 589 360 286 460
 679 317 472 176 521 514 302  23 375 483 502 126 554 445 561 380 392 493  24 410 418 534 404 416 391 216 617 245
 459 370 609 263 382 386 486 480 419 344 355 368  14 582 463 489 490  61 558 578 539   5 636 482 229 155 307 481
 366 583 456 300 526  98 364 100 579 411 572  93 552 681 594 509 367 468  40 581 426 545 455 112 275 226 595 116
 536 491 566 182 499 569 478 134 347 528 108 121  56 557 540 414 571 580 556 149 584 465 512 446 254 177 549  21
 453 131 529 462 415 555 543  71 506 538 500 299 115 541 434 618 724 535  43 101   9 379 628 559 277 257 568 200
 573 542 504 170 616 145  18 623 597 533 336 166 646 656  16 671 518 644 683 488 537  32 741  80 120  13 175 147
 688 719 726  83 614   7 527 374  47 199  10 132 136 550 665 611 626   3 705 587 643 659 744  58  87 191 544  55
 627 660 716  60   8 709 766 273  67  66  52 142 156 680 711 598 476 196 605 678 622 676 316 588  96 163  90 193
 754 570 562 111 693 666 770 179 334 495  62  53 606 706 590  30 634 600 592  57 531 721 259 157   2   4 114 138
 750 738 278  41 733 268 662 739 603  46 133 242  15  38 696  11 682 704 734  12 663 669  37  28 228 505 690  45
 748  31 699  72 758 691 760 658 217 650  17 140 113  27 702  20 607 297 651 684 160 621  63  74 201 530 730  69
   1 728  19  33 735  22 761 695 248 764 186 117 718 672 635  35 692 639 308 198  78   6 725 652  39 591 399 294

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00612e+07us (= 10061.2ms, 10.0612s)
Satisfaction error: 2
Number of search iterations: 2432
Number of local moves: 1026 (including on plateau: 422)
Number of local minimum: 173 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

Problem in column 4: 756 507 698 469 657 751 593 513 546 503 749 675 608 452 276 285 176 263 300 182 462 170 83 60 111 41 72 33 => the sum is 10991 rather than 10990
Problem in column 8: 323 231 353 564 128 710 331 645 520 212 215 715 649 354 438 252 23 480 100 134 71 623 374 273 179 739 658 695 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   8 618   7 135 747  37 745 648  53 654 290 506 755 726 687  10  19 628 102 319 473 705 253  24 682  38 694 426
 147 653 735 752  72 622 273 449 243 188  31  92  48 728 681  88 201 112  33 663  28 662 723 671  42 686 655 712
  89 232   1 731 714  44  11 348 163 715 115 162 736 633  23 552 373 305  46  34 647 711 667 616 704 744 195 679
 158 605  20  41 765 702 231 246 134 478 684  39 753 609 607  26 722 384  63 269  22 664 631 608 375 599 540  15
  32 511 665 740  17 642 318 118   4 178  62 308 523 636  30 446 623 542  66 637  35 586 524 360 713 718 276 680
 131 661 751 677 566  29 177   3  78  86  12 122 640  95 615 635 670 119 531 676 543 567  40 610 584 604 140 629
 546 432 678 547  55 651  27 525 103 336 209 100 502 292 513 596  52 166 617 533 603  14 588 537 564 573  25 606
 489  13 658 701 457 570 156  21   9  64 404 155 495 365 583 577 518 469 423 530   2 431 644 614 482 474 123 563
 280   6 659 560 576 590 361  97 159 224 249  75 483 351 427 144 571 153 638  65 477 526 562 611 534 578 447 587
 463 538 589 386 536 405  77  67 331 229 520 212 462  45 408 406 338 544 124 510 621 548 425 458 600 388 378 382
 598 391 514 471 460 558 127 472 380  16   5 237 556  18 522 467 528  56 516 434 557 729 435 480 453 368 176 466
 561 111 527 454 486 591 226 396 272 174 517 146 496 279 532 410 369 117 461 585 539 344 519 468 413 428  61 508
 389 313 275 263 493 347 420 490 307 329 376 309 500 164 393 363 529 401 325 310 515 487 521 417 488 565 433 268
 240 498 399 374 507 390 418 350 296 504 359 340 452 343 314 415 264 407 440 475 409 288 484 450 345 439 366 424
 470 422 357 354 438 235 394 277 491 392 397 572 387 455 367 358 494 416 476 278 429 315 332 352 625 258 328 321
 403 448 302 248 298 304 337 334 492 430 327 443 436 379 479 579 355 335 326 312 303 364 421 383 342 412 441 757
 182 251 211 385 451 444 330 286 620 553 301 371 132 781 748 674 741 377 281 370 323 271 287 207 353 181 634 245
 205 322 242 381 274 230 512 700 541 707 619 626 297 294 501 254 685 311 445 411 362 333 265 339 259 236 180 459
 356 675 295 247 252 283 656 300 645 497 250 725 266 582 150 419 255 643 639 196 402 291 197 774  82 116 630 167
 709 505 316 256 244 101 737 776 697 549 535 650 241 284 270 142 215 597 267 759 133 225 261 299  50 106 720 346
 668 698 203 289 306 320 683 673 349 742 222 692 228 739 186 317 206 649 126 175 693 218 190 129 293 200 727  69
 754 260 138  81 214 114 775 666 595 550 724 624 157 395 185 220 227 763 569 204 730 750  58 139 442 171 223 262
 696 130 233 770 282 732 592 400 568 602 672 612 179 104 184 145 152 601 689 154 169 172 782 257 239 219 464 191
 779 632 217  71  76 202 555 194 690 660 509 772 168 581 580 717 170 437 324 210 285 128 208 716 173 149 688  99
 192 151 738 762 771 213 559  98 695 187 703 199 767  59 105 141 743  83 652 198 216 503 613 183 784 107 481  87
 710 627 761 161  85 108 554 551 708 485 734 669  93 372  68 783 110 499 706 160 121  51 238 125  57 780 594  80
 699 193  43  74 778 758 574 756 646 341 398 575 148 545 113 641  96 733 691 777 593  60  73  54 221  84 137 189
  36  94 456  79  70 768 165 749 721 120 766 657  90 136 719 465 764 143 414 746 760  47  49 109  91 769 234 773

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00024e+07us (= 10002.4ms, 10.0024s)
Wall-clock time (full program): 1.00612e+07us (= 10061.2ms, 10.0612s)
Satisfaction error: 2
Number of search iterations: 2266
Number of local moves: 1017 (including on plateau: 387)
Number of local minimum: 157 (including on plateau: 49)
Number of resets: 1
Number of restarts: 0

Problem in row 1: 8 618 7 135 747 37 745 648 53 654 290 506 755 726 687 10 19 628 102 319 473 705 253 24 682 38 694 426 => the sum is 10989 rather than 10990
Problem in row 6: 131 661 751 677 566 29 177 3 78 86 12 122 640 95 615 635 670 119 531 676 543 567 40 610 584 604 140 629 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 285 749  27 622 459 136 282 221 226 767 748 713   7 654 759 754 753 347 238 212 107 246 699  86  90  15 757  31
 188  21  95 601 288 718 181 292  45 149 311 768  75 234 725 776 755 758 135 666  29 207 746 708 747  14  36 722
  18  19   8 102  58 745  97  24 340 105 706 698 714 638 716 648 750 690 255 112 124 656  80 254 682 445 642 664
 164 306   5   1 628 625 426 701 122 133 641 681 598 201 678 702 700  10  30 245 398 692 721 256  37   4 611 674
 110 148 296  43  12 575  87 113 235 679 624 662   3  50 651 600 599 658 585 224 495 583 635  51 684 262 633 693
  83 639 193 327 142  17  89 591 488 647 620 636 594 473 670 537 569 667 200 163 241  68  46 204 584 275 590 637
  98 111  42 230 607 687   6 695  33 556 631 547 151  55 689 310 545 593 557 568 588  23 561 199 630 190 492 596
 627 267 162 321 558 522 159  71  49 587 613 605 158 640 543 603 302 573  35  60  65 489 555 570 524 248 602 482
 571 154  63 253 453 501 167 542 176 472 617 565 180 481 550 546 566 544 576  64 127 270 574 132 623 144 507 572
  39 563 526  62 621 595 552 480 203  13 513 540 452 519 479 509 531 497  78 516 104 333 266 335 517   9 618 520
 533 109 567 268 548 430 494  28 505 484   2 422 468 421 538 471 549 385 476 116 496 371 137 470 487 281 460 474
 514 444 457 536 273 532  72 527 413  16 466 165 454 498 525 503 442 530 464 499 380 222 427 206 521  85 420 399
 381 410  20  22 440 425 406 504 438 432 461 424 467 523 439 145 414 477 485 293 463 449 411 419 402 341 443 456
 367 448 404 405 450 437 392 429 356 428 423 493 491 391 372 475 447 353 369 433 363 408 389 417 354 291  11 394
 435 564 529 348 393 378 308 334 345 416 415 366 357 412 342 331 396 418 379 407 388 358 316 436 323 646 312 338
 318 707 305 649 386 359 373 387 401 365 278 250 606 374 383 643 289 384 370 344 328 324 280 355 343 446 346 397
 395 409 431 672 337 361 390 313 694 290 368 352 377 309 339 277 726 225 243 307 322 500 329 626 351 515 258 274
 326 336 403 553 236 375 319 349 272 304 760 559 303 376 297 332 244 737 279 314 252 597 287 671 382 604 295 228
 320 688 676 577 213 257 265 269 717 299 170 264 263 192 211 298 172 300 579 729 634 330 518 710 259 535 220 325
 360 629 232 720 171 283 778 215 782 196 247 261 362 276 216 294 223 227 764 709 208 783 364 644 147 478 242 179
 260 610 612 486 184 237 780 733 762 214 317 240 551 661 218 284 229 217 271 205 731 301 191 528 189 608 185 186
 586 195 582 168 665  44 712 616 239 510 183  52 462 715 138 198 249 153 663 580 465 705 187 441 182 609 233 458
 743 483 652 645 736 769 653 202 490 434 155 117 286 315 210 251 115 139 143 506 534 129 704 400 173 614 231 161
 703 589 727 677 511 169 655 751 508 131  84 120 209 166  88 101  96  57 711 691 680 554  93 765 178 723 130 123
 738 157 771 766 156 121 469 134 683 150 455 119 735  91  73 152  38 126 106 696 724 673 502 784 728 657  92  94
 560 108 779 685 660 619 562 125 773 774  59 177 194  76  34  74 174 140 734 632 781 578 114 175 752 451  82 118
 756 777 686 197 146  48 775 669 592 697  67  53 732 668  81  77  47  66 650 539 744 100 128  69  61 761 772  32
 512 350 740  54 659  25 541 675 103 742  56 141 741 581  26  99  70 719 615 160 219  41 730  79  40 739 770 763

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.14558e+06us (= 5145.58ms, 5.14558s)
Wall-clock time (full program): 5.20429e+06us (= 5204.29ms, 5.20429s)
Satisfaction error: 0
Number of search iterations: 899
Number of local moves: 691 (including on plateau: 165)
Number of local minimum: 28 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   1 699  46  18 715 568 113 101 302 287  29 522 426 707 147 300 552 750 565 710  84 752  77  28 774 626 318 773
 310 653 273 607 636 215  64  60 493  52 610 398 686 461 547  10  17 729 492 484  85 386 383 681 755 131 766   6
  25 122 776  37 341 258 557  21 487 735  91 591 340 665 734 151  34 714 597 732 100 123 210 620 784 756  32 357
 117 464 106 765 730  79 134  82 183 127 783 742 217 560  31 335  19 516 767 566 283 188 768  65 441 672 662 588
 279 130 262 125 758 237  48 684 712 222 775 121  55 339 166 481 136 778 168 689 580 152 590 770  96 738 754 145
 153 226 195 194 581 312  81  87 311 696 419 731 643 781  33 313 410 679 705 608 223 142 548 150 524 348 721 176
 202 211 205 135 513 567 682 203  69  68 737 545 762 650 170 118 391  93 720 598 504 190 574 458 760 293 255 317
 241  99 280 609 600  61 771 763 235 628 196 198 239 257 104 422 200 230 782 184 673 319 506 777 674 366 285 291
 234 745 289 428 559 271 116   3 702 207 618 259 139  27 238 700 331 368 276 761 615 612 549 346 601 189 533 274
 298 384 321 263 563 204 268 161 250 137 677 275 247 225 272 584 351 701 158 169 265 369 703 640 532 555 694 724
 726 330 174 149 382 216 270 649 740 704 402 242 277 359 529 165 691 192 324 462 229 553 589 290 511 297 320 218
 219 213 757 748 409 769 358 314 212 656 333 395 376 232  38 167 186 543 337 576 424 306 260 499 468 356 373 466
 177 447 455 387 444 294 736 751 299 243 155 288 413 497 352 759 594 496 144 126 227 381 779  44 394 361 269 478
 345 363 390 309 452 483 220 459 364 446 389 445 546 336 208 489 569 128 780 417 400 388 423 486  78 281 354 442
 304 495 375 718 307 344 349 397 370 437  95 418 554 465 221 404 664 494 380 616 154 406 372 350 256 353 431 261
 518 209 454 407 362 521 471 284  80 323 460 476 764 408 433  40 430 582 326 475 490 360 525  86 267 236 463 540
 500  47 412 421 103 627 443 603 214  14 329 449 592 429 623 292 743 365 411 367 508 448 282  35 197 498 550 488
 572 438 385 502 296 436 660 470 744 415 129 558 586 556  62  92 542 160 392 405 453 248 416 328 246 479 112 308
 472 432 713 414 244 523 434 378 655  54 266 551 332 401 624  97 587 514 178 456 537 510  56 146 240 374 295 507
 536  41 482 535 199 403 491 579 427 379 606 605 578 228 334 633  50  53 534 342 527 253  90 163 180 561 544 637
 538 722 611 315 119 570 515 474 564 473 451  76  66 439 501 723  22 457  43  13  20 599 249 338 539 562 595 396
 652 668 528 172 201 602   5 371 577   8 541 148 425 520 634 469 651 526 635  72 440  12 102 632 175  70 583 571
 663 669 206 667  71   7 657 140 467 676 613  63 746 450 619  49  30 231  89  75 477 573 772 512 697 638 124   9
 680 646 647 193 251 191 670 683 159 678 278 252 517 420 617 709  11  39 245  16 254 614  42 322 107 593 625 531
 480 181 711 316 301 706 596 233 327 377  23 693  51 179 719 585 575  74 355 393 604 631 115 530 435 343 110 347
 695 687  45 644 630 111 264 753 224 622 156 303 132 141 671 739 747  57 162 133 505 727 182 749  94  83 105 629
 654  24 164 187 114 717 692 639 157 685 658 642 173  73 688 503 741 485 305  26 708 733 690 286  98  88  58   2
 399 645 728 725 109 698 325 648 666 641 171   4 108 185 675 661 716  36 120 519 621  15 138 659  67 143  59 509

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.64674e+06us (= 9646.74ms, 9.64674s)
Wall-clock time (full program): 9.70556e+06us (= 9705.56ms, 9.70556s)
Satisfaction error: 0
Number of search iterations: 2388
Number of local moves: 1152 (including on plateau: 465)
Number of local minimum: 180 (including on plateau: 45)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  95  84 723 595  38 203  77  64 629  69 773 710 209 562 781 764  16 105 689 745 319  98 772  68 611 483  29 679
 602 748 671  71 100 755 559  11 779  91 561  41 650 664 507 627  81 161 127 763  47  35 502  75 494 545  25 698
 614  46 132 563  13 682 409  42 696  43 694 665 407 782 674 670  33 783 646   1 107  21 625  49 579 784  48 182
 578 294  56  34 165 340 130 204 649  65  99 705 623 699 606 131 170  15 767 550 656 109 754 166 728 737 198 762
 460 266 543 571 118 136 291 180  73 104 308 732 433 702 756 628 134 133 643 715  53 221 673 171 408 584 242 712
 532  94 149 183 253 139 231 205 452 259 769 766 652 683 406 777  55 224 485 647 648 112 477 214 743 635  27 173
 585  54 196 307 162 175 753 249 151 258 726 210 622 703 567 644 746 190  51 250 444 718 568  70 700 555 225 111
 761 269 135 610 120 187 546 230 257  90 724 207 768 515 488 174 276 192 778 164 735 188 641 236 711 653 193 142
 660 222 168 355 267 275 395 274 150 234 731 189 480 701 608 331 200 330 199 739 680 124 371 211 704 775 370 247
 709 213 332 309 313 283 467 296 404 229 306 286 734 471 717 388 256 295 657 260 640 244 630 392 255 443 280 181
 374 669 223 658 233 219 353 583 548 381 352 240 758 411 549 329 284 220 357 215 505 237 582 335 326 430 261 358
 320 366 216 751 303 391 179 302 254 413 325 770 553 342 369 378 334 403 410 305 633 310 341 440 228 697 376 281
 362 317 528 177 394 437 446 436 469 752 264 776 227 299 312 218 279 401 270 333 626 419 554 386 473 327 322 186
 226 399 536 390 383 526  79 293 461 466 499 396 449 360 323 359 432 372 456 493 527 435 375 420 263 278 298 496
 344 380 429 398 458 475 252 382 498 377 478 336 368 509 416 346 445 424 367 431   4 321 472 503 314 524 415 324
 565 520 245 512 439 525 282 448 348 427 459 414 425 462 560 354 441 418 450 397 301 387 285 365 486  23 447   5
 417 535 347 547 246 351 194 304 389 533 544 465 513 288 434 500 350 454 361 402 356 363 412 400 191 273 442 379
 455  10 349 101 451 501 373 564 300 517 405 570  37 384 144 423 514 573 481 491 153 542 289 577 537 311 510 428
 154 492 487   8 557 338 393 484 619  63  67 594 184 248  87 574 631 523 576 495 129 489 337 490 476 530 385 580
 157 518 345 663 662 479 534 596 160 516 468 519  26 167 159 463 506 588 202 522 241 556  89 508  59  17 615 655
  19 607 609 102 675 672 115 292 587 616  57  83 146 238 116 634 504 666 426 598 511 572 141 497 287 128 540 552
 155 637 539  93 668 676  44 604 457 470 422 482  22  50 125 592 687 538 599 575 122 316 328 438  85 108 558 600
 421 725 690 474 551 137 464 603  92 581 176   2 140  86 172  52 693 722 318  14 612 605 206 729  97 315 586 727
 232 597 714 589 651 677 531 593  28 686  60 601 290 156 251 297 678  76  45  20 343 780  12 681  30 138 621 613
 201 617 730 774 566  62 654 642 691 645 143   7 217 197 113  88 706 106 541 103 126 618 169 624 591 235 750  74
 684 569 158 364 708 638 738 688 719 741 272  40 339 110 239 147 208 733  18   9  80 757 271 659 185 119 736  61
 212   3 716 529 747 590 759 760  58 744 163 178 453  78 268  66 636 713  39 114 685 692  31 521 152 195 771 117
  96 740  24 262 749 121 742 661  72 620 145   6 265 123 243  36 695 632  32 639 707 721  82 765 277 148 720 667

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00595e+07us (= 10059.5ms, 10.0595s)
Satisfaction error: 2
Number of search iterations: 3131
Number of local moves: 882 (including on plateau: 419)
Number of local minimum: 288 (including on plateau: 59)
Number of resets: 1
Number of restarts: 0

Problem in column 2: 84 748 46 294 266 94 54 269 222 213 669 366 317 399 380 520 535 10 492 518 607 637 725 597 617 569 3 740 => the sum is 10991 rather than 10990
Problem in column 23: 772 502 625 754 673 477 568 641 371 630 582 341 554 375 472 285 412 289 337 89 141 328 206 12 169 271 31 82 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 756 133  76 490 696 519 718 145 662  96  68  58  90  26 430 271 622 164 154 610 677  83 758 671  20 643 574 780
  44 665 652 192  48 707 749 114 564  54 736 116 101 107 735 139  92 561  71 212 775  61 774 739 607 485 755 135
 571 180 627 184  62 738 742 581 598 727 142 137 604  37 784 699 202  77  88 451 753  89 649 336 104 712  57  59
  93 446 778 752  82 502 771  55 168  78 762 179 710 170 592 191  80 210 379 201 765  73 538 645 766 757 161  86
 723 779 689 217 776 748 474 115 711 659 190  94 314 100 569 525 143 183 234 236 263  87 656 380 225 270 453 177
 260 111 761 764  74 582 646 158 618  40 728 134 557  51 524 207 532 602  75 347 777 333 409 745  32 595 162 166
 208 650 109 144 282 470 664 317 393 176 178  85 760 209 565 773 238 214 151 249 693 732 654 337 360 219 754 406
 245 264 103 138 309 479 558 781 312 274 721 313 667 240 701 733 159 729 227 195 310 291 626 726 246 252  97 294
 356 157 193 265 248 509 599 772 422 136 389  56 704 349 741 692 355 169 283 438 534 280 750 290 369 318 206 410
 204 511 200 244 146 587 570 674 242 783 175 706 322 267 289 678 268 305 782 266 612 278 499 344 325 262 174 277
 332 286 631 366 301 402 542 220 292 371 354 445 498 483 324 287 462 237 491 399 488 377 484 329 293 281 272 743
 331 250 713 231 330 421 481 302 507 213 340 686 285 744 370 296 385 633 196 276 284 297 531 416 457 229 395 391
 384 717 450 364 510 328 768 512 160 308 351 469 348 335 367 315 233 215 346 456 257 381 546 415 373 505 390 187
 299 465 375 506 320 398 261 224 486 273 458 316 414 211 396 368 548 403 527 345 288 522 536 449 492 253 298 559
 585 383 475 647 443  95 321 431 394 319 480 255 338 440 435 343 482 442 295 537 497 423 254 163 463 401 342 307
 326 363 596 405 408 580 119 306 452 359 466 357 433 563 426 419 500 464 476  66 372 448 388  36 471 400 544 247
 374 624 573 496 327 182 350 413  38 552 577 432 549 223 455 222 188 529 468 102 185 597 341 473 304 386 487 543
 420 417 459 397 434 530  33 241 232 392 545 424 387 428 150 436 513  53 353 478 467 407 378 437 382 669 412 516
 550 441 339  65 639 199 230 472 460 165 591 501 427 352  35 568 477 362  34 269 365 634 258 503 535 555 444 520
 504 323 514   8 518 256 155 110 149 533 666 526 641 553 148 141 593 358 539 132 625 554  16 121 429 642 617 619
 658  18 576 616 613  39 129 601 303 425 489 724 521 606  22  24 614  64 572  79 311 673 118  98 495 494 493 615
 411 551 300 590 628 216  28 404 579  25  46 670 567 376  50 221 636 523 635 700 128  10 251 740 556 611  23 515
 454 517 235 621 600 259 147 279  27 648  11 668 167 681  63  72 528  14 588 609 198 691 127 638 746 694 125 583
 508 644  13 690  60 194 439 657  69 594 603 334  81 770  30 189 637 676 672 715 122 684  67   1 629 153 747  12
 702  42 239 112 722 584 140 653  91 737  17 541 105 685 687 197 586 608 708 540  21 688 123 131   5  41 725 560
 562 575   2 651 769 228  70 547 703 767  49 620 120 623 275 578   9 698 171 632  19  45  99 714 695   3 106 660
 124 361 181 709  15 186  43 680 697 720 218 461 108 682 675 751 705 763 759 719  31 663   4  29   7  47 447 205
   6 117 130 126 630  52 243 226 661 566 640 683 172 679 152 655 203 734 716 731 173 589 156  84 605 113 730 418

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00601e+07us (= 10060.1ms, 10.0601s)
Satisfaction error: 2
Number of search iterations: 2660
Number of local moves: 1067 (including on plateau: 408)
Number of local minimum: 217 (including on plateau: 51)
Number of resets: 1
Number of restarts: 0

Problem in column 3: 76 652 627 778 689 761 109 103 193 200 631 713 450 375 475 596 573 459 339 514 576 300 235 13 239 2 181 130 => the sum is 10989 rather than 10990
Problem in column 25: 20 607 104 766 225 32 360 246 369 325 293 457 373 492 463 471 304 382 535 429 495 556 746 629 5 695 7 605 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 751 330 766  60  47 698 480 623 600 144  91 127  99 449 723 783  82  43 711  89 508  83 428 641 753  23 754 104
  32  26 637 685 599 689  39 609 627 429  27 275  50  20 757 554  29 738  45  33 704 115 747 546 781  68 755 374
  70 413 735 128 567 535  38  90 692 621  66 718 196 171 479 126  77  81 690 256 721 191 760 102 771 775 764 157
 228 712 606  35 169 220  49 673 732 773 465 748 389 462 483 318  97 139 703  85 656  73 717 758 186 176 131 207
 146 611 629 123 267 229 749 739 143 635 158 645 510 324 780 488 114  44 585  80 581  76 756 181 184  75 364 774
  92 447 119 227 177 590 204 730 668 598 752 625 288 573 652 154 120 290 235 200 727 232 576 316 293 240 332 533
 193 331 241 502 284 761 763 736 168 779 283 706 167 482 784 243  52 142 446  31 572 699 273 292 138 148 208 566
 152 770 136 280  58 697 257 237 741 776 260 489 264 616 329 383 524  95 271 185 768 369 518 694 245  69 212 595
 388 343 661 174 444 565 170 272 647 705 481 564 238 189 147 172 351 109 251 759 610 258 467 589 341 162 164 769
 210 677 195 639 252 137 203 259 387 277 173 439 242 714 230 346 348 477 729 743 562 431 782 299 198 239 253 549
 400 722 291 213 254 367 214 224 165 371 578 356 709 503 285 249 219 767 365 309 528 303 724 308 278 312 298 678
 434 674 215 337 216 150 307 197 327 408 244 622 702 376 313 301 701 636 416 360 653 423 370 473 263 319 233 320
 354 311 222 304 614 435 412 472 746 605 402 424 515 325 396 386 404 355 336 159 532 156 248 529 335 345 315 353
 344 450 399 509 350 485 539 377 584 579 352 361 236 486 295 403 286 326 407 358 217 506 133 512 323 523 468 182
 457 624 406 287 282 491 338 381 279 398 218 390 411 281 617 453 438 368 265 321 558 470 500 289 347 415 357 349
 270 487 297 507 494 499 269 385 628 410 276 192 103 448 322 166 445 522 379 394 296 430 333 527 414 476 531 490
 274  98 492 451 380 268 505 478 514  36 392  94 432 234 571 442 140 550 425 534 463 443 538 551 630 384 536 135
 469 199 419 559 498 433 471 436 302 456  74 575 454  71 420 587 493 231 359 409 223 466 455 328 421 440 601 141
 526  40 586 417 378 513 461 580 542 155 540 175 426 202 474 121 552 517 149 521  88 596 122 458 688 658 342 163
 401 180 427 666 602 464 530 397  12 111 306 310 129  96  59 654 657 669 437 613 161 663 100 460 548 547 612 179
 496  61 680 452 504 556 676  15 130  86 393 340 441 459 516 118 262 693 553 594  10 525 225  13 679 603 544 366
 545 247  84 484 696  37   2 651  42 597 475 667 294 372  16 106 582 726 363 563 125 405 206 664 561 588 497 395
 577 317 574 644 591  14 520 592 221  48 659 422 569 537 631 116 495   4 634 662  46 519 134 112  30 560 675  87
 568 209   5 511 362  65 744  41 101 211 646 108 391 226  28 418 650 608 618 543 188 632  72 261 719 683 740 642
 695  21 728 373 570  78 649  17 583  67 626 557 665 620 132 682 716 708 555 107  11 541 145  93  63 640  34 314
 593 246 382 638 648 691 660  62 117 250 643  18 684 300 151 737 633  56  53 615 190 687 201 153  64 765  22 731
 655 772  55 178   6  57 733 604 183 305 700  24 671 734  25 707 778 334   1 742 187  79 205 501 686 750 194 124
 670 672   3 607 681 266   8 113 110 160 710  19 715 720 375 777 745 762   9 725 105 619 255 339  51   7  54 713

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00585e+07us (= 10058.5ms, 10.0585s)
Satisfaction error: 2
Number of search iterations: 2874
Number of local moves: 1042 (including on plateau: 506)
Number of local minimum: 215 (including on plateau: 54)
Number of resets: 1
Number of restarts: 0

Problem in column 9: 600 627 692 732 143 668 168 741 647 387 165 327 746 584 279 628 514 302 542 12 130 42 221 101 583 117 183 110 => the sum is 10991 rather than 10990
Problem in column 24: 641 546 102 758 181 316 292 694 589 299 308 473 529 512 289 527 551 328 458 460 13 664 112 261 93 153 501 339 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 658 179 115  74 117  24 751 682  37 703 495 301 706 723 758 722 746 687 713 747  32 113  48  46  25  52 727   9
  35  31 219 643 156 595 675 724  97 693 499 563 191 678  34 284 726 773 760 634 206  38  90 708 674  27  40 197
 690 649  36 110 709 689 681 167 225 424  28  49  64 654 748 244 337 701 456  79  65 105 400 669 683   2 685 641
   4 647  16  47 635  71 137 718 101 590 568 677  62 716 648  55 571 367 544 717 274 253 217 737 650 187 725  56
 121 644 107  21  88 640 490 593 255 289 410 125 736 755 686 618 619 566  93 692 267  82 142  22 663  29 631 606
 374 599  39  53 629 180 615 318 413 613 584 181 539 720 503  69 258 609 398 712  66 231  43 707 406 103 464 564
 637 567  45 691 151 680  13 158 515 670   1 439 607 523 575 112 508 605 426 215 114   7 146 598 740  26 519 702
 688 551 264  33 418 676 528 448 143 543 132  23 588 558 639  89 351 560 667 272  12  96 353 578 742  19 397 622
 581 672 442 230 149 473 660 530 628 510 326  57 574 501 645 232  11 434 335  18 297 545  99 364 695  60 396 526
 517 636 460 476 136 487 488 549 520 177 507   8 496 512 623 140 128 492  10 561 281 287 129 596 479 220 534 541
   3 524 469 525 470 474 491 537 259 354 375 333 548 498 430 416 290 531 199 617  30  76 339 384 447 446 467 458
   5 514 341 422 536 589 435 212  20 468 557  58 465 370 457 521 441 338 478 404 127 257 540 591 471 309 511 553
 547 602 405 377 325 445 527 455 459 352 313 555   6 572 538  14  92 421 324 391 332 345 504 463 484 208 449 485
 349 385 372 312 328 453 376 437 390 516 382 383 408 380 423 436 444 273 433 347 461 358 389 570 387 310 207 481
 300 475 403 178 294 205 454 509 394 452 315 632 280 429 356 489 361 451 346 363 513 425 415 359 497 610 229 256
 366 344 323 483 357 303 577 365 556 308 472 412 432 226 362 532 302 276 269 600 505 431 331 209 236 730 443 240
 298 285 411 234 409 735 311 625 608 275 392 427 319 482 399 314 565 266 587 401 440 417 306 246 139 535 293 271
 522 163 393 546 378 189 227 254 638 462 583 753 153 228 592 307 700 169 620 243 350 502 373 296 334 579 106 330
 626 159 604 778 248 340 322 211 661 729 279 348  86 245 343 288 369 295 518 262 694 562 684  95 286 494 270 194
 195 249 386 381 170 360 696 118 594 162 210 768 292 239 173 756 263 265 582 559 420 542 775 304 213 656 260 402
 224 697 493 172 774 320 204 772 601 157 668 764  85 102 131 576 104 282 321 252 779 630 238 242 164 699 316 223
 371 176 705 611 714 721 679 154 268 299 141 198 355 336 135 580 704 202 329 182 666 597 738 222 111 477 221  98
 734 134 662 261 305 368 216 218 671 247 744 241  78  81 171 731 659 201 235 407 761 664 698 203 108 766 251 175
  63  41 419 759 719 277  70 184 642 160 200 757 291  84 116 612 466  75 124 250 569 762 715 767 233 780 144 711
 486  91 781 749 185 317  80 754 148 214 237 763 342 188 165 633 550 192 278 119 776 665 533 130 769 529 155 161
 388  68 777 745 554 186  54  44 166 438 379 123 783  72 138 283  15 133 655 603 673 732 621 651  94 743 750 122
 480 782 657 573 450  73 174 109 585 168 428 500 771  67 152 196  83 784 190 150 627 652 710 147 183 624  61 614
 728 126 646 506 586 120  59 145 395  17 765 552 733  51  50 741 327  42 100 193 653 616 414  87  77 770 739 752

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00609e+07us (= 10060.9ms, 10.0609s)
Satisfaction error: 2
Number of search iterations: 2531
Number of local moves: 1063 (including on plateau: 422)
Number of local minimum: 190 (including on plateau: 51)
Number of resets: 1
Number of restarts: 0

Problem in column 9: 37 97 225 101 255 413 515 143 628 520 259 20 459 390 394 556 608 638 661 594 601 268 671 642 148 166 585 395 => the sum is 10989 rather than 10990
Problem in column 24: 46 708 669 737 22 707 598 578 364 596 384 591 463 570 359 209 246 296 95 304 242 222 203 767 130 651 147 87 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  44 661 774 693  81 571  27 629  12  88 740 618 155 730 735  98 638 171  74 131  95 615 148 776 422 492 709  63
 733  18 784 737 322 124 179 504 109 162 578 671  47 689 711 172  25 567  82 605 687 105  78 127 743 695 379 357
  86 655 782 663 340 239 772 551 150  93 773 584  57 306 257 111 210 596  85  91 746 123  55 438 760 725 234 508
 262 769 240  23 507 289 771 642 548 138 185 524  89 555 763  42  64 401  67 186 742 770  96 731 780 493 139 174
  71 283 781 617 777 120  97 744 122 364 512 783  94 479 634  14 143 657  24 110 749  79 163 775 169 727 221 681
 223 271 293 606 654 203 238 301 694 692 204 761  83 753 268 102 116 225 226 168 193 297 233 779 212 672 757 766
 146 215 145 703 603 270 768 656 128 265 367 691 323 677 159  46 101 698 242 140 175 708  60 572 575 633 214 710
 134 335 245 716 748 107 235 754 153 250 254 612 318 659 241 142 299 678 249  66 739 202 272 570 573 628 383 428
 196 132 119 764 104 228 209 302 758 366 246 755 218 236 201 187 308 728 434 752 345 224 190 370 635 682 685 616
 213 160 288 598 690 436 538 292 290 232 403 258 211 472 660 256 115 365 673 767 325 275 125 328 619 358 331 712
 285 267 151 522 720 189 336 437 724 281 762 298 419 332 200 778 466 342 191 161 137 251 481 165 194 532 650 719
 164 136 294 632 736 247 369 279 721 586 278 714 295 593 462 319 314 371 260 261 208 231 429 503 207 713 338 330
 372 478 284 609 418 248 450 443 408 347 421 423 177 219 397 310 337 352 457 253 392 349 734 315 445 453 359 540
 473 625 410 264 356 385 483 477 266 400 373 350 296 495 307 305 402 344 173 520 518 409 505 380 286 395 440 353
 480 458 471 501 361 311 243 303 269 502 351 320 346 339 277 592 386 631 431 354 259 313 415 287 455 553 378 404
 348  49 460 381 133 389 368 441 393 112 447 488 565 255 542 510 562 541 263 535 485 511 446 469 334  15 449 499
 468 470 413 216 513 448 454 398 647 420 506 604 411 117 608 474   9 486 487 312 390 426 252 424  51 291 514 181
 498 435 382 377 543 489 363 529 399 326 407 396 528 113 391 484 444  75 482 451 546 559 427  48 317 388 417 176
 624 539 425 184 170 637 324  90 701  76 452 227 496 636 549 430 376   4 432 439 557 622 405 394 433  52 406 309
 683 509 387 126 517 621 497 375 374 519   2 188 601 531 561 533 442  77 585  59  58 456 516 321 362 167 360 563
 597 467 587 217 500 574 525  35  22 583 491  20 641  53 412 594 652 490 523 461 135 552 534 182 554  28 521  40
 526 667 649 129  32 545 588   3 537 599 465 178 611 149 653 494 684  72 602 569 662 195 595  50  84   8 530 114
 577 147 726  68  73   7 718 613 560 664 623  33 464  10  34 459 676 103 630 576 476 705 639 205 130 341 206 527
 645 580  61  37  36 751 475 237 329 333 668  54 620  43 536 670 463 627 515 591 666   1 581 550 199 273 343 106
 696  69 675 414 280 564   5 157 156 558  17  16 759 304 121 697 610 355 732 626 316 640 544  30 715 118 658 158
 729 700  80  87 220 582 665  62 644 765  70 183 722 108  92 707 750 197 669 686  31 688 648 566  13  29  99 198
 679 327  39 100 274 699 141 556 600 589  11  19 738 590  65 723 747 607 646 416 192  41 745  56 702 300 244 144
  38 568  45   6 282 717 152 180 276 680 384 222 706 547 154 741 651 230 756 704 166 643 674 579  21 229  26 614

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00539e+07us (= 10053.9ms, 10.0539s)
Satisfaction error: 2
Number of search iterations: 2309
Number of local moves: 811 (including on plateau: 238)
Number of local minimum: 179 (including on plateau: 34)
Number of resets: 1
Number of restarts: 0

Problem in row 19: 624 539 425 184 170 637 324 90 701 76 452 227 496 636 549 430 376 4 432 439 557 622 405 394 433 52 406 309 => the sum is 10989 rather than 10990
Problem in row 28: 38 568 45 6 282 717 152 180 276 680 384 222 706 547 154 741 651 230 756 704 166 643 674 579 21 229 26 614 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 189 712 651 178  32 581 152 777  81  66  38 684 751 179  65 584 770 500 187 767  77 498 130 548 747 604  27 415
  99 357 675  87 165 123 218 159 608 354 104 605 773  36 142 522 781  57 215  59  83 467 547 731 745 713 782 783
  40 647 583 126  84 129 395 737 549 763  91 764 761 239  92 273 116 112 688 541 117 303 687 150 740 593 110 560
  19 672 674 775 167 217 128 587 501 624  50 708 671  46  74 355 293 706 704 161  76 493 180 127 753 309 172 748
 111 686 762 173 714 205 144 247 359 426  63 710 114 717  95 734 691 281 718 164  96 484 659 390 194 199 226 628
 103 727 538 256 190 757 200 694 597 603 145 693  97 203 195 715 571 177 291 133 162 645 766 302 490 149 143 448
 146 537 586 385 208 132 758 285 171 638 106 238 135 412 280 738 290 299 665 403 202 749 641 611 182 553 166 474
 752 612 514 690 105 337  73 367 722 677 176 542 254 265 158 181 283 332 251 331 455 524 632 333 311 191 319 602
 220 614 536 269 286 308 156 147 779 729 240 213 121 469 248 736 206 198 223 346 596 263 680 298 278 755 292 784
 219 518 458 334 209 100 183 589 397 435 639 569 141 723 138 271 266 609 780 233 246 300 565 210 742 204 380 532
 108 466 481 316 361 315 327 253 642 594 772 274 163 222 250 364 342 732 349 679 125 533 358 408 260 229 570 497
 237 482 387 345 320 118 196 305 369 640 477 451 771 434 379 225 255 243 328 590 552 566 428 282 375 376 329 530
 241 504 621 430 366 235 393 324 453 304 384 336 289 348 461 459 447 313 707 272 389 322 489 392 578 258 416 259
 372 513 353 362 245 312 257 383 472 531 264 276 409 410 297 670 318 323 402 511 381 382 519 360 433 443 418 374
 301 279 261 268 563 431 307 310 411 413 436 388 445 344 351 391 452 420 506 343 314 476 365 528 368 582 470 267
 457 221  93 429 211 559 193 317 487 438  14 377 340 551 600 419 427 650 462 363 508  75 432 450 507 479 446 485
 520 601 321 341 371 405 400 174 539 468 478 449 491   2 444 562 421 557  31 441 424  51 306 546 480 407 465 295
 414 124 119 535 512 517 406 347  34 288 352 439 373 523 575 510 330  44 598 556 350  79 423 653 398 572 644 275
 456 231 378 475 610 473 617 404 579  13 676  29 564 120 655 499 631 496 555 214 244  71 606 153 488 207 509  37
 442 137 529 527 561 585 417 505  47  94 492 471 622 627 629  78 607 515 483  30 287 109 232 151 545 646 386 236
 595 212 326 454 623 636 588   9  22 338 576  28 656 464 394 554 525 401 425 591 422 168  68 495 502  23 661 234
 720 230  88 673 534 657  11 685 185 227 703 625 637 568 399  35 613 186  56 294 643 224 201 711  62  80 618 325
 689 139  45 635 494  54 778 463  17 396 526 654 658 136 580 102  43 503  72  64 681  82 440 709 277 746 668 339
 699  41 262  26 616 486 743 516 577 460 716  86   6 662 774 101 543 664  61 592 768 356 228  58 115 242 540  52
 648 175 160  69 652 620 700   5 599 155 284 107 697 719 733  53  67 619 754 726 663 667 184  21  16 696   4 197
 698 170  20 626 705 669 725 113 216  98 721 192  25 148 666 695  33 750 335 558 660 683 122 634  85   3 550  90
 735 134 521 573 649 270 769 744 567 169 702  70   8 682 701  24 630   7  89 252 739 728  60 724 131 157   1 154
 760 249  48 633 437 759 756 544  10  49 765  12  18 741 615 140  39 296  55 776 730 692  42  15 188 574 678 370

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00598e+07us (= 10059.8ms, 10.0598s)
Satisfaction error: 2
Number of search iterations: 3224
Number of local moves: 1011 (including on plateau: 321)
Number of local minimum: 291 (including on plateau: 37)
Number of resets: 2
Number of restarts: 0

Problem in row 8: 752 612 514 690 105 337 73 367 722 677 176 542 254 265 158 181 283 332 251 331 455 524 632 333 311 191 319 602 => the sum is 10989 rather than 10990
Problem in row 28: 760 249 48 633 437 759 756 544 10 49 765 12 18 741 615 140 39 296 55 776 730 692 42 15 188 574 678 370 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 581  38 181 610 658  28 782 753 557 740 138 593 116 760 746  21  25  90  60 522 620 451  54 650 649 400  62 105
  65 781 743 208 109 243 652  70 750 128  47 768  69 682 611  72  55 495 124 534 715 459 156 176 755 114 736 673
 141  49 659 731 104 640 515 735 758 671 130 406  71 139 398  81  75 417 583 603 521 698  58 524 192 780 196 115
 709  76 711 438  83 544 756  84 602 163 146 767 184 566 712 103 127 256 122 779 627  91  53  66 729 619 764 113
  93 108 719 703 774 599 131 129 678 169 214 631  89 683 198 227  94 182 528 541 772 132 647 716 212 777 121 123
  96  64 681 783 171 770 225 335 178 252 142 562 117 725 187 161 263 575 336 632 732 118 605 749 179 170 728 454
  73 119 315 752 339 707 255 106 570 655 297 668 218 321 374 294 230 754 308 645 545 183 177 147 761 155 722 300
 135 357 706 237  86 651 223 784 648 207 191 502 168 724 295 148 317 684 165 657 634 200 194 144 751 301 727 154
 164 238 469 737 153 510 267 494 773 174 158 663 775 240 206 180 248 654 172 687 776 160 708 384 197 244 231 328
 276 349 499 258 447 473 202 624 265 739 185 272 309 607 364 277 228 689 283 604 385 323 695 569 291 306 189 282
 215 355 509 428 201 589 220 266 312 195 778 608 314 311 288 334 293 748 367 590 423 342 254 609 303 175 362 601
 379 418 269 441 287 437 440 426 216 463 766 298 307 199 271 513 444 337 329 568 284 347 738 496 395 344 325 253
 358 219 373 239 205 488 422 338 388 261 233 360 490 376 390 330 531 433 363 484 538 257 713 416 457 348 259 721
 322 318 345 245 771 262 316 552 319 292 383 421 486 375 242 452 497 453 407 516 389 304 380 368 387 305 405 478
 476 286 455 371 446 361 378 193 466 359 366 468 320 412 523 425 427 264 350 556 501 403 346 279 290 430 404 435
 491 391 285 354 203 381 343 340 289 397   6 558 188 458 642 576 483 542 470 408 394 274 402 333 456 415 487 424
 475  22 204 399 633 547 365 210 401 493 449 587 540 432 546 436   7 270 442 278 246  35 580 331 548 517 525 472
 505 434 260 409 419 506 539 369 420 396 465 229 414 553 577 480 393  41 527 149 429  34 310 467 481 500 533 151
 526 675 281 370 582 213 356 439 579 479 519 474 443 543 586 351 537 140  11  77 102 637 445 217 551  52 564 241
 666 572 232 498 485  39 386 464  12 600 613  92 726 514 410 450 532 125 661 211   2 503 555  67  14 511 477 573
 638 596  50 507 669 145 639  43 561 518 492  68 549 563 536 567 606 162 679  20  30 643 489 377 159 126  97 461
 462 565 592 644 646  98  95 236 251 733 584 341 595  45 504 559 615 352 763  80 133  87 482 598  59 588 209  74
 626 529 431  63 530 302 699 597 372  78 585 224 635 110  88 622 574 280 757  18  23 762  27 222 471 744 173 448
 688 618 136 107  32 460 614 234 235 696 662  13 621  85 616 594 718 273  19  33  56 686 382  17 623 628 636 508
 656 705 101  40 554 313 550 664  82  99 685  48 723  37 571 697 591 186 677 247  15 672  10 520 166 641  46 694
 630 670 411 111 667  36 612 625 137 730 324  26 653 150   1 676 629 167 512 296 332 665 578 157 143  24 702 326
 535 693 152  57  44 617   5 134 120 299 742 327 190 112   8 704 710 701 275  29 413 759 392 717 691 734  61 769
   9 745 221 250 692  31   3 747  51   4 690  16 680 268 100 660 741 720 700 226 353 765 560 674  79  42 249 714

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00599e+07us (= 10059.9ms, 10.0599s)
Satisfaction error: 2
Number of search iterations: 2316
Number of local moves: 1044 (including on plateau: 389)
Number of local minimum: 169 (including on plateau: 49)
Number of resets: 1
Number of restarts: 0

Problem in column 8: 753 70 735 84 129 335 106 784 494 624 266 426 338 552 193 340 210 369 439 464 43 236 597 234 664 625 134 747 => the sum is 10991 rather than 10990
Problem in column 25: 649 755 192 729 212 179 761 751 197 291 303 395 457 387 290 456 548 481 551 14 159 59 471 623 166 143 691 79 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  44 466 538 777 756 126 108 119 748 745 121  24 120 728 112 652 131 177 360  90 725 775 642 763 453  99  64 527
 158 552 539 349  59 752 569  36 603 638  45  33 770 599 189 372 111  72 530 136 633 137 730 701 128  40 750 759
 749 517 492 547 783 186  87 156 705 140 692 576 768 114  29 159 116  91  60  55 723  89 769 684 741 764  73 125
 388 780 656 754  68  39  93  35 683 767  66  32 753 658 205 715 201  47 340 146 617  37 779  61 664  57 743 606
 244 772 776 693 669 161 242 264 649 746  30 226 595 124  58  92  75 151 423 202 719 150 717 680 556  46 168 762
 312 637 765 531 751 209 724 123 468 676 107 220 129 130 371 667 401 266  84 184 521 298 368 179 197 231 712 729
 144 650 654 636 133 196 687  56 458 731 166 778 296 710 275 766  50 206 358 562 525  86 598 145 561 138 207 218
 253 706 142 689  95 176 782 674 570 737 252 267 240 153 413 501 248 163 670  63 760 165 564 211 223 321 309 643
 239 758 479 496  67 228 216 289 495 694 174 234 172 152 247 484 232 192 739 771 536  62 510 735 555 272 229 733
 384 615 380 271 328 367 110 761 596 592 278 103 259 327 246 167 245 529 774 222 195 332 594 646 385 432 285 567
 351 336 324 535 618 241 307 155 575 477 784 100 286 230 208 620 446 744 169 366 191 193 755 362 148 557 597 315
 314 262 350 462 363 451 323 757 579 333 345 695 157 331 237 346 355 320 540 467 282 329 425 203 736 515 280 233
 212 270 373 235 308 418 421 773 438 243 306 503 403 369 436 516 411 256 347 295 734 378 475 381 330 483 317 359
 392 437 402 322 274 221 520 269 429 261 305 485 335 273 188 476 537 461 447 251 512 394 407 448 625 474 341 504
 104 434 337 442 383 465 528 508 444 409 319 412 435 255 260 571 370 268 143 486 390 513 356 415 523 398 511 311
 607 154 377 250 586 325 543 459 400 534 304 419 374 624 387 139 566 361  53 420 180 445 297 326 382 490 524 464
 499  16 612 342 469 431 591 470 118 428 339 391 506 426 560 414  17 541 105 397 559 609 236 545 450 303 102 514
  70 225 449 292 473 460 379 440 113 344 455 526 518 593 587 487 404 454 416 502   2 582 249 614 472 395 480   9
 500 478 548 389 491 354  97 439 316 386 376 430 627 635 481 210 457 546 630 494 405   8 352 299 276  54 364 348
 550 509  96 318 532 666 353 551 393 254 605 396 498 588 343 590 542 519 258 215  18 493 217  48  22 600 406 410
 622  65 115 288 489 648 584 194 277 301 452 190 171 533 740 132 708 441  34 696 162 641 182 574  25 699 619 408
 433 199 399 173  52 424  51 573 160  27 639 488 610 198 563 227 626 631 463 690  76 549  98 577 616 738 709   1
 721 109  23 284 427   4 668 653 213  21 698 655 602  85 507 224 679 720 293 522 568 283  20 497  81 714 544 175
 422 558 265 200   3 678 645 613 122  82 747 417  78 456 629  28 565 621 672 604 204 665 117  12 583 581 135 287
 703  74 127 338 644 732 585 471 170  15 263 682 553 632 660 611 580 572 482 716 106 704  38  43 290  41  79  80
 686 300  11 149 505 673 294 443 257 141 623 713  31 187 675  69 554 281 628 697  71 700 365 601 279 238 742  77
 711  10 183 134 657 671 302 375   6 185 718 310 691 291 677 147 702 634 313 727 357 651  42  26 640 647  19 164
 178 101 578  94   7 688 181 334   5  83 781 685  13 589 707 608 661 726 659  14 219 722  88 214  49 663 681 662

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00618e+07us (= 10061.8ms, 10.0618s)
Satisfaction error: 2
Number of search iterations: 2289
Number of local moves: 887 (including on plateau: 265)
Number of local minimum: 150 (including on plateau: 25)
Number of resets: 1
Number of restarts: 0

Problem in row 24: 422 558 265 200 3 678 645 613 122 82 747 417 78 456 629 28 565 621 672 604 204 665 117 12 583 581 135 287 => the sum is 10989 rather than 10990
Problem in row 25: 703 74 127 338 644 732 585 471 170 15 263 682 553 632 660 611 580 572 482 716 106 704 38 43 290 41 79 80 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 427 608  73 685 753  71 477 360  57 162 780  32 592 307 165  54 688 749 784 643  76 764 564  37 194 586 106 196
 190  15  61 750 171 782 388 416 733  65 364 425 664 607 195  27 634 649 174 103 183  92 737  74 612 603 497 779
 114 761 783 763 726 279  89 720 142  29 116 143 115 781  67 730 517 614 251  24 679 515 596  26 219 535 144 512
 555 773 134 695 756  77 136 651 703  42 755  81 668 109 498 293 239 759 158 119 671 334 658 155 731  72  86  82
 100 686  60 565 492 424 744 716 166 659 228 387 157  69 415 353 728  11 153 554 662 543 318 768 172 422 229 209
 741 677 778 627 252 489 147 657  58 149 776 355 151  98 240 130 663 520 120 647 682 772 390  90 200  28 284 269
 237  64  88 549 610 129 767 644 386 639 421 476 774 436 236 108 212 179 615 670 712 587 551 187  49 161 245 258
 271 486 262 569 701 226 235 409 361 333 661 305 320 105 725 152 548 739  56 631 546 467 605 170 309 285  10 503
 211 736 224 629 613 202 138 689 419 604 176 654 495  79  70 184 164 672 656 510 588 697 553  52  66 291 338 280
 227 580 274 530 748 111  47 185 337 777 168 223 648 261 389 266 540 192 751 487 632 683 454 270 281 342 277 310
 440 432 339 494 292 197 367 593 298 628  19 356 250 255 341 306 249 754 328 706 289 650 673 178 584   6 313 653
 411 484 346 351 290 642 344 370 394 117 397 400 625 263 357 380 545 217  85 617 573 521 527 216 590 273 399 257
 740 500 446 501 383 159 232 301 443 439 349 533 336 316 359  33 478 371 169 413 379 418 410 655 331 762 259 275
 435 314 213 539 319 522 457 568 345 321 765 402 326 324 322 396 504 447 426 557 264 532 508 468  94 199 414   9
 511 362 366 352 453 452 417 218 473  45 253 469 442 286 391 180 382 403 462 300 775 335 509 420 460 238 760 276
 343 694 474 214 507 560 428 575 464 354 296 463 558 182 437 350 423 297 241 233 315 518 308 378 574 260 110 434
 465 265 373  25 348 278 538  68 719 395 516 220 449 496 246 581 448 330 385 742 472 299 288 430 567 665   1 381
 429 247 595  17 561 490 611 347 377 376 332 268 475 691 393 312 404   2 450 177 412 121 193 483 458 470 700 599
 294 317 374 295 455 606 329 231  38 124 570 563 542 519 491 660 363 619 407  21 401 272 244 485 528 384 466 392
 635 722 444 145  50 621 208 160  55 132 488 602 125 513 398 729 282 340 541  20 534 156 198 630 451 600 640 571
 304 243 666 283 582 529 481  23 526 154 710 579 248 674 189 445 118  16 499 210 369 123 230 624 692 456 461 556
 459 163 544  59 137 524 441  96 559 577 368 167 302 637 523 572 531 547 505  12 206 358 327 597 550 482 146 601
 681  51 721  36  99 769 311  31  43 675 715 578  35 636 680 727 126  84 221 690  40  22 408  34 717 566 684 609
 525 140 173 141  18 112 537 493 620 771 646 591 303 431 594 583  97 101 711 766  39  48 113 757 191 713 714  62
 287  63 708 325 139 502 616 207 131 652  78 702 186 102 745 645 471 438 626 480  93  83 150 667   4 406 746 738
 641 128  80  91 104   7 676 598 709 267  30 205 552 696 705 562 254 323 678  44 181 215 203 669 622 585 732 433
  95 372 687 127 175 724 707  75 735 734   5  53  14 752 618 514 148 576 133 479  13 242  87 723 698 225 536 743
 222 107 704 633 256 506 122 589 699 770   8 758 638 365 201 718 234  41 405 135 204 623 188 747  46 375 693   3

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00601e+07us (= 10060.1ms, 10.0601s)
Satisfaction error: 2
Number of search iterations: 2325
Number of local moves: 1098 (including on plateau: 465)
Number of local minimum: 175 (including on plateau: 55)
Number of resets: 1
Number of restarts: 0

Problem in row 12: 411 484 346 351 290 642 344 370 394 117 397 400 625 263 357 380 545 217 85 617 573 521 527 216 590 273 399 257 => the sum is 10991 rather than 10990
Problem in row 23: 681 51 721 36 99 769 311 31 43 675 715 578 35 636 680 727 126 84 221 690 40 22 408 34 717 566 684 609 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 774 629 686 754 753 598 645 579  94  71  81 208 130  54  58 781 228  40 772  59 109 624 474  87 779  29 124 770
 530 777 164  52 764 726 773 758  78 771 187 569 743  83 135 744 535  50 143 107 378 291 104  48 769  77 476 158
 432 218 651 122 723 747 750 746 528  53  75 168 760 123 120  60 756  27 192  37 140 111 718 236 763 436 547 751
 565 205 702 725 749 423 767 505  65 196 430 765 481  11  82 281  49 134 133 128  84 680 748  63 623 689 646  61
 590 202 691  88 761 707 604 597 266 220 531 136 740 178 129 262 736  30 117 101 138 161 768 776 126 688 499 148
 728 571 589 108 239 494 599 780 231 170 720 766 713 132 131 422 576 169  42 302 731 171 345 179  47 307 703  25
 733 529 224  96 149 737 427 584 508  99 483 252 198 276 213 277 656 338  55 121 631 775 182 151 211 739 636 710
 611 681 742 162 265 600 573 562 185 175 232 365 110 167 222 268 523 537 293 176 619 661 687 389 142 215 712 116
 303 271 258 263 248 639 522 616 783 139 279 711 755  41 201 305 412 313 152 160 745 632 247 294 317 188 568 628
 370 255 310 267 272 618 582 660 183 730 357 593 278 308 270 289 358 227 351 374 622 260 290 299 362 403 653 449
 304 479 709 439 324 643 694 612 237 411 693 177 212 428 225 515 355 329 336 292 209 243 144 322 318 372 502 466
 235 431 229 251 435 521 463 356 406 477 284 385 172 342 440 692 203 275 259 395 273 296 778 173 759 496 741 223
 409 404 382 396 402 348 393 386 462 285 328 392 424 488 340 512 381 470 433 226 314 261 415 298 784 245 492 320
 282 331 369 373 380 230 194 405 360 334 216 388 326 410 421 451 400 443 500 666 782 408 379 327 420 376 316 503
 399 417 452 511 398 333 335 349 429   8 445 346 468 507 493 264 337 306 217 458 578 309 364 434 438 407 413 575
 464 394 253 555 397 286 221 249 450 457 516 323 546 484 437 125 455 469 210 574 332 383 533 418 363 157 552 387
 460 425 377 269 544 325 257 354 446 401 548 341 540 384 690 288 181 416 577 419 454 453 106 448 461 475  12 339
 238 414 592 525 480  70 250 137 490 644  97 280 519 638 330 467 518  68 426 520  67 538 558 510 465 471 119 559
 482  44   2 550 607 295 319 367 361 556 541 102 514 359 532 567 350 456  17 553 504 375 603 473 472 647 195 147
 513 371  56 495 447  33 180 444  22 554 242  85 501 560 526 498 596 563 610  36 141 150 485 705 581 708 343 545
 527  13 156 594 103  95 186  73 536 662  74 486 256 441 671 654 587 391 679 601   9 478 543 390 459 595  98 633
  79  69  93 714 524 214 344 233 353 561  46 606 497 534 682  35 244 757 491 729 539   6 585 609 557 615 240  34
 118 668 613 588 246 368 163   4 605 724 685 206  91 659 442 657  32 667 572 722 287  38  10 734 366  21  90 614
  80 570 551 489  66 312 241 207 637 146 189 155  16 586 591 715  20 648 608 699 583 677  76 487 153 675 193 620
  19 621 113  23 509   7 100 297 602 717 696 673  64 706 664  45 234 727 678 625 564 655 219 640  15 506 199  72
  28 301 683 721  26 115  86 105 738 674 719 154 190 732 665 684 549 672 630 641 315  62 311 634 166 274   3 112
 200  51  89 184 165 347 283  24 635  57 626 663 542 701 700 114 627 716 762 652 145 650 127 669  31 174 352 704
 517 649 254 676  14 159  39   1 300 698 670 695 204 658 580  18  92 752 735 617 697 642 191 197  43   5 566 321

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.44793e+06us (= 6447.93ms, 6.44793s)
Wall-clock time (full program): 6.50691e+06us (= 6506.91ms, 6.50691s)
Satisfaction error: 0
Number of search iterations: 1587
Number of local moves: 769 (including on plateau: 261)
Number of local minimum: 102 (including on plateau: 38)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 655  39  62 665 128 747 169 783   7 736 565  59 635 722 129 515 258 180 190  64 253 715 560 660  28 775  55 636
  53 514  37 682 132 279 106 768 551 355  68  99 622 701 780 717 757  56 171  71 186 770 152 778  57 164 608 756
 249  88 772 667 741 652 427 781 130 769 688  70 231 526 536 432 109  89 203  54 101 755 263 696 153 174  44 590
 149  25  83 105 575 746 607 692 161 657 677 564 201 547 680 434 621 145  29  72 494 117 447 492 222 466 292 690
  92 730  46 147 676 646 144 644 763 525 142 124 673 539 200 531 357 107 151 753 188 326 202 761 537 224 156 606
 111 163  94 707 559 760 713 748 639 299 598  96 718 208 776 704 215 767 196  67 158 176 228 255  41 241 115 638
 752  61  95 328 584 493 210 484 229 423 395 269 708 556 695 631 113 262 703  91 367 732 271 187 230 236 199 686
 372 267 223 205 729 282 398 141 611 743 352 317 198 740 135 745 633 178 346 192 714 166 245 512 232 302 764 248
 233 214 170  97 183 737 334 744 662 733 356 211 478 319 723 651 114  48 265 742 143 243 613 349 184 417 684 343
 160 449 276 379 316 709 576 251 734 239 385 313 254 571 382 475  74 482 765 411 221 538 507   9 182 728 347 257
 220 354 413 280 544 658 553 177 699 308  81 140 216 654 641 570 127 212 266 154 650 679 293 479 256 400 601 365
 364 451 586 286 720 291 418 270 579 520 324 290 405 521 368 448 470 300 388 189 305 310 322 529 278 373 325 360
 712 337 725 162 456 304 656 338 362 561 336 387  32 341  75 399 250 758  36 240 378 412 480 689 555 311 375 323
 459 463 320 461 363 234 172 380 376 754 383 648 616 369 415 407 522 431 516 344  16 403 284 397 444 409 281 123
 501 401 386 617 331 552 445 359 589 288 371 259 226 503 351 557 252 425 285  79 381 540 315 452 377 472 268 408
 361 396 125 289 580 554 370   8 442 433 502 294 462 329 457 614 419 486  12 237 566 519 530  38 333 508 420 706
 511 460 301 443 437  78 146 535 483 350 534  22 663 330 469 402 392 416 498 453 468 422 464   6 488 428 438 353
 533 504 490 339 542 366 424 297  34 637  82 414 532 298 465 165 485  35 550 711 496 541 242 194 545 450 577  42
 219 572 446 543 524 374 335 569  85  11 467 716 410 391 495  17 499 698 473 563  63 312 118 108 487 455 619 421
 591 513 510 306 121 102 179 518 595  98 340 593 625 295  51  24 710 558 227 454 661 471 277 497 441  30 603 600
 134 406 632 429 126 159 318  13  90  84 609 668 527 476 274 287 195 585 582 669 404 727 309 477 206 358 678 568
 671 491 345 623  86  19 505 116 610 588 500 581 209  52  65 238 599 573 578 766 627 546 225   3 587 275 390 122
 506 604 700 548 592  18 436  77  45 261 596 342 618  43 489  60 620 430 630 702 384  27 605 244 653  66 574 120
 175 264 773 642  23  76 523 100 197  21 634 645 138 273 235 112 749 685 779 672 204  93 517 474 647 774 217 348
 583 731 458   5 207 624 167 150 694 218   2 687 110 246 321 103 691 721  80 626 649  69 675 272 664 674 562   1
 528 597 509 771  73  58 327 137 185  49 670 726  87 389 104 173  14 705 777 435 549 193 782 394 719 303 567 168
 615 683 629 133 602 439 738 148 155 139 307 697 260  47  20 247  10 643 628 739 724 157 314 426 751 296  50 393
 481 213 784 131  40  33 594 762 283 191  26 759 136   4 659 332 735  15 666 440 640  31 750 612 693 681 181 119

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00604e+07us (= 10060.4ms, 10.0604s)
Satisfaction error: 2
Number of search iterations: 3647
Number of local moves: 1169 (including on plateau: 498)
Number of local minimum: 323 (including on plateau: 51)
Number of resets: 2
Number of restarts: 0

Problem in row 26: 528 597 509 771 73 58 327 137 185 49 670 726 87 389 104 173 14 705 777 435 549 193 782 394 719 303 567 168 => the sum is 10989 rather than 10990
Problem in row 28: 481 213 784 131 40 33 594 762 283 191 26 759 136 4 659 332 735 15 666 440 640 31 750 612 693 681 181 119 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 395 207  24  10  16  29 204 751 578 653 182 729 677 654   3 737 714 733  12  27 706 748 115 680   1 705  76 624
  18 373  64 687 128 109 702 249 741 699 130 738 696 695  38 724 742 701 190 136 700 274  60 163 145 698  52 338
  49  20 185 603  26  11 125 258  56 727 694 754 717  22 616 732 713 678  61 639 239 501  84 669 105 323 725 658
   7 593 561 432  54 107 614 248 119 287 103 726 672 660 257 731 693 606  75 137 711 676  71 628  13   9 553 647
 646 618  30 114   8 101 595 217 244 588 642 643 617  39 569 200 630 655 278 157 716 671  31 240 260 589 224 668
  15 581  97 121 179   2  79 547 236 548 629 615 575 635 505 604 621 222 154  41 609 720 336 473  25 665 557 599
 563 608 295 144 133  74   4 227   6 195 502 592 631 637  82 633 649 597  62 636 663  33  63 612 517 549 626 657
 108 568 218  57 623 256 460  17 150 536 605 710 650 570 530 438 582 476 596 577 164 508 138 271  47 450 129 556
 511 580 555 201 390 141 427  23 430 143 288 640 458 418  94 531 205 602 566 382 572 414 165 491 562 565 148 488
 503 576 370 210 391 358 584 180  48  28 518 392 610 651 215 475 522 524 173  78 519 573 161 591 514 386 266 574
 516 538 404 487 533 220 455 521  91 419  32 372 439 506 162 456 497  73 417 535 607 504 371 423 513 472   5 422
 494 448 454  21 459 290 495 452 296 416 598 322 308 526 433 474  87 403 467 232 431 426 357 399 500 493 211 498
 512 394 457 449 409 273 339 468 317 490 509 379 407 486 313  14 435 364 388 361 353 289 413 470 534 443 359 365
 398 283 436 471 451 421 478 368 402 354 376 447 480 345 378 441 401 362 230 298 366 446 360 520 321 444 285 428
 396 420 411 309 764 292 389 350 492 412 383 408 400 346 333 429 397 469 410 406 415 442 297 277 393 384 302 264
 324 377 243 585 385 540 279 374 363 356 334 343 335 326 381 311 483 387 768 440 318 477 484 337 380 315 340 405
 294 634 464 272 510 525 719 209 462 269 229 375 465 267 466 348 293 142 330 276 234 284 479 304 316 542 499 783
 529 265 254 305 213 546 263 532 314 299 571 301 255 463 175 344 541 666 319 281 303 747 552 784 259 310 329 270
 341 328 327 528 515 703 250 253 453 757 268 246 237 238 193 559 445 320 543 331 247 231 551 300 286 707 664 169
 355 181 325 594 186 507 715 620 780 461 172 489 251 252 611 347 221 544 306 778 241 275 583 282 261 171 280 202
 622 149 233 734 123 586 194 752 481 351 167 198 226 160 645 219 203 223 212 349 746 208 722 685 659 312 625 206
 191 131 613 684 228 674 291 545 437 627 773 151 216 178 590  81 367 192 242 102 564 692 601 132 675 262 656  95
 632 718 188 485 644 723  88 767 681 155 434 111 106 691 704  96 126  99 753 688 183 174 425  80 683 158 332  66
 763 152 762 740 690 661  89 670 560 100 189  98 112 199 177 110 124 159 579 662 156 342 730 779 641 127 550  69
 135  90 745 781 755 652 118 600 709 587 147  92 134 689 761 166  93 352 712 739  45 196 749  68 245  40 523  67
 759 197 782 225 648 772 776 168 482 113 527  43 104 187 307  77  35 170 708 667  46  37 769  72 697 735 770 117
 775 777 750 122 771 673 537 554 424  51 774  42  59  65 766 146 116  36 679 539  86  58 558 120 682  83 728  19
 139 184 743 619 758 744 721  70 638 369 214  34 153  85 686 567  55 235 760 496  50  44 765 140 756  53 176 736

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00601e+07us (= 10060.1ms, 10.0601s)
Satisfaction error: 1
Number of search iterations: 2353
Number of local moves: 1044 (including on plateau: 305)
Number of local minimum: 157 (including on plateau: 29)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 624 52 323 13 240 336 33 164 382 173 73 87 14 378 346 335 375 571 757 780 752 291 723 690 781 782 777 139 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 515  60 614  54  92  57  82 170  93 718 756 773  83 146  26 534 506  50 770 192 776 727 713 741 152 775  34 781
 655 753 653  43 131  37 690 233 761 593 121 106  56 129  72 658 705 364 766  81 551 530 613 623  38  91 784 153
  78 149 394 739  85  46 750 521  36 737 774 778 157  74 777 644 668 160 127 494 733 108 645 663  30 449 145  29
 115  35 251 755 757 119 178 584 772 612 225  70 190 118  27 745 764  94 667 171 541 606 751 428 555 627  42 191
 100 126 681  53 758  52 133 688 573 595 693 338  45  65 189 742 154 769 702 639 270 537 703 754 217 198  88 128
 731 456 349 142 183 783  75 549 575 716 641 184 176 187 214 609 659 164 674 177  95 779 540 571 196 114 222 229
 208 665 760 712 123 209 728 664 583 596 250 188 231  47 109 762 570 219 134 686 218 411 604 649 253  32 216 163
 228 256 135 132 202 700 288 722 685 670 247 194 102 182 289 542 643 168 732 296 721 522 578 589 243 679 125 120
 322 275 304 267 637 139 330 531 565 676 147 237 334 227 363 240 315 451 122 634 280 523 780 519 626 666 295 185
 244 427 309 167 365 211  55 719 763 562 274 278 403 261 388 215 433 249 635 582 273 590 457 743 272 708 245 162
 254 344 298 236 346 248 223 452 642 559 631 467 377 291 143 343 431 710 285 692 173 480 514 557 234 448 169 443
 271 299 242 400 226 342 212 746 577 569 357 424 324 444 350 321 317 293 580 339 355 471 255 560 279 283 771 383
 238 554 320 266 354 483 220 543 348 429 422 485 412 326 366 441 265 572 381 319 327 382 358 532 367 446 415 419
 263 318 392 397 398 402 264 246 156 479 524 401 525 475 356 390 421 389 416 387 396 759 286 478 436 391 284 361
 290 260  99 410 380 306 408 359 310 414 447 332 370 399 464 379 529 373 347 526 576 460 376 287 601 465 454 369
 413 325 374 329 445 362 548 470 490 257 545  63 199 517 567 336 313 407 360 432 474 368 426 224 539 512 302 393
  62 404 468 508 482 486 473 282 513 204 439 107 352 423 599 619 371 438 418 111 442 340 455 308 297 502 406 481
 435 518 558 430 488 323 509 510 385 200 353 276 511 434 440 520 148  24 507 459 417 158  14 181 550 395 546 701
 351 138 499 493 552 547 504 101  80  13 566 437 491 425 615 492 495 462 300 130 591 341 239  17 610 409 476 616
 600 568 477 378 496 587 420 316  23 179 574 561 501 592 535 466 372 536 155   7 203  49 312 335 624 235 386 503
 453 232 269 723 715 207 617  25 110 174 498 629 652 500 625  58  64 489 505 268  11  76 307 205 782 463 581 752
 528 484 193 680 585 544  12 201 241  66 221 682 646 740 538  31   3 654 112 213 563  15 345 314 638 262 735 744
 656 671 116 450 704 305 622 172 259  71  87 497 527 738 556  39 632 252  79 461 588  18 210  22 669 472 630 487
 660 597 683 714  19 689 586  59  98 166  67 458 636 553  97 206  41 607 605 598 151 150 294   8 579 337 730 602
 258 650 186   5 677 678 137 469 140 175 311 709 564 516 747   2 144 675 104 594 621 230  73 301 375 333 618 698
 620 720  20 694  61 707 657  77 328 161  96 648 633 684 736 180 292 749 405 124 628 165  90 105 647   4 711  48
 717 697 651 724 696 687 608 197 136  68 611  28 726 729 103 281  44  69  16 672   6 533  51 159  40 673 303 765
 725   9 695  89  33 734 661 384 748 331 113 640 767 768 699 195 691 603  86 706  10 662   1 117 141  21 277  84

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 1
Number of search iterations: 2458
Number of local moves: 1081 (including on plateau: 441)
Number of local minimum: 167 (including on plateau: 47)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 515 753 394 755 758 783 728 722 565 562 631 424 412 475 464 336 371 24 300 7 11 15 210 8 375 4 303 84 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 451  60 755  78  74   1 674 597 728 166 546  26 167 168 634 697 145 257 564 567 724 100 696 628  76 712 549 150
 764 587 738 623  75 617 683 285 405 273 757 228 721 632  30  28 202 140 113 392  58 767 105  10 701 729  23 303
   5 122 610 680  34 552 667 689 684 114 723 192 600 702 598   4 128 181 215 306   2 733 713 522 398  94 686  36
  13 647 642 485  70 540 698 619 726  79 627 662 110 296 691 736 616  85  89  49  22  81 644 695 148  32 715 173
 604 608 592 147 408   3 194 693 626  63 671 716 160 209 596 566  15 326 199 304 129 760 652  16 130 658 752 193
 731 707 732 544 601  65   8 400 609  53 614 583 107 333 717 503 123  82  55 280 581 585  18 574 261 607 506  11
 653 161 474 643 677 320  87 640 410 101 651 515 127 236 560 529 543 106  59 214 548 109 528 638 542 553 331  35
 588 191 464 639 404 500 631  17 580 307 635 137 149 389 143 621 158 245  46 317 102 570 595 650 579 480 499 354
 611  54 670 526 283 605 370 602  91 492  51 573 217 459 547 504 207  29 200  20 550 476 519 530 427 714 545 118
 455 420 599  66 351 539 630 572 449   9 534 511 315 568 576 469 162 189  84 108 520 494 603 482 554  19 591 121
 527 590 397 559 444 135 625 541 381 413 155 431  90 213 361 471 299 362   6 141 586 518 490 557 470 466 533 229
 467 254 443 453 439 346 440 290 382 514 359 477 496 358 551 495 479 308 571 532 446 510 447 252  12  67 415 187
 288 341 104 536 437 531 461 537 484 491 345 355 426 488 450 401 513 255 429 222 396  61 507 423 310 428 422 349
 418 416 442 281 432 473 457 387 394 486 195 421 383 276   7 454 411 342 498 332 388 441 505 517 353 438 395 448
 417 386 338 409 366 430 436 246 330 535 374 525 344 452 456 399 465 493 368 376 348 487 291 324 364 312 327 393
 271 445 367 403 424 369 385 260 384 337 294 270 706 419 347 402 622 678 357 709 250 434 425 203 300 233 188 508
 460 435 316 263 286 328 373 152 335 314 458 512 372 660 378 356 235 555 340 720 293 319 258 391 390 295 694 502
 183 478 278 282 266 206 208 321 365 259 776 262 718 766 322 302 489 685 279 750 334 412 292 329 501 265 165 497
 360 407 462 339 363 380 133 219 226 777 274 483 569 668  80 172 521 481 654 727 267 336 298 377 594 175  24 624
 244 737 212 247 311 612 232 371 782 264 248 238 379 762 287 253 223 775 584 615 289 325 375 241 669 204 210 301
  97 136 117 313 225 240 268 770 251 468 618 735 665 613  62 174 646 688 589 221 743 243 169 239 190 629 275 606
 350 734 164 272 297 177 778 234 125 705 216 224 679 472 171 196 703 687 719 201 242 700 153  64 318 305 414 690
 284 725  68 309 746 774 218 277 198 463 211 759 699 231 119 142 656 433 663 722 249 170 744  33 237 111  92 657
  83  56 227 138 780 745 126 323 256 561 179 754 556 205 577  69 784 747 633 772 124 132 178  96 186 151 781 771
 763 582 154 783 675 563 269 116 120 748 230 144 666 197 184  99 159 742 661 740 768 406  71  41 156 157  38 758
 182 131 509 765 163  88 575 578 103 751  25  50 352 146  93 756 637 475 711  52 708 220  31 741 773 673  57 645
 681 538  44 112 620 753  21 115 523 565  48 134  37  27 692 516 664 558 655  39 593  77  47 769 710 779  14 659
  40  42  72  95 739  98 343 139  43 682 176  73 180  45 761 676 185  86 649 562 730 524 636 648 641 704 749 672

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.006e+07us (= 10060ms, 10.06s)
Satisfaction error: 3
Number of search iterations: 2212
Number of local moves: 849 (including on plateau: 257)
Number of local minimum: 173 (including on plateau: 38)
Number of resets: 1
Number of restarts: 0

Problem in row 2: 764 587 738 623 75 617 683 285 405 273 757 228 721 632 30 28 202 140 113 392 58 767 105 10 701 729 23 303 => the sum is 10989 rather than 10990
Problem in row 15: 417 386 338 409 366 430 436 246 330 535 374 525 344 452 456 399 465 493 368 376 348 487 291 324 364 312 327 393 => the sum is 10991 rather than 10990
Problem in diagonal 0: 451 587 610 485 408 65 87 17 91 9 155 477 426 276 456 402 235 685 654 615 743 700 744 96 156 673 14 672 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 776 742  97  39 749 157  50 729  49 678 681  58  88 225 143  91 175 622 768 766 158 166 145 495 105 733 736 769
 141 197 631 783 767 566  48 629  61 398  43 609 133 595 149 139  41 581 756 743 147 703 534  55  79 132 646 684
 406 449 223 159 287 717 536 160 117 757 102  65 713  57 118  70  31 645 689 473 173 481 774 694  85 722 552 735
 773 784 332 528 112 256 204 748 153  74  29 754  90  53 428  86 152 740 763 726 587 238 167 296 782 236 243 656
 100 686 203 777 364 665 122  87  51  46 719 512 761 272 171 138 213 603 388 716 135 343 411 728 231 113 683 752
 247 698 169 179 723 780 124 128 227  75  78 702 278 134 470 307 161 425 675 644 461 750 778 154 208  84 772 559
 163 724 187 217 638 339 775 178 233 123 137 758 120 150 268 222 670 746 633 654 464 643 405  54 192  96 699 502
 275 701 258 218 760 613 183 770 330 202 298 751 116 326 577 270 251 671 578 662 375 174 250 107 119 331 239 585
 180 692 168 781 209 320 221 172 771 356 730 695 170 194 605 146 259 658 721 276 317 228 415 184 325 214 498 485
 101 779 188 220 246 718 242  93 284 642 705 725 193 351 262 212 271 431 448 648 615 348 235 441 322 215 619 436
 201 676 476 299 440 514 224 360 471 293 310 289 291 207 708 328 335 318 341 337 488 696 504 260 312 373 515 424
 226 455 384 333 389 454 324 445 376 429 344 372 280 240 345 340 625 379 357 519 301 229 300 393 456 378 691 626
 237 518 315 304 267 447 404 506 349 338 446 394 380 433 489 396 329 381 266 612 313 392 409 359 400 334 402 570
 382 493 369 255 503 249 475 412 494 403 195 336 363 413 572 531 538 427 185 362 397 444 347 385 365 319 368 408
 346 303 234 164 342 499 474 386 245 302 306 459 377 457 366 524 390 292 383 517 520 589 557 295 387 438 541 297
 486 467 273 565 460 264 450 282 560 417 558 162 352 507 353 435 426 451 487 432  60 361 199 479 358 401 374 371
 437 355 508 513 539 569 103 537 248 423 285 311 452 279 281 586 649 505 543 327 549 496 563 545  35  47  52 253
 714 182 350 463 551 453 511 414 529 321 210 367  68 370 316 568 416 597 478  42  28 482 567 434 354 501 418 286
 430  26 590 550 523 547 659  80 663 516 480  44 472 521 439 530 497 420 283 126  18 522  24   1 599 630 492 308
 598 294 442 532  59 155 610 621 421 458 641 219 635 584 680 491 407 130 254 309 484 469  37  10 510 544 206 190
 575 148 616 548 596 241 562  72 422 443 468 216 588 391 131 592 191 106  36 265  23 591 655 704 593 490 583 144
 617  92 673 526 571 111  16 465 734 618 661  95 576 466 129 535 483  25 142 181 639   6 600 647 614 690  40  38
 477 104 636 509 637  15 620 682 257 580 667 542 660 533  32   4 611   5 200 140 274 573 115 525 745 601 136 110
 737  63 582 556  14  62 540 608 650 555 693 156 744 606 553 709 731   3 186 176 640 211  89  33 564 288  76 165
 664 177 561 410  77 419 623 624 668 277  19 151 627 604 706 579   8 109  99 108 738   7 574 628 657 720  83  73
 546   9   2 230  45 252 679 323 554 652 205 269 753 632 687 727 634 198  20  67 669 125 715 765 697  30 244 261
 121  82 764 263  66 527 500  17 674 602 314 232 688 739 305 762 741 395  21  64 685  13 594 712 196 653  71 189
  34  94 759  69  56  81 711 462 399  12 666 747  22 651 707 672 755 127 290  98 732 710  27 607 700 677  11 114

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00606e+07us (= 10060.6ms, 10.0606s)
Satisfaction error: 1
Number of search iterations: 2336
Number of local moves: 879 (including on plateau: 266)
Number of local minimum: 158 (including on plateau: 46)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 776 197 223 528 364 780 775 770 771 642 310 372 380 413 366 435 649 597 283 309 23 6 115 33 657 30 71 114 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 756  99 668 701 671  49 749  61 764  36 711 741  26  45  55 678 114  42  19  22  18 586 608 635 520 772  63 781
 601 456 656  94 633  50 695 702  81  46 703  47  77 112  52 672  62  15 539 544 721  64 722 124 784 740 219 779
 629 725 467 477 127 556 774 682 626 105 646 576 111  34  27 600  76  71  57 149  43  70 595 666 354 324 688 735
 543 107 719 775 108 113 568 147 144  29  84 482 133 136 604 782  65 738 128 119 778  95 777 768 399 727 178 744
 420 130 762 480 776 174 141 110 207 670 214 563 150 122 698 607  24 176 463  41 132 254 699 780 758 783 118 538
 706 177 525 535 611 767 181 158 483 186 199 262 156 162 275 717  91 204 117 248 640 145 693 714 622 692 126 598
 773 116 641 221 261 168 449 155 272 686 179 503 230 137 564 759 146 255 164 203 264 771 718 170 669 681 173 662
 229 259 507 523 296 310 249 730 485 599 253 675 339 283 587 580 330 217  68 271 733 123 160 234 526 665 154 605
 292 138 707 592 198 247 305 191 734 643 212 673 223 295 689 441 242 429 182 180 342 291 530 331 634 584 165 500
 250 319 531 546 224 341 267 357 288 642 216 746 276 360 573 316 270 209 240 297 278 213 501 333 654 658 757 328
 301 243 561 578 318 660 218 323 231 460 628 644 161 355 340 389 375 362 337 349 237 371 676 404 326 532 299 312
 284 258 424 732 289 377 257 336 541 461 368 308 353 309 638 314 386 329 345 251 293 350 190 591 770 618 298 320
 280 394 459 745 304 391 227 403 432 397 356 364 363 401 412 388 321 306 402 307 380 382 352 348 558 570 335 413
 346 279 421 372 446 338 347 418 428 410 358 438 351 514 731 408 211 317 315 334 287 366 406 245 390 705 393 416
 511 359 268 536 487 453 489 435 384 455 400 369 447  10 494 379 381 405 313 109 415 475 396 439 395 327 445 414
 332 457 411 409 192 172 376 269 425 478 508 533 374 504 417 522 437 367 343 479 431 422 398 419 443 129 373 370
 476 344  44  40 300 426 407 434 294 311 495 502 175 450 465 266 464 436 506 534 430 471 466 537 528 228 517 444
 474  51 236 282 442 497 143 486 585 462 472  80 542 516 492 574 454 285 385 452 519 575 448 593 142  21 577 205
 509 490  13 189 499 473 481 427 554 365 498  56 496 551 565 513 548 545   3 623 440 383 273 183 102 196 524 491
 594 540 206 201 493 602 527 529 235 233 562  54 630 518 239 195 569 552 515  11 547 567 392 286 167 194 588 244
 468 615  90 303 484 609 550 612 572 241 712  59 521 583 188 163 589 555 613 505  96 590  58 281 121   8 579 225
 451 510 263 200 655  37  83 621 488 458 581  74 625 566 361  25 742 560 663 715 659  12 325  48 252 131 639 246
 106 694  79  92 559 322 512 651 610 157 617 256 649 657   2 169 648 691 652 636 557 553  38 148 184  16 653  82
 103 720  20 265  78 632 647 637 104 387 619 197 684 596 185  93 713 677 650 751 674 631  31  30  86  35 685  60
 120 709 710   5 697 614 627 423   7 470  39 220 661 679  85 151 729  14 752 582 134 606 153 624 277 208 597  97
 238 571 378 115 667 680 620   6  53 171   1 215 724 645 260  88 603 750 748 753  17 696  23 708  67 274 726 193
 100 469 152 549   9 700  73 683 754 728  69 737 747 763 302  66 664 743 755 760 202 159 222 125 187 139  32 101
  98 761  72 433 166 232  28   4 210 704 290 616 766 687 690 135 736 739 716 765 723 769 140 226  75  33  89  87

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00589e+07us (= 10058.9ms, 10.0589s)
Satisfaction error: 2
Number of search iterations: 2434
Number of local moves: 1050 (including on plateau: 399)
Number of local minimum: 170 (including on plateau: 51)
Number of resets: 1
Number of restarts: 0

Problem in column 9: 764 81 626 144 207 483 272 485 734 288 231 541 432 428 384 425 294 585 554 235 572 488 610 104 7 53 754 210 => the sum is 10991 rather than 10990
Problem in column 18: 42 15 71 738 176 204 255 217 429 209 362 329 306 317 405 367 436 285 545 552 555 560 691 677 14 750 743 739 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 698 631  31 733  30 774 674 680 178 670  39  88  66 110 545 775  68  63 444 576 391 152 689 395 503 215   5 767
 381 125  89 589  33 658 704 764  82 505  92 553  61 772  81 643 762  77  43 297 700 376 692 757 116 147 711 180
 182  91 738 635 780 537 185 761 538 651  36  24 136 765 447 676 146 122  75 603 720 451 179 120  46 439 139 768
 710 108 356 251 226 744  41 592  70 581 306 722  28  47 321 577  87 155 709 416 748 758 341 564 210 648 619  55
 527  58 217 703 739 111 726 557 190 714 174 520 487 730 292 172 184 168 227  78 200 529 766 745  59 207 777 133
 396 253 394 463 112 677 408 656 612 569 222  53 339 242 554 607 169 216 519 623 661 257 696 167 166 186 705  69
 741 659 193 667  14 129 784 587 302 573 263 233 206 229 522 549 291 163 288 474 697 442 137 662 679 165 199 142
 510 255  90 123 507 204 371 574 209 584  85 286  95 243 508 218 195 499 598 728 716 650 461 393 170 343 770 605
 614 205 287 579 250 258 150 599 753 273 334 130 119 300 157 583 392 383 734 478 303 274 782 625 707 171 261 289
 717 102 368 504 269 262 335 284 346 616 550 480 279 348 778 515 281 252 144 540 219 212 345 776 732 267 225 244
 736 311 201 518 324 187 301 446 636 375 140 329 183 370 580 431 256 427 626 755 421  57 397 264 317 721 468 213
 459 481 295 482 234 315 228 424 131 305 260  74 265 600 769 363 469 432 473 457 220 470 211 560 660 517 476 360
 275 379 344 531 428 294 353 472 290 458 378 597 488 241 493 426 221 326 249 237 351 430 373 615 575 435  56 675
 238 411 248 366 413 406 414 699 333 318 330 400 425 314 312 420 412 372 299 464 357 445 374 484 359 779 534  64
 390 296 485 524 313 401 208 307 407 465 715 475 332 490 310 387 158 450 377 454 437 404 448 405 496 173 403 280
 259 438 402 678 367 449 609 285 369 543 323 235 429 511  22 278 460 293 501   6 433 513 671 319 528 563 452  54
  93 415 342 352 673 572 606 283 181 498 489  44 304 325 270 509 585 349 502  60 434 486 124 361 388 610 440 695
 466 316 423 384 277 530 544 271  94 347 455 436 617 331 358 232 565 266 364 706 354 109 492 385 382 320 398 568
 418 309 386 156 591 340 224 188 477 419 593 516 613 422 160 526 601 399 175 611 365 308 541 539 409 336 328  40
  10 523 453 239 536 655 497 198 154  45  83 268 548 338 189 546 562 566 494 637 642 760  19 245 547  29 542 665
 491 725 620 132 618 512 604  27 596 196 231 337 417 681 104 555 594 701 686 571  38   4 107 134  97 627  34 551
 113 561 582 362 578 535  32 141 556  18 683 558 688 638 126 115 684 646 506  11 246 687   1 128 145 602 586 462
 162 590 632 203 668  80 630 247 622 194 747 664 588 624 177 298 525 570 327 559 159 647   2 148 143  51  48 685
 214 628 751 151  15 595 521 192 763  84 479 443 483 645 441 202 731 735 754   9  52 533  71   8  17 713 103 657
  20 742 759 410 729 567   7 456 644  37 740 691 666 532 322  42  62 127 191  67  35  73 389 471 652 654 629 276
 197 712 690 114 633  99  96  23 708 164 723 500 746  21 718 117 254 694  25 380 236 649 669 230 727   3 138 724
 223  13 514  76 621  50 640 176 282  86 771 641 639 105 682  79 495 756 634 121 118 153 773 135 552 719 272 663
 750 653 100  65  12  49  98 101 467 702 749 693 743  16 752 149 781 783  26  72 737 161 240 355 608 350 672 106

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 2
Number of search iterations: 3137
Number of local moves: 974 (including on plateau: 309)
Number of local minimum: 291 (including on plateau: 39)
Number of resets: 2
Number of restarts: 0

Problem in row 6: 396 253 394 463 112 677 408 656 612 569 222 53 339 242 554 607 169 216 519 623 661 257 696 167 166 186 705 69 => the sum is 10991 rather than 10990
Problem in row 27: 223 13 514 76 621 50 640 176 282 86 771 641 639 105 682 79 495 756 634 121 118 153 773 135 552 719 272 663 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 499 201 746 691  35 775 756 470  46 727 679  50  93 211  32  85  40 132 706  31 777  38 610  95 774 670 584 437
 682 488 123 709  49 732 747 751  63 760 507  70 162 108 782 120  88 161 169  44 770 226 649  45 633 692 526 134
 744 688 432 644  30 160 720 653 164 686 152 149 101  90 119  65   9 190  99 444 741 715 758 137 609 544 421 726
 681 112 115 442 213 771 779 126 669 591 783  59 277 178 763 537  37  67 186 224 693 175 202 150 485 781 562 332
 712  98 140 538 773 547  77 188 639 655 683 157 165 139 651 168 135 194  79 159 143 193 238 784 509 729 769 728
 227 757 230 702 144 336 665  86 558 628 110 172 173  91 603 276 117 131 103 247 780 141 778  48 721 772 719 675
 264 246 284 518 275 725 768 156 666 678 394 280  61 107 640 619  66  82 204 229 301 730 223 198 672 700 759 145
 740 550 386 734 270  94 184 533 600 617 515 240 296 352 209 252 189 200 285 181 506 283 255 163 754 753 674 176
 286 611 395 626 368 750 668 262 776 503 109 192  29 147 718 367 312 142 281 416 326 231 288 241 438 529 731 248
 491 261 271 696  75 274 346 457 236 377 267 191 155 455 510 330 723 177 543 514 219 343 256 376 616 766 415 650
 428 500 251 481 391 534 239 263 711 521 348 361 222 302 622 146 325 456 309 235 764 396 384 596 397 269 266 273
 292 408 355 513 406 565 357 133 426 588 328 708 207 363 419 710 435 359 461 379 257 335 289 380 403 356 362 196
 342 293 398 462 582 364 303 313 234 479 413 217 347 388 411 465 243 420 427 492 374 287 402 371 523 443 440 557
 329 369 502 319 404 405 228 365 767 431 244 399 350 599 373 450 327 561 290 452 382 358 418 183 349 602 197 337
 304 495 372 381 410 338 392 298 334 258 445 477 412 294 414 516 424 490 353 501 366 464 339 407 260 383 385 478
 354 167 505 433 360 306 390 322 305 489 449 454 429 512 472  47 439 268 282 436 480 341 567 579 448 250 607 299
 463 400 409 333 317 548 471 259 453 318 232 434 308 467 320 417 575 581 311 208 494 473 493 314 522  19 315 536
 483 564 279 295 487 272 586  18 340 233 459 441 517 458 594 482 486 504 331 508 105 549 460 430 210 475 114 310
  41 527 556 265 629 225 576 545 422 389 401 466 573 685 245 216 307 127  14 447 153 542 613 646 212 476  28 664
 206 593  51  64 577 451 316 540  11 122 531 605 659 643  97 154 546 585 321  24 525 601 497 566 220 185 624 676
 597   2 578 345 632  76 695 701 151  42 474 498 703 697 170 532 541 612 667 423 278  53 654 551   3 237  26  52
 519 569 571 171 625 574   8 249 370  74  72 631 636 568 291 580 704 615 638 555 595  55 425 528 215  33 118   1
 221 614 520  43 717  62 469 635 138  73 583 618 637 535 205 344 524 572 677 608 552 623  17 641  12 113 121 116
 553 748 539  56  84 554  23 627 182  60 563 684 656 484  15 297 662 658 560 606 129 680  58 387 104  69 393 559
  34  80 511 375 687 214  57 647 203 300 468 592 660 663 242 645 604 496 689 530  83 713  81 716 323  27 254  96
 218  54  87 111 570  78  10 745 589 179  20 446 694 733 124 737 735 762 630 698  13 652 587 166 253   7 378 714
 106   5 648  39 752 158  92 642 199 187 661 634 761 705 351 743 673 699 755 742  36  71 125 671 130  89 180 136
 174 590 736   4 128 102  68   6 738  25 100 765 707  16 598 690 724 749 620 657 148 722 324 621 195  21  22 739

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00606e+07us (= 10060.6ms, 10.0606s)
Satisfaction error: 2
Number of search iterations: 2237
Number of local moves: 865 (including on plateau: 290)
Number of local minimum: 184 (including on plateau: 28)
Number of resets: 1
Number of restarts: 0

Problem in row 8: 740 550 386 734 270 94 184 533 600 617 515 240 296 352 209 252 189 200 285 181 506 283 255 163 754 753 674 176 => the sum is 10991 rather than 10990
Problem in row 28: 174 590 736 4 128 102 68 6 738 25 100 765 707 16 598 690 724 749 620 657 148 722 324 621 195 21 22 739 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 428 729  60 727 597  64  41 733 150 165 168 161 196 656 709 622  95 629 273  79 227 113 730  43 661 604 549 781
 728 739 769 638 106 697 573 646 633  20  50  45 126 608 654 675   7 103 163  98  44  63 490  33 742  27 746 767
  36  34 776 514 515 160  86 470 180 171 571 466  96 748 222 653 127 752  77 575 108  76 771 605 763 768 181 489
  28 130  52 376 782  83 678 757 101  94  85 271  80 779 685 706 225 668 201 139 687 142 726  91 773 185 682 784
  56 136 263 764 774 583 159 747 151 208 690 564  88 731 737 217 264 615 147 123 176 157 705 772 455  42 187 479
 235 210 237 664 248 761  68 691 665 281 122 524  90 669 154 602  32 710  93 393 359  55 674 204 584 362 762 541
  97  47 105 508 740 267 749 684 162 152  69 778 313 707 741 242 174 760  78 274 611 439 158 183 701  82 525 644
 112 177 169 686 156 226 405 427 269 392 230 732 251 672 714 256 518 735 228 195 736 623 141 321 556 138 170 755
 268 121 211 759 265 167 780 531 770 190 100 765 317 379 738 539 219 275 325 783 284  65 221 175 581 308 205 649
 324 134 416 609 223 216 301 744 368 425 253 775 125 199 589 777 290 164 429 377 722 272 295 310 679 387 278 309
 234 220 375 461 283 182 555 570 319 300 566 447 323 140 209 420 306 418 207 341 650 756 289 467 533 452 414 553
 552 254 172 662 214 296 516 577 202 318 302 236 261 330 443 491 537 212 587 446 659 270 327 441 480 384 260 561
 292 320 451 277 247 347 542 344 569 276 394 407 520 397 401 432 352 445 475 415 501 456 400 213 351 189 505 472
 421 382 232 423 431 334 198 550 322 434 197 293 419 517 592 282 492 454 331 357 380 495 389 246 572 411 465 371
 373 545 333 231 244 365 437 259 459 358 473 462 430 312 329 409 521 435 486 311 337 477 360 436 280 528 410 390
 386 463 355 179 367 448 474 345 626 483 406 444 166 286 257 350 481 307 590 370 314 369 476 412 353 502 396 385
 554 408 335 628 326 635 484 239  87 488 388 116 374 238 478 366 378 544 291 364 458 361 438 509 297 499 503 203
 402 594 631 288 513 422 381 342  13 340 548 372 391 440 504 339 403 328  67 529 129 433 493 494 315 551 647  81
 527 535 356 153 593 643 338 143 637  53 498 133 512 442 563 193 660 294 507 346 576 578 148 413 240 534 255 120
 612 449 693 243 634 404 279 249  74 546 496  35 603 562 110 511 395 173 460  19 304 559 519 457 146 625 567 266
 536 591 574 149  59 522 497 354 725 601 607  46 708 299 262 206 580  31 596 632  25 137 565 424  21 640 471 132
 703 610 648 287 579 658  17  57 523 485 639 469 557  89 124 104 702 616 349  48 128 598  66 600  61 532 558 184
 606 588 670  14 651  23 383  84   6 676 500 109 700 194 145 114 642 526 753 543 245 595 332 721 303 617 119 131
 694 468 699 305  75 663 192 298 547 724 666 652 712  70  99 102 586  73 618 582  37 487 118  18 336  72 698 399
 677 627  92 316 426 585 619 111 614 745   3 241 715  40  38  26 621  54 613 758 689 720  30 630   5 636 135 224
 398 711  39  49 719 482 657   4 671 704 530 218 645 191 186 250 667 229 655 540 453 620 568 713  29  10   1  51
 696   2 717   9   8 695 348  22 683 680 751 723 734 178 107 363 692 188 673 599 641 450 144 343 115 155  16 258
  15 766 560  71 215  62 233  12 464 681 688 506 538 117 200 743  24 252 718 754 510 624 417 716  58 750 285  11

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00804e+07us (= 10080.4ms, 10.0804s)
Satisfaction error: 2
Number of search iterations: 2308
Number of local moves: 959 (including on plateau: 318)
Number of local minimum: 154 (including on plateau: 31)
Number of resets: 1
Number of restarts: 0

Problem in row 17: 554 408 335 628 326 635 484 239 87 488 388 116 374 238 478 366 378 544 291 364 458 361 438 509 297 499 503 203 => the sum is 10989 rather than 10990
Problem in row 22: 703 610 648 287 579 658 17 57 523 485 639 469 557 89 124 104 702 616 349 48 128 598 66 600 61 532 558 184 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 503  64 113 597  88 742 760 581 183  32 520  85  58  31 692  66 697 640 728 769 588 123 637 458  62 685  21 467
 721 745 767 693  70 146 122 696 188 141 704 108 582 149 363  34 120 743 506 126 780 619 242  90  96 710  46 683
 755  91  13 778 105 110  84 485 630 232 708 184 726 116 651  51 177 621 779 212 496 216 771 538  53 784 544  80
 600  28  95 756 174 157  47 526 118  43 758  16 772 782 609  56 237 718 675 115 723 750 644 674  97 148 535 137
 737  60  52 605 571 182  92 592  77 172 510 100 752 121 673 175  99 574 733 199 664 147 777 717  30 765 612 202
 658  50 700 572 251 114 379 532 275 281 759 388 722 140 739 413 221 748 227 250 283 768  74 469  71 591 154 161
 738 171 735 498  61 131 211 541 309 278 641 611 150 290 749 217 223 397 781 249 391 443 193 439  94 636 524 289
 615 453 112 417  44 259 308 762 136 160 638 319 320 448 247 307 322 562 460 686 587 297 288 659 425 323 678 158
 623 293 124 706 346 195 208 763 770 133 480 210 129 258 662 155 387 534 197 624 412 200 368 774 256 201 764 218
 386 246 689 589 284 187 138 431 233 773 711 313 287 167 327 244 295 491 783 679 176 329 215 731 274 196 660 156
 546 220 634 754 224 345 219 486 392 335 580 321 300 271 315 277 228 776 356 530 301 362 245 331 204 326 677 435
 330 262 343 470 747 481 272 473 255 191 607 317 306 173 291 303 732 426 339 775 608 226 198 349 378 304 523 311
 312 206 360 556 342 334 336 525 446 456 341 408 500 314 402 395 369 416 347 373 511 380 422 285 515 450 361 328
 444 468 382 492 241 253 355 537 282 234 325 508 488 296 403 393 372 316 302 332 475 318 394 375 420 746 338 501
 348 235 542 207 366 401 381 415 421 364 358 377 407 484 376 568 352 168 337 286 437 260 590 410 522 333 462 583
 353 405 463 414 507 547 606 243 455 474 406 209 344 457 517  82 418 270  24 466 400 350 374 427 447 384 434 514
 543 409 549 351 459 497 419 411 423 616 452  15 478 441 433 299 487 181 655 390 451 429 354 103 371 555  76 143
 359 365 442 280 428 613 566 222 504 521 257 159 490 564 465 357  75 292 557 560 119 594 516  48 471 505 125 536
 276 385 398 273 575 476 518 236 370 230 134 404 449 604 477 625 610 169 164 567 502 558 499 135 548 424 145 239
 529 440 495 214 595 527 445 178  10 629 111 627 528 553 162 649 396  67 533 229 310 593 399  42 483 631 179 436
 203 666 550 109  23 761 561 461 688 647  14 645 531 601 263 652 628  26 130 104 324  37 493  54 494 509 151 665
 144 656 464  22 438 676  35 190 432 565 106 671  36 684  72 513  78 563 598 539  93 101 626 648 712 367 479 482
  45 573 153 117 635  79 545 128 585 622 240 632 653 698  83 694 639  27 127 430 268 654  68 298 691  17 687 602
  25 614  38 213 663 672 519 132 584 715 189 667 540  20  29 701 646 231 192 618  81 489 472 165 705  86 248 736
   1 670 551   8 669 682 680 163 225 552 166 681 238 186 554 713 569 107 254 279 152   6 261 383 753  59 719 709
   9 720 703   5 751 643 727 142 617 267   4 714  63 730 294 642 650 603 139  11 266 633  65 690 578  73 194  57
 180 766 454 205 599  40 741  41 657 570 269 577 102 744  87 702 699  19  49 340  33 512 185 695 579 170 389 586
   7 729  69  89 734 740 716  98 725 757   2 724  39 668  55 707 264 305  18 252 559 596 620   3 661  12 265 576

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.83265e+06us (= 6832.65ms, 6.83265s)
Wall-clock time (full program): 6.89157e+06us (= 6891.57ms, 6.89157s)
Satisfaction error: 0
Number of search iterations: 1309
Number of local moves: 732 (including on plateau: 312)
Number of local minimum: 75 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   5 210 718 250 556  10 579 677 683 300 128 693 722 112  76  60 708 115 171 726 742 703 132 749  82 315 647 121
 142  17 756 653   9  11 712 698 721 725   7 715 754  19 584  91 176  49 578 711  66 710  31 678  50 645 674   8
 614 172  35 649 255  12 669 293 307 541  40 621 707 174   3 100  78 631 719 679 676 728 652 328  21 519 620 147
  14 638 660 411 256 510 262 689 692 687  70 124 671 398 249  63  79 191 691  22 555 654 455 664 613 648   1  23
 114 381 684 525  75  26 151 233 602 473 163 714 682 593 590  27 595  54 570 633 740 632 625  86  95 168 662  97
 672 266 580  20  28 744 435 229 643 196 573 700 517 162 125 634 554 237 615 465 577 563  39 559 105  45 482 225
 599  51 680 126   6 651  32 326 457 630  24 568 481 520 552  18   2 663 414 639 575 588 603 637  92 117 655 284
 108 187 535 238  58 644 217 425 626 661  62 273 524 635 317 569 422 391 610 612 224 558 536 532 169 246 492 119
 472  85  56  80 553 594 234  16 628 331 636 650 450 485 446 190 507 148 640  25 576 583 624 600 149  65 667 500
 526 382 359 431 545 468 194  36 508 348 666   4 440 549 433 629 546 494  15 543 501 495 428 499 189 449  74 239
 616  94 146 404 601 539 430 123 521 426 343 166 484 518 369 434 516  13 394 478  30 547 522 412 302 467 566 529
 548 269 295 416 531 512 157 140 487 251 585 497 364 268 493 432 110 470 582 528 413 337 463 474 342  84 466 476
 523 218 276 490 354 378 509 477 400 321 437 417 572 445 534 205 561 454 287 436 444 386 462 352 141 226 318 367
 471 491 419 372 496 464 418 443 469 264 366 405 458 370 427 346 353 309 303 281 327 301 565 451 360 403 344 314
 438 498 223 441 550 511 338 730 231 423 420 368 325 312 415 305 277 409 406 334 377 292 374 365 456 296 486 390
 379 442 429 488 356 439 170 606 185 387 263 336 195 480 475 779 362 330 258 363 448 402 503 304 514 483 340 274
 286 424 184 282 408 741 345 371 358 571 289 604 220 243 333 383 399 658 688 272 384 208 373 248 607 618 180 313
 241 452 401 153 310 375 591 627 316 665 145 339 380 294 290 254 389 285 780 410 278 311 515 280 540 396 392 581
 270 232 611 361 385 265 564 489 297 747 609 308 275 271 288 355 267 527 770 212 279  83 388 335 596 702 213 291
 244 732 351 395 657 257 673 774 764 605 261 319 320 341 214 158 306 544 199 329 178 228 193 164 506 574 347 357
 745 724 533 332 773 216 686 720 245 137 598  77 235 283 253 530 200 192 206 209 768 179 247 221 479 537 103 562
 204 642 393 696 136 154 783 504 242 175 737 197 323 709 298 704 763 259 111 324  98  93 150 131 717 757  68 622
 716 670 120 152 685 762 587 397 167 675 735 201 161 461 134 203 750 778  73 198 260 130 215 160 619 211  47 723
 299 551 102 705 751 159 538 350  59 155 738 135 118 781  67 695 421 777  89  61 407 144 240 775 758 230 101 784
 557 761 106 659 608  34 202  64 165 129 236 739 252 668 767 697 586 182 589 748  90  53 181 107 376 513 222 699
 227 771 505 447 156 733 349 459  46  43 597 173 139  42 776 694 766 736 143 113 765 219  69 183 743  44 460 592
 753 177 104 133 186 752  38  37  33  52 760 560  99  88 727 734 188 772  48 567  96 782 646  55 713 542 617 731
 207 453 729 681 706  29 127  57 138  71 502  87 122 769 755 701 109 322  41  72 116  81 759 641 656 690 746 623

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.0059e+07us (= 10059ms, 10.059s)
Satisfaction error: 2
Number of search iterations: 2496
Number of local moves: 986 (including on plateau: 362)
Number of local minimum: 187 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

Problem in column 10: 300 725 541 687 473 196 630 661 331 348 426 251 321 264 423 387 571 665 747 605 137 175 675 155 129 43 52 71 => the sum is 10989 rather than 10990
Problem in column 28: 121 8 147 23 97 225 284 119 500 239 529 476 367 314 390 274 313 581 291 357 562 622 723 784 699 592 731 623 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  90 113 780 735 741 139 205 589 456 487  59  36 661  80 129 123 695 154 722  67  38 727 590 125 492 707 726 524
 525 155 636  40 671 160  29 775 188 579 774 528 126 106  24 127 743 656 686  95  64 581 488  83 698 622 770  61
 506 118 781  75 772 108  71 451 215 662 138 586  41 132  78 201 756 667 713  63  49 512 333 693 682 767 717 103
 294 150 596 619 632 165  68 633 765 642 116  92  21  32 128  66 559 683 712 437  79 768 237 556 583 672 592  93
 778 282 468 140 192 107 172 631 738 607  81 641 344  77 275 719 689 241 342  46 189 704 716 761 541 197 164 148
 645  48 782  39 755 773 110 776 262 563 174 149 115 157 156 185 229 702 474 184 270 736 784 169 573 771 336  73
 753 223 538 349 783 242 104 729 222 639 102 611 626 243 281 341 247 415 259 112 337 428 452 378 565 133 130 748
 533 235 609 162 564 120 263 207 343 718  65 745 319 302 246  94 200 733 135 159 777 728 621 122 766 710 211 303
 224 257 479 256 532 191 173 599 273 572 517 680 347 448 277 153 232 429 264 769 168 746 653 670 355 175 252 299
 757 388 458 254 714 742 370 203 286 267 109 744 390 182 216  91 603 678 439 233 250 444 529 121 348 271 675 228
 202 408 504  96 483 376 482 715 455 218 147 650 195 278 236 265 352 666 313 309 268 481 764 289 279 450 669 440
 477 290 515 353 484 398 651 493 327 288 260 405 308 261 403 304 496 335 220 310 293 445 629 519 459 240 317 510
 382 628 454 251 779 285 516 266 354 471 190 416 362 306 400 231 301 507 466 332 386 527 407 379 467 255 238 434
 404 425 338 640 430 314 371 498 418 359 567 331 340 372 436 345 438 432 183 427 322 462 446 284 518 350  99 441
 312 464 380 601 514 318 489 431 234 208 449 475 316 552 357 369 490 366 245 420 453 292 409 426 356 230 470 364
 365 329 397 339 368 571 399 412  85 495 387 521 360 520 435 377 381 305 269 291 389 411 393 401 406 461 612 311
 402  31 137 274 249 410 287 334 585 442 554 424 325 351 584 443 577 324 280 297 568 296 396 419 542 540 502 417
 469 423 225 326 315 485 307 511 557 478 422 494 320  33 476 531 677 582 447 480 546 227  54 373 144 383 499 206
 143 623 239 654 219 610 600   3 604 358 361 163 414 486 421 505 375 530 543 508 367  42  86 721 570 363 465  17
 171 566 385 536 180 617 513  62   9  58 413 166 551 606 548 457 555  10 491 624 562 209 181 595  56 648 587 634
  25 676 374 553 328 657 649  22 539 146 537 244 523 605 394 620 588 142 614 673 503 204  35  44  50 658 114 473
 117 709 384 591  11 720 248 395 597  28 740 187 500 660 544 618 178 176 509   7 550  69  70 346 194 561 602 679
 210 580 124 501  26  97 545  76 616 433 627  57 708 681 625 594 141 300  51 762 134 221 668 593 167 699  30 724
 460 690 276 549  12 283 637  89 684  98 613 214 534 723 652 655   4  88 177 705 547 258 298 732  52  15 330 615
 751 760  43   2  13 576 759 158 696 217 752 391 643 665 706 608 392 145  45 535 647 111 213 663 136  19  72 272
 463 687  47 737 152 701 739 119 186 659 664 323 198 734 697 575  53 101   5 638 750  60 295 321 196  20 179 691
 526   1  27 644  37 100 522 253 212 105 574 630 700 763 688 646  23 472 692 758 754 170 161   8 226  55 558 685
   6 731  14 674  34 725 711 560  84 193 598  87 703 635 578 747  16 151 694 749 730 131  82 199 569  18  74 497

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00605e+07us (= 10060.5ms, 10.0605s)
Satisfaction error: 1
Number of search iterations: 2300
Number of local moves: 902 (including on plateau: 291)
Number of local minimum: 172 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 524 770 767 583 761 784 428 777 769 439 666 496 231 436 552 360 424 422 358 9 22 248 97 12 2 47 1 6 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 112 241  34 759 651 119 722 778  83 155 183  36 440 583  81 680 429 490  63 763  65 573 161 105 707 637 749 591
  40 526 114 640 176 100 661 547 733  69 665 139  53 415  57 741 479 485 702 693  50 748  38 550  64 726 657 122
 452 138 158 646  99 677 185 783 146 175 779  67 746 770  88 135 619 502 168 764 141 780 144 599  71 382 668 108
 670  70 565 757 102 129 777 223 572 152 448  32 708 641  47 758 432 178  29 588 180 554 115 128 750 664 585 136
  89 145  80 592  87  82 202 782  45 335 697 164 602 534 208 247 784 714  51 510 157 775 166 719 116 776 656 675
 513 234 753 735 118 773 225 255 130  58 203 121 496 540 198 734 593 704  17 671 231 258 731 172 181 678 394 274
 548  96 165 445 177 147 730 694 104 221 737 350 710 649  95 140 639 299 242 163 310 774 184 226 251 743 461 690
 655 182 228 584 237 324 278 212 134 286 307 289 760 703 193 201 405 698 107 771 336 563 744 179  91 537 772 214
 626 204 268 568 265 205 762 233 222 438 263 298 466 688 334 351 632 219 235 667 210 358 246 406 397 645 577 207
 669 279 227 527 220 318 711 312 229 127 285 196 689 523 199 319 742 728 738 340 232 292 217 342 267 491 579 192
 724 236 343 752 120 186 333 254 160 426 338 262 684 610 269 326 621 767 362 296 300 194 297 284 662 368 494 322
 504 216 417 266 476 353 327 330 308 410 528 361 499 576 443 453 291 248 218 469 243 320 768 381 473 571 302 239
 608 386 331 264 252 467 301 328 390 533 462 367 294 398 472 316 309 489 305 441 250 435 781 295 414 357 315 430
 463 434 364 433 552 411 355 293 444 283 354 403 383 271 384 387 360 329 377 392 474 378 389 363 288 586 428 412
 450 511 521 402 352 339 420 372 454 344 425 356 529 464 407 427 421 446 380 345 359 483 418   8 348 306 281 422
 346 508 400 388 509 498 314 375 477 280 482 558 304 385 436 332 200 337 516 507  16 365 317 578 325 282 497 458
  44 562 517 413 408 532 379 470 618 341 376 475  72 171 503 103 542 486 447  15 500 439 531 424 566 244 253 559
 206 455 580 487 515 488 442 399 604 575 238 514 409  66 594 303 162 495 366 544 373 451  31 370 393 230 170 530
 167 553 556 151 535 595 369 481 133 391 522 739 106 173 449 536  94  56 460 416 512 607 431 437 484 270 156 611
 287 545 459 131 561 419 539 541  41 249 480 569 148  54 616 471  75  86 404 395 732 188 617 543 625 257 465 493
 213 501 600 109 519 663 624  43 538 549 609 524  90 276 676 478  93  60 642  37 589 149 560 506 555 124 195 468
 211 597  33 117 620 581  42 567 679 603 150  46 240 273 660 347 197 261 570 650 623 654 613  20 582 113 259 682
 272 505 700   3 672  11 110 190 605 720 154 564  74 132 622 713 290 598 629  28 658  26 587 590 631   9 142 755
 311 691 615 456  39 636   6 125 518 643 111 574 256  61 756 606 313  27 718 215 635  12 712 727 627  62 525  13
 396 683   5  59 685 673 612 596 721 666 275 716 224 126 681  24 349 209 628  21 687  48 401 614   1   2 159 729
 692 701 705 143 633 601 137 717 696 551 187 740  73 191  30  23  92 557 321 101 653  25 323 695  22 699  52 630
 715  68 546  79 736 644 423  35 520 751  98 769 766 457 747  85 638 245 647  14 765  49  97  77 725 153 123  18
   7 723 706  84 674  19   4  55 686 659 634 761 169 260 745 754 189 277 648 174 709 492 371 652 374  78  76  10

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00599e+07us (= 10059.9ms, 10.0599s)
Satisfaction error: 1
Number of search iterations: 2475
Number of local moves: 840 (including on plateau: 281)
Number of local minimum: 204 (including on plateau: 37)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 112 526 158 757 87 773 730 212 222 127 338 361 294 271 407 332 542 495 460 395 589 654 587 727 1 699 123 10 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  63   7 743  44 679 182 287 778 170 662 678 699  16 715 740 684 202 153 705  81  28 374  84  72 167 644 653 680
  80 390 623 706 777 703 692 746 690 371 669 752   6 155 683 737 148 115 686  30  21  93 258 109  37  19  26 668
 721  86 192 151 641 673 130 735 754 197 385   3  20 122 691 688 255 370 727 389  69 264 549  51  35 748 614 730
 636  77 758  43 617 624  24 304 682  23 273   4  39 253 619 656  82 632 689  57 396 681 314 672 225 704 663 243
 731  10 712 728   8 635 126 108 655 593 611 378 160 564 638 580  60  97 375 284 232 562 257  31  95 557 626 577
 646 144 189 651 649  11 100 339 671  29 496 615 147 670 647 547  65 573  49 541 529 587  33 608  50 223 523 658
 540 162 650 582 240 654  34 309 556 592 572 574  14  98 594 642   5 513 620 590 607 142 256 198  38   9 565 634
 494 175 528 674 639 519 139  18 578 567 610 535 605 554 609 516  56  22 581 579  12  15  70 550 328 215 566 236
 571 303 312 601 468 450 261 159  32 462 272 503 570 488 400 546 173 515 585  25 467 406 141 537 437  62 628 616
 536 204 583 599 501 544 486 195 439  54  74 584 507 476 436 559 176  68   1 152 521 482 526 558 404 250 479 596
 506 183   2 511 588 533 424  52 457 539 426 510 508 425 569 552 248 113 459 421 434 442 161 333 600 234 604 156
 490 291 531 524 517 369 430  61 469 429 445 416 487  13 470 311 282 576 211 485 473 321 477 464 505  40 414 489
 200 165 340 483 342 509 456 332 355 527 454 542 532 472 407  17 455 279 433 337 474 326 344 427 481 500 413 388
 297 418 460 461 448 359 525 318 444 343 417 348 364 409 412 316 478 274 492 420 290 357 446 347 435 376 465 271
 453 423 520 392 441 401 432 415 281 278 381 322 366 466 458 391 386 422 495 356 394 345 308 399 393 431 306 335
 502 497 405 280 327 324 380 301 362 447 288 363 350 397 285 410 440 325 408 784 352 349 379 353 377 568 244 493
 231 504 201 358 411 241 276 738 365 229 762 749 402 235 438 275 512 451 382 199 361 313 708 286 372 395 262 334
 298 514 384 305 336 367 329 643 346 387 667 270 194 217 368 319 449 443 263 177 267 695 725 296 295 452 323 661
 338 354 214 310 259 320 293 627 218 719 765 398 675 230 299 419 603 294 770 135 265 210 625 242 351 543 254 260
 226 606 551 131 206 207 723 480 756 266 208 138 219 307 330  66 751 757 269 373 166 753 555 221 300 471 247 707
 224 739 172 245 238 246 724 744 360 277 538 289 560 237 249 292 776 750 112 209 733 181 283 174 530 717 179 212
 239 534 709 317 302 268 545 491 154 726 222 188 714 315 168 133 768 220 187 736 216 761 718 720 228 125 146 140
 124 774 341 196 666 759 522 618 117 169 233 136 205 103  67 193 463 191 157 780 696 745 782 693 665 331 106 158
 129 612 383 760 180 251 163 484 171  73 178 648 586 766  91  46 660 741 613 105 149 640 767 781 645  45 252  71
 119 700 118 779 104  76 598 116  89 553 134 107 687 213  41 775 633 548 475 629 677 203  88 783 710 676 227 132
 764 722 123  48 190  59 652 128 563 127  83  94 621 697  87  99 698 589 164 713 729 597 518 185 763 499 403  75
  90 664  96  58  79  47 637 121 145 657  85 711 734 622 102  78 591 773  27 631 685  36 498 716 769 595 701  42
 742 732 150  53 137 659 602 630 111 694  64 114 702 771  92 143 575 186  55 772 747 110 120 184 755 561 101 428

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00598e+07us (= 10059.8ms, 10.0598s)
Satisfaction error: 1
Number of search iterations: 3462
Number of local moves: 1138 (including on plateau: 418)
Number of local minimum: 298 (including on plateau: 49)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 63 390 192 43 8 11 34 18 32 54 426 416 532 409 458 410 512 443 770 373 733 761 782 781 710 499 701 428 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 782 753  19  32 775 537 570  47  56 781  65  59 410 562  42 134 772 783 683 568 219 774  84  85 225 506  34 633
 767 732  29  80 111 404  60 776 249 644  49  63 687 742  91 168 119 784  67  57  66 779 572  61 626 714 777 716
 657  71 197 705 720 101 151 727 102 629 107  95 710 717 712  87 607 378 137  99 118 623 110 750 215 619  82 764
 386  89  78 621  90 150 484 456 675 616  45 156 660 551 557 143 577 124 780 125 635 569 133  96 759 771  33 631
 686  68 117 747 446 707 159 416 282 146 106 208 770 622  37 502 769 232 743 292 154 642 157 306 130 690 145 711
  79 199  62 605 149 697 740 235 104 656 245 180 491 688 210 177 533 186 730 709 699 188 768 194 472 251 169 574
 171 176 233 566 265 214 209 462 203 541 349 195 708 719 216 236 685 253 735 726 696 620 206 166 120 501 191 628
 358 135 252 695 264 576 243 691 220 238 371 485 382 207 283 274 139 153 703 173 778 271 320 189 682 765 525 618
 277 185 353 723 302 183 174 721 542 761 218 155 751 316 288 259 756 161 512 676 550 702 147 109 162 193 239 575
 467 339 346 559 136 247 304 190 554 603 229 108 665 196 250 129 228 317 758 391 272 700 132 645 725 718 278 504
 526 395 158 766 211 223 262 486 374 773 301  94 493 352 201 503 373 384 630 287 611 263 310 359 552 330 202 571
 659 363 560 624 242 294 212 222 328 255 204 553 514 275 321 377 323 345 509 713 327 308 354 419 477 324 261 627
 285 457 348 286 396 347 303 356 179 187 455 368 733 298 295 483 760 340 335 412 417 443 487 421 379 338 318 564
 297 495 507 311 332 366 522 365 319 266 439 516 276 351 406 454 293 473 425 299 444 398 269 492 389 460 511 315
 392 535 331 361 381 372 376 367 545 600 461 357 227 434 305 375 254 344 369 475 397 517 548 355 267 399 258 388
 114 615 497 231 523 681 459 453 441 431 490 270 224 469 448  39 408 539 452 407 256 326 423 362 234 449 489 260
 515 405 479 350 505 608   6 390 481 400 422 213 463 284 532 609 343 531 279 380 527 432  17 172 333 370 530 414
 138 325 599 281 556 424 471 588  40 342 435 428 415 529 543 478 438  76 420 440 430 418 401 433 468 450 336  88
 309 641 524 385 230 597 500 103  48  24 612 593 445 337 494 341 466 488 257 394 498 244 731 590 100 290 508 241
 334 610 540 291 521 437 652 442  28 402 671 482  93 182 464 591  70 555  55  30 314 465 427 647 476 429 561 221
 307 662 534 122 602 565 538  12 583  50 581 582 126  86 567 436 411 520 226 496  97 594 573 680   2 393 518 127
 470 679 636 273 596  11 413 519 586 240 510 614  75 116 589 513   4 549  21 200  43 313 749 693 722 131 648  77
 649 667 728 123 595  25 528 246 601 329 592 604   1 684 638 585  58 674   7 547 458 113  31 536 205  35 658  73
 578 598 546  74  14  69 661 144 587  38 763 637  44  18 584 639 650 678 409 632  52 115 755 387 634 105 563  16
  10  22 689 426 613 654 653 447 754 248 148 748  83 170 451 300 140 673  54 606 655   3 724 694 499 383  15 128
 672  46 360 121 737 580 579 558 744  13 739 729 217 142  23 762 668 280 184 403 474  53 643 322 178   9 734  20
  64  51 617 268   8 757 669  27 701 152 736 752 167 237 698 704   5  72 312 289 640  81 738 715 663 175 666  26
  41 677 651 364 670 164  92 544 664 625 646 746 160 706 745 692 141  98 198 165 163  36 181 112 296 192 741 480

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00589e+07us (= 10058.9ms, 10.0589s)
Satisfaction error: 2
Number of search iterations: 2501
Number of local moves: 1017 (including on plateau: 434)
Number of local minimum: 181 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

Problem in column 11: 65 49 107 45 106 245 349 371 218 229 301 204 455 439 461 490 422 435 612 671 581 510 592 763 148 739 736 646 => the sum is 10989 rather than 10990
Problem in column 20: 568 57 99 125 292 709 726 173 676 391 287 713 412 299 475 407 380 440 394 30 496 200 547 632 606 403 289 165 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 294 618 711  51  55 668 115 640 718  85  17 550 771 134 164  90 669  12 748  39 741  73 692 780 685  10 100 760
 108 690 247 782  72  69 111  64 746 460 157 689 774  65  98 616 676 674 729 779 675  57  94 768 146  46 444 154
 186 595  29 145 636  70  83 206 600  79  78 661 683 101  47 432 747 591 697 527 700  62 647 773  37 777 752  49
 758 122 143 776 163 176 623 165 767 216 125 533 564  41  99 582 696 483 727 594 660 772  60 161 178  54 650 102
 189 129 608 179 778 124 159 141 781 105 113 728 723  33 103 486 745 572  96 709 687 118 516 784 148  93 750 393
 135 719  61 200  80 740 218 109 629 123  44 762 211 227 521 714 634 194 185 622 678 120 775 593 633 114 589 360
 150 735 147 654 195 184 710 156 619 183 274 241 168 293 171 644 684 155 601 631 592 783 520 121 172 210 495 502
 209 224 651 192 256 580 173 754 712 198 203 295 167 174 445 635 204 655 229 499 667 328 665 234 456 169 672 344
 182 193 612 769 175 199 226 244 653 742 233 395 287 181 385 726 309 666 530 435 261 282 230 310 259 335 749 422
 339 285 605 253 330 316 219 284 463 744 279 381 332 214 277 682 271 707 590 458 258 272 313 318 567 266 243 724
 315 370 251 351 341 275 317 280 490 312 371 350 319 265 257 534 249 736 657 447 260 324 757 326 656 301 321 558
 236 305 299 349 220 286 291 394 473 358 254 449 342 544 239 267 518 504 688 536 354 264 441 508 376 281 648 566
 367 415 404 298 446 382 352 417 461 300 500 250 268 308 477 366 343 472 338 606 470 340 406 368 245 288 738 365
 419 375 386 543 412 379 292 433 577 431 425 273 399 389 443 462 374 356 246 487 320 359 276 346 439 347 430 372
 331 363 353 364 329 336 378 408 304 383 426 427 322 345 333 474 471 373 387 397 420 407 528 302 448 489 440 452
 327 384 390 401 361 587 485 400 213 424 411 403 396 475 263 325 497 524 232 297 507 416 451 369 421 428 402 201
 414 388 514 488 454 355 478 413 238 480 479 217 450 498 225 270 513 409 503 311 481 493 405 418  89 455 392 160
 510 519 476 357 539 348 526 398  38 494 362 559 563 552 468 180 306 296 377 337 467 465 158 434 410 506 130 215
 469 573 466 557 538 197 610 585 196  59 584 442 532 453 515  91  23 242  92 255 517 438 190 505 501 553 599 208
 546  52 555 140 512 614 598 561  20 549 540 482 511 638 290 133 491 110 509 429 496 568  56 529  40 548 170 303
 380 579 545 547 522 677 571   1 464 551 604 484 637 560 562  16 457  21 492  53   3 437  77 588 248 639  13 262
 554  36 581   7 706 625  35 569 252 459 576 212  48 626 621  22 575 583 537 207 231  31 177 574 649 642 240 615
 743 535 221 556 531  28 686 627  14 662 541 119 641 525 617 152  58 126 237  75 131 716   5 680 323 645 117 679
 613 542 132 222  18 630 602 699  82 673 586  66  71 565 705 149  50 278 436 289  15 670 659  84 632 703 223 596
 628 144 205 391 702 597 698 658  76 334 607 730 523 663 643 235 228 283   9 106  67 722 314  34   6 609 107 671
 764 191   2 753 751  19 652 624 116 166 704  25  95 693 570 423  97 269  26  74 138 725 733  30 708 734 142 766
 720 756 701 578 137 770 646 717 202 681 732 139 112 715 691 620  63  88  24 603  32  27 151   8 755  11 307   4
 104 153 695  87 731 759 136  43  86 739 765 128  81 713 761 664  42 611  68 188 162 721 694  45 763 737 127 187

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.34289e+06us (= 5342.89ms, 5.34289s)
Wall-clock time (full program): 5.40134e+06us (= 5401.34ms, 5.40134s)
Satisfaction error: 0
Number of search iterations: 898
Number of local moves: 645 (including on plateau: 212)
Number of local minimum: 40 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 626 602 548 671  99  38  47 729 766  41 135 739 768 755 781 340 752  64 302 231  72 136 595  42 124 692 267  28
 657  30 725 718  15 679  19 746  60 373 307 711 769 645 643   8 772 767  21  75  13 456 700 199  16 715  45 106
 652 152  34 764  17  33 298 736  53 305 174 697 637 633 248  10 759 738 123 222 393 212 763 672   3 714 644 304
 206 563  24  51 110 166  50 653 670 359 138 635 732 589 288 561 540 600 622  46  52  22 564  29 702 586 713 719
  26 105 721 669   1  35  84 654 579  12 404 605 625 344 237 323 661 649 709  62 660  63 760  27 557 219 583 616
  32 162 684 761  89  37  56 647 656 252  97 650 619 646 431 457 701 629 367 284 128 250 676 145   9 232 610 683
  39  55 517 556  14 743 204 601 630   6 551 520 659 377  83 494 584 641  31 499 358  48 247 220 593 338 734 648
 609 313 634 490  43  23 112   5 613 269 631 514 694 225 536 532 500 640 606 549 157 332 257 439 543  82 444 198
 596  44 433 588 504 592 580 449  11 158  49 435 539 498 102 491 319 571  54 531 565 502 353 667 441 266  74 578
 463 195 495 617 132 527 572 559  18 427 163 538 545 324  91 278 422 462   2 489 642 161 585 528 440 196 552 568
 414 484 482 518 429 533 591 496 535 262 300 570 426  36 107 365 599 400  94 507 190 475 167 467 447 141 560 395
 638 550 343 371 301 342 411  20 403 352 382 468 322  71  86 350 503 472 512 566 558 509 445 420 505 155 511 424
 397 487 547 334 392 461 430 407  81   4 434 497 474 555 525   7 417 419 448 378 409 402 526 537 418 275 383 346
 476 413 309 425 493 396 361 387 454 318 394 362 501 460 513 386 446 673 523 255 364 331 142 308 261 336 412 291
 289 134 432 379 554 398 390 469 274 345 423 391  40 573 594 483 488 436 360 406 385 442 310 486 372 349 459 329
 416 264 381 320 466 337 330 408 207 624 380 182 280 680 621 597 294 265 356 443 399 706 201 369 470 452 296 246
 357 415 218 314 438 272 226 510 455 516 311 297 328 567 691 238 465 401 270 303 333 607 453 480 348 698 230 249
 366 608 368 354 389 428 315 325 200 541 745 370 183 582 530 754 173 215 727 197 194 451 546 187 191 665 211 175
 160 276 292 363 682 471 244 242 295 712 663 254 279 524 553 216 282 227 771 224 388 184 581 299 233 562 762 251
 164 675 236 143 664 177 628 235 655 544 651 223 210 268 574 283  77 374 542 780 473 263 181 689 316 312 327 326
 144 707 355 165 506 253 321  92 335 668 735 347 285 421 339 213 306 229 137 271 569 519 708 273 753 576 286 477
 724 351 757 140 481 188 618 241 192 529 632 245 228 492 611 217 126 154 750 758 205 776  68 756 147 375  98 131
 208 666 341 186 720 744 705 281 522 604 485 153 129 209 587 256 214  61 704 178 202 458 156 696 730 384 189 221
 159 747  85 171 773 678 782 103 260 615 695 239  93 133 577 258 117 168 172 740 521 716 450 778  80 405 185 290
 723 515  73 169 733 240 614 180 259 699 176  58 277  57 376 693  95 234 623 150 590 464  59 603 662 784 119 765
 636 627 685 108 688 751 687  78 748  88  66 114 113  69  25 674 203 287 508 639 783 130 293 148 737 243 741 121
 620 101 125 575 478 726 703 139 317 686 690  67 115  87 151 731  79  65 122 770 677 658 100 116 774 111 479 728
 193 749 146  70 779 722 612 598 742 681 179 109 120 170  90 775  96 149 534 437 710 717 104 410 118 127  76 777

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 2
Number of search iterations: 2929
Number of local moves: 840 (including on plateau: 276)
Number of local minimum: 252 (including on plateau: 35)
Number of resets: 1
Number of restarts: 0

Problem in row 10: 463 195 495 617 132 527 572 559 18 427 163 538 545 324 91 278 422 462 2 489 642 161 585 528 440 196 552 568 => the sum is 10991 rather than 10990
Problem in row 23: 208 666 341 186 720 744 705 281 522 604 485 153 129 209 587 256 214 61 704 178 202 458 156 696 730 384 189 221 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 535 728  60 715  47  88 168 511 526 167 625 189 116 577 144 641 635 708  30  82 696  46 671 621 706 775 124  59
 674 784  35 157  14 549 692  85 636 181 570  65 112 661  21 763 613 733 493  57 739  52  37 544 597 353 725  48
 654 778 781 109  22 605 114 153 707  68 698 209 173 673  41 660 445 628 134 110 281  42 617 678 583 192 639 196
 722 102 180 652   8 581 575 246 603 143 202  50 108 234 201 455 559 748 126 253 664 117 494 770 573 702 776 146
 758 762 120 194 414 689  67 118 644 183 705 233 208 567 244 723 681 741 212  56 633 113  98 766 612 187  92 170
 783 237 155 302  62 473 185 177 714 122 701 601 151 663 319 277 538 729 193  84 240 169 624 582 780 756 198 175
 693 777  51  80 119 505 137  40 569 174 768  96 125 703 200 737 772 699  72 172 528 751 649 782 154 236 243 158
 754 156 313 264  55 665 171 512 732 254 686 279 205 726 101 710 378 260 190 163 135 560 731 564 218 685 206 317
 541 197 250 373 280 290 432 207 514 141 525 138 191 736  53 697 779 257 220 398 614 312 755 533 232 709 321 295
 283 322 215 630 352 694 285 239 391 471 284 252 348 222 214 590 529 369 629 188 730 404 516 565 413 311 262 282
 223 334 308 611 460 310 354 140 713 449 646 159 320 216 389 492 594 217 258 296 381 259 721 545 454 438 412 291
 292 271 241 676 249 747 152 228 547 270 299 774 394 357 407 422 462 327 298 265 690 332 510 542 342 318 351 227
 410 343 370 363 286 393 434 238 337 368 345 771 765 366 440 442 446 367 346 225 247 382 491 416 365 392 379 263
 245 203 304 326 372 773 272 476 307 300 356 362 388 655 405 421 680 195 301 595 358 269 520 489 408 335 347 328
 315 360 324 401 481 230 532 479 139 428 459 294 498 437 591 518 255 461 386 482 487 457 309  19 361 418 450 419
 383 406 330 444 123 463 423 509 593 349 329 500 186 433 376  76 359 267 466 531 496 293 519 287 400 384 587 478
 439  71 483 551 427 397 430 338 325 331 480 306 553 456 425 417  95 350 499 429 488 469 224 288 452 231 436 600
 385 555 395 470 539 256 411 485 129 426 371 557 508  73 409 447 133 402 475 443 204 468  90 276 546 502 278 757
 387 458 521 536 472 199 323 622 374 540 522 420 474 210 248   6  66 501  27 507 656 688  45  86 566 451 599 486
 235 554 610 534 618  89 396 453   4 179 506 448 377  61 598 164  99 589 399 464 150 672 355 336 691 465 441 503
  38 572 561 515 669  36 524 606  69 585 182 390 615  29 517  43 305  16 627 495  54 537 161 289 638 643 556 718
 221 608 651 275 683  94 568 403 100 759 130 562 527  44 574 145 162 131 645 530  79 261 316   9 623 657 571 662
  97  93 647 251 552   1 579 375 219 667 176  70 586 344 626 314 380 620 543 716 650 596 273 132  31 136 578 738
 105 558 504 653 727 103 752 637 303 666  20 609 513 604 760  26 229  10 640 588  83 548  78 435 127 128  34 550
 106   5 717  23 670 616 584 675  32 658  81 497 746 484 749 184 415  63 668 677  64 580   3  25  18 297 642 711
 211  17 659   2 769 268 740 592 340 761 213 764 477 160 631 115  74  24 742 719 266 576 467  12  33  91 619 648
 424 107 523 148 753 634  11 712 274 743 104 700 724 178 563 166 142 431 684 745  13 704 226 341  28  87  75 750
  77 632 682 735 767 242 679 734 149 607   7 695 602 121 744 339 165 147 687 720 364 333 490  58  39 111  49  15

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.94108e+06us (= 5941.08ms, 5.94108s)
Wall-clock time (full program): 5.99997e+06us (= 5999.97ms, 5.99997s)
Satisfaction error: 0
Number of search iterations: 1053
Number of local moves: 658 (including on plateau: 187)
Number of local minimum: 48 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 759 730 767 161 512  86  88 664 762  77 122 676  17 729 707  59  49  28 105 732 616 115  94 721 777  71 137 629
 481 776  34 761 589 106 735 688 587  46 110 772  82 651 627  79  68  72 130 530 667  48 149 783 242 335  62 780
 568 693  55 172 197 766 578 697 436  21 537 728  67 603 637  98 101  78  89 660 702  60 607 769 764  50 173  84
 725 523 112 433 583  80  56 487 773 209  91 768 120 199 585 502  73 208 154 743 731 146 705 782 781 124  83 214
 619 267 213 190 775 550  87 642 677 131 138 658 140 108 737  93 129 139  85 666 596 771 553 770 255 169  58 774
 253 116 300 191 756 289 203 542 630 132 117 670 262 102 621 362 143 206 434 717 734 594 506 236 432 652 128 662
 751 195 157 119 233 142 703 205 554 134 113 552 226 709 310 465 392 109 165 654 277 738 329 755 659 356 343 645
 683  90 256 240 757 228 160 763 601 178 224 566 268 323 608 473 158 180 765 318 752 718 477 222 202 313 181 286
 534 123 407 257 153 758 261 231 779 273 326 618 189 686 259 631 747 429 311 563 740 229 282 336 260 125 188 295
 748 166 381 170 305 559 245 239 539 784 303 714 179 194 331 623 321 324 778 647 449 225 293 480 230 330 187 246
 669 223 271 309 241 719 285 441 522 306 744 270 150 348 339 592 347 540 635 314 319 249 291 350 294 467 360 395
 269 372 337 287 649 628 247 369 475 388 448 152 440 248 272 586 760 338 332 622 396 341 724 266 200 258 288 298
 640 280 428 292 312 243 754 307 610 414 358 397 463 421 353 375 379 453 391 445 401 234 389 232 457 340 387 235
 221 252 459 415 377 476 439 456 227 469 354 491 317 384 452 517 367 458  31 422 349 417 426 544 437 435 501 297
 320 479 299 278 413 386 352 399 495 368 425 450 351 342 363 521 410 301 355 383 490 328 412 474 486 333 361 416
 524 418 359 371 357 497 430 378 144 402 275 376 263 408 543 250 364 365 557 455 304 380 284 403 516 472 334 561
 276 393 447 400 385 198 398 485 462 419 573 217 648 471 478  41  20 454 496 404 366 615 584 316 451 204 443 346
 444 460 420 390 220 219 556 532 185 549  70 484 468  74 483 424 644 509 519 186 411 574  33 406 196 582 514 438
 148 526 470 500 538   2 529 175  44 505 692 215  65 499 602 283 597 442  92 183 409 541 536 482 345 520 504 546
  57 394 508 545 614  10 515  63 302 492 423 141 605 528 593 466 598 663 531 238 327 489   9 127 620 569 510  53
 164 617 533 461  75 264 555 136 168 265 599 177 655 560 493 551 591 612 244  42  76 661 513 167  22 750 575 464
 211 446 565 726  32 488  23 176 210 624 535 405 712 155 151 571 626 547 118 427  30 511 581 207 564  18 656 675
 325 609 518 710  97 576 494 570 315 639 606 162 690   3 159 218 212 722 296 174 251  39  81 579 674 695 562  14
 237 672 613 646 708 374 548  26 133 527 503  52 745  37  15 344 431 715 706 121  11 671 107  12  19 673 633 711
 104 590 698   6 192 281 600  24  99 498 665 126 680 689   4 274 638 733 611  51   7 625 558  45 193 694 701 604
 114 525  35 641 567 687 382 507 163 741 634  61 699 679 201 308 580 668 636 145 370 254  36 147 111  96 713 290
 103   8 691 577 182 678 727 216  69 653 632  54 736 156   1 696 650  16 720 135  25 322 749 100 739 643 685  27
  43  47 657 742 171 700  40 572  29 746 373  38 753 684  66 588 595 681 704  13 184  95 682 279  64 716 723   5

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.7295e+06us (= 7729.5ms, 7.7295s)
Wall-clock time (full program): 7.78788e+06us (= 7787.88ms, 7.78788s)
Satisfaction error: 0
Number of search iterations: 1742
Number of local moves: 749 (including on plateau: 282)
Number of local minimum: 139 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  47 550 658 657  30 614 188 734 740 302  87 283 761  31 726  84 375 103 110 705  17 664 208 670 596 697 107 246
 723 686 663 618 250  41 207 683 688 650  68 330 692  95 331  23 655  20  85 695   2 203 631 700 209 713 190 139
   4 662 487 711 609  78 432 750 735 136  54 338 739 254 729  26 377 198 170 717 150 121 588  14 719 467  82 643
 706 649 232 625 178  18 448 701 679 606  86 635 757  52 722 639 627 167   6 134 216 223 430 273 372 584  98 127
 561  25 674 144 399 569 556 463 685 646   3 172 676  79 293 140 645  40  72 720 267 486 434 678 328 580  43 612
 669 660 156 653  37 583 587 451 599 604 559 162 424 112 197  60 545 632 261 675 114  12   8 595 228 638 615 154
 489 529 567 565 245 484  51 603 415  10 124 597 532  27 215 673 586 491 544 535 287  11 640 547 262 564 138 259
 468 537 536 530   7  59 515  33 636  28 570 521 278 581  97 161 600 698 206 548   5 496 457 671  67 541 611 533
 628 616 514 523 607 577 493 554  44 613 500  13 512 153 125  71 562 522 373 506 345 509 193  15  64 534 248 576
 665 481 578 624 117 593 557 507 402   1 508   9 575 454  16 473 594 450 118 497 398 591 288  21  55 510 452 456
 400 553 446 409 617 592 179 519 366 598  69 370 654 488 131 417 309 200  96 476 316 371 538 382 318 393 472 311
 619 540 412 551 418 518 289 360 333 443 362 414 458 543 128 482 395 404 378 364  22 386 229 480 177 469 361 455
 297 428 433 436 520 462 525 563 460 445 574  81 444 369  61 546 620 503 498 423  73 477 160 189 101 359 427 516
 504 439 381 459 524 285 384 475 282 343 344 425 449 471 357 499 411 435 385 317 231 350 355 394 390 408 240 453
 492 416 555 464 461 322 337 403 347 276 321 474 483 212 349 380 495 352 314 422 280 441 264 227 502 765 340 296
 505 196 699 490 332 305 712 237 401 387 406 265 392 313 365 367 376 152 183 271 558 442 244 260 687 758 389 298
 299 269 437 165 234 312 251 438 326 308 391 320 501 379 336 383 730 310 407 335 708 388 549 753 539 225 405 292
 263 413 346 410 274 421 668 368 284 363 341 642 239 323 656 275 257 334 485 174 689 327 680 300 572 266 325 295
 191 233 342 315 748 241 218 243 304 746 256 195 374 542 666 129 230 221 610 236 707 749 747 202 667 426 279 173
 356 166 281 187 629 147 560 249 693 146 513 724  75 204 703 220 217 222 783 772 566 277 573 141 552 201 651 182
 253 348 219 258 644 159 764 181 307 716 192 782 130 186 531 301 324 148 622 440 358 294 447 647 397 242 781 319
 291 149 205 213 194 120 760 568 151 682 351 270 123 733 601 286 115 721 303 353 776 742 478 168 470 185 710 272
 119 155 133 329 171 754 164 100 226 106 770 752 176 702 465 755 247 517 479 252 511  65 771 157 589  32 727 766
 180 145  38 306 731  57 104  53 135 105 605 608 268 738 582 780 158 725 621 142 672 762  62 773 585 113 199 743
  94  56 255  74 419 528  89  42 526 184 732 169 163 756 116 681 111 774 775  35 737 684 626 677 238  48 634 767
  92 224 571  90 633 715 108  39  58 214 741 431  36 769 602 784 175 235 690  77 527 763 290 354 210 143 778 641
 736 777 109  93 751 691 718  83 102 709 759 429  45 696 494 694 122 648 637  99 714 137  76  50 466  80  29  46
 339  88  63  91 211 745 126 590  66 623 704 579  34 728 396 661 132 768 779  70 744  19  24 652 630  49 659 420

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.03362e+06us (= 4033.62ms, 4.03362s)
Wall-clock time (full program): 4.09289e+06us (= 4092.89ms, 4.09289s)
Satisfaction error: 0
Number of search iterations: 700
Number of local moves: 494 (including on plateau: 134)
Number of local minimum: 38 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 287  99 586  32 693  68 752 640 128 745 695 304 135 756 692 750 646 707 248 649 111  96  94  65  49  56 150 757
 112 355 436 673 540  11 751 230 103 721 297 674 210 761 587 349 569 267 683  76 289 716  62 585 147 165 475 146
  12 622  31  25 549 685 725   4 286 680 671 783 249 668 764 714 577  15 638 213 106 104 180 701   5 652  72 259
  67 777 590 172 123 706 504 686  10 679 739 729  71 675 718 703 322  64 720  16 592  19 261 472  82   2 477  14
 234 645 502 192  33 754  58 514  41 678 747 532 300 563 748 487 662  91 663  37  80 486  47 163 654 556 484  39
 236 231 535 198 434  22 252 705 710 353 648  23 281  42 136 575 733 753 614 565  27 670 240 709 181  43 424 650
 621 641 415  50 516 568 113 653  17 468  38 588 226 102 562 538  30 547 732 608 498 557 479  40 610 189 408 176
 242  36 124 280 552 609 647  18 728 782 203 759  35 182 781 499 455  34 698 263  95 465 166 664 702 470 133 368
 500 522 125 222 574 682 131 531 414 450 288 398 731 214 451 632 274 114 521 596 449 421 227 512 669  87  51 204
 520 374 127 243 482 526 741 561 541   8 388  29 567 505 597 279 418 515 266 229 619 459  73 513 546 456 395  13
 467 385 138 273 141 620 354 425 340 598 746 416  86 485 528 616 232 458 643 167 118 363  93 580 572  53 551 542
 422   1 149 373 583 558 510 175 519 139 566 447 396 316 333 715 548 420 478 154  21 318 488 589 494 469 216 593
 352 625 310 209 509 576 382 351 427 346 357 544 359 338 377 378 489 523  24 276 481 412 168 554 530 491 312 290
 199 452 511 432 341 483 413 473 369 315 517 294 493 330 410 162 384 331 239 443 744 308 453 461 367 617 115 334
 361 433 431 644 555 292 379 328 442 371 380 496 446 463 387 466 397 260 423 201 391 258 323 419 320 407 411 306
 506 326 437 435 527 296 573 291 613 394 272 445   9 393 360 627 348 364 256 375 417 350 642 218 307 311 444 454
 358 129 606 559 207 460 428 594 773 313 275 406 501 601 197 262   6 457 344 471 490 299 571 184 365 342 383 409
 293 329 595 697 372 740 246 708 325 495 356 191 518 164 324 215 327 126 257 402 270 604 476 448 177 366 430 539
 381 335 600 524 284 217 317 302 179 462 105 282 735 264 480 225 206 784 778 195 400 200 690 271 570 309 152 743
 630 121 689 560 298 245 624 347 194  57 345 244 187 770 285 159 235 599  59 755 268 337 779 401 278 536 228 760
 303 591 474 618 404 130 238 376 254 507 301 343 537 155 119  48 508 205 666 255 749 295 681 661 336 639 156 441
 687 185 250 623 122 220 545 277 265 223 780 440 171 628  66 543 224 602 157  79 362 774 726 101 193 389 667 691
 584 370 742   7 132 211 399 651 153  75 247 332 582 676 321  46 700 390 492 658 655 174  78 253 148 615 611 688
 723 212 208 629 776 151  69 314 767 438 145 221 626 160  97  63 173 525  85 635 283 637 503 717 439 564 713 117
 762 768 636 158 237 722  84   3 550  54 305 758 672 403 386  98 100 196  74 696 581 169 737 202 771 143 665  60
 657 161 464 734 116 110  26  92 738 497 140 170 727 107  20  44 684 339  89 677 578 724 694 190 108 765 603 736
 241 660 137 772 178 251 659 188 405  81 319  90 711 186 219  28 634 529  88 766 612 144 633 134 607 719 730 269
 233 605 142 656 712  77  70 553 699  61 120  52 429  83  45 769 109 775  55 533 704 631 426 183 763 579 534 392

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.93747e+06us (= 8937.47ms, 8.93747s)
Wall-clock time (full program): 8.99627e+06us (= 8996.27ms, 8.99627s)
Satisfaction error: 0
Number of search iterations: 2470
Number of local moves: 925 (including on plateau: 361)
Number of local minimum: 205 (including on plateau: 37)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 200 118  27 669   5 662 659 263 496 674 110  31  47 728 272 609 735  85 230 766 605 727 744  59 221 673   9 566
 720   4 112  23  52 714 713 730 715 141 157 198 197 357 678  66 754 607 323 621 434 664 598  43  48 651  14 656
 387  20  95 650  26 350 699 558 749  83 385  15 675 520 411 277 475 740 121 646  37 724 681  71  63  24 761 747
 538 716 156 424 647 591 758 117 672 314 217 615  64 658 670  18 576 251 126 545 332 765  17 174  19 711 265  34
 627  41 706 626 103 592 486 780  51  65  12 269 649 599 641 222 696 575 150 438 488 689  87 309   6  56 275 752
 339  74 155 284 625 527  21  58 371 523   7  92 551 608 668  80 474 614 742 623 588 560   1 210 199 635 679 682
 170 205 142 577 559 629 162 590 624 158  42 115 619 571 631 617 550 595 252 129 283  16 593  73 144 698 633 613
 167 483 685 503 663 717 686  25 554  84 536 612 622 528 511 195 444  28  49 201  30 436  11 139  62 677 655 687
  36   8 537 311 522 680 568 509 657 533 356  78 506 540 697 116 652 355 299  29  10 508 546 223 194 531 581 408
 519 585 471 653 441 564 480 448 442 247   2 278 447 563 504 301  35 308  55 358 597 497 429 219 125 516 419 487
 694 214 517 395 465 102 636 394 213 407 764 463 569 427 470 331  90  82 152 459 376 344  60 187 524 665 478 512
 648 574 211 294 166 610 562 544 515  89 239  68  93 482 403 466 507 505 274 109 122 500 642 245 768 229 644 481
 565 402 431 490  98  33 476 341 409 392 337 530 401 676 159 319 549 128 783 445 781  79 430 386 477 382 437  54
 485 457 458 688 418 472 404 484 292 383 398 456 340 414 455 242 469   3 351 375 388 282 420 384 367 347 368 390
 131 324 639 391 379 439 782 202 364 264 454 743 440 493 316 280 286 227 295 258 584 366 468 695 410 172 226 362
 377 365 372 343 359 443 218 449 342 446 412 363 769 352 425 460 304 302 739 338 452 346 473 421 243 216 336 325
 718 561 307 667 306 360 373 534 513 423 235 426 241 236 400 710 168 723 334 215 435 310  50 547 255 381 234 328
  94 396 291 315 353 327 354 290 228 611 762 722 244 188 397 189 256 654 492 587 370 297 322 660 606 462 261 262
 616 406 182 276 137  45 279 453 417 700 416 330 389 287 300 329 451 270 529 212 643 378 374 510 632 594 708 127
 296 725 289 193 209 268 130 779 491 248 712 164 333 231 312 778 580 281 570 601 318 246 413 620 645 119 206 233
 583 464 709 175 701 190 257 181 494 259 250 552 763 173 204 271 288 161  76 777 618 335 345 774 604 240 433 113
 254 543 237 132 320 399 548 171 146 759 526 305  75 176 154 755 225 731 498 733 348 303 666 628 634 298 293 133
 521  96 220 321 185 432 111  91 285 736 693 317 260 690 191 721 405 224 734 207 572 532 750 661 640  86 232  77
 422 683 707 586 705 183 184 467 138 238 178 767 149 180 145 684 169 703 760 273 501  61 136 428 704 369 203 267
  46 326 179 745 776 249 196 489  72 732 737 557 186 165 177 753 151 143 582 163 361 101 160 518 637 266 772 751
  13 738 784 107 729  57 140 589 135 415 756 691  81  69 542 253 553 380 514 602 114 100 535 479 567 775 124 148
  67 770 771  99 539 208  38 105  32 525 556 630 578  40 134 555  44 596 499 192 108 153 726 748 746 120 638 773
 757 692 600  53 502 147  70 349 573 541 741 603 702  39 123 393 104 719 461  88 495 671 313 579 450  97 106  22

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00594e+07us (= 10059.4ms, 10.0594s)
Satisfaction error: 1
Number of search iterations: 2458
Number of local moves: 1014 (including on plateau: 393)
Number of local minimum: 207 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 566 14 24 19 309 1 16 30 29 55 82 507 319 455 493 769 426 762 700 491 181 548 432 705 745 784 770 757 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  44 773  90 145 764 767  69 743 608  84 523  26 538 130 121 165 771 424 679  49  24 408  67 719  46 691 760 762
  43 493 680 439 757 766 428 128 678 548 780 718 753 156  81 106 730 134 765  83 245 131  74 107 163 707 172 125
  45 621 688 779 596 640 148 108 447 709 602 129 750 208 119 229 639 566 748 261  65 102  36 190 199 461 725 180
 118 693 181 770 670 697 591 437 374  50 153 234 740 111 781  22 265 636 700 138  30 124  42  64 717 769 763 120
   7 702 404 506 471 735 654 117 227 203 671 270 754  88 104 217 105 262 468 603 777 178 221 738 132 739 550  87
 274 687 633 413 659 619 758 218 755 149 225 665 166  48  57 206 749 398 737  60 196 116 782 186  75 583 322 254
 296 663 712 778 690 774 761 136 512 235 155 161 292 247 272 243 266 578 567 297 276  97 392 175  98 500 716 101
 141 267 713 271 589 597 519 744 230 570 576 664  92 187 115 127 152 610 672 194 692 311 238 334 293 638 239 215
 721 197 330 601 480 419 288 280 701 182 622 269 784 310 250 184 189 629 263 745 722 216 326 173 139 482 255 233
 114 154 283 507 511 504 704 210 729 696 167 200 463 339  53 460 257 776 321 183 279 171 185 177 756 759 772 260
 454 624 783 251 466 246 630 242 281 294 768 360 361 278 273 264 495 340 616 414 388 342 191 302 133 496 384 314
 370 204 320 417 534 214 303 289 213 328 426 440 431 290 349 353 695 554 300 553 541 256 391 467 258 609 540 345
 517 724 359 287 525 228 319 728 162 381 306 318 336 652 364 313 432 406 407 298 223 458 286 399 365 462 403 332
 479 486 524 307 459 341 333 259 472 430 317 368 393 201 705 470 344 351 358 595 356 375 383 275 444 226 202 537
 400 421 412 305 350 343 331 484 558 382 282 544 415 249 452 236 315 327 448 427 513 474 143 455 483 385 338 518
 497 308 443 515 192  91 423  40 140 501 510 367 433 386 543  32 488 435 582 411 552 562 395 666 377 150 535 416
 644 325 380 277 241 516 442 410 109 438 355 352 390 528 441 478 436 387 354  33 409 394 489 587 632 240 369 335
 323 509 494 158 373 188 366 547  66 531 299 572 465 456 378 418 588 103 211 490 491 580 581 529 401 207 144 521
 625 446 561 113 301 485 160 473 193  11 147 372 434 605 598 457 557  62  13 569 453 626 481 568 533 112 532 503
 476 502  19 198 316 232  37 464   9  51 651 397 449 563 586 674 379 179 252 376 681 520 703 645 526  56 498 551
 565 329  52 362  55 445  25  34  73 653  72 612  59 527 573 710 577 487 110 635 337 451 604 549 522 371 555 646
 389  27  70 220 169 425 348 733  82 571   6 643 614 469 508 657 686 284 405 618 539  94 623  41 545  80 402 742
 658 164 285 159  35 212  77 505 715 579 631 222  31 530  68 668 477  20 209 699 682 727 499 676 611 122  15 714
 667 174 564 711 396 168 475 708 698 244 304   4 429 617 607 590   5 268  29 542 205 694 593   2 662 123 450  61
 574  14  12  10  21 176 685 673 420 237 592 613   1 720 599 594 137 291 170 706 584 628 637 656 347 146  99 648
 536  93 422 736 295  76  39 649 357 641  86 647  38 683 627 642 142 585  58  79  16 634 675 600 195 556 157 726
 650 312  17 100  28  23 731  71 689 677 669 514 126 661 620 723  18 747 224 248  54 775 734 135 606  89   8 741
 363  78 559 655  47  63 346 560 492 615  95 309 253 751 746 752  96 151 324 684 660 546 219 575 732 231  85   3

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00031e+07us (= 10003.1ms, 10.0031s)
Wall-clock time (full program): 1.00541e+07us (= 10054.1ms, 10.0541s)
Satisfaction error: 2
Number of search iterations: 2223
Number of local moves: 888 (including on plateau: 329)
Number of local minimum: 164 (including on plateau: 45)
Number of resets: 1
Number of restarts: 0

Problem in row 17: 644 325 380 277 241 516 442 410 109 438 355 352 390 528 441 478 436 387 354 33 409 394 489 587 632 240 369 335 => the sum is 10991 rather than 10990
Problem in row 18: 323 509 494 158 373 188 366 547 66 531 299 572 465 456 378 418 588 103 211 490 491 580 581 529 401 207 144 521 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 744 698 734 755 431 503 747 679 138  33 123 107 105  57  93 132 778  89 104 699  72 485 726 583  51 721  86 517
 651 746 226 160 455 777 602  34 738  78  45 775  31  90  55 725  53  54  98 719  75 544 121 627 285 784 748 694
 169 701 578 212 644 633 680 185 178 139 191 772 101 204 129 705 141 102 717 754 781  52 550 227  63 398 239 745
  43 575 388 622 759 504 691 177 546 103 266 126  69 263 163 783  46 526  58 496 181 127 779 572 739 650  48 690
 638 751 229 298 137 511 573 150 525 214 116 124 142 158 282 757 782 267 233 669 764  83 610 465  70 735  41 666
 111 756 656 534 597 549 577  96 184 155 217 206 100 271 283 235  88 562 641 769 265 130 776 660 216 695 182 479
 689 591 692 145 294 727 520 636 245 125  44 167 287 135  97 237 140 244 696 629 159 461 616 774 307 499 175 659
 678 685 594 157 620 652 484 760 164 208 236 343 240 144 113 210 255  85 733 614 771 203 565 262  64 268 151 731
 649 264 623 260 280 554 584 117 724 223 291 207 258 345 408 148 424 723 640 648 367 133 561 250 221 677 209 202
 300 296 624 246 257 619 481 376 362 758 612 176 370 188 341 325 232 369 702 357 187 462 464 353 417 471 277 368
 279 272 605 198 213 767 773 238 259 601 750 173 166 488 197 378 364 730 332 681 360 241 329 274 224 472 318 308
 165 289 476 452 309 600 486 199 243 416 626 315 381 419 328 303 480 293 529 571 356 347 492 201 423 502 473 316
 358 288 339 286 365 314 468 437 297 433 401 152 403 320 509 200 780 405 420 454 434 749 327 249 514 409 404 275
 392 422 340 444 467 532 418 383 304 261 273 400 410 256 449 470 363 387 248 426 361 714 463 219 407 402 430 349
 443 460 335 379  61 189 399 512 596 393 331 545 394 305 474 505 326 354 276  73 500 510 507 491 397 375 527 333
 372 425 380 395 432 342 253 495 451 547 290 348 302 483 382 180 537 337 301 350 295 523 411 299 490 448 406 516
  76 466 389 120 122 128 179 215 506 535 450 446 429 415 371 518 513 558 475 359 396 599 469 592 440  87 568 569
 456 413  71 436  15 351 336 270 390 438 195 541 551 542 556 477 493   1 655 334 519 322 489 457 501 414 581 186
 524 531 603 459 667 154 205 421 192 321 613 482 539  27 251 598 662 445 355  95 346 386 344 170 536 384 428 252
 521 156 254 109  17  14 230 540   3 522 618 732 621 218 671 588 630 538 269 453 330 278 284 441 718 412 715 108
 478 234  68 552 134 373 174   4 555 515 458 586 645 742 580 172 587 566  59 220 442  22  81 743 700  74 673 553
 447  29 281 311   5 161 317 631 585 427 391 672 625 670 628 564 487 668 312  20 687   8 115 222 646  25 548 508
  18  19 118 533 720 338 292 707  92 611 708 543 608 763 765 494 658  37  12  30 606 741   9  84 498 242 634 110
 114  36  26 647 146 149 193 530 688 595 709 722 579 736 632 710 557 324 147 190 560 497  67   6 567  38 657 168
 635  82 674 131 653  60  94 609  21 682 247 593 737 643 663 306 323 374 559 183  35 310 143 728 162 615 686  42
 604 528   2 675 762 385  66 313 589 697 576  11 582 590  47  91 228 642 377  28 352 684 563  77 637   7 683 194
 211 171 366 761 712  39  56 570 711 231 574 664 654 752 770  80  40 617 435 153  49 703  10 768 665 136  79  13
 225 106 319 713 716  65 112 706 704 729 639  62 661 766 753  99  23 693 607  16 740 676 119 196  32  50  24 439

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.85363e+06us (= 4853.63ms, 4.85363s)
Wall-clock time (full program): 4.913e+06us (= 4913ms, 4.913s)
Satisfaction error: 0
Number of search iterations: 922
Number of local moves: 627 (including on plateau: 153)
Number of local minimum: 47 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 503 681 122  80 771  16 113 682 712 263  45 558 518 783 706  46  36 732  43 609 597 170 716  38  37 622 763  28
 626 669  42  63  96 129 219 550 551 544  86 657 615 772 590  82  61 611 103 741 667 516 650  67 422 564  83 214
 150 765  29  95  91 125 543 769 778  97  33 652 675 728 572 128  17 152  73 760 200 586 736  13 553 780 696 194
  76 163 119 781 729 154 383 768 659  77 155 751 629 189 561  90  65 135 159 698 565 468 775  24 120 660 585 453
  88 118  79 121 747 115 117 203 524 484 124 739 767 130 193 126 209  94 173 574 762 246 779 664 684 734 707 689
 266 186  99  54 220 748 147 105 177 114 134 620 757 274 756 198 196 745 144 204 708 178 671 580 746 688 654 621
 136 100 298 139 313  84 727 192 559 221  40 752 697 291 342 182 197 733 158 153 673 773 190 375 577 699 645 744
 297 207 249 171 161 228 123 142 691 730 157 750 280 256 340 243 127 294 265 418 770 646 232 496 599 784 753 581
 353 300 670 304 320 185 146 288 782 384 715 511 116 319 327 250 239 226 275 451 318 714 269 515 640 272 378 723
 364 225 286 240 156 331 238 312 505 213 222 595 293 325 345 324 404 195 776 233 435 350 674 777 758 455 237 722
 296 563 323 349 359 354 258 174 740 701 330 480 400 188 253 248 316 287 301 270 314 679 252 490 761 619 579 106
 367 268 396 277 223 303 389 336 613 710 410 610 347 224 307 310 261 425 363 332 398 683 289 257 370 434 357 731
 211 448 416 311 282 724 393 401 279 299 292 409 379 321 334 326 138 443 407 376 537 234 387 377 766 374 352 774
 309 454 259 429 351 317 444 273 341 488 530 439 403 368 489 271 413 308 514 394 365 339 391 344 408 531 419 399
 285 381 369 373 343 329 420 390 428 348 411 440 254 541  30 470 438 395 392 501 437 475 557 306 414 458 346 459
 356 371 498 540 445 497 517 460 229 433 423 235 532 504 436 355 474 594 412  23 426 372 406 247 446 236 421 102
 442 388 545 386 328 335  50 452 241 456 322 366 479 467 570 463 415 466 382 472 522 477 441 255 148 450 430 242
 464 457 502 469 473 486 566 510 278 424 358 333 483 432 500 431 427 485 461  78 199 573  14 305   4 206 538 534
 569 184 539 508 523 405 571 260 143  44 512 160 596 482 465 525 568 481 506 417 385 164  48 315 133 528 562 397
 513 361 592 493 578 462 471 639  10 614 602  85 104 630 589 685 552 666 521  93 108  59 643 281 217 101 145 176
 526 495 556 575 606 548 693 478  58  53 560 201 618  26 140 507 695 509 533 637 492 202 183 588 175  68   6 262
 625 587 576 527 591 624  81 642  70 402 519 111  69 542 648 604 494 600 676 656 110   3 603 205  47 137 167  74
 584 499 567 725 549 633 717 546  51 362 686   5  75  52  87 672 703 632 647 491  15 227 165 535 187  49 284 244
 623   7 151 487 162 713 678 554 360 655 612 212 210 638  72 662 617 651 447 635 132 267 109 719 295  56   2 264
 663 653 601 520  27 702 547  25  98 181 631   1 149 661  71 687 721  12 616 649 180 555 112 605 338 166 529 290
 598 735 718 593 709 704  22  64 276 608 694 251 245  34 583 636 711   9 738  18 168 582 536 231 131  39 141 216
 692  60 634 680 179 720 668 764 230 380 759  32  92 641  57 726 742  21 690  41  31 283 107 737 337 218  20 449
   8 665 755 700 658  19 749  11 607 705 628  35 208 172 627 743 754  89 215  66 476 169  55 644 677  62 191 302

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00585e+07us (= 10058.5ms, 10.0585s)
Satisfaction error: 2
Number of search iterations: 2575
Number of local moves: 966 (including on plateau: 456)
Number of local minimum: 207 (including on plateau: 67)
Number of resets: 1
Number of restarts: 0

Problem in row 4: 76 163 119 781 729 154 383 768 659 77 155 751 629 189 561 90 65 135 159 698 565 468 775 24 120 660 585 453 => the sum is 10991 rather than 10990
Problem in row 23: 584 499 567 725 549 633 717 546 51 362 686 5 75 52 87 672 703 632 647 491 15 227 165 535 187 49 284 244 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 781 141  61  39 600  91 624 181 555 165 780  40 183  12 744 458 159 473 649 492 581 111 765 673 672  86 102 772
  52 560 137 139 669 173 550 147 745 488 779 112  74  20 143 247 618 741 699 721 709  23  47 610 104 703 328 652
 157  90  72 288 762 369 708 440 108 156 771 148 170 174 578 528 519 763 724 756 778  38 135 580 632 259 190  97
 198 196  27 177 754 720 204 197 224  59 768 199 253 206 566  85 524 777 671 727 736  34  55 607 760 564 213 489
 214 680 674 110 487 645 187 129  60 123 734  79 201 114 681 549 281 592 725 236 700 775 215 178  80 716 289 536
 272 271 191 127 507 783 132 351  43 180 690  49  42 131 723 466 255 634 633 761 776 113  99 392 710 713 228 718
  88 220 219 312 687 527 336 240 155 221 246 362 154 172 628 676 245 692 782 599 193 696 163 659 316 569 116 717
 158 134 166 565 405 731 217 784 231 285 210 232 200 307 304 573 773 702 331 343 605 185 277 752 743 535 120 122
 291 467 326 376 175 211 216 100 333 278 184 334 251 357 582 417 747 290 660 612 583 300 250 748 202 769 287 644
 305 276 774 292 397 325 279 338 248 715 337 340 296 256 267 575 525 402 434 269 377 242 350 614 431 766 432 128
 222 348 414 345 347 186 662 226 209 303 359 167 192 258 234 735 491 668 648 266 264 707 125 479 728 726 297 384
 208 393 385 399 418 420 531 381 149 302 203 360 416 378 263 757 641 346 589 239 244 119 394 442 324 459 471 759
 354 146 309 404 455 270 349 462 188 320 358 770 396 411 406 764 482 435 355 450 293 298 441 572 273 427 261 341
 344 622 430 465 372 262 249 463 400 342 401 490 460 464 388 456 227 398 516 390 505 162 421 282 368 474 318 321
 403 257 238 389 448 533 454 189 495 413 428  50 315 541 429 485 604 356 323 410 373 476 653 117 472 260 540 339
 382 265 310 445 515 387 504 517 306 160 426 295 502 481 532 380 366 284 364 335 319 478 480 370 443 223 395 526
 511 433 447 577 498 537  57 353 559 625 468 408  13 121 412  46 254 522 308 546 484 457 483 365 452 512 514  28
 494 379 551  63 391 496 313 639 386 283 542 513 563 553 469 124 548  66 286 608 601 367 518   6 311 461 422  37
 453 588 374 301 142 470  35  70 562  14 597 523 500 615 423 150 144 145 375 268 590 446 688 352 503 678 475 509
 646 606 670 596 602 552 415 424   2 636 539 444 534 666 243 252  11  69 225 207 218 640 623 235  22 164 419 330
 594 371 510 758 437  71   5 439 629 621 136 486 438 576 508 169 554  93 138 407 299 361 574 274 544  73 603 322
 679  81 722 521  32  94  67 530 654 556 568 571 558 650 501 332  48 579 133 545  51 477 538 182 616 109 587   9
 451 750 598 593   8  16 543 714 657 449  64 499 570 664  53  10 547 229  17  41 329 651 698  89 638 130 619 363
  36 691 642 643  15 506 591 647 557 730 103 635 746 667  58   1  82 230  18 195  95 656 655 409  98 151 697 436
 627 497 694 493 609 118 729 520 584 637  33 686 719 704  56 294 317  65  25 153 107 689 742  96  24 179   7 586
 712 749   4 212 106 661 753 732 682 685  87 737 751 611  30 194 237  83  54 275 140 658 567 168 327  29 701  45
 683  68 383 677 126 241 585 733 740 613  78 693 755 176 152 561 630 280  75  77  21 626  31 425 105 171 620 665
 675 711 663 684  26 595 695  44 529 631 101 767 738 705 617 706 161  76 233  62  19 205   3 314  92  84 739 115

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00599e+07us (= 10059.9ms, 10.0599s)
Satisfaction error: 3
Number of search iterations: 2467
Number of local moves: 862 (including on plateau: 310)
Number of local minimum: 204 (including on plateau: 43)
Number of resets: 1
Number of restarts: 0

Problem in column 3: 61 137 72 27 674 191 219 166 326 774 414 385 309 430 238 310 447 551 374 670 510 722 598 642 694 4 383 663 => the sum is 10991 rather than 10990
Problem in column 12: 40 112 148 199 79 49 362 232 334 340 167 360 770 490 50 295 408 513 523 444 486 571 499 635 686 737 693 767 => the sum is 10989 rather than 10990
Problem in diagonal 0: 781 560 72 177 487 783 336 784 333 715 359 360 396 464 429 380 254 66 375 207 299 477 698 409 24 29 620 115 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   7 716 327  85 325 643  18 740 760 744 753 174 328 745 374 246  80 273 730 307 674 701  30 123  19 369 698   1
 198 714 126 725 338  75 289 709 511  61 680 247 759 702 750 194 211 108 762 687 694  11   4 134 678 140 475   8
  64 420  48 711  88 706 178 715 728 729 691 234 697 741 746  24 249  62 190 189 618  39  58  16 633 719  37 660
 158 727  46  57  76 647 231 650 732  68 699  13 500 595 670 204  98  31 657 648 713 751 619 375  25  60 235 705
 724 191 236 693  22 712  34 639 646  32 658 319 521 655 683  12 105 118 737 477 127 623 635  79 608  71 628   5
 565 640 223 651  47   2 331 210 563 707 582  33 310 665 573  23 305  99 720 180 622 443  41 580 638  52 572 613
 510 217  54 554 343 610 259 627 721 535 571 233 265 597 672  44  59 171 558 220 362  45 642 575 288  43 559 656
 513 491 244 569  65 594 145 625 543  67 533 295 148 587 603 538 135 209 579  86 155 527 556 120 609 100 688 666
 489 591 494 599  81 731  84 661  56 519 552 177 185 584 518  27  53 427 548   3 504 336 530 446 195 536 488 576
 546  36 469 567 212 593  69 540 592 505 601  40 147 485 526 478   9 287 520 106 440  87 454 474 590 487 544 586
 564 406 391 465 473 486 323 422 685 482   6 453  55 523 495 237 413  51 447 402 555 524 529 197 484 466  15 441
 400 460 515 463 525 461 455 483 434 403 431 110  21 380 451 272 549 243 456 179 470 409 450 430 149 501 522 368
 425 462 355 458 216 341 410 401 320 496 493 365 539 448 351 449  10 306 387 330 499 316 432 416 396 517 498 354
 366 428 376 384 436 467 389 468 476 442 317 353 214 506 390 414 371 457 439 415 405 232 345 382 242 424 435 417
 472 397 304 399 404 395 364 258 480 329 314 334 262 280 464 339 444 358 340 673 388 782 393 378 335 433 263 408
 752 383 372 349 367 412 363 437 344 361 248 348 251 419 677 377 356 770 309 394 301 277 373 346 294 398 342 370
 418 347 296 298 253 385 350 311 332 205 421 758 777 268 423 636 749 352 302 754 283 303 213 357 292 411 308 188
 266 490 652 279 604 172 481 270 269 281 286 479 631 321 359 537 260 553 322 614 218 607 225 710 360 238 222 284
 170 156 407 386 704 264 686 254 182 315 312 641 684 250 257 531 733 392 771 471 239 492 381 241 274 300 215 282
 261 252 318 337 703 299 679 136 152 230 276 734 654 163 267 663 676 445 219 452 293 429 165 562 700 326 275 324
 245 726 668 168 773 157 669 675 186 176 297 630 598 129 125 653 775 570 255 224 602 221 271 502 206  74 175 240
 227 184 561 285 689 183 778  89 226 146 151 588 545 291 131 747 783 736 121 717 128 160 138 133 550 765 779 159
 164 107 600 102 617 766 682 278 114 201 228 438 333 192 187 671 718 722 132 578 626 116 681 516  72 743 199 207
 208 426 756 200 780  63 459 109 122  97 193 560 649 137  90 667 532 696 144 512 203 379 708 742 161 566 167 664
 612 142 629 767 542 113 508  42 514 637  96 611  49 104  17 659 541 692  26 503  93 763 605 143 755 581  73 173
 202  92 150 229 139  70 620  95 101 764 528 621 509 153  94 645 568 313 130 534 115 784 738 615 557 290 644 690
 695 761 757 119 583  66 547 117 124 735  35 596 103  20  83 196 574 781 111 154 497  82 662 774 739 748 162 169
 769  28 616  91 585 577 589  29  77 723  38 606 256  50  14 507 634 768  78 181 166 551 112 624 141 632 772 776

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.83889e+06us (= 6838.89ms, 6.83889s)
Wall-clock time (full program): 6.89761e+06us (= 6897.61ms, 6.89761s)
Satisfaction error: 0
Number of search iterations: 1522
Number of local moves: 672 (including on plateau: 285)
Number of local minimum: 107 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  92 213 718  74  51  14 688 134 559 723 727 149 631 178  22 195 140 615 708 133 755 676 733 734 739  33   2 554
   9 770 711 722 664 680 681  93 666  97 736 118 715 751  45 102  78 400 597  55 269 192 262 211 123 638  69 536
 668  11  53 710 735 686  41 126  88 266  96  42 747 721 690 147  77 713 611 204 658 229 737 714 530   7   5 678
 685  18 744  43 652 746 641 261   8 163 507  34 603 635 697   1  28 273 617 114 683 190 660 634 758 177  44 374
 172 179 627 621  90 608 518 125 674  60 545 670 707 521 619  29 330 654 581   3 625 108 667  57  37 152 428 583
 663 182 657 542 684 665 593  46 650  82 698  58 175 704 543  31  86 103 600 647 605  99  15 113 763  19 248 719
  40 333 351 724 485 653 227  35 692 169 453 646 257 622 599 233 624 562 488  12 695  10 479 604 637 115 184  61
 588 389 584 549  85 656 534  91 607  64  54 606 552  26 623 524  72 651 633  23 591  16 498 577 585 609 199   4
 469 191 475 582  83 501 538 136 292 327  32 459 525 553 551 496 566 620 322 226 575  38 598 616 576  84 104 455
 502  20 555 539 560 509 390  95 570 100 565 596  13 505 411 189 572 471 275 429 699 173 112  76 484 520 514 546
 456 397 466 515  59 558 477 334 438 180  89 480 432 500 349 476 380 415 527 283 499 441 388 586 423 358 445  39
 512 547 556 493  21 489 548 341  25 348 510 161 143 491 406 431 289 409 522 497 437 487 526  81 443 540 375 362
 408 442 602 483 424 447 361 158 399 404  73 355 439 494 267 401 412 193 398 567 310 470 486 458 420 368 366 385
 504 367 436 353 384 316 418 422 461 264 288 387 240 407 241 386 371 561 468 463 450 464 293 378 391 490 325 462
 272 482 672 160 474 440 259 370 427 329 363 495 743 295 301 413 457 419 433 317 157 393 232 416 381 517 426 347
 324 377 369 359 344 311 309 417 246 472 357 382 473 376 339 626 256 331 294 628 392 352 328 503 263 492 308 762
 772 253 320 318 340 449 601 516 238 759 313 451 703 379 219 305 234 669 217 278 326 345 336 297 304 321 531 196
 265 290 280 302 299 296 410 557 343 537 373 285 630 254 245 346 300 761 550 574 284 350 356 249 425 405 629 395
 287 198 306 383 403 323 194 519 452 268 307 276 282 250 244 365 640 372 679 303 291 705 354 706 563 338 214 768
 402 720 239 166 312 225 314 760 700 444 421 506 478 247  98 360 281 150 206 643 216 689 142 592 242 726 315 396
 258 251 186 111 446 220 231 769 286 580 218 183 130 394 203 701 777 614 154 716 774 569 223 274 221 693 649 159
 135 230 277 205 210 176 766 579 544 661 764 255 541 765 771 279 105 124 243 691 209 778 162 332 235 188 513 252
 779 632 270 260 335 756 224 595 342 753 430 236 121 145 137 645 671  67 120 181 164 741 767 465 197 467 319 171
 228 729 298 128 749  30 132 644 141 523 200 728 146 237 131 675 754  70 165 731 156 612 529 119 202 571 775 587
 659 752 101 730 434 129 167 673  71 511 454 414 212 207 696 780 594 185 155 364  66 201 222 170 110 648 717 568
 655 725  36 122 448  56 533 782 740 742 532 781 139 174  63 642 694 144 187 618  50 590  47 151  17 460 745 117
  80 610  52 109 481  24  68 662 116 636 677 535  75  65 732 639 589 337  87 712   6 508  62 709 773 783 784  79
 106 682  49 687 738  27 127 750 215 528 208 702 138  94 748 573 613 107 153 578  48 564 776 168 148 271 757 435

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.15415e+06us (= 5154.15ms, 5.15415s)
Wall-clock time (full program): 5.21301e+06us (= 5213.01ms, 5.21301s)
Satisfaction error: 0
Number of search iterations: 938
Number of local moves: 604 (including on plateau: 161)
Number of local minimum: 42 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 327   2 693 144 704 735 718 765 291 233 241  29 702 671 159  39 299  22  27 739 163 758 182 289 625 757 589  87
   9  11 733 164 543 726  14 746 103 734 165 127 603 711 205 232 276 207 251 684 668 560 564 277 640 344   5 688
 632 678 581 187 672  63 106 372  56 683 333 395 337 667  33 717  25   3 661 610 614 676 695 222  26  19 685 242
 415 622  68 736 196 656 568 657 708 647  66 644  40 686 116 114  47  10 181 653 611 593 713 245   1 712  74 211
 722 652 674  13  48 721 638 650 556 659 138  46 326 760  77 189 209  18   4 549 673 615 552   6  99 523 633 240
 643 519 691  16 680  57 607 642 586 563  90 470 264 361 146 687 238 669  70 459 261 764  21  73  17 566 584 246
 637 540 729 499 649 651  15 538 513 731  45  37 109 723  28 627  36 118 587 531 493  20 635 162 124 520 443 250
 604 548  72 554  97 634 536  50   8 488 119 579 535 619 582 521 167 303 546 490  23 592 677  89 168 620 662 107
 479 545 503   7 599 105 664 508  30 588 202 392  54  59 682 608 350 257 626  55 158 529 509 597 542 481 571 290
 271 555 561 527 283 594 506 628 429  60  42 547 104 590 550 496 171 260  12 475 178 346 442 522 567 335 365 574
 578 389 544 507  31 525 426 645 376  82 272 409 618 385 457 489 390 115 469 134 572 418 446 430 551 173 461  98
  95 512 534 591 576 381 468 419 532 450 753 120  91 435 438 340  34 292 598 433 494 374 416 455 498 135 502  24
 432 342 310 449 516 517 600 573 447 451 324 373  49 383 377 348 236 422 440 101 351 511 417 485 330 311 369 526
 347 323 408 504 399 378 352 157 413 278 477 528 258 423 541 296 487 414 501 484 122 404 514 406 288 605 428 255
 400 285 486 306 249 398 332 343 716 458 452 331 407 375 229 483 460 341 215 366 321 345 356 784 464 280 403 405
 727 216 287 412 298 252 453 317 338 177 448 472 767 396 313 206 738 427 284 286 203 445 401 274 316 744 320 473
 371 325 391 474 444 339 301 370 151 235 655 601 379 360 585 199 748 537 463 191 273 180 214 411 328 624 218 623
 384 275 237 225 197 297 471 363 410 156 750 314 728 353 227 259 768 681 388 355 302 175 367 217 436 595 394 666
 515 226 358 223 380 193 720  96 254 780 696 437 480  86 505 329 439 304 663 318 315 294 397 212 308 431 312 719
 281 266 243 248 228 349 387 267 646 210 766 368 741 755 154 359 518 482 220 779 386 268 307 263 192 558 456 293
 354 155 279 153 689 510 195 775 357 300 334 295 629 128 309 174 553 565 752 185 773 265 136 783 125 247 305 665
  84 200 282  41 170  88 782 194 751 322 706 478 172 253 781 230 539 393 709 434 743 754 188 179 562 262 169 524
 491 239  64 602 213 772  79  65 699 269 420 166 596  83 747 724 577 641 183 256 244 102 725 763 462 161 150 497
 198 112 145 759 466 710 231  94 679 141 616 186 707 336 654 184 771 701 208 149 613  81 204 730 715  62 219 319
  75 270 129 774  53  80 147 569 140 130 609 648 402 132 201 777 631 745 698 126 424 110  38 762 559 364 700 697
  35 742 769 703 778  67 362  44  93 143 580 612 441 123 740 148 495 690 142 465 234 111 606 224 658 425 139 421
 108 670 176 705 732  71 152  92 575 530  52 692  69  61 533 761  32 636 617 570 221 117 137 500 714  58 749 660
 776 770  43 467 100 121 160  51 133 492 639 694 382  76 621 454 756 737 476 113 557 583 131 630 675  78  85 190

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.006e+07us (= 10060ms, 10.06s)
Satisfaction error: 2
Number of search iterations: 2297
Number of local moves: 877 (including on plateau: 317)
Number of local minimum: 165 (including on plateau: 37)
Number of resets: 1
Number of restarts: 0

Problem in column 2: 2 11 678 622 652 519 540 548 545 555 389 512 342 323 285 216 325 275 226 266 155 200 239 112 270 742 670 770 => the sum is 10989 rather than 10990
Problem in column 19: 27 251 661 181 4 70 587 546 626 12 469 598 440 501 215 284 463 388 663 220 752 709 183 208 698 142 617 476 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 668 564 163  60 666 141 182 652  29 727 687 302 152 693 729 739 713 651  41  52 665 229  36   4 595 738 107   5
  62 683  11 168 123  68 761 689 581 373 709 213  82 734 662 742 675 188  19 708 743  20  70 118 690 744 138 216
 609 504 157 704  75   6 682 657  10 602 759 247 315 733 748 756 623 374  72  32 754  13  26 700   7 599 148  78
 219   3 235  30  51  80 654 577 293  89 751 635 254 629 679 719 703 691 277 721 647  65  93 328  67 638 625 237
 422 661 197 386   1  61 610 611 111 203 186 195 110 670 649 705 656 582 167 720 341 726  47  14 603 716 563  77
  18 711  12 311 124 372 659  17 233 427 567  21 270 706 707 667 660  23 178 566 585 642 505 513 596 685 132  83
 121 558  92 325 551 276 568 664 572 425 587  37  54 225 588 653 435 621 196 496 537   2 175 639 446 569 515  63
 597 490 139 177 415 169 538  45 553  84 544 678  95 501 604 644 556 494 221 487  35 559 320 696 645 637  28  39
 617 550 170 134 747 368 540 482  97 100 632 441  55 573 527 502 472 519 108  27 565 539 240 547  58 607 450 323
  91 614 483 165 701 212 524 452 266   9 456 113 308 129 451 469 541 528 362 589 549 506 128 534 526 619 520 145
 306 612 310 327 532   8 449 473 484 392 447 354 131 592 350 424 355 274 173 406 458 591 244 512 428 324 523 511
 289 438 384 330 529 287 252 410 122 546 554 467 476 584 454 517 561 307 348 426  48 389 172 543 448  31 593 485
 440 459 507 404 465 290 234 349 352 345 285 365 616 521 462 445 416 117 230 471 470 439 314 340 468 296 398 492
 291 281 455 436 119 279 463 411 371 478 304 557 594 251 419 339 353 283 359 248 395 542 479 533 430 356 366 598
 399 326 429 475 208 317 562 555 224 457 514 387 412 318 402 493 309 209 294 361 405 417 394 206 508 238 409 762
 222 267 376 608 393 491 312 397 407 601 525 433 432 363 403 358 369 408 477 273 214 286 576 377 260 380 400 382
 334 241 370 715 375 633 322 423 218 624 500 481 434 292 444 346 466 336 495 337 413 313 474 158 329 278 272 367
 776 280 253 669 316 574 338 250 245 522 288 378 548 750 191 226 220 763 442 390 437 162 530 418 258 275 249 242
 486 321 460 698 626 401 342 149 622 769 207 692 351 264 391 185 343 379 357 211 256 498 497 200 282 136 332 535
 658 381 773 120 161 648 303 231 420 385 189 730 461 227 147 181 333 736 464 724 284 431 531 171 360 319 179 443
 606 295 536 712 180 636 198 674 301 681 176 205 775 259 193 223 190 305 641 236 115 586 605 151 335 150 331 695
 298 232 299 518 673 580 396 204 268 634 488 740 684 217 199 127 262 156 503 174 184 752 480 246 627 153 194 702
 255 210 767 545 737 560 130 112 688 388 106 772 631 202 140 164 364 300 766  66 263 201 414 777  90 133 630 579
 144 187 755 571 421 735 261 159 732 613 215 578 680  96 137  64 104 143 699 154 671 265 686 771 142  33 257 717
 269 239 694 722 166 714 344 510 778  46  42 135 731 297  69  34 146 760 758 783  79 160 753  40 126  57 764 774
 590  50 745  22 746 677 103  59 765 383 114  86 640  73 109  16 125  99 781 509  85 779 663 741 347 453 655 575
 620 728 600 570 243 757 192  81 499  43 102 672 183  53  49  24  25 628 782 271  74  94 768  98 676 725 723 710
 583 105 618  88 646 650  71 697 749  44  56  76 516  38  87 228  15 116 780 552 718 784 770 615 643 101 489 155

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.22711e+06us (= 5227.11ms, 5.22711s)
Wall-clock time (full program): 5.28554e+06us (= 5285.54ms, 5.28554s)
Satisfaction error: 0
Number of search iterations: 851
Number of local moves: 616 (including on plateau: 130)
Number of local minimum: 26 (including on plateau: 13)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 418  19 694 750 627 780 778 744  93 217  53 179 756 551  85 129  60 767 638 110 106 704 458 711 170  33 256 104
 535 713  62  54 774 735 571 604 118 771  39  35 729 671 139 707  75  38 559  50  46 475 714 718 116 109 702 131
 141  16  27 175 646 693 495 695 544 159 143  89 519 682 105 602 720 640 676  26  63 709 662 612 111 126 155 759
 195  61 119 498 644 781 647 681  95 673 146  56 719 598 184 770  76 132 628 678 304 595 768 150 390 164 135 103
 683 345 147 548 753 167 657 593 156 123  51 332 529 716 198  73 395 701 592 107 121 596 225 779 722 359 258  64
 755 182 133  69 752 309 758 522 218 406 552  44 742 685 177 749 161 266 712  70  48 740 642 181 660 172  47 238
 609 174 178 230 782 690 732 743 237 120 180 575 527 616 245 124 162 187 733  81 222 777 491 244 669 152 226 284
 783 168 212  83 757 285 462 659 281 208 204 566 776 746 199 158 246 229 617 336 784 625 233  92 692 240 113 236
 653 282 298 235 515 292 523 576 760 538 344 356 422 205 283 127 243 597 539 641 262 428 252 297 650 315  77 280
 725 206 305 672 651 357 769 573 234 747 293 260 721 101 314 194  74 403 487 351 169 271 772 148 343 249 253 348
 192 278 397 734 270 268 407 607 427 312 450 658 374 378 300 223 265 387 425 302 775 578 151 299 361 368 554 250
 288 154 210 352 200 376 382 509 308 410 394 731 569 232 437 511 531 338 328 579 773 279 441 261 329 439 353 276
 290 633 176 326 389 399 560 545 346 267 163 360 666 335 215 629 443 393 388 331 257 478 287 400 319 434 645 316
 381 354 396 481 242 420 306 417 317 599 514 373 248 337 411 632 408 429 333 500 377 431 558 358 263 157 364 384
 301 227 224 474 649 370 435 386 580 350 401 334 383 446 436 366 369 440 468 465 419 241 320 347 398 421 324 416
 277 102 438 365 363 322 530 457 310 402 480 424 451 367 423 471 307 432 485 203 452 461 553 342 430 355 318 470
 449 488 413 340 528 371 165  43 341 556 494  23 492 448 404 464   1 577 414 362 433  17 489 583 518 605 493 479
 323 385 594 213 456 507 188 193 463 415  45 339 140 486 453 405 484 291 239 469 504 536 392 321 517 447 549 636
 459 506 375 483  52 467 196 138 503  79 502 476  10 561 409 372 521 209 269 639 691 534 510 426 134 460 543 466
  90 477 668 183  65 482 289  87  18 557 586 214  84 255 537 654 513 635  37 294 630 220 391 648 584 717 490 585
  82 618 540 442  22  55  11 379 520 603 703 501 274   5 444 568 689 670  71 564  41 191 526 512 112 665 508 674
 142 505 614 185  94 546 445  21 567 219 655 570 115  28 516 572 525 562 473 547 590   6 149 160 216 667 624 677
 247 652 765 499 189 524  97  58 588   8 623 745  78 497 663 687 380  80  31 313 412 145 136 541 295 591 581 565
 211 620 739 296  12 455  20  30 748 582 661 311  14  34 589 684 634   2 117 533 697 264 496  86 254 664 606 631
 610 637 754  42 228  96 122 108 197  99 680 327  59 608 643  15 699  98 190 622 619 125 221 532 601 724 611 723
 330 675  36 761  72 137 114 325 700 705 763 686 275 207 728   9 715 563 173 688 555 259  49 574 706   3  29 153
 472 751 710 764  57  66 231 272 613 128 130 730  67 171 726  88 679 621 166 587 186  32  13 600 144 698 550 738
 349 762 766 736 201  40 100  25 708 737 741 696 251  24 727   7 615 303 202 542 454 273  91  68 286 656 626   4

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00591e+07us (= 10059.1ms, 10.0591s)
Satisfaction error: 1
Number of search iterations: 3074
Number of local moves: 877 (including on plateau: 310)
Number of local minimum: 258 (including on plateau: 38)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 418 713 27 498 753 309 732 659 760 747 450 731 666 337 436 471 1 291 269 294 41 6 136 86 601 3 550 4 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 147 603 695  91 370 773 154  45 589 614 671 115  66 112 749  60  73 572  98 119 244 588 650 742 465 595 218 772
  34 778 753 179 104 711  58 518  27  75 649 660 388 107  31  57  64 513  37 602 136 196 757 784 679 567 779 747
  25 592 438 499 169 258  53  86  63  72 651 495 690 151  80 769  48 700  30 771 715 756 600 755 640 718  89  77
 150 242 681 723 687 623 240 706 197 212 625 783 696 236  49 467  59 146  90 612 131 106 675  54 698 762 241  99
  74 184 417 188 740 766  39 109 135 493 648 764 517  55 260 719 175 676 163 777 233 748 185 744 496 582  68  35
  76 453 765 221 476 234 143 128 153 254 668 645 576 126 673 144 108 716  92 768 659 776 780 230 626 152 189 159
 269 235 692 270 255 759 743 689 149 195 745 610 578 183  18 145  29 633 214 688 278 246 707 262 508 568 164 158
 294 125 557 774 202 342 187 566 256 307 656 249 615 326 208 509  38 662 211 703 182 100 180 770 705 708 228 330
 203 120 593 160 735 312 173  83 752 205 480 226 729 423  69 763 758 714 573 554 204 317 101 621 315 305 303 199
 396 190 658 545 746 192 377 741  96  81 516 565 654 140 425 683 248 329 253 404 251 223 215 332 544 555 277 354
 207 174 362 529 376 177 411 712 393 655 624 775 337 449 346 350 245 299 166 273 252 387 296 380 724 239 415 437
 409 355 487 644 324 272 379 720 414 186 289 475 271 318 148 331 731 247 782 431 213 276 367 314 575 361 405 266
 458 422 570 287 392 430 540 264 397 284 265 259 385 243 485 334 386 455 394 297 238 461 360 781 440 523 281 359
 381 432 443 442 391 528 384 468 283 309 292 261 382 368 390 542 533 429 505 327 310 421 515 321 231 484 398 220
 288 490 320 462 306 290 378 389 383 549 408 364 527 426 275 165 579 530 402 473 356 424 369 448 520 167 366 336
 434 532 222 322 344 427 445 459 348 335 482 410 684 543 352 349 479 412 395 400 250 162 446 452 156 420 374 357
 444 447 263 181 132 413 590 130 569  24 311 483 257 503 474 439 371 436 399 535 358 466 531 553 129 464 481 607
 558 406 217 111 574 601 157 441 454 469  79 594 123 584 295 550 456 319 489 372 665 611 401 110  56 340 551 407
 560 498 308 525 341 663 451 488 563   1 194 416 300 428 433  71 502 141 291 534 510 639 605 345 232 209 339 403
 418 546 219 460 492 375 201 325  19 697 491 116 138 457 653 113 486  94 599 351 494 500 634 618 103 450 470 471
 501 585 343 478 353  10 539  14 521 561 301 538  61 504 670 193 526  12 701 127 571 556 591 511   9  88 629 497
 562 738 124 229 661  85 285 139 583 672  15 472 172 541 577 631 713 580 628 133 512  95 198  67 227 210 537 604
 728 237 168 691 619 506 734 514 608 419 114  84 121 298 622 118 435 191 732  65 627 598  17  41 267  42 725 669
 726 636  13 333  11 171 617 552 597 750 134 102 363 727 613  40 641 606 587  44 507 122  21 564   5 206 754 548
 632  22 274   3 216  47 702 647 642 693 268   6 638 767 678 760 279 142 721 282 739 161  87   2 280  78 643 581
 667 176 347 664 313 686 522 477 373 596  20  82  70 699 680 304 709 328 519  97 586  93 620 178 338 137  43 666
 733  36  33 302 635 323 751 463 722 652 224 286 105 559 685 674 682  62 694 200   8 316  50   4 365 524 293 609
 616 736  28 677  26  16 737 117 704 630 170 155 547 717  52 710 637  46 225  51 761 646  32   7 657 536 730  23

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00594e+07us (= 10059.4ms, 10.0594s)
Satisfaction error: 2
Number of search iterations: 3403
Number of local moves: 901 (including on plateau: 261)
Number of local minimum: 288 (including on plateau: 37)
Number of resets: 2
Number of restarts: 0

Problem in row 16: 434 532 222 322 344 427 445 459 348 335 482 410 684 543 352 349 479 412 395 400 250 162 446 452 156 420 374 357 => the sum is 10991 rather than 10990
Problem in row 28: 616 736 28 677 26 16 737 117 704 630 170 155 547 717 52 710 637 46 225 51 761 646 32 7 657 536 730 23 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 688 647  38 734 768 701  56  32 612  60 143  49 589 622 104  33  99  46  40 783 747  41 666 751 663 726  55 497
 717 779 782 624 764  87  69  58 723  61  94  22 704 623  34  50  92 712  17 706 642  42 136  65 698 770 432 487
 163 696 520 599 600  68  30 172 729  83 134 144 746 527 530 107 124  51 108 620 629  64  77 776 758 778 498 659
 638 648  53 705 526  86 125 566 635 169 103  93 700 568 549 205 113 585 152 769 636 167  63 200 781 149 505 501
 761 101 126 573 516 162 563 120 737 493  89 158 750 628 690 154 114 464 222 415 590  31 284 777 561 173 198 540
 655  98 179 613 658 224 166 297 626 164 139 206 161 506 644 512 210 718 196 213 562 191 784 142 180 711 702 533
 227 221 202 678 749 171  52 105  79 181 177 266 673 607 710 713 123 780 174 178 753 766 234 217 577 223 582 572
 220 209 281 643 537 151 246 765 242 157 212  88 773 652 756 586 231 760 294 203 580 259 255 135 214 219 650 672
 311 228 283 569 689 160 254 289 253 176 226 165 528 681 671 677 194 117 767 715 291 304 263 258 302 282 722 615
 262 187 257 524 692 199 267 277 245 748 185 363 550 693 467 669 243 574 478 238 235 288 306 269 216 285 664 609
 192 218 229 389 703 434 455 299 215 344 359 232 545 268 646 691 341 771 298 273 251 388 322 316 390 317 695 409
 323 204 240 340 394 279 443 318 371 485 380 736 272 287 324 575 362 763 292 301 372 260 264 315 383 310 743 654
 369 335 458 384 475 397 280 361 382 241 395 374 366 469 375 449 368 326 354 653 342 419 270 336 720 360 439 293
 398 418 314 379 480 348 265 387 271 399 347 417 486 447 333 554 393 325 410 278 400 355 367 759 492 286 373 309
 349 327 436 329 381 456 331 442 328 391 118 510 386 454 405 438 275 437 364 471 392 406 370 444 429 422 403 496
 353 343 408 350 303 460 539 351 423 476 446 477 457 430  15 334 435 507 365 404 531 421 428 377 490   6 402 459
 482 495 414 249 236 546 416 378 605 396 463   3 489 121 543 305 441 426 504 499 358 412 420 517 450 472 307  43
 465 556 484 407 189 466 479 411 579 583 453 588 488 525 244 155 483  74 146  21 431 576 440 468 503 541  47 188
 494 461 570 207 357 500 514 619 515  11 518 511 225 502 138 201 555 491 145 433 427 558 481 536 401 425  66 129
 522 618 557  84   5 513 560 445  67 594 519 597 239 112 552 150 542 320 548 352 474 559 565  96 532 529 156 183
 462 606 523  90 130 587 598 100 509 551 694 665  70 102 131 141 451 116 470 608 111 534 538 521 473 662 535  12
 295 602 208 290 122 544  78 741 581 508 595 633 147  73 376 274 625 300 645 721 182 593 685   2   1 614 308 247
 584 611 740 132  29  35 660 640  27 627 725 682  85 153 193  71 649 184 733 679 571 592  28 567 110 670 197  16
 109 601 547  97 313 578 596 675  59 686 667 639  91 170 137 385 632 332 699  48  95 603 631 424 106 610 345 115
 330  72 616 452  80 683 739 716 211 668 752 337  37  81 252 553 674  14 731  23  25 634 591 661 339 133 338 248
  13 676  36 448  26 697 755 641 140 744 617 728 159 233 276 564 714   8 742  54 296 657 719 356   7 128 237 319
 604  24 735  19  18 774 724 148 707 256 708 651  44 195 709 687 762 621 775 312  57 190  76  75 175 127  45 772
   4   9 754  82 250 684 730 637 119 738 732 656 230 261 186 757 745 168 321  20  10 680 727 630  39  62 346 413

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.05822e+06us (= 8058.22ms, 8.05822s)
Wall-clock time (full program): 8.11725e+06us (= 8117.25ms, 8.11725s)
Satisfaction error: 0
Number of search iterations: 2156
Number of local moves: 773 (including on plateau: 348)
Number of local minimum: 184 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 638  23 182 717 178 731 432  66 585 520  10 234 158 753 741 752 152 640 389  21  30 253 764 136 630 353 743 159
 252 550 509  28 750 121 705 260  40 647 755  63 326 323 722 500 176 710  52 170 110 715 757 192 739  64   5 748
 627 117 570   9 754 686 149 111 154 113 488 628 264 651 747   4  44 708 125  92  34 744 625  47 547 649 668 635
 696 363 387  93 661 723 339  76  61 726  15 169 357 674 190 122  71 601  89 560 580 735 706 446  39 771 720  20
 186 230 328  70 612 672  84 180  27 510 645 567  31 508 624 329 288 379 700 142 574 642 356 124 587 602 727 266
 312  68 762 600  14 189 636  96 620 590 656 207 238 615 658  46  48 543  43 131 134 608 598 430 589  54 780 725
 237 299 662 100 677 579 622 534 325 541  35 504 123 438 680   2 119 584 108 210  62 385 514 607 617 112 539 775
 269 184  77 480 697 581  74   8 474 702 516 222  80 499 597 340 336 155 679 619 536 563 530 126 483  67 605 491
 128 254 227 423 555 604 404 609 166 143 533 631 107 518 551 452 130 478 501 559 562 165 527 505 424  16 449 369
 412 284 411 399 676 660 629 459 528 763 435 116 519 301 343 517  53 473  24 330  18 552 634 144 561 226 185 338
 426 203  82 526  36 641 503 531 421 204 448  38  65  29 444 375 682 678 521 437 522 406 507 114 643 358 572 578
 319 341 262 466 457 140 386 703 495 524 367 413  12 571 434 359 684 370 239 337 470 494 425 200 414 313 460 335
 251 395 513 463 450 388 467 538 489 482 287 468 283 544 397 699 171 352 477 566 376 512 232 382  73 272 361 102
 368 380 441 476 247 164  49 453 316 439 427 486 451 632 104 433 492 711 588 464 279 277 417 321  78 465 373 659
 349 594 109 765 650 355 225 242 315 440 257 302 416 690 469 344 381 545 348 233 371 334 405 542 294 422 350 243
 481 402 267 675 372 295 244 378 392 290 410 317 779 485 286  69  13 407 623 461 490 308 391 693 431 436 418 177
 614 496 621 351 537 305 497 268 248 403 303 394 535 274 289 760 157 354 458 393 137 106 300 663 298 445 419 365
 774 398 582 133 240 297 224 194 396 719 730 772 569 151 291 275 683   1 429  42 148 221 346 599 366 777 377 256
 610 523 472 304 293 314 591 360 212 145 327 782 639 487 216 347 546 282 214 669 318 215 333 415 245 498  17 616
 718 484 511 311 141 307 219 633 558 241 168 652 115 246 342 442 671 228 666 603 258 713 217 758  83 554  22 129
 729 549 515 229 101 390 540 310 401 292 209 695 714 105 187 271 781 195 384 345 728 218 332 455 160 694 206 255
  11 664 733 462 138 235 738 223 265 167 198 626 565 273 163 592 766  85 577 653 709 199 161 420 761 231 296  79
 557 525  98 196 211  86 324 596 447  88 712 135 692 261 276 670 756 309 648 573 428 147 120 409 183 331 479 734
 249 606 593 742   7 179 613 773 732 768 132  41 553 362 172 685 374  59  26 657 784  50  25 529 220 156 776 127
 456 259 285 783 174  99 767 532 644 153 655 475 673 320 175 707 586 181 139 188 716 306 162 502 564 205  87 197
 270 637  37 250 118 443  58 687 704  75 408 213 654  95  51 749 568 236 736 618 778  55 493 201 263 575 278 740
  32 471 721 202 688 746 191 770 611 208 583 759 689  94  90   3 595 681 701 193 173 322  56 454 150 698   6 103
  19 691  33 737 556  60 280 400 364  97 281  81 383  91 751 146 667  45 506 724 665 745  57 576 548 646  72 769

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00024e+07us (= 10002.4ms, 10.0024s)
Wall-clock time (full program): 1.00611e+07us (= 10061.1ms, 10.0611s)
Satisfaction error: 2
Number of search iterations: 2419
Number of local moves: 754 (including on plateau: 284)
Number of local minimum: 242 (including on plateau: 30)
Number of resets: 1
Number of restarts: 0

Problem in row 2: 252 550 509 28 750 121 705 260 40 647 755 63 326 323 722 500 176 710 52 170 110 715 757 192 739 64 5 748 => the sum is 10989 rather than 10990
Problem in row 23: 557 525 98 196 211 86 324 596 447 88 712 135 692 261 276 670 756 309 648 573 428 147 120 409 183 331 479 734 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 306 101 704  48  23 745 707 181  67 199 702 560 748 131 739 731 202 601 692 715 180 695 128 637  16 143 201  88
 134 147  86 528 253 699  43  15 677 263 687 712 740 255 716  83 151 668 694 729 722 662 136  36 108  13 454 579
 738 679  69  25 236   1 316 123 730  20 590 747 667  94 686 249 106 684 685 705 710 682  79 403  92 660  97 117
 133 626 337  32  51 714 651  66 727  10 594 670 733 350 701 245  14 319 129 680 723 691 583   9 574  34  33 561
 630 586  18 585   2 672 642   8 629 169 756 632  98 234 737 198  62 661 671 577 543 104 557 649 109  17 118 326
 527 600 207 130 219  30 183 210 478 112 663 593 523 107 572 257 150 706 591 607 635 638 703 612  81  11 232 613
 721 625 243 197  28 711 298 195 604  77 595 553 693 111 643  35 113 675 683 636 688 187 100 592 161 522 139 165
 605 596  46 271 262 614  84 188 628   7 622 666 556   5 537  42 609 598 498 509 657 375 515 558 192 562  73 115
 567 540  56 519 455 369 380 225 655  21 570 549 525 251 565  90 603 422 610 521 484 516 499 502 168 120  89 119
 548  71 116 256 274 578 552 493 541 381 539 563 391 479 581   4 589 470   6 418 513 623 388 526 447 278 336  29
 438 121 473 472 200 530 500 547 405 327  22 320 483 544 546 241 441 346 423 494 532 534 398 617 476 173 228 159
 370  87 445 536 409 408 437 511 517 242 421   3 433 444 295 393 524 533 280 464 389 504 344 462 414 435 222 468
 474 132 332 518 512 415 482 538 529 321 514 384 294 230 331 399 382 377 471 451 297 270 394 366 442 396 368 371
 439 426 535 363 580 555 397 463 453 372 383 503 333  40 496 440 410 429 299 457 269 312 365 272 379 459 248 313
 283 416 401 497 341 449 443 302 386 765 392 355 477 357 400 308 466 275 413 362 428 407 353 351 360 345 425 233
 491 342 378 292 374 315 323 361 490 390 395 725 352 387 364 461 247 417 430 505 713 266 402 279 296 309 404 282
 776 446 732 176 475 487 689 212 460 510 458 264 465 267 231 246 434 639 208 254 238 367 293 347 261 330 340 385
 244 419 158 531 566 317 728 412 273 576 290 338 218 584 310 647 221 779  99 281 190 285 204 343 427 314 588 648
 194 349 624 654 606  96 424 431 452 376 217 324 328 551 305 754 223 226 769 215 224 348 148 175 508 411 450 608
 250 356 676 749 564 339 301 611 307 602 448 304 172 252 191 288 573 259 322 303 289 227 334 359 615 354 587 358
 149 373 627 542 621  74 311 318 103 736 144 287 174 406 325 659 276 240 708 157 768 163 335 300 645 559 489 501
 258 495 568 545 700 260 189 664  49 720 114 291 193 782 184 653 216 124 196 235 209 763 122 154 599 485 469 753
 774 486 652 137 284 237 206 760  70 656 211 268  76 709 179 571 719 138 110 105 177 145 773 164 520 575 734 554
 783 156 742 142 153 162 205 744  63 550 178 126 167 669  60 743 480  80 185 127 203  58 674 777 650 673 762 678
  44 155 755 641 681 750  65 698 146 569  59  82 135 741  37 507 759  54  75 186  24  57 780 724 265 633 752 616
  47 456 432  95 767 286 220 766 229 618  85 140 778 597 182 644 665  61 481  38  93  64 166 690 771 775 631 213
  41 784 506 751 582 125 488 619 170 761 102  19  78 697  50 634 735 141  91  45  39 277 436  55 696 658 764 646
  26 420  72 758 772  52 726 329 152 640 239  12 160 717  27 467 620  68 171 214  53 770 781  31 718 746 757 492

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00599e+07us (= 10059.9ms, 10.0599s)
Satisfaction error: 2
Number of search iterations: 2820
Number of local moves: 1021 (including on plateau: 414)
Number of local minimum: 229 (including on plateau: 62)
Number of resets: 1
Number of restarts: 0

Problem in column 14: 131 255 94 350 234 107 111 5 251 479 544 444 230 40 357 387 267 584 551 252 406 782 709 669 741 597 697 717 => the sum is 10991 rather than 10990
Problem in column 16: 731 83 249 245 198 257 35 42 90 4 241 393 399 440 308 461 246 647 754 288 659 653 571 743 507 644 634 467 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 782 513 100  62 707 622 772 763  46 127  29 731 696 399 746 764 637  39 121  54 678 117  43 122 422  14 107 777
 667 377  74 408 733 600  94 743 236 657  23 564 215  52 540 617 620  35  49 229 672 392 765 153 598  98  11 768
  47 521  88 234 769 767 770 243  13 470 779 717 506  91 741 691 160  96  64 732 180 103  71 645 520 721 126 125
 108 651 129 760 662 591  44 511  50 132  80 715 689 432 663 739 713 150 556 124 385 192  51  66 758  69 724 246
  89 668 659 301  72 616 157 547 212 736 279 625 294 700 608 744 477 247 292 152 781 195 652 137 431 106 135  78
  87  93  53 245 686 783 258 649 119 532 128 147 318 742 552 534 139 633 424 773 784 111 766 196 722 193 144 179
 181 173 221 609 341 627 464 136 185 570 142 706 714 754 647 636 571  63 550  26 750 244 175 177 592 269 242 225
 207 671 167 340 219 208 134 778 546 695 168 297 603 673 589 429 761 278 568 253 226 228 151 474 606 190 281 250
 235 614 335 198 143 775 268 585 305 186 210 381 559 590 635 436 487 178 745 669 751 112 156 115 423 402 280 217
 334 729 309 327 332 182 283 718 254 780 148 346 730 654 183 727 508 222 543 563 257 149 230 271 333 299 302 277
 313 687 323 267 397 445 240 248 282 685 771 384 300 605 435 735 396 159 628 339 312 218 308 216 419 349 213 316
 388 462 409 155 123 449 774 251 287 303 400 776 682 209 415 410 162 417 749 344 189 259 378 342 371 502 428 356
 329 403 380 264 624 347 241 345 376 321 203 354 463 337 373 420 597 110 683 350 485 372 336 358 558 412 469 480
 262 450 204 238 325 364 315 583 407 421 331 310 306 366 709 455 276 554 679 255 374 319 365 438 348 582 440 314
 368   3 307 324 214 531 140 296 395 320 472 427 363 530 386 466 390 599 473 285 414 640 555 398 352 437 475 430
 510 405 459 452 426 351  12 343 484 273 379 367 425 406 439  34 541 330 442 517 519 483 295 465 393 357 500 383
 291 468 293 537 581 569 451 146 509 498 551 516 355 478 101 275 544 529 194 548 290 411 382 486  30 288 202 467
 574  92 528 433 489  32 457 404 580 514 524 518 394  20 507 391 359 164  86 434 643 527 370 522  18 593 416 401
 577  42 705 602 533 503 201 495 266 453 491 482 444 479 261  48 120 361 298 512 163 535 488 611  21 676 613  10
 471 501 567 413 443  40 515 458 375 109 588 223 553  38 256 200 454 499 237 131 629 446 492 648 621  41 476 566
 490  15 497 562 641 289 656  90 481 387 538 362   2 188 172  59 286 557  58 526  16 626 542 604 702 523 456 665
 615 260 448 461 601  57 661  55 681 145 496 232 206 170  45 102 504 644 493 619 171  95 642 612 317 587 630 441
 674  85 719 560 116 447 576   9 660 579 549  17  97 113 460  19 130 738 272  56 595 634  75 658 166 653 639 694
 389 670 752 703  77 227 505 631 545  84 322  33 284 224  76 184 105 725 176 699 187 638 586  99 138 666 525 740
 539 265 578   8 565 191 594  73 561 161 154 623  79 174 165  28 199 610 369 737  65 757 572 723 169 650 693 688
 690 311 360 141  67  37 759  27 684 252 762  22 211 573  60 205 494 607 701 710 233 756 698  61 249 584 655  81
 748 197 646 711  36 270 618 231 704 326 753 114 263 575   6 304   7 692   4  24  83 697 728 677   5 133 726 712
  25 664 680 675  68  70  31 632 747 274 720   1 239 418 220 338 353 755 536 328 158 734 118 716 708 596  82 104

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00029e+07us (= 10002.9ms, 10.0029s)
Wall-clock time (full program): 1.00618e+07us (= 10061.8ms, 10.0618s)
Satisfaction error: 2
Number of search iterations: 2738
Number of local moves: 1040 (including on plateau: 409)
Number of local minimum: 264 (including on plateau: 52)
Number of resets: 1
Number of restarts: 0

Problem in column 18: 39 35 96 150 247 633 63 278 178 222 159 417 110 554 599 330 529 164 361 499 557 644 738 725 610 607 692 755 => the sum is 10991 rather than 10990
Problem in column 20: 54 229 732 124 152 773 26 253 669 563 339 344 350 255 285 517 548 434 512 131 526 619 56 699 737 710 24 328 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   5 659 300  56 654 611 636 768 745 776 727 714 738  42 207  96  26 141 650 769  12 129 170  15  36 417 692 199
 655  50 355 130 138 657  44 718 724 648 132 658 728  55  11  88 606  69 683 746 178 741 736  30 204   4 435 767
 666  17 209 131 737 379 717 716 251 744 667 341 671 153 161 144  20 168 670 749  93 635 673  61 108 146 224 739
   3  41  82 327 719 633 644 696 215 609 674 331 687  62  75  92 631 232 634 642 261 618 700  94 450   1 142 695
 689 632  74 301   8 102 731 649 104 699 697 171 608 580  16  66 686 103 661 705 235 684 672 173 139   9 121 675
 653 219 351  19 604  78 638 539 174 622 574 220 651 107 643  59 560  25 601 641 619 516   6 595 228 179 257 612
 615 682  34 607 565 143 628 645 260 535 639 290 664  45 610 246 248  29 585 597 190 449 626 122  32 239  83 582
 555 603 182 559 558 270 563 529 562 614 462 114 554  52 599 416 265 262  57 549 289 579 538 325  48 218  39 629
 511 575 222 586 530 128 366 475 237 286 513 127 533 576 561 245 505 537 521 249   2 593 613 541  72 193 194 499
 569 556  43 616 568  37 324 536 471 392 496 162 489 543 461 362 317 534 229 523 156 514 509 578 192 243  76 494
 498 495 124 457 564  86  97 492 456 473 588  49 581 480 517 458 134 269 478 479 446 465  77 467 415 377 493 476
 546 522 154 591 454 507 483 149 413 315 422 172 447 466 363 196   7 550 443 491 389 420 424 439 231 485 427 484
 437 412 167 320 399 382 186 482 393 191 532 230 459 515 469 432 426 503 497 368 481 441 411 409 267 381 436 364
 421 477 451 468 434 410  21 361 385 438 342 360 352 448 396 404 373 428 365 433 405 440 419 384 372 407 371 425
 386 375 418 414 306 321 430 343 376 429 326 334 397 702 444 403 391 406 356 395 445 358 464 303 442 337 322 367
 329 318 735 401 357 388 253 354 359 298 313 566 374 294 390 323 755 299 316 274 398 275 344 779 500 353 310 335
 400 380 752 250 394 333 508 328 297 349 370 729 348 309 296 340 594 387 336 305 472 226 378 266 690 369 383 201
 304 402 712 688 314 273 281 302 637 524 255 587 332 319 295 783 242 288 330 308 312 256 339 282 518 279 551 277
 346 408 781 233 177 725 519 287 311 293 254 624 189 238 264 276 567 460 748 258 280 234 263 208 525 544 706 272
 151 679 742 160 244 703 647 205  14 572 259 640 236 206 183 240 715 625 175 463 663 252 292 217 526 620 338 223
  90 181 743 291 187 713 542 662 278 307 202 474 195 136 283 605 284 584 506 155 774 185 169 197 704 553 765 225
 188 166 504 285 203 241 452 271 759 137 214 577 200 691 176 685 540 676 212 213 630 758 165 211 678 531 527 100
 163  89 528  79 221 621 152 148 701 184 227 627 216 623 157 598 247 656 119 140 571 180 780 775 681 720 589 198
  63 164 520 710 766 453 115 150 487 423 756 502  46 778 694 668  81 120  98 159 547 113  87 602 652 665 455 116
 753  68 490 730 112 431 106  65 570  31 101 486 158 760 722 740 147 784 123 135 770  95  54 757 350 680 646 126
 105 764 548 111  47 512 145  27 669  18 125 488  13 708 660 726  99 693 117  40 750  28 210 721 777 573 552 763
 118 345 501 723 677 762  64  58  33  60  38 347  51 510 583 590 751 617 470 133 600  24 761 732 557 734  84  67
 771 711 268 747  53  91 698  35 109  23  85  70  73 592 754 709 773 545  10  71  22 782 110 707 596 733 772  80

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00611e+07us (= 10061.1ms, 10.0611s)
Satisfaction error: 4
Number of search iterations: 2234
Number of local moves: 816 (including on plateau: 236)
Number of local minimum: 197 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

Problem in row 11: 498 495 124 457 564 86 97 492 456 473 588 49 581 480 517 458 134 269 478 479 446 465 77 467 415 377 493 476 => the sum is 10991 rather than 10990
Problem in row 26: 105 764 548 111 47 512 145 27 669 18 125 488 13 708 660 726 99 693 117 40 750 28 210 721 777 573 552 763 => the sum is 10989 rather than 10990
Problem in diagonal 0: 5 50 209 327 8 78 628 529 237 392 588 172 459 448 444 323 594 288 748 463 774 758 780 602 350 573 84 80 => the sum is 10991 rather than 10990
Problem in diagonal 1: 199 435 146 450 173 6 449 289 249 229 269 7 432 396 702 374 729 255 293 14 662 452 621 766 730 548 345 771 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  84 723 144 718 238 700 678   3  97 588 739  75   1 194 182 174 632 328 727 746 205  86 758 690 737  27   7 709
 619 135 707 655 734 139 751 118 675 267 212 716  34  67  12  52 749 120  15 630  11 685 755 610 661  23 124 714
 710 743 618 732 654   6 672 202 315 254 738 629 665  59  33  47 497 183  48 740 248 404 186  42 626  13 204 722
 616 760  28 747 715 694 673 266 227 609 648 297   5 136  60 146 280 270 520 745  80  89 639 285 492 230 129 604
  71 601 692 764 744 669 712  95  30 143 603 679  78  68 349   8 595 232 652 417 343  35 663  14 731 282  17 703
 553 687 564 584 560  32 598 213 268 313 730 551 114 290   4  29 585 112 605 636 653 364  24 596 622  93  91 519
 555 681 281 406 607 642 446  55 544 478 498 581 344 599 206  92 275 117 558 600  74 399 518  72 573 221  37 531
 545 440 511 589  25 594 265 359 295  10 458 615   2 583 214 173 442 530 246 621 353 142 627 517 479 158 539 658
 397 476 485 474 572 499 477 252 140 513 522 547 602 157 211 548 154 155 577  20 507  98 557 471 575  16 377 611
 592 475 482 536 525 650 535  21  90  22 413 623 463 509 309 433 490  53  49 587 284 200 489 542 456  58 538 566
 571 512 567  66 464 487 486 370 438 407 496 444 508 467 269 469  43 152 427 350 431  65 420 559 470  18 524 510
 465 311 631 345 452 402 437 259 491 459 495   9 590 501 396 529 103 241 528 552 426 245 379 428 121 368 365 462
 401 468 439 125 460 421 361 274 388 516 453 352 201 408 556 608 355 381 303 494 418 305 448 506  73 385 493 398
 481 414 366 451 521 514 472 300 537 335 434 380 391 378 102 541  76 199 410 455 416 170 337 429 576 450 382 473
 415 289 422 425 412 483 480 424 318 320 488 466 367 256 292 317 436 409 307 293 667 333 383 291 384 549 435 329
 326 312 441 296 169 411 322 447 319 356 260 369 578 332 484 543 697 302 423 554 614 271 394 372 304 393 301 400
 283 323 316 443 346 338 405 579 750 226 449 752 339 253 298 299 341 403 233 503 659 371 362 262 357 597 314 189
 340 386 699 336 390 279 193 419 674 392 776 461 363 306 354 387 395 640 375 207 235 565 210 225 321 373 342 347
 171 257 389 240 432 273 247 500 131 633 250 351 276 657 773 188 624 688 580 133 691 563 185 263 376 660 264 195
 324 255 228 231 308 218 310 711 649 635 277 334 526 286 457 216 634 724 287 236 244 606 358 239 219 504 647 327
 101 217 754 128 198 180 224 348 742 208 242 234 568 162 684 682 701 612 278 190 767 717 164 331 178 761 294 325
 187 251 165 330 116 172 766 774 209 570 222 122 360 166 671 695 540 698 181 237 149 720 728 243 272 683 656 107
 167 160  70 215 175 721  26 523 220 762  44 108 586 666 641 662 430 677 184  99 644 741  39 726 249 686 643 126
 192 105 156 502 757 261  77 704 593 696 196 179 151 708 664 582 145 729 706 258 159 705 147  40 168 735 527 148
 113 784 104 161 163 197 127 782 668 445  61 177 638 617 777 620  62 562 150  36 763 550 223 134 779 613 646  38
 153 130 625 288  79 176  50 719 534 123 191 111 733 693 713 772 374 670  88  85 110 546 778 765  46 680 676  82
 783  31  87 109 106 736 137 768 115 119  41  57 748 770 651 533 132 229 780 515 756 454 138 569 100 689 781  56
 775  64  19  94  69  96  63 505 532 591  54 771 759 702 628 645 203 574 753  51  83 561  81 769  45 725 637 141

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00748e+07us (= 10074.8ms, 10.0748s)
Satisfaction error: 2
Number of search iterations: 2239
Number of local moves: 898 (including on plateau: 285)
Number of local minimum: 179 (including on plateau: 29)
Number of resets: 1
Number of restarts: 0

Problem in column 5: 238 734 654 715 744 560 607 25 572 525 464 452 460 521 412 169 346 390 432 308 198 116 175 757 163 79 106 69 => the sum is 10991 rather than 10990
Problem in column 9: 97 675 315 227 30 268 544 295 140 90 438 491 388 537 318 319 750 674 131 649 742 209 220 593 668 534 115 532 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 769  73 728 779  43 723 749 269 139 187  35 140 130  33 289 143 727 713 648 545  83 498 557 462 117 165 764 482
 778 744 757 760 563 135 755 514  56  80 179 124  86  48 737  51 596 714 100 201  57  96 761 704  64 131 460 739
 535 512 677 729 370 123 107 453  93 777 775 155 126  70 699 106 614 772  72 237 171 132 773 468 562 657  79 146
 693 574 701 392  45 164 667 780 110 213 109 222  78  40 753 138 553 767 748 768  60 122 185 626 463 707 214  98
 709 770 688 538 771 156 759 293 505 781 184 161 224  71 153 144 532 277 439 758  31  65 620 530  81  59 102 589
 177 571 601 591 756 776 297 656  39 154 182 150 261 241 230 774 642 121 178 536 148 315 695 602 306 113 683 196
 136 585 637 611 588 328 716 672 197 127 282 217 233 174 503 236 583 624 142 549  29 754 630 615 247 141 189 244
 267 622 666 686 523 334 251 782 183 617 216 194 314 226 763  49 784 204 175 391 765 303 279 307 266 305 158 360
 199 662 650 715 694 188 319 703 119 295 296 242 278 246 565 317 579 186 234 504 359 209 647 298 248 397 451 390
 335 735 494 751  99 300 254 569 264 322 258 191 301 492 680 235 208 413 721 586 404 320 363 681 225 341 336 112
 330 170 584 524 519 382 312 604 304 467 381 325 356 308 643 212 731 515 368 316 227 285 238 590 321  90 690 198
 442 541 559 479 697 284 259 495 309 344 250 255 423 367 567  95 499 253 435 379 331 281 438 533 513 221 430 311
 265 324 501 396 375 401 348 560 425 310 340 373 353 480 663 500 417 288 409 493 369 206 231 346 332 411 433 441
 323 762 488 437 272 371 342 262 472 172 783 416 421 364 333 263 362 464 280 350 318 252 476 377 521 366 349 394
 490 414 347 302 352 357 354 516 351 428 345 489  88 434 449 380 337 427  37 473 291 483 478 426 561 418 520 443
 458 386 256 190  66 410 326 200 384 477 455 475 461 573 415 486 398 276 474 609 287 556 260 547 429 329 195 612
 419 385  25 388 229 376 402 239 412 400 544 554 395 527 207 273 358 471 299 270 294 487 628 510 633 484 361 420
 436 528 268 275 176 529 531 257 509 372  87 290 506 508 407 447 343 445 537  36 389 678 446 497  11 383 507 592
 374  24  17 181 169 465 598  58 599  77 469 607 613 534 450 283 249 431 387 555 456 645 632  13 491 578 448 587
 566 125 147 166 616 594 577 180   7 245 543 631 746 582 546 670  76 424  41 128 687 485 550 518 658 408  27  47
 466 129 240 101 133 634 406 173 605 621 595 502 692 575 243 581 422 548 551   6 671 481  23 163 403 432  68 526
 600 327 137 152 339 542  97  69 638 629 564 440 619 511   1 355 104 603 659 558 552   3 114 167 646 539 457 568
  50 215 228 393 750 103 118 405 736 635 655 517 452  28 149 741 157 576 271 105 572 444  85 378 706 459 608 454
 525  84 205 151 496 641 640  21 722 540 664 710 684 660   4 649 108  42  61  53 651 682  89   8 625 673   5 597
 193 220  94  92 203 470  22 145 732  15 766 606 653 752 211 726  38 232 705 668 623 644   9  18 115 745 654 639
 210  20 218  82 223 652 711  34 676 691 618 702 696 674  46 718 192  52 689  91 708 679  44  10 700  55 725  74
 134 202   2  62 313 522  54 743 685 274  16 627 738 730 116 698 162 120 669 160 733 593 159  26 734 636 365 717
 111 286  75  67 610  30  19 338 719 740 399 675  63 742 168 720 219  32 661 665 724 292 580 570  12 747 712  14

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00615e+07us (= 10061.5ms, 10.0615s)
Satisfaction error: 2
Number of search iterations: 2492
Number of local moves: 846 (including on plateau: 412)
Number of local minimum: 187 (including on plateau: 37)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 177 571 601 591 756 776 297 656 39 154 182 150 261 241 230 774 642 121 178 536 148 315 695 602 306 113 683 196 => the sum is 10991 rather than 10990
Problem in row 7: 136 585 637 611 588 328 716 672 197 127 282 217 233 174 503 236 583 624 142 549 29 754 630 615 247 141 189 244 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   9 752  81 708  12  55 729  74 761  36 644  57  22 671 626 718  20 194 103 732  40 736 738 304 217 687 719 545
  53 751 593 695 670 250 216 319 219 154 688 148  42 272 689   5 144 122 668 591 174 705 300 654  88 743 291 746
 134 691  18  51 727 251 613 632 645  68 693  43 366 609 623  99  61 248 146 635 115 715 717 677 110  10 559 734
 637 724  26   1 650 375 658 580  76 234 638 152 100 675 699 667 155  14  71 188 138 662 610 186 640  17 694 723
 582   3 616  34   6 105 676 629 619 140 331 206  31 710 665 237 572  24 612 648 508 722 276 168  33 702 539 596
 525 680  79 673 522 239 605 114 657  96 630  35 540   8 551 101 299 378 498 611  28 193  70 634 233 696 672 624
 109 692   2 592 728 136 543 636 641 570 507 119  29 681 602  66 381   7 659 150  77  16 311 447 589 529 584 587
 607 614 560  63 618  95 575  64 583 199 453 261 515 617 480 196 406 143 532 526  11 556 514 131 191 631 224 625
 586 579 558  56 647 448  90 225  85 521 520 557 652 633 541 516 160 183 621  19  32 574  97  73 438 546 563 470
 488 581 542 467 527 401 660  98 478 595 451 328 388 485 505  65 259  23 165 436 369 500 222  59 615 588 126 569
 466 476 503 561 550 121 458 506 457 452  27 334 538 339 492 409 555 481  41 425 254 384  58 404 449 434 321 495
 405 419 523 490 598 246 391 511 513 238 264 389 512 421 454 418  25 430 440 360 477 484  45 396 269 548 277 446
 459 411 497 471 408 392 435 427 496  87 483 462 468 547 232 410 348 302 337 390 439 320 157 528 431 573 153 327
 394 333 530 374 346 326 443 475 403 428 445 474 358 464 256 544 367 487 352 361 482 444 426 420 357  21 402 278
 343 308 363 386 262 489 461 286 399 393 499 400 424 432 494 383 353 340 417 422 437 387 296 407 313 491 433 372
 385 442 205 486 244 553 223 133 473 415 271 338 270 330 288 779 535 684 312 465 290 364 549 316 600 397 292 351
 362 429 329 413 303 578 260 347 279 472 241 565 255 342 370 712 533 315 359 301 293 309 726 703 356 267 289 282
 354 307 163 298 371 642 266 742 306 335 757 228 178 295 185 265 585 518 365 531 314 253 714 322 463 349 697 187
 344 192 701 170 280 517 258 158 213 606 379 721 184 235 305 655 524 735 753 159 350 108 739 730 341 212 231 190
 127 230 368 166 257 603 247 310 775 263 325 345 221 711 275 229 509 460 210 773 765 179 373 766 380 252 690 181
 177 245 685 747 284 748 317 664 189 382 156 706 268 285 169 554 214 656 249 273 566 324 332 649 620 207 204 120
 281 173 294 236 243 745 755 218  94 287 145 164 782  93 323 180 398 628 283 137 571 776 534 510 661 762 502 215
 123 355 666 590 130 599 202 226 395 767 201 604 568 195   4 698 377 707 211 198 674 318 456 200 769 227 441  89
 744 208 203 594 763 704 111 608 175 479 112 733 777  67 135 601 504 716 416 142 772 176 731  15 106  78  80 240
 125  38 622 242  72 519 149 501 709 700 209 737 784  52 147 537 627 455 778 139 682  91 469 450 759 118 197  82
 639  44 423 562  60 172 141 663 104 781 161 493 780 754  49  92 669 577 220  86 683  46 117 597 576 768  47 686
 774 274 162 151 643 552 376 720 171 536 653 651 167  30  48 741 646 749 760 725 679  84 297 182  50  54  13 102
 758  39 678 713  69 129 132 124  75 756 107 740 771  37 783 113 764 414 412 567 770 564 116  62 336  83 750 128

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00034e+07us (= 10003.4ms, 10.0034s)
Wall-clock time (full program): 1.00627e+07us (= 10062.7ms, 10.0627s)
Satisfaction error: 2
Number of search iterations: 2329
Number of local moves: 975 (including on plateau: 434)
Number of local minimum: 181 (including on plateau: 43)
Number of resets: 1
Number of restarts: 0

Problem in row 6: 525 680 79 673 522 239 605 114 657 96 630 35 540 8 551 101 299 378 498 611 28 193 70 634 233 696 672 624 => the sum is 10991 rather than 10990
Problem in row 12: 405 419 523 490 598 246 391 511 513 238 264 389 512 421 454 418 25 430 440 360 477 484 45 396 269 548 277 446 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  80  33 451 777 724  88 763  56 623 769 125 146  62  20 734 663 643  54 121 662 683 782  44 399 690 718  46  34
  45 767 695 503 631 534 128  72 522 107 100 684  76 753 185 742 162  60 445  50 776 783 633  90 119  41 515 772
  68  93 770 571 702 666 720 127  66 184  95 621 622  31 543 187 766 155  97 115 657 711 716 531 175 764 186  51
  99  94 745 438 747 706 536 392 131 108  52 591 461  40 544 670 649 682  98 229 610 784 171 238 762 135  71 207
 132 194 111 781 779 740 173 189 217  92 223 688 715 164 614 426 165 761 262 150 729 680 653 615 210 168  83 276
 172 201 655 479 240 775 213 499 759 123 218 490 145  37 624 713 672 277 219 116 676 678 609 750 225  85 188 152
 356 114 296 523 652 608 773 578 221 271 211 259 736  21 352 575 758 253 157  78 613 343 627 654 325 282 241 113
 287 278 176 741 193 554 594 755 313 230 105 477 178 289 255 735 667 524 198 270 774 281 739 500 153  32 390 302
 283 133 355 636 258 737 159 703 707 149 269 448 593 195 744 474 226 592 174 723 530 274 234 220 450 158 317 249
 261 280 264 730 364 351 257 182 109 757 373 635 212 256 629 513 337 549 470 266 661 326 236 738 342 247 491 154
 142 181 231 496 239 309 377 640 268 778 248 681 725 290 598 546 156 595 319 273 420 519 250 675 345 209 180 300
 765 746 233 335 320 379 228 455 301 432 371 358 260 367 288 245 768 394 192 760 542 327 279 502 267 294 310 272
 340 361 381 275 242 425 284 318 389 452 312 453 780 346 331 298 349 299 481 398 434 376 404 350 341 749 514 308
 295 464 375 771 476 336 433 406 286 422 293 322 408 382 368 446 344 494 492 306 552 385 359 380 254 305 297 339
 384 328 447 311 407 316 528 333 460 483 435 424 378 232 395 372 391 338 252 401 442 518 348 360 449 468 427 363
 403   8 347 459 414 462 441 478 520 457   5 411 437 416 323 465 467 151 412 533 330 497 525 139 400 535 417 538
 511 366 537 386 374 314 495 215 419 357 440 147 480 393 362  81 583 334 482 409 243 421 493 563 527 413 321 324
 489 540 507 486 383 246 405 370 471 443 475 456 365 388 129 183 415 458 550 428  61 508 509 208   7 506 439 565
 556 545 505 199 620 237 547 430 488 202 658  59 431 606 110 285 472 429  43 548 205  82 573 138 564 469 485 504
 568 634 466  48 587 161 454 304   2 589 584 102 235 585 227 410 597 551 602   1 163 612  26 332 570 501 517 562
 625 566  25 126 561 569 473 136 582 689 693 166 122 516 487  57 484 117 191 651  24  15 167 510 586 576 616 660
 560 512 574 224  14 581  96 756  22 498 668  65 526 607 292  67  42 588 671 315 101 144 521 203 553 647 539 604
 559 558   4  70  87  29 664 599 641 656 665  30  77 605 112 397  17 402 628 567 263 674  28  69 696 603 644 646
 699 590 642 303 557 200 118 143 580 717 611 572 120 639  53   9 141  75 626 577 124  74 160  64 710 600 617 669
 685 673  73  12 222  89 637 244 354 733 529  38 137 700 251  91 579 307 638 596 103  39 532 265 396 691 731 645
 722 630 444  27 169 204 423 728 705  79 726 555 436 679 130 369  63 216 692 697  47  55 329 291 140  11 704 719
 708 387  49 179  10 197  35 134 686  23 752 418 732 712 709 353  58 687 727 701 214  16 619 463 650 106   6 659
 196 714 632 104  18 177  36 748 148 190 754 694 541 721 601 618  19 648 751 170  13  86 206 743  84 677 698   3

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.3075e+06us (= 6307.5ms, 6.3075s)
Wall-clock time (full program): 6.36818e+06us (= 6368.18ms, 6.36818s)
Satisfaction error: 0
Number of search iterations: 1127
Number of local moves: 650 (including on plateau: 227)
Number of local minimum: 55 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   4 180 751 767  55 756 308 598  54 716 292  39 703 712 762 653 146 111 700 651 730  22 123  24  78 304 750   1
  12  13  14 603 667 742 710 734 263 217 184  86  79 768 753 757 100 185 708   5 155 167 666 635 255 104 747 661
 678  27 437 660 754  21 744 695 118  62 248  83 726 719 618 737   6 143 319   3 681  97 685 652  84 164 772  57
  42 105 694 697 611  10 765 613  25 271 115 215 626 638 585 699   7 159 691 216 745  59 127 634 381 240 663 357
 599 313 628 311 345  93 570 354  87  52  48 536 565 713 723 642 177  96 711 553 679 244 135   8 539  77 592 600
  41 108 706 186 665 523 714 595 221  61  26  73 501 554 323 521  53 531 571 654 619 165 202 702 259 137 686 593
 639 120 577 145 237 324  15 668  16 633 154 494 690 572 566 701 299 172 540 562 509   2 616 662 116  23 534 404
 636 242 537 265 533 205 548 309  85 114  89 151 583 510 569 532 236 674 584 573   9 321 575 508 168 391 484 559
 594 125 561  11 563 256 556 432 386 557 513 150 535 512 227 605 158 520 596  65 579  99 551 495  34 220 601 489
 574 182 347  90 588 446 550 507 275  17 400 161 582 602 482 555  40 560  28 414 568 378 474 502 428 187 525 528
 429 442  31 343 466  18  76 515 297 339 657 505 295 511 567 478 234 349 549 410 393 214 459 420 471 543 581 398
 476 516 477 246 433 101 517 325 276 529  33 303 576 401 444 447 486 458 630 488 462 117 522 506  92 274 497 358
 485 456 372 499 334 479 370 487 425 465 440 449 454  20 468 332 411  30 426 481 455 396  35 367 439 457 498 460
 328 490 441 264 445 364 412 530 322 312 341 464 361 397 337 369 473 353 379 406 399 470 365 395 238 389 527 419
 331 422 463 340 384 375 388 469 480 394 223 427 434 423 625 280 368 514 436 421 415 542 189 320 310 350 424 243
 305 279 413 355 689 461 407 475 676 382 315 196 363 443 329 390 338 316 371 336 377 504 416 356 387 362 453 296
 213 351 725 656 126 392 318 597 546 300 254 359 224 366 431 342 643 235 317 409 448 405 417 260 383 650 346 277
 306 624 330 752 291 333 289 191 492 301 627 609 385 272 267 344 408 141 402 483 373 669 314 241 590 327 249 380
 233 374 286 283 294 664 226 632 591 755 326 268 270 307 403 285 615 247 721 199 250 614 282 162 640 704 166 193
 376 251 288 608 335 544 231  98 360 717 728 171 229 262 157 208 645 692 206 727 526 607 163 284 491 670 194 222
 225 748 278 451 204 524 252 136 680 179 760 677 230 298 197 273 732 290 102 195 776 617 302 239 612 604 190 219
 228 545 266 580 783 181 769 261 759 500 764 649  95 198 245 129 620 212 132 175 131 622 253 103 778 631 112 269
 739 558 258 430  56 770 293 232 610 683 780 450 257 113 287 200 693 203  80 119 188 564 715 218 718 467 153 156
 174 629 130 644 773 418 121 133 496 207 586 743 152 149 134  88 655 761 110 720 106 589 623 139 281 707  50 672
 210 777  45 209  82 688 128 122 736 698 201 740 170 192 144 176 541 771 518 741 178 687 646 709  91 538  69 183
 606 784 779 124  44 724 587  71 452 673 552 735  63  81 169 138 621 763  32 472  19 705 142 109 647  70  47 781
 733 782  49  36 173  75  68 147 684 160 675 519 775 211 140  66 648 758  94 438 148 348 641 658 749 671  51 493
 774 547 107 435  60 503  58  64 578 696 659 738  67  46  38  43 637 746  37  74  72 766 352 682 731 729  29 722

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.57035e+06us (= 4570.35ms, 4.57035s)
Wall-clock time (full program): 4.62909e+06us (= 4629.09ms, 4.62909s)
Satisfaction error: 0
Number of search iterations: 663
Number of local moves: 610 (including on plateau: 142)
Number of local minimum: 9 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 664 641   6 619  25 132 124 205  35 738 624 607 274  77 709 737  75  34  90 686 747 662 749 721 663 188 156   2
 714 618   8 734 631 349 702 309 122  55 159 613 628 300 752 731  83 110 196  10 733 784 672  13  53  16 317 578
 748  85   1 743 769 141 118 406  12 201 366 514 674  67 757 668  48 268 194 772 633 775 760  22 725  15 150 359
 606   7 684 627 383 637  84  71  11 650 161 680 646 108 466 683 424 149 531 556 259 736 742 718  82  86 104  99
 689 545 715   4 600  42 304 569 659 355  18 678 611 113 464 649 388  46  40 498 652 598 612 704  27 144  19 247
 599 212 656 605 499  26 594  41  23 242 329 597  43 566 561 632 609 351  92 658 661 660  21  14 602 562 389 146
 673  78 438 535 111 116 114 564 620 139 192 630 645 540 560 655  37 174 536 657 636  24 341 724 583 626  33   9
 735 106 667 644 433 130 208  20 610  94 211 559 423  59 555 505 534 109  28 493 638 524 340 463 635 591  51 625
 508 622 554 616 357 543  66 384  69 222 173 621 574 160 567 669 604 193 117  56 516 584 272 546 570 165 140 522
 460 436 512 595 131 547 647 537 224 245 297 588  50 151 530 601 506   3 603 387 587 395 221 529 473  52 451 232
 401 511 549 629 138 486 153 544 533 399  76 515  38  29 503 458 361 592 337 519 488 495 134 444 441 471 237 509
 526 284 548 364 551 565  80 296 528 501 476 517 665 500 442 440 427 416 475 422 209 405  74 143 218 558 324  36
 310 428 518 419 415 485 450 585 410 413 375 344   5 467 396  17 404 455 397 482 358 339 333 430 346 480 437 492
 285 328 392 459 393 307 314 470 374 372 377 489 456 411 541 484 299 496 446  30 487 550 362 321 434 331 336 445
 447 294 382 381 579 292 266 472 542 250 319 347 332 391 330 457 490 479 318 394 380 365 538 431 311 407 462 334
 345 469 379 449 593 241 278 298 443 176 774 263 468 335 371 439 282 312 765 326 425 348 478 320 323 295 432 363
 276 701 353 178 677 254 356 168 403 688 539 195 145 220 369 215 648 253 654 269 270 398 608 420 316 233 481 703
 373 248 315 228 685 325 770 186 385 758 750 286 350 306 368 287 378 251 226 412 277 236 727 271 289 497 454 352
 199 367 386 408 521 707 634 322 252 421 745  79 290 568 234 273 301 575 708 313 158 202 435 343 203 305 753 288
 167 258 190 240 461 781 699 112 308 429 681 279 732 751 169 137 238 327 651 230 303 219 589 262 182 243 586 766
 291 418 239 200 302 756 563 642 370 712 582  60 414 590 179 229 225 504 257 293 777 280 227 191 249 483 261 696
 235 700 264  39 105 197 783 755 491 691 640  73 217 183 244 148 126 773 172 204 119 163 494 465 716 694 577 722
  62 281 265 214 376 453 360 705 255 527 720 166 477 764  87 338 128 687 754 189 342 213 260 155 115 666 778 653
 223 147 154  45 246 697 695 739 671 572 181 136 164 692 207 171 390 552 184 120 127 107 256 728 768 740 698 580
 129 729  88 780 767 576 275 623 523 162 101 180 402 670  93 175 763 762 532 125  44  98  97 206 723 744 502 121
 187  95 717 102  81 177 417 133 693 157 553 198 690 557  64  58 771 730 596 759  54 525 452 210 185 782 573 474
  47 706 231  65  89 761 510 682 713 679 123 719  70 639  63  31 710 643 520 617  61 135 100 615  32 400 675 354
  91 676 779  68  72 267 426 152 711 142 448  57 507 776 409 103 741 746 571 513  49 170  96 581 726 216 614 283

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00603e+07us (= 10060.3ms, 10.0603s)
Satisfaction error: 2
Number of search iterations: 2325
Number of local moves: 862 (including on plateau: 321)
Number of local minimum: 176 (including on plateau: 43)
Number of resets: 1
Number of restarts: 0

Problem in row 3: 748 85 1 743 769 141 118 406 12 201 366 514 674 67 757 668 48 268 194 772 633 775 760 22 725 15 150 359 => the sum is 10991 rather than 10990
Problem in row 14: 285 328 392 459 393 307 314 470 374 372 377 489 456 411 541 484 299 496 446 30 487 550 362 321 434 331 336 445 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 670 438 667  51 105  22 499  19 495 110 188 157 637 605  78 275 607 288 642 733 694 657 782  36 766 122 527 120
  89 742 124  97  98  56 186 158 770 728 515 727 702 741 496 783 620 191 500 582 691  82  41 101 774  55 112 229
  30 664 679  42 145 126 714 116 449 749 740 591 448 738 389 458 196 195 547 129 762 166 697 178  90  29 724 199
  39 743 149 606  81 139 760 141 625 752  69 726 256 734 153  77 494 588 739 781 776  71 127 151 212 221 645 135
 123 522 213 159 784  86 737  57 777 717 621 648 719 265  91 682 487 128 580 716 297 167 102 209 103 179 757  64
  79 544 254 333 185 768  84 187 542 516 148 445 452 379 230 604 440 750 599 193 673 759 603 298  70 235 324 296
 205 780  65  75 241  25 663 299 720 523 597 703 320 247 660 307 778 618 710 721 286 121 248 156 577  47 261  37
 348 646 154 225 314 474 118 234 493 365 575 747 223 253 334 765 243 644 633 634 559 222 289 378 131 152 769  68
 252 775 266 233 308 323 138 271 430 695 624 656 371 361 585 773 183 767 613 220 615 327 147 133 207 177 273 267
 326 756 303 170 240 215 132 218 658 567 671 282 639 300 424 590 651 754 336 309 171 341  74 347 237 447 698 134
 332 242 429 245 370 161 321 244 454 357 779 338 696 246 214 662 444 744 344 204 329 249 414 306 278 366 510 712
 125 310 363 359 362 470 468 397 610 342 572 372 736 285 587 672 364 561 375 442 302 164 316 255 356 325 294 206
 771 301 427 313 259 330 287  66 501 431 609 412 269 558 676 304 384 518 355 481 328 460 305 411 117 377 425 315
 322 473 529 345 489 399 350 318 421 295 277 319 436 172 755 509 479 311 279 382 433 312 292 463 405 475 283 467
 380 428 343 418  40 568 517 471 346 555 541 251 393 239 376 226 422 358 484 353 451 456 198 514 536 406 369 351
 368  16 446 462 560 404 441 565 349 540 413 455  20 360 274 197 367 437 534 331 434 339 450 410 457 508 394 459
 146 466 490 439 383 550 465 402 268 482  53 507 395 337 142 335 381 317 232 407 272 546 586 340 530 563 387 569
 417 498 416 435 477 492 401 596  50  44 385 641  67 519  48 250 601 200 511 647 211 583 485 461 521 539   7 488
 291 504 562 476 532 388 486 538 210 386 176 497 264 163  76  88 263  85 503 150 630 453 592 533 708 443 524 469
 472 160 636 520 480 549 525 537 423 107 180  34 400 526 257 217  61  46 589 108 392 391 611 513 548 675 531 502
 705 173 396 553 659 576 483 661 373 169 478 119  87 581 137  59   8  95  83 564 228 761 390 690 616 535 203 608
 629 114 258 557 602 584 622 506  49 669 181 106 545 415 432 354 140  54  96 570  52  26 554 715 763 573 144 680
 512  27 578 619 551 612 270 556 227   3 408  43  35 640 711 201 109 420  14 100 136 686 579 735 403 751 655 409
 746  31  38 635 464 713 684 626 236   6  73 216 623 571 643 262 617 168  99  94  62 528 665   2 685 598 182 723
 701 162 652 593 764 600  12 722 115  11 174 677  60  28 731 130 238 707 208 184  45  18 699 566 219 692 552 730
 688 194 704 693 725  13 374 595  93 155 224  58 290 709 491 280 632 505  80 113 419 628  24 758 668  23 165 689
 543   5 674 683 700 753  63 772 202  10  92  32 614   1 426 281 143 189  21 650 631 748 687 653   4 732  15 666
 681 276 175 654  72 594 190 718 104 706 627 231 293  17 574 649 638 352 284 192 111 729  33 678   9 745 260 398

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.51339e+06us (= 4513.39ms, 4.51339s)
Wall-clock time (full program): 4.57217e+06us (= 4572.17ms, 4.57217s)
Satisfaction error: 0
Number of search iterations: 823
Number of local moves: 529 (including on plateau: 125)
Number of local minimum: 30 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  45 132 162 111 662 725 751 774 163 344  70   2  76 121 693 766 714 695 215 204 753  27  11 727 659 580 208 600
 776  71 733 741 637 759 445 737 673 233  92 721  15  60 298 377 186 655 157  73 713  36 105 138 647 702 104 106
 712  29 237 684   7 668 694 697 291 722   6  68 216 190 403 715 669 591  46  52 537 782 124 257 607 636   3 347
 613 635 710  66 681 726 663 604  69 640 109 570   9 173  79 603 595 117  12  64 624 605 210 252  10 708 269 574
 777 601 481 732   8 628 639 691 720  13 130   1 729  26 131 218 598  35  96  49 743 661 283 222 379 611 169 619
 718  65 674 641 642 532 622 625  67 114 514 728 100  88 120 234  56 561 127 116 610 627 293 236 547 701  54 578
 517 543 588 764 723 572 509 581 125 384 626 478  89 128 201 558 526 507 154 119 630  20 143  18 244 559  50 634
 744 650 563 494 550 427  23  19 643 230 274 571 638  34 251 153 483 568  25 557  21 542 144 397 633 596 184 576
 501 617 551 560 389 541 739  39 286 102 656 505 357  98 129 147 569 467  14   5 666 589 195 259 632 689 113 575
 676 167  44 620 439 282 567 556 565 264 536 524 555 493  61 161 402 562  72 426 457 502 231  91 554 540 319 324
 621 177 593 395 491 249 519 458 530 582 690 489 510 463 281   4 406 279 277 310 476 373 185 141 368 468 316 339
 241  38 387 137 420  75 498 533 474 315 618 577 531 160 414 465 461 473 433 256 553 594 139 523 506 484 372 313
 365 513 408 434 490 432  78 449 349 437 363 421 422 288 271 345 466 564 327 448 330 303 455 247 431 472 430 452
 416 409 278 471 411 302 425 391 475 341 520 388 436 479 374 499 447 332 399 350 295 198 606 453 115 518 460 202
 435 371 226 480 459 440 346 290 464 300 451 378 337 515 566 412 454 338 488 355 219 396 512 320 401 333 383 321
 263 325 272 446 392 258 359 482 267 356 516 331 405 362 585 504 393 390 528 413 322 334 525 443 246 496 469 308
 366 280 253 386 428 417 394 385 511 348 242 497 261 358 326 763 608 289 534 487 304 352 462 477 221 423 407 211
 284 275 255 229 429 549 254 301 217 424 450 243 369 508 778 535 266 335 442 654 306 214 538 685 268 135 724 323
 318 312 400 260 270 351 375 294 265 503 189 770 660 586 285 692 292 382 629 343 240 178 353 545 367 212 680 239
 336 579 354 164 287 404 364 361 522 752 224 156 228 657 783 667 112 317 658 616 140 165 495 441 206 180 602 220
 225 546 719 168 205 194 456 492 238 772  97 174 197 716 305 672 235 297 731 250 232 223 623 652 678 175 552 166
 151 329 145 142 181 309 781 245 653 273 150 276 706 597 584 573 227 262 548 539 370  63 587 486 682 248 485 398
  55 761 133 199 213 738 126 146 664 307 376 360 757 438 748 183 780 675 615 749  90  51 419 415  95  42 745 110
 118 768 187 188 688 170  80  58 754 671 182 742 651 527 677  33 148 299 746 736  16 342 644 760  31  74 592 108
  37 698 765 779 171  22  48 200  86 158 771 103 696 784 311 196 631 193 730 645  83 521 614 122 717  17 700 192
  59 107 381 314 590 136  62  47 172 609 750 179 747 709  30  82  85  84 687 735  32 775 704 773 649 123 686 683
 203 380 410 176  99  43 149 207 101 500 740 583 134 767 599  93  94 670 756 705 699 755 711 152  40  77 444 703
 418 612  81 209  28  41  24 328 646 296 648 155 159 665 707 340  87  53 544 734 529 762 679 758  57 191 470 769

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00596e+07us (= 10059.6ms, 10.0596s)
Satisfaction error: 1
Number of search iterations: 2747
Number of local moves: 977 (including on plateau: 395)
Number of local minimum: 201 (including on plateau: 37)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 600 104 636 10 222 293 20 21 5 72 279 461 345 374 515 405 497 450 503 522 492 781 738 688 779 381 380 418 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   9 720 711 747 674 257 585  60 115 105 746 182 735 725 370 104 590 307 127 362  22 145 714 700 248 195 254 481
 174 435 703 206 653 750 688  14 274 373 739 106 767 666  40   4 168 173 144  29 226 259 715 201 695 381 730 677
 745 651  16 726 733 323 736  99 197 165 709  17 574   3 708 724 645 151 154  81 697  50  63 646 150 532  86 609
  46 657 719  24 631 250 721  98  57 361 749  65 569 654 630   5 299 684  74 121 596 656 592 604 623 324  97  84
  30 686 694 734  52 134 310 108 685 518 264   8 691 717 586 680 576 642 131  76 636  80 737  25 215 124 170 681
  41 682 600 693 547 633 487 128 122 208 555  92 384 669 664  96 643 635 186 214 595 650  39 621 114 100  33 559
 117 628 608 690 504 315  38 211 611  36 605 345 637 698 485  13 594  49  77 331 640 270 530 613 658  20   2 665
 283 648 534 638 525  11 347 409  68 568 522 627 326 629 619 583 606  71 166 141  48 205 622 565   6  94 614 515
 243 537 618 542 516  66 587  82 152 562 230 533 548 509 589 535   1  67  62 520 541 616 573 440 480 178  88 575
 501 495 571 491 502 499 461 240 610  15 506 578 479 554 580  18  27 395  45 316 445 251 527 552 163 164 551 454
 483 539 500 467 494 375 488 317 511 171  19  26  69 626 582 514 486  34 321 265 448 607 529 503 593  53 513 457
 408 462 449  58 397 433 232  91 439 549 507 519 463 396 560 291 295 419 447 376 579 133 401 399 346 450 398 493
 357 380 371 492 523 444 216 308 319 424 406 350 372 219 517 422 460 476 452 383 256 172 526 431 512 430 335 437
 343 465 369 446 505 489 337 490 292 478 379 421 468 400 193 416 336 456 429 453 428  12 344 441 393 459 356 392
 365 425 334 363 546 469 427 458 330 353 354 410 765  61 414 367 389 329 417 411 325 355 377 482 432 364 366 302
 359 368 418 348 391 262 388 443 327 318 351 360 615 404 402 438 420 412 328 322 776 470 298 311 358 403 386 314
 508 275 278 390 413 727 309 496 252 563 385 671 229 287 473 277 660 339 313 538 247 338 286 228 434 550 269 255
 620 221 294 340 349 625 436 498 249 748 306 342 281 341 387 253 272 722 451 536 242 352 303 378 271 475 293 405
 531 382 237 285 241 744 692 455 194 778 276 415 222 333 198 207 246 300 772 756 239 258 204 217 663 672 296 177
 188 196 234 180 267 673 588 544 784 741 754 280 297  64 199 472 147 769 484 718 187 312 130 282 266 764 332 138
 260 161 158 135 183 707 223 760 159 210 238 284 466 224 288 712 771 212 655 572 780 394 140 192 641 603 644 218
 683 301 126 156 148 261 556 598 612 676 157 189 213 263 305 290 773 779 706 139 225 497 185 203 584 557 729  79
 320 120 233  85 169 577 113 528 781 545 209 732 227 191 143 279 407 273 751 142 231 687 770 146 701 740 761 129
 782 160 220 119  23 652 111 661 762 132 184 597 236 268  95 591 245 464 731 649  59 678  75 723 510 524 602 137
 728 179 110 768 125  87  90 758 181 743 289 699 155 112 774 659  55 564 662 561 235 374 118  70 442 670 679 103
 540 149 101  47 162  42 570 755 783  73 426 757 153 190  44 634 304 553 601 753  72 777 675  51 202 109 704 763
 624  31 668 713 710  83 176 742 543 567  93 689  21  35  89 759  54 244 599 558 477 775 474 200 123 632 136 175
 702  37 116 107   7 102  78 639 581  10  32 696  28 752  56 647 521 471 705 667 738 617  43 766 167 423 566 716

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.9512e+06us (= 5951.2ms, 5.9512s)
Wall-clock time (full program): 6.00969e+06us (= 6009.69ms, 6.00969s)
Satisfaction error: 0
Number of search iterations: 1088
Number of local moves: 594 (including on plateau: 147)
Number of local minimum: 51 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 716 166 206 535 681 658 689 157 777 527  58  83  45 736  22  79  30  95 549 733 581 149 155 776 782 148 668 189
  92 715 579 483 113 144 754 104  21 117  69 701 262 665  66  59 781 142 783 750 780 327 172 101 685 727 737  61
 158 765 246 775 466 119 764 139  46 176  53 505 758 452 137  31  40 106 742 659 622 167 695 173 556 740 748 152
  82 687 749 492 690 218 634 705  51  67  89 547 498  18  55  41 203 140 593 746 561 543 120 177 774 677 654 179
  50 598 649 640 743 160 585  98 134 109  63 575 168 300 267  85 129  97 719 691 778 724 186 747 671  99 704 221
 175 409 472 714 684 417 763 709  16  91 127 680 237 305 183 245 234 255 760 484 643 204 321 276 647 118 639 182
 169 566 646 768 200 114 431 416 265 161  96 722 635 198 131 100  62 126 779 753 699 171 673 274 625 518 445 247
 238 660 713 744 211 253 432 703 151 108 216 731 228 192 163 617 230 105 662 629 755 243 125 309 536 132 745 159
 298 476 560 555 297 233 404 308 411 272 374 726 586 111 292 269 289 194 359 222 486 347 387 310 698 772 450 304
 202 559 531 475 302 229 706 363 311 295 217 570 697 215 191 239 184 209 510 250 468 329 540 428 338 636 582 414
 618 458 435 223 384 366 519 341 235 377 345 630 620 609 242 396 405 281 391 277 493 212 231 340 342 278 479 463
 353 418 741 280 208 350 564 346 236 275 294 271 725 702 283 354 410 210 287 611 471 333 723 393 351 268 328 205
 249 244 325 784 379 375 619 316 307 392 469 373 336 395 494 323 372 326 626 296 459 368 412 364 367 331 388 301
 299 378 398 360 178 461 608 365 361 357 426 732 356 358 446 306 254 335 348 520 521 324 457 423 303 380 337 399
 594 290 261 382 225 286 370 427 317 490 401 408 369 444 355 282 385 482 462 497 285 465 502 487 362 429 454 279
 386 343 133 422 501 413 128 616 339 390 514 319 415 610 291 568 248 478 381 533 344 488 532 512 522 214  32 318
 330 107 314 394 507 110 284 334 491 407 442 433 460 397 437 383 419 526 470 456  37 406 633 402 389 509 424 489
 477  29 403 376 425 513   2 553  12 420 474 504 164 315 439 441 436 565 188 448 332 534 371 529 440 584 567 449
 546 538 485 313 602 495 266 653 604  42 595  57 102 170 528 453 473 499 400 136 220 516 515 430 116 467 322 447
 455 544 273  73 434 524 352 577 650 600 589  74 130 443 572 503 541 645 115 213 199 551 545 542  87 288 122 349
 539  28 258  14 627 569 256  56 664 517 574 259 201 103 631 592 597 537  65 496 451 124 591 607 224 590 270 550
 500 596 241 196   3 599 232 674 571 735 438  93 219 688 612 720 480 656  35 145 143  25 601 700 165  86  71 766
 693 181 162 263 576  36  11 554 464 641 761 293 562 563 730 523 558 606  64  76 112 573  43  23 552 508 154 708
 696  34 227 193  54 580  94 605 628 648 525  72 548 694 655 588 676 624  81   6  78 669 637   7 121 613 156 481
 632 320 187 146   5 712   4 190 615 672 583  60 530 642 675 734 621 603 135  44 226 718 661 240 153 257  38 587
  15 138   1 174 557 751  10  20 773 756 692 264 666   9 679 614 752 738 207  49 180 651  48 686 150 506 252 652
 711 663  88 141 260 638 197  17 771 578 767 123 421  33 757 762 670 728 195  19  39 759  90 721   8  47  77 710
 717  80 707  75 678 667 312 644 769 770 739 185  52 623 657 683 511 682  84 251  27  70  24  13  26  68 147 729

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00602e+07us (= 10060.2ms, 10.0602s)
Satisfaction error: 1
Number of search iterations: 2457
Number of local moves: 834 (including on plateau: 301)
Number of local minimum: 211 (including on plateau: 47)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 189 737 740 774 747 321 171 755 222 510 281 410 323 446 444 415 433 474 42 650 56 232 36 54 146 1 663 717 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 753 690  56 170 174 151  29 140 112 719 681 750   7 676 738 713 686 106 626 109 156  45 772  88  55 725 721 342
 226 348 722 184   6 607 173 105 145 773 691 568 706 736 656 745 687 248  35  72  21 117 710   5 633 139 223 709
  11 763 649  97 701 124  14 261  84 705 221 663   9 735 627 672 760  53 138 292 236 561 712  94 189 688 699 232
 598 715 357  76 744 245  73  82 137 768 662 195 589 680 512 693 770   8  92  28  66 168 727 149 564 581 615  96
 590 542 597  42 654  13 586 167 152 726 668 134 720 614 635 628 577 244  20 257  46 315 733   1 250 372 675  32
 147 653 723   2 550  60 576  57 186 605 685 209 673 509 650 600 594 516  83  18 616  75 393 583 296 217 557 157
 362 622 283 154 612 228 115 251 470 504 483 207 640 359 631 602 575  40  93 620 166 417 634 684  16 404 766  52
  54 692 277 165 486 213 625 456   4 535 435 190 536 182 534 655 657 560 181 507  10  63 565 503 578 545 652 130
 101 361  23 239 444 136 566   3 648 450  44 344 518 599 445 552 558 484 336 447 459 554 454 587 429 487 508 214
 466 495 334 585 499 135 433 201 241  41 591  33 505 235 567 549 571 380 580  34 449 491 521 501 551 527 428  47
 200 658 593 196 412 493 490 403 178 472  15  37 510 269 340 421 579 298 574 388 478 463 419 498 494 569 436 107
 489 563  85 242 488 233 469 413 406 482  67 468 475 517 367 379  27 432 473 496 570 204 422 374 514 373 440 522
 275 497 480 205 453 150 573 385 323 397 371 553 341  98 547 382 442 461 427 414 310 354 291 346 434 541 559 381
 352 387 358 249 424 378 513 353 425 351 394 458 467 238 141 511 446 471 426 431 274 477 256 452 430 533 384 411
 448 409 389 457 237 360 410 309 418 703 331 243 525 313 365 443 415 264 391 402 318 481 392 369 437 347 350 464
 333 390 420 502 398 299 401 355 328 462 767 395 500 343 370 271 329 330 349 293 253 300 765 407 396 247 423 364
 548 455 757 667 366 451 320 240 345 225 222 711 479 665 303 294 302 211 288 301 780 332 263 183 230 118 304 630
 562 337  36 741 314 556 215 258 281 272 146 666 254 543 376 747 218 601 308 326 325 280 171 377 319 694 324 743
 305 127 270 529 338 659 399 704 312 316 317 619 307 327 383 192 231 216 674 339 363 335 644 268 202 682 262 670
 260 279 618 531 284 546 273 603 515 229 295 608 297 224 187  58 266 759 290 203 278 775 111 255 678 287 749 532
 234  99 540 523 259 485 368 506 596 159 113 537 311 439 162 210  95 707 188 758 779 629 246 153 679 179 375 661
 164 321 198 761 416 651 696 624 739 265 740 555  49 405 764 177 227 172 122 544 144 647 199 306 206 133 155 610
 609 128 639 671 220 642 120 592 520  59  80 697 285 539 185 102 193 781 782 784 180 613 160 530  38 175  78 588
 611 197 646 669 754 526 276 778 689  91 645 286 114 158 219 169  51 748 771 208 783  81  24 408 267 103  86 632
 621  71 582 460 129 519 742 698 683 123 132 604 108  50  77  17 131 252 623 708 746 776 104 718 737  25  26 528
 476  79 176 643 163 716 524 769 695 400  64  90 142 289  65 116  43 724 751 595 677 606 194 717  68 731  39 438
 465  12  61 756 143 637 729 617 584 110 638 148 732 161  70  30 119 538 641 714 752  69  19 700 636 212 125 572
 730 100 121 474 322 777 282 660 774  48 492  22 191  87  74  62 441 386 728 702 755 762  89 734 664 356  31 126

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00598e+07us (= 10059.8ms, 10.0598s)
Satisfaction error: 1
Number of search iterations: 2477
Number of local moves: 881 (including on plateau: 379)
Number of local minimum: 186 (including on plateau: 40)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 753 348 649 76 654 60 115 456 648 41 15 468 341 238 365 271 302 601 674 203 779 647 160 408 737 731 125 126 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  46 593  27 732 650 110 775 127 679 549  78 766  88 755 451 751 422   9 128  80 744 264 707  37  56 612  28 726
  90  40 762 117 761 750 696 151 774  61  17 777  73 757  91 763 266  89  69 440 201 584 630 131  33 574 569 724
 771 768 738 125 595 460 158 576 764 133  60 769 108 140 687 130  59  92 270 720 579 528 712  51  94 711  54 138
  74 647 333  21 746 113 719  71 607 121  79 749  72 152 737 639  25 159 166 621 686 592 776  58 555 654  35 783
 104 588 156 226  50  63 652 214 580 556  22 597  32 149 694 706 142 146 170 634 137 784 609 733  87 778 767 614
 781 638 150 199 773 498 216 116 721 566 181 242 120 165 716 770 323 176 582 632 675 256 347 171  96 594 224  62
 760 779 243 269 251 139 736  97 772 674 275 185 220 202 235 690 509 155 287 585 115 708 598 225 210 657 175 239
 237 673 157 126 141 479 194 734 589 625 255 259 244 231 678 730 504 212  95 644 685 722 189 300 293 596 179 219
 306 412 261 227 247 693 345 230 758 754 132 164 413 241 160 236 390 254 336 198 710 640 642 318 521 332 288 782
 718 285 649 249 273 271 328 312 432 620 248 286 394 282 200 304 459 267 661 705 688 252 363 206 656 331 361 190
 313 354 292 253 257 311 296 208 545 698 541 229 404 411 387 262 643 374 228 610 611 648 276 278 752 223 346 240
 310 263 319 303 284 359 343 321 501 741 265 205 429 356 753 530 408 388 291 355 497 344 573 373 365 379 325 410
 425 314 302 295 384 380 419 391 457 608 367 309 385 260 399 350 765 283 338 351 406 473 402 233 474 322 445 453
 326 348 353 452 308 337 407 305 449 382 467 330 461 517 258 377 438 418 386 396 315 759 465 299 342 268 383 444
 405 360 486 381 393 316 454 493 281 417 392 294 358 514 494 423 430 320 370 484 279 364 401 389 340 327 375 450
 424 537 476 439 398 446 245 371 211 485 538 434 442 366 416 250  31 441 372 277 522 414 274 470 524 395 329 463
 553 443 376 505 433 397 475 466 339 144 415 456 539 462 510   4  42 409 334 471 221 500   2 651 187 516 495 645
 623 533 420 534 542  84 478 426 103 197 483 448 515 421 663 507  55 491 512 204  82 172 543 435 536 481  20 482
 490 529 527 447 559 477 469 464 280  29 554 496 428 667 540  30  16 600 169 100  48 403  98 431 437 633 502 567
 468 472 520 572 578 101 147 506 246 102 272 455 289 604 590 565 106 488 729   3  24 122 544 557 583 196 581 570
 563  67 624 577 535  68 622   8  12 186 513 591 682 601 209 499 301 523 562 518 400  18  99 519 552  23 615 503
 558  75 550 670 646 173  49 636 124 369 627 605 458 628  34  53 487 547 207  11 492  45 551 658 546  57 602 532
 526  38 508 531  76 617 697 626 184 297 735  66 653 664  65  86 756 672 629  41 436  10 427 641 192 162 548 107
 587 178 232 586 111 568 525 689 118 378 703 135 680 704  47  43 619 715 613 290 182 180  36 571 368 298 631 203
 183  85 599   1 134 662 317 349 341 511 616  93 560 681 489 217 702 739 665 603 335 145 222 728 700  13 105 195
 168 163  19 731 154 727 153 695  15 307 747 684 637  14 167 213 666 692 480 238 324 136 215 660 606 701 564 114
 174 725 188 713 659 714  70 691  64 123 740 148 671  39 129 669 743 676 780 161 362 575 112 119 143  77 699  26
   7  83 723 709  52 677   5 717  44 357 668 218 635   6 191 193 683 655 561 618 234 352 177 748 742  81 745 109

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00604e+07us (= 10060.4ms, 10.0604s)
Satisfaction error: 2
Number of search iterations: 2490
Number of local moves: 1059 (including on plateau: 424)
Number of local minimum: 167 (including on plateau: 51)
Number of resets: 1
Number of restarts: 0

Problem in column 14: 755 757 140 152 149 165 202 231 241 282 411 356 260 517 514 366 462 421 667 604 601 628 664 704 681 14 39 6 => the sum is 10989 rather than 10990
Problem in column 26: 612 574 711 654 778 594 657 596 332 331 223 379 322 268 327 395 516 481 633 196 23 57 162 298 13 701 77 81 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 649  74 647 631 193  22 324 195  30 660  18 766 731 160 742  47 752 714 255 707   8 695 614 749 212 246 124  25
  28 125 713 739 305  55 143 738 705  91 341 676 650 106  20 754 748 652  60 290 153 730 671 743 404 209  61  80
 708 119   7 219 607  88  99 688 684 168 274 737 706 141  40 767 771 672  78 171  34 775  46 761 494 770 355  11
 661  48 762   1 605 164 258 669 225 696 155 726 565  24 665 716 496 747  77  84 237 689 627 205 308 115 409  57
 657 641 533 643   5 132  71 698 648  41   3 277 529 162 633 727 700 590 232  79  64 670 685 584 694  10  94 188
 621 598 551 709 208 301  53 548 467 602 284 138 659 166 572 506 462 560  19  81 507 610 187 173 632 345 394  37
 682 281 639 720 152  26 532 626 134 679  33 314 528  82 642 629 740 662  68 558 269   2 517 272 415 278 397 113
 559 489 715 569 304 307 103 456 593  45 127 441 539 148 574 491 535 693 248 518 147 567 454  76 579 130 514  69
 273 656 348 408 100 282 521 646  75 655  14 387 717 554  72 497 615 638 316  12 536 493 547  39 582 192 343 472
 504 327 624 523 182 391  17 544 664 268 123 516 492 543  29 530 603 573 177   9 365 552 511 159 519 117 553 575
 434 687 407 483 390 261 564 505 555 126 339 531 546 383 252 541 425 266 285 466   4 396 347 233 402 226 379 556
 499 191 430 449 142 203 534 389 526  63 257 101 501 545 587 515 183 628 403 561 580 433 429 211 452 133 477 568
 502 240 478 361 412  59 417 386 470  42 498 440 458 354 471 330 265 486 326 538 421 488 310 279 508 411 594 446
 392 522 336 562 460 457 376 427 267 362 366 399 338 377 275 400 455 450 424 414 353 358 410 318 451 235 435 371
 352 437 283 370 299 540 333 525 445 447 313 356 369 484 465 476 372 461 475 444 487 323 473 311 364 206 350 230
 438 368 428 198 300 578 276 431 463 436 674 699 395 363 405 448 337 418 576 481 292 239 220 234 172 401 294 426
 388 320 432 302 298 346 297 384 380 289 422 604 349 293 423 378 420 599 321 468 374 303 319 328 231 439 625 658
 259 253 131 382 213 490 334 236 317 510 601 721 385 287 375 406 359 325 416 381 179 419 373 500 214 571 673 680
 169 613 288 360 563 393 678 202 163 271 750 322 245 315 186 264 619 200 758 778 238 340 256 620 207 549 312 331
 329 485 178 244 724 495 722 174 744 344 512 158 227 612 581 296 351  87 513 342 242 260 254 585 189 765 286 291
 140 204 712 146 725 760 654 733 149 398 675 175 223 197 332 357 170 137 479 145 609 196 215 736 218 595 630 280
 306 165 335  97 589 583 773  83 768 718 668 367 112 755 199 250 156 144 263 114 666 107 251 591  92 459 728 651
 194 210 228 681 217 557 640 180 136 686 503 151  73 779 644 221  21  56 783 704 701 309 597 110 161 442 295 711
 241 683 229 262 745 764 623 190 184 524 469 527 216 741 185  89 116  66 777 118 611  15  54 413 759 635  52 702
  58 645 249 710 600 780 154  93  98 270 634 201 150 636 577  43   6  44 774 606 732 108  67 550 734 616 247 608
  70 637  31  27 509 667 120  50 756 464 596  23 139 692 111  96 121  35 622 781 735 746 102 719 128 757 690 566
 105 243  95 104 480 586 782 129 122 653 753 224  62 617 776  49 176  36 723 443 769 135 763 453  85 520 570 537
 772 729 181  90 663 703 592  65 222 482 588  13  86 474 157 167  16  51 542 697 677  32 691  38 784 618 109 751

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00606e+07us (= 10060.6ms, 10.0606s)
Satisfaction error: 2
Number of search iterations: 3732
Number of local moves: 1236 (including on plateau: 625)
Number of local minimum: 320 (including on plateau: 84)
Number of resets: 2
Number of restarts: 0

Problem in row 4: 661 48 762 1 605 164 258 669 225 696 155 726 565 24 665 716 496 747 77 84 237 689 627 205 308 115 409 57 => the sum is 10991 rather than 10990
Problem in row 11: 434 687 407 483 390 261 564 505 555 126 339 531 546 383 252 541 425 266 285 466 4 396 347 233 402 226 379 556 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 779 773  46  54 718 154 431  71  80 706 699 653 517  51 766  43  58  42  88 117 553 647  77 576 127 692 770 702
 778 678  95 120  73 748 610  66 115 577 570 585 592  63 711  98  47 128  45  64 611 213 614  94 668 557 707 763
 777 634 769 105 671 621 760 139  49 782 137 484 732  83 677 107 229 575 440 108 118  89  87  97 116 780 689 135
  76 745  70 761 603 705 219 195  65 659 173 584 625  44 682  82  25 764 663 695 169  62 176 549 104 733 650 112
  81 776  60 145 672 338 633  78 106 562 772 781 680 214 743 152 188 619 171 581 123 258 133 586 464 256 626 192
 130 582 113  53 468 756 696 109 312 560 681 230 607 210 574 165 314 714 114 246 642 125 746 164 146 708 664 161
 755 618 179 151 500 654 783 209 129 644 462 693 498 138 551 182 362 620 186 250  85 715 198 177 124 730 155 242
 235 247 259 223 665 636 233 589 170 651 276 685 690 285 727 189 675 716 208 178 374 183 350 157 222 751 225 191
 236 270 342 271 648 238 687 343 784 490 326 280 726 103 172 628 466 598 158 631 277 281 196 260 255 679 325 320
 244 587 148 306 775 703 291 444 274 403 241 389 649 272 300 368 321 559 629 740 261 304 228 335 269 348 294 308
 201 227 329 414 580 344 550 318 302 460 753 430 452 415 354 501 569 395 367 303 737 206 380 347 257 218 333 248
 220 282 292 339 561 190 406 418 266 503 357 640 563 340 226 317 691 512 237 660 597 315 423 351 234 360 309 381
 323 353 422 330 297 298 433 504 412 373 467 474 392 313 386 402 496 477 341 224 324 301 370 405 284 739 365 485
 332 310 355 328 346 283 506 646 456 428 424 279 446 267 493 394 421 441 345 383 469 385 356 287 336 465 437 372
 203 316 359 393 263 253 364 400 378 404 290 475 417 399 398 409 408 427 387 401 742 425 388 327 429 379 457 499
 536 502 492 352 426 511 489 273 432 455 407 513  24 472 447 382 459 254 416 377   7 337 532 448   8 478 519 442
 391 454 518 535 369 268 410 413 529 479 334   5 295 390 375 305 204 361 419 480 451 278 531 363 579 286 435 533
 439 371 590 436 142 527 458 299 443 262   2 591 384 523 434 420  90 376 445 514 463 461  11 487 397 473 411 541
 534 470 667 505  29 449  56 544 486  34 509 593 289 565 548 507 243 136  36 483 545 624 528 110 495  13 516 476
 612 239 471 494 147 520  99 193  40 194 568 594 102 712 481 539 515  35 482  15 331 617 537 578 564 197 606 508
 538 542 605 571 174 552 358  37 641 156 275 149 216 632 121 530 221  74 583 524   3 491 666 655 596  61 522 497
 572 144 555 600 217 252 307 526 750 288 521 100  69 547 140 728 567 207 599 264 510  38 638  18 731 558   4 540
 566 525 627 556 150   1 131 710 652  84 639 180 322 684 101 670 554 199  93  39 657 645  16 658 757 212 543  19
 661  12 438 656 774 119 167 701 719 141  20  57 232 595  92 768 396 132 608 488 249 613 601  67 635 168 181 700
 573 187 673 630  86 211 126 588 296 134 615  75 202 669 163 604 762 622 662 293  59 683 616 688  68  52  10 643
 162  79 759 709 245 200 143 747 720 265 153  14  48 546 175  28 251 349 736 602 744 240 738 741 752  23 184 637
  30  17  22 231 319 450 623 717 686 185 159 366  55 754  31 749 724 205 765 721 215 725 758 694 697  33  27  32
   6  50 735 722  72   9  21 713 698 111 160  91 166 704 122 723 734 453 767 609 674 729  96 771 676  41  26 311

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.59102e+06us (= 5591.02ms, 5.59102s)
Wall-clock time (full program): 5.65044e+06us (= 5650.44ms, 5.65044s)
Satisfaction error: 0
Number of search iterations: 917
Number of local moves: 632 (including on plateau: 161)
Number of local minimum: 34 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
   3 267  14  39 751  30 101 744 746 645 145 766  21  70 204 653 658  56  60 108 708 757 564 662 644 749 678 147
 674 660 701 148  11   8 225 721 284 133 726 663 179 104  43  88 703 318  18 618 681 758 151 737 578 668  50 342
 581 716 771  44 732  98 120  32 697 727  46 700 648 181 333 624 661 105 100 144 745 155  49 562 250  52 752 365
 712  89 514 410 696   2 220 722 728 238 692 714  45  94  40  22 684  10 186  76 710 611 664 576  85 604 615 231
 497 535 306  31 534  53  65 711 588  29 640 559 657   1   6  59 735 603 188  77 625 762 572 718   7 654 518 260
 675 511 336 173 731  84  80 222 629 531 705 650 165  23 139  37 612 107 106 579 601 516  68 638 487 729 498 358
 636  57 553 174 694 196  54 631 525 172 704 642 585 448 125 252 510   5  62 600 586   4 609 764 160 652 348 242
 630  26 619 109 589 262 337  48 526 462 592 320 128 270 537 502 512 610 203 346 379 509 477 676  83 683 508  47
 590 198  58  36 472  74 445 556 655 312 540 639 583  38 293 457 504 557  69 324 495 435 566 162 571 521 738 102
 594  16 214 430 568 315 528 584 505  78 550 489 546 481 209 401 300 542 329 470 400 527 369 395  71 494 519  66
 122 544 558 483 475 412 452 417 517 119 476 436 116 467 240 616 500  82 244 491 443 554 551 608  61 361 555  90
 215 326 259 530 461 191 338 359 391 418 524 405 323 282 482 289 569 485 243 368 153 454 533 383 617 493 453 446
 380 580 488 539 269 211 378 473 274 189 393 520 290 602 570 371  67 455 480 532 503 235 207 474 353 399 444 314
 545 438 447 416 406 362 599 355 469 460 440 322 343 465 294 340 304 442 352 387 464 456 201 253 275 332 389 434
 414 560 392 381 522 288 451 388 330 396 370 313 397 301 263 407 408 479 356 335 501 423 404 468 415 281 218 529
 382 421 317 351 285 620 409 463 490 357 257 413 428 441 233 366 422 538 367 478 426 291 325 431 321 271 310 577
 376 303 390 372 427 548 450 354 272 280 506 411 297 628 541 217 398 316 549 347 596 245 229 311 349 350 279 649
 373 565 670 643 327 449 232 197 308 292 194 466 251 248 688 331 307 386 484 309 167 287 492 717 486 131 384 606
 739 707 614 345 258 605 363 213 432 780 277 286 659 543 499 319 298 295 459 187 283 137 264 227 420 239 208 334
 261 536 706 622 141 621 328 216 772 273  87 296 299 419 613 667 210 607 741 672  41 123 206 223 193 212 190 715
 152 591 547 341 374 523 754 775 305 507 149 246 671 129 767 778 268 278 563 170 375 130 158 228 339 182 266 424
 255 185 224 265 403 690 679 437  55 748 377 132 171 689 496 219 236 180 637 226 302 753 184  99 665 241 776 666
 175 163 183 682 177 761 138 150  27 249 344 221 736 765 734  96 743 254 632 709 134  86 695  64 698  79 702 593
 117 124 140 651 205 626 680 195  51 725 157 126 159 742 230 686 176 635 723 687 256  81 713 385 669 112 169 770
 164 641 161 779 202 763 730 166 156 646 154  91 552 750 582 178  72 513 769 777  33 759 192  63 364 200  75 458
 127  73 439 774 237 782 574 247  35 677 784  20 598 691 623 733  19 693 575 110 234 685  92  13 567 425 121  42
 168 561 276 627  15 760 673 143 199 429 136   9 783 724 573 647  97 719 755  95  34 111 699  12 747 103 114 781
 433 597  93 595  28 656 587 471  24 118  25 135 360 394 633 634  17 720 740 768 115 146 756 142 515 773 113 402

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.0079e+07us (= 10079ms, 10.079s)
Satisfaction error: 2
Number of search iterations: 2601
Number of local moves: 873 (including on plateau: 293)
Number of local minimum: 200 (including on plateau: 34)
Number of resets: 1
Number of restarts: 0

Problem in column 16: 653 88 624 22 59 37 252 502 457 401 616 289 371 340 407 366 217 331 319 667 778 219 96 686 178 733 647 634 => the sum is 10989 rather than 10990
Problem in column 24: 662 737 562 576 718 638 764 676 162 395 608 383 474 253 468 431 311 717 227 223 228 99 64 385 63 13 12 142 => the sum is 10991 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 562 137 728 777  84 549  93 775 274 542 135 776 711 109 781 431  29 141 593 184  23 124 606 667 409  43 543 164
 715 470 709 721  71  68 488  80 328 125 302 760 589  62 102 752   3 201 395  49 597 181 763 697 686 241 753  82
 237 103 767 682 291 745 179 750 519  24 101 105 768 707 148 639 197  45 516  44 167 661 219 759 594 269 640 114
 632 690 773 407 138 719  92 784 588  35 708 122  97 154 243 283 211 233 191 174  72 145 733 782 454 132 658 740
  47 172 602 623 718 247 108 758 474 156 747  69  98 726 281 586 207 246 152 272  74 213 687 392 770 713 712 140
 504 153 633 616 151 769 133 183 565 123 455 149  83 677  51 641 334 581 637 387 190 280 757 656 736 209 224 113
 270  90 187 527 320 144 751 698 692 314 741 180 200 115  85 533 534 178 524 203 176 746 706 744 772 188 260 112
 591 130 264 619 182 316 229 684 538 263 778 175 199 699 163 220  96 292 680 289 766 155 638 573 468 230 228 525
 668 268 198 670 279 242  99 336 608 208 146 136 294 300 275 625 734 139 761 771 464  73 389 561 611 216 704 215
 693 261 426 548 732 248 297 234 577 250 452 170 217 240 204 681 671 150 451 325 257 447 288 348 710 490 296 327
 783 259 356 651 308 239 332 330 702 266 738 304 245 295 236 271 196 410 609 415 277 285 278 756 526 225 345 353
 340 572 232 614 596 221 423 438 440 355 313 729 305 360 365 487 312 255 323 421 433 231 528 359 445 159 290 444
 267 774 273 497 315 354 517 134 338 514 309 478 192 337 432 779 256 258 414 303 299 301 317 529 578 463 420 342
 293 361 484 419 349 252 703 363 489 400 331 276 439 762 319 369 372 418 143 465 437 427 385 226 347 416 378 367
 482 399 536 383 333 358 214 466 368 362 311 408 442 398 601 390 111 364 284 443 446 417 530 424 321 380 413 406
 429 351 396 286 501 486 326 498 131 459 391 373 376 381 500 493 560 471 496 628 448  22 457 126 322 382 307 394
 329 552 357 218 386 462 403 469 104 532 508 370 436 476 341  61  48 441 384 495 499 657 511 343 318 435 405 450
 503 537 480 253 592 617 502 393  77 371 262 473 559 461 404  81 142 310  12 510 456 507 222 472 346 575 485 388
 118 477 520 107 544 590 475 428  57  17 374  86 422 339 580 553 652 547 121 557 541 555 412 335 287  67 570 659
  27 564 669  25 430 673 676 624 265 375 377 453 644 521 551  34 546 607  50 185 582 605  20  13 223 512 173 566
 235 583 157 298 505  46 612 523  91 449 106 568 492 626 522 352 540 631  95 675   4 481 195  79 251 650 579 645
  56 665  19  40 630 558  10 483  38 735  52 460 491 539 518 210 634 610 584 531 731 162 350 194 401 647 554  88
 550 509 158 128 506  53 587 212  59 694 571 434 646  37 563 615 621 513 567 254 186 688  42 411 189 467  64 666
 165 696  76 244  21 515 574   7 227 716  94 613 535 556 664  63 366 653  39 425 730 683 622 127  28 660 171 720
 635  66 193 397 576  54   6 110 749 705 636 604 764 249 595  89 603 717 166 569 620 402 119 238  11 458  60 599
 282 685  31 129 160 100 700  58 205 649 161 655  36 642 743 494 663 678 742 689 727 600  70   1  41 344  14 691
  32 379  65  33 598 643 724 168 748 679 714 585 695  16 648 202 629 754 306   2   8 618  26 169 116 654 117 662
 545  87 701  78 674 722 737   5 739 672 177 479  15 206  75  55 723 147 755 725 780 324 120   9  30 765 627  18

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00031e+07us (= 10003.1ms, 10.0031s)
Wall-clock time (full program): 1.00622e+07us (= 10062.2ms, 10.0622s)
Satisfaction error: 2
Number of search iterations: 2351
Number of local moves: 888 (including on plateau: 338)
Number of local minimum: 165 (including on plateau: 38)
Number of resets: 1
Number of restarts: 0

Problem in column 8: 775 80 750 784 758 183 698 684 336 234 330 438 134 363 466 498 469 393 428 624 523 483 212 7 110 58 168 5 => the sum is 10991 rather than 10990
Problem in column 16: 431 752 639 283 586 641 533 220 625 681 271 487 779 369 390 493 61 81 553 34 352 210 615 63 89 494 202 55 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 724 160 148 659 236   8  73 130  53 294 138 767  10 617 740 729  88  66 657 522 766 707  59 755 704 129 720 331
 333 347 705 131 750  62 697 180  30 292 156 339 730 711 615 142 718  38  52 650  34 706 104 737 135 589 386 621
 745   6 700 715 667 258  25 147  36 109  96 637   5 756 725 325  24 111 689 738 660 722 139 757 686 428   2  82
 248 330  23   9 564 549 670 105 684  87 462 302 370 728 717 112 726  35 739 532  85 688 221 723 396  91 167 627
 683 580 298 571   4 662 191 107 582 193 481 691 710 719 672 464 237  12 636 157  81 732  94   1  31  39 629 733
 682 577  26 675 641  43  93 448  16 117 353 547 576 530 644  18 658 487 511 535  46 664  11 598   7 570 271 646
 318  83 115 478 630 702 653 546 635 126  20 158 768 492 504 545 440 583 516 736 235  13 212 626  45  58 216 537
 274 649  61 614 272 699 490 175  57  17 102 176 357 601 607 162 623 468 599 612 336 645 247 676 609 181  42 639
 159 143 575 674 567 628 540 110  37 420 543  29 555 698 581 204 369 384 647  48 196 550 553 552 527  95  55 551
 215 415 520 416 439 526 295 505 529 480 388  68 538 539 310 560 625 433 122 348 241 515 502 407  15 377 141 521
 149 349 501 588 475 514 513 260 534 296 279 262  19 557 457 198 485 261 495 423 177 489 525 404 170 590 496 524
  22 406 317 503 412 507 350 470 389 150 301 256 168 474 562 455 585 422 596 572 288 342 304 418 413 471 411 426
 452 335 392 293 284 306 579 429 510 243 473 559 573 476 417 233 326 443 548 479 291 363 137 375 442 308 405 319
 179 332 390 494 586 368 446 307 450 286 463 268 486 421 299 401 409 444 394 556 208 488 378 518 385 315 441 278
 187 367 397 578 400 500 313 508 380 460 303 305 437 344 419 491 266 477 356 398 531 328 454 334 432 351 281 393
 445 362 430 466 343 322 387 246 461 434 355 320 324 323 542 270 329 693 346 631 311 309 391 395 340 327 509 379
 217 651 228 240 364 431 435 568 467 459 263 371 178 352 186 376 321 337 456 250 592 312 458 372 280 703 685 438
 734 275 341 190 780 282 254 232 541 366 600 498 358 360 269 238 289 383 472 338 519 402 245 436 469 249 277 593
 695 214 424 361 195  74 166 616 209 482 403 561 619 201 414 775 205 290 382 153 620 252 574 264 359 774 544 164
 499 690 760  86 219 231 211 316 727 597 512 779 203 226 206 610 239 297 273 741 408 251 373 200 189 773 223 151
 694 716 762 197 152 285 165 229 449 655 253 746 747  27 118 663 287 161 483  92 425 155 594  97 145 770 701 222
 604 265 182 188 210 184 783 517 536 731 744 679 497  60 220 146 668 712 244 227 584 123 666 202 242 140 587  49
 493 173 119 185 613 709 225 606 365 681 742 595 259 374 108 771 230 174 257 114 634 154 687 192 735 354 314 127
 566 267 453 638 769 194 172 759  71 451 224 199 345  89 276 624  79 680 283 255 782 106 696 169 671 591 465 116
 528 656 103 776 144 761 603 300 781 611 381 213 207  63 124 713  80 484  72 134 677  32 692  40 618 569 563  65
 128 554 751 120  84 708 784 754  75 602 642 523 133  51  28  33 163 648  41  67 669 654 506  56 772 234 558 652
   3 661 665 101  90 399 113 777 778 678 565  21  69 125 132  99 758 753  77 632 410 218 721 622 533 171 765  54
  14 427 605  44 100  78 764 643 608 673 748 121 749  76  98 633 763 714  47  50 183  70 447  64 640 743 136 752

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00605e+07us (= 10060.5ms, 10.0605s)
Satisfaction error: 2
Number of search iterations: 2318
Number of local moves: 940 (including on plateau: 426)
Number of local minimum: 202 (including on plateau: 60)
Number of resets: 1
Number of restarts: 0

Problem in column 3: 148 705 700 23 298 26 115 61 575 520 501 317 392 390 397 430 228 341 424 760 762 182 119 453 103 751 665 605 => the sum is 10991 rather than 10990
Problem in column 21: 766 34 660 85 81 46 235 336 196 241 177 288 291 208 531 311 592 519 620 408 425 584 634 782 677 669 410 183 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
 740  35 737 730 584 776  32 696 612 779 777 478  58  16 595 541  67  73 137 596 424  70  25  64 119 746  39 444
 769 750 106 693 154 562 149 543 566  28 429   7 310 116 637 553 723  46  82 518 617 773  54  77  31 678 781 238
  40  95 627 691 197 766 170 438 687  52 727  29 725  45 178 690 705 303 536  91 177 646 665 132 145 703 138 592
  83  88 784 338 650 143 183 652 632 134 692 147 109  65 738 547 598  47 587 102 774 538 140  86 702 573 111 747
 159 199 709 715 180 760 289 671 561 674 638  53 189 104 643 130 150 151 610 163 759 754  42 441 224 639  33 350
 229 114  98 660 203 770 230 529 622 144 676 206 556  26 755 254 549  68 485 201 631 387 745 152 264 739 204 493
 711 139 698 591 243 241 181 575 744 164 430 237 291 153 712 499 276 193 427 728 319 701  44 103 244 124 771 451
 356 357  80 688 366 120 123 783 221 752 165 194 630 133 619 753 179 332 735 731 281 245 299 282 341 608 215 402
 136 343 767 473 214 176 233 761 585 135 413 259 348 122 580 624 231 267 719 509 295 377 345 225 758 262 256 577
  89 672 185 502 270  97 184 590 220 314 614 400 751 208 248 700 280 564 539 733 258 327 405 284 304 331 279 642
 232 313 207 576 273 308 174 317 505 306 501 389 749 320 252 706 294 686 607 568 371 300 253 385 307 246 422 423
 223 236 160 601 247 292 380 352 301 346 490 765 410 330 406 257 334 416 572 732 736 434 190 277 251 266 260 726
 381 242 417 370 772 358 469 287 382 360 390 349 603 293 324   5 616 283 508 261 322 388 369 275 378 288 780 520
 278 326 433 408 235 209 450 361 397 363 484 364 491 296 414 443 420 542 448 311 403 373 442 472 415 445 290 477
 355 418 379 384 474 336 305 309 386 375 376 328 298 421 342 325 407 457 315 409 516 344 506 419 265 551 436 554
 399 455 515 312  36 435 367 340 439 359 396 391 141 425 463 302 480 486 222 488 496 559 504 465 454 467 479 115
 447 495 464 239 481 335 570 126 555 374 503  12 263 534 398 494 100 362  79  21 548 482 569 645 449 560 611 274
 662 476 466 195 393 394 602  43 483 372 240 583 470 618 432 431 437  96  38 586 321 523 460  30 651 395 401 192
 353 428 544 285 337 531 329 210 513 412 108 599  57 606 533  78 462 453 522 234 558 351 411 527 404 492 440 213
 498 323 446 168 196 458 487 169 188 500 339 468   4 635 333   1 546 383 368 475 452 625 489 571 621 589 497 162
 511 563 581 249 519 545 593   6 212 517 354 659 268 615  75 156 250 537 187  51   9 521 574 567 550 649 524 148
 528 557 600  17 512 713 318 198 157 594 112 597 392 634 142 129 644 272 316  76 459  11 663 510 530 118 656 535
 657 699 604 227 532  63 684 514  61 565 202 775 155 742 146  19 670 620  92 426 286  27   3 757 697 101 579  87
 540 588  55 127 748 182 655 211  13 255  49 526 718 578  18 471 640 721 641 158  50 191 623 636 694  90  56 756
 647  72  59 461 107 582 704 219 525 683 673 605 365 707  23 666  81 668 218 724  84 171 609 507   8 105 682  34
 782 661   2 175 714  14 679 200 166 743  69 217 269 768 228 271 653 648 110 347 629 675 172 613 456  15 654  60
 161 669  94  74 633  62 716 664  71  10  22 658 689 717 128 729 113 764 685 626  48  66 722 710 708 117 297  37
  24 677 173  41 720 762 734 226 186 680 121 695 681 763 628 216  85 552 205 125 167 131 667 778  20  93  99 741

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00619e+07us (= 10061.9ms, 10.0619s)
Satisfaction error: 2
Number of search iterations: 2324
Number of local moves: 809 (including on plateau: 281)
Number of local minimum: 186 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

Problem in row 20: 498 323 446 168 196 458 487 169 188 500 339 468 4 635 333 1 546 383 368 475 452 625 489 571 621 589 497 162 => the sum is 10991 rather than 10990
Problem in row 25: 647 72 59 461 107 582 704 219 525 683 673 605 365 707 23 666 81 668 218 724 84 171 609 507 8 105 682 34 => the sum is 10989 rather than 10990
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 157 local moves
Selected variables are frozen for: 0 local moves
79 variables are reset when 157 variables are frozen
Do a restart each time 784 resets are performed
############
Solution:
  14 670 276 772 159 219 123 286 756 344 649 495 145 232 246 677 625 228 341  87 698 744 717 169 751  13 231 323
 724   3 215   7 170 187 691 138 749  71 716 725   1 715 335 728 676 370 112 745  78 559  70 704 739  17 726  19
 643 372 467 669  15 175 452  11   5 675 616 573 116 626 683 650 752   8   9 612 632 534  64 673 122  90  52 694
 631 183 180  59 592 365 435 682  29 754 545 645  81 154 620 746 679 719 241  24 264  45 627  36  40 709 257 648
 738 223  86 734  22  67 710 108 589 723 411 617  21 638 561 690 742  76   2 508 210 580 332  38 305 548 144 567
 741 197 121 689 155 194 666 491 615 633 603 696  10  51  61 701 743  31 334 684 280  18  93 622 234 582  32 713
 564  20 306 526 132 520 126 139 628 705 448 581 527 531 570 403 695 134 174 284 593  56 681 538 386 647  42  34
 600 380  84 613 466 614 659  12 516 497 636 204 200 583  27 529 501 349 195 487 240 348  74 575 523 605  28 445
 368  92 140 665 556 505 606 405 408 503 557 113 572 587  30 410 419 120 135   4 399 512 493 536 371 440 458 586
 566 151  77 687 496  85  48 392 578  44 457 563 537 594 470 571 672 454 182 619 225 476 549 418 352 243  33 451
 644 193  43 540 577  50 398 558 295 464 463 413 560 504 468 402 111 316  95 522 115 550 610 543  72 483 539 462
 584 129 319 106 524 412  23 482 542 629 389  25 420 424 307 598 465 494 265 314 576 455 555 509 104 400 355 585
 436 303 202  39 425 328 461 379 442 422 530 417 460 481 233 431 475 374 343 547 404 340 478 415 477 377 325 446
 489 394 367 553 346 469 336 502 381 416 387 304 432 428 331 414 510 450 345 358 449 357 105 433 385 360 293 396
 409 423 480 318 447 313 354 351 500 513 471 287 296 384 488 506 382 430 315 515 373 310 333 289 444 309 353 397
 773 376 624 255 311 270 518 283 342 390  55 601 764 330 297 220 439 327 595 441 321 434 359 256 308 301 407 393
 326 486 532 363 362 459 268 427 401 238 279 783 262 201 718 429 274 521 498 406 337 294 272 260 562 267 528 237
 312 654 437 661 322 426 216 247 378 298 768 369 291 165 356 277 288 579 568 302 388 253 261 375 639 664 290 206
 186 747 364 275 350 737 727 282 133 780 148 443 172 213 224 102 339 300 472 252 699 660 266 205 630 366 668 250
 242 618 525 299 249 775 235 706 244 292 590 473 273 221 685  99  60 136 729 708 674 324 142 259 383  88 732 229
 177 730 697 490 157 245 395 599 203 166 196 167 218 222 652 143 181 766 535 178 774 248 721 209 753 226 688 254
  46 758 517 162 640 317 776 623 168 109 192 198 492 761 189  96 217 609 596 269 514 784 150 320 720 146 484 137
 171 552 731 119 759 438 179 208 607 212 329 281 693 128 263 158 271 141 771 211 611 227 767 781 546  63 655 118
 161 551 777 114 778 258 173 236 285  82 103 278 680 763 544  73 125 646 662 230 712  83 782 714 347  89 686  58
 160 519 702 456 565 703 338 634  80  47 239  49 621 733 184 176 127 637 608 147  26 602 663 207 251 735  16 765
 153 658 769 653 156 678 474 711 762 188 110 100 651 185 700  66  37 667 635 130 149 554 163  62 117 707 657  98
  91  75 499 101 671 760 479 507 190 191  97 391 755  79 641 642 131 597 748 656  35  69  94 152  68 779 770 722
  41 533 453  65 588 421 124 591 164 604   6 199 740  57 107  53  54 511 485 750 214 574 569 692 361 736 541 757

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.63759e+06us (= 5637.59ms, 5.63759s)
Wall-clock time (full program): 5.6962e+06us (= 5696.2ms, 5.6962s)
Satisfaction error: 0
Number of search iterations: 987
Number of local moves: 639 (including on plateau: 173)
Number of local minimum: 47 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0

