@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 310 235 319 357 241 166 248 109 541 510 198  78 161 614  89 137 200 396  14 412 239 601 588 605 457
  71 545   9 289 573 334  35 451 572  95 427 471  67 422 523 495 218 607 282 125  94 517  21 578   4
  97 470 221 485 315 205 617 389 529 405 447 295 345  74 473 160  16 476 220  76 429  73 486 187 335
 199 168  57 148 350   6 129 212 482 580 554 201 238 210 402 312 536 253 353 534 196 508 577 189 431
  27 323 472 407 240 592 138 252 203 271 267 563 425  39  19 569 498 618 496 193 501 386  22 513 413
 585 392 359  93 112 273 424 131  25 380 300 590 593 174 474 342 304 574  90 454 355  37  80 313 371
 414 456 503 621 165 408 268 223 142 622 294  61  15 411 272 458 146  69 556  36 450 170 570 440  55
 426 383 341 600 225 343 460  91 296 562 151 120 613 152 368 444 441 490 145 586  48 211   1 244  84
 515 624 110 173 118 528  75 612 339 546 192 337 540 306  31 409 428 204  70 162 608 265 317 270  46
 550 237 169  52 410 381 606 264 437 127 415  59 382 520 167 375 397 106 505 401  47 283 351 154 430
 483 299 575 130 564  38 478 307 140 149 298 363 236 390  96  29 352 596 555 327 209 126 531 348 206
 340 462 620 598 619 108  18 245 418 362  33 216 552 326 316 576 318 423  43  28 158  13 178 308 547
 367 163 465 157 527 394  65 597  40  44 176 499 364 591 582  56 481  60 432 493 549 188 194 202 139
 124 469 288 180 276 623 398 243 370 278 255 164 291 314 400 303  62 171 477 285 366 346 416 467 259
 539 287 286 507 183 311 249 309 293 177 227 247 344 530 595 266   5  58 524 406 583 275  11 385 228
 234 421 230 233 292 185 325 358 301  98 587 258 133 214 182 538 616 369 197 222 378 443 121 376 514
 594  86 384 537 509 260 452 584 102  41 305  20 219 374 610 141 215 332 354 269 105 568 611  49 104
 119 284 518 567 224 116 436 558 229 480 609 525 420 502 217 181 446  17 280 123 387  12 356  72 147
 136 579 360  42 433 274 195  50 155 403  10 615 479 250 115  77 565 333 297 466 379 320 395 338 559
 277 153 111   8   3  83 257 103 511 455  53 419 134 492 144 504 581 179 254 302 263 336 262 122 377
 232 512 132 464 143 331  66 506 328 468  87 521 256 100 543  79 231 487  26 544 186 404 491 128 560
 542  81 445 475  23 489 461 135 322 208 551  92  51  88 448 329 150 519 497  82 107 526 246 442 516
 175 101  64 279 290 566 321 213 242 324 484 281 449  54  99 604 347 114 463  85 500 557 261 553 399
 435  63 184 393 388 438 533 522 459 172 488 439  24 561 434 251 113   2 365 625 532 453 191 535  45
  34  32 603  30 602 373 571 361 349  68 417 391 494 117 226 190 159 372 330 589 156 207 548   7 599

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00501e+07us (= 10050.1ms, 10.0501s)
Satisfaction error: 3
Number of search iterations: 7069
Number of local moves: 5388 (including on plateau: 5340)
Number of local minimum: 119 (including on plateau: 701)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 27 323 472 407 240 592 138 252 203 271 267 563 425 39 19 569 498 618 496 193 501 386 22 513 413 => the sum is 8447 rather than 7825
Problem in row 20: 277 153 111 8 3 83 257 103 511 455 53 419 134 492 144 504 581 179 254 302 263 336 262 122 377 => the sum is 6383 rather than 7825
Problem in row 24: 435 63 184 393 388 438 533 522 459 172 488 439 24 561 434 251 113 2 365 625 532 453 191 535 45 => the sum is 8645 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 615 327 146 489 515 597 102  86 537 456  91  62  49 586 271 363 571 531 338 163  81 107 154 569  19
  21 251 207 265 220 230 581 490 315 579 283 337 214 249 519 168 621 482 295 228 361 521  70  55 263
 448 234 584  15 304 243 500 280 118 383 480 273 462 425 213 272 232 258 164 371  64 355 595 346 206
 236 536 454 508  36   6 496  65 208 121 376 159 302 505 561 372 527  47 616 386 114 179 559 235 221
 541 542  28 193 262  24  39 622 113 592 497 576  97 578 591 446  57  32 449 608  75 110 175 359 219
 582 111 507 274 526  38 316 201 525  96  45 362 437 587 162 330  43 491 533 600 158  93  48 560 200
 156  56 427 601 203 544 222 311 577 393 566 194 155  67 511 360 502  44  90 282  63 424 557 103 417
 293 564 291 598 117 204 233 606 248  74 397 488 403 324 130 126 539 546 242 211 100 305  66 137 583
 401  99 322 105  71 434 227   5 294  72 575 540 603 440 320 374 442 562  11 460  59 530 565 284  30
 270 255  83 215 573 133 395 599  87 380 547 452 131  26 447 205 254 481 161 120 125 513 431 379 563
 373 543 342 351 347 326 184 180 464 336 415 318 268 264 331 151 224 241 240 443 325 246 300 245 368
 476 479 108 550  80 554 568 127 435 139 292   8  18   7 144 223 145 450  35 388 590 487 348 567 607
  10 285 501 429 419 152 457 128  29 572 495 167 596 438 106 593 310  50 523 335 399 357  14 458   2
 340 169 369 195 297 286 229 423 244 328 451 197  27 392 341 176 299 344 288 394 612 314 514 430 166
 467  95  61 408 256 313  52 301 400 407 413 350 181 217 375 366 308 445 623   9 370 275 416 470 247
  82 123 439  37 609 552 570  92 518  23 142 188 409 187 148  98 421 605 478 276 381 150 138 611 548
 420 141  89 237 321 404 414 378 277 384 174 334 109 186 199 147 471 190 549 468 279 602 367 157 528
 287 620 535 115 418 459 402 463  46  60 352 545 178  33 398 412  17 558  94  42 343  85 522 290 551
 422 364 122 298 317 202 455 289 532 465  25 309 499 239 353 226 104 129 529 260 269 618 474 185 140
  88 216 509 356 461 516  77 432 165 574  58 472 441 426 345 377  68 212 257 191 261 453  69 365 436
  31 580 354 101 492 390 387 405  40 498 483  12 538 594 406 617  73 238  53 614 494   1  41 267 116
  34 512  13  51 396 112 173 619 312 306 486 259 613 153 329 319 411 189 473 172 604 389 218 349 333
 171 588 524 358  22 385 170 143 303 177 124 253 469 339 296 589 484 209 183 510 625  76 433   3 391
 506 119 503 466 231 585  20 198 504 132  54 477 182 135 250 192 624 210 517 160 520 410 485 149 196
 555  16 307 610 332 136 556 382 534 278   4 493 444 428  79 323  78 281  84 134 553 225 266 252 475

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00484e+07us (= 10048.4ms, 10.0484s)
Satisfaction error: 1
Number of search iterations: 4376
Number of local moves: 3259 (including on plateau: 3210)
Number of local minimum: 98 (including on plateau: 376)
Number of resets: 0
Number of restarts: 0

Problem in diagonal 0: 615 251 584 508 262 38 222 606 294 380 415 8 596 392 375 98 471 558 529 191 494 389 433 149 475 => the sum is 9333 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 112  18 465  25 554 481 623 161 129 215 417 197 246 328 429  20 615 581 440  84 353 445   8 547 332
 434  31 176  86 442 436  92  41 549 572  85 432 355 492  28 534 522 162 464 226 610 210 460 259 127
 263 550 157 606 393 155 113 223 402 484 408 508 601 570 536  93 102 163 164 583  19  21 101 594  16
  46 425 454  91 132 366 622 405 206  27 624  58 515  81 126  79  11 548 444 409 503 576 179 450 448
   2 537 467 375 170 520  32 614 584 276  49  33 413 100 552 597 542  59 220 521 158   7 379 194 424
  71 109 561 506 392 384  88 185 362   9 124 532 475 531 159 457   1 188 535  57 452 144 621 495 387
 498 175 317 620  50 607 191 558 566 218  63 250 205 369 247 105 569 476 151  15 395 447 165 122 446
  87 613 422 293 160 150 560 359 239 249 501 474 574 470 479  29  94 212 410 128 502 396  96  44 284
 138 458 600 364 204  75 435  45  30 389 430 229 511 230 104 504 222  82 403 587 472 471 455 152 235
 322 483 588 219 334 234 345 196 115 287  51 538 469 201 237 248 213 428  68 505 608 272 419   6 439
 255 299 297 303 265 241 324 371 256 580 224 611 260 267 486 228 277 307 254 288 319 251 278 352 232
 341 291 257 305 524 340 585 310 327 285 281 296 262 421 318 270  23 301 207 294 300 335 266 377 309
 312 275 348 343 286 290 289 245 302 280 331 541 282 274 529 295 333 283 326 315 336 292  60 344 314
 320 346 358 279 339 271 349 269 357 372 316 361 298 236 368 311 400 347 304 342 313  10 264 374 321
 370 323 203 380 145 488 390 589 412 186 365 172  24 388 391 351  66 325  47 338 401 449 350  90 582
 394  83 598 451 135 592 461 244 356 268 200 258 567 423 539 491 178 599 586 171 243  95 530 578 169
 591 367 146 140 381  39  36 459 373 507 555 431 107 441 103 494 466 509 625 180  35 411 238   4 187
 596 195   3 174 133  76 108 183 473 512  72 418 453 117 193  48 518 123 192 513 111 568 167 308 565
 376 437  26 528 564  22 363 382 602  62 233 519 137 398  38 225 173 404 514 414 156 433 306 499  14
 416 516 559 553 190 545  42 136  53 551 485 456 118  37 125 216  34 605  89 477 143 612 517 184 166
 462 202 106 383 386  67 261 399 141 562 556 252 242 153 617 131 443 240 487 116 360 427 595  69 168
 139 329  52 482 406  17 493 593  77  43 557  13  80 571 181 616 603  74 182 510  64 526  98 619 500
 209 468 420 149 577 497 119 189 533 110 199  70   5  12 544 563 463  65 543  61 604 120 478 490 337
 575  78 148 130  73 525 489 438 154 208 273  55 527 385 354 397 378 198 114 480 221 253 618 540 214
 496 217  97  40 590 407 415 231 227 573 426 121  99 330 142 523 579 546  56 211 147  54 177 134 609

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00496e+07us (= 10049.6ms, 10.0496s)
Satisfaction error: 3
Number of search iterations: 3939
Number of local moves: 3299 (including on plateau: 3252)
Number of local minimum: 23 (including on plateau: 395)
Number of resets: 0
Number of restarts: 0

Problem in row 16: 394 83 598 451 135 592 461 244 356 268 200 258 567 423 539 491 178 599 586 171 243 95 530 578 169 => the sum is 9209 rather than 7825
Problem in row 18: 596 195 3 174 133 76 108 183 473 512 72 418 453 117 193 48 518 123 192 513 111 568 167 308 565 => the sum is 6819 rather than 7825
Problem in row 25: 496 217 97 40 590 407 415 231 227 573 426 121 99 330 142 523 579 546 56 211 147 54 177 134 609 => the sum is 7447 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  38 457  10 181 106  73 427 157 251  76 544 491 374 282 604 342 435 146 564 250 272 581 601 456 107
 474 619 323 268 227 367 563 537  17 351 242 328 542 144 324 111  12 280 496 131 441   7  28 378 615
 497 444 613 231  56 149 381 284 121 300 476 213  69 517 484 148 559 331  19 395 139 368 406 299 326
 411 150 112 562 185 489 560 362 524 478 137 117 450 442 443 147 340 359  11  33 290  71 468 523 161
 160  99 285 501 606 198  67  23 432 237  51 352 172 440 585 433 103 472 353 224 357 387 356 461 471
 311 216 254 228 480 485 383 597 267  36 203 133 552 190 245   2  57 568 170 470 252 576 196 558 396
 521 167 176 608 318   8  63 260 398  52 458 345 239 625 428 380 547 206 336 288 182 269 495 230 226
  15 243 572 477 507 415 166 532 188 225 291 355 102 199 187  59 376 295  55 184 235 294 143 100 513
 499 525 511 346 430 329  90 492 519  35 426 624  48 116 561 278 109 410 533 308 358   3 153 373  83
 219 573 539 621  47 207 307 598  13  97 620  30 488  84 201 409 490 502 550 466 498 393  85 592 607
 422 407  42 335 325 348  72 306 419 402 262  93 292 332 321 388 365 283 337 327  94 463 372 414 404
 394 467  62  14 261 616 223 596   4 584 273 209 303 518 238 599  96 602 390 553 413 189 175  41   5
 305 298 276 330 361 256 314 446 313 319 399 425 247 420 309 193 214 255 248 350 249 253 343 364 338
  49 506 424 156 531 622 582  78 453 416 455 401 165  91 279 124 436 195 296 162 370 317 421  88 445
 302 363 240 287 257 142  87  92 465 603 575 591 191 200 554 541 574 334 418 571 448 344 110 192 229
 115 540 297 481 449 459 565 270 493  37 118  79 155  98  80 202 417 403 158  82 612 171 369  20 127
 526 179 333 452  32 347 510  21 578 509  31 431 611 194 246 514 244  66  77  26 527 438 454 138 341
 141 169 605 339 119 384 479 211 473 536 529 289 437 482  53 152 322 205 108 614  44  95 215 275 549
 354 241 451 125 304 178 594 371 135 434 408 263 320 366 105 566 208 134 122 312 375 487 522 233 217
 180  46 258  18 400 534 123  89 579 173  75 163 556 538  43 567 210 516 583 589  61 218 177 617 512
 588 186 475 128 281  22 274 316 174 623 129 528 132 569  27 140 460 104 429 595 349 423  29 551 293
 590 197  70  24 379  58 504  16 164 212 520 236 600 377 503 557  81 486 439 462 234  25 570 220 301
 222 543  45 618 114 505 264 548 535 204 126 587 508  34  86 405 265  68 310 315 286 577 136 515   9
 101 130 259   1 586 483 221 469  39 386 412 145  40 120 389 385 545  50 546  54 159 266 392  74 168
 391  60 593 494 464 151   6 154 271 500  65 397 232 447 530 183 360 555 277  64 580 610 609 113 382

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00496e+07us (= 10049.6ms, 10.0496s)
Satisfaction error: 8
Number of search iterations: 3777
Number of local moves: 3101 (including on plateau: 3059)
Number of local minimum: 29 (including on plateau: 408)
Number of resets: 0
Number of restarts: 0

Problem in row 8: 15 243 572 477 507 415 166 532 188 225 291 355 102 199 187 59 376 295 55 184 235 294 143 100 513 => the sum is 6728 rather than 7825
Problem in row 9: 499 525 511 346 430 329 90 492 519 35 426 624 48 116 561 278 109 410 533 308 358 3 153 373 83 => the sum is 8159 rather than 7825
Problem in row 10: 219 573 539 621 47 207 307 598 13 97 620 30 488 84 201 409 490 502 550 466 498 393 85 592 607 => the sum is 9236 rather than 7825
Problem in row 14: 49 506 424 156 531 622 582 78 453 416 455 401 165 91 279 124 436 195 296 162 370 317 421 88 445 => the sum is 8062 rather than 7825
Problem in row 15: 302 363 240 287 257 142 87 92 465 603 575 591 191 200 554 541 574 334 418 571 448 344 110 192 229 => the sum is 8710 rather than 7825
Problem in row 16: 115 540 297 481 449 459 565 270 493 37 118 79 155 98 80 202 417 403 158 82 612 171 369 20 127 => the sum is 6797 rather than 7825
Problem in row 24: 101 130 259 1 586 483 221 469 39 386 412 145 40 120 389 385 545 50 546 54 159 266 392 74 168 => the sum is 6420 rather than 7825
Problem in row 25: 391 60 593 494 464 151 6 154 271 500 65 397 232 447 530 183 360 555 277 64 580 610 609 113 382 => the sum is 8488 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 176 569 224 435 353 563  16 483 139 472 226 533 285 463 213 439 207 397 109 549 150 135 311 219 159
 249 596 294 597 348  49 593  82 350  27 559  73  31 459 365 561 278 279 326 188 489 550  12 310 160
  54 174 582 423 494 580 406 595 275 591  58 552 455  64  32 187 175  52 584 362 258 206 329 225 112
 438  90  33 543 152 448  11  50 378  28 503 594 387 115  37 257 499 421 471 607 169 581 437 409 167
 245 357 196 364 392 405 266 171 193 558  99 404 525  76 475 157 487 214 583 400 464 156 212 307 119
 347 520 289  87 302 502 102  19 567 618 368 449 606 415 128 295 388 313  72 478 344 308 512 492 601
 136  47 262 537 453 441 462 390 616 490 127 456 461 524  55 341 199 317   7  23  69 434 509  57 412
  39 270 553 233 428 501 105 447 142 237 586 318 496 426 396  60 516 399  41 123 545 482  78 130 274
 391 562 394  46 585 614 505 493  43 354 345 182 374 137 590 201 398 204 107  96 194 125 349 515  21
 402 336 473 209   6 230 271 564 413 356 333 161 403 172 513 165 324 195 373  61 546 495 385   8 431
 361 366 410 376 395 355 377 363   5 386 393 370 103 420 351 379 367 297 371 335 328 177  17 191 332
 255  94  24 346 108 222 372 352 246 118 446 570 296 611 444 613  66 190 587 198 531 141 101 442 452
 323 358 454 312 210 331 330 338 588  62 189  15 205 290 244 303  53 263 173 293 337 241  71 284 261
 608 314 334 292 264 288 319 250 301 282 280 242 304 253 273  29 305 325 359 300 291 528 218 277 589
 477 466 200 227 254  56 197 235 605 299 208 287  10 574 247 429 240 500 422 532 239 527  14 529  51
 322 248  88 163  86  95 425 508  65 283 419 602 566 320 519 256 122 179 145 220  44 615 571 416 548
 540 534 514 228 260 146 620 238 272 541 465 485  36  68 110   2 232 518 468 407 383  98  26 113 521
 526 269 342 497 106 162 523   9 612 340 154  81 276 134 436 539 143  93 268 418 470 166 467 229 565
 517 202 117 168 133  20 480 186 573 469  74 148 281 547 181 309 474   4 624 575 440 144 414 430 315
 116 389 481 185 576 504 100 286  30 401  80  45 536 538 557 138 568 234 339  85 120 192 486 360 479
 132 124 592 445 267 251 577 619  35 164 556 153 114 417 140 121  42 380 572 451  63  77 598 554 381
  59 460 147 443 542 126  75 131 375 427 506 216 433 111 603 511 555 522 265 236 178  34 498 217 155
 223  91  70  89  13 215 432 408 183  22 231 384 491 180  92 424 578 609  40 457 600 411 488 610 484
 382  83 623   1 476 551 243  48 369 149 617 321  84 252 203 599 530 316 298 104  38 544 625 158 211
 507 306 129 579 622 170  18 560 450 151   3 184  67 259 621 510  79 604 221 327 535 458  97 343  25

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.0049e+07us (= 10049ms, 10.049s)
Satisfaction error: 2
Number of search iterations: 3738
Number of local moves: 3105 (including on plateau: 3055)
Number of local minimum: 21 (including on plateau: 354)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 347 520 289 87 302 502 102 19 567 618 368 449 606 415 128 295 388 313 72 478 344 308 512 492 601 => the sum is 9122 rather than 7825
Problem in row 13: 323 358 454 312 210 331 330 338 588 62 189 15 205 290 244 303 53 263 173 293 337 241 71 284 261 => the sum is 6528 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 623 203 370 240 463 201  24 356 176  65 592 537 602 567 532 250  19 109  33 329 453 160 220 190 511
 553 508  36 464 519 418 403 152 560  58 122 168 269 526 268 142 446 607 179 194 261 260 445 580  59
 428 134 573 277 227 489 448 581 431  74 251 456  98 331 244  56  23 290 202 612 169  99 562 397 373
  55 379 184 535 120  47   2  60 478 552 557 551 362 349 423 415 467  46 392 465 381 141 363 343 158
  13 499 624  67 138 434 509 619 450 162 105  14   8  88  78 534 338 394 340 396 497 577 536 289 116
  28 104 225 147 118 492  26 333 144 372 570   7 520 228 576 611 299 524 522 487 148 377 440 106 421
 188 252 480 155 221 369 595 523  52 548 585 242 406 130  86 189 121 438  22 246 249 312 432 609 375
 259 402 140 407 380  96 504 420 330 239 281 490  75 145 613  97 563 424 477 447  66 510 164  77 219
 469 192 336 233 617 307 117  39 409 172 521 151  31 126 337 482 395 367 588 166 419 212 417 224 498
  81 200 442 622  25 457  62 561 547 361 114 505 364 276  70 344 530 483 476  20 558  10 365  82 270
 253 494 352 593 347  29 614 103 205 473 471 149 238  17 378 113  85 539 398 358 150 408 136 376 546
 444 501 128  73 197 309 541 422 129 371 313 335  42 316 460 328 100  94 435  87 455 317 484 441 503
 303 288 308 295 357 265 323 292 285 327 314 325 485 345 304 283 321 339 256 315 296 280 348 287 284
 310 527 302 291 382 263 298 275 279 278 388 454 254 319 182 514 300 294 226 272 236 245 324 311 301
 584 452 451 488 341  64 385 507  63 491 124 399 387 429 258 237 525 600 320  53 531 204  11 544  84
  30  12 173 475 191  32 346  18 437  50 368 515 597 413 618 177 461 359 620 267 391 439  95 470 271
 110   1 235 389 132 549 215 405 248 502  45 156 538 529  68 131 108 209 101 414 590 436 384 334 167
 146 351 411 564 533 472 322 180 216 621 517 342 608 115  37 171 400 210 159 518  38  21 416 125 332
 430 154 493 187 425 229 196 569 583 410  27  35 195 181 353 599 123 183 366 554 230 174  83 603 443
 360 625 274 157 211 127 185 198 231 178 232 589 165 481 401 163 610  43  79 133 318 459 574 466 566
 587 462 449  92  72 255 223 262 616 241  91  69 350 112 433 474  90 355 404 575 135 550  51  71 556
 383 153 170 390 543 542 374 213 139 591  80 247 559 495 512 540 143  44 605 207 486 107  16 111 175
 186 354  41 218 615 206 222 427 243 426 326 528   5 582 393 479 208 217  48  57 586 545  49 286 578
 506 305  34  54 193 572 598 234 513   6 565 297 199 119  40 282 579 555 568 516  93 386 604   3   4
 496 273 594 412 458 601 293  76  61 257 266 264 468 606 161 214 571 102   9 137  89 596 306 500  15

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00024e+07us (= 10002.4ms, 10.0024s)
Wall-clock time (full program): 1.00512e+07us (= 10051.2ms, 10.0512s)
Satisfaction error: 4
Number of search iterations: 4040
Number of local moves: 3333 (including on plateau: 3286)
Number of local minimum: 38 (including on plateau: 405)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 553 508 36 464 519 418 403 152 560 58 122 168 269 526 268 142 446 607 179 194 261 260 445 580 59 => the sum is 8197 rather than 7825
Problem in row 15: 584 452 451 488 341 64 385 507 63 491 124 399 387 429 258 237 525 600 320 53 531 204 11 544 84 => the sum is 8532 rather than 7825
Problem in row 17: 110 1 235 389 132 549 215 405 248 502 45 156 538 529 68 131 108 209 101 414 590 436 384 334 167 => the sum is 6996 rather than 7825
Problem in row 21: 587 462 449 92 72 255 223 262 616 241 91 69 350 112 433 474 90 355 404 575 135 550 51 71 556 => the sum is 7575 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 599 376 309 525 179 449  55 436 462  26 250 588  49 451 177 491 316 187 210 404 245 458  65  98 420
 161 135 308  87 511  88 564 194 261 351 566 606 148 576  73 246 476 355 502  91 447  82 400 142 455
 422 560 207 523 180  28 121 117 101 521 159 524 568 354 258 379  42 478  99 553  12 239 533 421 426
 507 541  43 461  41 225 409 156 584 538 176 514 384 172 611 106  31 140 444 286 202 219 583 274 178
 248 623 108  93  25 412 398  85 260 252  74   4 298 112 251 608 558 609 402 389 563 228 385 472 368
 551 401 152 620 486 614  63 403 125  15 352  37 488 256 555  62 196  96 113 114  21 548 201 528 574
 362 270 374 127 542 193 471 545 452  71 334  90 516 546 442 120 503 397 363 232 116 466  19 198  76
 310 320 438  54 417 474 206 393 577  39 531 237 464 490 468 520   6 399   9 301 446  94 211 200 221
 408  89 425 305 431 215 585 469 169 595 287 498  57 396  36 391 418 129 473 183 191  83 429 234 329
  77 500 255 572 579 138 515 224  13 366 370 359 249 405 372 448 185 273 318   3 182 554 247 115 506
 467 134 217 288 437 321 282  38  34 104 440 416 222 530 592 450 162 382 510 571 600 197  92 430 522
 337 338 343  24 342 332 326 356 339 340 373 497 347 319 214 353 315 119 324 285 259 360 361 346 276
 293 330 590 327 297 295 236 312 336 314 364 328 139 303 341 325 307 302 278 262 279 291 284 348 344
 100 133 457 390 171 294 292 229 573  56 407 283 306 174 267 513 552  53 123 527 424 489 539  69  45
 147 136 175  44 154 406 386 358 277 163 243 581 526 428 268  16 591 559 299 387 186 392 499 300 304
 459 439 537 496 145 624 504 290 109 173  23 394 594 205  51 470 296   1  11 493 371 110 131 484 415
 238 419 547 621 434  67 313 618 345 317 367 118 132 535  60 596 240  10 612  84 414 482   7  40 209
 168 192 184 263  68 518 146  47 181 441 487 388 122 213 532 151 445 383 333 432 480 241 460 335 615
 167  75 165 375 369 107 218 550 280 423 479 223 463  20 427  79 231 556 529 230 557 582 604  50  66
 561 281  30   5 587  18 565 253 549 570 227  61  27 155 454 567 605 323 189 143 212 244 111 519 569
 322 199 586 607 509 575 456 603 494 495 141  86 164  33 435 220 381 275 562  22  72  46 265 242  35
 413 453 235 540 257 465 616 477 350  95  80 158 377 254 130 144 124 475 578 149 543  81 190 433 208
 166  97 625 266 128 598  32  29 622 536 443 160 378 102 150 365 492 226 271 485 269 602 331 349 103
 264 272 410   8   2 311  14 517 195 411  59 170 619 216 508  48 289 481 203 610 233 357 483 601 544
  78 512 105 204 534  58  52 126 137 613 593 505 188 580 153 157  64 617  70 589 501 380 395 597  17

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.0051e+07us (= 10051ms, 10.051s)
Satisfaction error: 4
Number of search iterations: 3709
Number of local moves: 3045 (including on plateau: 2998)
Number of local minimum: 39 (including on plateau: 354)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 551 401 152 620 486 614 63 403 125 15 352 37 488 256 555 62 196 96 113 114 21 548 201 528 574 => the sum is 7571 rather than 7825
Problem in row 11: 467 134 217 288 437 321 282 38 34 104 440 416 222 530 592 450 162 382 510 571 600 197 92 430 522 => the sum is 8438 rather than 7825
Problem in row 14: 100 133 457 390 171 294 292 229 573 56 407 283 306 174 267 513 552 53 123 527 424 489 539 69 45 => the sum is 7466 rather than 7825
Problem in diagonal 1: 420 142 533 219 563 114 363 399 418 448 592 319 139 283 243 173 345 47 218 18 509 540 625 272 78 => the sum is 8020 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 200  53  96 476 329 536 126  77 258  60 478 132 405 613   2 266   8 596 554 545 398 410 587  22 598
 432 540  47  37 621 160 110 307 592 233 605 152 388 218  82 277  76 529 270 369 578 263 271 574  94
 175 164 449 396  85  81 617 451 518 618  19 158  68 180 500 133 524 469 479 183 198 619 296  64 381
 305 445 580 386  39 207 593 181 607 446 157 533 317  33 438  92 174 130 361  56 413 119 537 465 211
 156 522 241 444  97 429 542 620 113  72  65 443 257 556 166 210 231 228 589 188 583 539 109 217 208
  16 374 418 563 395 171 320  51 214   4 560 375 121 614 365 205 599 172 403 491 276 594  14 280 230
 234 420 511 167  11 193 544 245 196 579 414 161 521 367 535 149  89 325 455  61 142 391 222 496 397
 249 216 143 288 237 495 458 387 550 415 399 570 202 147  31 611 561 344  75 168  41  79 406 293 460
 118 383 127 229 154 482  17 555 255 182  90 402 362 100 424 514  29 372 538 448 490 178 622 441 313
 562 492 371 368 244  80   5 569 527 358  52 477   9 232 472 394 378 461 385 576 252 551 610 101 572
  88  32 162 600 195 552 463 337  30 462 615  34 129 366 339 471 489 421 473 111 186  67 364 508 331
  18 571 547 328 407  59 355 498 349 357 323 247 125 336 114 467 350 332 423 310 346  24 150 204 585
 440 341 315 294 306 353 314 347 351 286 292 326 269 268 322 291 302 301 324 290 300 321 312 279 281
 203 316 251 148 558 401 106 380 223 534 502 575 318 433 221 412  26  73  45 264 523 261 206 343 503
 427 260 285 240 235 519 352 256 486  83 238  49 437 319 287 567 283 267 284 417 436 506 108 340 144
 282 262 105 184 250 442 213 242  98 215 390 601 582 557 488 272 454 360  95 189  57 480 400 124 483
 389  46 435 425 298 159 239 591  40 422 526 289 504 434 577 311 220 543 187  27  21 468  86 411 177
 528 595 568 209 474  84 459 146 176 507  58 308 303 165 309 501 604 194  54 131  66 275 584 499  28
 376   3  38 439 541 623 140  25 487 219 426 612 246 505 137 548 248  10 163 509 134 370 457 139 430
 531 452 345 404 573 136  99 107  69 363 274 456 102 559 173  48 155 485 170 532 295 510 464 516   7
 625 153 409 192 530  70 513 466  43 145 120 334 546 135 616 447 450 606 190 299 384  23  36 419  74
 342 624 525  50 103 581 122 512 566 590 169 123 393  91  71 253 199 304 348 608 597  78 201 116 259
  62  93 335 354 494 224 408 333 493  87 515 338 549 453 588  44 431  55 115 520 128  42 227 373 564
 586 112 297 212 470 603 226 141 330  35 265  13 609   6 191 327 428 236 243 382 565 379 197 497 475
 481 356 225 392 179 185 484   1 254 553 273 117  63 138 377  15 517  12 602 151 416 278 359 104  20

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00502e+07us (= 10050.2ms, 10.0502s)
Satisfaction error: 2
Number of search iterations: 3581
Number of local moves: 2906 (including on plateau: 2857)
Number of local minimum: 34 (including on plateau: 343)
Number of resets: 0
Number of restarts: 0

Problem in row 10: 562 492 371 368 244 80 5 569 527 358 52 477 9 232 472 394 378 461 385 576 252 551 610 101 572 => the sum is 9098 rather than 7825
Problem in row 25: 481 356 225 392 179 185 484 1 254 553 273 117 63 138 377 15 517 12 602 151 416 278 359 104 20 => the sum is 6552 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 292  95 183 130 415  56 598 563 285 359 241 224 370 357 377 253 352  26 111 195 572 211 229 440 596
 465 611 269 350 441  24  44 270 340 474 124  47 521 565 393 123 146  51 222 559 135 168 401 578 504
 503  55 586  96 447 368 262  91  11  53 554 516 398 189 136 573 529 307 494  31 237 451 562  57 319
  50 101  39 540 497 196 432 226 361 420 548 430 228 615 467  93 152 260 367 219 461 579 493 213 366
  92 485 139 422  77 473 126 616 594  54  65 208  37 454 394 605 266 507 110 375 512 489 240 481   4
 500 584  67 291  27 496 257 429 177 471 455 391 170 204 105 310 416  69 407 487 151 482 575 202 102
 288 104 207 128 326 624 344 528 566 534 351  29 294 590 134  58 383 574  34 140 492 488 277  48 284
  17 360 338 464 322 434 119 449 442 531 233 271 617 388 538 144 331 400   2  70 406  97 171 131 550
 184 203 419 265 309 354 397 404 403  10 390 421 414 428  36  82 423 402  94 408 412 347 602 225 193
 302 392 623 345 418  49 435 335 187 396 186 214 103 523 564 349  18  85 476 192 546 276 166 491 154
 364  99 106 218 371 597 501 470 613 282 387 182 181 200 275 176 592 541 443 448 121 112 243 185 118
 395 533  16 201 568  14 205 539 122 132  28 460 536  81 373 514 113 380 363 452  64 323 445 459 509
 312 299 355 333 313 316 358 311 327 293 321 365 382 287 301 320 303 295 252 278 263 324 298 304 315
 426 305 552  78  60 556 289  41  68 439 115 346  61 308 612 551 609 244 558 342 555   1 127 145 437
 334 484 469 215 125 216 571 172 108 577 236 133 510 232 267 410 306 450  15 530  43 549  83 248 542
 175 625 246 576 622 258 235 116  86 209  79 525 560 206 159 234 458 483 221  22 242 385 378 245 480
 535 505 210 466 582 433 353  66 249 157 457 591 502  30 251 174 169 173 191 238 259 318 524 317  75
 601 254 413 272 107 188 261 217 620 614   9   7 314 619 409  12  35 179 588 515 197 477  89 608 220
 255  84 587 606 369 190 153 167 472 569 297 231 148 180  73 273 557 356 329 100 281 138 330 537 543
 178 141 468 230 547 163 256 580 513  38 374  20  21 520  71 486 475 604 518 142 384 595 424  52  25
 336 296 425 490 120 570   6 478  76 137 438 479 198  40  74 581 341  87 583 599  59  62 495 456 399
 264 431 194  80  46 508  72 332 379 158 527 517 589 499 446 129  88 212 223 386 165 522 161 453 444
  23 280  19 621 250 381 561 290 553 156 593 567 117   5 343 348  63 283 519 544 337 149 147 526 150
 498 339 506  32 239 114 405  45 109 300 199 279 268 162 600 417 155 325 607 511 603 274 362  13 463
 436 160 389 376 227 247 585  90 164 462 618 372 286 143 427 610 545 532  98  42 328   8   3 411  33

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00536e+07us (= 10053.6ms, 10.0536s)
Satisfaction error: 3
Number of search iterations: 3602
Number of local moves: 2965 (including on plateau: 2917)
Number of local minimum: 35 (including on plateau: 376)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 292 95 183 130 415 56 598 563 285 359 241 224 370 357 377 253 352 26 111 195 572 211 229 440 596 => the sum is 7530 rather than 7825
Problem in row 4: 50 101 39 540 497 196 432 226 361 420 548 430 228 615 467 93 152 260 367 219 461 579 493 213 366 => the sum is 8353 rather than 7825
Problem in row 25: 436 160 389 376 227 247 585 90 164 462 618 372 286 143 427 610 545 532 98 42 328 8 3 411 33 => the sum is 7592 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 621 424 191 119 365 578  67 359 210  37 412 472 413 190 228 493 389 157  34 237 360 608   7 258 596
  80 591 127 600 351 589 588  24 181 537  77 453 186 161 408  52  73 264 436 255 404 577 239 528  44
 502 395 110 350 203 142 400 132 623 488 250 558 594  49  79 568  88 614 193 123 456 118 246 148 396
  93 546 288 534  60  20 526 165 108 486  65 143 102 457 572 434 429  27  98 478 463 367 559 263 542
 152 111 308  38  68 406  43 307 372 437 615 352 449  33 130 129 149 539 575 607 516 550 448 420  71
  99 310 599 241 169 484 342 622 495 380 171  61 450 566  18  55 196 452  21 565 415 409  13 302 390
 126 498 402 426 440 446 471 162  76 407 465 141 370 217 208 411 146 466 460  86 282 180 364 178 397
 473 236 167  15 433 317 251 322 216 581  90 363 430  96 512 606 441 438 414 120 179 200 358 122 445
 290 225 286 483 618  58 206 275 442 172 443 222 524  69 535 107 601 506  25 500  59 482 410  75 138
  54 166   4 185 155 517 227 177 541 533 573 174 131 610 593 398 503 124 532 281 585  10  63 514 175
 158 347 220 373 168 226  85  35 479 159 425 597 613 330 371 106 586 362 329 265  40 394 474 344 339
 214 354 361 336  22 289 366 348 338 296 383 328 314 332 320 340 321 369 327 292 333 341 270 305 326
 357 386 319 316 325 334 345 356 285 315 324 337 274 257 312 335 311 300 267 277 303 294 331 299 266
 205  97 252 269 109  28 163 520 154 399  56 271   2 293 306 587 235  23 253 617 384 261 388 376 468
 284 301 475 245  51  45 620 374  89 377 215 262 223 523 247 349 254 249 562 287 248 231 521 470 323
 584 451 567 145 583 619 379  91  87   6 505 616 219 353 182  53 387  70 133 139 134 509 403 574  36
 555 507 103 461 101 490 570 232 198 233  50 207 116  84 540 199 234 564  95 304 611 462 423 381 105
 538 195 545 240 313 428 467 211 580 188 176 218 204 511 144 485 548 202 213  11 192 444  19 238 515
 230 128 244 529 582 527 184 605 295 592 416  39 273 459 156 477   9  47 117 260 135 563 491  92 375
 604 624 625 276 476 125 309 510 531 173 297   3 272 243 609 553 418 298 556  72 268 209 551 115 291
 382 121 435 571 508 280 147  78 385 455   8 518 187 422 439 579 522 114 480 603  66  17  31 447  30
 221 201 343  62 431 504  82 481   5 427 464  74 355 421 492 229 140 576 378 454 150 112 499 170 554
 458  16 194  81 496 189 536 489 419  14 160 530 513 525   1  42  12 417 501 283 544 183 401 543 278
 432  46 560 318 279 136  83 557 164 104 595 392 547  26  32  41 487 405 602 212 561 151  57 569 469
 113 549 100 612 519  48 368 393 552  29 590 494  64 598 391 197 346 242 224 497 137 153 259  94 256

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00482e+07us (= 10048.2ms, 10.0482s)
Satisfaction error: 3
Number of search iterations: 4474
Number of local moves: 3703 (including on plateau: 3655)
Number of local minimum: 33 (including on plateau: 440)
Number of resets: 0
Number of restarts: 0

Problem in row 9: 290 225 286 483 618 58 206 275 442 172 443 222 524 69 535 107 601 506 25 500 59 482 410 75 138 => the sum is 7751 rather than 7825
Problem in row 14: 205 97 252 269 109 28 163 520 154 399 56 271 2 293 306 587 235 23 253 617 384 261 388 376 468 => the sum is 6716 rather than 7825
Problem in row 20: 604 624 625 276 476 125 309 510 531 173 297 3 272 243 609 553 418 298 556 72 268 209 551 115 291 => the sum is 9008 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 545 274 396 602  60 210 541  97 522 412 489  81 105 563  24 561  34 486 147 425 273 119 397 134 328
 391 520 298 341 109  54 613 461 324 268 550 323 372 476 404 131 392 332 305 344 343 423  92 453 549
 511 160  44  96 569  74  42 183 249 257 429 588 564 192 485 375 542 368 527  17 595 220 116 248 374
 155   6 508 190 530 417  64  31 557  48 288 532 468 524 351   5 538 551 570 170  51  38 515 514 204
  87 531 435 443 201   3 138 442 336 605 200 380 614   9 126 609 177 539 213 197 580 432 292  49 187
 599  90 308 540 622 546 143 494  47  61 389 164 338 301  32 463 492 278 513 289  13 194 176 285 448
 315   4  35 444 325 340 510 118 503  67 506 146  86  21  45 385 121 567 452 547 353 399 601 440 495
 578 167 275 180 130 154 449 139 129 552 222 593 445 418 560 162 436 205 454 499 464 120 102 384   8
 294 406 193  36 562 189 337  12 242 133 206 507 158 553 287 290 202 218 585 473 163 108 528 600 543
  69 466 426 184 586 161 433 350 408 216 581 566 238 110 459 215 352 214 610   7  66 477 173 428  30
 361 378  41 501 364 367  18 349 386 359 234 395 348 363  33 558 354 467  43 496 229 370  89 366 356
 241 518 493 465 427 330 382 559  52 165 115  14  68 458 592 166 313 136 457  20 148 577 252 575 302
  79 182 188 583 178 142 228 329 498 617 149  63 500 401 321 339 246 299 103 483 387 327 462 114 607
 247 365 232 434 455 535 393  75 618 263 621 456 548 256 174  55  91  26 262  23 571 509  78  58 480
 307 304 555 267 265 470 291 310 269 264 225 233 282 226 616 279 254 231 212 572 255 281 250 260 347
 446 175 125  72  76 471 369 488 469 390 484 438  77 296 151 123 502 156  11 326  59 383 394 144 157
 293 236 620 314 106 413 312  50 272 526 568 171 230 101 239 419 590 306 490 416  65 198 377 460  53
 145 100 523 624 371 619 270 376 172 487 181 497 159 608 533 317 117  37 403 186 597   1 217  40 245
  73 409  46  99  28 554 451 516 421 211  25 135 283 253 400 447 280 345  16 537 519 603 196 573 405
 517 227 594 402 414 104 284 258  98  93  95 612 169 521 482 318 208 437   2 430 536 107 153 505 259
  83 625 141 424 209 266  94 565 311 525  71  15 591 113 235 150 598  62 300 303 431 584 623 422  84
 604 544 322  10  22 152  82 224 606 319 309 277  27 504 512 579 362 439 191 122 475 140 529 346 128
 373 335 479  19 478 381 333 199  57 450 295 195 244  70 342 243  88 615 398 360 316 271 582 261 441
 124 596 411 221 407 286 474 589 223 297 112 415 491 168 237  80 357 379 203 472 251 410 276 127 219
 388 207 137 334 331 587 574 611  56 240 481  29 420 320 185 556 179 132 358 111  85 534 355  39 576

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00477e+07us (= 10047.7ms, 10.0477s)
Satisfaction error: 2
Number of search iterations: 4804
Number of local moves: 3974 (including on plateau: 3925)
Number of local minimum: 38 (including on plateau: 493)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 391 520 298 341 109 54 613 461 324 268 550 323 372 476 404 131 392 332 305 344 343 423 92 453 549 => the sum is 8868 rather than 7825
Problem in row 16: 446 175 125 72 76 471 369 488 469 390 484 438 77 296 151 123 502 156 11 326 59 383 394 144 157 => the sum is 6782 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 113 224  52 218 445 392  71 487 132 147 457 214 194  23 225 416 541 267 426 593 283 141 616 548 600
  60 606 466 415 612 101 564 451 428 390 361 173 524 514  57 393 419  33  69  14  98  89 401 575  12
 210 620 539 145  24 205 505 190  13 523 427 596 251 604 107 209 565 366 184 221 160  64 540  96 461
 245 558 402 288  34 212  40 507 386  78 347 115  92 183 516 230 602 435  41 420 455 535 363 473 268
 193  73  42 185   4   5 256 425  74  75 594 369 619 519 464 125 133 470 582 242 475 324 566 432 579
 528 100 483 480 503 450 223 525 527 492 161 491  83  62 250 452  26 362   2 495 151 235 266 246 232
 511 116 379 430 597 537  16  97 478 227  45 117 501 431 139 140 108  39 459 545 307 499 319 611 177
 609 453 234  72 226 621 429  81 170 171  28 547 213 110 244 474 484 456 573   7 255 449 542  86 291
 561 399 198 146 289 436 587 423 122 282  37 405 404 413 433  44 104 510 349 412 406 467 128 103 167
 217 123 174 520 551 500 155  22 408 118 529 126 422 446 599 407 261 325  88 120 417 188 463 424 222
  84 229 360 577 590 468  27  76 568 154 197 342 509 493 370  29 488  87 385 176 200 562   3 357 494
 376 521 481 396 287 351 129 563 518  48 136 615 293 313 175 202  51 169   1 228 437  55 625 323 532
 441 314 296 340 348 471 330 278 322 290 328 320 312 358 332 281 270 284 248 297 336 301 131 299 298
 254 331 271 309 279 239 622 311 305 536 316 280 252 586 303 276 300 277 310 249 381 269 302 258   9
 552 380 275  35  59  68  36 247 355 559 334 264 241 513 496 410 344 157 533 387 265 260 403 192 460
 164 485  77 329 388 304 391 389  19 272 127  10 531 150 543 337 534 243 526 560 240  56 490 321 339
 465  49 522 553 343 567 595 409 189 356 231 462 124 237  70 163 168 359 262  50 504 486 274 208 179
 479 216 130 308 610 166 159 191 592 178 137 236  91 220 589 162 411 489 414 497 603 448   8  93 398
 591 203 153 506  20  94 186 352 400 372 418 469 439 156 367 584 572 598 458  99 294 354  66  21  53
 421 259 148 199 187 152 353 613 109 605 618 476 583 273  82 327 377 472 482 144  65 165 102 555  58
 201 114 624 383 384 215 517   6 134 440 554 158  80 105 569 333 443 544 512 326  17 207 508  54 397
 306 502 608 111 530 263 394 585 143  79 515  90 149 285  67 395  63 233 257 444 286 557 206 211 546
  95 368  31 196 335 607 374 375 614 434 119 550 350  32 292 318 365  47 346 588  46 378 172 498 295
 106  11 438 623 142 371 549 204 581 382 253 315 447 454 341 580  15  25 180 338 570 135 219 364 182
  43 571 442  61  38  30 317  18 238 617 556  85 121 345 195 538 181 578 138 373 574 601 112 477 576

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.51602e+06us (= 7516.02ms, 7.51602s)
Wall-clock time (full program): 7.56449e+06us (= 7564.49ms, 7.56449s)
Satisfaction error: 0
Number of search iterations: 2606
Number of local moves: 2168 (including on plateau: 2118)
Number of local minimum: 23 (including on plateau: 255)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 395 189  17  42 224 623 619 592 412 455  87 538 614  65 274 138 170 255 266  15 198 216 509 512 400
  26 600 386 517   7 488 566 447  86  76 423 110 413 577 580  96  29 201 435 113 155 229 355 424 486
 280 285 422 233 146 531  50 548 151 582 158 515 480 140  98 445 421  22 123  93 481 551 563 106 401
 605 127 175 569 479 114 346 271 390 288 176 109 133 257 471 252 125 516 596 187 366 514  36 126 597
 183 429 526 579  14 239 210 135 601 246 220  82 562 495  97  41 116 450 402  11 388 467 451 391 490
 473 139  77 586 427 496 519 535  71 236 503  78 119 404 182 494 207 606 261 244 350 398 407 608 540
 241 178 315  30 352 590 466 607 436   3 462 544 543 150  51 177 504  60 128 610 591 465 102  57 163
 166 552  68 157 589 418 595 331 476  35 250 453 508 437  44 463  92 153  49 449  25 505 347 290 373
 500 173 611 185 121 291 477  64 410 485 430 148 147 525 571 513 397   5 399 336 115 340  52 408 122
 556 203 499   4  58 482 219  81 168  90 111 190 228 507 205  62 567 502  21 387 389 380 200 174 428
 375 371 376 372 498 370 368  74 217 194 333 382 414 356 353 377 374 363  55 103 484 181 161 360 314
 332 341 307 365  45 328 282 343 369 209 364 283 306 361 344 104 334 330 335 256 394 318 434 431 310
 322 309 342 325 324 320 311 305 304 362 323 302 441 303 300 316 327 301 329 199 298 295 275 293 299
 553  91 287 279 278 326 308 273 247 557 264 251 276 321 296 221 270 345 259 419 533 339 312 234 286
 206 154 620 253 593 417  27 141 474 381 560 215 313 568 268  12 213 497 384 558   6 105 534 196 130
  59 456 243 532 238  79 354 118 613 348 483 446   9  69  23 265 617 438  20 440 554 581  75 192 573
  48 444  47 621 470 260  95 491 171 218 584 618  61 144 405 235 406 294 136 469 319 212 530 529  18
 338 262 188 458 156 197 195 214 160 603  31 230 587 403 351 555 452 149 460 191  28 425 409  10 227
 281 129 549 487 475 570  70 137 162 411 616  39 131 615 550 415  34 454 132 457  88  53 472 442  56
 124 378  94 100 468 367 120 249  38 277  24 426 258 211 527 612 541 461 492 624 267  66 226 583 292
  40 546 459 204 358 179 269 489 272 478 165 172  16 289 510 337 523 254 576 521 167 604  37 248 112
   2 625 443  46 240   8 545 222 359 599  84 572 383  89 511 575 237 578 242 208 501  83 117  63 493
 622 565 263 432 357  32 143 245 518 101 420 145 539 142  43 392 232 107 522 202 433 134 528 547 159
 574 225 439 297 559  33 223 520 184  85 561 379 180 396 169 186  73 385 594 317 231  80 585  13 537
 524  54  72 152 349  67 448 393 536 506 193 598 164   1 602 542 564  99 609 416 464 284 108 588  19

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00497e+07us (= 10049.7ms, 10.0497s)
Satisfaction error: 5
Number of search iterations: 3943
Number of local moves: 3290 (including on plateau: 3244)
Number of local minimum: 33 (including on plateau: 378)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 473 139 77 586 427 496 519 535 71 236 503 78 119 404 182 494 207 606 261 244 350 398 407 608 540 => the sum is 8960 rather than 7825
Problem in row 10: 556 203 499 4 58 482 219 81 168 90 111 190 228 507 205 62 567 502 21 387 389 380 200 174 428 => the sum is 6711 rather than 7825
Problem in row 18: 338 262 188 458 156 197 195 214 160 603 31 230 587 403 351 555 452 149 460 191 28 425 409 10 227 => the sum is 7279 rather than 7825
Problem in row 23: 622 565 263 432 357 32 143 245 518 101 420 145 539 142 43 392 232 107 522 202 433 134 528 547 159 => the sum is 7823 rather than 7825
Problem in row 25: 524 54 72 152 349 67 448 393 536 506 193 598 164 1 602 542 564 99 609 416 464 284 108 588 19 => the sum is 8352 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 403 474  45 311 316 360 294 190 603  40 234 153 379 550 479 552 332 521 265 454 324 243 615 181 132
 303 597 223 279  25 619 277 257 189 416  20 544 559 371 248  39 428 310 209 283 614 455 109 230 221
  16 397 571 335 568 202 504 258  24 327 617 569   1 485 104 473  66 141 374 115 466 366  69 246 531
 589 229  62 338 273  11 545  96 193 406  71  72 192 514  99 524  65 532 583 319 155 576 206 573 602
 418 108 553 301 517 353 621 236 290 139 216 465 241 152  53 378 536 396 413 214 275 402 107 400  41
  48 136   6 144 491 256 126 472 470  84 502 505 300 239 410 515 422 376 264 555 344  26 534 129 471
 423 431 493 304 160 453 490 318 157 123  94 215 348   4 540  49 519 448 464 561 154 114 184 261 518
 417 276 173 533 412  70 227 468 525 497 565 145 457 385 194  73 437  51 476   5 404 513 317  18 187
 440 538 483 593 438 594 394 179 372 508 266 411 427  15 100 182 336  43  19 286 201 393  74 128 405
 607 489 203 255 162 240 386 539 167  95  32 375  50 414 383 313 469 389  86 596  56 292 395 526 306
 367 520  61 175 326 228 171 113 293 425 231 270 528 125 355 432 610 595 509  29 299 354 259 120 430
 339 331 439 399 377 111  97 253  57 447 287 325 350 426 506 138 249  46 347 252 577 609 297 420 146
 351 308 330 284 329 312 340 281 322 357 314 333 267 343 341 272 289 321 315 368 302 280 288 296 282
 117  75 358 237 618 148 226 196 238 151 522 269 121 274 133 567 445 599 398 217 587 185 224 345 575
  54 207 150 363 204 527 570 556 512  13 584 369 101 271 496 208 492 174 563  60 183 180 235 149 604
  82 623 605 449 122 365 467 384 373 460  78 415   2 592  17 254 250  93 262 263 408 562  42 487 170
  36  85 105 285 451 591  87 424 590 541 480 579 233 549 147 134 212 446  47 557  76  44 551 484  91
 622 242 624 337 585 401 164 613  12  80 161 163 535 197 191 232 205 131 218 433  83 486 444 498 168
 523  55 362 356 158 213 598  89  37  68 195 612 137 461 409 103  88 462 142 543 247 494 581 511 381
 186 566 421 443 586   8 323 441  64 307 387 110 156  67 537 542  33 309  21 625 463 169 582 127 352
 507 320 388 244  28 488 159  59 442 458 219  14 620   7 601 291 342 220 611 198 116 268 225 608 392
 165  92 130 135  79 112 199 407 419 456 499 251 475 380 588 606 564 477 298  35  10  38  77 359 211
 503  90 260 124 390 560  27  63 547 548 346 177 334 616 459 143 166  22 382 222 574 188 546 558 118
 278 200 328 106 176 501  23 572 580 429 305   3 578 210 295 370  98 245  30 554 516 530 364  52 482
  31 436 452 495  34 102 510 361 349 450 600 481 434 178 140 435 172 478 529  81 391  58 500 119   9

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00493e+07us (= 10049.3ms, 10.0493s)
Satisfaction error: 3
Number of search iterations: 3956
Number of local moves: 3352 (including on plateau: 3303)
Number of local minimum: 26 (including on plateau: 405)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 403 474 45 311 316 360 294 190 603 40 234 153 379 550 479 552 332 521 265 454 324 243 615 181 132 => the sum is 8450 rather than 7825
Problem in row 22: 165 92 130 135 79 112 199 407 419 456 499 251 475 380 588 606 564 477 298 35 10 38 77 359 211 => the sum is 7062 rather than 7825
Problem in row 23: 503 90 260 124 390 560 27 63 547 548 346 177 334 616 459 143 166 22 382 222 574 188 546 558 118 => the sum is 7963 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 408 625 396 239  51 436  20 268 147 597 614 501 123 250 563 442 129 438 590 443 384 588 256 358 607
 245 596 430 595 225 471 200 156 140  48 207 399 535 385 258 518  75 139  61   6 186 194 510 568 103
 157 210 567 419  90 138 580 433 180 280  13  82 407 282 474 339 328 598  47 249 542 434 556 262 158
 146  17 228 544 545 209  84 337  72   1  92 519 260 420 367 613 101 532 190 113 587 524 603 360 361
 570 531 137 127 509 401 594   4 520 540  77 446 162 547  12 539  54 208  87  52 461 495 121 612  19
 403 134 131 112  31 105 177 533 549 452 488 195 326 581 515 174 166 259 290 468  55 416 263 451 551
 324 472 508 224  94  37 459 478  42 135 543  26  83 145 500 347 561 470 314 343   5 546  69 517 583
 191 254 602 164 449  70 107 616 376 181 473 341 230 572 270  16  22 428   3  44 392 575 411 555 483
 574 117 499 513 247   7 213 576 133 490 351 507 608 183 569 404 398  59 405 196 444 179  36  99  18
  76 350 132 173 623 425 521  43 487 550 491 522 169 184  21 393 221 160 573 498  33 395 423 170 192
 390 359 369 368  34 197 352 357 377 244  35 100 165 229 356 378 394 315 267 528 349 345 374 609 334
  11 206 387 318 331 364 534 530 296 437 316 375 342 336 161  63 537 332 306 484 252 338  23 241 305
 325 297 292 354 309 327 300 335 329 308 313 307 414 287 321 317 330 269 319 301 274 289 333 273 302
 323 340 311 293 283 261 429 288 281 320  56 506 383 365 233 312 348 275 298  39 578 265 304 463 271
 422 410 110 477 203 285 621  65 371 294 253 562 380 109 278 151 427 426 504 255  30 187 480  80 445
 604 231 144 205  78 558 291  85 585 266 584 455 523 611  86 286  53 579 130 216 577 152 154 299  73
 204 235 464 565 564 272 418 388   2 277 167 114 601 108  29 541 215 503 232 582 284 124 242 512 182
 142  62  96 201 406 493  25 178 234   9 421 188 441  40 119 217 589 199 454 431 586 240  97 115 450
 264 552 559 295 514 610 125 243 310 435 149  14 148 457 606 502 219  74  81 236 171   8 400 386 467
 481  71  32 619 494 153 496 366 370 415 505 618 466  27 185 143 353  28 465 246 214 417 372  91 198
 460 102  46  15 136 615 223 172 202 389 592 622  93 439 497 593 458 536 373 413 176 279 193  60 141
 548 560 456 120 257  89 346  41 363 168 189 128 529 479 409  45 511  98 527 492 118  49 566 486 251
  66 453  68 485 397 526 104 599 571 344  64  50  67 475 489 220 303 155 605 462 248 553  24 106 391
 412 116 624 362 355 222 379 218 440 482 212 238 159 226 126 150 476 276 382 617 447 175 591  57 402
  79 525 237  38 600 554 227 516 448 163 620  10 211  88 381 122 557 469 322 111 432  58 424  95 538

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00506e+07us (= 10050.6ms, 10.0506s)
Satisfaction error: 4
Number of search iterations: 3862
Number of local moves: 3205 (including on plateau: 3158)
Number of local minimum: 27 (including on plateau: 389)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 408 625 396 239 51 436 20 268 147 597 614 501 123 250 563 442 129 438 590 443 384 588 256 358 607 => the sum is 9473 rather than 7825
Problem in row 2: 245 596 430 595 225 471 200 156 140 48 207 399 535 385 258 518 75 139 61 6 186 194 510 568 103 => the sum is 7250 rather than 7825
Problem in row 18: 142 62 96 201 406 493 25 178 234 9 421 188 441 40 119 217 589 199 454 431 586 240 97 115 450 => the sum is 6433 rather than 7825
Problem in row 24: 412 116 624 362 355 222 379 218 440 482 212 238 159 226 126 150 476 276 382 617 447 175 591 57 402 => the sum is 8144 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625 218 381  21 205 134 195 317 623 470  78 565  20 230  23 559 594 264 419 576 578  46  53 523 108
 373 605 175 380  85 604 284 465 203  19 520  93 497 392 127 286 188 569 101 453 326 356 436 189  99
 572  75 573 501 272 408 539   3 241 362 396 543 222 598  94 190 143 169 509 228 135 213 146 375 318
 154 193 126 547 540 106 531 208  60  50  80 582 379 145 603 610 511   7 489 612  58 337 196 378 323
   5   1  47 386 330  83 162 405 533 423 167 426 180 316 555  72  42 596 472 388 471 492 564 499 210
 445 215 530 122 347 519 242 238 557 138 282 387 121  44 144 534 249  90 548 336 538 185 202 593 219
 259  92 232 621 448 460 482 361 194 516 221 488  28  39 479 481 119 469 579  62 600 139 129  71 256
 486 417 442 415 374  35 371 254 389  54 455 391 103 546 204  10 407 433  66  15  36 529 451 343 599
   2 354 498  52 187 575 616 587 398 114 358  30  65 412 425 110 338 297 485 104 235 608 556  24 395
 192 438 512 245  37  51 211 198 216 404 491  61 277 253 366 370 609 301 157 153 522 580  82 585 514
 113  12 413 462 174 496 124 267 397 304 149  49 182 525 355 243 367 443 364  14 495 346 588 553 390
 429 382 233 172 619 283 440 620  33 611 102 528 178 214  64 493 521 365  32 535  43 295 503 454 541
 339 321 275 329 325 294 315 341 353 288 290 313 427 324 334 132 292 296 262 333 302 476 289 312 263
 220 350 171 118 298 116 563 229 473 420 537 303 467 268 248 244 507 310 614 532  48  38 363  88 300
 562 293 595 201  98 615  17 571 583 224 237 156 299 186 269  67 494 377 270 459 372 418 360  73  29
 383   6 164 589 227 369 209  13 449 261 239 231 567 527 107 352 550 508 359 437 376 200 260 291 151
  57 306  63  91 622 276 435 590 105 466 273 141 441 480 416 305 197 234 545 271 166 452 320 504  69
 206 136 477 570 487 168 236 311 177 552 247 506 152 592 500 158 225 150 207 331 434  25 400  27 551
 411 607  70 212 115 184 111 155 163 568  40 130 524 431 536 385 444 278 123 518  55 560 624 274 307
 613 584 450 319 432  74 140 133 335 199 351 322 147 327  11 483  84  81 424 109 490 456 258 542 461
 266 181   4 502 591 577 223 602 280 170 463  89 526 137 345 340 285   9 255  87 250 422 117 430 240
 348 428 368 406  41 403  59 279 179 165 474 446 554 131 517 484  76 457 344 191 410 100 393 173 399
 125 515 251 328 561 421 332 544 566 281 349 439 510 468 265  56 384 513  18 308 252  96  26 309 464
 246 478 549 159  68 217 402 112 287 160 617 458 558  79 581 414 183 601  86 597 128 142  34  95 574
 394 618 226  77 342 357 586  22  31 606 409 148 401 161 257 447  16   8  97 176 505 314 475 120  45

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00484e+07us (= 10048.4ms, 10.0484s)
Satisfaction error: 4
Number of search iterations: 4474
Number of local moves: 3706 (including on plateau: 3660)
Number of local minimum: 34 (including on plateau: 446)
Number of resets: 0
Number of restarts: 0

Problem in row 12: 429 382 233 172 619 283 440 620 33 611 102 528 178 214 64 493 521 365 32 535 43 295 503 454 541 => the sum is 8690 rather than 7825
Problem in row 21: 266 181 4 502 591 577 223 602 280 170 463 89 526 137 345 340 285 9 255 87 250 422 117 430 240 => the sum is 7391 rather than 7825
Problem in row 23: 125 515 251 328 561 421 332 544 566 281 349 439 510 468 265 56 384 513 18 308 252 96 26 309 464 => the sum is 8381 rather than 7825
Problem in row 25: 394 618 226 77 342 357 586 22 31 606 409 148 401 161 257 447 16 8 97 176 505 314 475 120 45 => the sum is 6838 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 547 566 189 191 492 251 513  80  84 459  32 120 407 242  15 327 443 539 249 541 173 282 118 376 589
 164 614  36 501 328 526 383   2 340 516 538 121 200  63 386 334  54 341  91 182  95 489 604 460 457
 378 564 567 339 534  90 247 292 192  93 133  18 555 606 540  58 101 550  51 181 229 199 548 552 208
 488 223 411 458 165 463 106 603 294 599 617  31 213 143  34 138 558   7 499 323 452 523 287 177  13
  64 284 359 468 503 255 620  60 430   3  14 446 461 542 441 480 132 236 174  11 186  85 478 531 562
 568 299  75 102 235 104 565 212 103 574 514 389 141  24 553 588 475 348 179 512  37 608  53 371 196
 486  26 343 349 240 469 471 274 401  45 484 137 108 201 406 219 202 557 444 408 616 166 579  89 105
 384 159 455 261 350 433 295 160  20 345  29 544 491 303 449 615  70 453 527 187 597  12 157 400 129
 131 194 256 394  77 224 417 498 414 618 560 280 331 448 148 437 283 262  23 116 220 497 477 257 263
 322 128 515 308 113 622 545 381  59 367 575 273 265 528 175 356 311 155 412 420  16  96 238 399 246
 409 134 432  38 360 203   8  50 474 162 336 402  28 364 352 451 426 507 361 127 218 454 580 385 506
 231 221 466 180 152 395 298 429 290 145 337 342 347 353 372 276  41 171 586 313 609 243 358 338 332
  39 112 275   9  33 357 176 607 379 473 505 431 300 117  19 211  94 370 611 490 578  67  92 110 318
 281 496 272 316 319 324 289 269 254 321 306 329 297 301 307 325 312 264 309 304 258 305 259 237 571
 375 421 530 291 206  10  49 529  79 330 226 233 234 418 302 167 570 572 424 107 405 136 493 279 439
 277 230 197 172 100 415 168 351 590 335  71 502 594 559  83 248 423 598 333 222 260 556 147 285 109
 428 188 602 519 511 577  99 382 241 416 288  76  72 504 169 362 239 485  55 252  44 317 391 380 228
  82 549 624 524  46 532  42 122 487  87 150 190  21  88 521 582 605 178 195  40 583 447 520 140 470
 518 593 373 232 591  48 422 396 522 369 268 495 546 584 225 366 217 125 170 293 124 595 344 450  69
 482  98 142 403 623  27 183 440 144 153 434 377 250  78 596  52 315  43 536 625 500  81 393 462 388
 111 271 209 355 151 543 587 253 537 161 476 610 456 149 314 126 576  66 158  25 479 413 438 215 146
 156 508  57 184 442  56 419 601 244 551 163 320 483 216 481 445 467   6 525 569 154  61  35  97 585
 310 436 114  68 198 278 392 139 554 472  86 374 390 204 612 135 354 397 573 535  65 346  30 365 398
 464 185 119 563 435 561 245 270 619 214 387 193  22 363 210 123  47 227 267 509 517 581 205   5 494
 130 326 207 600 621  62 286 425  74  17 296 592 613 427 115 404 510 368  73 533 410 266   1 465   4

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00492e+07us (= 10049.2ms, 10.0492s)
Satisfaction error: 3
Number of search iterations: 4381
Number of local moves: 3595 (including on plateau: 3546)
Number of local minimum: 44 (including on plateau: 436)
Number of resets: 0
Number of restarts: 0

Problem in row 11: 409 134 432 38 360 203 8 50 474 162 336 402 28 364 352 451 426 507 361 127 218 454 580 385 506 => the sum is 7767 rather than 7825
Problem in row 13: 39 112 275 9 33 357 176 607 379 473 505 431 300 117 19 211 94 370 611 490 578 67 92 110 318 => the sum is 6773 rather than 7825
Problem in row 19: 518 593 373 232 591 48 422 396 522 369 268 495 546 584 225 366 217 125 170 293 124 595 344 450 69 => the sum is 8935 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625 445 184 124  22 462 548  34 430  52 344 414 241  64 588 269 559  79 393 523 417 454 243  71 240
  99 594 297 144 220 537 194  74 443 490 121 465  94 506 110 615 151 554 354 353 218 450 212  41 489
 175 107 196 274 400 127 211 373 550 120 227 112 527 544 613 253 111 511 222 547 306 502 479 293 514
 577 405 116 564 312 410  60 139  53 589 273 208 597  44 480  33 595 178 399 388 103 530 138 565  69
 379 223 114 624 517 308 427 119 566 309 488 300 617  91 538  58 122 493 282   2 440  39 146  87 536
 510  50  65 487   1 504 320 620  51 130 265 150 129 169 266 581 460 533 481 492 163 137 202 518 541
 206 277 600 232 406  17 468 142 471 125 126 476 132 484  84 226 295 402  86 539  81 572 609 604 165
  68 153 190 235  73 575  70 332 366 420 384 542 244 426 458 305 352 372 508  28 444 254  89 474 463
  97 582 141 404 407 408 513  42 133 545  54 561  21 168 323 376 380 390  85 433 192 423 189 461 497
 473 113 576 233 524 263  76 249   5 377 483 586  80 205 437 396 446 529  75 394  78 201 412 401 213
 359 347 397 363  12 123 358 381 349 378 228 172  40 395 355 369 334 351 333 361 436 371 314 364 335
  29 608 560  25 466 242 204 267 557  63 472 368 346 328 203 171 152 543 526  20 562 259 584 134 136
 303 316 324 327 340 341 311 272 343 315 322 337 362 331 283 325 336 288 348 245 248 317 299 290 302
 370 540 287 215 503 109  31 494 622 247 251 451 532 261 231 495 200 280 262 607 464 148 387 385 160
 238 470 350 519 313 115 143 553 167 106 268  46 197 551 258 421 237 512 591  93  49 603 507 459  59
 260 104 447 255 593 448 392 587   7 310 516  88 225 131 135 568 528 182 210 574 455  62  61 330 357
 301 180 428  37 159 100 467 469 276  35 616 434 418 199   3 409 140  96 618 599 415 482 549 149 246
 158 239 416 555 186 619 183 195 219 611 224 375 457 438 578  11 383 185 164 207 382 289 356 181 214
 425 498  16 477 621 170 216 108 602 278   4 612 569  48 515 102  55 318  19 147 432 198 500 374 521
 570  30 452 585 567 583 286 307 573 292 264 217 257 229 271 156 285 339 101 304 367 391  56  14 329
 601 623 598  57 154 188  82 442 413  23 535  98 431 606 389 525 580   6 176  92  18  66 338 486 298
 270 291 155 422 579 296 605 345  90 478  67   9 209 429  36 321  26 284 546  43 342  15 275 118 162
 520 252 398  83 105 281 571 250 499 435 558  77 441 117 439 449 456 177 236 319  72 279 360 453 234
 174  13  27 411 166 552 475 509  32 501 590 193 403 505 187 161 157 128 386 221 610 592 496  10 326
  38 365 491 173 179  47 614 522   8 596 145 534 256 556  45 230 485  95 424 294 531 191  24 563 419

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.0051e+07us (= 10051ms, 10.051s)
Satisfaction error: 4
Number of search iterations: 3563
Number of local moves: 2928 (including on plateau: 2881)
Number of local minimum: 30 (including on plateau: 364)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 175 107 196 274 400 127 211 373 550 120 227 112 527 544 613 253 111 511 222 547 306 502 479 293 514 => the sum is 8294 rather than 7825
Problem in row 14: 370 540 287 215 503 109 31 494 622 247 251 451 532 261 231 495 200 280 262 607 464 148 387 385 160 => the sum is 8532 rather than 7825
Problem in row 22: 270 291 155 422 579 296 605 345 90 478 67 9 209 429 36 321 26 284 546 43 342 15 275 118 162 => the sum is 6413 rather than 7825
Problem in row 23: 520 252 398 83 105 281 571 250 499 435 558 77 441 117 439 449 456 177 236 319 72 279 360 453 234 => the sum is 8061 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  53 513  65  60 412 532 470 473 598 175 166 429 559  19 611 169  73 317  82  10 533 188 179 540 599
 184 468 522 164 441 139  61 308 336 136 106 168 593 365  54 116 151  27 349 552 606 297 514 563 605
 604 625 142 248 150 199 300 622  24 535 476  83 518 623 146 323 562   5  50 271  42 612 549  40  76
 377 367 494 529 119 226 543 212 426  23  39 202 111  72 259 526 361 460 307 480 233 516 379  81 483
 131 130 601 620 187 208 186 189 285 284 551 509 422 573  11 523 478  59 173 402 508 105 107  56 527
 610 341 466 266 364 363 360 372 616 350 183 232 421 258 457 324  63 252 257 182 459 389 137  75  28
 282 467  29 382 569 576 579  89 530 344 555 493 354   2 180  48  93 329 442  51 229 287   3 447 163
  98 268 437 448  49 290 618 235 427 439  62 328 443  12 425 539 358 436 455 273  97  14 409 245 420
 314  46 380 218 614 312 387  26  22  90 544 185 296 464 592 353 375 347 517 381 401 450 288 534 510
 357 370 376  95 397 550  36 359 144 293 223 149 506 127 306 374 368 396 403 586 430  47 411 134 388
 224 392 621 225 148 334 536 595 553 418 417  92 487 160 343  34 158 333 309 191 318 351 355 227   4
 213 220 159 332 249 499 135  91  86 194  18 120 205 489 322 313 486 609 491 520 337 582 465 407 283
  43 406 331  77 330 568 321 419 488  70 445  99 156 585 211 497 588 554 541  55 299 143 103 216 280
 326 315 279 316 262 404 278 270 281 346 416 251 277 602 335 289 231 305 320 325 294 264 237 292 310
 138 525 234 580 207  80  74 507 254 482 253 453 275 219   8 461 603 495 260 304 274 261 265 198 415
 477 190 101 578  52 434 485 241 152 255 386 338 496 590 471 440 345 505 192  66 113 490 102 327 391
 521 118 204 399 560 352 181 433 291 561 624 269 206   7 546 246  96 221  79 472 115 172 596 378 178
 243 356 566 414 267  87 171 572 571 617 413 564 301 201 369 228 244 109 373 154  17 203  64 607 114
 451 195 583 492 247  41 147 123 295 531 128 444  44 286  88 117 474 197 242 512 547 405 222 456 558
 556 574 432 112  45 311 438 122 463 193 145 140 240 542 501  31 557  30 570 446  71 385 581 126 214
 565 121 302 161 110  37 366 575  38  33 469 613 165 239 177 504 408 587 174 615 589  20 458 484  15
 141  85 210  35 435 410 362 256 196 584 428 591 104 577 393 431 215 162 597  16 424 545 167 383  78
 384 230  58 528 538 132 600 236 340  94 348 519  21 481 567  68 272 153 548 200 157 500 342 170 339
 524   1 125 462 594 503 124 371 276 303 398 100 619 319 155 263  57 537  25 250 217 423 394 390 395
   9 502 108  84 479 238  67 129 133 475  32 454   6  13 298 608 209 400  69 511 515 176 498 449 452

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00488e+07us (= 10048.8ms, 10.0488s)
Satisfaction error: 4
Number of search iterations: 3548
Number of local moves: 2950 (including on plateau: 2903)
Number of local minimum: 33 (including on plateau: 320)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 282 467 29 382 569 576 579 89 530 344 555 493 354 2 180 48 93 329 442 51 229 287 3 447 163 => the sum is 7523 rather than 7825
Problem in row 9: 314 46 380 218 614 312 387 26 22 90 544 185 296 464 592 353 375 347 517 381 401 450 288 534 510 => the sum is 8646 rather than 7825
Problem in row 16: 477 190 101 578 52 434 485 241 152 255 386 338 496 590 471 440 345 505 192 66 113 490 102 327 391 => the sum is 8217 rather than 7825
Problem in row 25: 9 502 108 84 479 238 67 129 133 475 32 454 6 13 298 608 209 400 69 511 515 176 498 449 452 => the sum is 6914 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 207 568 350 471 117 508  58 110  13  28 220 141 551 262 555 318 465 480 258 575 288 241   7 437 597
 126  35 299 250 181 373 234 275 434 556   9 593 439 168 324 206 369 115 329 322 528 352 290 578 440
 607 313 543  71 193 105 408 378  50  98 190  44 134 606 211 113 618 255 431 519 461 124 552 221 580
 252 463 152  73 327 330  11  94  88 450 625 122 388 569 610 368  41 259 321 509 127 529 521 305 291
 612 345 254 468 488  10  18 585 349  72 178 224 179 409 253 300 316 186 100 537 524 491 358 147 546
 534 240 229 375 133 260  65 395 143 376 449 301 617 287  75 494 227 577 173 231 215 118 599 535 177
 315 367 621  48 235 157 588 475 274 276 533 180 332 573 203 183 106 243 481 120  51 515 446 270 233
 536 416 201 200  36 602 379 278 261 239 510 436 108 104 464 246 448  87 392 443 530 423 226  15 245
 192 340 452 594 476 435 269  40 397 328  78 484 565  69 553 554 420 114  74 374 362 284 101 128 142
  84 217 558  38 622 619 413 184 486 154 187 516 238 222 196 405 389 242 417 163 603 587  34 170  81
 429 595 325 159 540 198 158 513  60 230 323 357 447 512 377 174 209 296 175  43 337 455  26 567 320
  59 112  24 360 293 459 456 433 601  37 339 545 489 309  27 414 527 495 225  97 279 346 582 210 107
 169 216   4 370 344 334 338 615 354 483 394 616 361 570 160  16 172 119  53 560 304 363 219 506 185
  83 155 410 386 351 520 571 399 298 403  22 244  12 473 458 307  19 382 547  76 574  63 586 281 205
 314 280 164 251 592   6 623 214 130 514 213 353 347  57 199 265 492  62   1 609 419 424 598 236 462
 549 129 148 525 396 306 538 223 247 425 103 272 208  91 591 614  77 590 561 584 102  86  99  90 271
 131 404 333 156 454 139 501 116 502 188 171 218 311 401 398  61 566 620 467 444 166  93  95 359 531
 140  14 137 613 426 384 365 194 542 267 517  30 295 445 380 418  17 604 317 364 136 611 202   5 402
 430 132 583  85  42 282  96  31 385 563 335 544 167 302 479 383 286 366 548 146 412   3 123 605 497
 496 624 292 273 145 153 490 564 121 391 589  68 507 204  52 319 310 576  46 165 451 600 189 342 150
 500 550 498 441 149 428 539 503   2  47  39 487  55 138  92 532 541 348 289  20  21 197 477 442 372
 248 263 421  67 285 109 125 336 523 411 415 191   8 505 297 232 256 135 596  80 400 176 341 608 499
 485 504  49 557 581  79 228  82 572 427 460 381 438 161 493 277 264  64 303 162 294 268 393 249  54
  70  25 407 562 237 470 331 266 511 390 469  56 478  33 312 283 579 144 526 356  29 387 453  45 406
 257 518 371 432 182 559  23 522 482 472 457 422 151 355  66 343 111 466 195 326 212  89 308 474  32

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.005e+07us (= 10050ms, 10.05s)
Satisfaction error: 5
Number of search iterations: 3801
Number of local moves: 3051 (including on plateau: 3004)
Number of local minimum: 45 (including on plateau: 384)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 612 345 254 468 488 10 18 585 349 72 178 224 179 409 253 300 316 186 100 537 524 491 358 147 546 => the sum is 7949 rather than 7825
Problem in row 20: 496 624 292 273 145 153 490 564 121 391 589 68 507 204 52 319 310 576 46 165 451 600 189 342 150 => the sum is 8117 rather than 7825
Problem in row 21: 500 550 498 441 149 428 539 503 2 47 39 487 55 138 92 532 541 348 289 20 21 197 477 442 372 => the sum is 7707 rather than 7825
Problem in row 22: 248 263 421 67 285 109 125 336 523 411 415 191 8 505 297 232 256 135 596 80 400 176 341 608 499 => the sum is 7527 rather than 7825
Problem in diagonal 0: 207 35 543 73 488 260 588 278 397 154 323 545 361 473 199 614 566 604 548 165 21 176 393 45 32 => the sum is 8088 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 312 625 125 509 126  78 325  91  27 159 377 443 297 600 491  87 341 553  51 140 484 473 353 164 594
 576 607 383  47 171 372 130 562 131 478 246 153  99 180  68 533 574 538 244 328 142 113 519 320 311
 163 135 419 216 118 245 571 445 554 184 531 462 136  49 565 127 102  11 249 321 560 366 561 270 465
 324 381 454 587 210  30 198 309 101 524  17 345 231 285 395  61 213 364 563 352  79 534 461 500 307
  82 186 605 273 525 510 613 403 195   7 590   3 117 620 160 304  22 267  32  20 506 623 294 355 513
 205 219 322 583 359 192 530 488 384 584 144 165 446 276  26 133 318 247 222 477 601 540 152 149  63
 350 467 536  38 483 236 313 200 492 618 110 425 387 188 239 431 201 427 502 286 170  15 458  62 191
 624 272 169 526  56 450 237 232  85 185 330 420 378  75  54 212 547 429 221 415  69 582 486 234 537
 548 460  37 308 225 434 404 612 336 360 168 176 432  95 175 339 408 409  72 457 253  25 209 545 338
 573 298 248  92 549 275 173 522 621 124 569  48  28 373 480 354 606 187 349 482 288 202 316   2  66
 172 528 182  14 568 469 111 317 380  81 218 329 226 464 577 300 156 229 521 609  18 402 426 523   5
 367  29 204 444 447 365  40 283  65 422 617 428 137 155 495 123 463  42  16 238 593 326 608 332 586
 435 578 542 120 499 543  76 589 151 539 289 207 278 406 369  43 299 112 271 413 230 346 211 266  13
 122 572 585 358 214 243 302 277 129 362 162 315 485 262 375 376 570 280 351 128 474  97 368  24 394
 503 466 265 296 598 100 386 167 363 268 257 196 455 493  46 301  10 411 109 264 416 470 295 438 252
 274 233 397 261 619 567 556 399 436 256  89 439 501 291 254 223   6  93 115 551  41 103  50 595 476
  44 489 293 448   4 145 412 139 269 591 215 507 263 529 148  71 241 559 393  45 468   1 520 517 514
 337  94 401 357 342 250 410 166 544 498 541 592  12 260 490 224 206 527 515 546 132  19  90  21 251
 203 158 303 197 281  34 141  70 479 323 471 400   8 424 398 396 290 581 437 194 356 555 333 616 177
 374 190  84 496  58 391  96 348 596 475 433 334 550  98 558 512 388 335 157 116 310 407  86 287 146
 181 105 472 217 106 114 602 442 440   9 456  59 615 494 504 557 518 108 392 343 370 306  53 104 258
 121 347 189  36 161 611 382 284 292 319  77 452 154 279 119 614 147 314 579 588 417 134 220 566 423
 421  57  64 552 414 599  80  73 227 199 441 107 575  60 242 535 430  31 379 385 532 193 580 344 305
 459  74  35 228 331 389 240  67 505  52 327 371 564 610 418 453 487 597 481  88 138 390  33  83 405
  55 255 511 622 361 183 497 340  23 208 150 449 451 259 179 516 282 174 604  39 178 603 143 508 235

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.93911e+06us (= 6939.11ms, 6.93911s)
Wall-clock time (full program): 6.9881e+06us (= 6988.1ms, 6.9881s)
Satisfaction error: 0
Number of search iterations: 2493
Number of local moves: 2078 (including on plateau: 2028)
Number of local minimum: 10 (including on plateau: 229)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 624 505 472 290 106 520  71 230 133  81 471 402 529  63  11 198 590 329 282  29  67 602 552  70 598
 286 592 374 102 295 160 587  16  38 557 152 616 512  10 403 232 229  75 558 126 605 573 200  32 495
 355  85 534 177 502 268  13 551 409 490 612 157 301 215 140 447 384   4 267 411  83 364 550  48 458
 541 532 499  27 226   1 450 350 347 581 315 526 422 549 582  94   9 194 205  76 571 332 169 196  31
 105 378 553 210 281 606  92 103 300 217 197 415 523 394 272 223 353 503 124 166 256 190 591 360 413
 336 240 328 484  25 492  51 117 479 114 297 436 381 176 271 382 493 564 481 162 395 344 331 324 122
 596 444  58 243 460 213  57 343 615  44  19 278 544 125 390 500 438 273 474 601 522 143 121 303  21
 241 377  30 201 158 321 464 449 111 517 537 446 192 463 491 110  43 468 383 393 441 195 237 386 171
 251  91 191  53 299 542 414 533 439 288 443 234  20  68 346 238  60 610 570 137 254 485  45 545 388
 589 466 476 419 359 172  84 370 565 365 379 120  61 433 146 362 380   6  42  26 416 399 603 277 310
 538 136 154 518  66 209 252  86 150 451 100  34 339 269 455 262 496 139 488 285 563 547 391 528 369
 376 334 516 387 130 363 249 372  15 351 453 366 193 322 428 427 348 333 357 539 352   3  72 233 306
 312 141 345 305 604 354 622 337 294 325 296 287 156 293  95 314 284 255 302 561 289 326 151 270 307
 108 132 434 623 429 112 524   8  39 173  89 316 178 266 341 510 531 559 611 452  88 540 576  37 149
 461  62 279 467 614 371 283 597 309 327 585 469 239 159  22  87 454 508  55 509 115 313 440 220 161
  64 298 497 494 396 389 244  23 501 207  49 134 375 511 519 555 274  77 199 280 420 456 478 202 183
 228 245 168 600 543 368 583 473 397 562 225 398 318 361 323  33  69 317 187 218 475  93 118 319 204
 222 426  98 258 392  59 572 155 340 621 186 247 417 180 250 104 620 265 119 462 342 275 224 423 568
 477  12 330  36 292 619 569 246 142 185  56 276 588 432 536 566 231 514 165 259 113  28 418 482 253
 507 261 236 535 235 148  18 358 448  96 206  41  73 593 123 487 577 401 182 164 521 356 248 586 425
 170 138 107  99 445  24 221 618 212 109 515 184 407 607  35 320 421 437 167 506 430 486 308 311 548
 153 483 129 135 513 147 373  97 260 442 406  82  74 560 617 608 214  78 578 181  17 435  65 594 584
 189 580 349 188 116 410 219 504 385 263 257 599 489  79 575 131  47 567 527 525 338  52 304   5 127
  46 242 264 400 128 498 405 554 367 457 424 546  14 470 163  40 101 175  90 613 145 208 579 465 431
  50 625 404 574 211 459 408 335 530   2 556 216 480 227 291 595 179 174 412 144   7  80  54 609 203

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00492e+07us (= 10049.2ms, 10.0492s)
Satisfaction error: 2
Number of search iterations: 3826
Number of local moves: 3158 (including on plateau: 3109)
Number of local minimum: 37 (including on plateau: 383)
Number of resets: 0
Number of restarts: 0

Problem in row 9: 251 91 191 53 299 542 414 533 439 288 443 234 20 68 346 238 60 610 570 137 254 485 45 545 388 => the sum is 7544 rather than 7825
Problem in row 15: 461 62 279 467 614 371 283 597 309 327 585 469 239 159 22 87 454 508 55 509 115 313 440 220 161 => the sum is 8106 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 179 498 584 490  10 229 619 602  31 360 461 613 222  34  15 158  28 181 380 316 402 537  35 242 599
 611  73 605 362 345 143 187 465 237 113  58 470 341 342 129 223 598  70 256 166 308 378 518 489 338
  77 495 250 310 344 487  55 239 105 392 383 305  74 622 595 296 309 297 538  50 299  38 120 204  79
 106 263 227 543 460 384 527  64 164 142 330 117 281 462 171 146 101 480 110 463 500 440 249 563 532
 443 502  75  88  66 556 262 104 356 589  82 581 211  49 307  93 573 565  39 118 408 457 394 422 485
 183 157 122 185 511 293 482  23 616  14 466 140 449 123 208 353 409 410 504 451 607 137 446 493  43
 473 491 529  69 245 419 458 201 343 540 154 391 546 156 431  63 357 174 455 244  51 226 169 438 202
 420 277 544 214 286 324  68 515 145 571 390  54  19 426 218 477 266 180 413 198 444 415 512  16 433
 600   4 445 474 359 520 346 620 288  80 287 464 435 347 126 436  57 418  25 121 558  84 290 399  42
 257 326  29  21 328 488 351 354 285 300 102 379 525 136 370 401 219 386 403 547  72 289 475 252 530
 434 471 184 524  76 535 163  89 429 224   9 428 358  48 368 528 533  52 339  71 294 141 375 604 548
 388  37 371 593 387 168 125 267  11 501 503 318  56 432 253 588 405 554 172 606 585   3 278 134  90
  86 363 496 514 612  33 469 279   7 361 317   6 323 303 472 453 365 329 583 492 128 545 381 397 373
 332 319 232 320 194  45 162 355 377  67 569 254 282 417 505 119 233 603  99 459 314 596 234 454 284
  17 268 553 195 534  81 582 349 205 149 421 191 147 561 456 246 448 478 333 439 173 335  44  60 560
 139  41 483 248 621 150 304 160 517 230 269 274 427 609 385 601 124 220 369 258 216 241 153 516 270
 251 567 182 116 212 213 228 291 406 127 210 209 577  97 192 564 203 479 608 255 508 177 592 301 260
 138 404 186 336 507 135 590  30 552 484 152  94 148 196 578 364 398 176 522 382  61 481 340  85 486
 539 306 625 579  24 572 159 374 302 447 165 103 615 161 557  40 414 109 170  53 331 325 322  92 441
 188 295 396 264 570 132 247 311 450 617 519 276 575 280  87 199  12  36 542 111 190 442 155 400 531
 497 236  13 131  91 423 506 550 591 207 468  78  26 350 151 536 225 510 133 541 568 272 452 243  27
 509 238  65   2 221 594 424 467 513 215 618 555 476 559  47 107 367 389 167 597  18  32 566  20  59
 100 412 178 624 112 231  95 499 175 551 337 425 312 586 614 114  22 298  98 372 259 376 580 393  62
 235 576 130 193 437 395   5 265 407 283 366 526 292 521 494 197 549 348 240 200 115 271   1 562 217
 623 206 321 430 273 275 411 352 313 261 189 574 108   8  96 523 610  83 327 315 416 587 144  46 334

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00502e+07us (= 10050.2ms, 10.0502s)
Satisfaction error: 2
Number of search iterations: 4840
Number of local moves: 3978 (including on plateau: 3929)
Number of local minimum: 34 (including on plateau: 487)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 77 495 250 310 344 487 55 239 105 392 383 305 74 622 595 296 309 297 538 50 299 38 120 204 79 => the sum is 6963 rather than 7825
Problem in row 13: 86 363 496 514 612 33 469 279 7 361 317 6 323 303 472 453 365 329 583 492 128 545 381 397 373 => the sum is 8687 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 623 249 154 483 562 432 518 117 235 448 433 426 170  44 136 397  35 548 372  23 415 116 573 211 105
 440 602 324  66 122 535 496 587 286 424 526 227  75 480  96  21  92 270 263 409  86 112 403 507 376
 458 393 567 126  13 510 618 193 488  73 598 468 614  85 560 572 453 161 255  83 565 289 104 121 477
 311 378 494 554 271 199 277 177 504 114 134 568 550  11 225 215 346 452 417 169 163 265 168 251 612
 416 101 528 358 552 544 429  74 585 174 157 212  82 282 499  38 603  42 533 229  64 484 113 145 581
 276 442  93 492 473 491 138 208  37 369 575 115 319  56  72 405 210 388 353 556 316 278  59 561 543
 128 143 541 524 209  91 456 534 156  48 475 532 133 546 380 525 427 501  87 450 419  65  17   2 436
 250 304 375  36 183  60 558 425 261 493 248 443 231 334 198 616 398 412  40 279 201 536 298 464 182
 202 457 150 570 439  10 522 470 435  63  52 461 337 506 444 173 141 542 129  77 284 599 545 566 232
  16 148 110 413 118 584 109 437 472 394 155 254  67 190 191 135 196  25 489 539 146 206 192 194 445
 189 361  22 149 537   7 601 314  89 606 373 377 555 266 613 508 362 408  34 605 119 137 127  46 420
 363  39 355 308 352 624 336 300   4 486 247 327 233 181 338 239 132 609 213 360 349 348 390 351 341
 320 306 339 318 313 325 321 287 299 366 344 330 332 309 268 310 302 290 292 356 335 312 326 244 281
 234 583 164 262  97 245 303 625 593 172 515  90 479 301  33 481  31 596 367  51 430 240 519 147 267
 224 418 513 328  58 340 218 258 285 252 619 273  15 259 220 187 274 253 395 447 520 474 446 226 323
 551   6 350 342 389 498   5   8 184  20   3 595 296 615 382 269 487 305 131 407 459 383 600 460  80
 582 175 107 329 374 203 179 386 354 228 392 610 462 331 368 482 180  26 423 400 197 106 343 139 449
 514 527 221  19  69 357  61 571  30 589 264  18 431 428 547 167 151 158 402 465 153 381 291 500 511
  70 523 466 200 512 124 379 162 317 404  84  12 230 471 288 297 569 219 243 608 451 359 422 370  45
 490 185 241  81 620 476  55 214 617 559 205 364 385  43  68  76  99 384 257  94 505 467 347 463 530
  54 438 102 421 588 557 411 294 152 553 497 521 171 166 563  32 236 322 549 100  78  53 396 509  62
  41  28 216 120 455  27 130 238 125 485 315 111 607 387 123 611 592 280 580 579 502  71 454 604 144
 391 207 478 597 204 188 246 531 345 103 414 275 333 586 256  24 591  47 307 365 195 574  29 399 140
 594 540 622 621  98 222  49 178 434 142  14 159 223 371 516 576 401   9 529  79 590 406 160  50 242
  88 272 293 108 217 176 410 237 538 260 186  57 495 577 441 469 517 578 165  95 283 564 503 295   1

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00438e+07us (= 10043.8ms, 10.0438s)
Satisfaction error: 3
Number of search iterations: 4803
Number of local moves: 3957 (including on plateau: 3909)
Number of local minimum: 36 (including on plateau: 499)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 458 393 567 126 13 510 618 193 488 73 598 468 614 85 560 572 453 161 255 83 565 289 104 121 477 => the sum is 8844 rather than 7825
Problem in row 9: 202 457 150 570 439 10 522 470 435 63 52 461 337 506 444 173 141 542 129 77 284 599 545 566 232 => the sum is 8406 rather than 7825
Problem in row 10: 16 148 110 413 118 584 109 437 472 394 155 254 67 190 191 135 196 25 489 539 146 206 192 194 445 => the sum is 6225 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  16 557 573 487 431 306 145 142  62 330 540 408 256  68 501 414  38  69 403 607 185 441 387  10 449
 579  25 455 568 612 507 480 384  49 121 108  21 429 284  19 470 351 239 460  59 514 454  84 465  88
  71 505  36   1 544 564 542 353 601 386 339  86 458 453 336 300 165 316  97 271 459  26 591  95 230
 383 436 380 399  60 117 126 599 543   7 111 562  13 420 427 546 532 586 216 538 182 202  67  77 296
 381 510 611 598  85  93 474  82 150 307 106 462 314 555 114 132 393 319  94 379 415 534 443 139 135
 547 190 340 406  91  70 413 619 439 440 260 483 578 367 373 119 404  43 109  23 504 224 162 478 143
 411  90 539 523   5  66 138 624 305 425 508 248 215 203 369 512 209 156 496 435 173 221 274 448 232
  92 292  33 312 350 333 615 141 421 273 388 581 565  81 122 279 359 159 610 535 193 194 280 593  24
 218 118 456 147 554 222  28 285 192 137 237 199 290 519 495 580 229 160 250 363 613 288 515 518 212
 349 430 167 331 317 327 325 390 249 223 332 265 151 361 318 177 584 481 559 278  57 597 171  87 299
 576 377 378 198 477 446 432 407 511 120 473 385 238 214  55 157  35 491 356 195 183 392 136 169 424
 303 346 464 268 475 246 276 545 294 347  72 269 251 310 500 102 236 228 563 308 275 166 395 344 242
 313 365 287 618 267 320 357 152 596 536 205 295 422 210 220 180  64 335 322 258 247 148 402 315 391
 409 266 499 116 204 309  73 263 257  18 358 321 304 343 175 587 368 588 125 364 485 301 398 323 371
 252  48  51 244 208  53 572 442 520 187 625  80 494  78 352  32 337 570  22 103 531 467 592 360 605
 401 154  58 486 517 155  61 479   4 620 560 254 541 172 253 376 461 104 293 281 529  79 231 235 521
 528 372 445  37 503 552 311  74  41 112 623  98  12 603 191 537 418 567 471 389 179  99  46 468 149
 447 334  44 345  76 437 444 261 621 608 146 556 134 400 286 616 124 438 240   9  27 617 130  89 396
 127 569 259 241 170 497 107 219 105 289  20 489 457  56 516 548 463   6 419 492 255 558 493 416  54
 326  83 342  47 329 298 186 553 428 341 571  50 158 450 606 410 164  17 426 604 595 144 188 226 283
  52  65 472 181 590 524 277 469 362 452  96 140  11 412 101 525 488 482 128 161 374 282   8 622 551
 264 466  42 131 527 189 234 113 201 354  29 348 451 366 566  14 589 245 575 574 328 513 522 153  31
 168 217 291 582  34 227 602  15 207 200 163 197 423 583 509 100 394 370 115 382 133 405 561 338 609
 549 484 206 375 270 417 577 211 434 502 600 498  75 272 196   2 123 262 174  39 213  40 506 324 476
  63 526 397 184 129 550  30   3 233 490 355 530 585  45 225 110 297 594 302 178 176 433 243 533 614

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.34377e+06us (= 9343.77ms, 9.34377s)
Wall-clock time (full program): 9.39498e+06us (= 9394.98ms, 9.39498s)
Satisfaction error: 0
Number of search iterations: 3528
Number of local moves: 2976 (including on plateau: 2927)
Number of local minimum: 19 (including on plateau: 321)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 248 144 264 318  47 460 298 503 450  34 491 527 105 563 151 129  90 140 383 235 601 590  15 439 600
 125 331 624 510 559 575 615 128 395 161  83 367  16 392 269 612 585 549 528  21 568  56 132 566 232
 389 101 541   9  19 594 432  45 530 555  35 278 225 155 200 222 185 534 593 209 374 205 487 117 344
 253 526 607 522 202 238 517 361  43 337 133 114 229 102 550 583 448  89 146  88 255 532 203 481 266
 172 423 131 557 442  53  91 234 219 622 578 437 162 599 138 328 381  62 520 358 293 406 523  52  44
 489 444 402  22 313 310 243 390 533 474 596 456 518 501 397 545 418 470 608 459 512   6 236 480 556
  38 388 524 453  31 581 436 258 511 169 613 623 586  11 375 179  26 145 457 438 445  10 137  14 377
 620 178 273 272 421 592 284 365 379  17 535 121 611 301 468 158 562 465 171 606 119 290 580 521 127
  97 279 492 546 387 496  86 577  68 168 210 485 249 166 499 552 416 111 296 542 483 108 598 230 440
 565 216 221 618  87  80  46 455 551 368 340  39 343  94 508 386 167  36 353 369 199 478 619 136  12
 498  93 412 366 452 110 595 554 141 342 348 134 275 484 364   4 371 289 414 113 103 560 404 341  58
 428 183 394 153 320 326 391 339 352 319 464 239 359 338  54 332  42 507 441 299 208 382 317 304 334
 329 309 346  92 307 335 333 322 336 349 323 463 295 347 274 302 311 292 308 314 356 303 321 281 277
 625 287 142 245 112 184 435   1 190  29 283  50   5 591 213  51 250 360  67 147  98 393 427 469 567
 488 226  71 603 569 177 196  63 584 502 259  18 497 372 315 500 288  64  28 316 354 262 182 362 529
 173 519 220 570 300 471 233 188 143 240 120 385  75 422 267 241 211 194 561 525 576 150 261 543 237
 180 357 256 159 297 242 548 122 223 461 291 515  74 410 312 109 539 582 217 327 433 345 218 384 224
  84  40  33 537 170  41  59 540 408 447 156 157 547  37  79  77 516 118  66  13  82 285 413   8 399
 306 228 531 139 286  32 165 186 282 193 104  73 495 265 462 513  57 605 506 212 587 449 572  85  25
 589 614 204  76 604 197 373 424 100 597  69 370 482 276 152 417 490 280  70 115  48 187  24 553 514
 330 476 175   7 154 260 504 454  65 434 405 270 564 176 419 201 130 493 198 558  78 181 458 409 426
 477 443 149  81 494 351 215 398 124 207 505 571 407  49 621  72  61 401 174 431 135 602  20 246 467
  55 609   3 400 189 544 574 268 616 252 257 536 244 163 509 415 192 420  60 106 324 378  96 588  27
 160 148 380 475 446 305  30 254 116 123 251 247 363 473  23 411 610 325 429 573 403 472 227   2 579
 107 263 430  95 617 271 126 396 466 425 376 350  99 538 206 486 479 294 231 451 191 195 355 214 164

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00501e+07us (= 10050.1ms, 10.0501s)
Satisfaction error: 11
Number of search iterations: 3561
Number of local moves: 3034 (including on plateau: 2994)
Number of local minimum: 15 (including on plateau: 339)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 125 331 624 510 559 575 615 128 395 161 83 367 16 392 269 612 585 549 528 21 568 56 132 566 232 => the sum is 8999 rather than 7825
Problem in row 3: 389 101 541 9 19 594 432 45 530 555 35 278 225 155 200 222 185 534 593 209 374 205 487 117 344 => the sum is 7378 rather than 7825
Problem in row 6: 489 444 402 22 313 310 243 390 533 474 596 456 518 501 397 545 418 470 608 459 512 6 236 480 556 => the sum is 10378 rather than 7825
Problem in row 8: 620 178 273 272 421 592 284 365 379 17 535 121 611 301 468 158 562 465 171 606 119 290 580 521 127 => the sum is 9036 rather than 7825
Problem in row 9: 97 279 492 546 387 496 86 577 68 168 210 485 249 166 499 552 416 111 296 542 483 108 598 230 440 => the sum is 8581 rather than 7825
Problem in row 10: 565 216 221 618 87 80 46 455 551 368 340 39 343 94 508 386 167 36 353 369 199 478 619 136 12 => the sum is 7286 rather than 7825
Problem in row 14: 625 287 142 245 112 184 435 1 190 29 283 50 5 591 213 51 250 360 67 147 98 393 427 469 567 => the sum is 6221 rather than 7825
Problem in row 18: 84 40 33 537 170 41 59 540 408 447 156 157 547 37 79 77 516 118 66 13 82 285 413 8 399 => the sum is 5312 rather than 7825
Problem in row 19: 306 228 531 139 286 32 165 186 282 193 104 73 495 265 462 513 57 605 506 212 587 449 572 85 25 => the sum is 7358 rather than 7825
Problem in row 22: 477 443 149 81 494 351 215 398 124 207 505 571 407 49 621 72 61 401 174 431 135 602 20 246 467 => the sum is 7701 rather than 7825
Problem in diagonal 0: 248 331 541 522 442 310 436 365 68 368 348 239 295 591 315 241 539 118 506 115 78 602 96 2 164 => the sum is 7880 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 606 122  52 371 507 172 610 544  29 516 540 282 350 240 604 138 195 278 109 157 420  92 233 623  35
 289 485 566  81 549 556 358   8 618 434 285 199 351 355  53 207 488 469 134 443 509  64  84 230 352
  23 518  19 580  15 249 286 119 322 525  93 589 592 461  42  13  32 255 474 555 600 455 554 193  28
 581 210  21 568 212 450  17 328 214 144 395 550 412 505 497  60 125 538 414 279 564 165 490   4  82
  86 148 542 381 221 228   6 299 166 251 545 582 269  24 465 464 287 263 439  51 192 428  48 237 605
 181 584 313 293 368 446 105 521 262 133 336  11 104 123 422 405 344 587 130 229 503 373 523 271 258
 162 197 155  30 345 513 118 187 493 425 622 339 489 612  96 435 472 141  76 432 273 402 561 136 114
  33 311 359  47 462 156  46 265  77  49  22 617 132 247 182 541 401 226 445 479 272 573 315   7 324
 388 504 325 409 519 274 411 326 408 591 243 307  66 378 319  59  62  58 558 348 250 151 129 143 599
 332 471 267 302 483 242 572  18 546 183 593 407 596 625 444 347 552 184 357  83 231 222 108 598 559
 159 310 441  72 171 329 563 239 260 615 398 349 406 280 308 495 305 236 364 100 382 223 264 337 219
 418  88 482 205 389 583 607 427 283 603 510 120  65 191 213  67 624  78 419  95 354 150 343  45 466
 396 268 177 366 320 246 331 146  34 387 201 557 484 361 341  43 424 259 164 394 473 574 241 453 185
 330 306 460 437 257 208 248 528 392 152 314 290 113 309 487 209 570 323 294  80 137 333 275 380 393
 515 423 470 335  91 317 363  89 440  98 318  74 291 514 569 200 399 110 522 276 616  27  99 403 266
 468 353 253 442 534 121 338 168 421 384 334 295 417 478  79 456 149 135   9 161  63 139 480 529 619
 410  39 609 292 153 585 115 225 433 188   3 385 365 186 147 578 178 449 284 562 533   5 321 477 303
 204   2 590 160 415 391 611 494 103 169  90 116 383 117 377 524 498 501 571  12 234 194 397 224 448
 107 532 376 244 499 367 475 298 218  85  25 111 531  50 594 551 296 216 206 576  14 548 577 202 127
 196 256 106 360 301  70 430 601 102 245 215 404 597 429  69 426  37 579 491 288  44 277  94 613 595
 154 356  41  31 452 565 375 457 567 158 304  38 232 190 463 235 481 560 126 543 142 362 312 506 175
 316  57 217 454 124 131  68 520 297 447 281 369  97 340 270 467 374 621 189 451 496 486 163 174 416
 431 492 500 547  10 179  16 342 537 436 180  61 370 211 517 173  55 379 614 511 300 386 176 346  56
 438 254  71 198 101  75 586 536 458  54 476 535 112 526 227 512  87 252  36 459 203 608 508 167 575
 602 539 413 620 327 372 170 140 145 553 502 238   1  73  40 220 390 128 400 261  20 588 530 527  26

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00498e+07us (= 10049.8ms, 10.0498s)
Satisfaction error: 6
Number of search iterations: 3623
Number of local moves: 2991 (including on plateau: 2947)
Number of local minimum: 39 (including on plateau: 342)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 289 485 566 81 549 556 358 8 618 434 285 199 351 355 53 207 488 469 134 443 509 64 84 230 352 => the sum is 8167 rather than 7825
Problem in row 3: 23 518 19 580 15 249 286 119 322 525 93 589 592 461 42 13 32 255 474 555 600 455 554 193 28 => the sum is 7592 rather than 7825
Problem in row 5: 86 148 542 381 221 228 6 299 166 251 545 582 269 24 465 464 287 263 439 51 192 428 48 237 605 => the sum is 7227 rather than 7825
Problem in row 8: 33 311 359 47 462 156 46 265 77 49 22 617 132 247 182 541 401 226 445 479 272 573 315 7 324 => the sum is 6588 rather than 7825
Problem in row 10: 332 471 267 302 483 242 572 18 546 183 593 407 596 625 444 347 552 184 357 83 231 222 108 598 559 => the sum is 9322 rather than 7825
Problem in row 24: 438 254 71 198 101 75 586 536 458 54 476 535 112 526 227 512 87 252 36 459 203 608 508 167 575 => the sum is 8054 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 381  61 419 474  43 472 507 264 236 295 414 122   7 481 575  76 443 313 259 213 519  37 498 536 180
 562  62 382 467 374 155 597  75 590 147  29 456  83 222 207 593 282 545 442 106 571 187  87 413 191
 491 140 578 189 583 573  70  18 176 439 250 511 311  10 138 379 218 488 484 289 267  81 534 364 244
 452 153 275 547  48 527 541  46 265  89 168 518 462 215 200 615 165 521 482 193 145 479  96 463 160
 524 508 171  50 560 386 489 103 468 183  15 450  17 121 611 492 115 117 523 100 127 483 393 277 542
  77 589 613 601 260 478 239 217  21 459 455 598 619 258 229 227  99 169 351 194 499 587 234 112 251
 480 537 146  79  41 220 469 528 192  72 292 550 196  57 530 554 206 434 490 605  73 422 458  92 102
 278 101 104 182 212 453 186 517 516 494  91 576 506  88 392 444 553 437 429  64 623 325 151  78  25
 438 556  51 417 363 198 428 621 410 531 412  85 114 612 505 179 376  80 150 402  28 134 228 447  60
 465 332 116 622 435 105  44 509 616 342 188 594  20 433   2 285 249 572  82 166 248  45 579 538 238
 378 273 390 385 308 361 338 174 397 396 202 451 340 356 352 370 322 330 109 336 345 301 362  12 237
 346 358 371 372 158 373 383 343 347 306 318  68 326 290 319 331 344 359 339 369 323 119 321 305 337
 335 350 299 348 334 349 327 360 324 303 317 302 477  74 287 328 329 320 341 268 283 274 300 284 312
 457 261 316 315 225 297 291 269 281 286 280 279 307 256 409  40 294 262 314 415 391 503 252 205 620
  52 599 184 204 546  65  98 156   3 496 243 500 411  94 254  59 195 563 232 461 368 476 241 493 486
  22 185 512 128 304 125 624 399 172 157 591 164 431 567 592 216 235 310 132 529 510 293 485  86  56
 162  66 177 420 333 617 548 296 470 584 108 246 170 245 113 387  47  26  31 154  38 298 436 551 384
 136 600 175 270 608  53  84 219 566 163 203   4 473 432 460 354 141 124 609 525 242 148 544 107 585
 135  58  71 408 504 118 257 129 233 143 607 178 126 515 395 425 441  90 130 502 403 449 495 448 565
 416 602 288  34 190  23  32 561 401 223 224 353 230 522 111 221 526 366 231 446 418 520 606 181 226
 272  11 421 586 559 367 426 475 149  54 497  30 533  93   5 535 577 388 424 214 144 271 209 487 625
 398 276 539 120 377 173 240  19 210 404 427 208 568 570 400  16 440 405 263 253 445 309 133 471 161
 197 543 110 159  39 580 131 596  63 574 557 532 540 603  33  13  36 581 389 380   6 464   9  95 595
 357 555 604 201 394 558 407 501 167  67 514   8 152  97 564 549 610   1 123 375 355 365  35 211  55
  14  49 513 247  27 199  69 430 552 618 423  42 406 614 142 137 582  24 466 266 454 255 139 569 588

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00485e+07us (= 10048.5ms, 10.0485s)
Satisfaction error: 6
Number of search iterations: 3491
Number of local moves: 2852 (including on plateau: 2806)
Number of local minimum: 27 (including on plateau: 356)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 77 589 613 601 260 478 239 217 21 459 455 598 619 258 229 227 99 169 351 194 499 587 234 112 251 => the sum is 8436 rather than 7825
Problem in row 15: 52 599 184 204 546 65 98 156 3 496 243 500 411 94 254 59 195 563 232 461 368 476 241 493 486 => the sum is 7479 rather than 7825
Problem in row 17: 162 66 177 420 333 617 548 296 470 584 108 246 170 245 113 387 47 26 31 154 38 298 436 551 384 => the sum is 6907 rather than 7825
Problem in row 20: 416 602 288 34 190 23 32 561 401 223 224 353 230 522 111 221 526 366 231 446 418 520 606 181 226 => the sum is 7951 rather than 7825
Problem in row 21: 272 11 421 586 559 367 426 475 149 54 497 30 533 93 5 535 577 388 424 214 144 271 209 487 625 => the sum is 8352 rather than 7825
Problem in diagonal 1: 180 413 534 479 127 194 490 437 376 285 352 290 477 279 243 157 470 219 257 23 559 120 110 555 14 => the sum is 7640 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 438  19 603   9 555 222 548 582 497 219  18 570 190 125   4  94 251 616 561 280  40 486 130 496 272
 376 492 401 369 461 354  98 583 117 363 145  38 218 605 111 139  92 157 207 501 396 324 456 200 622
 345 188  82 554 478 430 531 377  75 374 161 203 122 614 425 382  95 525  73 170 451 543 365 221  41
 394 252  32  13 436 464 160 213 563 225 302 270 611 444 532 358 551 466 300 229 256 452 569 494 255
 459 108 174 362  15 419 315 463 140 557 439 615 134 116  20 474 333 228 545 429 320 198 329 485 148
  76 194 120  48 360 137 189 503 395 264 446 233 612 476 594  64 619 351 171 191 535 312 244  78 613
 107 155 473  99 291  87 138  46 465  51 530 284 385 625 519 195  24 427 305 424 539 243 493 553 367
 398 507 450 162 214 106 495 154 517 435  67 521  68 475  52 330 462 471 239  43 565 346 231 306 211
 541 523 589 607 391 313 567 186 220 168 558  44 309 442 546 469 150 197  71  97 104  89 131  56 457
 499 224 165 587 289  53 323 373 210 267 504  77 421 262 164 447 277 156 472 604  74 602  55 196 524
  81 397  72 274 522  21 387  93 575  10 275 292 481 388 135 520 590 182 393  25 399 540 431 169 573
 588 556 580 537 624 153 247 510 428 317 527  27 205 286 386  50 173 115 318 578 288 572 151 364 301
 298 278 253 248 325 347 299 249 336 259 348 366 307 357 295 352 322 269 381 338 334 273 342 290 359
 405  31 246 335  16 279 287  85 550 327 538 407 105 266 337 332 361 595 597  66 371 355 260 241 433
 263 500 579 404 420 440 564 237 217 585   2 389 584 176 383  23 432 242 400 293  57 141  80  88 326
 193 577 454 445 102 621 296 343 230  59  84 204 592 126 606 608 123 158 536 449 114   1 308 268 328
  58 147 384 100 206 511 534 515   6  35 368 512 488 434 215 201 601 581  63  49 426 128 321 390 552
 489 586  79 455 341 453 159 414 235 129 370  37 178 181 133 479  62 508 149 245 227 460 484 623 349
 101 179 314 372 167 596 392 417 526 528 226 617 422  28 409 344 285 406 482 177 192 402  83  91  69
 498  90 331 294 415   8  96 297 310 468 183 180 282 379 199 547 281  11 223 599 568 187  39 319  47
 124 423 353 184 533 416  42 609  33 518 240 513 144  22 562 143 110 142 443 304 516 441 591 234 185
 152 491 209 506 166 276 250 271 254 477 118 480 350 593 303 127 483   5  34 610 216   3 238  70  45
 340  54 403 261  29 542 544  36 380 560 467 413  60  30  17 265 208 490  14 600 559 437 502 549  65
  26 618  61 514 356 202 232  12 136 172 311 412 448 212 620 316 411 119 509 378 103   7 505 574 571
 576 236 418  86 113 375 132 257 410 458 598 121 109 163 258 566 529 408 339 146 175 283 487 470 112

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00498e+07us (= 10049.8ms, 10.0498s)
Satisfaction error: 5
Number of search iterations: 4590
Number of local moves: 3787 (including on plateau: 3742)
Number of local minimum: 34 (including on plateau: 495)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 394 252 32 13 436 464 160 213 563 225 302 270 611 444 532 358 551 466 300 229 256 452 569 494 255 => the sum is 8841 rather than 7825
Problem in row 12: 588 556 580 537 624 153 247 510 428 317 527 27 205 286 386 50 173 115 318 578 288 572 151 364 301 => the sum is 8881 rather than 7825
Problem in row 20: 498 90 331 294 415 8 96 297 310 468 183 180 282 379 199 547 281 11 223 599 568 187 39 319 47 => the sum is 6851 rather than 7825
Problem in row 22: 152 491 209 506 166 276 250 271 254 477 118 480 350 593 303 127 483 5 34 610 216 3 238 70 45 => the sum is 6727 rather than 7825
Problem in diagonal 0: 438 492 82 13 15 137 138 154 220 267 275 27 307 266 383 608 601 508 482 599 516 3 502 574 112 => the sum is 7719 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  48 590  96 338 349 172 607  31 202 198 112 284 178 492 245 618  28 371 593 215 454 167 595 598 244
 398   7 346 224 535 617 413 546  76 190 507  41  61 555 116 176 491 199  34 431  19 272 532 227 427
 540 241 300 373 104 464 204 478 356 484 622 266  14   5  33 394 579 105 205 379 502 510   3 123 541
 479 237 254 111 214 571 600 113 517 415 133 194 351  45 171 529 319 623 424 458 137 235 119 181 395
 100 582 108 409  75 557 439 429 145 608   6   2 257 472 213 258 450 512  99 534  79  94 291 543 563
 453 519 477 422 389 578 129 256 130  65 135 545 550 367  82 381  58 295 404 140 247 432 182 438 151
 420 128 327 624 222  97  78 488 619 157  39 470 318 361 385 564 173 448 444 188 606 401 407  29 499
 246   4 208 567 369  22 365 209 417 456 459 115 486  73 426 576 599  32 473  56 616 191 513 121 226
  42 625 419 230 211 160 158 341 569 271 219 568 200 232 216 234 551 548 252  53 428  40 110 620 528
 180 511 516 293  16 348 136  13  11 251  74 406 275 421 423 430 102 536 603 553 441 494 220 500  72
  49 231 573 592 449 544 506 447  92 402 260  69 558 267  44 163 114 605  95  70 451 521 164 497  62
 289 249 495 210 294 328 347 321 166 320 228 233 460 353 255 221 410 359 292 264 314 225 330 253 609
 278 297 138 313 457 250 243 325 281 299 345 332 425 248 615 357  17 296 333 335 317 339 337 383 265
 363 277  64 283 324 286 329 304 288 372 306 336 310 322 384 315 312 326 334 308 340 298 374 316 354
 362 350 378  57 471 364 380 309 240 370 487  20 490 159 489 118 303  46 435 366 282 591 399  91 268
 559 408 201 466 285 446 343 397  81 505 588 509 175 440 147 375  60  18 583 344 469  63 195  43 125
 527 416  93 480 503 386 146 305 613 103 352 552 229 120 587 525  67 261   1 604 153 236 238 174 154
 122 187 223 185  38 465 132 109 524 561 601 391 196 126 368  50 462 445 597  23 124 589  51 262 531
 393 455 170  21 556  24 463 562 193 392 474 183 596  35 481  47 442 542 498 323  10 461 276 192  36
 355  54 433 150 184 279  84 107 436 302  86 602  25 547 539 101 396 311 537 483 280 270 482 405 377
 526 186  77 162 414 212  59 206 514 496 218 467 518 307 165 382 565  15 259 614 134 177 412 523 217
 239 437 570 580 189  55  87 508 411  66 522 360 586 575 155 117  68 400  88 476 273 376 331 274 263
 203 549 197 207 574   9 594 242 501 127 538 131  26 566 390 452 169 179   8 106 388 485 621  30 533
 161 142 585 387  83 443 468 168 358 403 434 610  37 581 342 290 530  52  90  27 612 269  71 584  98
 493 143 577 141 520 148 515 611  85  12  80 139 504 156 554 152 560 301 144 475 149  89 572 418 287

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00495e+07us (= 10049.5ms, 10.0495s)
Satisfaction error: 4
Number of search iterations: 3585
Number of local moves: 2991 (including on plateau: 2944)
Number of local minimum: 20 (including on plateau: 357)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 398 7 346 224 535 617 413 546 76 190 507 41 61 555 116 176 491 199 34 431 19 272 532 227 427 => the sum is 7440 rather than 7825
Problem in row 7: 420 128 327 624 222 97 78 488 619 157 39 470 318 361 385 564 173 448 444 188 606 401 407 29 499 => the sum is 8492 rather than 7825
Problem in row 18: 122 187 223 185 38 465 132 109 524 561 601 391 196 126 368 50 462 445 597 23 124 589 51 262 531 => the sum is 7362 rather than 7825
Problem in row 22: 239 437 570 580 189 55 87 508 411 66 522 360 586 575 155 117 68 400 88 476 273 376 331 274 263 => the sum is 8006 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625 222  30 180 214 543 495   2  72 128  99 234 182 197 558  50 103 470 258 547 269 451 601 594 617
 458  51 485 553 417  23 316 593 160 354 375 368 262 257 176 216 597 267 361 100 388 548 239 255   6
 378  36 513 500 189  98 620 320 566 514  74 561 146  24 400 213 210 438 185 175 479 460 567 117  42
 449 381 322 376  87 132  94 387 379 530 171  90 442 592 512 336 167 344 501 126 215 382 211 533  66
 196 554 202 238 150 122 104 604 385  40 492 169 571   5  31 619 221 315 476   8 372 589 523 537 302
  47 580 410 466 490 383 158 108 505 120 101 531 615 144 607 298 448 155 209  52 204 228  12 463 491
 145 360 350 570 622 503 253 345 411 613 486 183 467 133 405 431   7  39  85 487  18 304 536  27  45
 402 590 605 164 347 418  63 440  84 412 565 583 527 148 584  41 349  61 110 219 208 363  60 444  38
 194 279 373 123 577 153 468 434 472  15 508 424  65 549 394 206 348 137 129 573 161  70 277 422 474
 275 516 286 568 266 179 191 564 332  67 534 430  37 366  58 598 498 181 351 509 127 420  10 357 105
 365 429 157  89 465 591 367 151 488 276 384 321  16 403 421 497 130 309  57 610  73 147 406 391 282
 556  95 233 249 343 437 159 119 525 507 295 325 435 456   9 192  53 166 529 608 611  19 203 156 545
 337 338 358 273 331 303 312 281 307 339 308 297 311 330 318 291 324 314 283 259 319 369 335 265 323
  20 289 522 585  59 539 342 326 623 111  44  21 355 413  11 506 469 480  34 377 371 428 374 225 301
 278 271 572 552 235 450  28 246 230 290 300 241 313 248 292 293 436 251 240 588 260 231 229 274 477
 574 138 193  97 310 432 609 139 285 333 187 201 140 616 152 519 452 362 256 245 511  56 494 207 317
 393 408 188   1  32  79 578 263   3 603 409 483 599 220 441  68 288 532 557 136 559 496 551  33 272
 114  76 399  71 299 168 395 242 540 224 305 462 125  29 595 461 392 296 544 526 205  91 579  69 618
 346 195 178 541 439  75 217 521 287 328  93 174 520 535 218 493  25 268  13 404 445 575 106 473 356
 247 252 243 380 254 606 407 510 142 198 455  43  46 454 397 124 102 569 401 447 582  26 177 306 457
 115 116  81 154 390 560 329 107 586 546  82  96 415 517  64  54 538 581 482 359 113 419 396 149 576
 223 264  92 550 173 232  49 386 162 184 414 624 481  48 236 261 562 212 389 134 464 270 364 596 172
 524 528 109 112  77  78 518 563  83 484 340 341 135 199 244  14 478 352 587 284 334 600  88 426 327
 433 398 471 353 504 294 141 170 143 163 614 502 250 443 227 423 542 237 602  17  22 118  62 280 416
 131 459 453  80 555 427 612   4  55 446 190 121 370 499 475 621  86 489 186  35 515 165 425 226 200

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00498e+07us (= 10049.8ms, 10.0498s)
Satisfaction error: 4
Number of search iterations: 3765
Number of local moves: 3063 (including on plateau: 3015)
Number of local minimum: 40 (including on plateau: 364)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 625 222 30 180 214 543 495 2 72 128 99 234 182 197 558 50 103 470 258 547 269 451 601 594 617 => the sum is 7741 rather than 7825
Problem in row 17: 393 408 188 1 32 79 578 263 3 603 409 483 599 220 441 68 288 532 557 136 559 496 551 33 272 => the sum is 8192 rather than 7825
Problem in row 22: 223 264 92 550 173 232 49 386 162 184 414 624 481 48 236 261 562 212 389 134 464 270 364 596 172 => the sum is 7542 rather than 7825
Problem in diagonal 0: 625 51 513 376 150 383 253 440 472 67 384 325 311 413 292 519 288 296 13 447 113 270 88 280 200 => the sum is 7569 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 175 565 544 359  24 237  14 567 345 578  18 293 203 206 112 473 191 106 478  62 553 396 218 512 596
 485 287 441 316 105 500 427 392 278 552 101 580 107 477  13  85 240 592 108 525 444 111 205 238 216
 449  68 122 307  64 268 530 208 362 472 526 361 243  92 126 455 353 304 363 173 463 213 504 410 257
  59 400 327 534  31 347 490 541 146 115 483 515 536 371 226 167 531  45 389 519 366 204 283  30 170
 196 451 286 266 426  91  56 511 118 622 601 409 341 434 155  57 481 210 457 219  75 223 476 513 151
 224  58 621 503 615 121 321 282  80  36 623  20 303 556 201 272  39 555 310 487  17 253 579 352 397
 344  88 435  53 270 501 561 102 199  43 230 416  37 479 453 445 133 494 440 384  65 280 594 284 495
 548 171 373 606 424 460 297  73 437 338 305 274 554  77 215 187 598 429 589 140 517   4 380 318 563
 568 142   3  44 462 179  55 211 417 269 387 443 430 566 610 110 414 159 180 562 574 296  82 616  46
 502 403 273 521 527 507 356 454   8 147 132 486 124  38 385 372 398 261 369 381  23  86 420 214 438
  71 379 558 620 156  69 157  79 333 234  74 415 465 202 367 154 581 413 411  40 130 378 547 432 560
 221 602 587 575 271 320  63 109 605 348  50  11  48 332 528 158 168 302 294 262 209 510 431 382 439
 328 301 488 119 177 576 406 263 506  22 586 162 342 324 326 276 461 123 195 292 331 330 188 166 537
 174   2 228 497 172 419 323 386 375 365 571  54 346  26 582  16  29  61  89 227 550 450 329 194 376
 540 325  35 452 570 456 422 198 309 529 128 212 466 468 572 505  51 474 317 585 181 559 193   5 351
 405 614 197 256 499 291 275 368 508 260  47 281 258  42 421 164 337 538 251 315 470 355 241 183 249
 360 239 250 231 590 539 229 200 125 236 267 129 186 545 509 192 549 393 225  96 176 551 464 190 354
  41 374 259 248 394 350 619 364 617  60 343 467 597 407  19 300  70 245 522 618 391  49 165 299   7
 625  52 395 247 135 388 161 496 322 319 471 335 608 246  83 583 141 189 289 418 217 609 339  81  76
 312  33 144 145 564  99 535 185 604 399 104 116 401 152 482 591 163 498 612 433 516 244 114 252 127
  21 624  98 182 306 370  97 134 448 489 308  95 178 233 290 442 491 520 148 220 377 408  94   6 232
 458 298 349 383 313 492 584 390 264  66 493 153 459 150  32 358 137  27 573  28 169 425 533 484 207
 404 254 475  87  78 117 242 599 255 603   9 557 514 334 340 542 288 149 131 143 279 120 336 546 423
 222 577  72 184 295  15 469 402  25 446 532 428  12 588 235 314 569 600   1 593 447 160  10 595  34
  93 518 265  90 357 113 136 311 139 277 436 613  67 480 543 607 412 138  84 103 285 611 100 523 524

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00509e+07us (= 10050.9ms, 10.0509s)
Satisfaction error: 5
Number of search iterations: 3857
Number of local moves: 3192 (including on plateau: 3146)
Number of local minimum: 18 (including on plateau: 406)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 449 68 122 307 64 268 530 208 362 472 526 361 243 92 126 455 353 304 363 173 463 213 504 410 257 => the sum is 7693 rather than 7825
Problem in row 8: 548 171 373 606 424 460 297 73 437 338 305 274 554 77 215 187 598 429 589 140 517 4 380 318 563 => the sum is 8877 rather than 7825
Problem in row 14: 174 2 228 497 172 419 323 386 375 365 571 54 346 26 582 16 29 61 89 227 550 450 329 194 376 => the sum is 6841 rather than 7825
Problem in row 15: 540 325 35 452 570 456 422 198 309 529 128 212 466 468 572 505 51 474 317 585 181 559 193 5 351 => the sum is 8903 rather than 7825
Problem in row 21: 21 624 98 182 306 370 97 134 448 489 308 95 178 233 290 442 491 520 148 220 377 408 94 6 232 => the sum is 6811 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 575 233  30  13 127 413 447 574 398  53 237 207  95 175 120 602 606 559 544 232 572 158  16 242 597
 106 411 623 295  60 292 422 502 334   6 204 425   3 134 142 531 170 211 279 492 565  88 563 539 428
 113  74 265  34  92 182 479 509 553 590 577 231 560  46 475 482 480 125 435  52 201 455  54 558 203
 185  85 128 487 362  63 481 229 464 283  94  32 584 613 274 143 528  87 391 607 541 537  28 246 353
 318 169 196 622 408  37  76 399 192 457 617  59 290 351 524  29 264 373 495 470 105 500 415 439  20
 359 374 511 352 444 122  11 116 190 145 284 151 458  38 462 186 568 463  75 183 315 491 499 542 486
 598   1 268 172 587 338 254 503 152 298  22 545 227 397 138 550 302 144 445 310  17 404 498 370 285
 438  93 245 561 551 267 236 107 573 554  41 474 160 526 450  81 210 465 251 442  70 345 477 129  79
 376 610 449 594 257 164 600 166 159 179 296 140 552 187  49 466 401 293  47 432  26 496 221 515 150
 272 616 514 235 202  19 419 467 215 276 483 382 409  61 195 405  15 518  43 360 513 459 346 189 212
 155 434 363 121  40  44 576 599 163 379 357 375 124 176 371 395 437 344 608 342 311   8 402 230 471
 162 557 403  83 347 426 366 209 331 349 249 355 319 337 324 356 336 378 146 148 312 316 200 309 507
 369 308 286 325 314 329 226 323 313 322 320 281 381 326 339 299 277 368 321 258 304 306 297 300 333
 112 118 223 301 549 556 327 452 538 473  86 282 612 259 234 317 123 174 417 535 546 243  58 137 153
 109 562  68 505 390 534 273 278  98  56 271 217 383 253 520 427 582 485 256 340  21   4 532 423 238
   9 430 255 412 252 581 141 205 328 248 461 219 448 589 527 261 441 530 167 181 168 108 583 239  42
 388 303  77 222 625 421  39 178 198 571 536 501  57 451 377 396  55 263 570  73 250 270 468 410 126
 488 624 454 443 115 220 533  51 543 387 414 161 247 262 102  50 418 208 512 478 305 156  24 154 476
 604 621 601 354 529 180  80 111 429 389 392 593  97 364 218 578  96  72  36  71 341 588  27  89 365
 460 199 241 110   2 540 521 564 131 103 330 569 291 494 101 289  99 614 177 266 133 130 343 595 523
  90 228 394 592 171 197  82  14 361 307 424   7 522 431 407 548 194 420 367  12 566 332 135 516 508
 358 384 149 165 469 517 335 100  84  91 596 609 206 580 275 139  18  48 348 493 615 350 453 433  10
 510 213 489 611 260 591 620 519 393 497  33 104 380 269  31 117 400  35 147  78 184 240 456  62 586
 225  64 157 191 188 386  65  45 618 619 214 490 288 440 567   5 525  69 504 385 472 547 506 136 119
 446 114 436  25 484 406 216 605  67 193 287 416 132  66 603 173 280 579 244 585 372 294 224  23 555

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.42973e+06us (= 8429.73ms, 8.42973s)
Wall-clock time (full program): 8.47888e+06us (= 8478.88ms, 8.47888s)
Satisfaction error: 0
Number of search iterations: 3184
Number of local moves: 2666 (including on plateau: 2616)
Number of local minimum: 21 (including on plateau: 297)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  17 583 612 377 558 210  56 530 147 244 459 334 617  80 230 517 241 231 521 515  48   8 534  68  88
 613   2  52  14 472 379 513 518 290 519 382 399 235 163 540  16  10  31 620 570 573 165  61 441 247
 155 557 409 453 407 387 122 156 221 403 141 614 516 104  73 425 535  20 451 185  91 470 507  69 354
 584 528 394 152 118 493  79 501 348  51 108 220 123 266 572 368 574 234 137 537 200 491 483 116 148
 567 498 121 550 490 606 208 426 602 559  21 431 190   1 406  45 401 161  93   9 150 479  35 548 228
 473 365  11 308  47 120 289 587 582 237 596  63 126 207 581 417 193 270  78 280 471 482 263 527 252
 227 224 619 541 381 195 110  92 414 475 258 158 345 579 311 591  65 496 253  89 390  55 186  53  12
 576 503 129 171 194 463 549 153  96 594 604 492 454  81  29  60  86 115 128 203 283 553 597 420 292
 446 240 106 309 222 249 556 486 197 174 262 419  15 499 569 341  85 411 600 461 177 319 166 277 239
  50 437 544  57 109 363 415  95 178 477 531  82 204 590 562 511 560 350 213 392  22 217 114 229 523
 145  33 512 259   5 466 592  72 447 127 500 622 449 198  76  18 589 609 248 119 456 201 264 395 423
 502 376 427 102 616 130 561 160 312 172  19 196 352 478 257 536 223 575 398  25  41 440 563 281  83
 304 300 243 236 330 383 302 333 335 301 307 305 474 326 296 288 260 332 317 291 274 306 318 344 320
 295 338 256 618 328 455 175 214 113 408  27 284 226 322 444 303 384 543   7 349 346 366 421 282 321
  75  84 360 495 355 273 545 369  64 343 568  46  36 413 140 188 169 489 422 212 404 170 374 396 310
 400 443  74 370 533 111 410 323 167 418 342 608 405  49  23 353 436 146 487 367 526 242   3 154 435
 347 593 391 481 151 539  32 327 547  26  42 100 103 510  62 268 179 428 205 351 599 457 505 246 336
  40  37 388 340 261 164 278 429  24 393 462  28 524 467 552 460 238 433 134 412 135 250 476 378 522
  59 275 157 133  13 442 450 299 316  38 588 255 272 586 313 607 434 331 176 189 233 386 432 468 373
 484  94 551 162 232   6 329 358 508 182  58 506 520 529 298 136 494 267 191 480 372 601  99  44 324
 430 131 464 356 385  70 375 143 439 509 168 279 287 265 132 251 117 105 138 554 555 371 359 603 339
 184 173 337 254 448  34 271  30 595 199 276 269 314 424 623  90 325 124 542 585 621 538 187 180 202
 219 216  77 416 566 611 209  54  43 525 578 469  97 192 225 598 610 571 615 485 488 112 183 445 452
 532 357  87 465 497 361 181 546 625  71 139  66 577 211 149 144 458 514 286  67 125   4 402 564 397
 101 438 504 206 107 315 218 624 215 380 389 580 364 285 362 294 159  39 565  98 245 142 293 297 605

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00488e+07us (= 10048.8ms, 10.0488s)
Satisfaction error: 3
Number of search iterations: 3837
Number of local moves: 3176 (including on plateau: 3129)
Number of local minimum: 30 (including on plateau: 394)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 227 224 619 541 381 195 110 92 414 475 258 158 345 579 311 591 65 496 253 89 390 55 186 53 12 => the sum is 7119 rather than 7825
Problem in row 15: 75 84 360 495 355 273 545 369 64 343 568 46 36 413 140 188 169 489 422 212 404 170 374 396 310 => the sum is 7300 rather than 7825
Problem in row 23: 219 216 77 416 566 611 209 54 43 525 578 469 97 192 225 598 610 571 615 485 488 112 183 445 452 => the sum is 9056 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 117 251 588 119 329 111 327 360 372 608  24 505 113 225 107 436 371 336 301 464 210 554 486 481  30
 600 556 530 310 582 587 163  32  25 143 509  15 602 108 214 318 571 438  38 353 397 290  91  95 258
 253 209  17 490 401  28 604 351 425 152 586 478 453 406 551 120 228 204 236 270 101 500 128  60 574
 414 521 190 141 515 618  49 365 482 495  61 342 261 560 242  23  11 483 519  87 494  55 311 121 465
 103 175 599 337 177 202 157 250 248 621 127 114 516 563 611  44 148 382 104 387 168 476 274 485 557
 207 364 455 211 508  85 223 230 115 579  70 456  81 389 194  97  21 572 570 126 413   7 548 271  22
  37 346 545 213 428 403 264 514 439 160 257 384 320 479 164 577  74 435 166 392 217 192 282 332 205
 135 146 534 380  93 474 612 212 445  41 280 394 286  40 321 145 517 181  78 487 619 467 543  67 328
 531  84   4 262 172 116 238 277 189 573 396 430 151 179 398 440 529 525 416 566 550 356 138 110 195
 303  54 319 357 215 267 379 335 370 348 520 312 300 252 592 284 299 293 156 134 376 191 473 269 427
 410 491 412 244  73 243 523 304 443 512 187  42 147 524 200 496 331 132  31 578 256  13 188 429 616
 124 433 165 216 452 475 307 323 540 409 383 170  26 352 484 362 296 298 344 334  33 444 183 596  76
 624 622 411 309 322 388 218 555 224   8 603 305 375 219 112 562 567 137   9 227 381  72  36 131 408
 316 350 279 367 325 291 231 359 240 201 395 399 278 232 265 454 407 363  71 368 461 314 306 184 369
 449 537 463 448 153 617  52 144 532   2 159 415 125 400 361  62 423 330 610  80 129 283 105 607 339
 373 254 615 593 292 527 595 539 142 193 614  35 272 167 106 493  51 249  18 237  12 458 315 468  69
 355 122 294 533 584 313 606 522 623  56  34 220 609 281 308  58 385  45 255 437 538  27   6 594  20
 263 245  63 246  68 130 499 317 434 507 289 518  94 542 536 180 266 182 503  77 576 544 511 176  59
 297 447 402  19  43 196 457 472 226 347 477 405  99 241 288 171 136 469 526 326 404 390 139 268 580
 102   5  88 597 424 480 150 561  46 276 591 422 460  57 421 470 569 247 568 541 118 553 498 386 546
 378 377  64 431 565 620 287  82  39 233 295 169 419 149 497 501 234  96 575  90 198 123 504 162 535
 109 285 133 466 432 229  79 197  10 302 391 221 589  86 459 158 345 420 528 471 450 625 349  29 462
 451 488 502 178  83  65 259  66 358 199  48  75 489 549 341 442 418 155 446 174 140 590 559 564 186
 273 374 100 173 235 154 222 366 598 275  16 441 208 333  50 426  47 510 417 605 583  98 613 547 161
 601  89  53 185 354 206 324  92 260 585 513 558 552 492   3 506 581 343 340  14   1 203 239 393 338

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00485e+07us (= 10048.5ms, 10.0485s)
Satisfaction error: 4
Number of search iterations: 3654
Number of local moves: 3040 (including on plateau: 2994)
Number of local minimum: 20 (including on plateau: 349)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 207 364 455 211 508 85 223 230 115 579 70 456 81 389 194 97 21 572 570 126 413 7 548 271 22 => the sum is 6814 rather than 7825
Problem in row 16: 373 254 615 593 292 527 595 539 142 193 614 35 272 167 106 493 51 249 18 237 12 458 315 468 69 => the sum is 7687 rather than 7825
Problem in row 20: 102 5 88 597 424 480 150 561 46 276 591 422 460 57 421 470 569 247 568 541 118 553 498 386 546 => the sum is 9176 rather than 7825
Problem in row 21: 378 377 64 431 565 620 287 82 39 233 295 169 419 149 497 501 234 96 575 90 198 123 504 162 535 => the sum is 7623 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 116 139 168 161 275 391  68 355 579 246 297 251 179 600 257 434 324 590 411 186 385 171 623  12 607
   9 548 593 417  95  98 616 561 591 342 233 108 159 197 540 199 238 170 354 121  64 466 505 573 496
 542  69  33 578 460 216 149  47 547 286 463 420 577 274 506 476 101 163 279 348  94 563  74 115 445
 331 215 256 465 481  61 191 501  44 119 180 483  38 340 618 305  48 413 541 359 291 497 128 333 587
 427 183 443 200 511 546 350 169 296 375 327 258 447  51  32 140 523 153 606 521 480 152 363  60 212
 270 611 244 518   7 437 173 222 188 320  71 206 525 508 252 517 134 397 219 478  87 392 556 133 360
 178 503 472 415 202  63 595  89 343 217  80 227 292 277 351 553  65  99 461  11 388 605 435 558 346
 313 571 398 491 220 356  58 439  16  31 513 583 267 120 565 361 552 418 498 192   3 193  35 482 150
 210 589  17 241 406 400 588 105 386 522 205 201 125 414 100 260 403 530 423 594 376 490  77 114  49
 454  53 141 236 596 229 154 405 370 315 138 339 534 336  27 352 266 487 410  83 544 181 615 383 177
 448  46 620 300 118 619 488 500  92 112 381  88  42 317 368 576 240 234 365  40 520 272  72 526 441
 172 285 470  36 455 535  86 404 290 122 124 328 614 314 341 250 473 280 539 367 493  41 104 424 278
 452 564 608 378   5 334 318 282 281 287 353 301 306 419 332 299 330 323 303 294 264 311 102 288  91
 263 357 377 479 384 347 560 599 549 372  59  50  29 431 569 442   4 458 224 232 231  81 371 209 148
 308 182 221 581 249 499 243 247 335  18 568 109 307 284 468 621  76 395 157 446 402 198 126 242 543
  55 151  73  93 369 467 194 259 265 253 394 527 407 174 408 132 409 601   6 436 113 457 326 293 495
 421 426  96 322  84 580 516 211 261  79 364 131 451 519 129 533 175 494 276 135  39  13 532 609 429
 469 456  52  15 538  20 310 156 416 536 449 492 162 269 218 289 509 214  57 602 459 337 230 412 158
 512 130 165 358 176 237 195 477 555 484  21 584 196 524 184  43 613  28 147 396 574 393 329  54 450
  10  26 475 338 575 203 557 428 471 604 127 422 382 137 155  75 143 298 625 106 453 489 164 213 349
 515 207 572  37 235 136 425 531  23 550 592 390 254 374 545 268 166 187  85 387 145 510 123 273 295
 624 190 551  24 617 570   1  90 304 438 622 585  62  30  78 144 399 283 107 389 603  67 514 344 189
 597 559 302 444  66 160 248 111 103  97 485 362 562 245 262  70 612  22 504 528 226  34 610 474 142
 110 228 255 325 271 117 433 321 312 502 554 366 507 185 464 167 440   2 146 529  25 345 379 462 380
  19 537 223 373 430 204 309 316 208 598 225  14 401 486  56 319 582 586  82  45 566 567 432 239   8

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00487e+07us (= 10048.7ms, 10.0487s)
Satisfaction error: 2
Number of search iterations: 3521
Number of local moves: 2951 (including on plateau: 2902)
Number of local minimum: 31 (including on plateau: 338)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 9 548 593 417 95 98 616 561 591 342 233 108 159 197 540 199 238 170 354 121 64 466 505 573 496 => the sum is 8293 rather than 7825
Problem in row 16: 55 151 73 93 369 467 194 259 265 253 394 527 407 174 408 132 409 601 6 436 113 457 326 293 495 => the sum is 7357 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 256   9 132 154 555 201 261  87 482 292 501 464 126 580 421 233  71 194 477 518 476 449  20 258 608
 311  98 277 306 211 524 443 229 453 390 223  90 372 297 614 209 170 202 161 295 163 120 603 491 573
 438 423 354 458 125  76 204 231 302 189 469 529 248 356 322 198 237 134 434 291 435 357 622 389  57
 470 245 601  27  34 110 544 586 506 530 197 213 255 366 172 377 604 104 317  85 548 617   7 278  32
 148 348  36 499 374 447 410 522  21 371 224  28 107 468 462 479 280 441  91 176 420 460 313 235 465
 242 152 566 466 361  84 206 403 537 542 487  45 243 538 494 164 319 247  75  68  46 336 427 378 399
  11 408 480 517 342  30 168 314 305 396 142  22 511 239 337 315 481 217 610 369  39 222 385 605 360
  95 174 325  25  35 262 301 178 600  53 405 583 187 167 570 364 526 510 575 226 327 221 388 113 615
 376 525 299 552 232 358 512 129  80 345 179 514  64 609 105 347 143 625 531 553 177 108  52 122 288
 407  51 182  93 286 272  86 331 363 493 400 606 367  42 402 341 186 312 353 545 437 269 483 415 103
 234 611 594 333 157 563  12 568 116 587  47 365 304 137 284 368 326 271  13 613 320  40 474  37 451
 413 260  10 241 207 619 540 184 534   4 541 138 571 293 404 290 253  26 597 181 551 282 215  38 433
  49 411 196 439 572 212   2  61 504 351 375 112 497 459 310 264  56 565 281 119 380 564 424  41 581
 156 473 127 266 214 332 577 250 422  82 379 324 257 559 591 185 624  18   3 569 520 265 133 381 118
 467 612 456 225 515 401 370 567 139 159 192 123 285 109 218 535 349  14  23  99 584 416 289 200 425
 294 220 173 588 430 131 457 328 263 307 454 521 509 412 117  19 228 472  50  78 141 350 623 267 393
 593  89 414 448 579 475  97 308 147  33 429 190 283 100 155 238 359 203 445 334 498 527 346 519  16
 484 549 392 398 136  69 589 339 318 335   1 300 536 419 205  83 556 574 490 175 227  73  15 352 210
 431 183 236  92 296 432 513  70 532 165  44 495 489  88 140 539 150 598 471 244 478 444 193 496   6
 546 463 599 259 547 114 151  59 160  63   8 276  77 621 146 446 492 503  65 395  62 620 500 508 145
 219 316 582 550  94 533 106 344  66 560 488 578  43  79  72 523 338 340 188 461 355 246 321 252 171
 418 543 251  81 102 590 406 616 101 249 442 373  67  31 596 502 309 426 602 362  17 169  55 387 130
 516 450  96 485 409 298 343 153 329 270 562 180 452 199 149 592  74 287 585 128  24 386 121 230 507
 191  54 323 115 618 557 254 528 383 505  29 561 417 275 111  48 303 274  58 455 216 279 240 436 595
  60 158 124 208 394 135 273 440 162 554 607 195 558 382 428 166 391 268 330 486 384   5 576 397 144

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00496e+07us (= 10049.6ms, 10.0496s)
Satisfaction error: 3
Number of search iterations: 4490
Number of local moves: 3583 (including on plateau: 3536)
Number of local minimum: 48 (including on plateau: 412)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 438 423 354 458 125 76 204 231 302 189 469 529 248 356 322 198 237 134 434 291 435 357 622 389 57 => the sum is 7878 rather than 7825
Problem in row 15: 467 612 456 225 515 401 370 567 139 159 192 123 285 109 218 535 349 14 23 99 584 416 289 200 425 => the sum is 7772 rather than 7825
Problem in diagonal 0: 256 98 354 27 374 84 168 178 80 493 47 138 497 559 218 19 359 574 471 395 355 169 121 436 144 => the sum is 6614 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 116  85 241 590  76 215 452 203 550 470  12 229  43 560  75 135 571 132 471 410 557 556 124 360 592
 106 537 131 141 473  25 145  30 405 446 578 515 201 278 497 481  47 546  17 101 600 500 258 575 192
 149 393 188 563 342 552 125 285  31  64 170 464 581  27  79 346 334 608 292 445 143 337 538 558 211
 599 147 501  18 242 113 186 542 352 518 391 498 478  94 136 120 611 183  66  41 433 527 530 441  58
 218 269 221 447 619  34 261 137 422 426 463 525  62  48 430 443 196 226 166 589 517 364 157  23 562
 566 122 375 620  92  68  78 506  91 488 260 388 114 274 171 554 535 117 423 475 415   4 418 509 162
 431  55 307  56 325 429 343 323 529 400 206  70 252 356 233 329 150 112 472 295 234  57 601  81 511
 394 121  42 507 311  14 276 152 309 570 414 160 621 103  15 255 595 420 521 280 458 351 401 245 290
 263 624  97 268 539 434   7 453 533 377 138  60 384 397 413  90 209  33 531 524 193 205 244 437 372
 469 569 404 564 262 293 332  65 217 508 449 574   3 303 362 380  74 267 305   2  72 179 382 491 299
 528 522 622 513 450 328  37 409 249 195  95  96 510 536 385 480   1  87 616 335 247  40   5 312 227
 373 358 357 354  11 154 340 587 482 214 324 128 367 381 331 493  20 300 297 349 316 310 336 282 361
 304 350 213 272 583 330 559  69 341 313 347 286 378 489 284 175 308 625 220 614 239 100 298 344 419
 502 483 185 238 294  93 318 288 348 155 485 271 199 240 275  36 618 322 582 406 144 237 407 540 159
 432 333 251 153 257 512 549 243 440   6 222 421 425 174 615 553 190 306 259 273 225 165 565 210  46
 126 111 399 176 476 597 523 606 115 266 617 301 402 207 496  83 468  59  51 167 370 254 474  53 428
 427 454 198 250 127 544 202 576 231 156 585 212 366 603 223   8 568  28 448  38 168 602  88 146 577
 302 455 411 246 386 390 504 163 181 339 230 270 492 169 140 319 314 612 148 442 173 291 180 607  61
 110 235 555 139 197 623 216 541 321 219  21 353 543  10 477 376 479 460  50 287 604 439  29  22 519
 532 499 424 281 396 164 279 338 490 119  19 609   9 580  16 584  82 593 392 277  24 387  26 191 514
 264 107 444 408 118 182  73 389  39 327 484 461 187 383 371 228 320 505 363 142 545 438 494 184 369
 289 345 534 102  52 598 451 177 436 189 134 586 172 161 567 123 526 459 317 129 457 315  89 466 151
  35 395  71 379 594 465 613 104 417 359 548  44 579 456  99 610  63  77 108 133  32 486 398 326 467
 236  98  49 495 403 412 591 374  13 105 130 224 204 435 547 416 368 232 248 551  86 572 487 355 194
  54 158 605  45 200 256 365 265 283 596 503  80 253 561 588 208 178 516 462 520 573 109 296  67  84

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00512e+07us (= 10051.2ms, 10.0512s)
Satisfaction error: 3
Number of search iterations: 3806
Number of local moves: 3156 (including on plateau: 3108)
Number of local minimum: 27 (including on plateau: 357)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 431 55 307 56 325 429 343 323 529 400 206 70 252 356 233 329 150 112 472 295 234 57 601 81 511 => the sum is 7157 rather than 7825
Problem in row 13: 304 350 213 272 583 330 559 69 341 313 347 286 378 489 284 175 308 625 220 614 239 100 298 344 419 => the sum is 8460 rather than 7825
Problem in row 23: 35 395 71 379 594 465 613 104 417 359 548 44 579 456 99 610 63 77 108 133 32 486 398 326 467 => the sum is 7858 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 171 492   7  50 260 436 589 335 157 591 562 167 279 393 468 571  85 264 444 173 452 253 428 131  67
  82 114 358 433  92 517 321 498 409 611 143 214 478 370 120 421 285  58 265 414 109 139 603 586 185
 352 541 564  11 451 485 386   3 293 142 375 371 235 160  22 363 257 423 313 435 512 459  26  62 584
 407 521 486 430 316  86 110 310 326 457  56 509 147  57 203 212  55 480 229 577 151 228 610 158 549
 453  36  47 274 353 362 269 624  14 439 195 382 417 341 347  21 152 126 605 619 595 516 154 450  34
 560 231 558 175 515  99 441 429 282 268 449 565  42 155 399 490  89 176 599 140 368  17  91 233 454
 594 388 539 501 136 170 206  27 579  81 304  25 464 557 582 190 372 437 182  66 373 570 153 164 165
  30 312   1 415 551 340 320 476 308  69 506  74 248 168 287 469 615 125  38 496 132 332 597 402 514
 162 150  61 116 216 495  80 460 447 519 540 621 354 305  65 537 107 426 144 295 397  49 324 612 343
 220 240 389 461 314 230 484 592 418 425 359 356 574 545  41 487 225 172 113 379 188 327 532 392 585
 159  15 466 555 357  87 552 508 319 200 189 106 620 543 289 593 523 526  37 290 294 148   2 211 236
 222   5 302 239  97 232 275 192 223  70 403  90 111 533 518 124 566 488 411 578 503 396 477 237 385
 336 263 251 243 278 311 261 427 342 277 303 364 307 283 446 297 207 333 226 288 361 410 367 298 346
 405 406 438 246 299 238 291 163 434 331 276 329 339  20 556 318 424 296 412 101 300 256 443 286 218
 419 625 103 623 432 398 217 306  53 380 334  96 474 208 365   4 369 180 463  88 202 205 391 482 408
 529  24 271  16 177 491 445 108 536  71 520 497 420 568  44 198 550 528 360 197  75 416 284 383 117
  52  40 193  63 387 121 581 535 507 325   6  60 115 266 462 181 381  18 559 234   9  95 505 608 602
 130  64 345 404  77 249 118 178 221 511 569 456 573 553 467  76 567 600 213 475 401 227  68 138 145
 349 583 479  59 572 384 531   8 242 616 542 196 129 252 201 494 209 618  13  98  12 351 262  35 590
 504 601 587 244 440 522 442 215 394  83  33 513  32 187 245 378 259 179 301 448 344  48 465 267  94
 104 309 224 337 538  39 374 272 598 622  79 547 134 166 524 273  10 481 575 250 133 471  84 576 105
 422 500 510 330 247 355 183  54  45 255 119 604 455 184  43 489 377 191 431 470 617 534 292  72  46
 350 544  51 580 596 499 102 174 315 186 156  23 525 328 502 127 128 141  29 137 609 561  78 530 554
 614 563 112 548  93 606  28 473 122 135 527 338 204 270 281  19 400 390 317 323 588 210 395 146 123
 199 258 483 472  31  73 219 458 241 161 280 322 149 413 348 493 613 169 546 254 100 607 194 366 376

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00391e+07us (= 10039.1ms, 10.0391s)
Satisfaction error: 5
Number of search iterations: 3989
Number of local moves: 3362 (including on plateau: 3316)
Number of local minimum: 28 (including on plateau: 365)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 407 521 486 430 316 86 110 310 326 457 56 509 147 57 203 212 55 480 229 577 151 228 610 158 549 => the sum is 7670 rather than 7825
Problem in row 10: 220 240 389 461 314 230 484 592 418 425 359 356 574 545 41 487 225 172 113 379 188 327 532 392 585 => the sum is 9048 rather than 7825
Problem in row 12: 222 5 302 239 97 232 275 192 223 70 403 90 111 533 518 124 566 488 411 578 503 396 477 237 385 => the sum is 7677 rather than 7825
Problem in row 17: 52 40 193 63 387 121 581 535 507 325 6 60 115 266 462 181 381 18 559 234 9 95 505 608 602 => the sum is 6905 rather than 7825
Problem in diagonal 0: 171 114 564 430 353 99 206 476 447 425 189 90 307 20 365 198 381 600 13 448 133 534 78 146 376 => the sum is 7163 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 623 233 290 620 429 496 354 206 192 278  16  31 362 588 171 355 227 218 105  81 365 175 244 558 608
  18 275  72 335 315 329 267 465 110 287 581 491 269 426 241 390 517   9 277 482 507  54 197 607 304
 282 119 559 107 185 368 124 375 170 447  91 578 443 157 397 540 605 323 506 114  11 116 563 111 534
 103 600 625 371  83 347 342 132 302 455 433  17 243 545  98 307 550  75 184 260 401 580 135 528 109
 472 133 138 512 555 591 223 250 431  15 497 450 102 318  99  42 331 527 424  24 468 168 415 566  74
 309 295 273 199 406 416  88 414 266 618 405 488 502  94  85 161 589  96   5 473 216 519 372 314 222
 444 140 533  46  37  48 464 560 463 153 150 179 538 215 565 526 225 328 187 298 598 399 327  63 339
 530 389 261 205 211 209 149 367 492 155 552 364  43 332 475 237 562 441 340 177 383  21 319 317 294
  41 462 232 117 196 221 602 402 163 343 539 610 357 495 423 249 201 427 195 586 134 594 143 436  92
 234 151 439 476 123 228 518 542 326 434 380 400 214 268 525 391  45 200 253 238 108 579  36 361 356
 570 561  86 489 419  22   6   7 144 547 387 263 393 385 291  89 139 106 498 240 247  44 619 254 584
 310 236 306 457 272  84 571  30 493 121 440 341 142 370  19 359 336 379  87 422 604 511 428  40 467
 451 395 338 373 411  38  25  82 532 279 613 593 212 286  29 514 129 418 567  47 388  13  80 490 522
 182 432 299 386 320 557 544 510 448 220  64 258 188 112 202   2 297 392 167 412 469 442 417 231 274
 265 127 104 569 617 325 421  76  77 592   8 160 596  28 474  69   1 403 582 458 321 546 183 454 369
 186 452 413 122 239 292 162 612 574 229 178 235  67 453 353 208 513 147 535 130 230 420 169 425 481
 191 312 459 255 351  71 446 500 293 477 284 551 136 245 590 337 350  61  57 137   3 556 285 358 520
 251 146 541 288 505 499 394 118 113  39 264 181 479  60 176 573 408 575 164 521 471  93  35 494 437
 333 583  65 174 576 141 257 363 577 210 344  53 349 543 531 430 172  56 486 508 213 313 515  23  10
 504  51 478 595 456 509 621 126 374  90  66  68 435 615 131  52  33 597 483 115  58 460 553 166 189
 256 624 601 276 548 377 165 316 252 219 207 384 203 409 262 564   4 396 270 410  79 296 529 158  20
 271 404 101  32  59 622 381 280 159 198 461 352  26 100 470 487 501 466 523 606 154  78 587 281 226
 382 346  97 554 128 536  62 330 246 485 204  95 611 242 614 311 300 224 173 438 324 348 120 248 407
 603  70 322 194 259  50 305 190 616 366 145 503 537 484 301 480 445 376 148  49 549 283 156  34 360
  14 289 193  73 125 449 334 572  12 568 516 180 378  55 303 152 345 585 609 599 524 217 398 308  27

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00497e+07us (= 10049.7ms, 10.0497s)
Satisfaction error: 2
Number of search iterations: 5000
Number of local moves: 3826 (including on plateau: 3777)
Number of local minimum: 71 (including on plateau: 503)
Number of resets: 0
Number of restarts: 0

Problem in row 9: 41 462 232 117 196 221 602 402 163 343 539 610 357 495 423 249 201 427 195 586 134 594 143 436 92 => the sum is 8260 rather than 7825
Problem in row 11: 570 561 86 489 419 22 6 7 144 547 387 263 393 385 291 89 139 106 498 240 247 44 619 254 584 => the sum is 7390 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625 107 402 497  66 305 432 552  61 350  86 166 493 193 140  44 378 101 154 214 520 255 609 223 604
  89 597  98 386   3 225 131 532 165 163 424 228 576 519 118 397 451 415  15 276 363 582  62 574 436
 132 430 578 126  58 263 406 204 144 159 195  37 327 504 559 238  47 551 566 253 573 407 553 278 237
  83 289 200 550 593   7 337 272 514 301 226 596 156  67  65 479 277  50 160  90 448 528 615 587 335
 537  84   9 389 525 220 523  14 303 586 445  78 244 175 398  23 565 361  80 365 500 464 282 147 508
  72 490 509 571 137 475 114 527 240 494  21 224  96 487 483 108 492  54 469  32  30 501 488 481 230
 600  45 248  24 366  29 468 452 546 145 613 399   2 533 189 502  46  33 459 542 121  11 455 564 433
 112 541 460 516 465 422  38 217 141  28 484 453  95 447 153 544 360  69 417 461 236  13 435 261 457
 431 622 207 143 572 188 617 491 429  10 161 181 594  70 103 130 411 187 562  17 570 247 368 102 412
 423 367 241 124 344 384 515  82 443 405 374 221 599 148 380 428  31 517  22   8 379 387 567 400  36
  99 346 280 208 478  59 258 535  41 470 401 396 173 212 382 605 548 158 512 260   1 476 403 518   6
 331 312 319 339 342 338 375 370 316 323  71 306 332 385 364 302 293  55 340 326 330 352 341 308 355
 318 333 351 297 315 343 336 304 334 285 286 345 287 317 311 299 252 354 283 313 321 309 275 329 328
 268  68 356 441 568 467  39 349 588 266  91 486 359 320  35 462 184  73  97 416 446 292 215 413 526
 254 561 558 174 273 616  77 409 394 185 242 404 151 383 229 271 592 296 192 100 538 129  43 164 590
 269 425  52 623 434 560 585 294 438 259  87 211 392 373 116 197 176 196 608 348 270 205 250 347 110
 598 556 624 232 381  81  12 449 167  48 507 524 190 391 591 182 222 534 362 531 105  49 408  56  25
 194 471 300 257 146 233 284 213 489 580 395 210 157 583 218 170 291 414 473 466  88 377 177  60 579
 251 169 477 450 243 619 142 136 113 563 549 506 589 227 463 155 139 569 135 410 418 123 162 125  92
 510 202 388  34 120 149 369 109 288 545 614  40 495  26 421 440 602 555 245 106 325 577 138 529 246
 547 152  76  63  74 279 183 134 307  75 458 595 235 575 180 540 115 511 480 607 119 324 117 522 557
 111 219 498 104 310 267 539 503 620 618  19 444  93 231 543 239 122 603 206 322 474  57 179 419  85
 496 172 439 295 264 610 281 186  16 442 472  20 426   5 485 290 456 390 482 437 256 249  94 209 353
 201  64  27 606 621 372 393 133 530   4 150 171 499  42 298 581 513 168 427 505 178 554 536  18 234
 274 203 128 376 127 314 371 358 198 521 454 584 265 612 601 199 262 611  79 420 216 357  53 191  51

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00486e+07us (= 10048.6ms, 10.0486s)
Satisfaction error: 2
Number of search iterations: 4608
Number of local moves: 3742 (including on plateau: 3693)
Number of local minimum: 46 (including on plateau: 451)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 625 107 402 497 66 305 432 552 61 350 86 166 493 193 140 44 378 101 154 214 520 255 609 223 604 => the sum is 7577 rather than 7825
Problem in row 20: 510 202 388 34 120 149 369 109 288 545 614 40 495 26 421 440 602 555 245 106 325 577 138 529 246 => the sum is 8073 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 105 386 170 566 414 431 120 469 242 263 227 465 447 333 593 354 119 533 214 445 548  41 162  88  90
 491  94 456 577 177 146   2 383 264 446  78 198 429  96 232 534 494 226 298 199 390 558 449 361 247
 524 563 103  84 183  44 537  63 213 418 517 307 594 569  53 592 205 399  60 591 106 147 238 601 114
  93 337 319 611 176 160 338 574  37 551 610   7 474 514 389 513  91 262 364  14 459 278 208 239 207
 608 138  39 169 241 452 132  48  72 432 308 475 151  73 441 382  13 606 622 219 598 609 420 153 424
 588 504 181 483 553 155  18  99 590  23 331 110 161  80  62 252 129 215 488 543 253 531 467 453 556
 498 188 468 347 506 222  26  16  50 579 557 585 296  19   4 595 355 471 156  69 302 544 385   9 578
 402 582 505 584 528 540 251 159 379 164 512 286 131 457 187  27 293   8  11 258 434 173 240 496 218
 396 519 384  31 202 567 109 235 300 374 112 276 520 555 317 145  30 273 549  36 440 478 463 502  12
 507 158 613 450 139 223 559 141 243  95 419 607 620  70 387 231  40 193 545 489 363   5 334 329  65
 127 589 248 111 100 165 376 530 340 532 186 344 561 149  21 448 572 435 137 279  66 425 426  85 573
  75 565 313 525 277 290 492 221 371 297  32 508  54 233 318 617 500 539  28 562 244 268 220 174 102
 365 322 246 481  42 462 209 511 392 605 190 398 182 133 603 515 503 359  59 271 417 179  22 362 612
 306 265 332 200 373 345 358 416 315 261 272 330 321 327 339 245 299 415 406 267 397 285 275 123 353
 126 323 497 375  58 438 493 216 542 168 536 529  25 623 433 108 564  17  38 350 568 166  57 284 291
 367 305  71  43 288 444 393 343 404 154 410 395 351 341 346 366 394 301  74 411 349 407  10 501 357
  64  82 234   1 122 274 486 197 618 142 104 134 369 596 526 403 423 121 189 621 587 480 581 101 370
 163 439 212 128 576  45 255 311 428 336 470 283 335 210 455 175 437 430 477 228  47 280 571  83 451
 125  24 312 269 320 348 281 342 538 115 118 225 541 171 282 400 360 473 211 236 203 409 250 249 408
 150 289 546 499 614 490 140 522   6 523 157  33 229 217 380  77 310 461 509 487  34 107 552 442  51
 368 135 328 230 391  79 570 615  98  15 378 479 257 516 113  89  20 495 510 254 476  55 619 583 152
 256 316 260 372 405  86 352 294 356 597 413  29 206 136 324 204 303 143 616  56 167 575 460 472 427
 295 185 377 401 421 604 580  52  97  87  68 184 309 464 600 270 381 178 454 484 172 224 180 466 292
 266 436  76  92 527 191 554 482 412 599 195 521   3 485 116 237 547 148 388 130 144 314  35 602 325
 560  81 535 196 192 624 194 586 518  49 625 117 259 458 304  46 443 124 422 326  61 287 201  67 550

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00498e+07us (= 10049.8ms, 10.0498s)
Satisfaction error: 2
Number of search iterations: 4302
Number of local moves: 3554 (including on plateau: 3505)
Number of local minimum: 40 (including on plateau: 413)
Number of resets: 0
Number of restarts: 0

Problem in row 13: 365 322 246 481 42 462 209 511 392 605 190 398 182 133 603 515 503 359 59 271 417 179 22 362 612 => the sum is 8440 rather than 7825
Problem in row 19: 125 24 312 269 320 348 281 342 538 115 118 225 541 171 282 400 360 473 211 236 203 409 250 249 408 => the sum is 7210 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 508 607 454  28 259 605 465 529 432 103 261  96 141 295 237 565  80 391 569  67  65 518 224 155 171
 216 346  73 599 547 194 278 161  66 544 175  87 592 608 511 244 118 174 254 579 136  20 384 419 500
 502  69 476  21 512 145 119 451 513 455 199 107 470   8 461 504 114 366 494 412 126 497 146 160  93
 162  64   2  88 555 365 369 143  60 322 616 580 424  39 121  17 491 241 464 228 581 568 541 301 483
 257 475 559 463 156 226 382 187  71  86 247 525 144 344 613 570 396  50   3 553 538 125 522 123 210
 150 165 423 377 431 122 591 201 393 309 495 190 528 395 351 176 597 157  30  36 288 472 149 539 260
 440 509 362 200  84 488 313 115 266 256 169 373  97 437  10 484 549 232 306 415 466 452 268  95 439
 399 404 414  56 151 101 110 249 604 499  47 267 304 562 552 293 610 105 355 352 227 269 347 284 264
 338 418 138 376 370 252 219 617  43 223  76 448 296 583 388 186 302 129  52 456 567 593  79 270 406
 130  49 262 277 594 179 213 319 215 191 132 318 564 487 280 405 445 493 164 153 341 148 360 582 524
 357  22  90 239 397 375 372 385 124 361 519 356 327 330 333 343 371 342 358 615 323 363  32 328 163
 348  62 177 250 506 434 473   9 612 469 383 409  46 220 436 100  54 489 167 389 467 402 131 359 433
 337 310 394 368 300 258 305 354 314 336 325 298 390 320 311 282 281 299 275 317 289 173 297 380 312
 575 202 233 623 178 411   5 602 214  29 192 474 283 496 532 601 196 447 442 134 577 234 566 477 550
 459 551 381 273 392 540 374  53 619  44 561 303 350 240 185 128  27 625 113 462  24 193 212 367 349
  94 534 116 481 460 446 501 558 243 242 548  26 198 542 137  58 537 546 408 443 329  42 197 135   4
  77 335 265 152 478 272 109 271 410 598 427 181 263  40  33 430 274  35 531 291 498 422 515 505 413
 195   1 621 180 279  70 229 188 471 588 520 614 378 127 294 170 207 457 584  61   6 510 339 578 158
   7 417 285 535 117 545 112 403 286 189 287 231 530  68 332 331 334  81 248 444  19 521 458 238 166
  59 172 576 225 624 140 574 490 572 438 453 183  31 425 441 526 120 587 139 426 245  51  92 221  15
 307 571 218 326  23 556 573 230  78 102 251 507 147  99 536 533 379 324 133 400 386 235 421  89 401
 603 585 106 345  74 104  91 482  12 479  85 543 236 217  38 168 480 600 246 208  75 449 595 398 606
 222  13 527 622 206 420  48 554 290 340 253 255 450 108 184 204 503 364 416  37 142 308 609 276  72
 523 387 590 205  34 563 486  63 596 611  18  25  16 407 468 154 315  82 485 292 492 203 182 111 517
 560 557  83 516  98  14 514 211 321  11 586 429 620 428  41 353  45 209 589  55 618  57 159 435 316

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00503e+07us (= 10050.3ms, 10.0503s)
Satisfaction error: 5
Number of search iterations: 3493
Number of local moves: 2839 (including on plateau: 2792)
Number of local minimum: 34 (including on plateau: 342)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 502 69 476 21 512 145 119 451 513 455 199 107 470 8 461 504 114 366 494 412 126 497 146 160 93 => the sum is 7420 rather than 7825
Problem in row 14: 575 202 233 623 178 411 5 602 214 29 192 474 283 496 532 601 196 447 442 134 577 234 566 477 550 => the sum is 9273 rather than 7825
Problem in row 19: 7 417 285 535 117 545 112 403 286 189 287 231 530 68 332 331 334 81 248 444 19 521 458 238 166 => the sum is 7184 rather than 7825
Problem in row 23: 222 13 527 622 206 420 48 554 290 340 253 255 450 108 184 204 503 364 416 37 142 308 609 276 72 => the sum is 7423 rather than 7825
Problem in diagonal 1: 171 419 146 568 538 36 306 105 302 405 333 220 390 474 561 242 410 188 112 140 23 345 527 387 560 => the sum is 7908 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 227 430 300 205   8 455  20  91 229 541 423 408 445 435 375 582  36 162 306   2 311 471 605 389 369
 266  76 481  46 224 263 428 196 567 203 137 544  53 182 522 456 449 464 534 438  65 117 538 393 183
 606 178   3 547  12 238 590 331 370 108 253 533 555  27 198 478  10 232 565 190 155 545 548 310 243
  95 257 260 214 397  90 202 554 304 230 395 133 274 611 441 510 208 466 378 448 599 233 161  86 279
 460 126 343 388 404  21 101 255  48 106 509 118  63 485 427  39 380 436 527 242 496 433 392 473 553
 259 604 150 467 523 364  60 245 197 591 498 412  32 474 624  73  41  85  61 338 563 184 446 437  97
  29 539 180 580 169 176  50 569 549  19 623 440 528 111 175  17 520 578 114 601 387 136 285 415  35
 475 347 129  69 480 432 234 188 454 453 540  94 420 577 313 414   1 363  66 132  38 468 128 497 513
 228 431 596 309 262 560 287 406 615 373 557 298 484 191 434 240 134 248 318  31   9  56 504  13 241
 280 562  58 123 558  57 337 429 517 461  33 293 573 413 119 609 164 494  80 149 216 189  74 542 495
 148 207 213 372 172 361 348 400 367  51 355 452 390 346  89 344 483 368  43 350 354 352 339 365 556
  26 145 424 598 505 382 276  93  71 594 572 479  96 325 515 326 334 112 476 500  77 366  11 250 272
 323 329 342 356 307 317 320 270 333 328 308 319 490 291 286 324 322 288 358 336 154 244 281 305 294
 273 290 340 297 321 292 271 576 353 211 278 265 314 275 451 239 316 256 332 258 394 284 231 269 439
 531 487 566 173 568 617 507 143   4 185 277  28 124 130 493 570 532  68   7 444 442 113 411  75 330
 470 625 362 206 264 489 103 226 283 167 315 559 219 575  87  67 376  24  83 246 450 417 254 501 457
 223 418 195 506 589  54 160 127 345 168 158 296 614 486 357 142 585 192 511 550 110 104 410 116 409
 546 251  14 622 302 147 620  18 503 488 472 100 122 215 252 458 613  37 571 102 165 603  62 141 401
 181 140 621 407 157 602 138 477  15 159  70 131 217 139 593  98 398 425 518 268 600 386 327 588 170
 508 249 225 186 619 107 482 465 187 402  30 200 303 289 360 201 152 564 267 120 212 537 194 583 383
 492  55 416  99  34 514 349 535 379 618 105 524 282 146  40  78 552 405 174 526 516  59 399 193 335
 391  23 459 125 371 171 551 385 115 574 247 381 351  47 341 421 491 512 579 384  16 422  79 153 236
 419 144  42 312 462 536 592 447 295 135  84 166  82 529  92 612 121 199 156 587 426 221 595 519  52
 151 443 581 530  72  81 403 220 616 359 377  44 210   5   6 502  64 610 597 561 607 299 177  49 261
 218 469 525  88  45 499 396 179 109 301 209 608 584 521 235  25 543 237 204  22 463 586 374 163 222

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00001e+07us (= 10000.1ms, 10.0001s)
Wall-clock time (full program): 1.00479e+07us (= 10047.9ms, 10.0479s)
Satisfaction error: 1
Number of search iterations: 5240
Number of local moves: 3417 (including on plateau: 3330)
Number of local minimum: 159 (including on plateau: 394)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 369 393 548 233 496 338 114 363 134 609 89 325 490 265 277 167 345 18 138 107 34 125 42 443 218 => the sum is 6680 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 216 552 313 230 508 506   4 584 495 197 586  18  73 215 241 603  14 296 276 623 120 302 155  89 609
  44 480 319 536 113 426 476  50 430 252 108 266 151 171 515  53 523  77 335  61 481 593 452 291 622
 463 179 122 485 425 138 599 180 447 446 314 374 190 226 321 372 303 366 475 238 434  45 176  42 465
 387 386 104  87 530  62 323 316 145 573 244 617 188 504 556  43 139 198 286 284 566 598 275 567  90
 527 516 250  49 307 450 147  98  27 367  92 411  60 107 110 544 601 106 497  12 620 514 562 471 380
 529 167 546 469 364 159 404 339 460 405 510 114 398 116 251 435 535  86  32 369  88 212 207 578  52
 242 470 592 164 375 393 590  16 418 558 121 264  63 575 436 553 249  75 410   1 548  83 144 448  37
  67 317 326 543 292 129 468 181 559  21 257 555 306 199  93 191 223 402 280 511 348 588 221 605 143
 298  20 570 184 432 583 253 195  56 258 438 611 397 394 525 204 353 228 304 234 283 273 498   5 229
 309 474 305 399 239 175 490 281 344 265   3 496 235 297 472 136 263 135 400 389 564 549 142 178 285
 357 576 406 349 227  28 441 625 111 222 170 158 153 493 196 240 613 522 248 270 236 456 322 324  82
 255 290 218 268 225 315 301 334 272 443 231 295 331 247 294 193 371 568 293 368 379 337 279 355 363
  78 382 437 205 597 376 479  66 327 409 494 534 453 127 213  97 528 419 277 149   7 103 282 329 457
 539 131  47 152 602 517 507 267 407  94 124 132 551 274 105 245  79 461 499 458 157 342 614 420 101
 325 370 423  58 278 594 356 289 320  69 219 224 412 384 269 328  10 579 561 413 201  41 365 346 391
 189  40 464 433 287 194  13 616 168 503 428 359 395 351 454 445 455  71 125  35 501 210 350 256 483
 360  31 299 569 424 160 174  39 165 541 486 581 518 192  19 580 373 466 118 354  57 621 148 396 154
 140 182 542 318 343 330 488 408 260 519  96 203  15 563 600   8 246 604 352  55  68 429 615   2 439
  91 531 115  46 173 477 220 390 520  33 545 524 554  99 378 440 130 619  72 442 526 232  22 336 310
 388 308 451 449  25 582 187 254 202  85 557 126 550 338 591 403 467 381 271 478 262 156  51  30 233
 585 444 332 392 128 311  54 624  23 345 347 595 421 358   9 385 200 217 431 612 459  65 577 484 288
 162  34 211  17 100  59 509 487  70 163 572  24 560 502 261 565   6 547 462 538 214 574 183 532 473
 491 500 102 513 112 185  29 146 414 587 427  64 119 401 540 169 505 300 237 186 492 416 166 117 607
 606 312 208 377 109 417 172 422 596 333 361 206 161 608  36  81 150  76 243 362  80  48 537 209  11
 177 133 123 533 610 259 141 618 589 137  95  74 571  84 340 512 489  26 341 383 134  38 482 415 521

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.0048e+07us (= 10048ms, 10.048s)
Satisfaction error: 3
Number of search iterations: 4155
Number of local moves: 3480 (including on plateau: 3432)
Number of local minimum: 33 (including on plateau: 412)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 387 386 104 87 530 62 323 316 145 573 244 617 188 504 556 43 139 198 286 284 566 598 275 567 90 => the sum is 8068 rather than 7825
Problem in row 21: 585 444 332 392 128 311 54 624 23 345 347 595 421 358 9 385 200 217 431 612 459 65 577 484 288 => the sum is 8686 rather than 7825
Problem in row 24: 606 312 208 377 109 417 172 422 596 333 361 206 161 608 36 81 150 76 243 362 80 48 537 209 11 => the sum is 6721 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 459 530 183 131  92 437 558  69 223 544 481 617  63 613 286 127 571 187  88  55 274 191 428  17 601
 328 594 590 596 572  13 144 370 135 192 368 505 133 152 104 100  11 578 504  34  64 575  10 569 584
 208 103 410 395 464 554 494 465 260  62 378 273 386  29 522 225  20 384 399 352 173 116 555 559  39
 539  72 441 193 211 435 179 272 213 236 545  78 247   9 277 606 524 579   2 288  43 536 372 417 511
 244  94 520 523 432 248 168 460 105 114 453 402 262 434 134 456 281 199 375 424 425   5 570 163 334
  67  26 476 117 355 508  58  48 394 162 381 454 143 471 234 598  68 451 532 478 618 501 198 147 340
 408 439 442 581 509  28 413 141 484 416  12 186 611 215 278  31 201 270 430 401  80  33 615 161 440
   6 371  30 616 552 167 182 576 367 406 431 475 119 318  84 263 254 184 585 363   8 461 374 535  98
 221 268 210  99 620 567 534 156  81 565 566 287   1  86 151 373 414  22  25 204 560 444 220 605 546
 392 326 120 354 243 447 343 256 289 145  46 200 238 568 472 366 528 284 124 297 327 483  37 619 321
 170 224 253 469   4 411  18 387  50  79 180 206 233 491 496 217 409 214 219 607 548 537 466 541 396
 313 389 602  77 330 322 237 325 344 346 351 336 359 362  97 342 320 282 333 360 338 267 310 305 178
 562 251 329  59 349 423 356 154  42 470 379  19 515 264 203 507 364  21  66 527 521 185 113 164  24
 257 276 316 295 315 291 258 319 303 304 275 266 519 283 609 246 299 348 309 312  90 285 227 583 240
 207 160 188 436 197 157 448 415 623 421 115 393 165 388 543 463 452 222 365 230  57 241 533  61 345
 301  60 380 307  45  52 358 586 462 597 467 361 446 150  38 502 172 252 136 235 296 510 212 405 495
 347 474 126 239  49 216 261 196 209 486  36 473 487 412  83 550 138 580 332 503 290 574 112 153 499
  82  91 561 202 422 621 158 382 526 226 121 259 443 455 302 485 500  75 608 122 377 242  71 317 177
 599 418 109 497  89 232 391 308 573 314 298  27 489 553 146 166 280 390 190 101 449 600 479 547 538
 624 480 426 450 159 106 181 588  14  76 137 482 398 593 488  41 612 311 549 111  95 249 142  93 420
 498 176 118 353 269 107 397  53 557 445 218  73 592 383 603 427 125 293 324 429 350 403 525  56  51
 132 279 108  16 595 589 563 493 400 385 306 551 245 110 468 231 195 614 250 171 407 205 357  85  70
 506 517  96 540 458 376 513 531 174  87 516 419 271  65 341  40  23 404 512 556 492  35  54  44 255
 323 625 169  15 300 369 490 228 564 229 610 294 457 292 337 335 477 139 438  74 339 140 331 102 148
  32 582 622 265 194 149 123  47 433 518 155 189   3 129 529 128 587 542 130 591 604   7 514 577 175

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00495e+07us (= 10049.5ms, 10.0495s)
Satisfaction error: 4
Number of search iterations: 3926
Number of local moves: 3098 (including on plateau: 3051)
Number of local minimum: 47 (including on plateau: 370)
Number of resets: 0
Number of restarts: 0

Problem in row 13: 562 251 329 59 349 423 356 154 42 470 379 19 515 264 203 507 364 21 66 527 521 185 113 164 24 => the sum is 6867 rather than 7825
Problem in row 19: 599 418 109 497 89 232 391 308 573 314 298 27 489 553 146 166 280 390 190 101 449 600 479 547 538 => the sum is 8783 rather than 7825
Problem in diagonal 0: 459 594 410 193 432 508 413 576 81 145 180 336 515 283 543 502 138 75 190 111 350 205 54 102 175 => the sum is 7570 rather than 7825
Problem in diagonal 1: 601 569 555 536 425 478 430 184 414 366 496 362 515 266 115 597 209 382 391 106 269 16 96 625 32 => the sum is 9035 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 179 345 320 176 570 293 315 131  31 515 288  16 542 481 294 151 402 372 311 523 363 184 299 298 426
 211 539 533 352 140 110 264 618  26  21 417 335  41 416  80 590 421 101 623 526 266 519  30 578  68
 161 103 518  53 552 613 464  50 186  15 602 485 258 391 544 122  18  76 336 425 218 415 210 553 457
 359 277 617  37 332 224  40 339 341 568  13 364 149 252 380 583 287 397 500  92 307 543 354 365 105
  14 108 263 234 535 418 376 319 124 283 585 596 577 297 429 107 197 262 150 229 455 205 257 525 280
 125 491 475 132 517  67 118  33  47 119 470 431 514 246 156 482 490 458 247 476 177 406 559 138 451
 259 172 279 248  74 221 432 275 436 189 499 239 284  60 548 538 463 231  93 214 606 479  89 399 498
  75 614 447 530 619 413 506 465 558 394  43 153 139 575   4 115 199 612 240 144 182  78 511 204   5
 624 549 326 520 434 483 201 348 522 272  51 256 213 569 232  17 383 401  19  35 437 312 142 243 236
 430  77 488 220 230 404 467  66 167 410 227  32 587 100 495 162  84 531 191 572 471 420 601 305  88
 445 141 478 389  10 615 564 473 244 228 369 508  61  36 419 136 146 573 318 217 386 480   1 148 440
 407 442 493 358 414 571 361 238   9 306 344 351 314 347 362 112  81 241 330 309  62 316  82 439 536
 474 353 128 296 342 133  85 322 622 609  23 331 198 350  87 310  99 278 554 134 289 529 555 121 603
 524 375 235 187 328 113 183 192 494  46 254 303 412 502  25 333 586 325 537  11 408 282 405 225 540
 459 273 166 190  52 574 581 109 208 346 216 446  96 444 290  57  86 545 422 295   3 566 486 598 317
 253 625  28 509 292 271 379 616 313 281 154 160 409 551 367 181 269 209 505 233 411  73 194 384 158
 327 212  12 563 343 302 200 580  97 267 203 472 562  34 591 579 513 466 123 403 135   2 449  24 366
 395 219 174 462 202 385 443 178 129 588  79 215 171 143 593 592 390 223 349 251 534  69 398 468 175
  56 503 599 250 393  90 114 460 621 608 137 111 356 489 102 400 560  29 433 163 567  58 168 188 370
 584  44 159 170  65 597   6 595 304  22 497  71  83 441 300 504 521 556 195 373  45 546 469 291 387
 496 286  48 510 145  64 381  91 424 454 565 169 611 270 448 557 368 147 106 620 185 120 423  72 265
 507 357 117 193 260 337 329 249 438 605 547 492 487  98 180 237 450  39   8 396  55 427 360 323 334
 126  70 550  42 607 276 116 532 378 371 355 610 501  38 206 377  54 338 484 589 461 155  49 388 152
 308 222 268 600 196  94 324 382 512  63 452 226 165 374 301 127 516 130 274 340 261 582 527  20 561
  27 428 104 604 173 157 576 164 594 245 435 453  95 321 392 456 242 285 477 255 541  59 207 528   7

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.94264e+06us (= 7942.64ms, 7.94264s)
Wall-clock time (full program): 7.99076e+06us (= 7990.76ms, 7.99076s)
Satisfaction error: 0
Number of search iterations: 3421
Number of local moves: 2821 (including on plateau: 2771)
Number of local minimum: 39 (including on plateau: 324)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 495 530 543 169 365 111 172 518 287 190 544 583 178 271  42  65 197 124 200 596 609 485 374 139  38
 386 146 434 252 302 531 317 196 116 331 125 579 336 115 535 171 513 232 219 498 265 481 580  73  92
  21 224 333 440 430 141 149   9 472  30 538 576 241 457 326 592 432 391 448 119 243 431 412 282  88
 167 586 170 465 439 166 597 112 539 473 117 109  81  56  98 505 201  51 272 616 229 297 621 555 303
 507 536 213 563 342 161  45 486 577 177 514 400 155 568 216 121 468 373  22 129 487 266 101 375  23
 211 346 143 593 459 263 299 294 361  27 312 526  57 572 500 548 318  60 585 162 410 608 199 273 578
 334 292 503 236 123 613 175 163 192 479 122 191 467 164 396 144 218 140 463 491 575 385 193 142 624
 516 496 240 454  77   7 524 242  36 517 279   2 601 214 366  69 584 184 133 509 173 168 490 546 398
 564 194 130 283 151  97  44 600 147 551 510 150 339 329 353 611 198 206 482 458 358  76  12 521 461
 359 262  91 110 545 451 221 401 623 305 512 363 553  86  71 406  50 276 300  72  85 620 259 415 389
 606 428 450  28 187 420 227 247 274 245 180 267  68 296 108 261 501 588 249 418 239 605 238 207 488
 258 186 307 228 570 433 413 275 476  59  83 231 402 350 594 381 113 534 591  95 511 118   3  41 573
 320 290 356 255 264 298 379 301 285 344 217 351 404 289 316 288 325 355 226 372 395 311 330 268 286
 222  46 253 421  53 328 595 237 619 571 179 557 181 625 250 174 493 209 453 210  20  39 393 343 354
 455  26 614  18 205 138 529 604 602 527 295 429 348  52 449  79  89 102 145  87 554 257 281 618 322
  10   4 466 414 304  80 388 337 446 427 394 357 447 411 105 315 338 383  34 541 244 437 324  54 565
 154 360 176 203 332 492 212 525 269 423   6 397 382 100 445 478 120 417  58 559 519 426 291 103 378
  62 106 506 323  17 314 347 390  31 452 313 182 407 471 598 204 309 599 132 234 603  19 552 277 377
 371 405 128 327 477 335 475 370   8 137 587  84 156 424  61 403 441 399 152 419 148 566 438 165 349
 293 504 483  15 248 246 561  55 215 376  75 499 159 617 469 284 321 590 308 223 135  33 542 569   5
  63 560 392 443 480 622 127 502 157 220 581 310 195  35 408 547 612  32 436  13 104 183  99 610  94
 522 474 107 456  66 442 422  37 435 368 515  24 208 345 550  90   1 464 558 202 364 251 494 387  43
 319 278  25 367 589 523  29 235 270  40 280 114 462 533 136 188 380  14 470  64  11 409 425 444 341
 484 497 230 537 567 153  70  74 254  67 362 528 582 256  93 549 556 562 369 131 160 306  96 260  82
 126  49 532 225 233 460 508 615 134 489 185  16 416 189 340 352  47 540 520 607 384  48  78 158 574

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00499e+07us (= 10049.9ms, 10.0499s)
Satisfaction error: 2
Number of search iterations: 4739
Number of local moves: 3876 (including on plateau: 3828)
Number of local minimum: 43 (including on plateau: 466)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 211 346 143 593 459 263 299 294 361 27 312 526 57 572 500 548 318 60 585 162 410 608 199 273 578 => the sum is 8704 rather than 7825
Problem in row 23: 319 278 25 367 589 523 29 235 270 40 280 114 462 533 136 188 380 14 470 64 11 409 425 444 341 => the sum is 6946 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 571 575  87 267  19 602  54 190  26 263 590 621 536 340 203 242  57 201  30 210 294 291 360 623 573
 564 277 596 358 205 179 539  14 150 117  27 177 411 544 495 237 345 363 389 111 289 124 456 541 317
 137 419  12 219 397  84 390 123 400 533 164 510 368 147  85 560 132 443 388 538 440 493 559   9 275
 316 579 497  80 256 435 589  81 405 437 143  43 116 576 386 225 255  36 221 570  42 498 270 420 349
 585 503 300 329 377 141  52 185 341 620 195 593 152  17 466 262 207 131 616 331 555 104 266 335 162
 235  34 407 532 607 485  92 279 600 337 479 373 521 127 332 426 399 133 442  56 107  31 477 261  53
  50 311 524 553 467 302  28  68  23 472 537  18  39 298   2 546 618 622 424 416 453 496  89  47 422
 187 280  94 446 586 292 296 522 489 404 230  99 109 319 391  22  65 322 613 434 501 323 282  62 457
 429 128 160 527  95 445 101 582 243 126 514 206 297 259 451  21 462 543 418 100 374  67 452 473 352
 508 396 148 468 222 614  61 253 135 125 470 189 161 578 617 385 608 528  58 556  74 402 169  76  24
 438 110 153 545 264 361 328 410 488 584 380  71 460  75 305 356  11 580  46  16 339 549 233 306 417
 336  60 313 353 487 359 286 103 220 436 441 326 304 315 619 299 348  38 281 250 476 136 624 271 144
 362   6 591  69 156 149 430 525 558 312 398 409 408 214 112 108 318 406 325 194 118  70 186 244 212
 303 594 290 609 288  64 330 379 523 102 134 273 182 165 324 526 269 475 610  48 245 198 239 241 414
 209 229  97 327 401 423 604 574 158 168 192 474 455 314 227  77 231 520  44 208 581 284 196 367 465
   1 278 355   8   4 338 287 562 547 163 181 502 550 471  32 519  83 515  41 171  86 483 542 552 554
 159 599 218 246 428 285 412 572 236 200 569 268 603 293 507 223 183 114 170 612 252 139  10 372 155
 228 145  98 531   3  51 611 211 540 146 342 480  82 592 597 232 283 382 321 366 105 395 265 469 350
 178 166 491 486 375 494 176 320 301 180 509 482 347 454 217  29 505   5 154 346 184 413 204 499 310
 106 566 450  45 357  37 199 381 274 568 365 403 254 516 167 484 565 258 376 387  96 113  15 308 535
 370 371 384 130 433 588 202 529 121 122 213 197 234  35 295 551 506 188 193 115 530 595 257 251 415
 439 224  72  59 238 119 364 431 601 492 129 447  93 459 333 444 309 394 248 344  88 605 511 557  79
 421 354 392 175 215 561 517 425  63 351 260  66 625 464  20 378 249  25 307 504 587 173 548   7 138
 615 172 606 247 427 226 343  73  49 393  91 478 463 240 500  90 369  40 512 461 432 567 458 151 513
  78 449 490 216 518 191 534  33 334 174 272 120  55  13 142 583 448 563 598 481 577 276 157 383 140

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00482e+07us (= 10048.2ms, 10.0482s)
Satisfaction error: 3
Number of search iterations: 4644
Number of local moves: 3646 (including on plateau: 3599)
Number of local minimum: 69 (including on plateau: 437)
Number of resets: 0
Number of restarts: 0

Problem in row 13: 362 6 591 69 156 149 430 525 558 312 398 409 408 214 112 108 318 406 325 194 118 70 186 244 212 => the sum is 6880 rather than 7825
Problem in row 22: 439 224 72 59 238 119 364 431 601 492 129 447 93 459 333 444 309 394 248 344 88 605 511 557 79 => the sum is 8079 rather than 7825
Problem in row 24: 615 172 606 247 427 226 343 73 49 393 91 478 463 240 500 90 369 40 512 461 432 567 458 151 513 => the sum is 8516 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 231 190 183 476 176 464 393 581 255   1  73 514 585 179 528 148 599 372 444 258 395 121 441 159  59
 537 603 322 388  68  74 475 251 614 502 281   9   7 500 378 266 100 116 587 400  76 510  71 185 505
 515 222 625 456 271  61  80 547 137 165 261  78 451 373 350 432 302 535 561 450 532 356 312 527  70
 512 357 364 558  87 613 173 284 465 180 134 228 147 353  72 186  13 588 518 318 470 399 108 612  86
 386 256 359 452 533 238 485  46 520 389  43 539 292 252 525 404 153  53 611 300 380 227  24 257 101
 594 280 220 191 493 494 146 387 247  44  60 579 200  91 375 569 554 360 210 480 481 243 114  51 362
 624 623 609  88 607  26 467 417 237 303 434 169 543 240  28 235 430  47 333  29 440 342  16 262 276
 172 212 273 619 120 438 529 469 433  85 590 522  14 136 346 282 161 506   2 123 344 552 288 162 447
 151 135 348 102 617 545 205  75 401 316 513 112 622 341 233 472 201 442  49 125 572 157 383 143 565
 457 544 124 570  19 605 142 436 149 354 488 468 498 202 259 381 177 574 289 370 260 224 487 351 542
 216  54 294  99 245 536 595 150 557 334 384 320 223 491   6 367 426  90 164 140 396 454 548 577 290
 291 128 508 338 193 339 391 374 335 517  94 347 420 323 576 230 509 305 154  25 198  81 377 429 343
  42  89 286 160 371 133 325 250 274 459 208 583 184  92 138 602 253 608   5 311  12 406  41 166 524
 307 287 471 296 308 331 229 310 324 249 275 299 332 314 408 584 113 295 263 298 241 270 523 234 264
 203 540 196  82 521 423 618  38  22 453 409 382 131 407 309 304 553  48  77 411  83  37 168 379 214
 397  18 283 265 448 301   8  95 479 156 321 215 566 560 606 244 563 268 361 329 206  58 460 492 126
  20 474 559 213 155 272 104 226 313  33 571 419 119 591 366 503  31 232 103 368 327 427 555 246 598
 549 197 239   4 582 174 486 616 207 144 199 620 175 615 167  66 601 187 285 209  17 531 330 455 170
  57 511 132 600 398  62 593 516 242 596 621 336 145 127  30 340 254 279 129 490 497  23 495 189 163
 390 248 355 534 345 171 445 188  45 109 122 107 413 306 519 541 431 412 352 141 219 483 337 319 293
   3 578  10  65 326 385  52 363  97 610 421 402 221 178 111 192 403 418 425 575 106 564 507 437 376
 478 225 130 443 358 365 394 482  98 328 317 194 110  40 556 181 428 504 446  35 424  96  27 586 580
 195 277 414 473  79 152 139  15 526 496  63  36 538 530 461 117  67 211 416 550 562 463 573  50 422
 477 315  32 297 269 568  84 105 499 567 551 278 405 466  39 115 410 217 449 501 369 204 182  11 415
  21 462 489  56 236  55 267 604 349 435 392  69 484 118 439  64  93 158 592 589 218 597 458 546  34

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.0049e+07us (= 10049ms, 10.049s)
Satisfaction error: 5
Number of search iterations: 3922
Number of local moves: 3220 (including on plateau: 3175)
Number of local minimum: 32 (including on plateau: 394)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 515 222 625 456 271 61 80 547 137 165 261 78 451 373 350 432 302 535 561 450 532 356 312 527 70 => the sum is 8669 rather than 7825
Problem in row 10: 457 544 124 570 19 605 142 436 149 354 488 468 498 202 259 381 177 574 289 370 260 224 487 351 542 => the sum is 8970 rather than 7825
Problem in row 11: 216 54 294 99 245 536 595 150 557 334 384 320 223 491 6 367 426 90 164 140 396 454 548 577 290 => the sum is 7956 rather than 7825
Problem in row 13: 42 89 286 160 371 133 325 250 274 459 208 583 184 92 138 602 253 608 5 311 12 406 41 166 524 => the sum is 6522 rather than 7825
Problem in row 15: 203 540 196 82 521 423 618 38 22 453 409 382 131 407 309 304 553 48 77 411 83 37 168 379 214 => the sum is 7008 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 624  91 298 586 209 554 548 238 154 118 161  78  86 112 567 236 475 438 321 217 241 123 527 570 253
  75 603 447   7  13 231 542 274 544 339 466 539 132 430  54 115 102  24 558 432 387 368 332 572 239
 538 170 359  76  15 280 105 134  25 616 502 254 317 482 394 556 121 427 573 550 103 596  37 143 452
 493 164 225 546 230 316 480  55 323 574 144 555 269 268 111 505 440 133  89  47 325 528  98 378 529
 151  95 442 264 405 190 300 327 598 381 360 340 335 380 224 560 157   5 291 551 195 126 446 286 416
 362   9 191 535 374 194 390 251 312 458 569 330  44  33 498 594 246 153 612 376  30 271 407 419 167
  52 354 302 521 564  23 439  49 139 506 343 163 213 237 413 140  19 510 137 232 575 490 451 310 371
 262 553 367  51 465 216 613  59 428  28 399 177  69  81  70 477 431 384 396 261 338 559 165 515 461
 520 423 203 400 219 577 276 618 418 329 595  18 223 557  56 402 587 412  60 562 611 197  16 491 576
 606 388 135 178  27 429  32 211 499 375 109 173 600 169 125 547 235 348 568  96 406  92 265 607 605
 472 372 117 129  34 601   4 358 599 361 385 392  62 363 370 364 391  50 357 488 581 530 350   1  94
 198  71 453 448 526  73 591 282 345 592  14 496 212 514 602 294 356 523 531 229  42   8 497 352  88
 155 267 369 320 297 504 347 328 489 337 303 324  85 313 319 309 306 435 311 389 307 106 295 318 292
 349 304 403 259 285  17 524 519 455 283 162 516 508 289 293 296 208 299 275 290 272 305 278 226 210
  97 471 243 395 270  99 422 590 248  67 257  66 353 404 244 188 202 160 408 287 545 334 536 445 494
 158  39 333 252 172 478 579 621 159 222 449 615 481 582 511 415 136 179 532 454 277 326 122 146  29
 450  12 131 622 166  20 148  21 186 184 263 397 456 101 141 200 247 288 152 610 189  26 433 100  79
 281 221 386 589 420 476  38 128 411 145 463 233 124 113  57 604 249 571 443 425 426 142 110 204 566
  80 266 227 258 344  48 492 541 468 108 245 193 495 512 331 409  74 561 181 479  40 444 597 355  77
 410 625 322 256  93 436 351 467  58 260   6 180 199 620 401 315 487 500 187 127 342 584 220 183 196
 383 240 168 120 503 563   3 336 486 533 534 301 417 192 273 138 507 242 171 421 130 437 175 346 206
 382 588 543 107 549 176  31 279 104  53  84 398 614 462 578  35 540 485 464  72 366  87 201 114 513
 484 518 469 377 525 393 314 341  45 474 149 537 373 365 156  63 473 218 116  68 414 424  65 250 214
 207 522 609 150 619 623 234 215 147  41 608 460 593  64 457   2 552 434  10  43 174 205 617  11 228
  36 459  83 379 501 308  22 583 185 441 255  90 565 182 580  61 284  46  82 119 509 517 585 483 470

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.0051e+07us (= 10051ms, 10.051s)
Satisfaction error: 6
Number of search iterations: 3646
Number of local moves: 3026 (including on plateau: 2980)
Number of local minimum: 24 (including on plateau: 344)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 52 354 302 521 564 23 439 49 139 506 343 163 213 237 413 140 19 510 137 232 575 490 451 310 371 => the sum is 7553 rather than 7825
Problem in row 9: 520 423 203 400 219 577 276 618 418 329 595 18 223 557 56 402 587 412 60 562 611 197 16 491 576 => the sum is 9346 rather than 7825
Problem in row 12: 198 71 453 448 526 73 591 282 345 592 14 496 212 514 602 294 356 523 531 229 42 8 497 352 88 => the sum is 8337 rather than 7825
Problem in row 16: 158 39 333 252 172 478 579 621 159 222 449 615 481 582 511 415 136 179 532 454 277 326 122 146 29 => the sum is 8267 rather than 7825
Problem in row 17: 450 12 131 622 166 20 148 21 186 184 263 397 456 101 141 200 247 288 152 610 189 26 433 100 79 => the sum is 5622 rather than 7825
Problem in diagonal 1: 253 572 37 528 195 376 137 384 587 547 370 514 85 516 257 222 186 128 492 436 503 107 469 522 36 => the sum is 8459 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 517 240 180 354 355  46 121 445 114  44 160 480 620 188 423 244 501 233  93 465  30 562 606 576 228
 603 328 559  39 269 484 393 238  82  67  65 406 231  70 469 296 487 230  42 446 582 508 194 227 510
 453 427 587 370 448 139 164 534  85  80 223 359 597  90 181 242  73 540 149 277  21  49 544 574 619
  53 268 407 245 605  11 154 168 125 300 599   3 584 440 150 410 345 213 143 134 533 148  64 243 475
 500 391  60 519  29  74 563   2 390 199 617 111 122 432 137 356 435 202 590 618 462 441 133 385  57
 206 110 389 557 170 472 551 492 467 483 411  24  48 129 493  89 140  37 408 422 486 470   8 216 547
 201 461  41 491 434 438 295 319 460  83 157 107 106 307 485 303 451 399 404 498 452 436 265 171  61
 474 325 593  12 525 607 476 340 555 234 183  19 457  16 334 100   5 604 586 625  99  43  75  50 488
 536 553 624 104 263 136 592 176 112 212 463 518 163 305 314  72 395 388 425 237 614 187 336 548 565
 246 421 103 185 372 373  38 516 415 278  87 573 405 578 165 444 254 545 611 400  77  14 323 146 256
 397 249 459 621 224 174 362 623 552 568 413 601 211 215 331 161 262  27 537 310 464 357 316  95 294
 332 366 351 358 349 342 274 402 398 387 313 381 346  62 330 337 350 339 383 276 329 368 241  91 120
 433 292 299 335 257 367 369 473 371 301 365 327 108 285 272 282 235 360 353 304 286 326 281 253 291
  13 147 248  71 320  88 505 530 442 596  58 311 394 608 564   6 348 416  84 378 177  86 542 514 379
 186 270 302 529 217 204 566 317 287 210 615  10 264 236 506 481 252 169 221 255 266 343 455 456 208
 109 509 468  81 612 554  47  55 191 579 538 539 222 414 275 558 610 197 126  20 123 102 396 449  22
 131 567   7 284 591 600 622 572 308 118  96 503  34 598 195 543  63 321   9 141 105 158 522 512 225
 502 175 124 290 144 556 513 115 309 190 184 145 490 429 594 609 527 289 338  52  97 521 189 214 229
  28 409 575 130 239 507 247 392 363  33 376 431 312 447 279 200 218 454 283 511 403 569 155 198  66
  56 595 479 524 132 178  76 113 496 515 347 386 504 364  51 546 297 570 258 153 220 251 117 324 273
 561 142 250 156 298 127 226 267 384 585 333 196 477 203  79 209 182 560 532 119 482 315 499  94 549
 374  78  23 602 288 162 318  15 151 424 293  69  18 583 377 412  92 580 418 167 380 375 466 419 526
 471  40  17 166  31 528  45 489   1 443 138 616  98 428 205 439 497 101 322 523 207 520  32 571 135
 271   4 420 541 159 352 192  59 179 401 430 478 577  54 581 450 193  26 128 426 341 259 535 219 550
 172 458 260 261 494 306 116 173 588 495 361 232 437 344  35  36 613  25 382  68 589 417 531 280 152

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00504e+07us (= 10050.4ms, 10.0504s)
Satisfaction error: 6
Number of search iterations: 3713
Number of local moves: 3065 (including on plateau: 3020)
Number of local minimum: 31 (including on plateau: 386)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 53 268 407 245 605 11 154 168 125 300 599 3 584 440 150 410 345 213 143 134 533 148 64 243 475 => the sum is 6820 rather than 7825
Problem in row 9: 536 553 624 104 263 136 592 176 112 212 463 518 163 305 314 72 395 388 425 237 614 187 336 548 565 => the sum is 8838 rather than 7825
Problem in row 11: 397 249 459 621 224 174 362 623 552 568 413 601 211 215 331 161 262 27 537 310 464 357 316 95 294 => the sum is 8823 rather than 7825
Problem in row 16: 109 509 468 81 612 554 47 55 191 579 538 539 222 414 275 558 610 197 126 20 123 102 396 449 22 => the sum is 7796 rather than 7825
Problem in row 22: 374 78 23 602 288 162 318 15 151 424 293 69 18 583 377 412 92 580 418 167 380 375 466 419 526 => the sum is 7610 rather than 7825
Problem in row 23: 471 40 17 166 31 528 45 489 1 443 138 616 98 428 205 439 497 101 322 523 207 520 32 571 135 => the sum is 7063 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625  52 131  33 604  17  46 538  68 596 594 400 266   6 567 607 421  24 237  67 581 219 466 288 372
 503 169 523 210  85 623 246 247  51 415 529 192 166 522  10 119 493 379 252 187 340 366  88 566 544
 336  28 561 414 217 551  97  23 533  63 541 519 497 253 362 605 334 373 222 261  82  76 430 269 178
 577 449 299 387 199 227 597 132  59 159 151 273 599 113 565 179  37 200  87 586 398 531 516 270 235
 422 562 184 603 487 147 530  79 598 494 139  83 315 280  95 256 576 383 475  30 359  29 559  50  90
 251  41 171  61  64 492  16 385 502 507  77 337 473 391 488  75 211 346 122 471 431 622 464 568 259
 185 582 378 327 409 394 468 189 104 557 438   2 212 390   4 540 600  80 439  43  36  22 380 472 574
 163 521 500 326 257  71  27  15 181 610 138 532 570 498 510 536  54 176 612 354 397  55 350 107 265
 101 234 134 264  32 524 482 609 370 376  84 425 411 592 220 112 405 258 446 442 232  48 408 572  44
 539 271 143  18 221 463 240 445 352 437 402 587 349  39 575 160 489 215 117 356 190 465 118 194 440
 294 618 451 339 491 403 108 461 462 115 554 289  49 145  62 429 231 620 416  99   9 295 213 205 467
 186 553 154 585 505 120 202 144 614  57  38 325 170 526 563  34 583 377 624 146 168 474 209  72 396
 313 435  65 284 308 102 344 528 281 283 311 490 374 470 279 292   7 420 254 459  81 407 483 312 243
 152 393 301 358 595 298 306 282 274 165 248 275 317 277 558 302 278 286 129 324 268 290 617 303 229
 309 506 423 307 542 285 371 293 203 332 323 137 228 141 255 333 476 156 314 338 381 242 175 319 436
 513 310 343  73 272 347 395 316 504 182 198 335 410 287  93 183 250 328 406 525 300 297 296 341 321
 413  42 593 123 386  12 573 249 128 109 480 245 116 588 452 457 149 547 501  31 469 353 351 233 225
 320 305 555   5 571 527 368 601 485 167 263  92  53  35 142 479 164 608 304 508 495 153   1 191 433
 148 125 345 569  58 331 201 611 549 173 401 616 543 419  20  60 276 369 126 230 613 602 260 106  74
 216 136 208 520 348 114 444 291 564 418 515 550  96 174 224 267 535 262 158 155 193  56 318 545 518
 140 238 226 499  89 241 534 478 195 218 223 204 330 441 556 180 130 448 103 548 111 589 443 417 244
 460 432 426 512 392  19 105 121 188 615 355 447 214 196  91 580  26 127 591 427 389 133 509 384  86
 135  11  94 619 177 579 162 124 367 434 453  69 382  78 511 455 365 100 486 412 517 606  98 481 110
 477 388 161  25 450 484 621 150 172 329 357  40 363 560  45 428 375 206 207 590 239 496  70   8 584
  47 424 456 364  66 454 342 514  21  14  13 361 322 404 578 157 360 537 197 236 546 399   3 552 458

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.85915e+06us (= 9859.15ms, 9.85915s)
Wall-clock time (full program): 9.90032e+06us (= 9900.32ms, 9.90032s)
Satisfaction error: 0
Number of search iterations: 4509
Number of local moves: 3650 (including on plateau: 3600)
Number of local minimum: 47 (including on plateau: 452)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 103 621 603 294 379 399 438  61  58 236 133 576 470  83 201 178 481 243 208 173 585  88 554 171 489
 196 156 222 509 619 515 264 169  90 478 318 260 404 566  76 119 549 331  57  12  37 542 261 611 464
 625 147 624  31  35 150  20 129 458 217 360 265 175 564 234 571 583 131 412 172 535 461 407  65 454
 430 451 550 263 563 275 130 138 439  68 280  93  46 401 429 595 368 354 471 286 574 523  73  10  15
 422 524 247 587 508 141 560 340 228 174   7 123 157 541  75 474 163 369 580 445 496 598 553 600 151
 546 297 180 168  14 590 517  86 485  97 586 472 351 312 396 186 125 468   5 475 270  27 497 408 267
 309 153 545 623 483 289 374 514 416  91  48 614  11  69  23  42 423 214 425 506 435 386  66 240 526
 579 199   1 361 165   9 215 572 323 597 500 533 615 569 417  54 161 428 155 582  60 279 170 185  96
  19 285  80 251 284 465 192 246 148 482 405  45 518 384 433  18 400 529 253 200 256 567 462 466 437
 355 559 162 398 432 118  87 269 575 271  26 252 372  52 288 332 520 190 440 383 484 349 573 111 227
 380 373 106  67  50 366 394 122 477 568 565 393  43  38 306 365 120 291 364 348 341 507 519 359 363
 320 333 303 377 334 345 335 146 112 338 321 367 382 183 339 330 322 301 324 296 358 344 307 356 352
 116 504 293 487  56 448 609  22 302 350 232 140 420  99 581 589 601 505 152 450  49 159 137 225 299
 304 308 266 292 298 274 343 498 121 316 410 233 282 426 392 329 259 283 337 273 305 254 249 245 528
 104 235  84 418 502 101  33 561 287  78 276 194 594 602 521 220 154  55 540 555 167 300 182 530 532
 268  41 210 457  17 556 202 495 493 209 124 389 281 229  47 442  53 143 610  16 436 158  81 255 375
  94 551 499  64 592  95 177 272 211 226 357 492 536 107 114 391   8 608 238 262 139 327 473 537 455
 250 132 385  71 310  77 534 242 278 525 403  30 558 547 100 237 510 406 149 604 166 181 516 427 187
 258 326 346 593 206 223 588 591 362 197 441 469 176 371 543 164 596  74 117  63 415  70  85 479  72
 347 552  82 402 409 135  29 539 191 606 203 584 126 216 503 311  24 562 113 219 613 490 452 115   2
 145 142 328 108 134 620 622 501 480 314 612  36 488 319  98 511 486 578  59  92 160 109 277 411 195
 548 431 531 127 538 184 248  79 313 419  62 443 128 188 617 494  39 205 557 544 376  28 239  34 453
 607 476 110 491 414 570 295 599 456  32 213 336 189 257 198 244 212 446 395 230  51 447  21 102 434
 460  25 605 207 193 527 388 413 144 424 325  89  44 315 317 616 444   6 522 218 136 241 204 513 449
  40   4 463 179 290 353 231 221 378 512 618 397 459 387 577  13 224 105 342 421 381 390 467 370   3

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00494e+07us (= 10049.4ms, 10.0494s)
Satisfaction error: 2
Number of search iterations: 5174
Number of local moves: 4270 (including on plateau: 4220)
Number of local minimum: 49 (including on plateau: 501)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 422 524 247 587 508 141 560 340 228 174 7 123 157 541 75 474 163 369 580 445 496 598 553 600 151 => the sum is 9063 rather than 7825
Problem in row 16: 268 41 210 457 17 556 202 495 493 209 124 389 281 229 47 442 53 143 610 16 436 158 81 255 375 => the sum is 6587 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 208  30 160 473 580 168 553  35 586 214 161 118 456 173 149 391 259 237 192 597 577 369 135 479 525
 449 600 263 137 185 270  18 603 595 542 505 532 515 613  16  46   3 198 321  29  55 354 334 616  26
 523  28 517 588  56 289 186 528 513 286  99 176 601 544  39 587 138 146  13 450  32 394 447 434 211
 559 445 432 493  98  47 110 202 232 106 551 590 454 131 417 381  23  84 431 566  49 261 318 327 518
 124 461 189 486 292 200 235  73 533   1 472 197  71 540 162  37 609 562 571 353 547 217 502 171 220
 228 552 481 122 567 441 117 477 401  17 164 140 561 114  57 313  19 585 578 455 531  70 614 136  85
  82  62 419 617 132 371 112 503 108  83  12 406 346 489 452  25 403 404 483 421 101 435 469 504 386
 478 199 520 222 221 372 556  10 241 315 378 463 230 412 180 252  76 359 602 128 326 246  95 407 537
 210 357 382  20 480 439 509 219 482 622 500 446 163 236 392  38 285   2   6 344 611 438 102  41 501
 374 127 589 376 249 224 606 365 181  51 534 178 362  27 418 364 141  79 495  52 549 167 619 510 188
  97 604 623 145 247 565 570 116 152 612 282 573   8 458 297 488 276 125  87 462 104  63 476 244 151
 283 425 179 262 430 422 317 290 375 307 279 322 335 398 312 212 363 278 302 311 301 275 361 231 255
 367 309 277 397 298 340 339 265 304 226 323 227 245 332 194 268 306 341 451 287 337 410 383 250 349
  14 284 238 126 288  60 303 591 239 295 395 320 621 253 299 538 620  44 366 257 605 519 158 111 281
 272 139 347 187 328 291 400 377 356 233 522 274 293 405 294 325 271 155 343 190 557 165 264 330 507
 130  74 193 205 569 548 225 385 512 266 384  50 574 144  24 511 256 535 133 172 592 396 150 254 543
  75   4 467 572  94 100  36 123 388  68 516 329 175 527 560 370 610 342 209 471 491 324 157 402 415
 558 576  72 524  34 448 206  58   7 508 240 514 183 234 121 546 437 541 409 142  15 310  78 598 466
 575 314 159 177 526 459  93 427 105 308 248 499 169  89 153 355 581 393 207 408 242  22 444 333 539
 506 584 115 494 170 267  59 148 564 487 113  31 251 166 615 387 184 474 174 358 216 443 426 203 390
 490 607 182 351 223  92 319 154  21 484 368 379 428 380 316 496 300 436 218 468 103 243 521 204  42
 109 260 147 229 594 269 563 583  69 593 414 129 485 134 555  88 215 360 545 196  40 424 348  43 433
 618 331  86 373 457 470 475 280 273 423 156 420  77 413 579  66 460 120  96 350 201 399   5 554 143
 416  11 530  54 296 608 465 389 497 338 119  48 213 568 625 191 492 429  64  53 582 345 352 107  33
  80 442 258 195 411  65 453 624  91 440  90 464   9  45 599 550 498 596 529 305  61 536  67 336  81

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00497e+07us (= 10049.7ms, 10.0497s)
Satisfaction error: 1
Number of search iterations: 4304
Number of local moves: 2540 (including on plateau: 2486)
Number of local minimum: 151 (including on plateau: 325)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 0: 208 600 517 493 292 441 112 10 482 51 282 322 245 253 294 511 610 541 207 358 103 424 5 107 81 => the sum is 7549 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 562 468 167 166 257   4 444 498 275  25 254 401 523 484 437 457 115 313 559 251 381 238  82 356 108
 280 547 620 252 607 274 216 614  50 540 175 213  89 132 604 336 622 434 137  83  71 195 299  64 371
  69 231 464 543  43 253 481 500 291  42 392 308 411 355 446 208  49 409 515  54 546 289 162 223 541
 366 531 312 470 502 429 387  31 452  75 160  18 491 271 159 150 432  20  55 261 545 113 625 549 421
 106  47 602 399 374  91 552 416 448  30 501 350 598 467 118  98 433 284 507 321 117 360  65  76 465
 183 555  79 587 329 155  73 569 230 345 503 185 232 148 177 544 277 463 525 116 270 220 224 365 471
 179  41  90  74 550 461 192 408 144 204 593 324 246 617 521 304  15 528 176 388 368 476 309 459 158
 431 488 570 561 423 588 475  66  94 244 209 282  48 211 623 296  12  84 169 568 218 300 266 485 114
 591 227 322 403 189 427  10 361 494 621 348 110   8 479 241 214 305 239 603 536 225 292 310 190  80
 197 412 323 505 298 196 265 127 119 188  86 407 596  57 306 450 143 519 347 199 281 480 542 535 247
 613 184 572 482 164 499 172 417 537 149 120   7 534 605 240 128  21 260 146 557 556  88 234 142 139
 406 302  11 147 582  24 379 104 575 123 618 415   6 317 315  93 447 205 171 524 256 384 272 548 601
 129  37 217 314 165  27 383 435  77 377 566 578 405 445 533 249 243 102 440 419 422 174 375 372 341
 359 245 262 337 351 344 122  45 346 527 259 318 357 307 303 418 380 319 391 198 285 264 297 340 451
 477 332 454  13 396 335 370  52 316 233 255 268 181 140 267 483 595 551  99 339 343 478 426 229 193
 311 414  68  87  14 516 385 194 586 236  56 473 558 294 369  58 508 449 273 178  97 576 278 520 327
 532  85 397  44  23  72  32 567 462 487 512 583 156 456 163 526 553 210 460 107 330 100 529 410  29
  53 612 226 486  34 611 497 425 608 597 326  39  67 101 173  95 161 342 442 131 125 565 237 518 354
  60 221 202 577 279 490 474 212 338 404 200 599  40 105 554 619 269 130 428 263 393 154 133 283 398
 112 585 242 363 590 430 580 287   1 219  81  59 511 353 441 610 589 136   5 157  70 530 402  36 436
 250  22 560  38 509 201  63 624  92 364 145 215 469 424 182 301 466 191 228 574 616 594 186 600 170
 333 373 293 510  62 538 103  33 121 564  35 367 395 455 389 180 563 496 248 206 295 124 168 390 584
 286   9 439 111 290 203 493 472 458 349 573 386 141 376   3 276 288 514 358 522 506 109 382  46 235
 325 495   2 222 400 606 581  16 453 378 438 592 443  19 126 153 152 489  26 334  17 571 413  61 513
 615 362 331 134 394  51  96 352 258 504 420 328 320 207 135 579 187 138 517 539 492 151 609  28  78

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00494e+07us (= 10049.4ms, 10.0494s)
Satisfaction error: 2
Number of search iterations: 3538
Number of local moves: 2935 (including on plateau: 2888)
Number of local minimum: 34 (including on plateau: 353)
Number of resets: 0
Number of restarts: 0

Problem in row 11: 613 184 572 482 164 499 172 417 537 149 120 7 534 605 240 128 21 260 146 557 556 88 234 142 139 => the sum is 7566 rather than 7825
Problem in row 21: 250 22 560 38 509 201 63 624 92 364 145 215 469 424 182 301 466 191 228 574 616 594 186 600 170 => the sum is 8084 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 602 435 533 315 117 379 350 416 570 569 168 449 343 325   7 202 585 277  74  55 445 159  46 385  19
 147 224  49 484 132 555 393 498 137 262 584 360  58  81 559 595 364  85 610 378 579 231 298  54 108
 372 414 348 140  69 505 250   1 206 268 162 541 580 497 487 455 407 180  25 377 263   5 279 612 382
 146 530  82 155 102 582 258 475 321   8 278 208  33 281 346 417 366 251 333 432 547  63 419 581 611
 216 217 578 567 161  60 457 513  89  68 380 163 154 295 238 597 471 153 543 291 246 538 175 134 521
 413 220 210 144 596 438 556 358 477 225  44 243 554 444  18 460  30 441 571  13 120 308 314  96 532
 502  61 342 550 617 624 500 318  41 399 608 270 462 269 197 156  21 164 218 107 139 574 105 453 128
 148 527 185  17 383 138 361 473 591 211 504 160 226 300 189  59 563 349 404 131 420 297 344 422 423
 311  38 143 219 357 179 389 239 135 234 388 433 439 359 171 583 209  26 466 589  62 568 491 548 249
 572  65 390 176 376  95 506 255 494 592 174  73  72 488  39 145 517 332 253 356 365 400 214 371 127
 340 136 398 599 442 289  94 200 560 195  31 391  20 287 292 312 590 609 223 323 367 213 375  93 446
 450 261  11 509 198  34 551 421 192 561 303 594 621 373 157 434 190 124 166 537 187 194 182 387 188
 369 237 259 178 352 476 436 115 362 112 283 524 496 324 565  77 165 310 478 203 103 456 122 152 320
  23 402 619 535 272  87 302 173 334 489 299 248 411 536 172 354 306 114 406 405 511 515 181 254 606
  76 495 241  75 557 408 212  86 116 245 328 319 452  90 468 233  83 586 316 207 274 614 587 317 440
  50 330  43 403 459 133 264 598 531 485 392 118 111 205 615  51 240 384 490 339 228 252 605 415  84
 141 353 149 215 525 482 351 613 313  15 601 528 109 467 284  80  45 577  71 327 481 170 553 119 256
 285 355 562 335 401 503 196 329 539 338 522  12 293 443 221 472 169 101  29 113 273  24 593 620  97
 265 447 437 123  56 130 529 193 151 507 191 616 271 480 463 458 424 110 519  98 232 526  40 512  47
 465 549 381 290 418 280  64  79 492 552 229 409 121   9 625 516   4 412  53 286 461 126 396 222 386
 501 242 523 429 623 604 267 454 464  52   6 326 368  10 347 309 479 564  67  70 397 199 177  16 331
 518 142 576 483   3 125  14 158 129 430 514 227 337 186 544 425 260 336 275 603 288 235 469 282 266
 374  32 427 520 470  78   2 201 167 204 301  27 588  92 394 257 428 395 448 474 370 510 296 236 534
  88 573 304  42  48  66 276 622 184 305 431 100 607 426 244  28 363 345 294 566 410 307 542  36 618
 451 540  35 322  91 575 247  37 230 499 104 486  99 558 183 150 546 600 493 545  57 341  22 508 106

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00487e+07us (= 10048.7ms, 10.0487s)
Satisfaction error: 3
Number of search iterations: 3817
Number of local moves: 3144 (including on plateau: 3097)
Number of local minimum: 34 (including on plateau: 403)
Number of resets: 0
Number of restarts: 0

Problem in row 10: 572 65 390 176 376 95 506 255 494 592 174 73 72 488 39 145 517 332 253 356 365 400 214 371 127 => the sum is 7447 rather than 7825
Problem in row 13: 369 237 259 178 352 476 436 115 362 112 283 524 496 324 565 77 165 310 478 203 103 456 122 152 320 => the sum is 7474 rather than 7825
Problem in row 14: 23 402 619 535 272 87 302 173 334 489 299 248 411 536 172 354 306 114 406 405 511 515 181 254 606 => the sum is 8554 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 261 135 530 137  92 504 316  80  33 257 444 223 558  24 509 596 258 426 542 224 487  46 219 371 553
 246 405 578  59 590  78 588 345 228 302 382 415  19 187  25 447 103 308  56 520  40 399 469 565 471
 431  27 241 310 170 128 144 502 306  17 517 386 130 571 521 132 365 460 548  89 367 499 586 377   1
 323 231 286 282 362 598  48 620 523  57   5 276 133 601  77 373 547 408 294 243 608 525 503 512 331
 105 421 480 192 515 519 609  12 604 368  51 557 178  10 375 227 107  38 396  21 474 569 332 165 500
 112 491 188 251 556  54 513 477  30 143 151 611 136 342 453 264 559 617  81 482 457 163  88  31 575
 411 212  93 518  79 585 311 573 199 614 360 147 410  34 339 539 102 146 378 193 527 116 574 182 183
 478 624   3  45 470 232 458 437 312  61 537  18 473 427 203  69 450 164 438 290  13 197 459 549 418
 141 285  39 398 262  32 131 118 414 584 234 348 572 461 387 210 423 280 153 607 538 148 472 449 139
 524 452 479  37 159 507 301 204 576 108 114 126 363 374 226 406 495 100 543 506 211  91 385 463  75
 349 200 369  95 327  84 352 419 361 445 516 124 356 370 404 492 334 235  65 325 429 467 412 289   6
 355 330 263 347 336 344  42 300 313 366 328 307 321 329 216 340 357 322 436 317 341 314 225 380 296
 191  76 309 287 416 156 464  60 456 393 623  82 379 205 247 129 422 106  35 145 189 250 389 475 400
 293 272 430 333 288 579 295 255 277 291 320 229 270 274 337 273 249 265 381 440 284 298  70 568 254
 177 359 201 564 230 428  47 240 501 420 215 567  98 466 335  20 206 168 605 593  68 508 435  16 358
 171 256 622 268  15 220 260 160 595 266 540 618 292 490 446 390 217 465 152 202 155 394 218 176 237
 625  55 127 392 269 167 561 552 233 554  96 278  73 208 207 526 238 169 443 407 239 253  14 562 577
  44 551 498 186  41 324 161 121  71 532 485 221 496 214 613 522 570 545  43 417 591 271  52  94 162
 397 592 550 391 354 111  99 434 319 448 196 413 536 173 594   8 166 534 364  22 175 402  26   7 514
 468 388 454 616 305 275 544 158 140 528 511 455  53 582 123   9 113 384 299 138 346 104 110 142 580
 581 157 109 510 117 529 560 489 154 184 195 555 486 122 350 441 119 603 297 451  49  86 222  83 376
 315 283  90  72 621 439 185 409 372 198  62 615 619 242 120 606 612 181 190 442 134 351 343 209 115
 213 483 462 403 267 245 433  97 600   2 383 101 563 546  58 244 318  66 425 252 535 303 531 259  36
 610  64 401 599 589 602  50 180  29 194 281 125 248 424 488 326  11 497  74 432  87 566 150 304 494
   4 476  23 533 395  85 353 583 179 493 279  28  63 149 172 236 484 338 587  67 481 505 541 597 174

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00489e+07us (= 10048.9ms, 10.0489s)
Satisfaction error: 3
Number of search iterations: 5499
Number of local moves: 4224 (including on plateau: 4175)
Number of local minimum: 93 (including on plateau: 499)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 323 231 286 282 362 598 48 620 523 57 5 276 133 601 77 373 547 408 294 243 608 525 503 512 331 => the sum is 8766 rather than 7825
Problem in row 13: 191 76 309 287 416 156 464 60 456 393 623 82 379 205 247 129 422 106 35 145 189 250 389 475 400 => the sum is 6884 rather than 7825
Problem in diagonal 0: 261 405 241 282 515 54 311 437 414 108 516 307 379 274 335 390 238 545 364 138 49 351 531 304 174 => the sum is 7923 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 395 593  88 181 199 173 466  13 585 611 138  31 195 459 379 163 114 223 362 240 134 606 487 387 603
 244  19 623 599 175  45 380 570  93  86 484 101 316 582 488 412 160 397 418 352 491   8  67 584 131
 133  22 246 586 468 216  52 308 272 489  95  83 605 581 234 404 120 587  74 482 100 402 556 621  89
 564  55 111 614 106 224 619 166  58 156 576 149 132  17 392 135 498 580 612 112 122 527 501 177 622
 192 250 577 180 500 339 188 529 227 552  73 426 507 271 613  26 323  70 311 273 174 407 259 554   4
 523 524 198 196 384 478  41  43  78 162  61 503 358 366 248 539 511 447  44 483 442 141 207 504 344
 530  96 143  18 158 254 113 348 493 481 373  37 431 313 480 470 608 575 444 189  49 331 372  40 479
 117  42 450 340 573  48 381 446 416  33 119 472  60  80 521 438 588 368 583 349 476 286 170 360 109
 408 590 399 374 417 415   7 455 377  56 334 197 496 437 435  30 428   5 105 354 203 225 376 237 465
 425 513  11 424  36 136 371 414 151 388 401 589 350  20 485 346 410  21 243  97 566 494 531  28 375
  64 152 475 102 616 624 249 208 452  85 562 462 218 469  91 579 115  77 110 553 205 184 571  59 543
 363 526 159 509 471 200  81 411 536 353 497 201 440 370  87 617 236 137  65  35 467 357 213 108 386
 322 321 303 275 295 294 341 335 298 327 364 289 336 325 343 262 326 309 330 291 288 268 283 393 307
 304 598 427 270 318 319 209 310 266 274 190 314 305 282 317 320 297 299 290 292 235 264 263 457 405
 597 153 107 558  34 433 128 510 569 193 267 615 155 165 118 277 228  82 591 342 211 361 139 607 385
 460 473 413  92 601 456 258 169 150 202 255 383 441 164 378 285 276 519 157 154 515 420 226 306  72
 123  46 256 293 329 567 422  54 239 545 620  39 338 534 561  16 351 502 315 238 495  50 594 230  68
 563  15 296  38 434 532 499 167 557 210 423 572 398 215   9  57 559 451 194 522 233 125 436 251  69
 214 618  62 506  94 547 365  71   1 369 241 116 390 186 257 574 533 596 172 430 518 168 281 333 183
 625 367 602 492 220 147 300 463  24 448 176 535   6 161 221 560   3 280 443 247 252 541 347 302  63
 445 548 505 142 146 104 528 337 328  29 477 204 232 400 148 103  23 178 359 409 217 568 396 550 449
  32 464 389  76 245 332 546 525 514 432  98 242 453  47 578 231 127 419 144 600 565 130 126   2 508
 145  99  53 301  12 592 551 187 312 595 544 461  51 549  14 324 454 206 490 517 129 516 265 179 279
  10 512 538 406 555  90 121 604 355 537 391 520 421 222  25 171  79 219 429 140 382 185  84 287 542
  27 229 394 253 439 260 609 182 474 212  66 284 191 610 403 486 458 278 540 124 356 261  75 269 345

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.0079e+06us (= 7007.9ms, 7.0079s)
Wall-clock time (full program): 7.05696e+06us (= 7056.96ms, 7.05696s)
Satisfaction error: 0
Number of search iterations: 2941
Number of local moves: 2411 (including on plateau: 2360)
Number of local minimum: 30 (including on plateau: 294)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625 374 272 229 149 551 362 121 282 365  18 201 240 249  76 609 591 174 369 495 187 281 137 535 333
 569 575 542 298 587 456 343 173   4 564 523  73 308  93 270 273 193 246 536  66  15   8 496 334 280
 382 562  29  51 498 502 108 383 134 411 151  74 384 358 518 582 122 520 244 325 553 133 259 222 320
 338 155 503 531 136 206 514 228 623  12 307 141 256  47 208 263 566 346  22 600 400 314 556 117 436
  13  86 530 160 506 621 543 295 473 254 615  32 508 162  82  67 491  77 101 560 377 485  83 612  92
 183 310 265 453 120 488 250 505 395 156 585 404 237  43 592 489  14 312 269  97 292 202 126 605 433
 462 412   7 344 258  41 460 225  55 186 138 268 306 474 379 567 386 555 444 424 239 468 221 311 195
  40 557  44 504  59 598 353 438 106 413 449 288 581 159 437 360 521 123 457 417 461 236 119  42  63
 414 315 447  31 373 251 356 129 599 286 454  37 205 357  20 448   3 421 540 235 405 388 608  75 428
 115 127 177 481 616 197 337 111 154 442 146  99 147 165 415 394 407 431 594 532 467 493 378 376  24
 261 410 227 145 105   1 614 361 189  38 401 178  70 571 546  36 440 528 230 494 576 125 327 345 624
 209  54 552 366 185 426 215 350 577 409  46 349 170 434 484 463 130 613  61 483  33  69 589 275 283
 328 321 326 322 305 293 319 330 309 291 289 339 387 351 284 301 332 290 279 294 341 274 336 266 318
 302  64 529 142   5 220  60 617 102 618  23 372 482 277 611 176 527 554 118  48 207 385 558 408 420
  84 450  72 304 233 393  96 497 182  71 492 512 539 584 203 446  25 364 191 313  88 574 359 563 190
 603 371 427 285 158 370 422  39 472 168 342 416 406 128 573 216   9 181 368  21 601 568 501  28 152
 525  27 480 588 430 148  91 533 516 276 163 534 398 347 131 153 175 164 465  58  95 439 390 180 519
 331  90  81 196 475 579 218 572 243 425 544 500  35 112  80 515 396  19 329 317 511 606 381 166 104
 242 255 135 323 586 267 458  10 199  34 300 565 217 619  16 179 604 479 139 452 124 622 464 471  65
 212 403 352 570  79 110 549 245 441 510 561 455 210 476 219 100 252 262 299 103 340 113 257 278 429
 397 435 348 620 324 157 143 478 596 597 213 192 287 559 354 144 184  11 602 214 114 204  45  89 593
 211 238 538  62 316 432  17 595   2 296 487 470 524 264 171  49 541 226 335 375 490  94 194 443 363
 423 486 469  30 297 355 116  26 260 399 109 522 607 509 459 389 167 451 132 234 610  87  53 466 169
 550 231 232 253 548 107 303 392 545  57 391 224  50 419 499 161 526 380 188  85 247 507 140 200 590
   6 517 241 537 477  56 578 172 367 547  78 580 271  68 198 445 223  98 513 583  52 150 248 418 402

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00026e+07us (= 10002.6ms, 10.0026s)
Wall-clock time (full program): 1.00509e+07us (= 10050.9ms, 10.0509s)
Satisfaction error: 3
Number of search iterations: 3600
Number of local moves: 3024 (including on plateau: 2976)
Number of local minimum: 25 (including on plateau: 357)
Number of resets: 0
Number of restarts: 0

Problem in row 11: 261 410 227 145 105 1 614 361 189 38 401 178 70 571 546 36 440 528 230 494 576 125 327 345 624 => the sum is 7842 rather than 7825
Problem in row 21: 397 435 348 620 324 157 143 478 596 597 213 192 287 559 354 144 184 11 602 214 114 204 45 89 593 => the sum is 7900 rather than 7825
Problem in row 22: 211 238 538 62 316 432 17 595 2 296 487 470 524 264 171 49 541 226 335 375 490 94 194 443 363 => the sum is 7733 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 218 316  63 208 620 154 220 159 264 418 502  29 556 457 314 308 113  96 570 367 554 283 598 424  14
  19 251 489 501 254  58 405 538 488 203 333 379  50 356 260 531 157 462 549  85 414 172 341 392 138
 523 517 563 625 372 468 189  94 452 586 270 455 274   4 445 269  10   8  67 140 330 109 239 417 399
 166 259 575  75 150 496 529 558 196 581  64 227 141 492 474 322  72 375 574 390  59 503 142  84 321
  51 128 582 365 534 312 271 258 244 495  82  18  62  89 241 355 363 135 156 255 480 232 202 509 454
 609 229 506 520 595 507  31 442 336  91 194 243 364 287 366  57 510 177 242  41 591 481 250 112  44
 589 449 282 606 235 544 215 324  39 286 394 519 508  34 193 122  28 326 459 358 410 171  68 106 560
 187   7  37 580  45 331 236 401 465   2 477 585 472 391 545 209 265 402 425 527 131  86 393 104 522
 192 143 409  43 450  16 292 441 303 513 612  60  20 541 555 411 421 225 279 300 361 380 207 353 298
 521 248 306 267 593 573  78 485 373 398 168 295 111 533 170  15 351 158 422  23 483 431 118 499 206
 473 434 123 115  46 471 511 619 611 117 134 147 186 296 136 478 447 552 231 199 288 107  99 404 601
 272 597 191 539 124 144 395 299 120 133 163 535 610 318 446 565 340 444 222  71 349 396 567 345 592
 332 334 320 315 293 284 313 359 294 327 325 346 357 338 307 290 317 169 423 291 278 297 309 305 302
 546 329 152 178 623  49 347  48 211 273 536 498 354 161 588 616 514 551  12 494  42 311 183  93 116
 240 350 476 100 185 188 263 370  83 618 253 381 219 607  13  35  69 342 613 428 559 490 493 412  38
 214 397 337 430  36   1 543 482 162 460  21 432 515 439  56 175 571 101  65  77 461 224 578 464 584
 528  81 624 181 516 262 491 129 213 458 160 261 470 182 376 249 179 448 137 602 266  61 557   6 388
 276   9 201 382 151 198 621 216 547 304 352 139 153 569 407 579 285 374 348 440 173 223 542 234 102
 176 525 108 403 280 443 167  53  33 339 289 247 587 119 378  80 233 608 180 200 467 451 416 479 564
 456 504 387 427  73 165 518 360 599  92 594 174 252 148  17  70 433 497 532 212  11 605 384 310   5
  30 614 226  90 230 385  27  54 505 190 484   3 155 277 275 463 281 600 130 576 603 550 221 369 487
 114 526 530 486 540 245  87 319 562 437 228 419 386  26  98 561 615 132 371 383  95 125 126 204 210
 110 435  97 246 436 622 335  32  66  55 413 604 164 205 617 438 146  47  52 512 197 577 466 524 429
 400  22  24 103 368 566 145 590 184 344 415 257 453 408 469 127 537 328 377 553 149 323 238 420  25
 583 121 217  40  76 343 596 195 475 105 362 572 406 548  79 500 568 268 389 301  74 237  88 256 426

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00483e+07us (= 10048.3ms, 10.0483s)
Satisfaction error: 3
Number of search iterations: 5446
Number of local moves: 4064 (including on plateau: 4015)
Number of local minimum: 104 (including on plateau: 507)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 51 128 582 365 534 312 271 258 244 495 82 18 62 89 241 355 363 135 156 255 480 232 202 509 454 => the sum is 6873 rather than 7825
Problem in row 12: 272 597 191 539 124 144 395 299 120 133 163 535 610 318 446 565 340 444 222 71 349 396 567 345 592 => the sum is 8777 rather than 7825
Problem in diagonal 1: 14 392 239 503 480 41 459 402 421 15 136 318 357 498 253 460 213 216 167 165 230 486 97 22 583 => the sum is 7167 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 621 239  32 254 170 576 569 248 173 190  90 478 565  87   6 218 367 506  97 567 458 191 113 566 444
 195 597 121 262 208 257 542 110 124 616 440  15 460 607  46 515 609  47 587 408  82 216  40 219 502
 459  62 564 573   8 265 619 418 180 331  78 134 374 268 348 430 473 518 600  55 100 188 419 151 210
 520 292  88 535  94 101 586 509  95 516 392 588 412 214  63 238 200 259  25 584 123 510 125 242 514
 256 435 387 570 529 454  48 270 591 594 133 119 574 277 523 548 590  42 519 202 389 512 118 434 116
 429 482 282 102 464 495  66 558 155 140  79 263 165   4 488 492 326 562  84 246 468  36 479 579 381
 283  73 193 162 489 395 469 260 552 487 622 129  27 138 448 135 160 205 147 318 524 357 471  16 450
 142 172  85 157 580 106 310 475 438 480 498 235 203 403 526 385 431 150 505  22  23 179 497 217 606
 508 370 455 493 178  14 109   9 319 105 128 406 267 174 528   7 359 363 149 396 531 578 608 362 409
 159 614 615  21  28  76 107  34  17 400 445 618 595 511  52 423 503 568 405 472 177 557 583  39 250
 330 349 251 352 313 377 375 369 221  29 341 380 538   3 376 347  77 379 366  54 364 368 613 163 490
 351 327 344 391 378 358 335 346 294 340 365 307 339 304 320 287 333 309 201 361 284 328 171 300 152
 332 343 354 323 274 311 278 345 338 288 293 298  72 286 317 544 312 290 314 334 321 337 315 301 305
  69 182 130 356 620 422 207 281 399 398 383 296  93 407 611 234 499 604 360 198 426 132  31 158 329
 249 126  98 596 189 276  50 545 402 168 522 397 108 442 206 306  11  20 425 303  44 457 443 481 141
 416 231 404  45 295 373 194 543 521 258 224 441 485 297 196 280 269 230   2 241 325  89 388 466 612
 549  35 504 453 439  24 541  61 308 456 169 530 131   1 532  70 225 553 476  67 245 410 143 561 342
 602 465 302  75 244 623 164 212 446 279 136 166 139 229 401 474 197 204 571  60 537 513 546 222  18
 560 598 603 322 393 534 507 382 240  68 266 232 417 111 420 153 447 161 187 501  49  96 223 336  19
 285 437 233 353 462 582 540 137 291 563 243 536 253 486 115 386  26  80 215 181 236 176 184 599 226
 146 428 394 390 273 220 237 316 539  91 496  51 427 575 289  86 275 114 449 601 154 463 271 355 185
 261 156 491 625 272 192  38 525 500  33 517 461 112 550 213 120  59 559 247  74 617  56 533 415 199
  81 183 117 145 484 175 411 104  64 432 483 556 589 452 350 494  71 371 211 433 547  58  65 577 372
  12  57 551 103 186  92 424 624 581 436 477  41 252 414  30 610 451 467 299 554 209 413 122  53 470
  10 572 227 167 255 527  99 144  37 127   5 148 228 585 421  43 555 264 384 593 592 605 324  13  83

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00494e+07us (= 10049.4ms, 10.0494s)
Satisfaction error: 6
Number of search iterations: 3638
Number of local moves: 3023 (including on plateau: 2978)
Number of local minimum: 24 (including on plateau: 341)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 256 435 387 570 529 454 48 270 591 594 133 119 574 277 523 548 590 42 519 202 389 512 118 434 116 => the sum is 9230 rather than 7825
Problem in row 7: 283 73 193 162 489 395 469 260 552 487 622 129 27 138 448 135 160 205 147 318 524 357 471 16 450 => the sum is 7510 rather than 7825
Problem in row 10: 159 614 615 21 28 76 107 34 17 400 445 618 595 511 52 423 503 568 405 472 177 557 583 39 250 => the sum is 8269 rather than 7825
Problem in row 15: 249 126 98 596 189 276 50 545 402 168 522 397 108 442 206 306 11 20 425 303 44 457 443 481 141 => the sum is 7005 rather than 7825
Problem in row 24: 12 57 551 103 186 92 424 624 581 436 477 41 252 414 30 610 451 467 299 554 209 413 122 53 470 => the sum is 7928 rather than 7825
Problem in row 25: 10 572 227 167 255 527 99 144 37 127 5 148 228 585 421 43 555 264 384 593 592 605 324 13 83 => the sum is 7008 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 198 376  70  72 448  92 200 614 412 174  74 353 521 481 499 613 253 243   3 385 392 133 203 424 592
 500 557 125 289 618 197 422  83 425 504  25 190 161 529 475 176 145 366 600 259 235 586 202 580 547
 367 573 579 241 562  21 333  85 597  64  18  50 561 476 393 380 527   5 142  34 542 535 556 131  53
 275 528 308  76 485 179 413  12 267 262 237 270 599 384 456 526 609 313   2 177 191 538 168 113   8
 461 407 537 151 280 484 209  68 620 615 517  44  66 147 570 137 141 513 522  58 251 127  67 494 339
 132 501 434  84  62 405 515 541  90  96 427 192 611  35  16 486 359 498 492 490 160 534  33 460 172
  89  30 112 219 350 539 431 543 110  39 114 158 433 459 488 440 163 175 443 314 519 423 491 386 357
 216 509  57 338 159 206 503 326  45 146 249 619 349 115 187  55 214 390 291 257 605 436 374 608 571
 205 134 383 432 348 426  19 610 546 554 327 465  73 102 153 516 406 355  82 361  29 178 582  81 458
 104 358 166 564 228 468 263 510 455 368 411  40 578 239  95 356 189  99 447  37 371 594 238 173 474
 362 123  42 398 457 482 369 463 354 154 583 617  79  97 335 414 231 598 150  32  10 545 381 532  17
 441 623 183 387 230 445   1 109 103 429 399 536  49 311  11 181 344 365 264 590 164 255 437 435 533
 302 292 309 379 319 301 322 310 290 282 300 330 336 337 325 283 316 303 307 332 331 261 312 352 294
 334 296 321 268 318 287 295 293 299 328 247 297 306 225 305 544 514 246 466 278 265 347 252 236 258
 612 274 277 240  26 281 560   6 382 364 279 298 284 233  59 342 523 421 569 587 207 254 229 242 276
 530 152 285 138  31  46 210 572 195 286 502 377 400 552 122 266  51 606 444 505 139 107 520 201 588
 410 260 343 518 446 135 595 144 213  13 483 199 320 375  38 559 576  63 346 464 477 119 271  88 370
 218 317 478 487 221 391  22 169  94 563 167 220 162 155 315 593 101 524  60 550 581 438 415 479 105
 126 402 469 416 409 165 496 449 567 417 215 525 194 601 185   4  61 388  98 345 473 204 269 340   7
  75  93 489 188 591 124 420 625  27 193 128  47 360 217 428  20 329 577 373 121 495 493 111 548 211
 404 454 372 157  80 621 149 140 508 227 566 256 462  78 558 453 351 273 511 100 304 378  41 196 186
 555 224 549 118 553 363 401 148 108 602 616 584 129 497 585  14  48  87 170 408  91  23 389 341 222
 248 208  65 574 396  56 418 117 244 531 451 540 506 226 397 171 450 136 589 470 156 272 120  54 430
 575  28 622 467 184 604 182 323 480 143 419  15 234 403 223 116 452 212 130 439 442   9 568  43 512
  86 106 250 624  24 507  77 565 394 471  71 603  52 551 607 180 472  69 324 232 395  36 596 288 245

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00504e+07us (= 10050.4ms, 10.0504s)
Satisfaction error: 3
Number of search iterations: 3685
Number of local moves: 3057 (including on plateau: 3008)
Number of local minimum: 31 (including on plateau: 374)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 500 557 125 289 618 197 422 83 425 504 25 190 161 529 475 176 145 366 600 259 235 586 202 580 547 => the sum is 8796 rather than 7825
Problem in row 4: 275 528 308 76 485 179 413 12 267 262 237 270 599 384 456 526 609 313 2 177 191 538 168 113 8 => the sum is 7396 rather than 7825
Problem in row 20: 75 93 489 188 591 124 420 625 27 193 128 47 360 217 428 20 329 577 373 121 495 493 111 548 211 => the sum is 7283 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625 227 244 404 609 171  57 113 410 177 165 337 103 431 387 110 570 612  33  56 532 151 478 226 597
 162 602 511  69 435 209 280  65 490 399  20 472 405 458 157   4 423 114 572 598 514 376 192 128 170
 496 147 119 350 381 379  77 161 429 141 178 271  16 120 525 581 552  83 493 505  38 573 517 249 444
 499 397  24  14 551  72 117 523 388 454 164 428 239 122 326 344  52 539  55 480 211 548 224 541 513
 236 560 317 372 238 559 562 193 115  27 538 611 467 569 543 182 408 137 307 563 411 186  11 547 191
 460 555 360 521 309 492 417 131 508 149 565  70 124 485 440 491  25 138 199 176   6 125 497 140 202
 385 504 336 445  13 402 463 365  40 322 288 302 495 144 292 564 247 101 457 169 213  22 589 148 519
 591 269 312 502 104 448 338 430 126 450 295 418   5 155   9 190 235 469 509 329 346 422 253 588  32
 409  82 623  21  95 412 452 451 438 420 426 407 319  46 433  81 419 398 187 427 320 373 382   8 196
 437 456  99 413 400 580 531 473  30 371 201 215 243 395 601 230 421  39  91 476 453  50  31 471 118
 355 515   2 174 351 318 375  43 392 335 324  96 357 221 358 314 356 345 533 386 362 349 550  60 354
 166 528 585 364 474  86  59 203 596 136 248 311 512 266 527 283 123 313 557  54 181 167 553 291 242
 159 160 464 441 619 296  92 567 526 210  10 390 172 361  71 366 333 416 233 394 537 206 105 208 489
  29 332 330 575 593 276 334 265 290 321 245 310 298 300 316 294 286 231 303 305 256 549 246 277 264
 325 129 150 331 132  62 503 447 143 546 484  85 468  80 257  58 461 225 369 173  53 343 393 389 434
 281 466  15  79 222 263  64 578 287 102 518 145 558 306 258 586  45 443 415 106 498 273 240 482 595
 348 134 486 542  76  61 185 613 267 153 617 566 367 488 479 260 197  84 297 529  18 285  23 370 380
 261  34  51 483 195 289 459 220 477 308 442 152 383 620 228 205 540 339 234 214 342 510 449 278 112
 414 624  44 272 507 622 163 340 188 535 391 183 270  48 522 577 341 328 207  26 200 439 142 425  17
 576 217 571  94  98 168 189 544  88 323  63 212 599 359  90  87 516 216 603 107 223 606 608 262 406
 116  12 594 100  97  36 304  37 158 255 175 524 352 579 154 520 237 500 432 605 494 583 274 554 133
 108 268  19 604 139 584 582 396   7 614  66 378 455  89 232 610   3 556 198  75 254 130 501 470 487
 204 347 587 279 219 530 618 229 250  93 465 301 111 299 368 616 127  41 315 436 600  67  47 401 275
 109   1 446 135 462 475 353 282 621 377 363 592 180 481  73 194 615 590 184 384 545  68 146  28 121
  74 259 536 241 506  35 251 156 561 607 574  49 327 403 179  78 293 568  42 252 218 424 374 284 534

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00481e+07us (= 10048.1ms, 10.0481s)
Satisfaction error: 3
Number of search iterations: 5011
Number of local moves: 4075 (including on plateau: 4027)
Number of local minimum: 54 (including on plateau: 505)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 236 560 317 372 238 559 562 193 115 27 538 611 467 569 543 182 408 137 307 563 411 186 11 547 191 => the sum is 8850 rather than 7825
Problem in row 6: 460 555 360 521 309 492 417 131 508 149 565 70 124 485 440 491 25 138 199 176 6 125 497 140 202 => the sum is 7585 rather than 7825
Problem in row 15: 325 129 150 331 132 62 503 447 143 546 484 85 468 80 257 58 461 225 369 173 53 343 393 389 434 => the sum is 7040 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625  74 427 354 619  11 106 145 604 133 254 348 332 154 521 591 614 476  71  51  17 507 278  87 426
 553 601 607 301 379  14  15   1 419  73 449 315 108 524 605 506 511 331 323 235 547 434 497 573 114
 314 398 560  80 113 479 588 159 392 492  63 221 508 166 446   9  25 291 589   4 347 484 540  65  64
 313 552  75 269 597 564 527 288 570 223 325 561  30 613 198 523 181 120 220  83  92 188 324 187 202
 532  13 151 232  94 371 618 265 353 125 510  89 111 567 399 488  40 577  61 460 481 373  26 501 388
   6 486 487   5 380 495 413 472 308 253  36 490 471 500  41 135  85 131 384 407 482 599  67 123 569
 116 579 558 126 346 174 147 201  66 417 509 112 144 208 505 124 383 191 470 554 350 525 450 204 366
 230 425  59 246 179 264 363 444  60 374 173 582 367 583 463 229 457 396 403  82 238 356 110 186 556
 402 448 255 539 551 146 516  34 381 563 222 428 212  43 189 443 321  55  18 163 529   2 393 401 571
 513 409 242 503 137 616 193 306 504 414 295   7 103 389  22 467 473 345  96 217 610 412  88 162 302
 119  12  68 391 559 349 224 385  29 441  20 243 491 499 355 328 442 404 468 344 580 241  53 549 231
 150 624  54 584 480 400 566 526 138  37 590 299  69 359 271 227 213 175 143 185 465 452 152 228 438
 200 149  10 165 375 576 372 262 546 515 439 612 237 170 101 545 300 352 326 606  56  57 369 600 415
 341 298 303 329 294 290 423 297 277 533 395 289 319 252 171 342 432 360 292 236  24 244 603 377 104
 247 275 370 469 279 261 260  98 282 258 602 245 225  72 280  58 574 456 183 411 330 218 517 283 572
 408 178 337 557 322 595 418 161 485 209 320 429 462 240  21  27 214  46 609 483 155  39 257 268 585
 273 216 195 378 226  81  49 596 263 339 581 304 405 451 293 272 190 357  45  78 336 312  44  23 296
 592 368 386 361 251  62 215 520 177 249 148 498 158   8 394 234 136 541 362 210 164 578 611 318 284
 122 543 522 440 474 512 184 623 139  35 121 205 285 458 182 206 286 621 142 565 140 132 334 475  79
 496 180 266 617 129 160 310 531 194 535  48 168 514 534 309   3 382 416 102 519 109 100 305 437 461
 562 267 478 466 134  76  84 130 338 270 192 197 615 376 537 233 153  32 593 340 477 542 317 397  19
 199 127 422 105 248 196  93  52 316 445 538 550 586 343 211 157 390 117 518 327 406  95 598 530 256
 431 259  38  77 459 435 203 410 287 169 620 424  97 167 575 536 455 156 493 430 176 239 219 454  16
  50  70 333  90  28 387 502 568 250 365  99  91 555 107 128 594 453 544 494 528 433 489 587  33  47
  31 274 622 141 172 311 436 351 447 358 276 118 421  42 608 548 115 335 420 307 281 207  86 364 464

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00496e+07us (= 10049.6ms, 10.0496s)
Satisfaction error: 5
Number of search iterations: 4489
Number of local moves: 3718 (including on plateau: 3672)
Number of local minimum: 38 (including on plateau: 439)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 553 601 607 301 379 14 15 1 419 73 449 315 108 524 605 506 511 331 323 235 547 434 497 573 114 => the sum is 9035 rather than 7825
Problem in row 3: 314 398 560 80 113 479 588 159 392 492 63 221 508 166 446 9 25 291 589 4 347 484 540 65 64 => the sum is 7397 rather than 7825
Problem in row 13: 200 149 10 165 375 576 372 262 546 515 439 612 237 170 101 545 300 352 326 606 56 57 369 600 415 => the sum is 8355 rather than 7825
Problem in row 17: 273 216 195 378 226 81 49 596 263 339 581 304 405 451 293 272 190 357 45 78 336 312 44 23 296 => the sum is 6603 rather than 7825
Problem in row 25: 31 274 622 141 172 311 436 351 447 358 276 118 421 42 608 548 115 335 420 307 281 207 86 364 464 => the sum is 7735 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 370 531 129 588 499 407 270 467  31 391  50 318  49  26 149 452 123 440 610 104 482 446 134 138 621
 394 593 161 145 299 139  83 569 248 301 597 109 323 286 122  58  72 553  71 572 295 609 263 574 389
  17 172 504 406 474 560 444 166 181 404 352 414 546 416  56   8 348 227 238 199 131 476 600 113 373
  84 563  77 517 489 374 110 390 189 156 534 312 462 150 589  61 133 152 330 514 392 380 363 159 345
 443 126  97 218 582  62 555 111  57 558 583 163  13 577 365 119 585  33 253 544 481 213 532 359 196
 193 332 211   9 219 529 369 496 148 296 541 433 619 405 186  89 371 543 500  19  79 580 108 457  93
 343 309 554 337 325  47 470 184 105 142 280 350  59 403 237 557 375 523 524 399 283 372  32   4 611
 608 215  60 225 512 275 445 422 617 102 231 535  74  39 266 261 575 393 239 192 188 287 490 162 412
 442 254 561 397 354 615 601 294 155  95 229 521 214 336  23 379 425 506 154  21  40  98 587  87 437
 117  35 230 485 550   5 256  52 420 423 300  43 599 453 586 419 519  92 613 431 606 185 340   1  65
 167 426 228  48 570 551 322 552 612 479 335 415 100 157 401 141 112 358 428  82 461 202 127  88 463
 255 274 223 362 449 386 383  66 355 396 284 281 251 314 290 447 356  73 179 438 398 321 382 342 320
 153 326 455 377 311 277 344 250 418 618 271  55 473 328  96 164 387 246 351 395 272 258 146 486 368
 424 508 252 160  51 217 259 594  70 507 118 307 194 388 346 347 292 182 548 244   3 518 310 602 384
 308 469 245 291 191 503 542 432 269 491 222 540 241 304 240 487 333 247  36  53 107 430 212 578  54
 595 197 209 498 466 124  41  64 249 279 282 273 513 276 313 128 137 591 567 183 545 173 547 236 339
  18 143 525  29  38 502 623 288 620 101 408 316 429 364 477 472  27 319  68 180 115 478 200 536 549
 190 168 530 573 484 497   7 130 267  30 306 411 537 353  86 576 616 204 235 195 510 501 207 170  42
 511  44 385 376 367 450 233 581 556 174 378 315  99 598 436 203 361  90  22 480 268 187  28 451 232
 475 421 559 495 198 177 151 208  94 171  76 400  75 564 604 515  67 121 441 106 285 264 538 454 366
 169 493 260  78 120 327 427 136 624 165 297  20 317 605 103 216 468 483 114 568 381 262 596 571  25
 565 488 603  91  81  14 289 257 243 417 357 144 592 116 562 334 410 439 265 527  12 201 338  24 456
 590 329  45 135  69  15 413 402 460 303  37 360 533 176 158 622  46 579 464 522 528 226   6 458 349
  63  85 516 526 125 278  10 205 539 584 625 224 293  16 614 465  80 221 435 448 492  11 234 434 302
 331 324 206 459   2 494 178 509 298 242 132 566 220 175 520 305 607 210 140 409 471 147 505 341  34

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00496e+07us (= 10049.6ms, 10.0496s)
Satisfaction error: 1
Number of search iterations: 5354
Number of local moves: 3683 (including on plateau: 3591)
Number of local minimum: 147 (including on plateau: 420)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 621 574 600 380 481 19 524 393 425 419 401 314 473 307 222 279 620 130 233 177 120 91 45 85 331 => the sum is 8264 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  40 246  12  76 189 144 164  69  88 320 595 522   1 316 230 624  62 388 500 267 262  97 450 598 572
 252 253  70  33 361 160 439 143 475 302 417 459 594 276 597 289 272 228 473  82 354  79 384 306 527
 167 575 622  66 538 586 269 469 173 552 615  94 534 136  21  25 392 460  73 581  23 279  47 486  42
 193 233 251 478 328 545  41 109 363 474  67 432 274 580  20 342 470 115 168 172 446 453 600 565 106
 322 564 191 159 293 394  37  77 214 248 226 365 105 452 535 505 236 503 553 395 402 264 111 550 124
 625 421 244 619 179 447 485 295 260  90 465  38  50 196 403 239 393  18 277 515 462 255 227 241  46
  11 558 524 331  84 436 222 490 412 409 132 163 184 220 437 242 186 495   5 557 511 391 121 481 223
 192 623  54 431 499 442 424  32 464 488 330 441 606 463   3 599 271 297 435  31 102 133   9 399  57
 183 209 201 381 336 273 270 188 574 343 573  26 443  22 380  87 467 190 401 165 579 604 471  92 367
 607 315 317  61 554 303 145 468 577 544 560 596  52 489 448 208 430 162 198  19 104 476 194 178 107
 496 199 360 386 234 390 532 351 341 492 364  48 366 371 114 153 313 414 396 359 152  98 197 373 326
 307 286 118 583 182 375 350 332   2 254 374 324 357 520 369  36 372  86 370 344 337 291 576 346 334
 356 362 348 285  53 335 299 298 319 329 305 300 318 314 321 312 290 308 304 333 282 311 494 340 309
 161  35 440 135 325 268 147 257  30  95 358  43 487 169 537 587 562 408  56 502 510 148 482 536 547
 531 288 569  85 477 411  45 123 218 128  58 497 546  10 345   6  34 610  71 368 517 508 578 323 479
 582 466 310 166  59 493 539 284  74 176 434 122 141 549 612  55  15 559 509 139  49 154 480 571 287
 413 530 601 221 516  63 385 216 219 292  83 296 212 379 210 426 170 528 349 206 231 455 137 243 444
 526 108 407 250 150  64 294 533 377 433  44  96 181 611  99 593 507 180 609   7 280 567  51 506 352
 504 249  27 541 570 472 140 416  91 200 501 514 261 556 281   4 519  28 130 454 561 415 126 110 155
  75  60 425 498 211 513 566 568 225 338 175 457 427 156 521  17 603 265  89 422 406 174 117 258 259
 119  81 525 529 484  65 419 142 456 204 158 134 551  78 491 512 590 240 283 232 237 613  39  29 614
  93 217 542 592 205 266 138 616 588 202  16 548 404 224 355 621 131 116 129 449 418 438 339 146 187
 383 113 185 278 410  72 247 195 618 585 275 540 256 397 203 327 301 428 602 245 101  14 617  13 420
 458 429 100 263 353 151 620 563 518 207 177 423 451 238 213 555 171 584 400 605 112 125 589   8 398
 229 405 382 378 235 157 608 591 149 120 523 347  24 103  80 461  68 215 445 376 387 483 389 127 543

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00412e+07us (= 10041.2ms, 10.0412s)
Satisfaction error: 5
Number of search iterations: 3755
Number of local moves: 3148 (including on plateau: 3101)
Number of local minimum: 23 (including on plateau: 396)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 40 246 12 76 189 144 164 69 88 320 595 522 1 316 230 624 62 388 500 267 262 97 450 598 572 => the sum is 6832 rather than 7825
Problem in row 6: 625 421 244 619 179 447 485 295 260 90 465 38 50 196 403 239 393 18 277 515 462 255 227 241 46 => the sum is 7490 rather than 7825
Problem in row 10: 607 315 317 61 554 303 145 468 577 544 560 596 52 489 448 208 430 162 198 19 104 476 194 178 107 => the sum is 8112 rather than 7825
Problem in row 22: 93 217 542 592 205 266 138 616 588 202 16 548 404 224 355 621 131 116 129 449 418 438 339 146 187 => the sum is 7980 rather than 7825
Problem in row 24: 458 429 100 263 353 151 620 563 518 207 177 423 451 238 213 555 171 584 400 605 112 125 589 8 398 => the sum is 8711 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 180 362 453  36 476 219 500  26 548 127 234 152 429 225 109 595  60 443 574 588 223 104 586  90 486
  31 526 516 532 276 462 256  70 226  94 158 559 383 566 210 379 286 254 423 570 345   6 259  58 380
 207 552 619 591  24 569  68 317 138 241 444 135 488 454 386 388  62 339 547 214  15 163 302 374 188
  91 543 266 601 153 425 162 396 333 496 129 168 472  67  95 596 186  71 418 282 222 523 359 277 494
 275 412 598 468 517 184 279 139 562 541 384 145 489 216 107 485  77 238 203 404 284 319   3 475  21
 133 445 179 209  54 511  34 313 556 455 474   7 414 558 518  32 585 528 160 579 382 314 267  37  81
 271 392 452 206 257 606 490 199 437 352  56  20 285 502 504  13 615  22 446 121 322 187 243 609 218
 442 336 242  64 349 565 491 432  40 387 524  46  76 549 301 536 561 272 497 351 230  35  43 196 260
 501 533  49 406 124 273 159 309 398  98 564 508 590 181  23 111 401 506 255 217 237 134 557 318 373
  72 176  63 338   8 288 324 447 381 457 555 353 465 550 306 402  83 370 334 413  61 478 461 235 205
 451 610 114  45 499 215 325 473 211 389 356 458 421 434 350 236 166 115  42  96 194 368 321 422 514
 505  14  88 200 369 173 269 185 430 385 110 408  69 326 567 449 122 365 304 360 614 347 498 617 623
 361 329 299 612 239 297 578 327  11 315 343 348 148 262 296 310 298 245 307 354 358 263 233 293 399
 542 292 441 520 290  75 477 563 608 335 390 357 116 305 261 132 190 118 545  92  86 372 204 510   4
 427 613 150 183 471 539 469 467 165   9 268 424 265 291 330 587 247 156  93  18 540 364  84 130 535
 346 100 375 625  74 125 294 119  79 529 435 593  80 493  99 136 481 470 342  89 560 553 126 509 193
 456 554 191 171 251 355 393 622 198 149 274 492 589  41 332 120 221 308  59 208 538 164 377 513 249
 391  10  82  50 416 289 295 143 512  78 439 420 224  38 189 311 278 202 573 448 397 581 466 270 151
 341   5 394 605 618  47  51 531 340 371 177 440 128 450 568   2 410 620 146 376 303  48 378 195 281
 117  52 252 405 575 460  29  55 522 147 344 571 597 131 182 220 323 438 244  73 192 582 407 300 607
 155 175  65  17 144 167 577 232 174 616 624 113  44 170 487 583 604 621 527 201  53 436 409 228 403
 594 320 280  27 137 546 142 102 480 603  30 417 367  97 463 312 411 287  85 482 157  57 515 431 483
 246 140 507 400 328 395 602 283  33 337 101 503 108 363  28 519 426 197 521 484 415 419  12  25 433
 231 105 551 264 576  39 495 464 112  87 154  16 212 316 584 248 479 106  19 592 525 428 537 544 141
 459 229 599 250 600   1  66 611 331 227 258 172 366 240 530 123 253 534 161 213 572 580 178 169 103

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00694e+07us (= 10069.4ms, 10.0694s)
Satisfaction error: 2
Number of search iterations: 3942
Number of local moves: 3271 (including on plateau: 3223)
Number of local minimum: 39 (including on plateau: 392)
Number of resets: 0
Number of restarts: 0

Problem in row 12: 505 14 88 200 369 173 269 185 430 385 110 408 69 326 567 449 122 365 304 360 614 347 498 617 623 => the sum is 8397 rather than 7825
Problem in row 18: 391 10 82 50 416 289 295 143 512 78 439 420 224 38 189 311 278 202 573 448 397 581 466 270 151 => the sum is 7253 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 122 174 165 519 225 211 474 223 349 239 609 173   9 110 386 285 534 424  95 156 317 411 508 538 569
 438 489 345  82 212 184 201 202 388 323 555 293 578 247 284 195 263 613 138 493 208 491 290 106 207
 549 505  51 570  94 514 276 448 469 530 415 236 559 108 458 344 113  28  72  36  37 611 515 194  93
  69 115 562  89  30  34 430  99 580 364 464  63  10 450 518 391 568 161 526 513 527  22 470 354 416
 485 116 590 494  83 418 373 586  86  98 511 143 189 592 272 199  75 334  14 259 426  20 473 582 407
  44  47  96 445 314 597 343  55 235 560  91 126 507 623 547 118 298 255 437 226  76 540 447 177 621
 121 181 477 346 607 216 427  59 385 367 224 603 167 614 157 564 264 606  19 312 120 363 172  13 441
 149 550  61 175 360 558 155 624 117 561  88 378 148  79 512 422 501 169 178 267 237 539 242 584 171
 338  21 618 449 153 475 503 421 350 341 104 381  62 275  40 499 180  92 589 152 141 510 605 295 231
 150 136 524 311 403 414 234 229  50 479 316 206 243 525 576 132 289 215 387 185 436 370 573  45 397
 144 566 476 595 305 146  71 567  80 107 521  32 545 410 203 134 459 457 209 217 565 610 340  65   1
 535 241 356 140 529 168 536 435 135 192 347 296 321 425 279 405 245 482 163 428 604  81 147 130 205
 282 254 280 359 304 442 244 191 471 325 357 598 393  78 190 248 213 329 361 497 294 265 197 420 233
   2 492 324 308 383  53 556 252 145 127 506 384 328 309 318 339 315 320 451 246 291 412 376 326 262
 297 404 281  97 287 335 220 389  33 455 400 522 355 542 283  54 302 342 417 379 362 358 286  31 394
 249 585 288 257  27 594  58 251 498 374 352 462 520  57 204 502 443 188 331 332 336 523 105  39 250
 472  74 371  18 227 330 261 278 432  56 402 619 348 313 456  29 486 129 390 268 399 222 322 490 433
 596 423  12 431 109 465 170 366 483 230   7 408 554  90 372 557 232 142 454 496  84 270 221 601  52
 461  66 240 401 277 353 439  85  11 351 453 537 307 210 504 553 517  15 269 337 273 419  49 238 460
 409 396  43 214 572  26 531 271 182 544  64 164 319 333 480  23 162 541 368  77 516 114 574 434 468
  16 588 375 583 615 380 528 154 616  41 131 591 310 299   5   4 587  68 495  38 444 151 369 377  60
 625 548 440 622 600 256 101 533  87 478 112 392 102 218 111 571 137 176 123 466 139  25  48 406 509
 467 124 160  67 500 128  46 579 620 258 303 186  73  17 253 552 481 608 546 617 575 219   6 274 166
 612 429 292 183 484 133 196 300 577 159 306  24 551 413  35 103  42 532 200 365 158 100 487 563 581
 193 301 398  70 125 395 452 228 446 266 187   8 327 488 382 602 119 599 593 463 260 179   3 543 198

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.45112e+06us (= 9451.12ms, 9.45112s)
Wall-clock time (full program): 9.49983e+06us (= 9499.83ms, 9.49983s)
Satisfaction error: 0
Number of search iterations: 4189
Number of local moves: 3451 (including on plateau: 3402)
Number of local minimum: 39 (including on plateau: 425)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 623 138 403 573 213  42 276 129 576 325  23 186 444 527 558 147  21 110 609   3 121 327 478 371 602
 137 604 307 603 469 125 368 180  88  89 445 471 182 620 614 361 108  65  47 533   7 423 277 132 570
 291 537  46 176 452 126 563 337 118 520 317  39  90 484 224 503  81 474 203 561 270   6 536 406 465
 612 394 357 577 310 151 518 109 231  57 409  20 349 319 173 314 241 284  77 427   4 550 466 295 581
 192 288 248 617 521 293  36 165 281 217 515 514 133 580  41 543 202 584 218 235 494 355 131 269 153
 236 508 168  19 265 500 545 590 234  73 306  55 312 285  63 443 351 513 606 480 415  66 212 460 120
 489 251 221 247 280 350 381 379 256 455  78   5 346 462 419 441 481 145 451 177  67 156 367 382 539
 134 461 432 210  48 534 472 458 159 575 594 574 571  54  12 208 111 430 264  97 531  60 283 525  28
 511 448  14  80 549 453  26 136 434 449 540 398  16 214 428 417 149  71 473 225 569 408 502  62 253
 388  84 421  64 392 397 104  22 376 402 373 391 359  37 390 413  76 414 588 364 370 476 356 185 383
 554 130 389 454 624 259  17  72 601 274 238 589 139 592 338  40 475  25  50 124 354 544 232 516 195
 336 372 353 230  92 385 362 308 352 329 363 347 343 334 341 386 344 333 309 335 299 300 273  94 305
 127 625 244 190 135 565  74 321 199 431 613 261  43 260 535  31 529 348  98 611 318  70 166 596 435
 456 560 621 557  11 206 169  96 326 605 252 257 622 477  61 506 442 219 262  18 497 272  10  69 254
 249 229 488 568 163 222 553 384  24 342 258 374 175  91 320 162 552 546 331 279 240 463   2 524 286
 487 433 567 332 598 498 424 377 607 201 401 154 585 141 161 246 316 223 243 407  85  75  99 112  53
  27 271 378 399  86 189 360 499 209 122 528 420 207 411 530  13 174 616 562 437 564 289 250 197  87
 193 187 292 183 215 198 239 578  32 597  29 340 542  51 523 278 486 172 583 510 155 375 532 106 429
  93 255 164 140 227 619 366 405 245 541 517 509 572  45  34 242 330 459 188 315   8   1 591 547 412
  83 103 275 142 418  15 586 298 446 267 204 548 496 468 507  52 282 301 170 194 339 593 526 119 393
 324 102 178  79 114 313 150 128 610 116 152 303 483 425 450 519 184 608 148  82 410 587 490 358 512
 105 311 179 400 290 538 143 447 555 266 144 618  68 501 294 416 551 491 100 369 395 115 191 171 167
 582 404 220 323 566 205 426 595 387 396  58 117 226  44  49 211 464  56 328 181 482 522  59 467 457
 436  95 556 504 422 157 228 579   9 146 345 297 200 107 492 440 380 101 479 559 216 505 196 263 113
 160  35 304 158 365 485 439 233 470  30 123  38 322 296 268 493 495 237 438 302 615 287 600 599  33

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.1313e+06us (= 9131.3ms, 9.1313s)
Wall-clock time (full program): 9.17885e+06us (= 9178.85ms, 9.17885s)
Satisfaction error: 0
Number of search iterations: 4845
Number of local moves: 3957 (including on plateau: 3907)
Number of local minimum: 55 (including on plateau: 445)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 622 290 610 371 590  81 127 177 239 535  18 613  33 418 484 106 515 299  39  92 285 141  96 452 592
 159 600 259 487  71 581 347  58 597 377 205 123 444  55 424  15 501 114 522 435 166 333 226 574 152
 471 207 576 301 140 572 206 407 421 539 403   6 459 609  75 328 342  47 142 352   7  56 551 558  50
  66 172 524 537 307 153 596 477 310 261  94 445 525  46 138 492  22 101 296 498 577 531 311 151 195
 240  70 134 620  42 115 227 401 499 494 604 538 616 288 199 454  31 606 158 154 502 119 143 329 242
 135 392 549 370 121 503  17 387 341 293 211 250 488 267   4 617 413 125 556 481 323 107 545 241  89
 245 116 394 215 582 273 442 279 550 146 575 396 149  65 218  10 112 185 474 608  48 595 416 315 417
 560  68  69  52 193  67 509 434 362 428 252 586  16 479  53  80 541 104 291 467 164 433 446 601 570
 129 243 197 228 588 389 571  93 400  64 415   2 120 380 528 234 410 505 583 230 390 578 162 210 176
 504  78 527 618 225 270 271  99 150 384 414 216 317 565 155 357 171 203 473 108 540 348 368  62 402
 443  91 451 564  51 619 383 188 566 460 339 431  72   3 363  26 147 496 404   1 472 419 169 156 511
 180 314 160  24 621  13 482 553 179 178 559 356 139 375 491 209 543 260 397 265 254   9 393 408 463
 351 308 349 312 330 338 309 118 325 266 304 280 283 364 287 303 302 286 295 336 332 306 318 489 334
 294 361 456 292 372 229 278 231 263 557 326 274  36 255 272 475 268 439 275 552 253 256 284 238 289
 189 546 367 441 144 423 449 554   5 111 300 103 562  87 264 518 224 102 186 298 337 517 126 436 536
 432 399  85 167 236 464  77 249 319 262 510 350 305 213 544 204 614 374  76 335  82 212 579 257 480
 395 555 251 529 438 485 437 490 196 345  57  30 440 132 513 607 247 194 222 246 398 183 198 137 100
 388 563 269  45 378 297 469 429 136 170  98 208 412 532 113 411 453 514 353  41 109 237 221 493 486
 495 184 131 520 320 192 174  54 466  49 476  43 594 593 611  73  97 589 175 405 461 523  28 561  11
  95 359 354  83 420 145 235 542 448 165  44 244 426 233 321 110 365 602 526 148 598 507  21 521 313
 547 258 624 385 168  19  12 497  79 599  29 331 422  84 447 450 105 327 391 585  90 360 483  27 506
 124 455 181 122 534 369  40 386  86  20 584 548 343 603 202 587 324 516  38 200 465 161 425 130 382
 133 512  60  74 173 533 187 344 217 457 182 406 316 427 376 573 277 190 605  88 379 409 201 430 276
 591  61 223 248 567 322 355 346 612 508 468 478 117 282 163 458 232 281 340 381  63 462 615  14 219
  37 623  25 220 214 373 625  32  59 157 358 568 191 470 580 128 569 366   8 519 530  23 500  35  34

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00491e+07us (= 10049.1ms, 10.0491s)
Satisfaction error: 2
Number of search iterations: 3651
Number of local moves: 3025 (including on plateau: 2976)
Number of local minimum: 37 (including on plateau: 304)
Number of resets: 0
Number of restarts: 0

Problem in row 24: 591 61 223 248 567 322 355 346 612 508 468 478 117 282 163 458 232 281 340 381 63 462 615 14 219 => the sum is 8406 rather than 7825
Problem in row 25: 37 623 25 220 214 373 625 32 59 157 358 568 191 470 580 128 569 366 8 519 530 23 500 35 34 => the sum is 7244 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 487 375  10  75 427 536 140 605 441 323 452 128 113 554 179 122 166 138 191 512 599 151 471 457 173
 214  19 501 491 530 519  41 505  25 144 368 125 246 449 248 579 503 608  92 186 342 110  30 425 525
 622  15  52 544 618 413 232 133 528 495  99   9 477 150  11  59 527 103 593 535  27 551 239 362 431
 447  62 549  47 561  32  88  63 160 404  97 384 418  68 288 539 142 438 552 101 538 553 488 568 238
 256 106 115 448 594 377 514 573 337 378  67  46 586 456 461 176 455 451 159 124 143 475  31  95 402
 624 229 430  33 203 162 532  85 569 623 197 454 479 129 407 566 557 104 513  38   3 202 483 148  55
 324 613  87 199 234 301 589 542 470 157 309 182 607  23 171 409  29 537 474 564  76  49 533 109 237
 223 480 184 100   2 558  82 180 500 548 371 468 345 453 247  65 591 403 209 414 410 388 130 139 335
 588 218 356  34 137 390 344 575 222 567 204 220  42 211 555 379  51 254 426 183 460 398 499 243 269
 609 381 421 550 224   7 401 578  86 251 582 272  26 367  96 119 132 369 217 284 112 611 443 606  81
 459 255 302 200 277 292 252 190 178 411 260 221 279 298 602 213 227 278 242 442 465 350 428 268 436
 163 587 297 226 308 261 235 287 296 276 274 233 281 283 357 598 286 265 290 264 577 270 311 305 295
 320 562 241 621 394  89 225 300  72 348  14 385 406 285 541 346 250 316 341 366 545  45 560  43 210
 107 343 332 205 317 325  21 334 349 326 565 306 307 314 310 382 358 353 177 352 321 392 363 328 338
  94 327 370 365  16 376 121 299 521 293 424 389 463 361 396 304 405 330 374 354  60 373 185 175 450
 397 437 600  73  22 422 597 231 282 625 478 383  18 147 280 522 273  98  28 158 154 563 258 313 466
 576 472 141 504 420 146 230 570 165 167 517 585 543 494 498  35 440 489 415 476 614 198 510 540 574
 196  77 267 395 386 253 445 262 329 571  71 520 228 387 333  53 458 419 610 619 259 105 127 416  39
 212  70 249 216 493 446 291 187 372  44 245 556   5 518 391 584 486 339 435 462 523 169  61 116 355
  90 156 412 529  84 189 620 318 592  37 531 604 429 193 275 336 511  48 547 120  12 201 117  93  69
   8 464 481 516 208 434 360 312 134 423 331 615 195 380  80 408 497 219   1  50  58 524 506 485 136
  74 215  78 206 492  83 515 126 170 131  20 240 546 508 496 236 164  64 581 580 596 467 152 490 595
 507 432 469 266 123 207 263  17 572 168 603 118 534   6 444 601  66 108 155 102 359  40 172 340 433
  36 583 559 473 484 590 393 153  56   4 244  79  91 617  24  13 194 612  54 351 315 526 439 616 319
 192 347 322 509 271 417 294 400 399 111 502 303 161 174 135 181  57 482 149 188 257 114 289 145 364

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00494e+07us (= 10049.4ms, 10.0494s)
Satisfaction error: 5
Number of search iterations: 4191
Number of local moves: 3410 (including on plateau: 3365)
Number of local minimum: 33 (including on plateau: 392)
Number of resets: 0
Number of restarts: 0

Problem in row 17: 576 472 141 504 420 146 230 570 165 167 517 585 543 494 498 35 440 489 415 476 614 198 510 540 574 => the sum is 10319 rather than 7825
Problem in row 20: 90 156 412 529 84 189 620 318 592 37 531 604 429 193 275 336 511 48 547 120 12 201 117 93 69 => the sum is 7113 rather than 7825
Problem in row 23: 507 432 469 266 123 207 263 17 572 168 603 118 534 6 444 601 66 108 155 102 359 40 172 340 433 => the sum is 7105 rather than 7825
Problem in row 25: 192 347 322 509 271 417 294 400 399 111 502 303 161 174 135 181 57 482 149 188 257 114 289 145 364 => the sum is 6763 rather than 7825
Problem in diagonal 1: 173 425 239 553 143 38 474 403 51 119 602 283 406 306 424 625 165 262 291 189 208 206 469 583 192 => the sum is 7829 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 292 510 431 412 110 375 474 340 200 592 189 247 186  54  33 448 508 498 587 194 259 443 153  73 217
 556 436 511 620 502 581 495 226 164 150 529 117 231 550 395 608 575 621 264 538   8  35 523 583 176
 225 306  63 214 237  43 192 141 402 558 165 134  99 483 191 245 464   4 501 504 599 516 543 602 394
  67 444 491 513   1  45 111 349 524 151 590 505 122 190 390 459  24 406 105 442 376 453 321 549 197
 469 170 622 494 434 135  11 126  97 368 489 460 470 207 103  30 278 100 462 561 509 374 167 144 545
 124 512 140 179 329 527  18 239  40 419  46 433 238 503 223 468 439 283 320 485 493 279 203 440 445
 205 241 456 563 564 465 262 580   3 133 568  98 546 232 467 576 263 159 477  56  16  58 612  14 211
 496  72 286 455 120 619 328 449 548 521 162 537 577 115 553 233   6 421 199  21 137  39 463 244 224
  94  41 142 595 380 172  62 454  69  57 435  65 345 424 196 560 396 559 488 213  52 585  84 291 145
 386 348 113 382 243 371 409 457 173 138  87 316 404 393  92 354 389  77 413 427 388 387 152 355 571
 418 216  81 202 541 569 373 123 370 554  36 116 589  25 360 109 160  38  88 417 552 441 593 451 403
 357 325 347 310 298 341 343 362 528 372 383   2 304 353 337 323 384  15 334 358 294 351 318 317 169
 305 344 331 346 157 352 287 335 333 315 309 299 311 314 330 339 288 401 475 313 166 261 336 326 252
 312 296 324 319 273 255 600  32 275 274 308 290 284 617 158 285 280 270 342 269 338 293 295 539 297
 446 240 242  49 400 258  68 235 391 257 322 582 218 481 610 177 547 596  51  83 588  59 364 272 289
 533 236 265 222 392 484 452 204 625 266 492 219 227 212 606 422 570 175  37 215  91 307 183 234 156
 271  93 210 221 195  48 181 281 607 613 268 361  20 267  66 365 174 476 379 363 450 277  10 128 253
 367 102 551 188 473 185 526 201 101 478 171 458 107   9 530 544 327 149 430 250 532  80 437 182 447
 112 624 397 256 154  60 143  55 518 471  47 520 461 584  26 517 276  19 399 601 208 567 490 136 184
 603 407 359 377 614 130 540 562 420  85   7 438 398 415 131 127 139  27  70  95 119 411 486 499 366
 598 229 605  53 104 260 623 616 114  75 472 611 604  76 148 332  82 432 180 248 428 487 118  28 302
 385 542 209 132 482 594 282 507 251  17 557 163  79 350 500  42 230 573  86 416 178 155  23 506 566
  44 479 121 193 129 303  90  12 535 249 146 579 408 378 515   5 522 615 591 531 410 187 254 423 106
 147  34 497 480  96 425 586 405  71 198 429 246 536 519 300  89  78 555  22  64 220 574 572 381 301
  13 578  31  50 597 228 369 534 466 514 618  29  61  74 565 168 426 356 525 161 414 206 125 108 609

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00485e+07us (= 10048.5ms, 10.0485s)
Satisfaction error: 3
Number of search iterations: 4012
Number of local moves: 3286 (including on plateau: 3238)
Number of local minimum: 38 (including on plateau: 414)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 556 436 511 620 502 581 495 226 164 150 529 117 231 550 395 608 575 621 264 538 8 35 523 583 176 => the sum is 9994 rather than 7825
Problem in row 9: 94 41 142 595 380 172 62 454 69 57 435 65 345 424 196 560 396 559 488 213 52 585 84 291 145 => the sum is 6904 rather than 7825
Problem in row 17: 271 93 210 221 195 48 181 281 607 613 268 361 20 267 66 365 174 476 379 363 450 277 10 128 253 => the sum is 6577 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 195 376 189 186 320 108 425 249 621  25 110 192  18 625 463 394 581  54 354 570 302 215 490 477 286
 506 495 226 566  27 300 155 515 199 510 301 101 395 251 290 482 497 420 545 558  67  99 210  16  94
 390 381 548 319 343 198 104 527 415 295 402  98   6 483 209 526 574 340 274 411 337 271  80 242  52
  13 334 196 131 599 304 232 130   7 346 536 525 614 121 573  66 419 493 244  33 572 151 389 399 398
 622 505 118 247 135  17 180   5 234 461 586 406 138 470 401  90 280 452 559  82 221 164 504 336 612
 311 321 457 484 294 588  41  51 468 182  28 185 345 377 122 615 473 551 386  69  21 509 224 331 392
  22 332 421 175 538 583 273  32 366 329 480 486 464 292 276  50 435 102 120 496 610 351 193  14 385
 372 553 100 491 593 590 143  46 202 520 451 388 158 148 205 204 126 169 177 562  89 188 613 567 170
 516 218 203 353  34  78 456 624 471 387 330 611 235 117 502 125 259 167 256 261 207 565  42 231 577
  10 454 253 365 145 571 550 308  23 475 521 368 492 617 466 236 519   3 225 124 190  97 142 552 119
  71 472 325 591 123 291 438 115 179 361 489 220 344 426 316 324 312  87 239 487 241 277 539 245 313
 327 360 107 230 303 595 358 338 485 310 174 356 227 350 370  75  77 269 561 265 266 243 367 397  85
 314 129 606 513 474  76 258 349 132 352 409 414 413 444 270 417  37 246 469 275 113 407 462 449 127
 309 403  58 431 446 347 260 183 432 262 357  40 278 418 564 335 467 284 296 288 378 250 369  15 355
 208 422 563 299 592 279 257 620 534 178 281 476  56 315 160 191 152  73 116 512 430 150  86 433 442
 201 391 267 187 540 339 541 166 459 298 529 237  91 147  44 437 405  59  39 159 623 317 293 514 542
  63 194 333  83 481 240 429 141 383 318 181  95 272 537 109 479 375 522 140 114 436 597 219 549 535
  92  81 362 342 173   4 233 455 289 554 206 582 507 424 105 598  72 532 379 382 255 153 363 579 103
 307  11  93 348  47 494 428 211  31 254  64 373 176 393 546 589 609 543  36 112 600 445 371 380 364
 607 306 374 287   1 503 587 359 171 149 252 214 603  45 200  43 222 568 400 263  55 518 602 213 283
 500  57 498  12 560 229  65 584 594 605 106 408 323   9 575  35 499 443 488 528 305  30 137  74 161
 326 268 404 616 322  61 410 458 580  79 216  88 511 423 162  68  60 530 465 217 427  84  62 547 441
 434  53 412 165 133 341  38 585  20 439 163 136 578 111 416 460  24 531 604 447 450 569 144  49 523
 501 555 448 396 576 172 524 156 384 134 557 282  48 212 184 508 223 139 168 157  29 619 596  19 238
 608 154 264   8  26 517 440 618 146   2  96 544 533  70 297 478 128 248 285 453 601 556 328 197 228

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00485e+07us (= 10048.5ms, 10.0485s)
Satisfaction error: 3
Number of search iterations: 4934
Number of local moves: 3726 (including on plateau: 3679)
Number of local minimum: 80 (including on plateau: 511)
Number of resets: 0
Number of restarts: 0

Problem in row 12: 327 360 107 230 303 595 358 338 485 310 174 356 227 350 370 75 77 269 561 265 266 243 367 397 85 => the sum is 7495 rather than 7825
Problem in row 13: 314 129 606 513 474 76 258 349 132 352 409 414 413 444 270 417 37 246 469 275 113 407 462 449 127 => the sum is 8155 rather than 7825
Problem in diagonal 0: 195 495 548 131 135 588 273 46 471 475 489 356 413 418 160 437 375 532 36 263 305 84 144 19 228 => the sum is 7616 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  16 354  45 622 574 129 513 113 532  92 424 290 378 469  13  24 520 111 595 303 388 219  10 490 601
 158 596 114  97 405 293 545 381  83  41 461 512 187 399   7 546 365 218 418 136 403 359 452 266 383
 331 173 576 357 160 585  75 256  34 323 245 199 379 269 137 536  29 558 437 313 262 551 552 241 247
 202 514 559 554 258 276 397  17 456 544  44 466  59 387 253 612 600  84 193 325  77 125 382  69 372
 583 426 236 169 164 422 106 292 249 334 454 351 156 217 179 327   2 301 349  28 491 390 416 589 493
 285 163 208 599   3 375 624 380 615  42  51 581  21 342 563 174 593 445  96 157 460  40 408 166 434
  20 261 487 472 590 145 458 579 222 441 232 153 183  27 527 468  87 274 404 560 151 367 205 464  48
 333 134 497 395   9  14 255 128 371 550 548 363 557 116 479 270 451 318 161 159 477 594  31 152 463
 516 307 614 578 172 226 400 168 392 484 617  52 519 304 439 181 427 127  49 347  93 110 330  82  53
 103 108 539 260 411 533 146 142  89 155 141 220 407 521 184 415 277  25 462 406 435 237 606 175 240
 214  58 216 279 364 440  39 618  55  61 370 483 506  23 494 580 148 165 531 495 556 299 225 467 139
 162 353 373 192 480 344 350 317 302 257 369 280 310 368 340 360 311 100 361 326 337 300 319 278 336
 362 296 358 286 298 332 346 324 348 329 271 328 410 289 312 272 341 235 294 314 287 291 308 306 288
 553 315 284 322 259  67 305 448 295 385  62 268 335 282 233 518 465 182 239 570 212 433 115 112 566
 561 234 591  15 482 356   8  36 586 316 252 582  63 339 321 109 267 547 281 189  26  64 485 616 499
 198 457 430 176 177 102 224 604  79  22 273  94 588 602 446 229 131 492 352 475 605 309 231 517  12
 623 185 210 221 621 541 238 248 207 449 549 191 244 555 171 211 206 132 250 201 376 170 254 572 200
 429 228 283 502 444 180 178 510 486 374 338 188 264 223   1 227  78 625 543 608 203 587  47  85 194
  74 384 343  57 511 573  37 345 204 496 592 147 501 611  50  43 275 186 126 243 473 263 503 537 251
  30 529  11 143 453 140 598 526 242 603 133  90 190  99 613 101 213 528 425 535 144 396 215 421 447
 401  71 455 436 121 620 504  80 398 442 118 419  32 377 123 246 393 597  33 423 117 386  65 509 459
 481 443 138  86  81 230 120 149 508 105 498 540   5 478 391 476 571  95 610  73 471  76 575  60 565
 607 564  35 124 522 428 432 505 567  98 530 609 412 135 534 420 515 568  91  46 366 569 413 195 409
   6 542 119 394 196   4 389 450 417 562  56 297 619 355 584 414  72 438 507  68 150 523 154 402 107
 577 130 104 489  70 470 538 209  88 320 197 122 500  38 431  66 488 474  18 525 265 167 524  54  19

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00498e+07us (= 10049.8ms, 10.0498s)
Satisfaction error: 5
Number of search iterations: 3617
Number of local moves: 2933 (including on plateau: 2887)
Number of local minimum: 27 (including on plateau: 360)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 583 426 236 169 164 422 106 292 249 334 454 351 156 217 179 327 2 301 349 28 491 390 416 589 493 => the sum is 7724 rather than 7825
Problem in row 9: 516 307 614 578 172 226 400 168 392 484 617 52 519 304 439 181 427 127 49 347 93 110 330 82 53 => the sum is 7587 rather than 7825
Problem in row 10: 103 108 539 260 411 533 146 142 89 155 141 220 407 521 184 415 277 25 462 406 435 237 606 175 240 => the sum is 7237 rather than 7825
Problem in row 23: 607 564 35 124 522 428 432 505 567 98 530 609 412 135 534 420 515 568 91 46 366 569 413 195 409 => the sum is 9694 rather than 7825
Problem in row 25: 577 130 104 489 70 470 538 209 88 320 197 122 500 38 431 66 488 474 18 525 265 167 524 54 19 => the sum is 6883 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 161 367 485 502 377  26 517  54  62 290 530 611 102  94 286  25   9 610 351 356 512 317 506  68 607
 225 149 588  82 228 104 577 319  36 295 568  67 590   6 432 223 536  33 453 302  60 331 602 555 464
 471 583 395 170 173 383 216 362  89 500 595  12   5 243 608 421 547 191  45 534  76  73 539  49 545
 476 273 398 352 435 524 386 240 575  64 202  99 304 533 124  59 186 403 270  15 572 518  84 174 559
 461 264 511 344 454 376 473  97 445 125  14 291  56 413  37 253 492 466 525 330 514 422 280 107  75
  39 496  24 276 212 147 442 455 162 468 185 567 361 621 192 614   3 450 574 497  88 178  86 218 470
 111 179 146 349  55 427 299 347 508 155 296 408 616  46 537 221  98 505 447 597 200 521 139 441 177
 416 467 336 519 520  85  53 287 297 448 491 434 217  51 184 242 197 426 108  70 429 582 328 490 148
 573 543 156 601  30 412 620 477 425 233 431 318   2 151   4 322 380   1 516 157 478 265 166 281 283
 301 118 419 160  52 399 340  50 460 400 372 371 550 141 382 423 375  58 510 366 381 384  34 409 370
 239 251 214 578 462 254 292 576 289 527 358 542  18 364 365 585 129 560 236 152 252  42  16 195 329
 360 316 113 420 498  63 110 180 342  17 457 428 570 182 132 528 250  65 359 483 353 484 350 363 402
 338 311 333 332 313 343 298 326 309 321 325 315 410 310 348 274 279 305 275 300 323 293 282 306 256
 417  95 373 404  77 592 201 269 369 145 268 320 163 605 418 459 584 150  66 261 209 183 586  40 571
 440 123 446  29 204 255  35 415 532 234 257 538 499 587 535 481  32 165 401 393 285 142 346 205 246
 172 397 244 624 566 354 259  72 472  43 314 229 193 479 215 211 389 581 245 219 357 247 513 189 241
 553 303 509 266 278 488 232  31 224  13 341 190 522 128 411  81 308 526  44 569 116 474 579 436 203
 175 396  27  83 355 612 158 368 144 424 176 480 324 439  90 564 598  78 143 603 549 406  41 475 117
 487 137 237 188 593 208 138 503 619 495 615 563 187 391  69 335 120  92  79 456  48 609 548 101   7
 167 554 196  57 617 105 327 507 307 589 452 171 387  28  21 238 206 622 114 199 604 260  91 599 407
 126 220 541 390   8 565 544 523 600 284 169  47 451 562 288 109 385 558 222  93 127  10 339 529 135
 433 115 623 112 294 444 594 230 134 465  19 443  87 546 596  71 591 168 258 136 235 277 231 378 345
 210 489 119 100 449 213 154 140 131 463  38 122 556 133 486 551 580 164 606 437 405 557 374 337  11
 267  61 312 625 181 198 430 482 272 493 249 106 263 159 561 121 531  96 540  74 458 227 271 379 469
 207 618  80 262 394 248 130 515  22 334 103 153 392 613 504 414  20 552 438 226 194  23 494 501 388

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.53899e+06us (= 7538.99ms, 7.53899s)
Wall-clock time (full program): 7.58716e+06us (= 7587.16ms, 7.58716s)
Satisfaction error: 0
Number of search iterations: 3652
Number of local moves: 3033 (including on plateau: 2983)
Number of local minimum: 42 (including on plateau: 331)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 624 174 270 204  96 110 594 602 532   9  68 506 259  59 517  65 537 144 184 412 445 428 605 101 280
 177 595 604  78 269  18 198 136 577  44 360 435  83 288 246 608 600 617 385 365   1 393 437   2 199
  13  47 571 457 320 592 402 515 233 257 299  60 224 211 183 593  43 213 550 606 350  30 495 396 165
 525  76 381 520 597 388 186 181 450  58 167 551 479 334 513 292 423 366   8 228 570  15  22  24 471
 554 384 425  27  51 216 591 555 157 212 509 137 528 256  11  69  14 560 512 497 533 407 116 400 104
 379 275 535  48 545 502 478 444  19 156 209 273 373 265 465 140 374  61 231 529  20  67 473 569 395
 442  35 201   4 261 456 466 277 446 232  89 451  73 355 203 573 505 387 439 267 276 474  39 338 536
 422 260 440 218 126 294 221 455 153 470 544 507 248 430 434 391 130 244 518 131 582 193 179  28 207
 458 483 208 565 151 441   5  12 408 586 127  63 160 145 107  98 485 262 409 389 610 519  79 503 552
 501 378 115 119 472 124 447 429 398 399 491 349 589 543 337 109 585 481  66  34  99 214 173 168 205
  36 390  85 527 161  94 172 253 566 210 344 607  86 272 264 460 462 229  91 581 558 164 192 553 468
 327 351 325 394 347 339 189 368 352 361 392 335 358 282  81 324 375 524 321  33  41 367 326 377 336
 289 315 340 332 354 331 298 341 286 307 278 297 197 295 291 363 319 285 281 290 500 301 318 314 303
 330 283  95 310 308 516 346 306 266 311 287 598 293 125 252 296 302 461 271 304 128 251 312 284 590
 397 579 621 235 383  90  10 309 345 539 619  16 482 323 227 162 113 417 190 421  88 498 420  49 572
 215 534 480 222 196 436 376 343 452  56 406 241 245  77 578 305 510 521  45 574 492 141 567 493 329
 103 453 526 410 561 328 155  82 538 403  21   6 419  55 612 508 230 488 185 220 182 613 188 475  64
 108  37  71 620 448 559 584 170 616 382 239 159 556 217 111 459  38 180 191 356 114 467 357 427 359
 557 117 142 562 268 240 449 226 206 353 123 411 614 583 322 549 147 250 187 489 522  40 225 100 143
 135 194 150 599 247 148 238 443 133  57 596 548 416 469 454  26 316  32 601 274 121 603 362 611  52
 237 166 531 255 149 622 134 405 258 618 138 202 514 615 348 223 129 541  54   3 175 118 563 401 426
 171 432 380  97 476 542 369 243 105 438 414  74 102 623 234 242 158  70 404 154 499  53 504 484 317
  46 279 120 431 463  25 609  62 200 333  93 300  42 568 564 486 371 254 625 152 364 547 523 132 236
 249 477  31 176 496 219 169  92 106 540 424 313 413 418   7 372 575  75 490 370 433 580 263  50 487
 530 511 178 415  80 195 139 576  23 494 588 386  72  17 464 112  84 163 587 146 122 342  87 546  29

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00486e+07us (= 10048.6ms, 10.0486s)
Satisfaction error: 5
Number of search iterations: 3617
Number of local moves: 2983 (including on plateau: 2937)
Number of local minimum: 33 (including on plateau: 374)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 177 595 604 78 269 18 198 136 577 44 360 435 83 288 246 608 600 617 385 365 1 393 437 2 199 => the sum is 7715 rather than 7825
Problem in row 15: 397 579 621 235 383 90 10 309 345 539 619 16 482 323 227 162 113 417 190 421 88 498 420 49 572 => the sum is 8105 rather than 7825
Problem in row 16: 215 534 480 222 196 436 376 343 452 56 406 241 245 77 578 305 510 521 45 574 492 141 567 493 329 => the sum is 8834 rather than 7825
Problem in row 22: 171 432 380 97 476 542 369 243 105 438 414 74 102 623 234 242 158 70 404 154 499 53 504 484 317 => the sum is 7585 rather than 7825
Problem in row 25: 530 511 178 415 80 195 139 576 23 494 588 386 72 17 464 112 84 163 587 146 122 342 87 546 29 => the sum is 6886 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 484 204 532 277 519  60 246 572 618 142 421 419 136 398 282 172 596 194 549 272 394  19 610  52 600
 386 359 410 314 241  92 559 346 248 317  59 159 377 403 409 495 110  38 330 554 189 420 312 546 152
 444 340 299 569 144 133 521 264  63  15 336 433 597 456  51 506  50  26 337 575 446  85 565 203 367
 285 238 579 540 107 360 146 566 256 467 179 181 298 169 111  98 581 153 499 129 472 511 516 140 244
 584 167 442  14 211 576  24 361 234 509 550  68   9  56 135 505 401 529 606 124 513 338 510 126 233
 440 149  37 623 160 478 496 235 254 416 537 512 389 348 174   4 508 252 176 489  69 453 148 364 114
 118 625 534 432  25 517 619 165 458 608 117 482 462  39 335 323 481 108 475  16 122 329  66 102 267
 184 162 192  84 624 603  81 473 240 544 209 257 173 527 449 588  97 460 369 112 334 196   6 387 474
 304 471 325 427 404 253  48  34 425 417 358 552 141 518 480 558 429 373  61 134 251 281 291 262  28
 292 407  96 457 423 492 392 567 447 363 123 164 464 258 362 188 375  88 150  71 607  23 382 434 200
 186 221 195 214 573  10 223 412 104 408 459  13 612 227 266 525 236 341 271 494 280 190 347 485 533
 138 560 530 139 116 228 536 614 243 561 185 383 406  93 225 313 366 445 137 198 125 454 571  58 201
 344 276 232 331 310 326 320 321 297 306 288 308  47 322 263 316 287 483 305 283 315 324 354 289 578
 438 311 290 345 327 302 307 296 318 237 278 273 300 265 249 491 294 245 187 303 402 617 274 250 226
 371 220 601 182 275 145  53 177 381  54 378  45 580 582 548 591 239  87 583 332 284 151 468 279 219
 476 168 594 339 293 541 349  49 178 222 431 586  55 479 193  22  27 557 206 428 380  57 424 229 542
 589 503 426 515 333 448 585  86 128 131  31 154 405 120 587 207 205 595  46 555 175 385 130 395  91
  64   8 103 592 260  44 259 242 563 598 574 514 570 399  75  72 455  20 218 522 553  43  95 531 451
 602 497  73 212  94 422 202 469 564 158 620 261 357 397 538   2 605 414 105 208  41 180 372 355  77
 295 465 113 197 526 166 350  90 217 379 191 352 170 106 613 199 370 507 450 215 147 504 213 590 400
 351 269  79  67 132 488  30 502 393 156 501 183  62 342   1  11 231 328 396 411 230 593 210 439 477
  32 171  80 143 101 390 452  18 413 524   5 609  78 568 463 622 539 435 486 319 577 309  12 255 224
  33 551 374  29 466 247 437 121 155 163  83 430 535  76  82 353   3 470 523 604  35 621 391 500 543
  42  40 528 365 562 415 490 461  17 109 356 388 487 301 498 119  70 520  74  36 616 615 493   7 216
 343 443 161 418 599  89 100 384 611  21 556  99 115 376 436 545 270 157 286 441 268 127  65 547 368

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.00508e+07us (= 10050.8ms, 10.0508s)
Satisfaction error: 2
Number of search iterations: 3578
Number of local moves: 2987 (including on plateau: 2938)
Number of local minimum: 34 (including on plateau: 349)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 484 204 532 277 519 60 246 572 618 142 421 419 136 398 282 172 596 194 549 272 394 19 610 52 600 => the sum is 8768 rather than 7825
Problem in row 21: 351 269 79 67 132 488 30 502 393 156 501 183 62 342 1 11 231 328 396 411 230 593 210 439 477 => the sum is 6882 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 117 614 176 583 122 268 563 515 257 335  19 523 481  32   3 399 161 301 605 127 562 453  33 148 428
 593 129 552 502 162 452 297  10 364 142  42  87 177  58  34 531 267 618 243 535 154  43  78 576 527
 145 624 385 169 598 482  20 236  76 178 516 568 356 227 183 438 293 345  12 355 472 499 238  30 380
 480 390 483  96 449 302  64 454 155   6 396 134 116 580 463 615 608  75  27 392  86 604 190 382 278
 186  53 519 108 504 559   9 150 623 536 157 539 211 591 172 125 534 277 431  94 146 571 577 118  35
 486 498  89  39 509  44 508 518  13  29 284 458 466 121 384  54 607 513 524  72  56 170 526 299 558
 246 473 151 159 361 208 476  73 556 179 450 153  46  79 469 263 421 445 434 420 147 475 347 443 351
  80 554  97 545 266 210 234 383  61 561 565 264 197  37 262 357 446 367 406 465 387 209 119 506 247
 193 460 477 459 101  17 603 410 188  91 222 140 437 388 456 494 366 221  62  82 439 110 528 394 487
  63 199  22 244 471 570 226 204 354 594 260 212 575 375 235 546 391 138   1 411 538  92 470 201 433
 455 326 175  45 413 230 217 331 496 474 404  21 435 430 333 585 214 135 573 567 323  14 549 602 130
 348 330  90 381 343 541 532 360 185 365 311 337 314 303 336 332 327  95 318  36 325 308 324 346 338
 289 103 321 359 304 309 329  48 342 328 312 344 543 315 319 341 305 294 320 462 295 281 296 350 316
 100 109 442 180  59 540 317 461 590 339 419 313 282 306 195 206  55 165 400 586 517 389 181 123 551
 369 143 372 237 164 242 273 512 182 251  66 377 274 566 265 495 485 555 405 429 334 128 191 113 397
 625  47 202 300 402   5 213  15 484 224 252 370 378 511 548 144 448 220 525 426 606 422 245 107 106
 218 503 395  65 203 373 374 286 401 417 229 595 291 231 415 194 223 427 228 168 464 196 149 288 492
 425 171 298 597  26 253 256 174  81 505 358 363 240 557 225 105 200 287 285 261 444 408 432 521 353
 550 290 478 497 275 112  49 379 156 232 520 276   4 409 574 467 542  88 173 322 254 500 250 189 239
 279 447 340 601 620 104 403 589 141 613 192 501 158 258 510 137  38  50 136 560 131 216  23 530 248
 102 529 371 376 579 270   8 272 219  18 599  68 522  84 588  40 126 386 553 424 533  52 584 398 124
 587 115 271 488 393 167 547  74 578 436  98   7 616 489  71 207 111 569 255  51 249 514 609 160 163
 457  31 132 205 292 596 592 139 414 544  41 114 572 233 617 441 120 612 215  99  11 241  67 440 600
 362 269 423 310 184 352 133 621 493 368 622 610  77 166  85 307  69 490 187 283  93 349 407 537  28
  70 418 564 280  25 619 582 611 416  60 491 451  57 479  83   2 468 152 507 198 259 581 412  24  16

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00483e+07us (= 10048.3ms, 10.0483s)
Satisfaction error: 2
Number of search iterations: 4301
Number of local moves: 3565 (including on plateau: 3516)
Number of local minimum: 34 (including on plateau: 398)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 593 129 552 502 162 452 297 10 364 142 42 87 177 58 34 531 267 618 243 535 154 43 78 576 527 => the sum is 7173 rather than 7825
Problem in row 11: 455 326 175 45 413 230 217 331 496 474 404 21 435 430 333 585 214 135 573 567 323 14 549 602 130 => the sum is 8477 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  45 241 213  95 409 184 121 383 127 609  24 539  12 169 355 491 583 577 270 190 158 597 495 344 594
 171 605 402  69 593  38  23 588 301  55  67 581 576  54 275 350 431 506 484 386 395 217 116 390 152
  75  17 572 573 460 520 268 269 225 596 620 471 544  56  15 570  93 150 376 555 117  53 162 454  14
 374 291 404 523 476 141 610 507 396  68 488 109 177 444  33 586 493 102 606 498  61 212  50  48 128
 126 414 558 590 625 195 192 247 528  70 448 188 153  76 519 167  27 464 132  18 470 615 245 389 369
 298 562  35 437 441 509  74 106   5 377 487  86 459 501 589 481 536 113 333 255 147 592 220  26 156
 457 334 215 216 522  72 426 618  85 180 168 434 238 458 423  97 543  52 496 159 601 203 327 382 119
 480  34 194   7 197 134 550 455 614 494  65 143  36 172 453  81  43 403 584 449 223 363 512 613 526
 265 624   8 499 137 354 193 490 412 181 400 271 364 419 205  87 233 380 446 535  98 252 173 224 575
 411 277 279 591 378 452 436  20 136 398 451 200 551 442 131 549 352 561  79  37 525 221 230  11 107
 207 598 347  13  44 621 424 105 239 500 316 502   2 282 321 538 263 312  30 473 547 294 508 293  46
 336 328  39 537 368 559 351 440 343 346 129 322  78 317 430 445   4 475 112  94 516 253 616  28 359
 356 307 339 256 297 261 278 366 315 299 353 332 372 326 309 305 314 341 295 338 284 335 258 276 313
 318 292 280 236 331 289 330 226 308  89 287 379 285 259 311 302 281 262 254 489 266 290 306 552 603
 157  99 237 296 145 450 320 303 123 244 580 272 416 264 310 274 381 250 235 608 251 548 210 623 229
 348 399 345  90 110 571 529 568 288 248 542 114  83 138 612 165  19 530 497 130  16 407 240 465 371
 619 486 151 176  42  57 599 387 515 133 120 563 325 478 392 100 198 385 439 393 401   1 242 160 463
 417 208 324 135 174 342 578 187 587 532 283 527 148 582  22 474 166 164 257 329   6 443 185 553 202
 391 249 585 479 227 170 124 349 514 182  64 111 361 139 554 413 521 228 189 154 546 545 201  73 456
  60  96 595 557 483 438   9 179 375 183 125  62 415 604  66 422 617 510 144 149 574 108 524 388 142
 468 461 511 234 161  84 505  40 243 467 504 405 517 560 199  47 435 246  59 186  77 319 231 482 384
 622 533 447 103 232 410  82 421 469 218 286 204 492 397 118 222 466   3 394  41 518  80 340 214 513
 556  32 104 420 267 196 367  91  88 567  25  29 273 472 477 429  71 146 357 569 360 323 531 534 541
 219 163 304 260 406 178  63 358 579 362 428 611 540 115 140 209 564 607 155 365 206  51 418  92 432
  49 175 337 433 300 600 373 122  10 427 565 370 408 101 566  21 191  58 602 425 462 503 485 211  31

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.74658e+06us (= 9746.58ms, 9.74658s)
Wall-clock time (full program): 9.79516e+06us (= 9795.16ms, 9.79516s)
Satisfaction error: 0
Number of search iterations: 4209
Number of local moves: 3492 (including on plateau: 3441)
Number of local minimum: 29 (including on plateau: 390)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 573 109 362 581 112 187 286 258  37 539 473 615 154  38 347 526 193 336 331   9 468 129 205 435 522
 383 542 143 185  31  40 102 591 208  22  29 604 471 544 227 437  76 570 545  98 415  18 625 516 403
 166 543 566 353 271 242 412 498  41 199 493 133 416 519 441 212 183 204  34 352 507 189 533  68 250
 419 148 576 520 214 278 294  47  36 394 475 464 176 587 169  74 501 568 161 540 495 499  82 107   1
 624 339 116 103 431 497 555 121   7  35 605 261 329 486 532 217 426 489 354  50  92 503 365  21 267
  17  56 472 142 243 434  30 600 510 310 173 110 601  84 574 494 453 505 389 580 168  71 141 180 488
 233 613 607 195 565 620 237 290 222 608 303   3 500 181 264 136 190 285 417 127 297 379 367  27 159
 211 438 317 525 515 145 279 345 351 422  61 280  60 251 538 144 588 450 302 202 306 406  81 131 477
 122 442 229  14 448 132 553 158 496 382 550 398 124  51  97 594 395  62 114 502  43 621 452 547 299
 421 209 396  19 346 436 461 420 483  95 335 378 534  44  99 272 400 295 192 430 172 343 340 361 344
 296 512 428 432 514 269 307 259 270  32 332 300 313 356  11 360 399 323 314 348 101 418 414  94 423
 165 374  58 182 490 579  67 380 586 216 611 429 370 135 100 372 289 326 312 225 546  16 342 454 201
 476 268 371 481 334 376 305 283 309 508 390 369 373 248  49 223 194 239 234 443 249 200 338 401 164
 241 236 247 359 105 424 392 215 292 186 221 304 291 288 562 478 328 315 375 523 228 321  42 257 595
 196 487 327 191 527 350 466 341 244 599 262 106   5 528 231  26  46  52 557 427  65 349 235 491 213
 206 459 177 298 253 610  20  70 571 433 282 623 474 150 465 293 619 232 603  73 408 275  69  79  83
 138 386 318 446 252 230 614 531 384  24 118 457 325  59 174 220 308 563 387 255 368 364 207 149 548
 266  91 558 536 224 265 130 513 363 355 572 155 151 402 153  85 575  96 444  66 311 598 178 554 184
 407 179 197 479 240 134 388 622 561 411 119 113 397 137 409 157 377  63 277 256 509 203 425 511 254
 585 125 606 463 175 160  53 117 156 324 115  88 391 590  78 612 263 458  23 152 445 589 276 596 385
 366 578 120   8 462 521 567  93 530 320  55 551 287 260  90 301 188  75 467 485 541 140 410 284 126
 170 404 470  80 529  57 167 451 449 330 108 447 460 322 535 440 163 139 123 577 218  10 518 413 245
 524   2  12 274 171  64 569  87 597  15 198 146 273 537 480 549 584 618  72 504  25 358  89 517 560
 592   4  48 357 147 319 333 219  77 582 564  86  13 559 617 492  33 556 246 162 455 210 609  39 506
  28 281 104 602 226 456 238 316  45 484 381 405 337 469 583 111  54   6 552 439 393 616 482 593 128

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00505e+07us (= 10050.5ms, 10.0505s)
Satisfaction error: 2
Number of search iterations: 4551
Number of local moves: 3756 (including on plateau: 3707)
Number of local minimum: 39 (including on plateau: 438)
Number of resets: 0
Number of restarts: 0

Problem in row 15: 196 487 327 191 527 350 466 341 244 599 262 106 5 528 231 26 46 52 557 427 65 349 235 491 213 => the sum is 7321 rather than 7825
Problem in row 25: 28 281 104 602 226 456 238 316 45 484 381 405 337 469 583 111 54 6 552 439 393 616 482 593 128 => the sum is 8329 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 207 579 505 553 401 217  14 134 488 392 256 339 333 415 358 168 429 564 260 281 210 576 201 277 312
   2 297 596 259  23 597 321  25  26 361  71 493 565 291 496  13 470 532 282 507 598 211 524  30 235
 438 578 473 144 187  11 416 227 175 517 525 129 103 437 543 461 394  88 615 368 142  24 584 346  64
 519 456 327 472 145 202 606 404 397  70 285 120  72 455 435 379 490 296 215 569 465 552 399 188 245
 350 592 411  78 325 208  54 499 170 185 531 255 427 487  80  34 477 395 133 622 474  31 381 243 383
 304 124 151 614 178 116 114 182 294 197  93  38  68 336 508 221 108   4 388  40 223 424 417 165 348
 462 229 612 513  28 174 347 384 311 275 489 412 561 287   9  79 272  47 521 247 378 441 619 125   3
  99 382 248 351 447 422 599 594 344 292 315  74  44 251 408 515 620 200 357 234  52  82 189 148 558
 439  87  43 171 137 506 111  66 588 290 587 603 369 119 512 278  20 528 555 522 356 284 484 112  58
 141 166   6 354 577 139 386  15 280 332 497 458 302 448 299 158 534 583 542 466 115  10  37 413 567
 132 407 518 380 329 586 172  36 523 421 423 199 353  59 269 471 610  81 349 273  89 387 118 536 104
 453 340 373 313 452 366 371 173 308 582  69 100 410 276 267  18 580 192 451 403 317 334 324 270  83
 359 268 162 338 352 279 547 510 398 289 213 226  85 314 306 436 131 224 156 540 367 305 414  57 549
 266 432 492  53 236 253 263 551 301 434 288 611 374 136 298 309 385 316 194 203 167 261 322 418 262
  86 539 283 530 216 486 409 595 562 457 494 264 198 191  94  60  49 219 209 169 370 442 204 450 249
 230 122 179 537 609 193  21 126 147 146 554 214 541 337 405 469 258  42 546  67 454 544 310  84 468
 127  55 257 205 150 307 406 138 341 331 511 498 591 244 443 389 184 503 177  90 318 509  63 624 364
 218 459 212 265 444  76 231 393 164  48 143  50 617  45 504 590 161 376 467 426 516  39 419 607 355
 480 220 365 478 602 575  65 233  32 246 154 482 101 343 557 242 300 535 190  92  33 360 600 303 237
 342 527 573  91 239 428 128 335 556 593 159 153 186 483 149 286 130 571  98 601 160 123 228 222 464
 155 514   7   1 375 152 589 529  75   5 574 181 396 621 102 502  56 550 241 254 623 581 460 605 323
 570 225  16 117 548 485 449 372 252 608 135 400 319 446 232  46  73 157 559 479  19 176 109 420 613
 440  12 625 463 180  96 618 326 501 195 295 560 345 163 377 585  95 240  62  27 274 391 140 495 320
 402 105 330 183 538 425  22 545  29 363  51 491 430 520  77 500 431 106 250 328 572 293 238 206 390
 604 110  61 362 107 526 566 433 563 196 113 475  35 121  97 616 568 476   8  17 533 445  41 481 271

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00033e+07us (= 10003.3ms, 10.0033s)
Wall-clock time (full program): 1.00484e+07us (= 10048.4ms, 10.0484s)
Satisfaction error: 6
Number of search iterations: 3445
Number of local moves: 2937 (including on plateau: 2893)
Number of local minimum: 18 (including on plateau: 351)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 207 579 505 553 401 217 14 134 488 392 256 339 333 415 358 168 429 564 260 281 210 576 201 277 312 => the sum is 8469 rather than 7825
Problem in row 3: 438 578 473 144 187 11 416 227 175 517 525 129 103 437 543 461 394 88 615 368 142 24 584 346 64 => the sum is 7989 rather than 7825
Problem in row 4: 519 456 327 472 145 202 606 404 397 70 285 120 72 455 435 379 490 296 215 569 465 552 399 188 245 => the sum is 8763 rather than 7825
Problem in row 6: 304 124 151 614 178 116 114 182 294 197 93 38 68 336 508 221 108 4 388 40 223 424 417 165 348 => the sum is 5655 rather than 7825
Problem in row 16: 230 122 179 537 609 193 21 126 147 146 554 214 541 337 405 469 258 42 546 67 454 544 310 84 468 => the sum is 7603 rather than 7825
Problem in row 21: 155 514 7 1 375 152 589 529 75 5 574 181 396 621 102 502 56 550 241 254 623 581 460 605 323 => the sum is 8471 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 573 524  11 495 494 470 334 561 526 268 498 592  78 340 380 213  36 530 185 549 459  96 169 430 512
 582  98 581  31  49  13 479 215 591 417  40 401 392 560 585 300 311  86  54 373  51 155 362 522 577
 298 247 583 206 214 483 389  14 453 122 602 343 119 491 609   6 224  22 182 462 297 546 598 308   7
 203 193 434 263 196 402 513 260  52 166 385 133  18 508 399 110 579 337 554  19 419 516 425 360 381
 163 223 416 137 477 396 170 570 198 243 374 542 472  95 111 556 106  16 593 534 489  76 210 404 254
 261 440 575 595  55 461   4 120 172 304 216 557 466  12 217  84 159 332 474 528  68 613 452 192 468
 105  48 230 471 323 366 265 539   8  43 190 485  64 596  21  77 178 356 564 326 194 113 249  85 160
 115  83 455 605 157 231 616 318 236 310 527  26 608 603 525 438  90 209 433 511 339 117 168  91 285
  80 597 109 351 118 289 246 219 191 478  25 408 555 502 458 538 354 264 432 212 409 437  32  15 506
 114 449 135 152 294 138 406 529 256 422 503 142 259  35 299 361 335 139 367 257 350 445 607 456 375
 388 377 302  69 233 551 469 187  42 262 305 226 144 460 345 533  74 457 333 242 505 355 617 195 154
 290 451 270 232 313 151 463 349 376   2 612 330 278 364  23 370 276 359 277 288 492 403 175 328 353
 312 205 379 329 357 293 266 307 341 348 319 237 444 331 365 240 316 338 371 220 267 352 271 295 322
 566 520 134 161 384 624 473 176 296 255  82 127  66 211 204 578 372 378 435 610 180 156 565 228  44
 405 177 531 420  47  37 283 427 519  67 292 625 536 184 320  73 342 586 235  71 393 496 315  61 383
  62 301 441 548 547 125 622 390 521 275 167  99 303 368  38 604 287 618 280 241  70 258  46 587  27
 535  87 407 563 623 222 131 559 227 621 165 327  72 181 317 517 199  93 614  39 611 179 123 107 306
 562 410 128 207 490   3 599 162 545 576 423 100 615 346 129  88 601 146 450 108 150 174 475 104 234
  53 446 284 600 588 589 149  20 126 424 147 121 484 202 324 279 550 363  81 493  45 132 532 543 250
 514 541 436  75 153 225  97  59 540 567 569 358 510 171 584 274 245 124 201 143 221 186   9 500 523
 480 552 386 619 590 269 218 382   5 411 443 281 101 487 482 140 197  65 116  24 253 398  50 428 448
 369  34 248 141 229 464  79  41 537 421 426 272 145 164 594 136 395 620  33 286 418 413 414 515 431
 336 239  60 415 282 394  10 497 429 158 208   1 387 412 200 465 507 439  57 391 325 504  89 476 544
 442  30 102 112 103 499  56 344 347  94 244 574 400 173 238 572 606 467 321 501 252 251 558 447  92
  17 553 188  28 509 130 488 580 291 571  63 518 309  29  58 273 486 481 183 397 568 454 314 148 189

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00505e+07us (= 10050.5ms, 10.0505s)
Satisfaction error: 4
Number of search iterations: 4115
Number of local moves: 3338 (including on plateau: 3292)
Number of local minimum: 42 (including on plateau: 430)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 573 524 11 495 494 470 334 561 526 268 498 592 78 340 380 213 36 530 185 549 459 96 169 430 512 => the sum is 9323 rather than 7825
Problem in row 7: 105 48 230 471 323 366 265 539 8 43 190 485 64 596 21 77 178 356 564 326 194 113 249 85 160 => the sum is 6056 rather than 7825
Problem in row 8: 115 83 455 605 157 231 616 318 236 310 527 26 608 603 525 438 90 209 433 511 339 117 168 91 285 => the sum is 8096 rather than 7825
Problem in diagonal 1: 512 522 598 516 489 528 564 209 354 361 345 364 444 127 292 275 227 162 149 225 590 141 60 30 17 => the sum is 8101 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625 428 375 204 600  38  23 106 562 282 620 184 528 257  82  87 189 102 367 421  34 410 322 381 598
 389 480 403 211 114 394 170 608 348 262 284 611 177 101 470 616 100 501 124 130 209 239 178 238 521
  15 544 438  47 520   2 273  67 440 560  22   1 143 590 418 245 279 390 475 441 457 242 602 606   8
 157 196 454 398  41 360 482 485 576 145 609 356 401 312  90 208 498 364 121 286 318 414 229  42 283
 516  29   5 607 237 505 288 199 507 167 181 274 104 323 416 547 227 186 162 587 385 582 221 236 334
  19  98 624  95 536  24 201 388 223 218 107 281  10 399 601  40 497 592 518 479 555  51  17 584 567
 368 112 230 622 347 581 526 159 252 148 542 469 205  71 539 168 321 310  16 434 355 508 120 235 187
 200 117 133 234  11 458 378 408 417 619  39 240 108 451  35 613 535 419 565 361 432  20 407 397 228
 166 193 249  21 612 226 529 387 537  18 559 437 379 278 105  55 411 372  84 570 358 377 266 292 344
  70 462 258  83 155 224 573 335 402 346 531 423 290  72  37 429 572 212 383 289  56 593 393 320 365
 303 386  13 413 443 395  68   9 271 113 478 563 463 446 353 163 326 615 412 343 503 311  14 231 190
 431 341 493 599 392 185 371 509 316 136 125 160 468 491 339 447 171 264 295  61 270 194 345 300 122
 302 308 324 476 315 313 317 328 304 247 314 337 325 319 299 330 287 301 144 309 297 329 357 293 350
 579 623 543 256 285  54 151 280 174 589 467  49 305 175  76 173  77 449 141 352 269 354 557 373 474
 214  78 109 128  25 578 349 538  52 409 588 147 585 577 494 461  33 533 400 115 222  36 405 191 558
 465 176 534 253 439 522 261 164 333 225 118 574 127 471 216 276 450 486 517 254 146 444 265  43  66
 137 499 327 568 571 213 382  65 132  12 424 514   6 129 215 545 260  27 138 604 152 556 359 490 500
 294  91  62 433 511 456 525   4  31 541  48 464 510 425 455 275 436  59 291  97 473 527 459 332  26
 426 580 603 488 296 183 142 561 369 487  85 331 246   3 550 139  86 203 523 119 614 492  44  99 156
 596 448 179 255  69 161 519 251 552 442 342 111 207 504 131 362 415 404 605  53  46 217 532 192 232
 268  58 569 351 220 618  73 376 336 370 406  94 495 248 195 583 298 549 206  75 202 188 575 427  45
 564 165 481 110  81 548 150 524 103 506 460 307 566  60 435 149 135   7 553 512 123  74 502 244 466
 366 241 154 116 430 277 515 597 363  79 396 140 391 198 243  92 540 219  57 595 610 263  80 591 272
  96 621  32 477 422 384 496 267 197 530  30 452 169 453 586 484  88  89 182 180 489  64 483 134 420
 259 551 233 380 153 126  63 210  28 374  50 306 617 472 445 338 594 172 546 158 250 340  93 554 513

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00497e+07us (= 10049.7ms, 10.0497s)
Satisfaction error: 3
Number of search iterations: 4992
Number of local moves: 4127 (including on plateau: 4079)
Number of local minimum: 43 (including on plateau: 513)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 389 480 403 211 114 394 170 608 348 262 284 611 177 101 470 616 100 501 124 130 209 239 178 238 521 => the sum is 7878 rather than 7825
Problem in row 6: 19 98 624 95 536 24 201 388 223 218 107 281 10 399 601 40 497 592 518 479 555 51 17 584 567 => the sum is 7724 rather than 7825
Problem in row 10: 70 462 258 83 155 224 573 335 402 346 531 423 290 72 37 429 572 212 383 289 56 593 393 320 365 => the sum is 7873 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  75  74 486  49 484 445 594 179 327 160 171 238 593 472 623 247 379 332  98 597 178 436 434   8 146
   3 610 432 164 433   4 235 523 400  77 341 404 495 453  83 485 145  50 574 581 157  65 264 236 611
  93 114  23 375 194 371 619 555 578 609 507 161 358 129  82 241 305 229 100 321 372 231   9 167 471
 312 243 223  46 514 274 441 481 196 451 602 598  28 283 121 474  52 345 446 423 518  17 374 220 143
 388  70 127 107 587  53  44 131 456 543 387 315 569 137 488 529  13 487 397 163 139 589 480 608  18
 504 489 300 580  14  56 201 182 458 365  26  22 367 249 268  59 525 582 296 152 357 424 447 311 591
 125  55 544 395 225 621 176  71 575 193 592 571 356 162 284 617 172 189 479 601 111 170  88  72 381
  35 192 528 491 197  37  32 354  10 227 323 416 132 413 477 442 351 169 186 190 136 506 115 405 338
 444 505  20 244 508  47 282 246 620 478 420 502 560 550   6  67 203 407 452 150 496 494 408 512 615
  11 123 595 563 202 289 421  33 464 191 205  69 469 360 554  84 470  61 545 278 325 149 579 331 454
 468 336 308 159 293 547 364 457 275  25 292 262 459 307 269 281  76 461  39 501 535  48 539 368 156
 391  31 207 561 252 337  80 394 419 482 144 330  21 362 499 403  96 301 577 566 257 276 396 431  12
 221 429 401 290 294 322 286 317 165 313 297 335 280 361 476 319 234 359 347 215 306 339 255 377 287
 573 217 138 562 498 212 460 570 108 122 490 324 265 320  62 218 426 267   7 112 584 353 199 475 263
 200 363 378 309 240 443 333  27 266 373 430  64  68 549 376 210 616 326 352 383 168 493 213 295 350
 113 558 538  58 316 328 133 402 349 448  15 534 155 600 153 449  38  81 624 370  89 318 117 417 622
  99 567 462 340 298 393 232 270 128 206 242 380 467 147 154 398 612 410 110 158 412 119 497 259 465
 181 279 329 219 273 613 344 291 185 406 532 520 109 596 211 411 142 542 334  43 438 245  29 303 250
 382 392 390 422 204 226 385 346 556 253  40 519  91 540 516 230 513 233 258 104  97 450 530 103  45
 418  34   1 440 473 511 299 314 515 614 384 214 355 188 118 522 180 625  73 463 166 120 224   2 572
 565  51 607  16 604 183 568 256 151 304 437  95 174 106 288 277 586  19 187 414 524 552 254 140  36
 599 551 102 541 101 310 517 222 173  94 557  57 261  63 399  79 439 553 285 343 564 590  86 583 510
 585 428 425 177 237 130 141 576 105 248 272 208 533 369 228 175 386 135 537 483  60  54 606 603 124
 435 588  66 302 342 455  90  92 198 134  78 184 271  85 531 521 500 546 492   5 427 527 466 251 239
 605 526 195 415  42 618 548 536 148 509  41 503 389  24 559  87 366 116  30 209 409 260 216 348 126

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00025e+07us (= 10002.5ms, 10.0025s)
Wall-clock time (full program): 1.00519e+07us (= 10051.9ms, 10.0519s)
Satisfaction error: 6
Number of search iterations: 3649
Number of local moves: 2931 (including on plateau: 2887)
Number of local minimum: 32 (including on plateau: 399)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 93 114 23 375 194 371 619 555 578 609 507 161 358 129 82 241 305 229 100 321 372 231 9 167 471 => the sum is 7214 rather than 7825
Problem in row 8: 35 192 528 491 197 37 32 354 10 227 323 416 132 413 477 442 351 169 186 190 136 506 115 405 338 => the sum is 6702 rather than 7825
Problem in row 9: 444 505 20 244 508 47 282 246 620 478 420 502 560 550 6 67 203 407 452 150 496 494 408 512 615 => the sum is 9236 rather than 7825
Problem in row 21: 565 51 607 16 604 183 568 256 151 304 437 95 174 106 288 277 586 19 187 414 524 552 254 140 36 => the sum is 7394 rather than 7825
Problem in row 22: 599 551 102 541 101 310 517 222 173 94 557 57 261 63 399 79 439 553 285 343 564 590 86 583 510 => the sum is 8579 rather than 7825
Problem in diagonal 0: 75 610 23 46 587 56 176 354 620 191 292 330 280 320 376 449 612 542 258 463 524 590 606 251 126 => the sum is 8757 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625 435 350 464  93 157 133 496 590 372 212 624  46  54  94  91 174  92 513 222 215 330 348 551 544
 578 613 593 144  26 474 270 619 473 476  98 105 520   1 588 102  82 201  73 178  32 356 561 213 449
 224 316 414 123 581 371 621 172 199 416 453 233 468  52 343 196 288  27 429 438 477 154 130 575 125
 246 319 547 181  85 295 323 314 333 592 310 331 166 294 202 312 308 421 530  21 192 427 609 339 128
  66  36 569 617  12 579 459 377 430 296 352 101 122  17 610 424 594 149 195 573 168 552  83 334 110
 340 510 503 562 539 504  64 156 188 367 479 161 494  15 139 210 576  78 103 458 307 433 439 135  65
 165 488 148  95 620  72  35 480  29  11 457 600  99 560 369 407 151 411 394 428 500 140 536  45 585
 398 118 119 455 184 121 522 437 376 158 382 393 337 274 324 612  58 399 441 317 545  87 234 384 150
 529 370  47 228 400 417 170 204 599 448 225 461 616 336 171 200 426 601 582 374 115  62  81   4 159
 358 466 406 396 262 540 141 109 147 392 553 194 365  77 450 116 381 387  16 497 353 359 129 380 351
 100 584 486 108 289 471 440  51  67 566 239 286 155 301  59 131 492 263 338 598 203 423 142 546 487
 483 299  10 329 282   7 403 276 475  68 615 303 134 614 300 311  48 586 327 267 281 420 240 223 524
 292 160 315 543  88 595 346 163 132 302 293 537 472  61 227 326 318 260 410 335 462 175 277 341 395
 320 114 511 305 325 256 275 344 266 247 280 580 254 257 243 498 269 514 284 279 283 291 273 309 248
 136 554 216 451 491 373 361 169 197 446 531 189 434 206 304 460 297  75 298 571 404   5 241 271 145
 209  42 124 205 572 232 597 251 236 415 549   2 611 418 245 183 515 509 230 322 235 278 444 219 182
 605 328  60 518 176 193 389 413  13 177 264 409 557   6  34 412 164 408 608 220 452 249 502 442 226
 211 425 180 313 186 542  57 467 349 261  18 447 401 375 495  96 255  89 550 363 603  38 432 179 493
  70 321 368 379 521  74 231 489 555 525 419 508 259 548 541 465 153 190 137 146  79 187   8  56 596
 173  97 111 402 362 221 565 332 519  24  25  84 386 607 485 355 512 558 484 117 104 567  37 469 229
 456 162 237 218 470  76 126 556 366 354  43  44  20 535 422 534   3 516 143 252 507 272 345 604 564
 185 250 623 127  28 527 253  30  14 113 238 482 505 499   9 152 602 517  86 478 385 591 198 528 405
 533 563 287  23 431  80 208  50 622 306  40 390 244 526 570 258 532 106  49 285 242 559 360  71 490
 501  41 481 606 445 265 268 506 443  39 167 342  53 618 463 577 191  90 217  55 391 347 587  69  63
  22 214 120  33 357 383 568 364 207 454 583  19 107 574 138 397 436 378 388  31 290 523 589 538 112

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00479e+07us (= 10047.9ms, 10.0479s)
Satisfaction error: 1
Number of search iterations: 5134
Number of local moves: 3859 (including on plateau: 3810)
Number of local minimum: 92 (including on plateau: 507)
Number of resets: 0
Number of restarts: 0

Problem in diagonal 0: 625 613 414 181 12 504 35 437 599 392 239 303 472 257 304 183 164 89 137 117 507 591 360 69 112 => the sum is 7716 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  96 563 566  89 137 612   6 172 147 220 232 492 584 347 608 253 428 223 174 130 284 218 238 396 610
 587 596 357 529 562 429 241 386  71 503 370 548 404 228 230 611 107  41 353 178 216 570 148 192 459
 166  74 281 408 602 405 595 196  15  63 250 243 398 423 560 164 236 427 163 521 247   9 550 530 299
 553 231 588 295 162 234 246  24 268 321 311  22 225 149 525 576 579 138 397  36 604 502 112 193 534
 598 373 180 111 354 545 306  87 176 477 600 430  86 155  82 489 399 593   7 206 512 123 183 365 388
 437  23 620 144  37 105  64 271 222 577 122 401 464 468 374 457 266 415 377 458 160 280 181 484 418
 104 499 106 482 279 475 455  30 515 509  95 262 143 486 552 141 303  47 471 433  66 309 505 443 115
  99 278 132 289 215 108 301 439 209 582 448 467 414 152 603 391 364 412 366 153 419 224 114 381 265
 474 422  88 622 188  10 173 547  79 465 235 154 189 118 242  55 447 302 451 485 527 270 615 542 125
 317 372 420 516 126 522 619 407 385 517 211  59  70 124   5 411 511 294 572 413 356 100 187  67 244
 261  73 190 101 621 592 368 165 538  92 323 199 508 594 390 296 360 535  18 256 473 277 325 208  62
 319 290  51 380 324 329 345 340 339 490 466 292 350 441  31 305 312 333 336 316 359 379  11 352 335
 269 308 363 328 334 318 349 344 346 320 291 326 341 331 307 285 332 314 288 252 298 286 282 330 283
 452 202 599 581 110 400  43 617 616 136 121 258 207 205  21 532 569  61 440 573  33  27 495 140 387
 469 184 426 558 483   2 384 481 139  32 167  78 255 528 523 267 254 496 460 102 395 425 513  84 120
 310 227 520 257 109 151 462 497 204 169   4  94 233 393 623 275 544 580 194 383 239  56 342 479 480
 260 506 402 338 417 361 540 589 198  42 601 442   8 500 217   3 245 287 409 343 456 435 182  28  16
 214 510 185  65 369 450 488 177 170 128  80 394 554 416 248 103 273 210 337 378  83 524 313 591 565
  19 197  76 171 514 274 157 539 315 134  46 543 618 297 491 158 406 507 348 445 389  13 605 304 259
 624 625 272 392 249 203 519 219 583 135 476  90  12  72  98 504  48  40 571  39  75 431 614 567 367
 546 117 213 263  60 487 575 531 555 559 200 493 470  57   1 446  97 142 251 191  93 327 221 436 494
  81 116  77 240  52 129 229 113 478 613 498 156 276  17 518  58  45 371 355 237 264 461  68 195 421
 472 453 376 127 574  14  91 424 501 403 551 606  34 556  26 133 438 146 293 585 578 590 432  35  53
  44  29 201 454 410 444 119  69 434  38 541 179 449 159 175 561 212 362  49 526 568 607 564 463 168
  54 557 536  85 537 226 150 161 322 300 586 597 533 609 375 351  50 549 145 186 131 382  25  20 358

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00502e+07us (= 10050.2ms, 10.0502s)
Satisfaction error: 3
Number of search iterations: 3632
Number of local moves: 3023 (including on plateau: 2976)
Number of local minimum: 32 (including on plateau: 354)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 587 596 357 529 562 429 241 386 71 503 370 548 404 228 230 611 107 41 353 178 216 570 148 192 459 => the sum is 8916 rather than 7825
Problem in row 22: 81 116 77 240 52 129 229 113 478 613 498 156 276 17 518 58 45 371 355 237 264 461 68 195 421 => the sum is 6068 rather than 7825
Problem in row 23: 472 453 376 127 574 14 91 424 501 403 551 606 34 556 26 133 438 146 293 585 578 590 432 35 53 => the sum is 8491 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  19 294 131 316 545 151 537 435 569 308 473  98 299 396  12 493 526 597 623 501  37 198 236  14  17
  31  33 606 408 510 373 441 444 172 291 576  65 518 137 135  21 422  55 389 402 483 412   5 225 246
 232 333  85 456 130 176 577 347 489 605 572 517 394 348 481 175 244   6 575 116 147 558  22  76 164
 307 161  29  94 197 305 256  63 366 534  53 227 611 488 238 613 390 586 129  48 548 474 508 383 217
  80 502 507 190 224 516 271 226 245 451 171  13 590 453 523 122 467 113  71 222 109 209 363 573 614
 479 466 241 547  39 146  45  74 607 277 592 351 279 601 382 625 414 532  81 123 430  61 263  95  75
 583 221  56 203 457  96 364 495 469 458  66 620  89 362 356 206 460 104  82 303 543 166 492 429 145
 459 207 257 239 369 384 538 265 184 513 482 357  15 337 439 220  52 158 530 593 255 170  43 470 289
  91  92   2  32  38 580 410 199 258  18 393 540 215 546 108 549 156 399 216 612 562 587 485 559 178
 361 110 417 486 604  41  27 343 134 133 405 541 286 267   3 234  60 509 550 519 618 494 295 310  78
 211 462 328 321 563 311 259 388 283 125 180 275 300 511 285 252 230 243 266 260 312 235 352 619 254
 371 128 233 491 395 554 160 163 420   1 183 120  62 418 584 344  47 522 204  99 107 157 544 302 503
 270 329 338 368 287 210 313 330 306 281 331 353 376 320 324 301 322 341 334 332 278 269 380 250 282
 290 505 187  90 115 557  83 375 588 445 119 319 165 150 585 448 280 272 609 253 140 174  67 594 415
 284 447 409 251 468 477 406 440   8 118 315 242 354 273 428  42 529 374  50 392 397 293 378  69 381
 212   9 555 342  46 153 261 603 268 454 525 317 139 449 595 416 100 208 542 345 193  23 391 182 497
 498 205 365 506  24 202 539 615 424 276 132 570 531 159 535 433 413 476  35 567  34 455 247 521 201
 471 487 582 552 179 599 326  51 339  30 327 407 425 237  28 608 192 480 461   4  79 370 218  64 309
 463 624 443 515 264 359 377 602 136 421  68 442 149 213 437 229 111  40 292 101  72  59 423 385 600
  70 450 564 346 579 499  44   7  58 475 431 112 231  57 155 318 114 367 304 484 191 436 591 452 490
 565 240 298  20 432 102 536 336 335 566 288  36 249  10 168 426 126 154 512 524 528 323 472 152 427
 167 403 404 465 574 400 124  26 560 616  77 214 106 127 194 148 610 340 103 177 419 568 117 325 561
 189 121 571 360  97 372 248 496 387  49  11 578 553 527  87 200 581 262 379 143 556 188 551 138 181
 533 398 144  86 185 169 219 274  25  84 617 162 411 297 223 314 621 514 434 355 401 446 186 622 105
 589 598  73 141 504  93 464 228 195 296 438 349 478 142 520  88 358 173  54 350 386 500 196  16 596

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00485e+07us (= 10048.5ms, 10.0485s)
Satisfaction error: 4
Number of search iterations: 3785
Number of local moves: 3024 (including on plateau: 2979)
Number of local minimum: 35 (including on plateau: 366)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 31 33 606 408 510 373 441 444 172 291 576 65 518 137 135 21 422 55 389 402 483 412 5 225 246 => the sum is 7400 rather than 7825
Problem in row 12: 371 128 233 491 395 554 160 163 420 1 183 120 62 418 584 344 47 522 204 99 107 157 544 302 503 => the sum is 7112 rather than 7825
Problem in row 17: 498 205 365 506 24 202 539 615 424 276 132 570 531 159 535 433 413 476 35 567 34 455 247 521 201 => the sum is 8963 rather than 7825
Problem in diagonal 1: 17 225 22 474 109 123 82 158 156 234 285 418 376 319 315 454 424 51 377 499 432 465 571 398 589 => the sum is 7573 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 582 584 125 213 450 485 304 541 236 218 370 255 211  30 386 557 104 249  42  52 612 349 263 406 201
 616 553  66 291  62 587  74 453 159 414 182 544 242 280 467  40  37 547 436  26 107 163 581 574 324
 611 521 623 598  22 516 149 194  24 405 340 601 447 589  58  79  76 174 256 379  48  28 421 429 237
   9 166 151 619 497  18 551 205 427 172 548 148 525 156 487 191 535 391 578  34 586 462  73  56 240
  71 345   5  45 458 395 621 559 223 529  11 130 563 143 508 483 197 303 265 164 393 513  36 248 617
 274 371 168 117 215 435 101  29 123 138  23 355 333  64 202 251 540  84  78 575 339 532  35 571 175
 468   7 592 292 622 510 570  43   8 369 549 550 530 492  25 522 227 186 399 552 131 372 491  46 556
 137 122 118 478 488 307 543 375 433 364  53 296 146 128  93 536 352 481 208 254 608 401 590  32 282
 169 216 477 517  92 539 297 577 403  72 503 383 158 400 271 496 603 195 506 452 489 273 176 604 407
 206 290 533 178 461 232 335 110 469 147 404 476 328 473 289 418 499  90 620  81 262 222 193 241 268
 347 610 287 334 566 139  88 439 350 360 424 244 443 192 415 266  31 451  94 493  51 459 272  13 457
 509 367 456 286 299 276 219  68 295 315 171 309 100 524 326 519  60 331 455 618 239 343 546 155  39
 228 204 301 365 338 409 257 366 270 278 342 285  91 209 368 294 323 426 354 351 341 402 410 284 329
 441 302 432 420 438 246 394 353 167 165 109 181  38 259  55 332 537 518 188 388 484 106 381 591 300
 226  97 312 356 112 357 446 320 234 275 416 382 121 585 321 113 422 607 217 380 281 313 588 124 220
 494 387 596 560 269  27 212 615 210 235 594 108 359 449 253 173 132 384  21 361 374 207 428 344  33
 576 527 397  75 327 377 317 145 190  87 526 267 233 572 605 389  99 115 448 135 474  70  15 348 511
  69 310 568  98 264 153 179 471 225 561 437 187 599 545 199  12 554 162  83 501 373 600 183 363 129
 134 160 445  89 238 116 136 230 119 434 200 298 593 595 330 221 580 396 311 306 258 126 358 114   1
 479 198 512  20 531  65 247 189 609 203 500 102 336  63 606 579  10  59 482  77 224 431 385 398 520
 569 142 152 495 279 250 625 288 505 464 325 425  50 528 515 196 127  44 583 444  96 120 170  57 376
 105 504   6 177 185 624  95 514 419 538  16 442 440 144 542 378 466 465 161 243 231  61 319 260 490
  80 562  85 573  49 154 423 507 558 314  67  82 412  86 140 229 214 346 293 565 502 463 103 564 454
 411  19 141 157 133  41 305 180 555 460 470 523  47 316 362  17 498 413 597 283 318 392 322 390 475
  14 261 277 472 430 567 337  54 614 308 245 252 480   3   2 534 602 408 150 111   4 417 486 613 184

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00495e+07us (= 10049.5ms, 10.0495s)
Satisfaction error: 4
Number of search iterations: 3923
Number of local moves: 3212 (including on plateau: 3166)
Number of local minimum: 35 (including on plateau: 408)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 274 371 168 117 215 435 101 29 123 138 23 355 333 64 202 251 540 84 78 575 339 532 35 571 175 => the sum is 6128 rather than 7825
Problem in row 7: 468 7 592 292 622 510 570 43 8 369 549 550 530 492 25 522 227 186 399 552 131 372 491 46 556 => the sum is 9109 rather than 7825
Problem in row 9: 169 216 477 517 92 539 297 577 403 72 503 383 158 400 271 496 603 195 506 452 489 273 176 604 407 => the sum is 9275 rather than 7825
Problem in row 19: 134 160 445 89 238 116 136 230 119 434 200 298 593 595 330 221 580 396 311 306 258 126 358 114 1 => the sum is 6788 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 605 495 513 310  48 539 592 255 199  30 617 238 242 585 350 297  13  89 327 183 557 355  57 192 137
 180  78 236 576 252 573 462  63 546  95 270 518 604  68 260 378 544 571 243 109  20 437 113 412 217
 117 127  16 464 338  97 547 225 205 505 593 420  84 245 171  73 419 141 348 456 532 601 362 375 364
 483 235 556 169 150  65 403 583  82 128 114 207 461 153 559 608 185 425 210 622 151 492 322  52 410
 118 590  74 389 384 147 130  43 144 287 528 396 504 566 572 167 349 523 414 531 123 132 240 599 283
 481  72 619 122 561 231  31 200 620 376 126 534 110 475 501 525 506 166 224  58  46 533 161 511  36
 273 417 415 618 377 249 206 251 289 470   6 165 370 106 247 519 570 336 135 341 426 239 337  25 438
 316 119 172  10 448 335 112 510  60  67 254 564 562 177  81  88 596 452 624 535 328 204 427 360 424
 184 105 444 409 221  32 237 393 488 401 241 418 372 473 423 606 382 405 373  70 367 152  59 413 157
 208 223  94 111 142 116 445 404 315 621 388  66 514 509  92 436 258 257 560 365 422 352 521  23 383
 541 168 361 353 156 256 612  64 479 455 549 394 230  91  86 314 385  12 500 359 181 211 591   8 469
 440 594 182 143 603 613  28 569 368 201 411 131 162 607 465 102  99 190 121 163 248 369 124 548 344
 300 332 309 306 292 342 321 346 334 323 312 330  41 296 333 274 318 311 288 317 339 307 264 587 303
  33 186 582 104 164 202 218 363 499 145 432  35 588 439 402 196 494   4 542 232  75 271 526 354 331
 458 625 269 282 476 267 305 285 308 281 301 265 290 253 286 246 278 259 262 250 381 416 244 275 263
 391 555  96 234 453 443 550 374 442 226 522  15 552  47  80 390  50 392 527   9 595 209 170  49 454
 530 380 357 471  18 467 524 100 478 340  44 149  55 140 178 222  11  19 540 399 558 356 609 586 294
 497 304 460 538 623 277 115 347  17 276 351 545 298 366 138  24 188 279 198 482  39 565 398 429  71
 326 212 553 268 203 433 324 474  87 493  85 614 229  42  27 484 487 463 319   1 447 215 280 175 584
  54  77 498 431 503 129 434   3 597 407 472   7 449 536 581 428  38 490 139  56 579  53 537 219 108
 227 451 343 600 435 551 101 457  83 400 154 575 148 216 515 134 325 615 146 187 516 197  29 284 136
 430 266 195 517 103 386  61 174 397 120 502  79 293 379 446 160 602 158  45 491 233 529 480 477 302
  40 466  76 213 580  90 155 512 320  22 194 508 179 408  51 574 468 563 329 577  21  26 496 507 450
 107 520 272 125  34 387 358 616 295 589 345 459 395 489 371 578  69 220   5 421  98 291  37 176 568
 486 228 133  62 261 598 554 214 173 567  14 193  93 159 610   2 191 485 406 611 543 313 441 189 299

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00492e+07us (= 10049.2ms, 10.0492s)
Satisfaction error: 3
Number of search iterations: 4315
Number of local moves: 3569 (including on plateau: 3521)
Number of local minimum: 41 (including on plateau: 390)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 118 590 74 389 384 147 130 43 144 287 528 396 504 566 572 167 349 523 414 531 123 132 240 599 283 => the sum is 8233 rather than 7825
Problem in row 14: 33 186 582 104 164 202 218 363 499 145 432 35 588 439 402 196 494 4 542 232 75 271 526 354 331 => the sum is 7417 rather than 7825
Problem in diagonal 1: 137 412 362 492 123 58 135 452 382 436 86 607 41 35 301 226 478 347 324 129 435 517 76 520 486 => the sum is 7597 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625 242 298 615 293 229 170  26 265 506  75 214 184 534 158 188 385 616 424 482 517 105 425 150  99
  86 414 382 279 532 161 331   1 500 131 587 566 140 445 460 252 109  56 234  76 277 487 163 576 580
  60  85  90 327 545  21 437 402 415 418 147 513 179  80 472 590 268 314 250 420 413 520 241  18 600
 477 527 345 550 377 369 246 181 604 191 542 295  68   3 160  45 602   5 468  33 610 466  12 159 490
  87 497 177  83 433 621 211 204  54 183  48  67 608 570 273  95 569 484 404 577  46 463 247 537 287
 465 559 394  29   7 257 114 136 516 238 439 208 573 618 430 449 469 543 336 283   9  37 407  74 235
 218  59 284 220 243 236  44 549  72 464 553 458 106 467 127 368 352 133 597 412 269  89 459 138 427
 540 281  40 111  16 392 508 421 357 313   6 514 495 185 144 176 149 591  11 552 567 541 611  92 212
 226 387 475 428 558 386 456  73 186 589 282 350 435 112  96 253 280 194 562 249 154 346  62 454 232
 262 225 408 378 398 393  52 366 192 416  49 381 396 379  20 362 388 411 406 364 389 375 390 360  65
 145  35 210 478 354 395 258 143 599 372   8 531 510 237 605 341 303 503 121 172 403 206 480 347  69
 267 196 560 132 476 373 409 592 200 493 363 276 222 334 228  78  14 223 397 288 431 438 264 259 312
 304 365 310 342 339 316 297 337 317 326 335 349 195 344 300 330 309 291 275 292 302 311 308 325 306
 173 523 174 609  27 104  36 351 119  43 613 209 391 256 239 301 572 380 213 166 571 101 588 509 557
 529  28 290 305 624 544 561 299 491 116  25 137 289 248 323 125 530 535  51 108  94 319 554 582 118
 329 432 586 547 320 499  91 215 340 155 486 203  30 505 581 470  42 384 512  66 167 526  71 501 274
 367 100 120 202 227 410 601 231 244 207 135  15 574 594 450 333 190 270 583 603 169 315 189 436 260
 494 175 263 533 417 546 197 321 164 489 453  34 307 152 123 399 370 180 623 318  63 578 338 286   2
 598 536  10 219  64  70 612 492 233 383 488 614  97 151 585 129  58 504 139 353 595 130 198 141 426
 575 217 620 205 596 555  23 278 355 156 565 452 322 401 356 113 178  41  84  98 153 446 296 216 524
 126 507 271 115  77 376 564 479 328 617 193 103 419 124 485 607  39 332  31 568 224  53 405 285 471
 162 261 593  55 107 110 423   4 606 294 538  38 441  93 525 563 511  82 551 400 187 146 442 245 448
 457 374 455 443 171  88  79 619 134 519 102 518 361 122 462 444 434 148 251 447 358 168  32 522 117
 240 429 451 272 496  50 483 521 473  24 254 579  22 528  81 266 474 440  47  17 498 502 422  57 199
  13 371  19 348 128 324 622 584  61 182 539 201 461 343 142 548 230 165 255 481 359 157 221 556 515

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00489e+07us (= 10048.9ms, 10.0489s)
Satisfaction error: 4
Number of search iterations: 3658
Number of local moves: 2961 (including on plateau: 2915)
Number of local minimum: 35 (including on plateau: 364)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 218 59 284 220 243 236 44 549 72 464 553 458 106 467 127 368 352 133 597 412 269 89 459 138 427 => the sum is 7344 rather than 7825
Problem in row 16: 329 432 586 547 320 499 91 215 340 155 486 203 30 505 581 470 42 384 512 66 167 526 71 501 274 => the sum is 8332 rather than 7825
Problem in row 21: 126 507 271 115 77 376 564 479 328 617 193 103 419 124 485 607 39 332 31 568 224 53 405 285 471 => the sum is 7799 rather than 7825
Problem in diagonal 0: 625 414 90 550 433 257 44 421 186 416 8 276 195 256 323 470 190 180 139 98 224 146 32 57 515 => the sum is 6545 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 367 618 582 234 581 273  80 313 263 212 159 239 604  54 184 203 330 147  73 390 335 449 171 356 608
 360  76 111 487 116 532 536 448 615  74  78 568 614 561  82 406 129  96 209 119 101  88 250 580 589
 408 569 202 151  63 543 310 245 456 421 207 611 230 236 612 602 332 158 598 473 140  93 555 491 105
 423 146 551 404 219 445 388 114  16 189 530 227 210 475 381 162 399 624 124 437 403 518  30 244 166
 557  48 590 622  77 267 595 453 387  34 181 193 472 293 500 271 542 261  45 289 484  19 160 396  89
 266 462 471 490 143  91 197 504 322 481 128 503 454 501 120 418  28  14 451 376 486  60 464 173 222
  86 528 524 320 395 523 613 180  75 182 131 593 264 470 257 220 142 287 526 592 155 603  13   9 563
 507 232 617 115 562 237 467 132 411  35 358  10 494 122 213 432 556 112 499 401  32 496 284 277 224
  55 307 458 544 447 121 478 621 152 371 573 355 108 452 375 380 425 238 206 195 164 349 361  29  61
 256 474 392 327 302 157 272 240  37 620 415 393 391 161 441 483 215  94 347 588 337  43  95 319 426
  52 382 214 280 623 281 386 519 607 145  67 226 194 385 344 100 527 191 285 123 508 511 428  17 430
 515 342  56 177 506  46  98 365 383 126 414 259   7 412  36  81 600 625 570 457 574  50 488 450 188
 306 304 336 138 309 343 325 318 326 298 296 341 440 314 305 279 291 402 328 316 286 303 312 308 301
 559 591 278 340 228 533 329 137 572 299 275 290 260 176 253 373 282 324 297  12 315 317 242 251 292
   6 231  97  15 427 364  33 477 379 366 233 510 567 205 398 585 168 311 353 208 218  84 397 606 587
 192 199 134  72 258 534 558 370 172 179 513 482 221 117 435 102   3 436 422 348  44 547 599 554 334
 405 144 438 444 216 463 378 109 139 596 178 167  25 323 541 493 446 564 103 509 141  66 345 479 113
 118 150 276 597 420   1 512 274 495 154 619  20 455 485   4 439  92 548   8 235 200 442 538 539 204
 270  87 125 248 601 416 153 350 616 578  40 268 410 540 545 288 502 468  59  58 576 174  70  11 372
 535 295 211 522 175 363 255 550 106 521 104 110 529 254 579 183 249  57 583 127 338 575 148 156 300
 135 136 377 225  71 163  83 229 357 520 492   5  21 605 374 394  68 354 185 246 359 283 241 321 169
 466 498 433 130 247  47 223  64 217 346 505 546  38  51 198 190 170 489 419 552 460 384 571 516  65
 586 537  41 565  53 497 465 609 400  85 339 461 333 553  24  23 480   2 252 149 469 262 107  99 434
 368  62 269  26 424 196  69  18  79 517 413 409 133  49 165 531 584 594 369 331 610 560 431 201 417
  27 407  42 352 362 389  22 186 243 476 577  39 351  31 459 187 265 429 514 294  90 549 525 443 566

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00501e+07us (= 10050.1ms, 10.0501s)
Satisfaction error: 4
Number of search iterations: 4422
Number of local moves: 3562 (including on plateau: 3514)
Number of local minimum: 36 (including on plateau: 450)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 408 569 202 151 63 543 310 245 456 421 207 611 230 236 612 602 332 158 598 473 140 93 555 491 105 => the sum is 8811 rather than 7825
Problem in row 7: 86 528 524 320 395 523 613 180 75 182 131 593 264 470 257 220 142 287 526 592 155 603 13 9 563 => the sum is 8251 rather than 7825
Problem in row 21: 135 136 377 225 71 163 83 229 357 520 492 5 21 605 374 394 68 354 185 246 359 283 241 321 169 => the sum is 6413 rather than 7825
Problem in diagonal 0: 367 76 202 404 77 91 613 132 152 620 67 259 440 176 398 102 446 548 59 127 359 384 107 201 566 => the sum is 6973 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 486 474 211 116  63 578 267 281 124 172 526 465 131 497 123 284 592 496 196 215 503 452 420 106  47
 470  94 514 349 248 142  74 532 176 500 368  27 200 560 254 435 535  88 528 329 437 191 337 302 135
 126 565 472  68 326 194 363 491 298 136 343 587  36 212 249 277 406 593 295  96 303 177 613 204 395
 207 428 107 353 455 448 173  24 225 464 327 382 619 279 367 376 237 149  21 558 615 502 293  51 165
 239 388 139  28 161 185 296 390 568  79 127 600 430  25 386 352  55 197 575 282 607 529 334 518 335
 567 438 501 143 181 271 398  67   8 566 319 333 440  39 523 444 617 128 234 159 366 446  30 171 436
 462 140 550 274 307 512 509 499  56 253 483 138   9 572  93 595  87  73 442 166 397 308 157 265 478
 418 507 255 156  48 396 540 364 112 132 280  97 524 561 346 544 405  66   1  33 370 616 481 487  86
 379 439  23 511 129 378  85  20 469 490 489 606 461 429  46 564  44 594 205 466  40 114 243  10 591
 359 320 533 510 358 589 545 231 285 258 241 186 563 412 357  64 146 117 288 275 278 175  80 245 410
 458 373 375  76  84  78 400  52 227 519 408  59 426 103 577 220 531 424 543 515 299  34 188 339 517
 393 480  22 330 377 402 374 331 527 287  29 477 403 338 134  72 289 328 276 350 305 371 361 269 300
 268  82 475 450 622 252 137 147 111 498  49 316 230 348 505 228 599 413 451 169 193  31 318 612 321
 122 597 443 261 313 218 251 598 219  91 272 314 585 521 571 623 158 354 453 226 190 102 101  60 182
 222 187 232 221 250 431 270 384 323 394 596 292 264 189 372 520 309 208 340 356 355 244  77 580 209
 256   7 229 590 552  12 290 216 488 133 154 441 614 238  54 178   5 301 381 542 392 479 306 584 383
 145 539 310 214  43 583 160 506 202 404 433 610 473 224 210 180 242 341 317 325  57 380 541  26 360
  58 266 344 148  90 233 286 467 553 184 206 508 201 109 484 414 164 537  16 423 427 574 401 108 624
 555 119 240 419 618 425 322 347 495 152 573 115 167 183 260 416  99   6 198 551 611 174 195 485 100
 557 324 312 120 562  32 409   2 468 247 407 162  14 170  71 576 311 155 447 362 460  62 601 538 456
  89 118 213 570 471 534 105 236 257 342 144  53 389 604 609 369 294 536 130 559 150 621 603  98 588
 113 151  17 620 385 263 605 476  61  38 415 141  35 411 283  65 445 516 586  13 246 163 199 504 217
 125 168 399 548 549 291 530 192 569 608  81 579 153 365  37  15 273 556 235 304  50 625  18 463  92
 492  19 387 203 454 336  45 459 582 581 223  75  41 432 421   3 525 554 546  69  70 110 434 449 315
 259 602 522 547 179  42 391 513 422 297 332 262 417   4 493  11 457  95 121 482 104 345 494 351  83

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00508e+07us (= 10050.8ms, 10.0508s)
Satisfaction error: 2
Number of search iterations: 3983
Number of local moves: 3288 (including on plateau: 3240)
Number of local minimum: 26 (including on plateau: 398)
Number of resets: 0
Number of restarts: 0

Problem in row 21: 89 118 213 570 471 534 105 236 257 342 144 53 389 604 609 369 294 536 130 559 150 621 603 98 588 => the sum is 8682 rather than 7825
Problem in row 22: 113 151 17 620 385 263 605 476 61 38 415 141 35 411 283 65 445 516 586 13 246 163 199 504 217 => the sum is 6968 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 619 319  28 198 605 199 356 475  26 235 215 537   2 599 126 516 514 385 339 193  18 288 268 197 568
 398 564 138 493 125 349  53 245 111 620 391 415 289 387 171  21 225 279 393 522 547 150 419 465  55
 298 332 587   8 127 578 340 153 169 487 277 417 405 143 282 330 119 472 535 326  69 131 500 497 243
 544 342 275 236 266  13 207 469 290 251 118 167 212 423 580 486 403  85 152 561 144 503 422 381 295
 301 173  41  32 470 175  72 122 586 523 347 555 203 614 558  98 232  38 623 427 533 123 240 172 567
   3 443 250 209 307 412 566 249 488  71 404 601 442 178  62 609 228 610  43 431  79 525 273 328  14
 485  96 164 534 184 441 468 495 524  24 588   9 206  86 189 181 531 429 451 261 507 416  46 139 371
 368  42 363 386 452  76 408  54 359 227  80 600 382 327 158 557 463   1 409  35 515 140 536 532 355
 370 230 238 354 329 324 313 294 314 195 604 364 379 333 394  12 374 572 168 211  17 305 608 182 341
 180 528 597 563 459 377 263 237   5 383 113 616 624 615 130 585 156   6 310 107 183 353   7 187 241
  36 435 334 437 231 426 318 490 361 453 331 489 141 348 256 300 357  51 376 457 254 365 194  89 296
 400 543 142 380 337 560 510 253 612 185 132 375   4 455 513 291 613 274 234 166 162 462 320 155  50
 484 159 343  31 336 283 617 448 120 390 133 108 302 286 174 306  15 420 521 297 226 622 436 220 548
  78 483 148 583 267 208 552 438 473 104  99 281 491 276 471 272 366 478 115 304 446 519  47 191 135
 346 299 397 607  49 539  10 554 252 592 410  65 335  11 269  97 392 596 213 293 593 255 233 271 147
 401 312 517 222 110  87  20 421 264 229 258  92 177 414 262 358 505 550 116 542 242 157 530 498 541
  57 360 248 450 170 325 101  44 136 570 308 399 591  19 482 425 224 433 428 102 309 316 407 352 569
 149  23  67 239 205 621 527 100 571 270 461 134  60 217 577 502 109 145 200 556 246 598 247 606 395
 480  88 373 369 466  16 221  82 551  95 445  30 512 540 196 285  91 447 129 344 434 576  39 454 562
 317 595 549  63 553 161 188 218  29  70  74 151 467 176 492 511  40 440 499 179 594 117 372 494 476
  56 460 389 216  34  27 278 112 345 579 574 338  68 565 430  61 287 146 625 520 378 137 559 582  59
 315 323 545 103 388 449 424 603 418  45 477  66 311 192 501 154 292 257  73 529 538  58 350 210 204
 504 474 105 322 219 265 201 244  81 367 508 611 351 259 479 464 260 362 223  64 573 190  77  33 589
  52  37 506 384 590 396 509 444 214 402 456 321 432 160  48 124 411 163  75 114  90 413 602 496  83
 584 165 481 406 546 518 303 581 526 458  22  84 439 202  25 280 618 186 575 284 128 106  93  94 121

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00495e+07us (= 10049.5ms, 10.0495s)
Satisfaction error: 2
Number of search iterations: 4992
Number of local moves: 4064 (including on plateau: 4016)
Number of local minimum: 47 (including on plateau: 501)
Number of resets: 0
Number of restarts: 0

Problem in row 12: 400 543 142 380 337 560 510 253 612 185 132 375 4 455 513 291 613 274 234 166 162 462 320 155 50 => the sum is 8128 rather than 7825
Problem in row 24: 52 37 506 384 590 396 509 444 214 402 456 321 432 160 48 124 411 163 75 114 90 413 602 496 83 => the sum is 7522 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 398 524 402  96 461 266 399 137  66 591 152 197 510  78 198 259 356 123   7 394 298 234 483 597 599
 369 289 413 153 214 543 145  65 614 462 523 590   5 283 207 602 231 239  35 126 114 401 572 576  54
 589 488 605 323 339 595 617 148  26 218 155 243 220  71 433 381  50 387 352  14 187 170 562 157 495
 112 163  57 223 319 161 128 555 507 122 372 188 404  84  46 158 201 332 534 580 537 538 548 492 464
 440 293 491 246 361  87  83 581  11  94 585 365 573 340 571 110 540 227 603 467   4 466  74 180  33
  97 380 527  61 106 349 335 533 470 499  89 513 558 436 185 224 236 521 412 479  16 154 245 368  32
  68 129  99 414 184 460 238 364 396 144 517 551 494  95  62 539 463  45 446 357  18 378 453  51 496
 113 451 194 423 505 512 217 181 101 449 425 429  92 397  91 395  90 439 173 443 452 292  23 409 529
 382 200 206  75  53 421 195 618 600  41  19 374  55 519 278  29 442 518 133 410 556 366 480 511 344
  44 485 503 536 405  49 608 102 474 403 316 363 156 244 481 377 149 248 190 264 554  81 312 345 136
 229 422 623   1 552 579 196 360  12 346 420 475 141 108 104 547 582 107 441  77 385  21 389 210 498
  56 221  88 348 546 325 431 347 324 615  48 341 351 450 327  22 338 295 305 164 484 183 362 471 383
 321 336 370 254 317 326 302 358 350 306 307 235 390 329 203 310 311 337 294 299 444 279 262 284 301
 315 282 281 322  20 313 297 249 593 255 265 260 120 242 277 502 287 304 290 272 598 609 331 233 308
 625 448 300 333 407 622  79 309 570 386 251  85 258 541 568   6 273 268 237   3 274 271 212 247 252
 230 355 392 624 179 619 565 434 257 226 204 199 455 135 359 150  63 549 330 213 575 559 174  60 151
 500 261 241 592 186 111 419 334 240 578 583  47  69 428 611  70  93 117  98 343  43 596 216 472 577
 601  42 447 465 219 118 143 175 125 550 250  76 116 166   2 476 487 430 411 280 171 566 604 563 342
 415 267 353 493 482 253 146 468 193 256 620 140 454 506 473 178 384 182 138 296 139 367 142 275 205
 416  31  72 445 208 124  58 121 162  80 222 131 457 561 564 354 520   8 528 469 437 406 531 375 545
 588 567 119 109 478  13 504 225 165 189 490 612 376 616  39 607 191 542 560  30 438  52 215 105 127
 373 621  15 132 509 176 371 134 525  37  25 514 435 192 610 211 426 613 115 544 501 100  82  67 497
 276  17 320 391 285 232 303 522 270 432 288 269  34 314 418 328 553 584 574 606 169  86  36 388 130
 228  27 530 594 417 147 489  28 318 167 291  59 587 427 516 458  24 400 160 209 393 586 508 103 159
  40 526 177 172  73 424 557 477 456 379 408 569 515 263 202 532 535  10 459 486  38  64   9 286 168

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00492e+07us (= 10049.2ms, 10.0492s)
Satisfaction error: 4
Number of search iterations: 4388
Number of local moves: 3390 (including on plateau: 3343)
Number of local minimum: 58 (including on plateau: 438)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 68 129 99 414 184 460 238 364 396 144 517 551 494 95 62 539 463 45 446 357 18 378 453 51 496 => the sum is 7461 rather than 7825
Problem in row 16: 230 355 392 624 179 619 565 434 257 226 204 199 455 135 359 150 63 549 330 213 575 559 174 60 151 => the sum is 8057 rather than 7825
Problem in row 21: 588 567 119 109 478 13 504 225 165 189 490 612 376 616 39 607 191 542 560 30 438 52 215 105 127 => the sum is 7957 rather than 7825
Problem in diagonal 0: 398 289 605 223 361 349 238 181 600 403 420 341 390 242 568 150 93 430 138 469 438 100 36 103 168 => the sum is 7733 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 624  11 336 584 217 528 491 222 606 229  54 499   4 313 325 583 171 238 216 196 126 387 261 106 498
 549 590 232 399 452 384  64 406  27 475  80 440 278 189 131 188 524  41 576  47  69 506 472 556 150
 431 116 123 430 269 562 323 558 521 595 272 198 489 492 537  53 470 420  19 474 228 570  35 223   5
 124 165 527 548 193 121 149 543  22 410 552  24 386 309 547 105 362 412 515 421 542  66 111 513 158
 159 211 394 608 510 383 553  76  32 118 311 349  93 379  67 442 360 589  68 605 467  40 444 468  99
 601  18 170 424 370 481 416 214 361  62 268 447 551 267 413 363 573  89 117 276  98  73 401 380 392
 371  16 107 288 461 569 450  33  91 480 464 183 160  20 613 531  50 439 348 449 586 166  78 532 340
 366 458 248   3 343 194 167 445 202 125 611 616 507 419  92 534 465 201  37 152 271 317  30 599 423
 594 389 402 110 233   2 610 490 436 101 162 172 329 127 457 130 437  94  29 203 471 427 580 408 432
 541 593 503 143  15 378 252 221  81 377 219 112  86 234 395 414 346 409 578  12 199 559 398 372 388
 282 451 426 239 422 352  88 505  63 533 301 466  25 581 367  61 607 560 493 102 277 156 176 213  79
 453 381  70 296 514  87 220 173 443 459 354 368 614 504 206  46 157  39 435 577  72 397  48 428 484
 324 293 418 281 369 283 335 331 332 318 290 314 274 322 253 315 298 328 334 337 305 302 264 339 266
 295 625 279 285 299 286 338 312 477 289 113 496 259  52 240 617 287 258 294 244 257 316 342 265 300
 483  90  75 174 109 441 587 330 429 433 310  43 571 545 297 615 411 185 104 345 604  95 358 135  56
 195 415 242 519 350 291 100 479 469 254 154  49 344 530 180 246 497 400 182 582 486 133 434  84 210
   1 525 249 255 546  51 554 175 540 241 526 574  34 454   6  71 207 357 327  82 284 508 262 509 487
  60 230 598 139 190 163 621 226 563 191 618 237 225 321 482 393  13 187 247 177 320 184 485 376 579
 236 119 564 319   7 463 304 382 516  38 365 120 373 385  36 243 141 263 572 355 303 597 561 307 256
  96 448 557 495  57 140 396 523  31 620 602 603 108 292 179 161 209 148 539  44 341 494 405 132 205
  14 168 403 522 585 260  59  83  85 147 138 488 502 275 575 353 308 529 520 245 122 518 270 511 145
 356 164 142 103 568 600 218 619 250 550 192   9 591 438 197 204 212 375   8 536 136  77 596 280 404
 478 512 186  42 535  28  55 231 565  65 144 391 476  45 455 235 115  97 609 538 566 153 151  21 544
 169 215 374 146 137 155 128 134 227 351 501 181 129 306 567 460 588 612 251 326 517 359 390  10 592
  23 622 200 473  74 623 347 114 456 364 224 446 417  26 208 462  17 555 407 500 178 425 273  58 333

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00447e+07us (= 10044.7ms, 10.0447s)
Satisfaction error: 2
Number of search iterations: 3560
Number of local moves: 3007 (including on plateau: 2958)
Number of local minimum: 28 (including on plateau: 296)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 431 116 123 430 269 562 323 558 521 595 272 198 489 492 537 53 470 420 19 474 228 570 35 223 5 => the sum is 8413 rather than 7825
Problem in row 23: 478 512 186 42 535 28 55 231 565 65 144 391 476 45 455 235 115 97 609 538 566 153 151 21 544 => the sum is 7237 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 468 172  86 168 292  47 293 584 527 263 163 559 126 151 257 464 449 296 329 302 344 355 306 225 599
  25 150 266 614 620  69 227 345  19 201 132 450 122 130 548 220 485 267 441 617 118   1 603 572 583
 203 487 108 431 408  79  75 232 566  27 525 348  23 515 484 234 270 136 547 198 579 167 589 106 488
 546  18 513 532 199 461 597 124 428 187  15 205 545  99 567 254  13 389  58 418 107 446 578 465  61
 318 425 285 528 523 536   6 326 290 601 568 103 323 384 521 298  91  82  21 497 478 541 398  49 258
   3 262 421 131 299 105 624 404 592 560 399 504  11   5 240 158  85 612 540 463 281 144 226 393 363
 356 564 508 180 312 116 503 244 426 385 237 411 336 188 544 471  51 565 514 175  14  26  38 534 127
 591 434 192 562 174 364 135 454 529 115 416 171 407 102 374 581 113 342 190  22  71 280 569 413 224
 417 208 616  16 573 625 377 125 498 152 481 235  57 563 129 507 360 383 210  42 443 196  83 440  89
  94 549 279 588  65 586 304  96 371 420 495  52 114 170 590 380 558  28 397 522 452 250  30  54 381
 140 376  36 491  32 472 414  93 134  20 405 379 477 375 403 595 451 391 378 178 101 623  87 351 423
 347 365 330 368 390 328 366  35 316 346 334 300 319 313 287 289 307 339 372 358 340 256 362 294 164
 149 325 352 310 317 295 338 361 332 331 265 350 303 335 315 248 343 301 314 458 286 320 337 311 229
  84 466 605 275 476 278 509 550 406  76 473 274 611 284 502 141 291 155  81  97 574 341 112  43 121
 462 165 143  95 415 492 410 252 230 517 530  37 283 594  56 499 370 455 194 186 238 288 218 261 435
 475 539  68 273 239 242 554 580 228 243 249 216 247 207 259 241 221 354 219 111  72 459 490 570 469
 217 516 223 424 542 367 173 382 182 432 146 388  48 386 156 561 214 233  31 157 353 437 467 394 396
 436 445 621 110 322  62  77 212 197 512 200  98 576  70  40  53 606 308 582 369 453 552  88 236 600
 598 189 148 510  74 457 166 615 142 277 479 191 400  45 177 533 526 419 160 145 246 268 553 505   2
 433 496 305 297 439  46 211 493  73 162 427 483 448 494  64 470 137 272 123  34 602  44 169 269 209
 585 231 506  66 109 181 255 480 119 456   7 537 253 264   9  63 571 438 604 401 117 392 195 557 429
 276  41 460  78 213 613 422 133  33 622 120 608 575 619 215  50 185 147 474 610 179 482 349 282  39
 500 204 153 206  29 593 524   4 489 402  24 271 442 486 577 193 202 324 139 555 409 251 609 184  55
  92  60 154 245 176 321 161 518  80 501 607 596 260 535  67 100 395 430 520 359 412 333 357   8 538
  10 138 447 327 587  90 104 183 618  17 128  59 519 511 444 222 531 159 387 551 556 373  12 309 543

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00505e+07us (= 10050.5ms, 10.0505s)
Satisfaction error: 2
Number of search iterations: 4155
Number of local moves: 3368 (including on plateau: 3319)
Number of local minimum: 42 (including on plateau: 436)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 318 425 285 528 523 536 6 326 290 601 568 103 323 384 521 298 91 82 21 497 478 541 398 49 258 => the sum is 8450 rather than 7825
Problem in row 20: 433 496 305 297 439 46 211 493 73 162 427 483 448 494 64 470 137 272 123 34 602 44 169 269 209 => the sum is 7200 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625 126 554  21  42 500  45  19 446 178 364 250  43 161 339 279 281 612 277 292 555 567 299 538 412
 506 593 206  99 317 565  50 611  29  59 201 566 480 454 234 205 368 434 133 171 158 601 264 183 338
   8 196 294 331 610 173  70 545 550 307 520 127 614 306 332  90 579 266 571 125  78 343 563  25 202
  65 386 335 546 238 226 346 448 232 447  84 141 505 376 225  12 430 493 602 251   1 457 450 276 253
 130  86 252 592 514 362 501 139 242 329 391 334 513 167 597 114 283 366 172  82 560 132  56 419 492
  34 267 553 193 301 249 400 389 511 314 308 523 108 208 558 605  35  46 371 519  13   2 432 280 606
 507 189  49 495 620 163 468 609 390  15 456 110 199 246  38 534  23   7 175 397 287 485 529 599 235
 210 552 269 498 484  68 203 106 300 418   4   6 297 322 488 564  73 428 119 525 497 103 477 375 439
 489 229 213 327 352 388 285 316 414 431 135 502  14 607  76 407 180 288  16 422 561 378 427  98 270
 541  61 263 262 118 615 574 396 616 618 466 105 404 186 101 340 164 176  40 228 117 319  92 587 436
 359 165 211 384 342 374 548 365 349 166 358 413 382  95  36 405 369 344 570 330 274  52 240 341 353
  83 510 190 156 227 147  77 509 137  71 573 415 370 111 524 478 157 583 598 603 311 218 140 168 469
 458 504  20 257  33 357 423 194 549 367 586 393 231  28 336 372 594 522  17  72 462  44 350 487 169
 151 315 584 333 572 536 542 124 128 595  93 177 220 305 461 290 441 248  67 325 123 160 420 129 486
 577 589 363 146 383 604 219  88  66 236 268 392 360 116 416 289 243 328 241 435  27 245 568 303 323
  87  18 481 582 345 324 154 379 112 148 237 483 452 591 608 518  39 310 284 188 355 402   5 138 585
 348 394  41 453 247 109 351 259 302 445 373  32 535 528 185 472 200 261 275  26 576 556 144 531 182
 425 421  37 215 142 278 621 544 465 296 588 102  75 356 143  58 265 162 361 204 398 562 476 600  31
 473 622  81  89 490 239  96 209 508 187  80 293 214 619 377  74 463  62 191 443 539 401 120 408 547
 207 312 623 221 181 100  10  53 244 464 298 467 122 532 411 455 581 179 517 115 580 380 596 155  22
 273 479 442 399 624 426 387  64 192 152 410 437 459 326 451 150 134 121 474 569 233 313   3 216  91
 321 149 527 417  63 184 304 424 170 224 258 475 309 153 381 318 320 449 409 521 503  79 516 254  97
 406 291 460  85  94 230 512  54  30 470  47 540 590 533 354 174 496 557 537 575 136 255  69 113 217
 260 212 295 526  57 385 195 543 403 271 530 256 107 395 145 131 613 559 471 347  48 499  11  51 515
 282 159 482 198 429 223 444 438 440 617 197 286 222 104   9 491 494  24 337  60 433 272 578 551  55

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.81543e+06us (= 8815.43ms, 8.81543s)
Wall-clock time (full program): 8.86412e+06us (= 8864.12ms, 8.86412s)
Satisfaction error: 0
Number of search iterations: 3461
Number of local moves: 2879 (including on plateau: 2829)
Number of local minimum: 40 (including on plateau: 331)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 625 383 197 350 307 454 127 480  51 540 448 165 525 529 469 332 223  91 188  90 336 577 456 575 596
 447 588  25 473 131 217 373 343  68 617 444 481 110  77   2 240 479 452 232 268 267  54 278 572 587
 132 220 242 408 483 375 218 326 411 619 553 441  56 201 434  42 295  75 477 226 584 224 379 230 174
  13 198 492 531 538 262  37  62  19 549 475 410 610  71 624 569  96 607 541 183  29 512 139 234  24
 467 385 298 214 526 136 519 614 282  47  69 589 251 413  50 179 196 563 205  18 504 613 425 124 138
 119 621 514 199 189 372 283 559  86 394 284 204 582 101  84 102  27 497 327 503 156 445 241 598 338
 147 245  52 107 439 319 478 433 430 106 229 362 363   1 219 291 555 517 462 568 320 123 571 353 135
 468 428 493  43 388 551 380 440 505 172 116 170 113  55 616 173 390 418  30  89  83 495 153 502 554
 352 435 419 422 407  28   8 427 400 436 421  20 405 235 194 289 401 561   5 382 565 409 391 182  31
 187 583 586   4  61 378 274 243 615  17 415 377 180 386 171 345 471 381 347 558  63 357 340 206 280
 426 117 424 491  66 560  85 599 299 501 397  79 474 270 376 579  10 310 105 510 276 257  99 451  64
 595 494 490 593 461 271 446 432 360  11  40 325 398 351  14 120 608  15 498 192 142  57 431 159 322
 328 306 303 316 292 290 333 285 318 361 344 330 265 354 314 255 313 346 331 253 364 329 297 287 311
 309 145 389 209 312 399  74  12 288 185 566 323  53 296 606 175 337 302 308 523 293 195 384 564 578
 146 273 294 301 228  76 238 244 527 341 275 221 516 248 574 250 260 258 485 247 465 580 264 281 233
 162 151 103 600 169 168 366 161  39 305 261 557 342 450 542 286 457  98 463 317 496 231 573 395 133
 249 562 203 348 236  81 618 115 160 420 488 216 546 104 530  34 239 202 544 334 402 207 543  32 412
 597  46 367 112 152 144  92 213 321 622 227 576 300 178 100 602 266 141 442 150 200 114 279 128 167
 163 176 470 269 567 552 181 164 499 212  23 592 459 417 522 339 208 184 193 277 437   6 356  59 500
 125  72  70 263 620 211 518 396 611 458 335 129  45 508 222  93 590 118 416 140 368 506 186 476 349
 570 534 143 190 158 393 404   9 466  35 134 403 489 374 369 443 154  33 601 429  94 550 122 482 246
 423 210 547 149 604 370 487 524  48 108 594 509  26 528  58 486  80 315 365   7 605  82  67  88 545
 272 358  60  97 406 603 215 511 581  95  22 109 414 609 387 453 521 556  73 455 121 355  16   3 533
 438  41 252 513  36 256 532 155 137 449 130 111 259 585 157 612 177 548 166 515 148  87 464 520 537
  65 254 392 623  49 359 539  78 304 225 535 126  44 484 191 536 472 237  21 591 507 460 371 324  38

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00499e+07us (= 10049.9ms, 10.0499s)
Satisfaction error: 2
Number of search iterations: 3938
Number of local moves: 3183 (including on plateau: 3133)
Number of local minimum: 29 (including on plateau: 395)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 625 383 197 350 307 454 127 480 51 540 448 165 525 529 469 332 223 91 188 90 336 577 456 575 596 => the sum is 9114 rather than 7825
Problem in row 18: 597 46 367 112 152 144 92 213 321 622 227 576 300 178 100 602 266 141 442 150 200 114 279 128 167 => the sum is 6536 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 623 444 360 595 498 214 422 138 511   8 222 620 137 118  12 125 119 226 181  82 513 156 569 333 599
 526  43 301 457 520 116 385 582 559 325 561  28 159 230 356  64 419   9  88 523 408 434  32 346 354
 150 433 565 485 617 541 152 527 247 615 509 571 605 476 456 334 493 223 397 263 210 211 567 465 442
  19 558  44 169 227 479 237 143  97 203 482 252 587 546 107 121 575 183 591 155   5 538 480 484 543
 505  53 463 213 503 367  25  72   4 507 104 522 460 294 234 344 139  30 502 163 500 153 175 276  93
 295 244  84  90  47 508  78  75 581 279 519  63 542 184 370 303   3 574 219 491 404 469 497 378 528
 324 461 188 204 612 470 600  22  11 241 562 453  26  24 402 193 525 466 452 439 435 329  21 305  60
 405 243 564 189   2  17 217 432  76 120 593 207 501 406 518 514 517 437 124 415 570 277 177  73 231
 322  55 426 475 157 380 483 611 443 166  29 407 464 441 140 186 411 302 105 287 251 391 254 256 383
 576 462 194 417 130 274 235 478 395 379 168 446 403 362  70  35 420 429 264 200 602  45 531  40 270
 102 376 368 384  37  58 349 373 386 284 352 167 389 361 369 393 387 106 338 355 308 319 371 572 321
 108 539 529 381  74 534 289 336 365 447 290 330  71 299 164  13 209 228  49 359 551 474 339 343 504
 328 454 353 283 363 269 311 350 318 357 340 293 298 304 242 307 314 239 282 320 300 310 306 288 296
 409  52 271 313 524 278 149 259 448 262 257 292 316 291 297 535 335 258 229 240 255 248 418 603 286
 171 481 196  68 396 622 590 147 221 154 312 127 578  38 280 285   7 594 530 573 225  96 398 556 180
 388 624 197 216 358 173 487 399  83 245 178 115 261 499 347 472 146 161 377 374 400 191 597 495  42
 553 179 440 621 458 598 281  36 250 201 619  89 515 224  85 345 172 176 451  31 195 592 430 266  18
 233 560  61 268 246 392 162 144 459 390 375 428 205 584 232 614  46 516 486 208 326  87 111 427 265
 133 436 273  41 455 579 198 549 490 327 438 494 100 608 585 117 238 342 148  50 101 341 122  80 580
  57 202 588 212  14 113 272 467 537 583  77 596  48 215 141 616 220 348  39 414 160 496 421 512 477
  98 236 625 532 577  56 145 260 136 129 309 190 364  62 548 589 613 372 337 555  94 206 366  95 331
 315 134  59 112 557 174 540  66 423 552  67 103 185 563 471 413 351 586 566 445  65  34 401 218 425
 424  54  79 536 135 382 412 568 607 547 158 521 126 142 449 545 550 604  33  15 165 544  27 182  20
 610  10 506 450 131  99 489 323  92 394 253   1  69  81 332 170 128   6 606 267 249 275  16 109 554
 151 492  91 114 187 132 317 468  86 110  51 510 416 473 618 192 488 410 431 601 533 609 199 123  23

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00504e+07us (= 10050.4ms, 10.0504s)
Satisfaction error: 3
Number of search iterations: 3859
Number of local moves: 3195 (including on plateau: 3147)
Number of local minimum: 31 (including on plateau: 364)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 150 433 565 485 617 541 152 527 247 615 509 571 605 476 456 334 493 223 397 263 210 211 567 465 442 => the sum is 10554 rather than 7825
Problem in row 5: 505 53 463 213 503 367 25 72 4 507 104 522 460 294 234 344 139 30 502 163 500 153 175 276 93 => the sum is 6701 rather than 7825
Problem in row 24: 610 10 506 450 131 99 489 323 92 394 253 1 69 81 332 170 128 6 606 267 249 275 16 109 554 => the sum is 6220 rather than 7825
