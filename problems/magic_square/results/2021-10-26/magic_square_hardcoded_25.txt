@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 599   8  81 579   3 542 614 617  78 362  73   4  24 588 467 558  94 497  67  83 564 590 616  71  46
 103 619 613 584 122 341 410 131  63 460 494  32 612 150 489 458  21  70 333 607 206 486 238  99  84
  42 132 608 160 515 625 597  79  59 137 470  95 430 556 422 609  39  75 194 610 138 589 521  69  54
 582  65 223 618 408 611 386  51 117 602 479 114 529 145 623 108 118  92 101 624  96 316 559 110 148
  97  82 109 462 500 415 508 116 228 580 205  26 404 396 552 600 255 187  91 620 571 604 140  48  29
 190 141 490 536 450 501 487  53  87 154  74 217 442 522 549 161 242  68 155 213 239 598 524 621 111
  90 252 191 364 459 615 270 170 195 492 184 211 572 518 574 592 215 177 594 262 199  52 214 197 166
 121 289 134 587 530 128 539 507 257 568 159 185 516 513 167 360 200 261 152 596 124 224 321 123 264
 127 274 176 275 482 171 543 347 456 241 606 298 509 605 313 179 232 178 226 203 282 575 233 105 189
 198 303 259 466 391 245 358 212 493 246 225 216 448 220 273 244 338 463 168 183 202 546 222 622 284
 296 186 230 173 541 377 593 308 372 301 370 248 344 468 351 209 505 113 331 240 251 219 329 193 277
 311 290 324 340 337 354 352 280 366 276 439 286 281 368 299 302 335 312 221 300 350 397 235 227 243
 374 444 318 175 336 325 327 345 204 317 304 247 263 376 181 357 293 174 398 287 307 512 279 319 363
 306 112 254 390 291 272 256 406 278 334 260 310 359 229 271 428 295 349 322 267 387 339 332 407 371
 412 320 395 323  89  98 158 356 435 382 292 297 400 413 218 294 419 149 330  44 425 369 498 383 326
 385 528 268 426  76  45 182 392 355 258 285 438 234 361 409  28 253 441 309 365 353 315 381 314 424
 402 283 535  16  61  64  85 451 266 523 431 416  77  72 393 418  10 403 471 373 437 343 405 496 394
 342 446 434 447 136 328  86 511 348  41 478 421 165 388  23 477 455   5 423 420 465 106  15 464 401
 452 375 480 135 250  80 378 157 517   6 432 504 172  62  60 384 449 473  56 414 534  40 484 495 436
 389 443 562 417 237   1 156 503 133 107  19 433  17 104 208 476 550 531 510 188 469  50 367 453 502
 305 491 429  30 399 346  49 601 445 146 472 506 249 164 207  66 380 537 538 142  27 119 130 514 533
 553 440 570 153 125 143   9 577 566 210  47 585 288  55  20 461 474 563 525  93  88 180 481 144 475
  11 231  14  12 147 551 151 586 427 540  25 576  58 236 527   7 485 545 519 555 532  22  57 457 554
 557 583 126  18 561 547 162  38 560  43 548 569 269 196  37  13 603 595 526 102  35  33 115 411 578
 581 488   2 139 379 100 169  31 520 499 454 591 163 120 192  36 565 567 265  34 544 201 129 483 573

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 2.96534e+06us (= 2965.34ms, 2.96534s)
Wall-clock time (full program): 3.01637e+06us (= 3016.37ms, 3.01637s)
Satisfaction error: 0
Number of search iterations: 857
Number of local moves: 416 (including on plateau: 120)
Number of local minimum: 43 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 278  76 181 122 483   2 256 416 206 574 533 596 522 291 601 478   7 248 141 235 480 172 174 577 176
 544 283 583 585  49  78  54 486 614 116 205 403 500 202  41  45 391 562 561 509 428  10  66  12 498
  36 153 284 516  99 617 263  20 599 398 399 183  62 545 587 537 260 445 540  73 231   4 550 374  50
 541 188 499  40 182  33 150 458   5 570 104 535 201 502 515 548  23 484 595 112 204 247 625 455   9
 604 125 546 525  51  63  24 223 261 555  32 575 405 511 479 108 243 348 440   1 368 338 471 481  48
 566  38 442 497 504 114 411 316 462 191 177 380 473 472 467  52 253 314 496 226  67 147  71 523 166
  55 412 134 269 418 542 124 337 297 270 395 551 425 529 588  82 139 324   3 501 187 225 119 365 534
 356 149 386 434 335 443 485 264  97 452  58 580 449 363 117 490  94 349 586  47 213  64 514  25 475
 466 162 469 420 492  21 571 219 218 456 381 532 249 133 436  27 271 330 430 113 221 217 246 366 379
 302 351 286 493 354  95 441 460 431  84  31 468 594 470 454 333 158 236  70 553   6  16 415 242 482
 474 339 427 343 357  22 296 389 396 524 257 224 258 259 327 350 212 245 276 155 227 173 446 410 439
 426 180 609 320 560 397 342  18 232 393 106 164 444 367 331  79 287 317 378 451 266 196 372 419 171
 340 290  26  98 513 369 607 300 215 409 370   8 265 321 325 375 295 288 377 476 382 250 216 346 364
 352 360  96 310 254 238 390 313 323 388  43 591 329 280 255 453 424 190 175 376 167 345 518 293 362
 347 334 274 189 491 301 322 308 306  92 304 262 299 285 565 154 319 371 435 159 384 433 279 220 392
  85 109 165  59 233 387 539 417 465 294 275 358 307 273 145 429 311 289 230 487 326 569 579 272 222
 282 144 373 298 422 208 156 536  57 102 186 268 115 305 157 517 414 457 353 267 602 506 185 318 597
 239 547 228 152 199 568  90 138 168 361 593 151 620 554 277 437 421 292 142 489 332 244 103 229 251
  28 578 161 207 606 197 179 564 241 105 495  39 195 110 126 401 505 184 608 520 549 450 559 132  86
 120 581 210 252 315 616 508  80 211 170 463 423 237 438  72 512 461 402  75 567 200 408 240  30 234
 129 385 336 406 621 407 400 528 538 127 592  77 163  11 146 527 383 309  46 447 107 543 303 203  91
 613 576 359 615  37 507  83 118 209 526 503 312 123 432  34  56 413 128 178 530 556 598  87 121 111
 563 612 622 341  60 600 510 521 101 130 344  14 394  44  15  69 519 131  19 148 192 582 477 198 619
  65 281  29 140 137 448 136  68 584  74 624  42 135  35 605 623 618  88 590 169 573 531  17 603 610
  13 572 100 194  53 552 488 328 589 464 355  89  61  93 160 143 404 494  81 214 557 558 193 611 459

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00496e+07us (= 10049.6ms, 10.0496s)
Satisfaction error: 2
Number of search iterations: 3967
Number of local moves: 1329 (including on plateau: 587)
Number of local minimum: 304 (including on plateau: 89)
Number of resets: 2
Number of restarts: 0

Problem in column 1: 278 544 36 541 604 566 55 356 466 302 474 426 340 352 347 85 282 239 28 120 129 613 563 65 13 => the sum is 7824 rather than 7825
Problem in column 22: 172 10 4 247 338 147 225 64 217 16 173 196 250 345 433 569 506 244 450 408 543 598 582 531 558 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 500 375 122  10 531 502 487 559 516  68 244 145 113  35 278 173 598 129 563 506 131  53 555 231 401
 588   5 493 255 558 477 416  20  97  61 466 355  12 228 442 152 591 138 124 534 474 577 167  14 581
 589 564  22 494 241  48  88 549  42 482 343 143  81  30 499 162 266  49  92 600 560 449 417 510 505
 460 242 308   1 532 101  50 453 540  24 489 410  95 326   9 319 454  89  99 108 572 621 533 421 569
 509 530 601 596 204 378 106 105  41  54 103   2 471 137 552 300 174 321 140 468 390  86 520 501 536
 450 422 444 543 551 524  13  65   8 479  78  17 316 465  15 576 227  77 345 374 395 206 387 491 357
 475 548 529 464 436 394   6 123  72 256 472   3  36 507 409 168 262 110 201 306 470 294 426 438 420
 439 484  67 403 585 504  71 225 430 428  93  87 431 368 339  59  43 393 437  26 602 260  76 592 383
 205 511 376 567 508 513  79 363  70 356 170 183 565 478 462  46  27 151 141  90 452 365 433 399 315
  66 338 332 153 336 187 163 361 432 424 469 289 408  33 350 351 146 346 402  58 348 419 427 618 369
 264 104 217 328 199 400 192 314 523 248 139 342 291 277 595 322  80 388 382 213 447 304 527 215 514
 221 352 391 380 238 309 481 412 317 279 148 293 334 164 366 207 545 377 347 243 325 349 218 158 371
 333 282 296 517 373 323 406 331 219 473 311  51 214 229 307 423 220 341 268 301 429 292 261 389 236
 247  40 340 370 257  94 496 303 267 286 202 486 271 441 226 252 329 413 324 235  96 573 379 580 318
 276 312 381 398 223 208 335 515 544 280 435 269 407 254 492 313 295  28 197 253 251 250 448 265 196
 386 270 586 302 397 613 503 274 180 360  31 327 230  37 463 518 434 259 392 384 112 127 330  73 237
 364 189 175 414 186 245 541 425 116 320 298 587 203 193 288 593 590 538 232 443  98 181 125 184 297
  11 497 109 615 284 171 234  45 404 354 185 287 483 542 285 561  29 263 367 169 522 133 619 195 461
 455 191 114 178 176 177 616 519 233 310 467 584 305  84 190 415 525 568 239 528 216 224 159 130 222
 165 128 385 134 258 612 142 440 566 446 498 623 149 172 100 583 272 273 611 562  82  75  56 337 156
  34 605 188  85 132 212 539 275 359 240 512 578 594 546 194 136  52 457 550 144 622 574  21 119  57
 120  16 570 107 118  44 554 362 456 582 617 485 126 603 157 210 480 579 458 161  32 606 115  69 198
  47 620 179 283 358 111 353 211 537 154 281 299 547 526 117 344 418 451 607  83  39  91 556 609   4
  64  18 155 209 121 604 495 521 246 290 624 405 608 597 490 166 396 599 147 625  25 102   7 249  62
 557 182 445  19  23  74 459  55 610 571 150 575 535 553 200 476 372 488 160 411 135 614  63  38  60

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.5506e+06us (= 4550.6ms, 4.5506s)
Wall-clock time (full program): 4.59942e+06us (= 4599.42ms, 4.59942s)
Satisfaction error: 0
Number of search iterations: 1510
Number of local moves: 614 (including on plateau: 196)
Number of local minimum: 128 (including on plateau: 22)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 464 141 174  86 494  89 622 380  72 518 461  71 618 588  35 469  28  62 572 621 560 334  30  34 302
  19  29 589  92 438  53 585 120 415 385 481 519 540  51  40 555  64  23 100 625 603 113 612 329 445
  88 624 559 450 557  76 561 465  66 610 554  79 542  78 167  98 102  46 503  70 544  41 314  32 599
  67  59 110 483 623 451 126 467 502 510 127 114 538 614 115  69  48  60 508 118 584 619  24 615 274
 101 225 387 416 509 136 357 596 320 377 163 401 182 277  68 600  94  33 616 187 609  38 173 396 564
 103 122 200 183 514 506 252 558 191 532 125 390 128 146 176 539 449 149 205 546 574 117  83 575 462
 140  81 431 422 468 332 391 543 566 417 227 454 164 144 112 562  90 192 620 211 535 156 219 162 186
 139 171 593 495 592 159 475 142 480 587 158 250 221 143 189 530 330 608 131 116 198 246 160 161 551
 262 134 547 476 576 177 369 216 257 577 193 528 291 242 184 185 613 223 195 165 424 309 249 261 172
 304 259 270 490 313 240 404 206 213 499 285 446 286 236 224 232 282 341 260 292 455 301 207 244 536
 251 215 210 238 303 231 296 440 233 278 439 237 317 273 218 243 328 245 578 311 500 263 280 617 281
 333 268 226 228 230 420 338 479 310 342 208 362 279 611 322 356 272 288 199 382 344 241 222 275 290
 308 435 258 254 306 229 289 363 276 247 354 335 337 283 368 287 271 326 336 351 299 352 324 339 298
 312 323 413 295 305 284 325 373 319  82 367 111 340 269 359 318 348 375 388 400 123 360 300 347 389
 346 392   3 364 378 331 253 398  87 294 297 204 376 316 410 372 343 358 266 403 248 321 293 366 406
 419 370  97 169 153  74 194 267 458 201 473 217 405 453 437 395 349 345 355 434  93 487 459 501  20
   6 394 408  99 384 430 178 399  15 361 255  50 441 402 460 365 239 350 379 423 152 374 436 411 414
 443 477 512 209  43  14 154 109 383  55 421 203 393 444 456 447 407 175 448 452 180 381 121 426 472
 498 433  96 432  57 397  73 466 133 155 525 496 188 482 353  56 327 457  44 429 197 489 527 409 106
 484 497 371 181 138 478 474  36 108  63   4 315 130 529 470  58 541 386 427 505 147 493 425 485  80
 511 488 524 235  17 571 129  26 463 124  11 132 523  21 418 145 580 486   7 442 256 579 591 471  75
 507 517 526   5 151 601  77  45 214 150 533 265 492  49 570 107 516 568   9  91 104 515 604 105 504
 583 607  18 412  65 428 264 307 586 202   2 491  27 522 556 534 521 545 550 196  22  52   8 179 148
 606  12 168 563  54 537 602 190 553 212 597 573  42 567 598 166 170 594  10  39  61  95 595   1 220
 531 552 135 548 157 581  37 234 605  47 565 582  25  85 520 137 513 590 119  16  13 549 569  84  31

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.44071e+06us (= 4440.71ms, 4.44071s)
Wall-clock time (full program): 4.49021e+06us (= 4490.21ms, 4.49021s)
Satisfaction error: 0
Number of search iterations: 1304
Number of local moves: 583 (including on plateau: 210)
Number of local minimum: 85 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  24 100 577 616  41 574  35 597 614  20 443 515 540 511 594  74 467 500 417  65  59  99  34 142 167
 495  54  97  42  56 586 218 600 612  72  98 583 590 554 555 520  61 107 521  85  28  71  57 592 571
 617  31 611 446 129 593  81 528 542  73 470 604 591 366 610 127  69 378  63  47  91  92 205  70 391
 565  50  36  23  32 559 165 486 532  95 384 620 585 428 173 508  51 581 194  64 401 607 118  39 529
 400 109 210 368 603 365 402 547 551  78 488 550 171 172 158 549 178 131 509  82 160 275 170 162 437
 455 123 476 221  90 126 145 615 587 389 573 371  84 301 557 530 139 153 115 625  45 151 222 157 575
 623 188 589 619 174 238 105 197 176 251 394 533 234 534 609  89 214 141 624 180 182 164 186 147 434
 496 217 143 346 228 536 246 351 163 144 409 121 309 618 516 209 201 606 596  87 276 168 156 152 531
 204 621 297 196 185 518 263 233 184 140 232 122 544 169 202 388 622 271 576 166 493 187 260 213 539
 203 293  77 313 295 491 584 190 469 602 240 236 289 237 242 525 212 220 568 268 290 253 311 192 225
 339 208 285 284 343 492 359 558 314 191 579 294 231 601 245 354 252 193 179 215 211 241 200 304 353
 269 292 323 322 327 264 181 370 319 429 255 244 332 257 259 414 320 328 206 330 357 457 369 280 321
 265 374 333 348 247 356 367 243 283 239 249 277 398 288 250 383 396 341 296 279 329 411 254 267 352
 258 364 266 299 229 418 318 281 381 183 355 256 302 342 337 305 395 306 338 317 315 291 230 441 298
 422 358 375 103 312 108 326 334 362 462 195 331 336  55 282 287 408 300 377 324 482 349 273 440 224
 468 393 387 316 363 307 447 340 325  62  33 376 404  46 308 345 347   9  58 485 415 403 406 410 372
 137 483 361 303 499  27 426  80 146 392 110 235 444 128 379 405  38 380 344 449 453 505 560 424 117
 134 261 419 427 386 125 471  12 278 425 149  75 466 113 431 390 373 454 385 501 159 397 445 543   6
 436 474 432 130 481  67  29 219 465 484  79 102 421 523  93 120 524 350   1 504 479 526 407 413  66
 487 382 456 435 497 199 545 227  16 490  49  30 416 423   5 475 112 132 223 535  48 510 464 480 189
  40 459  18 450 613 106 420  26 248 438 502  17  22 262 519 155 569 399  10 552 461 448 412 546 133
 216 439 458 177 517 514 563 111  25 452  60 478  43 513  88 442 451 433 270  19 360  83 512 477 124
 175 522   3 566 506   7 430 503 104 580 310 198   8  94 154  15 272 561  53 605 588 472 498 564  37
  86 489 460   2 553 114 161  76 116 572 570 507  44   4 207 148 556  14 567 463 595 527 494 274 226
  11 541 136 473 119 135 538 101  13 562 599 150  21 286  52  68 598 537 335 578 548 138 582  96 608

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.02641e+06us (= 3026.41ms, 3.02641s)
Wall-clock time (full program): 3.07552e+06us (= 3075.52ms, 3.07552s)
Satisfaction error: 0
Number of search iterations: 732
Number of local moves: 506 (including on plateau: 165)
Number of local minimum: 40 (including on plateau: 15)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 132 570  95 511 300 144  27 478  12 126 579 490 296  25 560 540  99 174 504 601 552  24 567   7 412
   4 141 573   3 541  59  29 495 500  48  20 537 399  98 558 551  23 544 577 524 562 380 585   5  69
  33 554  65 155  80 193 582 609 523 366 497 555 276 156 449 423 277 503  14 438 536 350  16  13 162
 531 246 598   1 278 195 543 521 557  60 510 509   8  38 545 180  19 526 441 229 548  11 483  15 233
 119  56 439 279 484 257 501 481 572 224  44 556 316  49 487 474  30 402 578 324  21  83 529 430  90
 444  36 489 493 391  81 468 422 392  85 106 411 104 103 538 317 113 368 514 375 401  82 498 472 122
 243 416 547 433 471  39 593 347 415 304  52 419  22 112 442 418 153 426 149 140 337 108 482 332 425
 388 522 447 520 492 123 182  18 181 339 403 436  89 238 517 507  45  10 379  88 393 461 506 477  64
 386 414 597 467  35 361 499 381   6 135 390 369 150 254 407 462   2 397 265  91 376 394 451 452  84
 320 266 333 469 465 101  28 400 429 157 359 413  76  61 340 240 152 405 443 518 373 404 328 308 437
   9 283  68 466 453 311 322 345 398  54  17 590 396 382 225 264 331 480 302 431 406 282 184 448 378
 330 216 344 309 231 284 356 385 421 446 374 241 367 319 237 342 473 352 290 217 190 198 314 227 362
 360 261 384 365 179 236 349 326 205 210 242 255 370 310 377 432 338 313 321 424 371 357 271 325 244
 351 505 275 259 281 334 395 274 301 299 409 341 268 353 286 553 315 297 272 172 209 329 120 358 269
 293 247 289 267 234 618 343 105 204 213 201 450 354 476 566 364 249 336 134 491 318 285 273 295 220
 183 215 185 203 306 574 212 287 307 440 121 143 519 532 178 615 513 294 169 470 235 168  87 263 606
 147 175  77 230 600 589 312 305 608 206 253 188 496 502 303 262 581 115 459 599 124 136 161 146 251
 327 479 211 232 214 456 363 288 335 508  97 114 291 256 218 348 410 611 250 170 176 594 148 127 602
 583 163  94 613 197 226 533 187 270 435 199 223 542 389  31  73 428 239 125 387 355 194 192 530 617
 607 202 171 408  70 346 614 258 208 596 158 222 516 622  43  51 546  34 191 372 130 559 221 580 100
 528 189 165 207 575 621 129 111  32 460 584  42 576 515 196  67 612  37 107 186 420 591 173 563 139
 569 252 159 550 131 455 109 145 167 588 586 102 138 561  72 117 623 292  66  63 620 595 280 128 457
 154 592 624 228 248 323  58  96  93 434 605 116 298 383  53  79 512  57 619 260  47 568 219 610 549
 245 625 463  86 142 445 160 486 525 565 485  62 494 488  46  92 417  26  40  78  75 535 166 604 475
 539 200 133  71 427 454 118  74 164 527 534  41 464 603 151  55 564 587 616 177  50 137 571 110 458

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00499e+07us (= 10049.9ms, 10.0499s)
Satisfaction error: 2
Number of search iterations: 3614
Number of local moves: 1194 (including on plateau: 511)
Number of local minimum: 347 (including on plateau: 80)
Number of resets: 2
Number of restarts: 0

Problem in column 8: 478 495 609 521 481 422 347 18 381 400 345 385 326 274 105 287 305 288 187 258 111 145 96 486 74 => the sum is 7824 rather than 7825
Problem in column 16: 540 551 423 180 474 317 418 507 462 240 264 342 432 553 364 615 262 348 73 51 67 117 79 92 55 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 614 102 263  86 565 142 303 421 490 379 104 408  34 117 111 564  84 563 422  45 555  38 579 553 283
  20 259 556  90 526 127 550 239 141 582 180 572 123 419  52 623  36 560 610  71 592  53 161 458 225
 114 513 112  77 522 476 493  58 602 588  79 514 157 487 344  39  35 535 574  54 512 100 324 376 140
  61  99 384  55 207 466 544 105  68 587 136 557  69 619 399 599 134 520 524 131 521 598 125 261  56
 464 486 622 288 621 169 604 183 138 485 213 163 228 506  91 211  37 172 543 205 309 230  98 176 583
  96 484 518  94 155  46 499 151 197 361 124 612 186 108 581 154 110 562 618 304 624 323  87 608 223
 175 569 160 595 210 386 605 182 607 171 256 187 162 575  78 194  83 191 625 219 609 149 193 511 133
  65 333 558 159 616 551 534 431 204 227  76 308 217 190 474 270 272 559 589 237 523 173 144 107   8
 597 146 483 192 229 426 377 249 296 258 406 116 226 174 255 170 430 287 372 615 453 130 273 334 331
  24 302 269 439 591 310 358 290 195 280 218 467 267 369 326 311 300 289 412 201 433 349 262 284 279
 177 240 603 286 252 295 573 413 460 250 245 285 246 166 507 203 277 320 330 380 403 336  93 307 178
 294 306 181 257 383 401 516 208 397 400 238 266 319 352 398 314 299 325 184 220 297 260 243 454 313
 293 221 318 382 139 278 282 402 373 214 292 360 417 359 328 291 339 202 364 434 404 271 189 425 248
 350 301 468 368 420 442 274 440 346 343 224 235 356 312 198 462 391 156 332  60 222 234 253 370 268
 393 321 167 150 276 409 196 337 281  48 335 374 241 317 475 366 585 355  44 265 254 354 469 341 472
 414 322 106 415 488 113 212 206 396  16 411 392 407 158 389 473 264 432  26 342  81 449 531 347 435
 363  64 145 539 305 338 122  74 236 327 378 329 552 410 351 394 275 233  73 365 251 298 459 447 497
 367 316 371 498 423 101   2  11 428 375 444  72 456 132 128 416 441 455  57 390  18 533 503 450 438
 424  32 362  62  15 405 165 418 537 541 504 345 385  85 244 231 554 463 153 429 147 340 489  50 445
 457 482  97 510 580  59 103 387 509 118 437  33 479 199  22 495 315  75  27 596 209 508 590  42 496
 357 481  31 517  25  30 200 381 448 452 461 505 576  23 353 477 480  28 242 436  89 529  14 143 547
 501 129 395   4  70 168 179 561 137 548 494  47 542 443 478 119 470 348   5 471  92 491 570 500  63
 388 152  41 613  21 527   1 528 232 215 538  82 546 148 536 427 446  80 578 502  19 492 121  67 525
 216 620 164 617  51 611 126 566  95  43 465   3  40 586 519   9 568  66 115 606  88 577 515  29 530
 601 545 451 532 135 549   7 584  12  17 567 593 594 571 188  13 600  49   6 247 120  10 540 185 109

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 2.98854e+06us (= 2988.54ms, 2.98854s)
Wall-clock time (full program): 3.03792e+06us (= 3037.92ms, 3.03792s)
Satisfaction error: 0
Number of search iterations: 712
Number of local moves: 464 (including on plateau: 92)
Number of local minimum: 39 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  76 543  12 599 572 445 571 151  11  51 617 535  31  29  95 150  42  64 547 561 530  49 538 620 386
  22 601 616 552 511 430 231 548 363  10  98  66  63  45 612 160  24  50 537 448 436 550 108 204 540
 614  60 595 596 512 165 575 497 112  37 101  92  48 434  67 469 128 105 110 568 556  71 624  70 619
  73  96 117 398 592 103 539 418 135 115 123 598 164 126  61 100 237 515 622 439 426 625 581  34 588
 545  44 129 570 362 466 221 566 141 142 222 608 216 604  68 255 109  94 618 606 615 189 111 170 154
  75 201 149 605 524 387 482 577 146 125 118  91 161 462 159 593 179 116 174 613 600 177 623 106 382
 132 247 143 501 574 544 611 401 208 282 217 107 127 395 173 477 212 167 425 404 533 134 153 230 428
 243 220 144 438 551 589 131 348 246 206 240 196 265 513 198 468 172 591 495 176 463 200 214 139 379
 301 234 210 496 506 555 163 180 291 156 211  88 229 597 621 215 411 162 252 248 359 199 192 494 455
 245 238 145 542 414 602 241 232 195 531 275 130 239 609 181 390 281 202 315 290 337 279 178 193 541
 251 299 224 564 408 518 292 293 250 444 296 257 219 277 402 268 244 321 223 253 308 283 377 256 298
 316 266 514 573 168 435 318 328 385 236 280 270 289 242 227 264 233 319 269 335 295 194 400 397 272
 338 226 354 323 262 302 309 287 340 261 325 409 372 391 405 303 185 304 355 312 294 225 331 324 288
 380 349 370  89 305 300 358 378 317 254 330 332 285 137 278 314 351 313 336 361 350 423 307 334 274
 396 422 184 183 235 327 341 124 346 329 356 429 388  21 218 353 366 376 365 393 209 442 394 421 207
 381 456 322 138 267 190 389 360 326 407 415 450 437 383 343  84 182 333 339  99 120 417 412 406 169
 310 399 510 166  36  55 368 403   4 461 433 480 364 113 420 133 392 473 344 369 147 384 345 419 297
 476 503 452  93 187 371 410 263 427 320 523 373 441  52 342 259 467  87 483  40  57 260  26 449 464
 493 459 519   9  78   6  97  30 527 446 522 447 367 140 432 440 443 507  80  77  13 481 492 532 188
 453 306 565  90  35  47 487 203 488 284 486 528 478 205 311 375 258 431 104 424  15 508  32 521 191
  53 505 509 158 347 122 474 374 558 502 472  58 457   7 534  46 553 249  43  38 276 484 352 479 175
 526 529 454  16 157 171  85 458 475 485 536 516 546 499 500  82 549 504  79 357 155   3  72  69   2
 517  33  28  23  20 271  59  74 489 582  56  81 554 490 576 451 603 557 102 273 465 578 491 413  39
 607  27 498  17 148 228  65 213 585 580  14 121 560 583 584 586 594 569  41 136 152 587 286  25  19
   1 562  62  86  54 197   8 119 460 579 559 563 525 471  18 590 610 416 567   5 114  83 186 520 470

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00508e+07us (= 10050.8ms, 10.0508s)
Satisfaction error: 2
Number of search iterations: 3838
Number of local moves: 1231 (including on plateau: 561)
Number of local minimum: 288 (including on plateau: 61)
Number of resets: 2
Number of restarts: 0

Problem in column 1: 76 22 614 73 545 75 132 243 301 245 251 316 338 380 396 381 310 476 493 453 53 526 517 607 1 => the sum is 7824 rather than 7825
Problem in column 6: 445 430 165 103 466 387 544 589 555 602 518 435 302 300 327 190 55 371 6 47 122 171 271 228 197 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 175 121 570 581 196 348 157 492 602 494  31  37 145 503  44 606 265 394 424  24 390  76 399 140 611
  34 559 588 545 214 608 447  41 507 444 155 122  62 585  92 620  46  33  64  65  91 603 561 303 436
 133 525 512 514 583  95 562  52 465  71 102  49  85 594  96 582 482  67  63 332 413 572  43 472 361
 192 395 105 622 517 389 592  84 526 149  73 128 142 596 114 123 522 156 244  82 161 551 496 388 478
 153  68 170 621 417 240 487 378 619 146 199 177 150 530 308  36 575  88 255  66 615 247 568 164 548
 489 107 119 383 327 625 623 463 605 104  59 109 167 137 319 555 359 144 231 618 138 120 331 187 506
  30 540 139 369 612  89 429 184 577 207 163 229 183 448 279  97 451 307 624  79 197 210 272 539 571
 326  87 143 587 586 294 460 617 435 106 117 320 147 103 108 219 493 600 316 195 283 341 511 186 245
 159 398 292 194 400 580 479 513 445 297 111 267 289 189 521 171 264 311 206  78 355 282 397 202 425
 221 233 182 148 392 242 437 201 352 553 318 309 116 230 509 546 591 323 360 358 213 208 287 285 211
 253 278 295 237 302 174 531 325 227 347 367 256 252 370 328 440 384 218 281 154 335 442 249 314 466
 280 349 366 317 298 204 301 260 188 228 259 238 329 277 276 225 432 312 215 550 354 443 409 313 403
 616 226 427 271 338 419 246 258 263 234 254 306 356 275 372 376 418 291 337 166 333 266 178 407 191
 386 456 439 364 357 405 152 336 235 248 380   2 351 340 393 334 480 286 251 342   5 468 300 216 299
 293 501 243 310 381 406 404 176 304 414 434 232 200 371  98 382 193 273 198 241 416 484 179 339 353
 212 345 374 135 373 363 296 453 169 343 274 377 315 209 324 305 330 458 131 476 423  25 491 222 402
  80 515 365 412 379  45 350 127 168 430 431 375 257 391 101 288 136 362 270 502 510 441 368 462  60
 421 422 464  99 110 455 344 262  47 321 420 576 411 498 220 401  77   1 477  26  48 346 459 387 533
 528  20 537 495 385 190 118 408  94 290 450 467 529  42 180 532 217 469  22 461 454 508 322  93  14
 438 499 566  50  29   3  23  57 130 268 483 470 549 564 565  11  19 524 534  16 556 488 449 473  61
 597 457 516  10 113 433  70 481 452  35 497 593 558   9 554  53 224 129 563 595  17  12 158 574 125
 543 151 162 203  69 261  15 236 112 475 613 410 536 500 541 505  90 396 165 604  51 598   4 485 100
 599 486 172 126  56   7 223 535 134 542 547 614 601  38 284 205 173 579 560 578 474  13  81 124  74
 428  32  39  72 141 446  21 415 115 552 519 589 538   8 590 185 518 584 490 610 567  75 181  27  83
 239  55  40 160 250 504  58 471  54 527 569 573 557  18 609  28  86 520 544 607 426   6 132 523 269

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00027e+07us (= 10002.7ms, 10.0027s)
Wall-clock time (full program): 1.00539e+07us (= 10053.9ms, 10.0539s)
Satisfaction error: 2
Number of search iterations: 3621
Number of local moves: 1074 (including on plateau: 460)
Number of local minimum: 339 (including on plateau: 50)
Number of resets: 2
Number of restarts: 0

Problem in row 12: 280 349 366 317 298 204 301 260 188 228 259 238 329 277 276 225 432 312 215 550 354 443 409 313 403 => the sum is 7826 rather than 7825
Problem in row 13: 616 226 427 271 338 419 246 258 263 234 254 306 356 275 372 376 418 291 337 166 333 266 178 407 191 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  12 461  25 610 582 485 375  67 499 134 621 192  31 115 605 133 566  14 124 169 555 611 612  21 206
 351 354 533  18  88 594  78  13 101 569 607 590 584 111 557 597 576  61 476 181 483  20 149   3 131
 573  22   4  65 586 556  11  47 343 497 568 204 545  23 562 100 309 138 388 132 538 543   6 531 534
 567 205 541   2 514 145  24 608 180 535 560 526  56  27 593  63 506 104 114 122 481 297 444 551  60
 552 176 537 478  10 546  87 106 157 527 540 518  44  34 532 151 173 547 293 194  16 417 561 503 126
 335  79 512  36 462 397  96 368  26  41 473  84 443 438 529  55 479 441 226 238 603 448 471 456  89
 496  68 451 521 370 453   9   5 185 408 500 378 523 419 421  49 489  83  46   1 472 457 493 520   8
 406 199 449 507 352 165 164  19  37 469 447 440 359 427 463 231 470 143 153 207 385 487 459 380   7
 488  57 450 107 392 391 219 303  53 358 295 491 371 494 430 395  35 372  82  66 407 393 400 363 413
 147  64 439 403 361 365 228 256 213 381 369 435 322 379 424 227 333 156 353  28 346 423 437 347 389
 302 390 382 334 377 357 193 402 336  73 458 312 374 328  15 355 321 243 234 294 342 315 348 373 367
 318 345 320 340 362 350 257 311 319 364 331 285 237 366 290 296 316 327 292 314 182 405 280 305 313
 310 306 337 386 307 253 326 240 398 317 291 341 329 384 383 360 396 394 197 278 356 339 301 279  17
 349 233 276 281 325 332 300 263 588 251 248 259 266 323 267 330 277 609 420 254 235 376 221 261 282
 308 287 212 269 414 412 425 522 270 246 344 249 191 324 265 286 429 116 250 255 260 528 432 284 247
 272 466 230 298 264 274 442 502 283 268 258 304 245 223 196 455 229 190 599 475 418 262 186 215 271
 211 486 188 175 252 225 474 244 431 203 170 544 202 239 224 112 530 218 598 524 216 210 217 428 504
 208 482 158 338 129 289 416 613 539 288 105 187 141 273 161 572 232 422 387 600 236 222 166 177 484
 454 468 241 200 184 275 415 622 592 178 172 460 201  76 189 495 121 554 511 589 139  91 142 214 242
 160 433 183 580 137 616 501 117 401 623 195 581 140 596  92 477 152 174 171 409 168 102 167  85 565
  98 411 118 127 618  80 558 606 550 162  94 146 108 198 148 519  93 299 498 604 452  97 135 625 480
 113 515  75 536 109  90 510 130 617 150  77  48 426 410 159 564 103 624 585 490 120 619  58 119 578
 125 155 563 570  45  81 542 549 399 144  40  69 509 577 163 508  71 559 179 505 123  86 513 136 614
  50 615  30  42 553  43 601 445  99 587  33 128 583 525  95  59 154 446 575 492  72  38 517 579 464
 620 548 571 602  32  51 574 467 209  52  29  54 595 516  62 436 465 591  74 404 220  39 110  70 434

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00483e+07us (= 10048.3ms, 10.0483s)
Satisfaction error: 2
Number of search iterations: 3888
Number of local moves: 1219 (including on plateau: 464)
Number of local minimum: 323 (including on plateau: 60)
Number of resets: 2
Number of restarts: 0

Problem in row 14: 349 233 276 281 325 332 300 263 588 251 248 259 266 323 267 330 277 609 420 254 235 376 221 261 282 => the sum is 7826 rather than 7825
Problem in row 21: 98 411 118 127 618 80 558 606 550 162 94 146 108 198 148 519 93 299 498 604 452 97 135 625 480 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 550 557 160 506 108 444  68  46 412 156 606 440 561 105 298  62  74 625 141 615 430 527  76  61 197
 509 619 432 588 147 103 174  87 501 123 617 434 358  42  81 139 245  73 587 451 369 433 157  97 459
 555  20 601 155 136 599  56  69 463 391 152 362 377  38 502 203 126  33  80 472 571 150 621 600 493
 547 541 574 584 401 528  57 166 215  93  89 507 211 117 148 410 138  53  72 462 592 490  79 172 579
 595  96 530 409 480 239 465 170 556  65  43 575 624 209  99 178  95 144  70 460 180 368  45 581 549
 569 605 198 447 265  64  82 602 531  44  67 448 297 112 455  71 127 195  59 620 526 370  77 376 618
 208 232 413 173 364 254 616 218 190 182 186 441 560 169 623 162 327 177 578 130 596 468  83 153 322
 594 206 168 145 189 120 151 233 535 278  91 453 226 113 219 246 131 622 607 165 586 566 260 310 611
 222 204 167 266 242 613 303 191 487 243 321 159 234  52 193 146 563 335 576 247 583 614 257 223 384
 351 263 231 163 287 229 300 129 314 109 216 505 339 143 244 610 228 282 593 542 261 564 290 301 331
 224 302 132 217 164 313 276 256 553 251 315 299 348 210 585 142 227 383 589 352 476 258 393 102 458
 408 264 394 353 253 345 237 366 492 268 316 371 107 277 214 280 350 250 194 398 573 332 205 338 240
 336 342 324 271 488 255 435 344 365 306 539 267 312 340 183 380 325 158 283 281  58 291 420 249 273
 414 347 387 525 382 196 522 452 252 296 328  90 187 597 372  13 259 389 395 225 367 133 396 207  94
 329 404 284 355 221 326  55 421 212 354 319 337 192 378 188 379 374 333 403 419 317 360 483 110 272
 399 279 415 400 361 475 363 184 402  27 341 262 128 309  86 454 477 295 305 467 318 161 375 307 235
  26 269 427 289 357 359 500 437  36 470 388 346 349 450 356  35 518 424 334 456 122  49 304 323 201
 443 405 446 407 320 397 294 330 199 411 545 286 119 484 114 482 390  12  10 115  31 422 504 439 220
 445 416 392 104 469 308   3 479 149 514 418  29  92 481 503 486 521 609 428  28 124 176  32 519 100
   5 436 171 429 135  51 511 548 137 513 537  63 385 471 101 473 520 438 449  18  85 134 496 603 116
  21 270  84   7  30 608 185 532  48 554 213  66 498 551 386 466 499 515 118 464   9 121 552 567 461
  11 426 381 478 485  41 568  17  98 590 591 293  88 562 510 580 533 474  47  39 106 175 570  22 140
   6   8 417 523 457 423 512 565 181 543  23 442 425 517 529 248   2 516 431  50 125  60  14 572 236
  54 288  19  15 538 495 534 577 343 508  24 275 311 604 544 598 285   1 202 238 241 373 524  34 200
   4  25  78  16 546  40 558 406 154 536 540  75 497 494 292 582 491 489 274 111 179 230 612 559  37

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00383e+07us (= 10038.3ms, 10.0383s)
Satisfaction error: 2
Number of search iterations: 3982
Number of local moves: 1139 (including on plateau: 472)
Number of local minimum: 367 (including on plateau: 73)
Number of resets: 3
Number of restarts: 0

Problem in column 2: 557 619 20 541 96 605 232 206 204 263 302 264 342 347 404 279 269 405 416 436 270 426 8 288 25 => the sum is 7824 rather than 7825
Problem in column 25: 197 459 493 579 549 618 322 611 384 331 458 240 273 94 272 235 201 220 100 116 461 140 236 200 37 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 495 499  44  77  76 412 567 304  95 555 565 460 563 593  56  42 459 368 165  72 113 429 175 138 503
  62 614 618 106 591 108 480 422 446 430  33 461 619  88  64 583 462 285  99 115 416 144 336  83 160
 198 127 622 482  59 162 474 566 104 211 226 134  28  96  86 605 426 608 620 176  66 597 445 617  90
  34 542 245  98 171 109 441 604  60 382 448 540  30 420 121 298 588 609 190 428 202 616 149 254 246
 601 552 111 598 613 590 602 261 133 169 140 130 594 236 125 164 572 112 132 354 342 102 327 238  27
  69 483 147 443  57 577 596 547 281 124 606 323 223 564  81 337 216 103  80 361 123 579 447 167 291
 338 258  45 230 142 170 607 439 310 188 131 118 234 560 199 399 294 611 624 212 232 530 511 343 100
 161 520 263 163 136 189 581 612 575 148 241 153 178 139 219 485 603 600 156 207 271 335 468 182 240
 465 557 380 592 255 333 397 532 610 172 284 146 173 300 247 360 213  82 101 174 331 233 501 196 191
 266 549 417 311 297 302 456 351 295 290 248 264 587 276 200 288 313 186 114 398 274 205 289 369 280
  97 497 454 308  54 283 384 431 400 195 615 220 159 158 625 580 184 155 257 299 282 122 621 203 242
 239 451 340 116 293 341 317 201 595 206 326 373 210 623 305 292 192 319 385 259 278 352 316 187 309
 143 221 329 194 386 307 375 268 425 209 225 252 272 267 262 471 296 332 345 347 350 407 383 453 306
 224 458  93 449 321 193  84 395 328 506 344 277 279 244 339 334 314 324 391 409 376 415 348   2 378
 487 253 154  61 421 387 275 126 150 424   6 270 364 381 287 371 438 437 475 250 490 408 107 359 444
 377  58 396 330 367 273 120 229 135  38 222 489 434 372 249 117 450 401 318 494 484 519 197 346 410
 413 151 394 392 452 405 183 269 315 469 433 414 179 411 541 260  20 389 366  23 473 418  55  35 365
 513  43 128 467 374 435 231 119 500 570 353 393 312 355 403  51 320  52 322 463 525  24  87 349 436
 548  39 556 301 518 356 237  40 491 512 488 432 427  13 508 214  78  41  22 477  46 402  68 440 571
 363 390 455 515 586  92  63 227 251 419  11 404 531  18 479 208 509  37 423  17 486  74 228 534 505
 218   5 357 478   4 524  10  79  48 504 516 576 406 481 517 370  47 256 464 492  21  36 325 545 546
 523 243 105 529 535 502  49 180 217 476 215  26 569  14 496 152 145 533 537 558 457  19 110 550  85
 562  65 527   7 539 568  75  31 554  32  29 388   9 561 544  16 472 265  89 522 166 157 536 585 526
 358  15  67  50 553  70 168  94 204 584 538   8 442 470 493 362 141 543 551 129 514 521 286  91 573
  71 235 578 528  25 137  53 498 303  12 582 574   3 185 379 466  73 177 599 589 507 181 510 559   1

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.10698e+06us (= 3106.98ms, 3.10698s)
Wall-clock time (full program): 3.15644e+06us (= 3156.44ms, 3.15644s)
Satisfaction error: 0
Number of search iterations: 715
Number of local moves: 506 (including on plateau: 130)
Number of local minimum: 37 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 566 528  92 568  56  97 140 346  57 571  22  16 554 182 543 550 585 587   2 501 519 132 530  78   3
  13 315  95 560 555  33 549 238 589 522 103  11 541 266  15 536 532 582  53 561  27  81 495   7 546
 521 548 297  28  70 229 255 523 184 511 313 544 551 366   6 427 576  61 581  34 545 121  25  20 489
 506  21 285 378  94 109 515 491  67 539 525 524 547 157 218 477  82 507 177 520 534   5  26  73 448
  43 505  24 553  14 191   4 447 516 468 115 444 518  39  99 598 459 389 458 370  18 111 557 453 432
  62 574  59  64 450   1 304 492 552 397 125  32 497 126 493 461 466 439 474  23 527  60 517 118 512
 475 440 220 473 141 275   9 478 367 176 290 405 279 344 449 149 556 263 236 117 192 231 399 420 441
 488 403 129  30 422 101 110  12  41 433 496 564 425 293 190 483 452 209 431 280 412 112 417 388 504
 208 430 152 170 402 277 167 395 354 490  85 434 463  65 408 535  10 471 438  29 355 328 426 386 347
 494 360 100 396 435 207  87 406 329  96 296 374 429  49 479  37 341 375 455 303 383 122 487 387 398
 289 404 136 278 331 268 317 195 446 305 253 379 381 411 326 421  17 339 160 368 336 259 382 373 451
 249 334 274 224 513 299 380 316 338 385 302 345 284 235 269 409 443  19 325 308 267 245 320 365 377
 393 251 364 357 244 230 359 324 188 349 311 376 226 248 286 295 300 358 193 309 605 414 239 312 294
 216 233 298 237 282 419 158 418 323 222 392 372 590 340 201 533 301 343 228 401 262 246 283 371 156
 264 198 572 243 318 462 484 362 310 271 361 261 250 327 307 332 199 306 288 187 219 442 241 330 291
 333 260 352 164 211 416 424 242 171 601 569 203 292 578 270 342 221 265   8 350 223 415 337 410 168
 321 227 625 202 212 335 613 353 602 151 159 200 183 247 384 276 454 175 116 586 148 456 351 234 215
 499 194 356 252 272 610 113 622 197 153 624 102 273 146 348 180 481 485 467 174 205 508 127 258 179
  58 162 457 134 173 423 562 486 607 123 128 144 104 603 189 166  74 225 593 577 445 529 137 469 257
 436 232 526 139 611 538 124 169 608 213 185 214  44 465 464 135  98 620 154 614 120 509 181 186 240
  68 155 363 437 612 500 617  84 178 147 206 604  86 480 580  52 105  50 618 150 570 579  47 281 256
 592  75 563 591 163 322  91 131 619 106 599 217  36 482 142 204 615  77 165 210  89 400 114 623 600
  79 314 391 621 595 510 319  88  80 369 428  72  35 514 606 145  71  38 119 476 143 565 575 609  63
  55 616 537 130  66 503 584  69  54  31 531 594  76 472  93  40 254 559 498 287 573 413 567 172  51
 597  46 558 596 583 470 540 138  48 196 407 394 161 390 460  42 133  83 588  90 108 542  45 502 107

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00517e+07us (= 10051.7ms, 10.0517s)
Satisfaction error: 2
Number of search iterations: 3608
Number of local moves: 1299 (including on plateau: 562)
Number of local minimum: 303 (including on plateau: 64)
Number of resets: 2
Number of restarts: 0

Problem in row 22: 592 75 563 591 163 322 91 131 619 106 599 217 36 482 142 204 615 77 165 210 89 400 114 623 600 => the sum is 7826 rather than 7825
Problem in row 25: 597 46 558 596 583 470 540 138 48 196 407 394 161 390 460 42 133 83 588 90 108 542 45 502 107 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  19 509 372 453 572 297 555  62  20 517 463  15 610  70 497 362  74  83  46 552 409 616  17  50 585
  53 606 219 605 600 389  43 352 137 405 499  81  92 157 603 170  75 475 470 104 543  27 577  54 489
 410 103 613 570  37 113  30  82 465 622 500  57   6 282 598  67 407 611 164 417 602 141 406  90 432
 133 127 589 581  12 522 588  68  49 592 591 163 594 413 537  31 181  88  95 182 148 620 109 310 502
  86 508 381 595 612 111 136  91 135 557 579  42 614 498 539  73 121 115 214 144 526 447 242 258 201
  47 198 382 604 156 623 110 165 102 619 547 120 609 412 187 207 132 582 161 131  85 371 125 574 576
 134 624 503 501 162 541 607  63 183 488 390 239 159 448 180 232 138 116 329 185 210 230 272 379 512
 367 168 403  99 209 617 167 584 177 618 295 324 158 492 221 215 195 401 283 234 224 436 593 129 216
 231 191 491 394 197 601 107 126 227 204 200 299 229 615 264 218 608 172 205 326 257 208 511 395 549
 259 160 203 477 171 276 256 289 184 192 237 196 175 480 211 625 565 328 225 233 351 484 263 599 386
 439 247 244 455 301 194 271 596 228 265 262 260 590 358 202  94 261 349 314 456 305 337 188 315 294
 290 296 546 270 275 149 238 226 279 415 281 621 292 370 309 186 268 213 235 252 321 311 243 586 353
 249 287 377 269 288 278 319 355 255 320 291 274 284 368 354 241 332 399 250 317 339 375 338 335 331
 318 251 114 356 303 393 300 277 363 293 308  71 325 361 346 304 323 387 437 424 333 383 334 178 343
 433 366   3 245 341 342 330 302 398 313 369 451 350 101 327 357 402 416 217 446 454 190 273  59 340
 422 426 122 336 450  35 348 474 364  34 425 307 420 123 374  26 495 423 280 443 486 154 373 199 286
 267 223  84 119 481 490 472 467  36 312 411 396 392  28 359 548  38 442 344 440 469 150 306  66 485
 507 388   1  78 478  14 445  24 493 106 429 457 345 151 404 458 380  33 468 391 419 153 384 385 434
 510  23 206 166 449 316 462 471 540  87  64 444 145 128 414 597 452  69  18 483 479 418 461 378  45
 534 100 169 236 365  29 580 459 569 397  21 551 460 240  51 487 558 482 513  98  65  93 431 298  39
 430 536 130  10 152 421 438 473 496  11   5 538  40 112 506 222 524 560 531 428  16 435 173 566  72
 220 441   7  60 528 174 376 563 520 142  79 466 521 400  55 583 139 494 518 515 140  48 505 322   9
 347 573 575 253 578 212  61 519 476 143 146 360 105 124 108 553 408   8 514 504  41 155 535 523   4
 533 285 559  13  56 117 564 561 567  97 179 525  44 544  32 427 556  25 530 118 545 527  77 248  96
 587 189 532  80  52 571  22 176 562  76 254 568 266 550 147 542 193 554 464   2  58 516  89 529 246

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.31469e+06us (= 3314.69ms, 3.31469s)
Wall-clock time (full program): 3.36423e+06us (= 3364.23ms, 3.36423s)
Satisfaction error: 0
Number of search iterations: 979
Number of local moves: 461 (including on plateau: 200)
Number of local minimum: 75 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 617 543  87  36 479 106  89 601 154 559 430 504  62 172 355 117 611 218  91 562 354 309  85 605  79
  50 517 523 588 112  59 497 600 614 481  28 566  93 141  81  72 476 473  54 580 554  40 378 148 100
 397  71 618 144  61  32 108 433 522 143  88 483 187 130 177 132 506  67 603 589 383 245 582 609 515
 585 111  69 624 128  60  95 458 606 586 140 461  48 121  63 165 572 519  45 563 565 613 152 357 119
 120  26  70 122  55 599  51  86 567 553  27 574 334  35  47 110 612 584 223 602 552 564 608 537 167
 150 104 201 230 194 623 621 171 514 604  29 462 264 155 103 359 495 500 138 316 466 254  97 619 156
 607 102 153 560 198 380 597 211 195 616 131 283 129 164 503 126 243 370 199 536 232 548 170 535  37
 392 173 239 139 403  57 158 182 250 524 371 529  53 297 229 622 513 610 231 363 228 521 142 498 101
 236 221 179 304 313 146 280 220 625 545  31 439 399 261 276 260 269 450 413 556 175 488 209 290 240
 346 185 181 549 494 215  66 306 278 620 267 557 188 281 193 213 452 395 328 496 151 257 351 237 219
 214 507 277 381 594 212 206 256 273 205 615 251 252  75 596 295 336 509 202 266 217 315 241 275 255
 288 222 374 405 308 289 298 375 311 234 431 432 344 207 235 335 420 527 238 226 224 299 386 225 192
 233 216 333 442 379 325 265 263 368 279 268 377 307 322 393 353 244 292  49 303 398 365 348 287 416
 318 242 262 125  98 248 443 382 364 340 369 317 390 339 345 163 324  24 326 282 467 394 440 411 412
 337 314 424 330 388 350 391 445 258 300 159 410  52 592  42 361 310 180 342 319 149 301 320 384 367
 425  34 401 272 183 444 246 338 352 293 502 372 196 331 366  65 321 358 485 329 463 323 247  23 456
  80 376 468 341 123 360 470 421  22 189 419  41 396 501 404 453   6 204 477  73 409 373 471 294 454
  90 490 441 162 190 332 271 208 427 270 449 291 415 587 387 480 176  25 347 147  76 200 518 362 484
 385 414 436 249 343 285 406  17 305  96 408   1 455 457 478 389 227 296  38 116 538 349 531 113 493
 115 469 429 428 423 253 551 426 107 134 434   8 491 489 573  82 327 203 475   3 417  33 422 133 400
 161 460 511 541 402 178 418  11 302  77 435   2 542 486 508 591  68 136 451 124 105 174 482 114 546
 407 505 438  13 259 590 528 472  58  84 448  39 544 570 578 532 168  83 539 191  44 145  14  64 512
 210 534   4 186 569 581 568 447 197   7 547  15 561 137 576 474 118 286 446  43 520 169  20  94 516
 464 459 550  99 571 575 184   9  21  30 274 284 583 510   5 499  19 160 593  74  46 109 533 595 579
 598 530 157 555 558 526  18 487 135  56 525 127 540 465 312 577  12 356 492 166  92 437  78  16  10

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.57294e+06us (= 5572.94ms, 5.57294s)
Wall-clock time (full program): 5.6222e+06us (= 5622.2ms, 5.6222s)
Satisfaction error: 0
Number of search iterations: 1778
Number of local moves: 719 (including on plateau: 357)
Number of local minimum: 143 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 178 479 622 461 517 229  17 225 599 161 594 553 128 590  83 614 611 137  69  25 578  21  35 263  36
  20 108 194 375 369 510  38 520 595 114 116 549 434 619 132  39 265 584  75 498  31 415 156 544 525
 621  52 297 502 569 242 188 453  98  10 133 533  79 556 350 572 247 573 154 280 256 518  43  30 469
 323 112 240 276  40 195 435 555 401 592 182 333 547 142 564 373 158   4 202 519   8 445 591 380 208
 512 357 464 503 358  77  23 356 254 442 139 527 320 230 526 532 620 516   7  82 450 180 197  32 121
 474 272 123 488  50  28  71 214 451 316 593 494 463 109 372 543  76 552 382 326 436 268  47 597  80
 428 226 554 397 575 421 458 189 233   2 459 542 528 391  62 146  90 457 588 120 307  19 113 337 183
 420 262 234 419 496 439 537 282 550 470 483  81 487 460 454  87 102   1 131 430 359  53 207  49 332
 446 288 110 475  97 385 414 492   6 395 482 403 309 427 422  34 313 340 169 140 521 257 253 223 424
 400  84   5 319 601 348 426 364 433 353 376 381 411 192 497 191 127  33 467 175 334 185  92 408 623
 251 563 343 336  41 541 153 125   3 481 293 610 341 298 277 145 274 399 347 476 151 437 224 303 413
 509 339 406 286 238 314 398 360  14 416 245  57 203 322 417  99 418 328 608  12 392 386 176 258 624
 432 290 598 346 368 220  48 273 466 181 310 325 535  11 312 338 335 345 472 365 281 219 237 155 363
 278 134 354 404 438 331 387 431 267 287 218  18 284 330 410 540 243 581 271 259 213 296 378 173 300
 104 574 138 480 490 321 390 179 231 232 261 244 216 500 596 304 311 455 164 200  93 306 506 383 147
 129 583 566 217 275 248 150 174 301 196 560 210 206 255 324 444 266  63 283 211 515 485 429 471 264
 393  61 607 394 239 152 250 305 374 269 351 236 215 135 141 425 370 388 536 294 126 567 504 198 295
 291 546 292 162 193 115 289 522 222 604 205  85 124 505 362 344 405  95  55 484 204 493 579  73 576
  67 327 260 163 252 149 367 559 227  58 612 221  44 144 585 495 615 159 473 407 318 558 201 279 285
 177 355 111  96 531 136 551 443 384 270 130 452  24 199 606 412  45  26 561 586 361 440 499 342  88
 308 462 456  65 168 122 366 157 447   9 617  13 118  56 100 209 103 568 616 448 465 241 548 545 618
 119  27 299 478 249 609 315  72 605 402 165 477 603 557  64 352 625 160  89 317  70 166 587 228 190
 212 246 486  16 117 580 524 409  74 589 186  42 613 329  94  54 582 379 514 489 389 106 167 441 187
 562 577  51 101 105 600 523 107  60 508  78 371 423  91  29 349 538 143  22 148 571 529 565 602 172
 171 501  15  66 449 513 507  59 530 468  37  68 170 377  46 184  86 539 570 534 396 235 491 511 302

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.59814e+06us (= 9598.14ms, 9.59814s)
Wall-clock time (full program): 9.64743e+06us (= 9647.43ms, 9.64743s)
Satisfaction error: 0
Number of search iterations: 3722
Number of local moves: 1308 (including on plateau: 576)
Number of local minimum: 309 (including on plateau: 75)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 292  62 521 546 475  91 108 324 592 545  52  37 597 609  80  93  60 200 116 514 166 590  27 533 595
 612 297 532 167  51 481  21  68 491 492 106 593 527 117 126 471  50  43  72 541  55 610 606  85 611
 599 537 350 139 100 457  29  83 151 499 124 105 535 389 557 587  89 138 565 512  65 470  46 567 132
 144 109 591 571 596  53  40 480 137 572  88  84 577  95 559 505 539 152 118 615 110 621 234  92 143
 618 149 534 104 619 552 174 155 211 608 409 113 250 157 129 472  78 431 131 382 616 530 101 112 190
 440  96 384  81 525 604 154 148 461 513  97 128 497 103  18 563  57 443 353 291 439 528 135 603 164
 588 119 617 122 583 432 620 428 209 361 134 215 213 243 205 160 159 561 194 462 202 555 219 130  94
 538 123 589 179 241 622 203 605 393 192 141 173 240 216 114 212 341 569 171 403 169 395 207 624 165
 208 217 206 181 168 437 279 177 347 187 578 162 180 287 293 227 623 417 183 511 377 625 244 478 233
 198 301 295 246 235 272 253 223 311 486 222 199 477 323 158 468 332 338 270 452 196 459 370 476 265
 201 336 224 299 188 362 290 115 568 276 614 342 262 239 232 305 544 351 309 421 281 315 266 178 307
 268 277 348 346 284 474 296 221 328 344 247 322 271 263 334 182 355 275 330 487 269 390 319 282 313
 172 261 352 278 412 254 426 345 218 374 482 280 316 214 220 225 387 230 325 308 320 363 343 406 314
 257 375 380 373 329 283 335 306 303 396 484 298 378 354 450   2 360 288  67 383 349 248 285 357 185
 376 359 327 333 391 397  63 388 258 408 366 464 161 304 424 300 369 434 367 226 193 163  19 425 310
 430 340 404 449 442 372 386 422 228 170  26 339 473 195 453 140 385 111  45 186 381 184 451 317 496
 411 493 433 456 379 368 364 447  71  11 252 312 410 264 465  38   9 498 413   7 365 150 416 399 394
  49 420 210 260 405 267 427  44 356 371  90 415 444  58 463 501 289 136 398 256 495 175 400 402 494
 445 536  20 507 236  39 515 418 125  69 483 429 489 553 454 133 516  36  79  86 526  25 446 259 401
 189 392  14 547  48 331 419  74 286  61 460 407  99  34 523 479 326 508 556 273 542  31 469 321 436
 249 566  30  41 245 120 509 423 466  70 302 455 153 522 458 435 585  28 543 229  13  75 504 337 467
 142 318  33  47  54 204 358 294 485   6 506 520  17 586 540 548 197 502 550  24 488 274 573  56 503
 107 517  73 531 500  16 529 438 607 176 414 613 156 562   8 518 524 490 576 121  64  12  35 237   1
 147 602 231 441  77 255 448 598  32 551 554 238  98 574   4  10 549  66 519  76 560  22 600   3 570
 145  23 127 581 242  82 579 601 191  87 594 582   5 564 558 251 102 580 575  59 584  15 510 146  42

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.00513e+07us (= 10051.3ms, 10.0513s)
Satisfaction error: 1
Number of search iterations: 3618
Number of local moves: 1354 (including on plateau: 601)
Number of local minimum: 322 (including on plateau: 69)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 1: 595 85 46 621 616 291 194 569 623 468 232 263 316 298 366 170 71 44 515 331 245 47 73 602 145 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 142 325  32  73  77  25  48 611  26 623 465 491 619 130 479 501 569  30 117 516 584 112 603 390 237
  34 219  75 534 101  35  60  81 625 624 595 613  93  80 565 575 168 108 118 538 192 424 496 614 258
  86 282 620  65 612 610 342 200 109 618 511 557  99  20 423 521 302  76  19 586 527 106  10 361 163
  62 378 616 185 410  33 126 103 167 333 531 430  63  39 585 600  69 151 562 513 522 296 609 335 107
  54 580 563 143 249 141  96 552  16 617 493 599 196 208 370  59  98 150 184 572 555 124 608 337 261
 315 487 128 443 164 195 190 173 598 182 395 591 188 133 593 419 570  52 332 393 421 354 119 246 144
  24 597 278  89 183  43  57 293 243 622 540 506 214  91 548 160 488 165 558 581 360 179 466 241 299
 199 411 172 264  67  28 605 352 272 193 348  92 170 210 475 235 236 518 205 578 498 621 174 576 326
 275 402 203 304 120 268 204 159 549 460 483 194 353 176 528 328 406 266 206 607 229 439 232 273 161
 297 554 201 154 413 139  84 416 434 318 509 114 147 288 372  72 480 309 121 588 573 248 162 615 217
 347 556 175 228 221 468 156 186  70 587 292 601 260  90 244 153 381 287 426 368 340 574 383 225 207
 355 320 238 125 279 489 251 259 250 382 358 305 438 420 240 253 473 189 399 338 289 339 254 298 284
 385 283 267 213 211 295 310 461 306 220 388 222 351 362 365 403 312 158 263 255 311 300 394 334 456
 442 359 323 364 197 422 450 180 245 145 242 350 467 329 218 457  82 291 417 280 363 247 308 169 478
 366  85 389 294 391 324 327 453 343 177 314 346 404 303 317 356  66 276 321 102 345 433 384 373 336
 510  78 492 484 331 374 285 459 462 357 131 330 431 415 316  64 187 543 265 100 349  46 436   9 371
 405  49 412 230 344 471 568 270 155 341 149 476 319 392 212 401 386 407 503 135 262  41 470  58 369
 408  11 427 524 398 257 526  56 367 376  47 290 409 313 152 464 545 379 463 171 138   5 532  14 553
 481 274 233 520 377 451   1 512 497 134  23  88 380 602  71 227 216 414 449  50  95 455 448 322 505
 561 256 447 469 157 281 428 502 418  12 122  21 515 590   6 500 223 537 541 127  61 301  27 140 583
 435  36 425 387 375 482 544 539 472  94 178  97  42 458 116 454 286 542 132  74 129 486 396 123 523
 606 307 525 231 596 494 477 490 202 105 137 148 146 508 234  22 269 226 504  18   8 594  15 566 397
 589 209 533 437 474 560 564 446 429 215  45 181 452 530 198  79 529 582  51 113   2 224 104 239  40
 444 495  38 514 571 441 579  55  53  83 252  68 550 535  87  37 440 577 110 191 536 432 166 567   4
   3 271  13 551 507 499 547  17 517   7 277 115 519 604 111 485  44 592 559  31 136 445  29 400 546

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.0051e+07us (= 10051ms, 10.051s)
Satisfaction error: 2
Number of search iterations: 3510
Number of local moves: 1175 (including on plateau: 593)
Number of local minimum: 291 (including on plateau: 60)
Number of resets: 2
Number of restarts: 0

Problem in column 2: 325 219 282 378 580 487 597 411 402 554 556 320 283 359 85 78 49 11 274 256 36 307 209 495 271 => the sum is 7824 rather than 7825
Problem in column 14: 130 80 20 39 208 133 91 210 176 288 90 420 362 329 303 415 392 313 602 590 458 508 530 535 604 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 498  22  56 561  48 118 526 583  90 551 521 606  60  54  93 506  87 269  46 604 531 552 621 141  81
 464 611 516 623  25 599 148  68 114  83 589 207 100  74  61 127 544  98 135 486 624 510 550 307 162
 441 542 512 497 102 344 167  55 140  57 592 179  59 596 430 153  50 120 230 616 116 508 607 110 602
 545 500  78 358  95  47 211 225  62 608 353 202 194 184  40 565 134 610 597 598  69 579 242 112 617
 570  77 262 374 625  34  86 568 562  97 434 359  84 157 343 585 123 618 126 125 275 484 556 138 163
 609 197 124 595 557 588  89  41  66 612 600 590 113 221  71 302 241  73 205 536 334 190 182  70 619
 483 489 237 371 170 193 620  85 254 145 553 555 274 213 173 530 286 104 340 131 208 519 111 175 605
 540 522 129 576  94 161 101 547 195  88 378 569 258 435 246 513  75 259 234 204 160 496 212 219 614
 408 133 613 389 393 147 177 150 603 155 468 192 372 165 292 457 525 287 345 119 402 350 232 152 299
 423 224 229 438 303 281 250 279 352 586 244 270 249 543 107 209 183 260 615 251 174 266 474 409 206
 326 196 380 395 622 404  65 461 159 228 239 414 199 575 571 429 417 255 300 128 151 201 367 117 226
 252 187 271 410 399 311 365 363 200 189 297 181 428 312 231 143 296 400  58 529 245 419 387 566 386
 364 446 282 235 357 322 320 394 495 236 142 349 338 306 422 273 331   4 328 356 450 308  14 392 361
 305 465 217 122 298 186 485 375 278 493 256 396 482  49 293 304 398 301 158 295 276 315 333 319 426
 166 383 424 272 420 366 462 413 391 267 283 263 285 144 316 351   6 313 388 318 137 156 515 439 347
 191 384 218 106 354 405 172 415 324  39 379 261 327 440 381 223 248 294 406 253 240 463 431 369 502
 288  76 290 198 264 407 362 337 332 460 222 348   8 268 291 421 214 370 360 329 452 444 310 527 247
 342  35 442 136 233 265 425 154 416 412 336 469 459 480 330 188 501  52 478  11 418 257 488 479  19
  92 176  32  45 494 453  82 437 432 573  79 472 466 397 385  37 339  20 115 321 455 447 491 436 549
  38 511 456 243 481 238 467 377 373 284 180  51 458 341 580  72 537 470 476 108 346 105  15 520  99
  64 443 411 132 517 509 335 448 559 581  31 169 567 323 227 121 449 475 504 403   5  16  26 507   3
 203 178 558 277 499 427 390 535 401 532   9  30 289 473 546  67 215 587  28 309 554   2   7 541 168
 164 355  21 210 149 487 433  43 471 451  63 171 591 130 382 477 564 582 574 445 578  44 109 185 146
  36 534 528  42 314 523 503 376 533  80  29  17 593 368 560 492 524 490 563  33  24  91 518   1  53
  13 139 539 220  12  10 584  96  23  18 548 505 572 577 454 280 538 514 216 317 601 103  27 594 325

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.00511e+07us (= 10051.1ms, 10.0511s)
Satisfaction error: 2
Number of search iterations: 3607
Number of local moves: 1172 (including on plateau: 504)
Number of local minimum: 296 (including on plateau: 72)
Number of resets: 2
Number of restarts: 0

Problem in row 7: 483 489 237 371 170 193 620 85 254 145 553 555 274 213 173 530 286 104 340 131 208 519 111 175 605 => the sum is 7824 rather than 7825
Problem in row 20: 38 511 456 243 481 238 467 377 373 284 180 51 458 341 580 72 537 470 476 108 346 105 15 520 99 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
   7  81   1 432 579 490 602 566 429  11 475 578  10 138 537  57  71 556   3 599  56 575 101 514 356
 563  12   6 538  22 608 568 465 482  36 534 511  45 508 545  72   2 519 273 580  54 125  33 590 134
 589 289 312 236 605  44 493 543 275 451 567 592  39  64 561 272 123 105 262 485 183  90  77 551  17
 541  34   4 232 553 584 444 562 426 478 506 476  13 115 587 117  96  63 366 526 408  16  88 576  14
 600 401  47 126   5 512 446 557 420 214 552 491 259 106 283   9 494 166 402 582 158 256 120 471 148
 427 528 225 525 533  24 462 445 131 369 467 458  23 292 500 168  80  66 479 594 143  20 142 585 139
 507  29   8 522 497 544 271 540 111 456  28 496 304  98 560  35 422 455  41 459 206 435 235 390 176
 409 354 172  21 306 505  82 253 258 208 157 297 423 520 344  76 406 498 357 558 345 391 337 320 228
 472 516 171 399 196 386 524 515 323 334 417 353 329 387 360 368 251  18 395  49 483  42  27 473  37
 362 382  99 410 156 367 460 339 163 315 305 448 389 370 428 374 377 318  78 404 282 440 169 182 209
 303 308  51 509 463 223 295 313  83 384 240 466 418 330  85 340 412 396 411 373 215 341 281 361 224
 238 277 245 346 307 437 246 207 317 217 226 247 380 378 342 436 265 364 162 347 403 252 431 392 363
 264 470 421 348 415 447 424 351 338 355 468 244 269 229 290 257  26 216 294 278 349 197 280 293 302
 174 270 433 358 285 180 241 219 311 249 393 326 419 510 314 194 325 332 291 267 328 624 286 144 352
 248 298 425 199 321 469 430 250 309 400 381 122 266 202 397 407 343 255 220 268 327 254 489 173 372
 260 316 464 233 153 299 212 453 536 495 333 230 571 211 150 116 159 371 603 287 300 160 434 114 365
 322 274 452 574 213 301 276 416 375 165 127 103 201 324 481 288 523 442 284  89 336 198 394 181 486
 195 204 499 107 118 137 480 136 439 227 237 187 550 532 191 531 398 484 242 222 438 152 461 279 379
 335 189 612  67 319  86 383 179 610 193 231 130 546 203 141 454 296 388 535 190 614 119 474 146 385
 145 539 597 149 154  92 104 124 178 570  62 310 555 596 135 565 113 140 200 263 488 581 623  38 504
  58 457 616  75 359 620 102  32 413 192 108 170 186 502 188 503 615 155  91  94 559 622 529 129 450
  74 548 604 564 331 164  87 167 184 611 109  48 492 441  93 591 243 175 177  65 501 350 601  84 521
 607 218 376 185 221 100  55  31 517 239 234  68 606 161 151 530 613 132 572  53 549 414 405 205 583
  95 621 542  61  97  73  79 112  69 586  43 449  19 487 110 477 577 618 518 147  40 598 261 619 527
  30 210 443 609 617 133  59  50 128  70 625  25 513 121  52 588 595 593 569  46  60 573 547  15 554

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00497e+07us (= 10049.7ms, 10.0497s)
Satisfaction error: 2
Number of search iterations: 3843
Number of local moves: 1155 (including on plateau: 491)
Number of local minimum: 319 (including on plateau: 72)
Number of resets: 2
Number of restarts: 0

Problem in row 1: 7 81 1 432 579 490 602 566 429 11 475 578 10 138 537 57 71 556 3 599 56 575 101 514 356 => the sum is 7824 rather than 7825
Problem in row 10: 362 382 99 410 156 367 460 339 163 315 305 448 389 370 428 374 377 318 78 404 282 440 169 182 209 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  88 519 477 124 479 528  81 127 390  32 185  74 617 186 113 115 514 505 144 274 402 429 543 619 260
 580 624  84 298 263  66 541 137 437  91 588 577 283 622 379 114 438  77  99 227 107 286 182 301 424
 595 129 523 266 389 112  42 384 552 391 251 597 102  64  93 248 564 468 105 255 270 498 609 315   3
 618 325 220 456 450 520  96 224 486 555  26 289 141 180  76 591 158 409 152 433 213 612 235 346  14
 168 122 563 448 579 494 163  57 128 317 596  51 446 269  85   2 502 254 155 365 616 548 208 183 506
 106 156 357 305  92 210 199 308 457  27 516 467 197  56 615 354 517 239 285 602 297 582 370 507   4
 151 621 265 475  49 382 279 513 483 230 473 217 134 176 590  72   7  55 533  12 586 253 551 284 434
 160 247 232 309 400 606 572 385 557 295 203 338 167  95 170 195 275 415 202 322 504 228 149 259 540
 143 560 201 620 218 324 281 226 623 120 148 522 223 302 169 233 307 342 196 518 351 164 136 363 535
 207 337 570 412 427  97 140 573 291  94 587  65 257 181 611 625 234 135 192 296 521 110 205 318 340
 532 604  98 426 509 496 244 242 373 276 359  58 290 501  71 179 352 306 463  19 249 165 204 344 465
 349 262 442 575 375 116 374 493 445 153 189 198 313 252 334 154 287 558 538   9  37 443 278 387 264
 300 348 431 303 392 321 293 593 378 175 100 396  59 256 371 209 583  73 503  54 364 425 258 299 341
 243 200 311 103 280 449 376 246 240 353 312 531 188 356 323 138 471 336 343 407 162 304 460 333 360
 472 125 187 358 332  33 335 372 362 310 123 319 366 594  62 394 314 292 316 261 419 231 422 367 459
 368  80  90 603 104 466 559 455 172  43 499  13 111  53 403 441 440 282 476 430 599  39 369 524 206
 398 268 327 345 328  40 380 464  23 410 395 347 439 408 489 404 547  22  25 294 157 171 515 119 510
  61  30 212 272 428 454 487  31  50 361 121 584 567 534 229 350 453 592 544 326 166 241  29 432 271
 118 508 383 177 178 610 418 417  47 511 436 482 447 174  67 462 561 130  24 474 145 131 413 245 267
 469 458 193 190 411 497 527 161  89 491 184  48 423 526 421 485  82 277 132   1 108   5 578 484 585
 435 530 216 147  41  44 492 461 397 381 481 214 529 194 490 550  34 613 470 139 399 219 250  83  16
 355 608 401  15 414  79 273  68 150 480 191 236 536 339 388 329 101 598 554 562 211 117 221 553  46
 542 109 500 126   6 444 600 237 416 574 238  17 406 607 225 565  38  69 330 569 568 478 142  11   8
  36  10 320  20 393  60  52 576 146 566  87 614 549 405 539 546  18 173 556 451 215 601 420  86 386
 331  45 222 452 288 377  21  75 133 589 537 571  35 495 512  70  28 605 488 525 159 545  78  63 581

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.69891e+06us (= 8698.91ms, 8.69891s)
Wall-clock time (full program): 8.74834e+06us (= 8748.34ms, 8.74834s)
Satisfaction error: 0
Number of search iterations: 3148
Number of local moves: 1026 (including on plateau: 398)
Number of local minimum: 278 (including on plateau: 45)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  83 195 574 110 545 532  73 588 248 262  11 561  40 286 547 283 596 159 211 172 357 587 560 243   2
 541 107 510 497 277 298 507 546  92  56 249 178  65 135  44 199 431 579 259 369 607 150 594 366 169
 119 460 281  88 448 239  20 362 230 437 534 139 127 123  26 477 482 520 583 104 595 305 469 540 117
 536 143 519 261 562  67  30 392  32 466 538  77 446  36 559 236 258 513 328  74 571 564 530  46  41
 410 105 548 213   3 340 555 551 502 151 475 451  66 439 215 409 516 125  58 194  25 206 336 461 471
 558  15 126 200  14 367 399 149 331 570 223 235 407 102 480 542 216 552 167 103 621 184 429 517 318
  61  31 617 247   7 553 284 267 428 485 590 111 203  16 219 433 238 361 491  50 421 401 459 544 308
 537 463 265 153 452  99  22 609 109  45   1 577 221 610 358 435 438 152 141 251 573 464 565 266  19
 330 134 384  93 386  76 332 350 608 245 154 614 323 449 419 416  48 252 260  10 363 440 307 398 434
 359 228 232  28 450 394 514 301 501 218 338 291 142 515 120 145 302 345  57 606 474 173 313 391 388
 311  87 131 445 567 467 470 263  39 572   4 164 237 377   9 113 381 528 413 420 316 352 227 576 356
 273 375 582 189 400 427 241 300 246  81 285 341 314 157 373 244 423 312 319 478  55 197 355 584 274
 297 207 231 342 304 208 408 376 334 315 441 354 500  90 303 294 415 368 158 406 191 320 380 349 234
 344 623 185 422  70  68 504 306 383 569 280 242 233 424 333  17 414 254 425 179 240 174 418 379 339
 360 568 253 442 371 196 188  60 264 385 488 503 290 436  51 148 324 205 597 212 476  54 292 204 458
 389 443 404  52 444 192 481 279 287 309 600 563 457  47 299 268 619 496  59 190  97 346  69 163 272
 226 296  95 364 171 271 472 137 337 483 282 202 533 543 276 176 310 321 531 353  82 329 396  27 612
   6 508 177 468 295 499  24 256 613 147 288 489 426 210 257 374 455 382 432 512 325 209 106  98 269
 523  63  62 393 347 146 527 605 220 484  29 255 326 550 556 335 168 397 412 518  80 327  13  94 395
  49 155 140 495 162 622 454  38 187  35 417 175 615 604 575 270 121  34 378 585 116 465 186 557 390
 122 618 322 578 289 293 180 136 128 165 156 511 487 601 521  84 181  53 522 498 411 182 193 224 370
 535 525  86 217  72 229 616  42 598 124 581 170 593 250  75 112 222 505 160 447 343 509  33 201 580
 115 620 586 348 479 493 214  78  89 602 403  37 405 275 130 592  91 114 456 494 100 144 365  71 524
 138 317  23 589 549 566  85 372 529 611 453  79 351  64 554 599 133 132  21 402 108 118 129 430 473
 603 539 492 591 161 183 225 462 490   8   5 506  18 486 526 624  43 166 387 198 278 625 101  96  12

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00504e+07us (= 10050.4ms, 10.0504s)
Satisfaction error: 1
Number of search iterations: 3635
Number of local moves: 1124 (including on plateau: 439)
Number of local minimum: 354 (including on plateau: 57)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 1: 2 366 469 564 25 103 491 152 48 145 9 157 500 242 488 309 337 256 527 622 289 217 586 317 603 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 278 501  70  18  16 613 239 267 225  29 487 602 453 147  24 306 470 584 621 499 474  95  17 352 438
  88 362  77 502 592 542 197  42 331 112 526  55 433  39 571 583 329 572 504 114 475 142 188 367  82
 390 509 459  65 379 591 102  89 185 265 371  98 568 246 253 557 439 462 322  15 477 558 312  75  38
  25 520 503 249 302 385 289  46 604 203 534  61 589  85  52 546 554 294 149 213 607  45  60 553 357
  49  27 611 184 446 132 103 300 617 567 620 186  87  97 539 110 578 622  66 111 587 141 615 336  94
  20 614 133 566 624 427 187 395 275 536  64   4 437  34 165 118 254 561 507  31 192 625 580 310 166
 208 421 178 136 180 432 590 121 308 491 564 519 202 506 209 273 263 600 612 127 196 100 190 264 135
  10 157 480 143 137 377 228 576 492 512 556 227 159 430 204  92 550 259 343 238 458 545 148 222 282
  40 517 130 218 551 563 244 291 122 252 495  68 467 250 391 400 448 301 281 168 485 271 575 206  91
 160 351 162 287 240 484 279 581 158 619 207 175 181 109 410 573 494 189 486  63 472 251 490 120 284
 223 366 233 270 344 538 219  57 609 152 608 236 174 200 338 416 220 327 163 599 235 214 129 547 408
 407 145 369 229 286 256 337 353 489 435 425 346 274 419 199 332  56 451 316 299 359 283 387 326  47
 521 156 262 320 268 401 381 201 288 314  23 548 623 242 150 315 498 339 210 305 260 303 231 368 298
 596 311 104   9 409 255 364 245 309 124 313 243 389 257 373 179 324 616 356 455 293 318 402 355 226
 479 405 593 388   1  96 333 241 193 365 295 411 522  32 247 266 169 341  74 372 277 441 394 454 436
 292 232 443 285 358 216 237 325  84 106 134 505 198 290 413 533 304 176 559 296 155 481 342 513 348
 429 177 350 319 378 456 361 347  73  41 113 272 376 464 212 119 269 182 468 384 363 423 328 471 450
 392 138 234 510  37  99 511 224 211 221 230 508 404 478 440 428 399   6   5 382 360 603  54 374 577
 530 594 354 383  53  11  48 525 107 461 167 535 398 349 172 345 261 422  43 412  50 420 340 442 403
 585 128 579 496 386 194 524 191 117 449 153 537  59 460 370   8  78  36 476   2 418 445 393 276 465
 426  90 541 497 101 195 466 514 125  28 569  93  86 529 562 444  62  72 500 544  19 334 108 463 457
 528 126 280 380 297  67 473 555 610 215 139 397  81 552 598  30 171 154  26 543   3  58 618 323 601
 317 307 205 375 574 123 434 493 595 606 115 523  44 540 570  14 452  76  33 483 396  71 248  80 151
 415 488  69 469 335  51 164 516 116 549 105 532  35 588 217 414 161  13 258 565  83 518 597   7 560
 417 183 406 527 531 321 515 330 582 173  12 144 586 482 146 424  22 170 447 605 131 140  79  21 431

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00505e+07us (= 10050.5ms, 10.0505s)
Satisfaction error: 1
Number of search iterations: 3916
Number of local moves: 1119 (including on plateau: 460)
Number of local minimum: 332 (including on plateau: 51)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 1: 438 367 312 45 587 31 612 259 448 573 338 419 623 243 295 106 73 224 48 194 101 380 205 488 417 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 233 605 616 465  89 122 567 121 204 170  16 556 582 296  82   2 492 623 528  56 153 226 412 571  38
 257 269  19 520 532 155 589 163 553 106 325 160 596  70 563 542 576 599 572 189  50  53  63 104 200
 530 593 212 110 602 468 559 116  18   3   8  72 426 565 115  33 524 523 544 118 462  44 218 526 436
 592 549 518  92 443 598 481 340 167  21 132 618 609 569 161 425  51 248 547  15  40 279   4 264  62
 497 584 513 119 335 534 472  17 543  43  75 512 262 486  61  28 471 531 430 345 196  73   1 107 590
 265 495   9  42 473 303 456 103 253 221 254 515  87 525 331 288 604 541 510 407 114 166 171 152 540
 535 417  81 256  24 484  88   7 546 127  86 444 459 131 275 509 454 474  11  71 561 517 290 595 383
 266 521 394  54 181 450 452 220  76  36 195 620 361 507  23 214 614 496 522 453 222 482  90   5 371
 433 357 427 493 469  26 431 136 143 291 255 423 281 205 165 480 420 403 379 182  99 234 319 404 370
 138 489 435 475  77 384 378 446 293 301 397 419 310 347 328 123 351 503 414 168  60 243  98 190 458
 364 241 346 179  85 395  22 272  80 411 622 338 613 368 396 388 390 247 438 375 239 235 381 187 213
 339 315 437 377 363 372 259 333 350 416 442 273 341 124  32 317 308 260 353 270 267 284 283 323 387
 292  41 324 369 400 538 274 591 391 451 393 102 299 232 389 311 399 330 289 125 318 374 280 276  37
 615  97 231 251 238 322 356 568 343 428 192 610 287 298 244 344  95 215 355 316 501  55 306 297 261
 224 258 314 302 294 285 286  27 402 386 440 240 277 478 354 429 177 191 245 498 514 422 360 199 223
 217 206 183 597 321 295 300 312 230 485 228 447  20 246 536 445  57 237 376 282 612 366 229 320 278
 406 178 184 326 139 216 193 398 551 424 271 309 504 242  39 327 307 227 157 552 578 336 508 305 148
 557 112 268 249 570 194 203 401 142 434 494 219 109 176 463 207 174 173 385 236 263 460 211 539 586
  13   6 169 209 367 156 180 439 621 558 449 150 313 202 575 537 548 134 197  30 405 566 506 348 147
 164  25 151 141 175 490 334 418 606 502 135  49 198 210 608 359 111 487  68 466 603 457 392 488 188
 409 252 479 560 573 225 137 581 128 380 483  47  78 358 337 408 185  74  91 432 476 342 577 129  84
 186  79 304 349 144 619  66 500 149 587 625 154  67 133 564  65  45  64 250 607 362 146 601 580 579
 162 448 516 467 365 100 113 120  69 415 624 477 511 574 441  10 108  94  52 545 172 491 461 158 332
 117 105 555 410 145  48 470 585 594  96 554  12  34 382 126 505  35  58  83 499 527 519 464 550 352
  14 583 140 413 421  46 159 611 373 533 130  59 201 101 617 529 329  93  29 588  31 455 600 208 562

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.06605e+06us (= 8066.05ms, 8.06605s)
Wall-clock time (full program): 8.1078e+06us (= 8107.8ms, 8.1078s)
Satisfaction error: 0
Number of search iterations: 2873
Number of local moves: 906 (including on plateau: 399)
Number of local minimum: 258 (including on plateau: 41)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
   3 571 541 130 153 559 224 598 349 563 141   8 122  27 215 529 149 230 114 544  43 562 304 539 607
  78 586  44  30 109 545 490 580 172 584 168 195  21 610 460 597 316 488 194 124  83  86 154 521 590
  40 481 595  17  46 574 555 502  92 609 108 520  94 591  55 416 297 281 139 556 438 145  10 599  65
 575 340 496 121  36 478 431 505 441 485  63  47  12 561 202 531  25 256  71 608 423 245  67 579 227
 241 558 592  18   6 583 526 469 170 532 110   5   4 470 370 494  58 448 128 468  28 506 133 437 471
 334 450 570  26 220   1 376 101 171 528 439 405 466 422 515 458  34 510  24   7 486 436 274 543  29
 426  11 498 409  68 402 246 386 199 516 382 489 165 234 385 503  59 454  23 413  57 342 315 432 411
 459 138 429  54 208 464 367  13  61 443 449  96 414 371 474 511  69 307  52 461 420 475 129 566 395
 418  45 383 107 306 373 514 357  53 381 116 513 424 473 462 427 255 384 258 479 392  16  15 387 287
 397 100 347 389 444 341 305 314 311 322 379 323 419 408 242 269 375 265 391 404  56 512  75 346  91
 332 285 243 540 394 155 412 356 433 296 250 313 218 430 442 226 167   2 445 363 308 158 355 359 343
 390 288 406 508 263 335 198 372 435 333 271 321 362 233 261 380  14   9 369 361 330 338 396 327 325
 123 525 293 222 231 447 272 320 344 284 398 585 358 254 377 365 182 184 312 257 309 317 360 328 178
 270 310 578 368 354 300 286 204 339 301 337 401 331 177 164 509 452  62 283 289 229 206 302 345 428
 295 303 336 417 388 186 210 606 467 193 351 219 150 207 491  99 605 276 421 161 291 318 196 174 465
 166 294 264 280 472 163 594 278 350 253 568 183 267 160 228 223 567 533 298 188 260 236 352 197 451
 216 530 132 493 237 262 187 137 621 173 587 125 393 148 146 126 252 582 603 292 115 185 524 259 500
 277 282 201 266 399 329 131  82 565 238 507 249 247 244 200 593 403 548 299 217 319 190 624 275 140
 119 457 324 378 232 239 577 446 134 189 143 560 517 180 127  76 576 191 499  85 225 518 549 120 364
 135 537  66 456 554 213 240 118 482 147 175 290 176 619 538 105 551  88 611 613 157 181 484  80 209
  90  51  41 553 623  97 374 205 497 152 453 536 440  95 618 102 415 214 542  72 527 279 596 203  50
 602 400 192 615 522 104  31 111 455  89 179 550 476 151  64 142 600 251 407  87 572 620 463  39 103
 616 212 113 535 534 117 136 434  81  98 625 589 588  73  77  33 425 504 268 221 564 366 348 112 156
 601  49  93 483 480 523 106 162  84  74 273 159 557  70 235  79 492 547 501 495 581 569 248  38 326
 622  22  48 410 546  35  37 169 519  42 353 144 604 617 477  32 487 211 573  60 612  19 552  20 614

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.61088e+06us (= 3610.88ms, 3.61088s)
Wall-clock time (full program): 3.66065e+06us (= 3660.65ms, 3.66065s)
Satisfaction error: 0
Number of search iterations: 956
Number of local moves: 456 (including on plateau: 135)
Number of local minimum: 60 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 613 109  47  40  48 462  37 108  38 547  76 592 581  62 418 526 212  63 506 617 521 429 597 248 328
  83 548  49  50  53 489  88 121  41 573 130 538 263 621 477 609 608  82 259  95 620 624 101 616  87
 115 333 623 134 155 448 552 169 275 483 185 579 471  73 606 546 619  89  99 508 343 148  39  93 140
 131 136 496 257 117 488  78 210 176 425 172 525 252 551 601 582  56 413 184 159 494 139 495 611  77
  96 522 163  75 622 555 188  58 540 437  84 595 588 138 615 195  69 353  66 523 614 116 503  30  80
 137 602 127 295 243 612 596  35  51 567  33 560 543  97 600 283 147 412  70 157 605 171 578 262  42
 174 182  52 330 336 168 618  60 465 444 179 292 340 281 604 541  85 591 269 304 432 344 394 151 189
 173 279 231 160  36 451 302 572 584 518 164 430 517 125 532 229 290 226 144 194 397 625 305  81 260
 141 216 217 149 208 165 341 276 603 457 213 511 542 264 384 104 265 205 598 193 381 277 610 190 315
 321 393 177 187 364 224 245 166 589 247 280 374 549 135 322 326 222 311 303 294 368 282 550 153 443
 107 268 143 390 519 284 310 299 534 207 293 236 314 183 289 211 258 559 307 232 403 392 360 476 251
 278 288 387 399 454 161 237 240 254 357 261 317 389 349 146 234 199 306 154 348 564 361 586 354 202
 255 250 371 355 178 395 366 370 223 308 358 467 301 219 145 428 385 426 105 325 313 338 271 221 452
 206 239 200 214 352 246 391 410 291 316 347 298 244 238 379 516 342 450 249 350 227 431 218 473 198
 272 378 318 142 175 363 427 351 464 402 485  12 241 220 346 345  24 571 400 563 215  21 300 459 331
 274 373  94 309 566 335 287 441  86 191 414 150 380 479 225 126 359 329 440 369 132 327 201 447 491
 408 339 377 334 324 415 297 286 492 196 421 365  98 423 112 383  28  59 446 486 203 416  19 442 456
 439 405 510 514 362 375 535 367 312 133 420 118  10 388 230  20 296  27 445 435 170 433   4 460 417
 409 376 531 411 463 111 382 407 181 270 285 204 129 398 119  14 424 404  43 497 110 475 233 515 434
 472   6 568 490   5   3 507 323 120 209 436 100 256 386 102 504 593 484 320  31 167 228 458 529 528
 599 530 455 569 396  57 332 513 180  34 487  25  55 583  18 114 469 235 562 557 273  65 128 123 466
 537  68 553 319 438  61  72 575 356  54 498 197 468 461 253   9 505 577 561  13  32 113 533  71 501
 482  64  46 576 554 449 512 481  91  22 480 192 103 527 156 474 545  23 470  11 152 406 266 158 585
 594 419 590 539 337  15 124 422 401 186 580  26  29  17  79 499 372 524 267 556  45 574   2  92 536
 509 502 500 587 520 493   1 565 478 242 544 122 162 607  67   7 453 106 558   8  44  90  74 570  16

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.95133e+06us (= 5951.33ms, 5.95133s)
Wall-clock time (full program): 6.00038e+06us (= 6000.38ms, 6.00038s)
Satisfaction error: 0
Number of search iterations: 1920
Number of local moves: 686 (including on plateau: 341)
Number of local minimum: 135 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 530 550 101 323 497 490  99  44 347  26  56 576 420 579 395 394 407 294  59 188 161 560 123 557  49
 174 266   6 564 462  39  37 544 130 531  38 555 600 570 279 562 171  67 552 439 584 117  36   1 501
 167 426  13 515 581 598 520 591 410  94  43 144 298 535   4 543  72  22 494 191 362 532 124 523  23
 249 107 492 239 437  25 277 293 613 536   7 599 118 387 103 384 232 542 163 100 518 268 418 592 126
 234 269 441 121  28 496 519 588 522 193 573 505 113 455 398 250 508  21 516  40  11 511 102  83 328
 443 423 175 400  48  34 510 131 502 354 482 498 185 601  75 184  53 404 539  15 335 429  50 446 509
  82 585 526 452  84 158 136 350 495 383 434 491  80 451  62 459 499 469   2 256 203 397  32 444 295
 152 485 411 450  69 504 385  10 460 433 403 325 128 402 135 132 408  52 430 245 332 513 241 386 334
 165 512 153 399  45 483 388 589  54 476 527   8 154 375  58 201  12 604 320  70 406 534 262 453 577
 435  79 449 419  96 327  63 169 336 413 176 379 392 299 428 301 445 484 380 198 456 317 247 240 297
 521 205 337 272 290 331 359 263 207 202 307 381 358 382 374 292 324 315  97 208 467 308 196 393 436
 284 344 376 371 194 288 312 372 390 580 311 246 341 353 274 367 306 211 538 342 105  16 275 370 259
 286 172 321 310 427 416 313  78 260 415 257 251 309 351 338 278 197 200 302 273 470 378 569 314 340
 316 442 348 346 252 303 377 319 204 265 361 343 329 296 621 590 233 291 182 458 181 365  31 108 264
 608 559 280 180 507 305 283 137 228 236 352  24 285 209 366 440 363 349 287 276 432 261 422 237 199
  73 214 479 540 281 304 368 473 289 401 223 226 210 212 619 157 235 225 244 438 267 364 572 326  85
 524 216 373 242 151  18 474 231 574  17 258 255 529 218 457 488 594 227 224 412 487 189 356 149 162
 448 217 178 219 322 173 617 603 243 206 220 500 477 183 229 622 166 610 146 503 333 143 222 111 134
 254 475 611 282 425 187 405 506  77  65 595 616  41  30 480 360 115 186 583  14 179  86 587 120 546
 465  19 238 138 391 624 213 190 618 230 112  46 454  66 424 330 609 606  27 357 177 195 561 593 142
 568 575 533 139 417 547 156 612  88 215 168  57 565  64 253 192 369  93 248 596 615 147 478 125   5
 122 140 160 625 466 563 133  71  51 567 271  61 339 145 486  68  87 578 106 571  47 620 586 421 541
 109  42 614  92 582  95 164 525 155 471 558 141 597 150 129  29 556  89 623 481 159  76 318 553 517
   9 389 119 127 551   3 447  20 537 461 548  33 355  81 345 104 468 472 463 549  74 409 489 170 602
 607 114  91  60 221 514 270 116  35  55 545 566 148 431 493  98 396 414 300 605 464  90 528 110 554

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.00508e+07us (= 10050.8ms, 10.0508s)
Satisfaction error: 2
Number of search iterations: 4654
Number of local moves: 1619 (including on plateau: 773)
Number of local minimum: 443 (including on plateau: 91)
Number of resets: 3
Number of restarts: 0

Problem in column 5: 497 462 581 437 28 48 84 69 45 96 290 194 427 252 507 281 151 322 425 391 417 466 582 551 221 => the sum is 7824 rather than 7825
Problem in column 12: 576 555 144 599 505 498 491 325 8 379 381 246 251 343 24 226 255 500 616 46 57 61 141 33 566 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 511 461 456 571 380 209 178 365 424  89 163 258 529 295  15 323 496 349  98 426 117  34 581  47 450
 527 373 504 368 608  58 141 617  62 190 172  50 376 120 580 191  86  18 263 414 460 129 582 585 351
  53 287 576 538 601 194 391 624  41 537 144  72 170 106 517 611 459   3 539 554  42 152 110 345 159
 123 462  36 525 519  46 112 464 148 499 308 621  17 338 219 482  88 318 556 442  40 615 593 187  67
 145  75 598 353 179 204 597 176 590  87 553 616 481  90 162 119 352 413 109  97  19 619 236 363 592
 579   4  13 545 578 432 536 551 311 434 153   7  28 431 206 348 493 255 245 623   2 195 196  95 565
 121 410 603 605 573 173  91 467 108 217 333  63 126 490 322 614 532 200 548 171 405 226 143 128 156
 158 469 325 244 563 146 268 313 157  45 457 487 231  59 385 399 390 466 201 514 277 125 340 188 618
 393 515 570 166 421 384 104 216 595 284 433 288 235 247 303 530 369 547  56 364  73 101 417  31 183
 205 327 151 296 402 134 185 472 566 198 208 502 133 180 140 164 378 321 606 423 228 135 409 452 610
 443 310 113 259 419 224 257 557 404 436 269  96 522 132 330  93 398 246 463 168 454 127 305 534 266
 175   1 275 438 292 425 309 429 290 613  92 343 283 307 347 439 367 518 207 446 227 289 229 282 202
 324 427 280 588 478 497 237 286 220  70 331 403 234 329 440  83 252 232 420 314 298 267 381 354  80
 293 316 471  78 265 362 264 328 386 222 193 383 240 574 418 214 612 302  29 356 465 221 342  61 430
 445 253 279 357 103 396 192 312 540 301  32 521 320 392 105  82 230 136 437 441 568 276 400 458 249
 387 278 470 335 118 501 388 130 142 625 379 337 115 397 416 495 251 100 451 274 358 449 154 250  25
 248  64 241 332 184   9 473 382 167 372 243 256 366 524 281 137 555 149 444 315 455 550 389 503 186
 210 422 299 218   6 542 492   5 317 559 150 304 147 546 508 533 215  11 361  23 584 486  33 528 326
 435 139 561  37  27 169  22 359 453 476 360 199 560 510 131 415 285 165  81 609 374 294 520 233 411
 213 564 155 270 541  77 161 182 377 350 531 516 319  99 498  12 334 448  51  10 346 306 543 475 447
  55 223  44 428 272 468 500 225  60 488 577 394 622 535 485  52  66 587 273 254  24 407  65 544 177
 552 114 297 197  74 479 604 212 211 138 549  21 507 401 480 291  94 408  49  84 491 512 189 600 271
  48 586 344   8  76 607 160  54 523 513 509 124 370 477 483 526 336 575 262 375 355 122  85  69 238
 562 261 107  30  35 506 567  20 494  68 505 558 300 203  38 260  71 489 602  26 572 599 242 339 371
 620 484  57  39 111 583 596  79 239  14 181 406 594  43  16 412 116 569 474 102 591 589 341 174 395

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.04492e+06us (= 9044.92ms, 9.04492s)
Wall-clock time (full program): 9.09438e+06us (= 9094.38ms, 9.09438s)
Satisfaction error: 0
Number of search iterations: 3188
Number of local moves: 1017 (including on plateau: 382)
Number of local minimum: 317 (including on plateau: 42)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 364 624  94  14 560 554 496  63 577 252 563 596 113 456 197  37 125 119 134 603 527  13  58  79 607
 553  12  86 127 477 499 500  74 574 501 441 612 136 319 552  47  56  66 126 597  39 188  91 601 551
 520 103 566  78  75 160 407 153 506 419 437 452 587 104  16 547 582  18 114 610 446  70  71 195 589
 617 613  69  17  89 206 592  40 481 623 381 362 241 117 158  55 128 154 573 583  93 622 120 368 523
 514  95 411 179 619 148 416 132 598 177 567 473 213 486 152  51 236  81 142 602 608  98  99 546 182
 470 138 196 229 620 221 549  80 625 431 581 178 605 489 539  64 123 121 133 442  87 202  73 116 513
 471 107 189 353  83 564 396 131 167 201 536 480 559 279 421 385 212 102 306 491 219 170 143 521 339
 427 164 156 100 147 181 595 584  97 375 571 569  54 474 169 310 251 185 155 290 162 487 228 570 524
 548 200 325 174 621 222 406 270 225 618  67 203 250 300 311 193 342 313 322 531 220 165 231 588 180
 393 320 606 444 324 542 555 284 245 367 323 172 232 354  28 234 244 283 111 498 141 108 522 246 249
 308 139 336 580 405 504 544 218 286 383 149 214 338 332 211 352 263 266 347 478 106 288 298 350 130
 207 235 433 594 317 443 327 334 204 258 260 390 305 532 226 163 198 382 254 517 145 271 217 304 309
 391 277 190 294 210 345 341 399 171 326 314 384 374 458 321 360 482 346 242 349 316 233 191 264 247
 239 295 301 472 359 240 328 335 417 278  84 256 395 343 461 261 285 292 337 183 272 361 418 331 282
 151 414 227 348 373 237  52 377 397 363 380 494 435 208 280 187 199 430 275 115 424 303 387 357 412
 287 340 333 281 369 519 140 561 372 192 299 440 302  53 447 318 463 422 370  10 425 358 262   9 253
 194 426 379 296  72 413  49 386 365 438 224  82 508   7 484 505 289 423 376 122 462 403 434  21 467
 267 476 495 307 408 492  50 274 110 455 315 255 186 265 101 398 420 276 448 112 356 388 525 400  46
 268 378 460 464 159  88 269 439 173 533  85  96 394 273 389 257 215 518 330  68 344 541 466 209 409
 175 312 450  22  25 161 392 510 205  76  27 137 540  77 488 535 502 530 528 355 469 586 490 109 124
  30 453 459 543 291 485 144 329 479   1 585 297  33   4 351 404 557 402  34  15 293 503 534  92 507
 238 615 538 243  35 105  36 511  45 401  26  20 410 545 449 516 451 483 445  23 526 371 568  90 135
  41 493 248 575 509  29  32 223 457  48 468 184 565 157 429 497 604 428 558 168 176  42 259 578  57
 146   6  62 475 512   2  59 556  11  65  24 436  19 579 415 599 590 576 593   3 537 454 611 366 129
   5 591 216 616 166 465 150 562  38  44 118  43  31 614 230 550   8 609 572  60 432 600 529 515  61

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00511e+07us (= 10051.1ms, 10.0511s)
Satisfaction error: 2
Number of search iterations: 3634
Number of local moves: 1139 (including on plateau: 539)
Number of local minimum: 320 (including on plateau: 56)
Number of resets: 2
Number of restarts: 0

Problem in column 1: 364 553 520 617 514 470 471 427 548 393 308 207 391 239 151 287 194 267 268 175 30 238 41 146 5 => the sum is 7824 rather than 7825
Problem in column 2: 624 12 103 613 95 138 107 164 200 320 139 235 277 295 414 340 426 476 378 312 453 615 493 6 591 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 478 616 483 518 501 493  73 113  29 374 117  33  82  74 487 364 141 624 372  67 606  81  86 528 485
 555 225 609  98 106 486 619  76  59 270 246 284 345 123 341 157 430 618 388 190 604 111  60 607 218
  65 394   8 464 534 579 617 256  78 125 333  45 289 406 285  22  68 564 593 109 229 419 205 553 585
  53 410 524  37 591 399 594 138 133 173  35 563 275 561 577 108  93 622 312 560 206 199  32 512 118
 465 178 174  13 412 407 477 152 449  43 544 224 476 480 546 471 136 188 343 298 385 160  90 200 514
 147 605 172 530 143 444 254 547 519 146 527 191 244 265 545 207 396 366  49 216  87 457 116 223 429
 214 413 522  48 600 531 488 236 221 134 175 162 381 342 392 219 114 130 623 155  75 558 299 378 415
 621 294 557  77 329 181 442 154 228 201 232 210 535 215 304 426  88 589 438 556 103  44 159 458 384
   9  84 588 441 264 552 129 230 279 283 203 140 179 437 402 142 590 245   6 603 305 542   1 597 574
 459 243 165 404 369 496 482 302 310 416  96 171 332 180 504  92 288 164 334 314 227 238 472 358 409
  12 184  50  91 208 327 308 462 620 549 538 540 330 257 151 247 119 541 499 361 370 350 211 149 351
 156 349 293 195 198 397 575 420 313 296 301 274 393 453 278 367 204 251 331 357 323 255 226 348 272
 158 239 213 566 317 335 241 161 390 454 436 319  97 163 376 525 145 234  64 231 532 338 400 445 446
 543 352  46 391 277 359 258 132 193 253 551 440 259 567 185 494 300 322 260 443 266 479  72 196 187
 309  89 100 423 502 306 131 417  66 268 321 252 382 315 571 379 281 183 365 295 490 461 383 508  28
 548 368 398 271 353 202 212 242 448 166  18 282 387 615 355   5 418 233 346 434  95 427 592 389  21
 586 401 192 503   2 307 377 110 500 468 447 452 137 337  23 250 425  85  25  20 484 481 360 467 386
 473 220 497  54 554  63 326 362 509 411 139 261 286  51 169 375 625 150 105 380 373 614 424 167 237
  79 403 422 568 433 102  62 371 432 463 336 505 344  80 107 395 529 608 474  24  27 328 517 101 115
 523 570 290 311 354 121 144 450 408 439 455 431 405 280  30 182 451 414  17 235 320  55 576  39 325
 466  94 595 435   4 112  99 611 262  58 469 291 176 492 456 613  57 194 515 347 297 356 470  69 287
 339  70 209 263 536 189 197 506 303 120 168 520 565 513  38 428 582  61  31 578 612  56 495 170 276
  10 124 316 292   7 340 186 177  42 533 584 510  52  16 573 610 269 273 596 581 598 248 562 222 104
 516 537 135 249  14  71  36 601 475 602  15 572 550  34   3 507 587  40 421 460  83 521 526 122 148
  41 363 267 583 217  26 498 599 559 580 539 153 324 569 127 240 489 126 318  11 128  47 491  19 511

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.21585e+06us (= 8215.85ms, 8.21585s)
Wall-clock time (full program): 8.26554e+06us (= 8265.54ms, 8.26554s)
Satisfaction error: 0
Number of search iterations: 3112
Number of local moves: 1157 (including on plateau: 503)
Number of local minimum: 263 (including on plateau: 69)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 568  54 510 601  38 508 403 563  86  59 199 424  57 108 128 313 592  24 622 158 472 572 153  70 543
 439  47 130 570  55 527 480 620 131 401 143 484 598 100 606 555 192  20 170  78  16 320  83 582 478
 607 441 612 552  89  58 447 529 129 250  41 400  34  67  60 585 254 107 567 306  23 558 559 116 434
 490  88 105 553  37 577 445 509 137 230  94 433  77 209 398 591 453  65 600 126 184 367 604  22 431
 277  99 125 538 624  75 575 625 135 127 180 584 305  98 492 307 404  81 621 136 112 546  74 212 473
 451 195 123 566  48 165 528 475 556 171 155 248 114 182 268 503 399 118 496 562 196 611  69  30 596
 458 166  46 608 271 550 574 177 549 161 178 145 251 614 449 495 117 428 200 111 169 481 172 214 241
 187  97  73 504 247 465 391  43 151 113 152 593 341 267 520 338 502 231 159 532 133 560 599 385 242
 623 185 163 331 173 190 569 224 617 140 414 104 244 206 411 466 471 218 515 198 311 329 210 275 238
 122 373 308 350 272 188 317 326 269  21 260 519 236 101 450 540 203 255 537 186 361 605 221 541 264
 564 226 138 363 179 333 234 324 359 366 517 334 285 352 227 330 469 336 211 257 370 395 121 193 342
 174 197 298 256 281 139 280 618 356 368 146 325 410 494 339 351 327 590 204  96 290 479 273 243 291
 208 340 233 343 393 266 387 229 237 239 249 215 409 288 372 405 416 213 252 316 418 304 293 358 442
 194 354 440 228 423 225 378 282 344 369 390 235 205 394 383 332 299 379 534 261 289 144  76 348 319
 446 371 245 168 384 303 315 406 312 426 300 297 318 415  49 294 349 323 321 392 274 181 382 301 253
 408 427 491 265 347 364 154 417 419  53 377  71 223 279 148 276 357 314 448 287 455  51 443 362 389
 310 561 345   7 429 335 141 375   2 557 388 216 360 467 217   5 302 521 134 430 457 322 486 376  82
 296 539 602 207 386 353   4 175 536 493 346 102 397 454 132 219 421 295 103 355 381 222 438 278  91
  84 425 396 160 374 435  66 176 459 595 542  19 284 259 189 109  39 499 522 444 328 337 551 477  56
 488 412 413 119 513 149   6  52  28 506 432 437 452 530 183 240 464 420 246  45 474  93 518 525  80
  92 545 514  87 482  72 220  25 524 468 262 202 462 456 470 258 110 609 142 476   1 150 507 500 191
  50 511 380 309 594 526 115 407 583 516 422  44  10 581 565  42 460  18  64 365 485  27 164 573  14
  40 579 512   8 498 523 483  29  33  90 615 402 589 292 489   3  32 533  62 597 571   9 270  61 505
  17  13  35  12 603  36 157 124 610 619 436 531 578 544  79 162  26 616  63 535 501 147 548 286 547
 232 580 588 120  85 463 156  95 263 487 587 461 586  68 201 106 167 613  31 576 554  15  11 497 283

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00511e+07us (= 10051.1ms, 10.0511s)
Satisfaction error: 2
Number of search iterations: 3635
Number of local moves: 1061 (including on plateau: 477)
Number of local minimum: 313 (including on plateau: 60)
Number of resets: 2
Number of restarts: 0

Problem in column 18: 24 20 107 65 81 118 428 231 218 255 336 590 213 379 323 314 521 295 499 420 609 18 533 616 613 => the sum is 7826 rather than 7825
Problem in column 19: 622 170 567 600 621 496 200 159 515 537 211 204 252 534 321 448 134 103 522 246 142 64 62 63 31 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 189 479  64 586 238  46 583 447 197 470 612  61 620  53 509 148 182  31 206 606 622  88 193 448 147
 621 461  86 228 110 577 425  84 473 386  87  67 137  34 314 423 603  80  79 521  92 574 131 623 609
 348 514  30 417 101 618 430 133 388 562  91 123 326  25 544 494  36  57 465 508  83 200 154 619 559
 557 464  77 560  82  43 422 278 499 519  19 195 604  39 526 103 118 492 134 451  96 624 185 548 190
 534 298  85 594 615  69 446 199 546 541  23 198 217  62 419 106 170  74 581 595 230 258 105 587 273
 126 410 244 408 139 528 589 167 145 590  59 143 288 210 570 174 440 327 401 565 113 243 433 468  45
 573 625 165 510 178 239 585 121  37 613  15 159 471  71 383 156  98 616 130 111 469 249 503 536 212
 554 575 389 505 117 207 535 140 566 306  81 332 144 233 524  99 250 127 218 563 502 209 226 227 196
 125 614 180 486 260 102 530 236 387 481 168  38 366 542 290 272 568 222 496 265 463  78 385 194  76
 172 617 203 404 237 115 591 240 205 146 216 275 349 164 350 247 284 208 283 608 593 324 495 219 281
 259 255 261 354 277 605 295 285 396 286 523 241 355 215 287 176 384 253 235 211 522 135 303 393 319
 367 280 267 498 224 297 279 329 220 377 187 242 204 321 302 601 188 291 598 149 610 307  66 320 301
 328 112 282 184 373 353 351 457 371 357 399 248 398 309 310  14 483 254 317 375 330 361 363 454  42
 376 271 342 316 300 364 352 336 365 382 292 372 412 331 266 325 455  17 515 141 264 338 276 289 128
 232 262 344 299 322 346 370 339  20 347 315 318 251 293 531 323 400 360 252 337 201 274 269 333 487
 334  93 459 221 511 411 183 403 466 312 390 480 124 456 449 229 225 345 114 362  95 429  47 256 431
 432 270 304 214 340 428 341  44 409 296 474 443  97 305 263 358 308 379 166 359 392 405 150 173 475
 485 223 381  11 311 394  51 406 380 175 427 600 369 395  33 391 539  50 191 158 177 374 397 407 500
 415  32 413  49 567 525   5  54  22 129 402 491 420 592  16  75 506 599 482 153 202 527 439 157 553
 109 213 588  58 460 445  60 378 424 169 493 584  70 551 257 555 335 484 179   3 356 501 418  27 108
 116  63 490 163 529 472  10 517  35  56 561 507 543 438   1 504 462 513 437  55 155 100 416 268 414
 489 246 611  40 572 138 142 569 518  89 231 576 538 579  48 558  28 434 107 160  68   8 550  90 436
  73 151 426 343 453 467  72 516 294  52 578 442 477 476   6 520 104 564 458 162 122 186 368  65 450
   2 136 537 132 497  29  26 540 444  13 580 571  24 582 192 533 478 452 234 313 556 488 421   4  41
   9 161 597 245  12   7 152 607  18 171 602 119  21 549 435 441 181 596 547  94 512 545 532 120 552

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00496e+07us (= 10049.6ms, 10.0496s)
Satisfaction error: 2
Number of search iterations: 3685
Number of local moves: 1039 (including on plateau: 457)
Number of local minimum: 294 (including on plateau: 57)
Number of resets: 2
Number of restarts: 0

Problem in row 9: 125 614 180 486 260 102 530 236 387 481 168 38 366 542 290 272 568 222 496 265 463 78 385 194 76 => the sum is 7824 rather than 7825
Problem in row 10: 172 617 203 404 237 115 591 240 205 146 216 275 349 164 350 247 284 208 283 608 593 324 495 219 281 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 287 554 527 584 561 158 435 566 559   4 572  75  15  96 107  38 535 241 436   6 280  98 514   7 570
 123  23 606 483 113 171 600 549 216 576 258 131 104 523  41 503 586 455  65  26 590 147 539 324  73
 379 402   3 493 453 401 525  16 544 595 553 477 481 127  19 136 137 583  70  31 560  66 144 581  49
  27 492 520 403 406 135 534 161 517 245 594 246   1 207  11  72 569 225 181  47 512 268 543 468 441
 262 423 526  95   5  30 597 491 229 507 192 167 412 579 442 448 567 489 102 439  13 117  14 499 180
 118 589 563 143 484  53 485 548 428 478 160  68 398  79 551   8 351 555  69 129 445  12 538 506  67
  51 505 479 235 463  57 109   9 176 456 303  77 420 458 396 418 294 557  83 365 518  36 382 459 519
 328 408 537 132 502 405 474  17  40 574 438  21 321 413 461 452 327  25 470 210 540  39  58 323 310
 399 397 524 273 450 427  71 429  32 282 170  10 393 562 430  34  43 289 359 388 378 200 366 533 387
 391 128 291 138 368 380 383 465 253 454  50  61 415 223 444  86 277 446 344 372 460 319 433 347 297
 274 385 386 116 288 376 410 521  45 400 238 364 482 390 272 371 112 301  59 422 407 300 467 361  78
 295 335 411 311 498 185   2 304 353 334 110 296 326 341 331 375 247 362 348 343 352 152 377 416 421
 308 284 342 431 358 312 316 305 278 373 215 276 173 330 220 333 325 384 318 414 275 187 394 367 306
 528 395 350 281 381 237 257 271 363 239 298 248 283 392 285 349 256 221 500 242 290 338 356 261 204
 602 417 329 449 302 217 232 154 472 322 209 218 259 336 175 227 464 315 263 471 159 252 270 374 337
 571 299 197 240 208 224 150 346 530 585 616 547 309 313 188 265 213 317 164 222 260 495 168 205 193
 165 194 228 515  92 476 286 186 604 267 202 593 234 101 244 184 615 157 153 568 198 469 255 264 575
 182 254 191 424 177 598 236 578 212 243 473 432 249  91 370 266 434 596 251 130  18 497 201 134 588
 148 233 195 231 307 591 603 219 437 151 486 522 183 166 174 179 419  90 501 487  64 580 293 340 226
 339 108 119 404 189 625 354  87 250  94 206 609 462 126 120 612 162 125 622 292 605 619  46 114 536
 169 178 203 389 565 230 141 564 345 190 475 532 145 624 142 509  93 214 542 149 545 531 163  81 106
 480 115  74 610  28 111 199 426 357 156 360 504 172 617 621 496 124 211 550 582 155 541 100 139  97
 447 599  55 103  85 440  24 140 425 146  42 355 511 601 607 320 443  20 516 613  35 558 573  62 105
 332  52  80  63 513 457  88  22  76 121 409 488 466  48 556 552  99 587 369 608 122 494  54 623 546
 620  56  89 279  29 529 314 451  84  33 196 508 611  82 618 592 133  60 490 269  44 510 577  37 614

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00496e+07us (= 10049.6ms, 10.0496s)
Satisfaction error: 2
Number of search iterations: 5184
Number of local moves: 1614 (including on plateau: 907)
Number of local minimum: 476 (including on plateau: 115)
Number of resets: 3
Number of restarts: 0

Problem in row 9: 399 397 524 273 450 427 71 429 32 282 170 10 393 562 430 34 43 289 359 388 378 200 366 533 387 => the sum is 7826 rather than 7825
Problem in row 13: 308 284 342 431 358 312 316 305 278 373 215 276 173 330 220 333 325 384 318 414 275 187 394 367 306 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 574 397 542 113 137 150 479  92 131 608 167 478 619 236 203 621 208  94  49 161 520 615  41 509  81
  85 603 534 489 460  88 494  90 592 613  67 438 529  27  98 564 130 165  19 428 473 549  78 180  32
 611 129 624 607  87 229 617  91 553 580 445 320 602  44  42 140  65  60 136  55 523 519 577 116  53
 426  75 604 586 117 110 593  57 143 107 142 539 562  36  99 620 194 272 227  89 563 404  50 600 610
 120 412 147 427 584 159 570 380  72 373 488 568 536 112 169 181 132 127 532 245 625 421 251 166  28
 185 550 173 589  54 622 507 183 457 182 262 463 583 128  77  96  76 359 174 614 164 502 196 483 146
 184  46 252 609 193 605 435 158 175 178 330 612 304 476 172  56 162 156 587 186 623 601 126 402 197
  74 485 191 362 214 119 455 596 591 287 552 481 233 263 160 275 170 326  70 215 141 548 205 575 237
 148 145 234 242 364 338 484 243 595 312 351 459 315 327 139 260 346 202 261 104 299 498 336 598 225
 289 179 616 206 606 253 504 419 144 109 337 154 618 301 302 259 240 546 177 341 212 171 365 122 355
 335 300 235 430 217 244 538 420 400 188 274 187 204 537 313 216 291 246  82 297 213 468 283 585 322
 432 239 138 331 307 286 267 228 271 378 443 328 425 282 305 189 250 219 449 403 292 363 332 372 296
 199 230 157 366 344 333 279 284 265 273 347 469 111 393 329 276 414 466 361 190 295 367 357 319 401
  71 255 308 238 417 195 374 221 256 391 306 370 343 555 382 222 360 418 325 248 270 254 525 114 407
 406 444 383 349 223 385 249 288 290 413 314 389 224 411 334 106 386 247 264 416 310  20 232 392 350
 277 395 527 371 405 451 149  58  11 354 454 257 396 268 311 324 352  10 309 408 339 278 368 323 431
 293 422 394 474 558 345 115 348 285 317 280 398 103 340 415 381  24  22 515 464 410 207 231 100 384
 356 453 475  63 379 503  69 266   7 358  39  48 377 376 447 501 387  25 369 423 424 456 342 210 472
 375 388 429  34 353 442 168 448 540 399 163  64 176  84 437 465 521 582   8 522  95 135 434 123 439
 544  14  40 153 486 390 125 514 220 513 105  93 108 567 495 461 477 545 436  43 121 201 535  68 571
 496 452  37 487  45  66 118 281 226 269 294 101  31 569 524 572 543 467 450 491   3   2 462 321 518
 561 258  38  59 446  21 124 505  47  23 433 211  86 516 490 482 541 551 497 471  73   9 554 241 588
  51 155  79   5 508 576  35 480 566  30 528  97  62 440 530  12 526 565 458 499  29  33 441 573 547
 533 590 517 133  18 318  61 594 409  13 512 218  80 511 559  15 560 599 578   6 298  52 500  17 134
 200 209 151 102 303 597  16 581 579 557 192  83 198  26 493 531 470 556 492 506 510 152   4 316   1

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00497e+07us (= 10049.7ms, 10.0497s)
Satisfaction error: 2
Number of search iterations: 4088
Number of local moves: 1392 (including on plateau: 702)
Number of local minimum: 380 (including on plateau: 96)
Number of resets: 2
Number of restarts: 0

Problem in row 16: 277 395 527 371 405 451 149 58 11 354 454 257 396 268 311 324 352 10 309 408 339 278 368 323 431 => the sum is 7826 rather than 7825
Problem in row 19: 375 388 429 34 353 442 168 448 540 399 163 64 176 84 437 465 521 582 8 522 95 135 434 123 439 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  18  84  33 565 624 371  45 130 613 614  95 588 199 150 551  50 566  26 121 240 377 620 571   7 567
 113 397 589  24 504 165 133 576 467 550  16 461 128 583 578 239  53  11  62 562  28 580 142 484 380
 209 367  47  63 547 389 120 582 152 446 498 249 178 433 619  32  75   1 618 247  17 563 572 276 525
 131 601 486 255 517  14 577 460  29 510 485 546 108 587 160  79  46   5 141 557 159  41 172 604 555
 358 478 526   8  44  36 156 505 521 564 158 404  58 454 561 309 224  21  88 470 254 622 293 449 264
 195 507 399  61 501  98 451  23 482 603 408 393 148 115 382 473  71 419  93  49 220 487 244 479 524
 383  19   4  82  20 570 100 448 568 472 483 477 129 490 508 412 372 519 154  15  80 197 459 435 429
  12 516 458 114 500 415 457  10  38 520 488 581 235  22 422 497 410 101 169 112 462 431 146 361 348
 554 432 489   9  25 511 455 320 474 250 251 324  96 527 352 277 116 441 206 384 476 406 119 266  65
 426 219 207 466 464 203 222 495 594 281   3 574 425 339 299  76  68 418 179 357 245 355  91 443 376
 403 409 326 530 102 423 381  40 356 246 275 332 502 354  31 305   6 360 304  83 427 593 317 307 413
 468 345 374 436 341 123 211 310 598 396 215  78 452 139 285 444 335 323 223 325 294 273 328 221 288
 283 338 329 359 386 300 262  13  89 268 480 162 318 463 292 387 424 379 189 334 347 420 442 349 212
 337 289 225 388 106 437 333 201 301 295 182 596 434 447 143 282 481 125 400  52 343 291 287 351 499
 290 241 560 411 330 363 346 438 331 153 327 314 252 274 416 231 296 362 392 175 306  73 364 238 342
 407 350 232 313 297 605 267 475 260 319 340 149 263 185 228 608 308   2 401 549 279 311 302 145 230
 523 265 365 417 385 163 187 542 286 110 236 271 256 234 227 316 445 512 492 144 280 321 134 155 559
 591 137 127 395 167 609 170 414 166 135 428 200 513 233 353 248 298 515 569 196 269 205 491 194 202
 259 136 278 539 218 522 257 586 553  97 322 168 611 440 157 173 284 543 303 590 261 258  42  77 151
 216  85 584 312 270 531 171 161  34 190 272 188 610 174  86 184 579 534 556 616 573 226 421 147 105
 599 541 253 138 370 176 585 243  74 378 117  72 402 192 118 575 456  55 532 344 558  59 607 198 183
 217 548 214 617 509  39 595 493 193  56  90  51 213 124  57 615 453 545 471 623 540 181 180 107  94
  67 111 602 242 430 518 208 191 177 210 503  64 391 126 398 552 597 606 237 164 514 186 315 373  43
 537 375  70 469  81 140 544  60 103  30 625 529 439 204  69 369 368 506 535 600 122  27 336 621  66
 229  35  48 612  87 104 592 109 366 132 528  54 465 536 533  92 494 496 390  37 394  99 450 538 405

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.43242e+06us (= 6432.42ms, 6.43242s)
Wall-clock time (full program): 6.48192e+06us (= 6481.92ms, 6.48192s)
Satisfaction error: 0
Number of search iterations: 2716
Number of local moves: 848 (including on plateau: 346)
Number of local minimum: 204 (including on plateau: 38)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 623  78 161  42 247  75 105 187  66 441  74 461 465 126 157 591 592 106 101 576 619 390 590 450 502
  94 621 133  54 510 570 141  63 393 565 376 527 372  28  46 391 488  83 182  57 404 533  79 595 520
 618 148 152  69 379 485  33 163  89 490 206 367 387 185  99 460 603  64 123  58 581 561 547 522 436
  61  60 190 612 531 526  96 264 160 382 345 146 113  68 207 159 472 378  91 361 616 624 523 230 610
 202 119  70 138 124 435 125 134 162 132 212 569  76 448 112 543 540 174 620 366 268 608 600 564 484
 300 196 165 596  51 109 121 494  88 550 260 593 227 537 177 270 568 158 111 614 476 144 192 222 606
 178 240  67 219 149 602 622 214 151 446 625 617 427 145 169 156 455 250 217 140 554 257 127 241 557
 168 308 326 167 181 601 288 103 201 604 131 203 534 536  32 172 609 354 130 417 599 215 579 184 183
 234 210 142 244 335 409 216 236 613 482 330 408 176 252 263 208 415 615 278 395 388 213 108 150 505
 306 211 238 136 237 259 135 347 254 607 228 611 466 574  85 597 155 226 233 471 426 277 194 297 255
  98 360 364 323 399 532 271 197 153 232 295 430 374 469 282 279 350 386 319 261 331 280 291 293 256
 289 301 375 143 307 351 245 200 518 304 397 318 286 506 338 272 352 218 223 239 398 267 340 258 380
 281 365 198 328 325 370 274 302 242 171 220 296 438 458 221 339 356 324 292 605 329 224 275 413 179
 299 262 175 248 298 402 401  55 310 396  92 225 332 359 251 449 311 403 358 322 314 412 423 269 459
 336 363 284 468  13 285 437 327 313 434 122 371 344  97 315 362 114 432 447 249 290 253 348 414 407
 385 428 139 463 283 394 429 504 321 110  35 303  87 389 486  45 373 511 317 406 195 180 368 443 231
 456 384 333 452  17 342 383 346  20 107 444  90  59 420 560 287 357 369 501 246 170 377 343 425 337
 422 320 500 498 410 405 265  47 483 442 529  93  34 199 440  29 273 584 316  81 104 431 411 457  52
 497 566 545 559 462  27 470 353 433  15 571  48 154 381 556 205 164 475  22 305  36 451  77 400  53
 355 418 575 541 473 186 519 479 266  37 474  72 129 392 493 552 117 514 538   1 204  14 341 116  19
 509 491 445 419  18 115 525 487 515 118 542 481 524  11 558  23  30 553 120 243 309 535  16   9 229
  21 495 489   8 577 102 467 585 478 439 517 209 578 464 312 454  82   7 582 334  38   4  43 349 191
 499 453 598  40 563  65 548 588 555  24  84 100 503 528 507 480   2  56 530 508  86  10 421   6  71
 544  12 589 562 512 147 188 567 549 235 587 193 189 173 586 477   3  39 594 276  49 539  73   5 137
  50 416 572 496 424  31 521 583 492  62 128  95 551  80 573  25  44 546 580 294  41  26 516 513 166

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00499e+07us (= 10049.9ms, 10.0499s)
Satisfaction error: 2
Number of search iterations: 3850
Number of local moves: 1218 (including on plateau: 610)
Number of local minimum: 310 (including on plateau: 72)
Number of resets: 2
Number of restarts: 0

Problem in column 11: 74 376 206 345 212 260 625 131 330 228 295 397 220 92 122 35 444 529 571 474 542 517 84 587 128 => the sum is 7824 rather than 7825
Problem in column 12: 461 527 367 146 569 593 617 203 408 611 430 318 296 225 371 303 90 93 48 72 481 209 100 193 95 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 205 590  58 624 105 426  81  93 119 539 443  89 114 461 118 611 580 170 476 502  68 201  36 579 537
 521 128 112  75 619 556 505  43 412 497  83  69 103  37 440 548 533  67 327  61 512 210 131 621 615
  33 364 610  56  47 367 602 596 110 202 546  86 551 200 126 257 504  74  97  70 536 569 607 455 160
 612 145 152 581  60 616  96  62 457  45 605  65 156 577 601 588 362 375  39  59 121 594 129 585 143
  35 101 614 212 625 566 185 135 146 570  85 125 150 507 535 620 538 526  28  72 623 248 189 296  94
 106 609 335 216 162 494 534 565 552 572 215 140 154 608 617 139 175 191 111 483  73 184 169 366  55
 291 235 603 177 107 390 583 320 403 516 179 153 171 523 520 167 166 108 613 245 113 206 301 506 229
 132 560 316 222 141 328 207 458 564 253  95 246 379 176 219 214 503 493 163 234 226 282 563 492 359
 165 470 265 260 172 573 318 157 599 237 151 211 178 180 419 558 220 195 174 530 595 351 197 258 392
 198 622 199 208 297 377 267 209 305 430 244 247 352 300 324 525 344 431 231 600 230 168 255 304 158
 604 325 232 353 240 589 278 368 133 264 286 194 104 281 285 290 439 273 401 618 348 124 233 221 342
 250 183 343 407 190 346 186 385 354 606 261 436 270 323 271 242 164 224 243 355 356 262 433 518 217
 369 294 279 322 349 314 284 303 313 315 252 308 213 299 223 527 312 453 203 236 372 360 274 319 332
 269 376 382 398 333 277 402 272 341  46 406 404 309  12 266 365 292 293 469 357 288 397  53 370 448
 408 276 387 218 394 134 380 173 345 373 464 329 547 361 259 289 336 378 122 337 256  99 193 393 374
 306 424 148 340 310 187 137 462  64 123 395 371 363 388 423 159 420 421 347 429 391 438 317 155 307
 532  21  92 331 463  44 444 386 130 358 268 410 127 437 427   2  17 192 384 477 425 471 411 459 517
 383 445 435 275  66 239 475  34 466 434 479 326 330  63 498 468 339 241 321 287 399 478 295  38  11
 454  88 554 428 491 280   1 487  31 422 417 550 409 418 396 149  78  48   7 254  13 405 510 451 484
 400 496 541 486 311  25 442 161  27  52 514 511 188 499  76 334 136 490 545 138 100 381 467  40 465
 413 144   3 522   5 228  41 568 562 204 543 460 509 227 102  24 524 575 414 432 283 298 598 142   4
 544 302  15  16 574 249 350 515 263  42 251 446 549 225  91  54 559 482 593 338 415   9 416  71 456
 508  57  18 447 591  49 488 474 472 196  32 495 557 109 555 582  22 116 485 450 481  77 441 117   6
   8 389 561 567 587  51 449 452 115  29  98 576 489  30  20  87  80 480 531  23 519 540 597  19 528
  79 181 571  84 586 120  90 147 542 500 513 578 553 584  14  26 182 529 501 238  82 473  10  50 592

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.427e+06us (= 4427ms, 4.427s)
Wall-clock time (full program): 4.47709e+06us (= 4477.09ms, 4.47709s)
Satisfaction error: 0
Number of search iterations: 1220
Number of local moves: 704 (including on plateau: 249)
Number of local minimum: 65 (including on plateau: 34)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 612 193 112  94  55 134 610 536  40 592 242 171 474 389 624 121 480  65 208 567  42  88 132 619 625
 595 409 498  54 463 228 570 363 107 483  89 623 496  56 501 162 154 524 351 444  15  37  67 464  72
 109 509 621 604  53 137 477 210  50 535 491  32 494   6 157 344 525   9 202  16 561 188 579 419 497
 136 283 125 618 332 572 379 481 606 622 589 116 406 140 522  41 156  14 146 124  73 550 239 405 150
 613 158  96  85 198 173 304 599 103 571 620  75 505 437 181 352  92  68 467 119 236 506 168 569 530
 195 380 142 280 209 597 184 602 227 545 617 259 126 563 164  64 601 416 215 609 213 128 196 185 108
 167 517 237 174 526 596 614 488 176 118 166 366 263 161 559  82 588 335  47 390 115 219 194 217 510
 269 369 277 276 591 516 334 308 249 247 230 226 583 272 268 314 307 257 216 220 607 203 197 266 223
 538 169 224  84 508 512 204  51 587 111 222 578 555 172 451 130 317 267 608 144 354 145 182 233 479
 214 278 244  71 549   7 258 391 211 472 551 336 293  38 212  52 531 192  30 554 250 503 383 594 611
 271 199  80 286 384 372 294 337 254 400 448 273 490 279 598 285 338 243 356 178 515 313  43 364 225
 251 265 229  98 430 177 231 303 316 331 289 537 411   2 471 302 438 256 245 367 333 325 357 539 322
 287 104 175 412 426 443 165 234 170 253 310 319 328 577 511 493 238 270 370 292 327 291 475 123 232
 359 386 340 346 106 201 376 282 452 260 306 420 394   4 326 374 565 315 329 281 321  19 368 365 330
 358 183 275 262 385 318 264 324 446 382 102 350 410 348  24 422 152 378 395 206 431 403 360 248 399
 428 459 345 521  26 339  33  87 439 581 548 311  45 462 323  17 117 533 377 404 415 349 398  63 205
 396 355 433 353 295 189  79  69 413 135 347 362 341 482 113 312 149 449 457  23 300 401 484 465 423
 139 147 373 544 252 299 305 221 388 110 343 470  61 255 297 441 155 151 586 160 487 489 100 468 584
 414 261 518 507  57 447  62  44 580 469 301 288  36 495 434 397  18 425 131 407  27 458 445 148 456
 540  95 473 453  91  86 466 159 542  22  83 417  49 558 120 523 105 502 392   8 461 534 605 513  28
 240 519 504  58 296 190  59  25 541  35 600 207 163 393  31 500 375 573 436 460 427 381 564  13 235
 141 127 547 566 241 528 408 514 543 320  74 418  10 576 432 582 274   3  46 532 387  11 402  29 114
  70 546  48 476 575 191  93 429 129  81 138 593 309 440  34 562 284 421 492 574 485 616 122  39  78
 478 361 455 527 342 552 499 153 179  60  99  12  97 520 101 529 568 556 590 186   1 450 180 187 143
   5 553 454  76 435  21 557 615  77  90  20  66 486 200 371 424 298 603 133 560 442 218 585 290 246

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00505e+07us (= 10050.5ms, 10.0505s)
Satisfaction error: 1
Number of search iterations: 3999
Number of local moves: 1101 (including on plateau: 564)
Number of local minimum: 369 (including on plateau: 66)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 612 409 621 618 198 597 614 308 587 472 448 537 328 4 24 17 149 151 131 8 427 11 122 187 246 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 577  13 616 593 296 123 114  37 105  42 455  19  41 380  12 557 606 492  58 461 261 496 392 487 592
 151  35  21 278 605 603 534 218 562 611 378  10 277 104  32 266 595 127  63 511 306 589 540 353  56
 157 619 542 345 205 604 480  66 387 148 516 106 153 275 110 472 130  98  73 553 101 612 471  39 563
  60 190 598 530 292 559 334  64 316 599 571 134  78 135   1 456  75 575  76 582 561 520 255 117 147
 198 450  81 459  51 570 354 525 215  71 508 310  93 214 113 297 133 405   9 403 618 533 565 237 413
 176 602 550 178  70 601 303 172 128 578 122 313  91 429 159 158 346 281 235 171 558 617 418  68 501
 139 197  52  82 210 395 615 340 422 308 515 141 164 404 118 355 179 585 608 588 332 423   7  92 554
 233 518 256 239 620 199 352 283 246 486 350 271 362 566 274  83 146 279 193 102 289 538 227 293 420
 191 273  74 192 154 361 441 223 268 196 573 260 373 144 607  90 622 536 305 410 253 477  54 524 224
 243 149 221  88 304 184 439 436 232 416 287 250 347 385 247 208 254 590 252 447 452 319 226 317 532
 213  55 249 322 357 621 560  80 206 211 406 251 323 295 580 207 204 186 286 568 160 609 377 140 359
 419 315 325 219 230 264 384 244 259 460   5 394  33 506 329 302 182 372 409 381 414 399 335 331 314
 301 285 398 510 528 356 169 270 167 265 613 552 262 209 374 143 318 263 397 126 187 225 333 379 195
 174 236 119 411 364 311 276 180 428 202 155 597 494 228 376 434  53 370 421 367 437 188 217 545 242
 391 495 269 448 324 360 389 430 351 307 175 173 258 431 166 284 138 320  27 339 473 203 248 327 499
 383 463 365 234 432 177 321 363 401 231 445 290 505  67 541 112 116 610 369  77 216 156 458 467  26
 343 326 299 396 170 330 240 474 291 328 412 569 390 280  40 222  57 408 337 309 272 163 386 415 368
 382 375 514  30 108 181 623  59 527  23  62 451 581 457 449 481 596  50 444 129 241 109 194 465 294
 503   6 366  14 579 393  34 417 583 504  11 446 400  43 426 522 488 185 358  16 435 132 491 131 342
 407 479 298 500 466  36 161 402   8  79 478 468 543  85 546 267 152  48 476 614 348 145 388 427   4
 521 341 257 584 120 238  87 529 489  89  45 470 454 576 497 512 526 424 556 142   2  47 288  28   3
 483 531 462 121 125  31  65 469 115 567 438 564 433 312 338 586 453 282 349 103 201  99 162 440  96
 591 555 336 475 464 124 344 547 442 485  69  22 482 551 498 425 245  38 507 189 165 136  25  61  49
 572  18  20 548 539  97  95 513 183 535 150 220  94 549 502 371 624 229 443 137  24  46 168 625 523
  17 300 537  29 212 107 111 484 493  84  86 544 594 200 490  15 587  72 574 100 519  44 600 517 509

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00438e+07us (= 10043.8ms, 10.0438s)
Satisfaction error: 2
Number of search iterations: 3820
Number of local moves: 1274 (including on plateau: 566)
Number of local minimum: 346 (including on plateau: 72)
Number of resets: 2
Number of restarts: 0

Problem in column 2: 13 35 619 190 450 602 197 518 273 149 55 315 285 236 495 463 326 375 6 479 341 531 555 18 300 => the sum is 7826 rather than 7825
Problem in column 9: 105 562 387 316 215 128 422 246 268 232 206 259 167 428 351 401 291 527 583 8 489 115 442 183 493 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 531 622 529 491 459 581 194 104 255  60 156 512  96 117 365  44 604 177 303 370 475  67 141 120 452
 467  13 609  86 302 588  16  79 106 195  38 500 425  18 470 514 603  33 619 100 416 540 327 617 144
  62 137 298 595 159 482  48  90  81 148 185 229 111  35 614 422 623 592 214 566 498 431 590 429 186
 530 152  56 616 213  83 395 174 132  29  57 487 538 535  97 585 113 183 547 140 462 377 455 381 488
  94 589 202 355 278 520  78 260 252 322 611 563 196 272 222 615 103  20 624 593 102 534  82 170 168
 189 265 239 192 282 582 158  74 602 191  92 571 209 496 397 552  30 122 325 612 596 225 109 509 206
  73 390 155  42 198   3 321 483 184 235 269 572 451 275 426 460 587 131 597 565 575   8 179 484 162
 204 578 307 143 127 147 574 124 231  80 149 220 247 439 190 586 401 284 621 620 362 125 242 476 348
 444 232 259 526 203  19 211 136 601   4 261 486 369 551 268 240 421 197 443 388 383 207 412 270 294
 458  98 468 128 123  85 515 385 503 367 130 178  91 212 410 471 618 336 501 161 157 560 411 171 288
 516 441 166 101 345  23 349 258 216 371 331 394 253 329 594 277 173 413 419 328 346 223 293 219 447
 236 176 313 600 347 463 389 286 146 548 291 274 246 437 357 254 245 208 577 266  87 372 199 264 244
 341 267 160 262 263 499 510 326 200 320 324 378 478 334 398 251   2 368 237 343 449 215 287 323 290
 271 305 257 306 373  10 230 420 391 233 359   6 436 399 234 386 461 238  45 315 559 330 285 432 544
 317 276 545  24  63 517 353 350 402 250 338 352 384 301 318 344 375 454 309 403 221 300  61 164 404
  28 473  47 296 118 182  52 360 414 281 393 332 374 423 613 555 129 418 142 392 126 226 409 489 553
 450 279  21 356 511 218  26 424   1 217 445 363 311 519 428 107  54 480  89 477 506 354 387 333 469
 366  50 408 446 406 380 599 108 295 453 438 249 400 314 342 256 415  69 154 382  14 456 405 299 121
 464 407 440 337 351 308  17 474 479 525 472  93  72 358 485  88 417 376  15 227 163 151 557 116 433
 319 114 606 507 522  11 134 580 427 564 625 172 457 139  84 165 528 434 241  99 310   5 180 167 435
 568 542 573 119  53  32 546 591 561 492 502 145 110 273  66  46 112 558 175 169 138 339 562  49 504
 556 364 243 340 598 523 513  70  41 448 539 105 607 283  71  37 481 508 133  64  40 442 181  68 570
  39 533 304 583 541 505 497 536 495 430 153  95  65  77 292 335  51 297 115  36 188 543 554 518  43
 280 312  12  58 524 537 521 549 205 569 532 494 289 465   9  34 248 379 193  59 576 567  27 361  25
  22 210 608 316 466 527 579 584 605 493 135  55 610 224  75 201  31 550 187 150  76 228 490 396   7

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.0938e+06us (= 7093.8ms, 7.0938s)
Wall-clock time (full program): 7.14504e+06us (= 7145.04ms, 7.14504s)
Satisfaction error: 0
Number of search iterations: 2391
Number of local moves: 870 (including on plateau: 348)
Number of local minimum: 177 (including on plateau: 34)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 579  26 581 242 231 587 523  18 111 559 596 595 133 449  23  16 370 105 320  96 576 224  47 553 265
 407 164 136 468 438  53  95 583  85 236 444 189  41  59 211  20 621 598 395 433 611 138 602 613 185
 521 445 616 463  43 609 118  71 535 274 481 589  81  74 110   7 594 590 352 147 186 192 582  87  58
 600 524  46  55 379 574 605 103 100 409 261  82 199  94 130 384 496 383 620 360  65 593 561 163  39
 313 528 612 346 619 188 403 408 418 176 529 604 200 117 127 499 338  92 278 131 132  24  70 527 146
 550 291 125 586 508 541 137 562 145 180 432 364  27  34  30  50 625  54 447 554 128 366 142 442 505
 503 491 315 167 498 243 624 174 282 406 280 129  57  75 226 154 617 482 608 101 253 152 269 571 148
 607  12 104 566 479 250 106 492 387 196 603 568 229 270 198 135 369 615 123 212 203 267 179 461 194
 228 572 159 485 506 306 113 120 614 156 245 168 610 365 177 319  14 517 329 271 217 385 316 285 348
 259 303 115 220 388 363 178 584 592 459 214 458  40 221 300 205 421 453 466 161  21 276 239 530 359
 218 323 277 187 162 350 601 287 273 357 141 170 374 252 591 279 290 169 235 283 552 193 292 575 394
 256 354 230 454 355 215 272 318 246 121 302 209 289 351 248 305 191 473 545 219 263 472 331 241 565
 204 397 356 337  22 257 327 255 391 361 341 173 538 509 281 389 284 558  33 160 378 349 390 238 297
 234 440 251 308 325 343 422 393 295  93 434 340 405 330 332 262 335 324 288 171 254 314 307 412 213
 172 296 425  88 333 326 232 165 460 483   6 149 317 396 264 414 358 376 570 465 268  49 564 310 339
 102 328 429  56  91 398 551 293 181  60 382 375 415 347 622  10 119 423 309 469 618  97 451 322 377
  15 222 334 400 336  76 430 386   9 424 286 266 420 623 298 321  79 112 367 514 480 227 260 404 536
 431 512 457 555 299  66  42 585  61 515 158 456 372 411 467 578  78 144 207 419 108 507  19  77 301
 428  52 435  48  44 201  35 490 462 549  29 249 426 547 519 548 470  68 371 486 240 563 353 114  98
 140 497 166 157 202 599 381 368 446 450 502 413 487 534 244 452 124 206  67  13  31 344 417 183 402
 122 401 443  80  11  69 516 427 525 139 126 437 441  99 557 477  45 109 143 573 531 556 380 134 484
 210  36 392  28 373  38 493   1 439 511 504  72 606 597 258 494 304 116 237 577 464   8 544 107 416
 410   2 345 540 455 501  25  86 542 216  64 474 526 488 476 448  89 190 275 478 195 543  17   4 436
 233  63 471 500 208  84 197 294  51 311 153 223  32 580 567 537 532 513  90  37 533 510 342 225 539
  83 546   5 489 520 588 399 362 175 184 312  73 560   3 569 522  62 155 150 495 518 475 151 247 182

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00512e+07us (= 10051.2ms, 10.0512s)
Satisfaction error: 2
Number of search iterations: 3618
Number of local moves: 1280 (including on plateau: 639)
Number of local minimum: 335 (including on plateau: 75)
Number of resets: 2
Number of restarts: 0

Problem in column 22: 224 138 192 593 24 366 152 267 385 276 193 472 349 314 49 97 227 507 563 344 556 8 543 510 475 => the sum is 7824 rather than 7825
Problem in column 25: 265 185 58 39 146 505 148 194 348 359 394 565 297 213 339 377 536 301 98 402 484 416 436 539 182 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 334   5 126 561 610 188  18 535 596  44 552  96 594 551 129 455 468 612  28 548 578  22 114  55   7
  21 592 572  98 284 124  57 530 151 110 597  82 603 577  76 600 204 589  83 493  99  26 564 239 454
   9  65   4 591 570  92 235 474 547 118 587 109 532 565  60 585 231 228  49  75 562 410 554  73 500
 177 163 458   1 280  56  19 195 240 162 538   6 540 539 185 568 507 165 147 543 563 505 517 218 533
  93 117 515 499  12 584  15 300 553  46 498 241 483 534  39 198 173 521  54 506  16 448 529 315 536
 133  17 494 527 196  40 160 149 491  52 496 211 501 396 266 466 508 513  72  14 476 495 524 202 426
 169 168 446 489  48 514  23 203 480 152 473 225 475 452  66 436  88 472  10 428 401 413 297 479 418
 388 420 504 456 425 438 193   2 469   3 206 132  34 435  24 387 433  31 232 477 442 411 412 449 422
 370 119 432 276 150 174 372 394 157 207 415 199 429 441 467 399  20 379 404 339 437 392 440   8 405
  11 348 374 439 233 208 356  68 390 367 247 164 377 350 423 378  27 330 380 457 305 336 431 417 409
 385 308 309 307 130 178 325 190 343 341  77 349 288 340 381 364 383 419 322 389 345 332 326 360 333
 363 347 337 362 376  84 386  94 352 335 375  95 327 290 316 292 313 373 400 361 369 285 408 262 323
 427 406 286 298 338 319 296 306 382 289 269 213 291 368 354 384 351 371 242 312 171 310 304 282 256
 263 252 265 346 434 221 257 407 268 205 293 294 272 617 324 283 311 321 230 270 528 299 281 329 255
 512 254 328 219 478 355 460 549 320 261 217 402 318 216 430 234 200 301 314 260 210 209 223 253 302
 267 271 187 275 511 447 249 331 278 481 212 451 279 227 248 544 259 104 599 229 142 222 273 503 236
 186 295 238 159 353 470 287 421 575 557 274 403 303 250 522 134 525 214 445 243 245 192 220 158 156
 465 542 139 182 358 153 518 555 167 602 509 342 143 155 179 558 237 625 246 154 144 189 175 264 224
 526 604 258 145 461 194 395 277 111 606 344 393 191 172 615  69 566 317 244 201 141 131 166 560 138
 443 609  89 107 101 607 541 359 140 424 170 450  91  64 580 181 537 135 582 573 581 161 146  74  80
 176 569 120 184 137 488 486 462 197 398 128 620 136  85 482 108 487 215 576 125 366 148 105 416 611
 471 497 112 595 510 113 601 365  97 618 100 621  50  38 485  90 397  51 598  41  78 623  86 545  43
 579 574 588 122 180 614 519  63 414 463 127 484 464 102 116  30 106 121 559 183  47 115 616 516 123
 444  32  58  67 608 571 490 583  70 531  59 624  71  36 502  53 103  61 459 523  87 546  35 622 590
 613 251 586 520  42 593 567  13  37 453  62 619  33  25 556  29 391 357 550  81 492 605  79 226  45

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00518e+07us (= 10051.8ms, 10.0518s)
Satisfaction error: 2
Number of search iterations: 5181
Number of local moves: 1536 (including on plateau: 727)
Number of local minimum: 457 (including on plateau: 82)
Number of resets: 3
Number of restarts: 0

Problem in row 1: 334 5 126 561 610 188 18 535 596 44 552 96 594 551 129 455 468 612 28 548 578 22 114 55 7 => the sum is 7826 rather than 7825
Problem in row 11: 385 308 309 307 130 178 325 190 343 341 77 349 288 340 381 364 383 419 322 389 345 332 326 360 333 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 610 125 452 620 607 436  63 595 580 602 119  68 108 121  89  72  22 439 538 150 105 518 557 142  87
 615 117 500  43 365 621  52 307  60 592  32  49 391 585  53 425 109 586 255 591  37 110 418 569 344
 194 603 489 100 576 160 193  88 499 623 162  23  45 393  42 389  62 625 485  69 107 145 619 589 545
 115 493 413 599 554 118 143  55 127 491 170 136 517 124  84 590 116 560 207 169  67 605 611 596 165
 617 570 572 587 608 622 132 215 221 516  51  93  59 134  38 147 102 502 295 184 183 168 447 201 561
 470 497 547 104 113 486 366 177 460 395 335 148 225 404 166 249 130 563 204 234 303 131 402 172 544
 122 471 618 370 206 326 593 226 152 268  66 139 540 202  99 594 209 616 624  74 144 220 527 228 191
 151 530 537 582 156 189 213 588 149 284 192 103  71 577 264 578 106 429 214 305 212 270 495 433 197
 128 380 543 181 161 185 468 171 575 287 138 227 609 606 258 306 598 267 250  77 196 190 458 343 223
 353 525 381 112 236 146 604 179 187 313 176 283 568 163 273 262 509 336 269 286 337 348 484 232 263
 296 459 552 266 195 205 420 153 251 351 612 330 237 291 403 304 126 278 276 279 248 407 412 243 231
 422 242 199 355 315 317 135 377 260 219 321 371 316 282 347 247 327 281 319 411 457 274 261 409 361
 280 359 272 384 233 514 341 428 140 257 210 320 314 329 173 246 334 259 277 217 300 378 399 503 358
 339 271 323 178 299 288 229  70 302 240 333 218 238 338 275 448 415 216 438 386 318 455 400 289 519
 374 322  97 328 442 369 297  36 364 410 356 441 354 155 332 408 175  54 533 382 406 350 245 301 294
 449 208  56 417 432 357 398 445 434   8  18 453 186 479 345   1 360 451 379  46 401 532 200 430 340
 405 164  30 528 367 346 469 392   2 383 515 414  40 362 349 222 254  86 396 394 324 368 241 285 488
 440  47 224 507 293 467 141  39 363 473 506 456  61 101 531  96 483 292 390 423 421  50  64 477 480
 352 373  92  35 309  33 508 385 510  81 443 375 522 120 450 111 573 388  44 535 539 437 188 331  91
 481  83 311 426 416 496 308 397  29 372 446 494 492 501 512 123 574  75  65   7 601 325  79  58 154
  28 298 253 256 376 461 174 536 553 182 558 487 312 133 571 566 466 158  11 419   4 454 114 424  31
   9 235 159  82 472 129  78 342 387  73 524 435 482 290 562 541 478 137 613 464 548  13 167  76 529
 474  16  20  25  19 513 550 583  94 230 476 551 244 444 504 239 565  34 526 581 498 546  10  26  57
  21 431   5 265  48  24 523 579 559  85 511 614 310 534 556 198 521  98 203 600 564  41  12   3 520
  80   6 180 475  27  17 427 462 567  90 555 597 584 157 549 463 211  95  14 542 505 490  15 465 252

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0003e+07us (= 10003ms, 10.003s)
Wall-clock time (full program): 1.00526e+07us (= 10052.6ms, 10.0526s)
Satisfaction error: 2
Number of search iterations: 3920
Number of local moves: 1349 (including on plateau: 700)
Number of local minimum: 334 (including on plateau: 82)
Number of resets: 2
Number of restarts: 0

Problem in row 2: 615 117 500 43 365 621 52 307 60 592 32 49 391 585 53 425 109 586 255 591 37 110 418 569 344 => the sum is 7826 rather than 7825
Problem in row 17: 405 164 30 528 367 346 469 392 2 383 515 414 40 362 349 222 254 86 396 394 324 368 241 285 488 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 614 389  46  44 108 118 139 345 421 556 582 208 593  89  87 428 518 157 560 117 580 120  94 551 361
  81 619  54 243  92 514 169  38  53 494 600  43 588 160  57 554 444 544 609 129 564 543  61 533  39
 598 597 112 498  63 150  85 116  20 506 599  97 159 113 126 527 545  71 624 152 565 625 170 566 141
  73 330 534 143 175 538  62  79  99  70 612 450 512 215  72 418 567 178 426 576 572 454  82 436 151
 166 461 219  58 604 530 102 399 235 201 202 606 357 167 225 615 610 308 244 149 479 124  50 473 241
 111 553 189 184 321 474 136  67 199 574 373 416 579 121  49 613  64 616 192 602 164 521 193 325 190
 203 611 248  59 197 172 213 132 414 451 391 412 182 237 331 264 555 524 623 180 247 464 106 462 147
 165 483 387 218 211 360 188 618 282 433 381 467 195 183 162 104 468 622 240 354 125 153 338 413 275
  84 558 267 156 196 617 261 299 575 585 302 262 291 238 233 179 298 230 327 148 273 487 204 621 134
 353 367 341 364 101 326 140 254 272 603 187 231 485 293 214 289 540 249 255 286 226 358 442 352 297
 315 181 569 365 217 283 490 229 200 402 304 292 259 314 531 346 415 206 285 295 266 173 284 388 216
 317 223 221 318 137 500 177 329 146 440 403 222 250 513 296 277 541 378 374 342 305 227 258 350 281
 252 274 313 401 228 245 287 394 279 559 239 316 207 234 505 168 301 385 311 347 263 303 268 307 439
 278 376  90 158 210 449 294 246 335  98 334 205 393 392 406 340 176 377 502 359 319 271 570 209 438
 320 349 351 448 457 344 269 265 280 251  14 212  42 337 452 366 424 324  47 242 430 363 409 370 459
 369  75 107 453 127 145 425 339 420 171 395 504 362 300 155 405 270 499 501 382 343 257  88 333 400
 427 123 328 322 371 397 562   9 309  34 408  55 383 511 411 503  35 396 356  29 417 276 476 232 455
 398 161 458 290 590 404 441  32 348 131 260 128 375 478 390 379 122  40 475 410 386  80 495  83 471
 522 100 537 437 465 323   6 456 310 130 368  60  28 447 469 482  23 493   4 372 517  91 550 115 520
 431 138 508 491 422 332 561 586 472  86 384 601  68 460 355  16  74  76 510  95 194 523 407  33   2
 103 380 568 532 515  21 470 480 423 256 135 526 220 419 446 186  37 163  41  11 484  93 589 198 529
 492 253 539   7 432 435 605 496 497  22 154 546 519  26 336  78  27   5  24 536  25 591 542 110 528
 507  69 488 489 547   3 608 486 443 592  56 185  96 477 463  66 466  30 224 583  18 105   1 236 587
 595  13  45 584 445 133 557 535 312  36  77 174 109 549 620  31 288 429  52 581  48 509 577  10 516
  51 142 306 563 594  12 578 596 481 144  65 607 573 552 434 191  17 525  19 548  15 114 571 119   8

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00501e+07us (= 10050.1ms, 10.0501s)
Satisfaction error: 2
Number of search iterations: 5252
Number of local moves: 1670 (including on plateau: 802)
Number of local minimum: 470 (including on plateau: 106)
Number of resets: 4
Number of restarts: 0

Problem in row 4: 73 330 534 143 175 538 62 79 99 70 612 450 512 215 72 418 567 178 426 576 572 454 82 436 151 => the sum is 7824 rather than 7825
Problem in row 6: 111 553 189 184 321 474 136 67 199 574 373 416 579 121 49 613 64 616 192 602 164 521 193 325 190 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 604 423 608 470  92 584 517 247 205  58  55  59  10  67 477 559  99 543  83 152 534 114 609 115 541
  45 359 426  84 583 438 105 123 556  40  50 617 133 341 580  42 537 595 572  61 140 621 468 214  95
  56 495 358 622 616 613 223 106 603 161 135 407  14 610 349 576  11 552 162  62  82  53 420  79 460
  32 620 579 581 591 494 127  96 202  33 124 538 122 425 117 108 265 585  94 119 197 602 521  54 599
  17 417 410 138 526 459  41 246 586 169 145 594  91 457 593  43 126 547 137 605 565 139 492 189  93
 606 578 511  90 221 619  89 518 134 116 243 480  60 366 176 136  65 229 118 597 574 112 432 224 531
 282 455 551 158 156 625 273 215 624  48 172 191  71 493 220 178 143 529 514 405 159 252 456 251 404
 312 448 533 148 200 592 235 107 242  97 160 590 183 562 270 601 231 345 150 403 238  75 487  80 536
 180 411 569 132 163 121 589 324 275 424 125 555 254 256 458 582 192 291 128 311 307 316 454 277 131
  27 528 485 295 166 419 210 201 198 612 181 285 188 213 290 532 255 302 367 623 171 175 481 364 257
 204 263 567 376 525 190 271 380 113 363 274 383 184 281 179 614 418 374 244 248 236 208 474 230 226
 286 350 187 439  73 415 303 237 310 321 422 317 288 253 354 365 326 343 272 370 194 305 323 434 338
 146 199 329 259 436 325 151 276 435 289 218 258 522 315 245 260 298 300 228 372 427 384 392 453 308
 373 292 264 335 209 111 539 401 446 377 269 101 386 353 351 406  25 473 381 314 356 206 234 322 301
 240 334  70 390 348 249 371 336 369 414 267 445 409 393 262 399 318  47 398 284 129 337 130 489 397
 389 219 168 195 347 241 355 412 294 352 472  46 500  77 280  88 449 173 461 433 382 304 250 452 486
 360 309 165 216 297 342  51 368 413 330 333 109 378 504 346 475 327 185 402 387 421 328 182 566  31
 394 227   5 319 313 299 396  35 320 391 482 268 462  38 395 442 332 287 501 177 491 167  74 483 527
 361   9 153 428 466  13  37 520 357 496 490 193 441  87 388 451 429 164  34 212 545 408 174 553 416
 344  69  36  15 509  23  72 542 375 362 535 571 502  76 513 400 512 296 447  22 507 573   2 437  85
 484  21   1 464 232  49 611  81  66 568 587 120 450 196 503 379 443  39 506 476 261 546 110 530 102
 544 279 266  24 239 104 498 431 478 186 524 385 471 103  44  18 463 233 465 340 515  30 157 488 540
 560  57 142 516  12  86 615 508  63 550 497 278 561 141 283  19 557 155 444  98 306 499 331 469  78
 549 293 217 577 479 211 558 596   7 563 598   6 575 600 100   3 440  16 510 147  20 548 144  64   4
 430 170 225 554  26 203 588 519 154 505 467  29 570 618  52 149 564 222 207 607  68 523  28   8 339

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.55369e+06us (= 3553.69ms, 3.55369s)
Wall-clock time (full program): 3.60359e+06us (= 3603.59ms, 3.60359s)
Satisfaction error: 0
Number of search iterations: 926
Number of local moves: 470 (including on plateau: 131)
Number of local minimum: 64 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 298  28 515  83 437 518   6 212 598 206 587   1 542 529 560 135 112 504  45 242 455  50  57 528 577
 469 550 176 243 166 521 465  68 579 208 623 308 450 538 588  47 123 326  33 214 540  76 286   5 223
 492  72  15  23 590 147 595 460 508 122 150 545 606 486 278 134 427 346 483 163 149 188  20 341 485
 487  79  92  31 593 497 473   4 585  99 574 554 618 493 327 205 416 507  32 273 392   8 109 364  13
 247 262 419  74 458 167 537 516 503 425 467 304 376 481 472 106  43 506 402  73 108  71 408 374  26
 165 449 225  17  69 476 514  10 204 180 575 411 563 378 417 300 221  25 490   2 531 482 582 452  87
   3 459 424 151 428 349  24 431  55 479 387 422 456 406 500 153 175 429 240  95 461 441 323 423 111
 351 171 501 182 443 446 322  11 438  80 453 160 400 148 130 174 403 227 382  56 600 370 367 559 451
 124 362 377 535 561 292 383 445  27 181  19 464 373 404  35 105 246 448 235 290 489 435 202 380 413
  36 480 418 253 170 318 315 466 266  78 203 396 594 311  84 238 252 335 463 199 263 605 320 394 368
 209 511 421 395 282 454 409 570 415 215  39 457 249 268 312 271 363 287 440 186 340  30   9 399 294
 468 198  41 389 136 533 371 496 259  29 360 552 120 379 494 356 279 347 384 462 365 110 164 245 288
 192 361 272 237 338 319 336 317 254 353 310 576 293  70 232 391 306 267 375 397 255 269 436 372 297
 625 229 325 477 226 334 244 250 541 352 241  18 291 617 179 248 350 366 302  63 218 295 168 274 592
 342 337 131   7 513 289 155 321 407 354 220 184 343 348 566 285 275 557 355 517 213 231 162 519 194
 564 119 314 573 359 264 329 236 256 410 283 276 187 143 599 388  62 270 385 439 144 257 491 217 260
 301 138 280 261 526 127 156 158 307 498 296 128 331 610 344 510 121 172 569 525 303 316 499  16 333
 619 200 281 536 608  22 196 565 102  12 505 591 210 211 157 471 442  77 251 607 142 520 190 195 115
  59 178 546 581 191  64 611  97 219 509 146 284 207 216 381 420 309 583 613 527 137 602 116 133  96
 426 265 107 324 277 597  51 578 339 444 357 169  81 104 193 589 328 152 558 332  14 544 233 177 586
 222 562 161 543 183 386 118  21 126 568 189  37 234 433 224 432 512 129 103 405 571 532 447 139 548
 185 624 475 614  61 522 495 117 173 553 239 330  94  58  53 430 305 125  93 524 114 523 547 101 470
 230 201 612 228  66  85 132 609  88 616  90 530  65  67 390 401 572 145 154 313 358 620 549 100 604
 299 621 141 484  98  54  86 393  42 258 478  75  82  38 197 622 603 555  40 434 615 159 539 567 345
 412 369 556 584  46  44 502 474 534 596  34  52  60  89 113 414 580 140 398 488  48  91 601 551  49

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00511e+07us (= 10051.1ms, 10.0511s)
Satisfaction error: 2
Number of search iterations: 3465
Number of local moves: 1310 (including on plateau: 655)
Number of local minimum: 278 (including on plateau: 77)
Number of resets: 2
Number of restarts: 0

Problem in column 12: 1 308 545 554 304 411 422 160 464 396 457 552 576 18 184 276 128 591 284 169 37 330 530 75 52 => the sum is 7824 rather than 7825
Problem in column 20: 242 214 163 273 73 2 95 56 290 199 186 462 397 63 517 439 525 607 527 332 405 524 313 434 488 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 136 385 618  62  47 421  77 584 192 200 564 611 595 180  60 178 165 174 589 290 351  88 577 377 304
 515 188 608  32  19 513  22 539 125 124 569 572 523 517  59  58  38 574   5   8 556 527 580  33 521
 415  37 320  31 465 568  14 594 565 607 534 590 158   3  66 213 244 581 528 484   7 546  24 120 111
 532 267 198 212 247 414 423 485 575 313 563 552 261 549  93 144 177 344 473  72 131  23 544 133 100
  81 466 282 420 140 379 122 506  70  30 483 600 548 488 410  28  63 418 501 170 268 597 435 161 159
 491 486  82 502   9  51 251 478  52 236 500 562 599 540 211 127 112 524 444 121  56 579 480  75 257
 445 538 153 411 128 474  54 541 201  68 367 441 566 329 543 481 259 495   1 148  49 400 102 468 163
 482 378  13 448 273  17 477 407 454 529 381  34 278  86 508 459 129 625 475 104 162 471 395 150  90
 390 427  79 203 114 451 224 453 509 264 456 493 398 263 339 334  10 356 105 194 222 447 450 440 204
 457 460  45 360 316 386 365 396   2 306 157 168 393 497 294 137 439 175 221 422 387 262 406 249 525
  84  76 426 408 355 424 430 123  40 302 330 403 323 348 230 333 452 303 297 305 326 619 322 338 228
   6 235 301 437 325 347 604  71 512 345 285 413 164 438 254 206 197 368 409 337 366 300 283 388 234
 252 443 341 317 295 276 321 392 299 370 308 384 353 374 380 375 327  87 207 231 391 238 193 314 357
 446 288 240 350 277 394 318 315 362 183 376 335 274 373 310 272 432  18 516 372 239 292 246 266 331
 369 397 586 489 499 179 215 184 173 455 442 208 160 225 182 383 576 279 223 270 269  20 342 298 402
 352 172 145 296 364 196 469 311 227 603 361 256 271 265 479 166 405 293 307 176 535 243 219 113 601
   4  85 531 399 382 202 545 154 343 185 434 130 359 371 233 332 389 217 232 555 242 245 425 522 309
 417 209 496 605  12 281 286 463 253 462 108 220 169 476 518 363 401 606 241 186 433 248 146 205  21
 616 275 591 118 258 226 578 250 237 346 155 134 547  99 510 583 464 190 431 199 284 156  57 117 404
 181 135 472 116 505 449 511 195 109 560 149  48 557 291 567 110 571 126  41 349 147 189 289 573 585
 141 119 336 115 609  73 561 138 582 255  95 436  29 167 103 553 587 171  44 623 624 214 530 107 613
 216 492  89 358 617 319 229 132 503 412  74  35 152 106 340 260 504 101  26 458 593 218 554 621 416
 419  98 428 615 588 151  67  11 280  94  43  97  15 614 533 542 210 139 498 612 324 328  92 537 490
 287 559 429  27 514  64 520  61 602 526  36  78  80 143  96 592 487 470 550 620 312  39  65 622  46
  91 610  16 494 467 570 142  42 558  50  55  25  53  83 507 596 187 191 461 519 551 536  69 598 354

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.28898e+06us (= 5288.98ms, 5.28898s)
Wall-clock time (full program): 5.33872e+06us (= 5338.72ms, 5.33872s)
Satisfaction error: 0
Number of search iterations: 1956
Number of local moves: 888 (including on plateau: 328)
Number of local minimum: 137 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 604 493  64  44 593  77 208 298 499 332  81 144  41 549 580 135 577 358 221  65 475 470 452 407  58
 607 579   8 603 453  34  27 516 564 165 347 596  23 525 616  66 621  36  22  61 590 500 164  45  57
 290 578  39 362  78 157  29 224 535  67 117 554 547 447 508 495  49 573 571  91 532 116  63 381 422
 557 202 137  13 431  32 373 414 530 113 503 197 120  38 489 138 555 602 328 225 286 411 130 479 522
 481 519 105 112 541 125   3 612 278  83  74 623  87 605 572 254 477  48 548  86 515 124 310 537 106
 245 423 187 153 150 274 109 618 307 154 567 107 559 126 192 486 556 534 169 104 468 565 143 292 337
 140 471 576 408 160 207 562 444  47 152 609  97 123  90  25 361 523 236 383 295 389 614 226 448 239
 217 227  69 514 174 289 497 421 443 195 273 339 139 115 129 538 594 184  59 512  92 592 158 570 485
 306 243 133 201 610 242 114 338 401 439 600 412 311 241 271 402 127 568  54 260 277 257 228 193 597
 170 216 185 349  99 582 244 134 256 611 319 351 182  12 342 617 454 275 482 162 248 331 209 615 380
 483 313 498 322 345 264 204 419 318 235 203 118 175 163 387 397 413 333 299 321 430 399 240 267 279
 464 261 334 360 390 424 282 149 249 336 234 504 305 231 335 356  80 265 506 348 219 229 287 368 309
 539   5 269 293  46 268 378 357 262 121 176 494 426 375 178 363 340 304 266 341 496 376 365 458 329
 296  51 529 233 222 317 352  88 584 429 297  89 283 384 369 220 314 492 400 396 418 183 263 449 167
 272 111 191 382 250 518 388 280 394 463 441 473 354 255   1 315 206 343 425 330 276 300 258 386 213
 392  26 491 455 587 446 437 101 122 344 353 230 214 409  11 527 159  50 581 459 205 433 355  28 410
 569  20 469 395  17 420 326 199 528 270 102 608 325 323 478  95 128 180 466 613   6 100 434 507 247
  10 166 457 467 461 294 359 366 291 451  53 620 367 511  33  85 350 188 427 517 432 385 440  55  40
 103 588 490 288 417 442 624 238 119 379 372   4 480 415 371 465  31 285  62 543 406  73 436  96  98
 460 445 450 346 146 405 476  30  56 509 513  18 583 312 438  43  79 524 563 540  70  42 526  19 232
  93 560 553 200  82 545 502 324 303 551 252 393 521 520  14 147 108  71 377  52 131 484 501 177 364
 189 510 237 589 173 544 218 148 210 212 403 398 370 308 505 488 145 211  76 487 136 161 320 168 619
  72   2 198 462 546 181 531 155 186 533 575 404 472 156 391 179 456 428 284 316  94 246 142 194 622
 259 601 558  21 552 196 281 416 327 606 171  37 595 141  24 585   9 151 172 591  35  60 625 251 561
   7 215 598 253 302 542 301 536  16  75 190  15 223 574 566  68 474 586  84 110 599 374 550 435 132

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.63578e+06us (= 9635.78ms, 9.63578s)
Wall-clock time (full program): 9.68526e+06us (= 9685.26ms, 9.68526s)
Satisfaction error: 0
Number of search iterations: 3538
Number of local moves: 933 (including on plateau: 454)
Number of local minimum: 327 (including on plateau: 59)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  17  45 578 555  46  58  96 583 608  62  89 543  83 619 594 350 382  64 460  40 622  31  71 618 611
 584 169  70  91  49 563  77 212 610 434  36 480 545 621 590 393 586 477 107 323  66  87  43 156 456
 126 528 160 606 592 602  61 103 109  80  51 568 577 100 596 513 136 402  81  73 182 167 597 459 356
 166 111 105 624 591 605 454 518 556 426 108 387  42 625 491 471 131 115 114 163 187 467 171 102  95
 137  60 117 576 615 295 447 585 566  98 125 612 145 146 378 475 617 564  69  79 275  84 139 457 164
  63 450 198 534 170 110  88 574 623 122  85 342 598 157 522 604 407 177 153 603 155 112 143 599 236
 151 443 113 162 237 219 614 548  68 505 183 609 192 149 296 539 247 413 570 241 425 150  59 448 244
 128 263 123 199 265 327 161 546 287 211 209 616  92 403 551 589 217 620 230 214 173 229 233 520 419
 134 519 284 194 184 220 261 431 429 282 255 203 326 215 259 530 613 228 488 120 305 176 129 516 524
 154 438 225 281 248 550 152 138 251 240 377 300 193 315 206 208 536 231 310 580 593 335 258 264 442
 340 243 141 197 124 501 328 202 321 367 547 249 283 181 297 242 267 573 463 213 245 318 341 346 496
 271 257 227 368 175 388 274 466 205 435 235 207 345 304 600 278 319 369 347 218 406 262 273 185 411
 246 216 329 301 285 290 383 292 272 303 371 294 260 361 266 312 204 364 386 444 392 375 252 336 291
 330 384 314 276 379 270 389 289 348 322  10 293 390 253 238 277 306 363 349 268 412 430 313 302 320
 344 452 359 353 334  67 366 250 325 332 316 493 432 324 280 355  53  90  54 489 339 222 397 461 338
 422 357 415 395 451 147 423 317 409  39 380 418 307 478 373  37 376  23 308  57 424 399 354 351 165
 360 372 401 439 405 391 462 226  14  29 414 358 416 331 200  72  38 510 201 504 385 286 381 511 119
 311  28 333 362 458 468 437   2 483 441 571  32 514 428 343  86  55 191 299 417 507 440 538  75   6
 476 224 400 525 352 433  15 503  21 464 560  41 421 189 172 180 540 485  19 535 575 453  22 121  99
 374 127 396 398 527  12 481 482 106  34 254  93 404 410 186 133 420 506 494 512  24 508 469 196 279
 561 499 500 144   8 256 195 234 537 446 515  76   7 455 179 132 101 495 486 474  16 572 394 116 427
 526 210 473  11 140 487 465   4 118 497 490  44  47 142   9 269 553  35 532 498 533 562 484 288 408
 552 529 557  27  82 188 436 221 470 582 579  26 135  97   3 502  78  25 174 472 479 567 588 158 298
 445 370 449 159 549 365 521   5  56 509 523 232 517 492 178 148 569 168 544  65 104  52 595 190  20
 607 531 558  48 559  13 239  94  33 565 542 309 554  30  18 130  74 337 587 223   1 541 581  50 601

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.62666e+06us (= 3626.66ms, 3.62666s)
Wall-clock time (full program): 3.67753e+06us (= 3677.53ms, 3.67753s)
Satisfaction error: 0
Number of search iterations: 941
Number of local moves: 564 (including on plateau: 217)
Number of local minimum: 75 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 353 565 575 201 534 121 577 449 367 175 616 553 281 462   9 559  44  10  39  41 104  71 385 231 503
  30 378 477  77  31  63 609 544  85 555 148 143 435 486  95 518   6 614 610 569  60 452 284  57 499
 317 538  20 202  25 612 173  24 252 605  17  66 593 472  89 265 567 350 549 508 165 550 153 181 532
 107 588 457 310   1 498 212 539  81 598 222  47 604 302  67 599 191 537 341 395  72  55 139 368 495
 460 533 203   7  26 419 304 519  35 259 142 351 568 223 273 413  36 487 581 340  80 459 482 183 442
  61 570 515 363 122   8 189 433 312  54 261 381 415 564  29 547  43 430 473 510  48 546 541 387  23
  59 474 198 100  88 563  18 463 451 444 106 389 496 409 399 216  99 447 171 455 596 291 423  16 454
 517 530 422 400 421 397  22  12 218 113   5 292 520 366 414 137 386 470 601 320 177  83 443 205 354
  40 146  33 131 417 502  34 393 233 469  87 478 436 504 406 434 152 287 450 526 230 330  13 606 488
  46 394 338 398 587 246 507 407 437  75 453 316 551 215 168 253 269 288 494   2 190 294 274 352 271
 521 144 357  98 458 493 290 334 491 167 184 110 475 319 376 501 408 342 109 358 476 295  58  82 379
 234 404 157 464 150 349 318 401  14 289 282 305 240 548 186 278 364 509 277 416 280 327 411 262 360
 484 344  11 311 328 603 232 375 180 595  21 329 263 343 158 332 255 403 321 374 264 301 268 371 359
 272 238 204 355 382 283 247 267 163 325 467 348 471 624  92 574 296 336 236 276 136 554 209 314 155
 242 531 161 211 441 361 160 339 237 625 392 256 251 275 373 227 622 182 331 333 298 221 420  78 258
 347 111 337 335 244 370 228 176 483 557 388 241 245 248 432 323 200 154 439 285 511 346 250 260 315
 514   3 516 619 187  84 592 257  86 179 560 220  97 192 573 188 584 293 156 229 576 112 322 556 130
 600 185 159 197  79 309 594 279 412 542 490 226 219 132 362 402 506 492 135  42 535 214 303 266 145
 448 199 300 365 307 170 372 254 536 169 461 500 217 213 164 552 466  15 162 116 396 210 481 446 306
 611 133 582 270 479 620 525  73 308  74 123 380  37 172 621 225 377 174 128 618 440 126 127 465 138
 523 118 208 597 485 239 572  45 543 119 571 166  38 391 561  62 425 313 196 108 585 178 243 424 115
 468 151 583 456 529 102 438 207 545 103 540 512 101 134 345 120 195 140  51 249 299 602 613 149 193
 426  93  70 505 591  65 117 617 297 286 410 513  56  50 608  19 194  52 147 558  94 528 427 522 580
   4 428 356 326 589 224  90 369 480  64 390 206 125  76 607  53 562 431 445  68 623 566  32 615  96
 141  27 586 527 324 124 405  49 579 384 489 497  91 105 418  28 578  69 383 129 590 114 524 429 235

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00508e+07us (= 10050.8ms, 10.0508s)
Satisfaction error: 2
Number of search iterations: 3888
Number of local moves: 1183 (including on plateau: 552)
Number of local minimum: 366 (including on plateau: 71)
Number of resets: 3
Number of restarts: 0

Problem in row 14: 272 238 204 355 382 283 247 267 163 325 467 348 471 624 92 574 296 336 236 276 136 554 209 314 155 => the sum is 7824 rather than 7825
Problem in row 20: 611 133 582 270 479 620 525 73 308 74 123 380 37 172 621 225 377 174 128 618 440 126 127 465 138 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  60 570  51  67 623 510 624 581 545 512 109 336 515 147  16  41 328  15  25 621 528 614  24 134 229
 106 113 600 478 458 360 590 456 376 601 367 139  38   9  31  55 592 299 542 619  82 176  70 618  50
 107  36 114 234 103 462 535 583 587 448  58 580 558  76 112  33 563  79 177  35 442 622 604  66 611
 179 279 111 620 118 550 578 418 409 561  37 594 378  42 129  21 596 359 115 188 339 199 124 585 296
 613 524 140 172 625 540 552 363 616 184 178 547 206 116  47  54 517 137 123 144 401 306 194  49 477
  87 436 101 584 278 312 553 526 605 595 168  81 582  95 146  71 508 395 174 609 286 155 202 196  80
 223 167 187 210 259 514 446 539 530 475 131  96 169 163 149 230 326 522 615 170 498 125 282 201 598
 110 406  93 565 156 612 122 183 555 606 158 317 160  83 293 198 589 586 219 212 544 225 218 130 485
 274 330 247 257 189 497 193 577 597 268 190 205 603 349 197 186 459 185 325 154 466 209 143 126 599
 607 265 254 100 141 290 220 389 399 226 216 232 464 245 415 200 366 224 182 364 250 262 394 588 532
 272  40 207 310 252 315 289 505 490 560 195 251 221 303 408 321 255 543 231 159 354 253 357 294 440
 351 424 347 258 304 204 266 372 246 214 208 617 276 256 460 269 235 319 240 329 337 342 307 237 407
 191 275 283 302 504 322 371 249 264 335 292 287 244 323 362 313 353 295 267 344 449 236 338 270 356
 316 314 271 297 419 284 435 222  86 203 471 334 233 318 248 420 346 288 105 361 386 333 309 392 434
 320 331 277 355 341 308 421 332 173 260  27 352 215 370 384 455 383  85 381 473  22 404 343 445 368
 291 217 377 311 327  39 374 108 385 175 397 345 388 452 400 324 350 373 273 393  99 403 476 382 166
 549 430 411 469 305  73 300  52  94  69 417 480  19 523 493 443 152  88 391 502 171 405 423 402 164
 413   3 365   2 281  28 285 280  78 487 562 468 433 301 501 488 238 358 387 390  14 414 380 441 228
 398 431 410 437 340 425  77 180  29 375 521 396  44 447 499 516 161 192   8 494  84 453 412 450  46
 495 181 554 474 416 243 120 102 432 213 438  98  97 546 507 472  53 227 439 162  62 486 422 157 429
 263 128 369  45  56  20  23 119  63 121 529 509 534 481 428 591 145 463 454 496 572 467 557  13 379
 567 348 525  12 541 165  74 104  75  65 484   1 500 564 568 427  18 444 461 470 142  34 426 569 241
 483 451 531 457 138  43  90  59  32  89 511  64 556 537 492 479  48 298 527  11 211 519 576 491 132
 533 551 482 548 148 135 136  61 133 153 559 489 242 506   4 610 127 513 571  57 520  91   5 579  72
  17 575 518 261 503 574 151 465  26  30 602   7 150 573 536 608 117 538 593  68 566  92 239  10   6

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.25586e+06us (= 3255.86ms, 3.25586s)
Wall-clock time (full program): 3.30521e+06us (= 3305.21ms, 3.30521s)
Satisfaction error: 0
Number of search iterations: 807
Number of local moves: 547 (including on plateau: 234)
Number of local minimum: 32 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 253 568 268  80 202   4 117  73  30  55 354  25 499 542 597 498 111 382 165 595 160 565 600 598 484
 592 618  18  45 571 578  54 497 138 311 120 102  11 460 159 586 472  91  84 188 601 557  98 555 319
 553 501 447  51 153 573 101  39 548 543 421 534 431  33 489 127  78 227 285 562 262 622  20 121 104
 449 536   5 236 390  56 418 317 129 142 544  95 529 590   6  35 593 566 539 362 288  37 274 574 115
  38  23 224  29   8 580 567  92 448 427 385 547 364  79 512 417 322 445 467 464 294 167 582 301  43
 275 437 323 503 482 139  86 315 477  27 312  70 339 528 572 389 221 527  36  16 365 459 444 474   9
 488 168 123 490 345 358 176 576 277 193 369 475 373 210  77 493 281 238  83 326 347 479 203 378 299
 195 217 234 409 491 439 256 496 404 132 305 246  89 254 113 419 119 589 486 414 182  53 570 375 338
 436 309 155 509 426 473 140 180 125 103 411 433 231 425 526 492  13 397 267 370 189 415 192 549  59
 400 478 298 471  24 610 381 310 353 178 344 531 244 428 407  46 105 525 552 174 395 242  15 272  42
  52 366 330 424 401 237 201 463 313 363 264 396 336 399  47  75 391 213 335 316 412 398 341 538 214
 410 342 609 259 276 156 456 300 284 386 374 320 510 229 328 388 343 279 413  34 468 211  88 302  60
 408 261  44  97 569 371 318 271 466 173 235  96 423 420 392 349 278 239 296 273 504 402 403 247 290
 350 222  58 263 283 351 561 128  90 458 507  21 197 329 502 295 333 455 540 289 208 230 508 291 356
 560 293 517  87 451 314 530 194 321 282 521 171 452 220   3 181 240 355 233 306 212 146 443 206 587
 187 170 603 367 177 185 260 450 514 384 190 480 151 379 352 324 199 357 297 186 135 332   7 588 551
 216 232 485  12 541 359 248 251 108 255  17 613 616 164 432 149 583 520 225 286 620 114   1 340 438
  81 150 361 476 241 228 394 515 223 554 147 506 287 481 280 377 196 581 154 270 243  94 461  85 440
 575 110 453 334 131 258 518 205 249 209 266 252 130 405 109 469 558   2 325 607 393  74 537 162 494
 215 172 564 625 430 158 454 137 624 608  64 179 470 107 623 163 483 133 429 166 292  67  68  72 522
  63  66 191 219 577 550  41 465 605 614 183 148  22 144 141  49 303 145 599 500 602 462 559  14 563
 308 619 327 606  10 112 556 435 585 169 505 591 100  28 406 126 269  71 106 161 376 533 118 124 584
  48  93 360 200 204 380 516 422 307 441 457 245 368 523  50 511 495 372 442 265  62 535 346  61 122
  69 617 304 546  26 337 250  82  32 207 143 615  57  65 545 348 621  76 331 579 184 532 513 152 594
 604 257 524 487 416  19 226 612 175 611 387 134 596 383 157 519 218  40 136 116  31  99 434 446 198

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.73634e+06us (= 9736.34ms, 9.73634s)
Wall-clock time (full program): 9.78617e+06us (= 9786.17ms, 9.78617s)
Satisfaction error: 0
Number of search iterations: 3528
Number of local moves: 1269 (including on plateau: 548)
Number of local minimum: 300 (including on plateau: 57)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 244 399 612 158 621 591  90  55 442  32 617  87  34 104 102 589 499 166 618  69 453 485  81  64 613
 581 622 535  38  52 427  27  39 502  44 398 433  75  18 411 544  29  48 609 586 553  20  91 563 580
 559 583 623 575  62 537  16 279 194 118 486 571 154  23  43  89 134  86 465  36 565 616 569  47 395
 506 555 510 608  60 423 299  56 602 174 549 130 195  85 109 439 203 454  54 207 542 240 172 139 514
 600 528 449 107 546 487 401 520 615 144 513  61  94 164 184 497 115 211 252 123 106 523  77 120 388
 490 149 577 374  58 324 592 576 176 135 573 190  99 314 168 593 229 137  68 595 531 210  57 148 462
 536 183 437  65 201 495 611  74 283 173 614 587 131 257 206 624 126 199 605 169 127 480  95 132 415
 175 189 242 610 328 362 518 305 266 155 572 435 235  35 181 607 162 599 212 163 150 570 182 140 432
 222 316 186 147 142 464 366 567 478 122 306 178 330 198 272 146 584 223 325 351 256 590 326 294 436
 245 187 177 232 103 551 238 428 357 606 220 249 331 332 310 625 185 237 258 239 213 440 179 358 525
 311 217 359 315 620 364 343 376 271 259 264 209 262 250 208 254 389 390 426 261 276 353 290 193 365
 412 161 304 296 265 472 260 474 288 352 241 469  82 329 347 370 234 334 224 524 301 392 180 298 216
 380 341 191 309 318 387 476 371 285 363 308 289 349 246 136 157 297 277 219 348 382 337 406 251 402
 200 269 404 313 379 228 225 227 414 400 243 368 403  17 386 491 372 342 321 409 231 255 280 302 346
 253 396 287 361 312 320  63 159 270 338 344 421 434 455   4 323 419 286 488 354 504 267 281 445  41
 417 303 293  96 278 226 125 263 275  28 284 394 295 327 322 333 446 317 383 470 360 425 441 405 319
 350 529 431 340 336 128 377 188 381 511 105 448 429 335 489  33   2 540  22 307  21 367 512 430 214
  92 557 375 481 373 160 385 393 113 458 339 369 345 420 391 153 291  49 452 384  42 141 456 461 145
 475  76  53 498 143 192   1 482 471 408 117  30 424 457 507 451 438 473   6 300 500 248 467 508 100
  80 397  70 477 418  79 292 129 151 530  93 447 503 601 496  50 547  66 548   8 416 247 479 505 196
  73 463 501  88  12  13 493 114 450 552 165 410 422 527 459  97 539 543 538 444   9  11 236 556 110
  37 112  67   7 578 204 378 101 356 532 133 268 509 604 597  45 492 111 561 554 517   3 519 515  25
 460 121  40 541 466  26 545 468  71 230 124 274 566 598 526  59 534 585  72 218  98 202 522 282 197
 108 167  24 215 560 355 483 562  31 579  46  14 521 533 413  51 152 564  84 568 516 170 443 550 116
  19   5  78 574 594  10 221 619  83 582 171 494 603 596 558 205 407 588  15 138 156 233 484 119 273

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00443e+07us (= 10044.3ms, 10.0443s)
Satisfaction error: 1
Number of search iterations: 4190
Number of local moves: 1515 (including on plateau: 716)
Number of local minimum: 399 (including on plateau: 87)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 1: 613 563 569 240 106 595 605 599 584 625 208 329 349 368 344 28 381 393 1 79 12 7 40 167 19 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  71 484 601 595  90 592 183 159 131 598  23  19  91 570 161 532  10  22 591 505 589  38 559  14 597
 462  41 556 498 575 588 563  33  75 566 170  20 175  27   3 432 546 187 492 127 426  62   9 590 602
 497 120  25 581 541 561 223   7  54 565  11 534   5 531 148 494 480 212 137 544 313  77  98 495 572
 485 415  29  15 573 446 270 468  56 574 135  50   4 569 217 614 465  46 526 479 444 250 536  16 143
  88 472 179 510  58 562 394 481  18 538 164  70 540 443  12 483 533  92 455 474  40 195 477  76 471
  13 539 224 512 457  17 297 528 309 501  61 527  43 529 221 490 152  86 453  94 124 219 517 398 514
 126 456 237 520 412 496  24 431  69 509 171 382 409 433  26 504 435 238  31 454  35  97 427 430 473
 488 491 189 343 436 441 424  30  59 360 112 395 487 439   1 458 190  95 516 521 413 167 440 203 128
 500 364 142 354 493 467  21 333 191 386 408 378 447 549 470 357  66 318 420 293 153 139 410  51 115
 406 434  82 371 459 437   2 352 198 405 282 416 396 215 160 350 355 173 337 464 275 185 307 365 399
 370 373 196 209 311 345 397 445 239 332 423 287 372 376 285 519 463 211 262 327 247 257 155 418   6
 165 380 322 339 316 383 320 388 295 323 113 387 258 321 344 450 460   8 267 351 349 216 341 419 310
 256 503 324 271 235 253 368 391 319 280 306 304 305 303 263 400 342 288 390 326 359 272 229 248 290
 379 317 331 377 220 227 363 182 417 273 177 586 422 266 241 308 334 274 302 269 469 299 244 348 200
 281 312 208 268 265 163 502 243 291 286 231 260 329 298 621 251 226 604 328 254 407 384 236 240 336
 385 123 482 294 154 233 537 234 577 283 277 166 338 279 188 213 367 401 242 330 442 618 276 158 228
 168 122 393 255 259 230 542 476 616 134 284 214 252 381 535 207 611 392 232 174 278 369 150 358 193
 199 552 545  96 264 347 205 624 246 301 594 162 172 296 558 176 525 340 114 180 261 402 315 202 149
 596 107 567  83 222 314 620 181 414  84 550 197 145 194 522 146 157 389 564 218 608 356 156 210 225
 204  85 478 101 169 103 508 117 551 130 530 585 547 110 374  64 119 603 111 613 186 506 289 609 133
 523  81 428 178 184 100 335  55 582  65 605 612 579  72 507 102 147 584 121  89 548 554  99 524 151
 489  73 511 346 116  44 518 619 452 144 599  60  53 105 576  80 245 606  45 109  32 593 461 366 583
  34 607 362  67 138  37  48 568 580  52 555 543 571 292 451  68 361 486  63 118 106 557 600 425 136
 192 300  39 513 429  28 125 438 499  57 421 578 560 140 475  78 104 553 201 108 206 403 141 615 622
 448  74 375 129 449 411  36  42 587  79 623  93 325  87 466  49 132 617 625 404 515 610 353  47 249

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00507e+07us (= 10050.7ms, 10.0507s)
Satisfaction error: 2
Number of search iterations: 4198
Number of local moves: 1211 (including on plateau: 469)
Number of local minimum: 374 (including on plateau: 71)
Number of resets: 3
Number of restarts: 0

Problem in row 8: 488 491 189 343 436 441 424 30 59 360 112 395 487 439 1 458 190 95 516 521 413 167 440 203 128 => the sum is 7826 rather than 7825
Problem in row 15: 281 312 208 268 265 163 502 243 291 286 231 260 329 298 621 251 226 604 328 254 407 384 236 240 336 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 399  83 125  62  85 617 234 329 547 615 577  22  23  64  35 499 620 618 588 516 167 545  19 150 286
 521 587  34  69  13 140 485 510 600 129 265  26 166  16 624 130  32 601 606 528  65  57 511 518 592
 551 103 571 605  88 599 530  50  67 334 595  74  89  31 117 131  37 591 482 590  12 447 622  14 495
 619 157  25 614 183 281 430 105 564 247 534  87 136  45  86 268 101 437 204 476 422 610 526  55 613
 473 100 572 144  51 560 561 159 540 262 160  82 175 567  99  17  40 527 180 315 616 400 589 121 515
 462 443  28  94  76 544 621 415 114 282 383 158 171 237 217 228  71  98 432 549 164 454 487 573 524
 559 566 184 556  72 149 195 172 205 512 602 218 119 258 325 575  41 108 625 202  46 596 372  78 490
 548 138 206 231 322 141 425 623 199 185 569 120 508 345 148 189  66 520 449 176 226 207 519 298 467
 533 126 151 227 438 562 155 309 197 181 154 505 142 163 303 146 239 349 371 314 502 507 611 147 493
 410 321 243 123 335  96 179 402 357 597 168 552 350 132 304 165 404 109 398 209 224 232 604 558 353
 421 214 491 319 361 215 216 263 290 392 609 156 248 360 368 291 584 143 221 233 225 194 192 340 479
 287 348 254 264 453 293 310 302 201 324 283 299 256 450 424 241 417 186 536 188 236 390 312 246 326
 333 289 305 288 208 568 464 169 339 267 139 408 279 269 285 374 354 389 219 355 210 272 352 255 435
 203 362 250 145 384 385 472 301 198 308 323 200 403 238 381 296 378 414 223 386 259 401 327 395 193
 212 318 426 347 373 297 313 441 317  59 235 358 514 393 182 276 244 396 190 416 343 278 253 367 277
 196 346 409 365 363 470 240 444 260 124 538 451 397 295 273   5 307 380 379 477 266  30 102 497 211
 245 300 419 311 341 500  56  42 222 455 135 270 351 468 427 439 252 475 229 388 332 359 191 405 213
  70 328 406 284 581 469  79   6 481  38 541 387 498 382 532 446 344 275 420   1 423 294  93 394  53
 107 434 492 442 483 338   8 257 471 458  52 375 509 376 582 391 411 220 104  11 496  24 173 331 280
  61 413 412 465 466 116 106 436 377 440 330 407   3 118 504 486 585 501 170  90 554 316  95 370   4
 122 513 429 428  39  10 115 336 489 503  80 433 522 457 445 480 578 161 113 478 292 134  63 356 249
  75 553 112 261 607 128 133 337  91 488 494 474 366 523   2 463 517  92  49 174 542 535 306 418  84
  97 431 251 529 603  36 586 364 460  15  21 608 461 574 506 565  68  44 456 448  60  43   9 557  33
  47 242 484  73 531 230 342 594  77 583  18 612 563 525  58 537 580 137  29 178 593  48 320 271 153
 274 110 546 579 369  81 570 459 162  27  20 543 576 539 598 187 555  54 152 127 550 452 177 111   7

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00501e+07us (= 10050.1ms, 10.0501s)
Satisfaction error: 2
Number of search iterations: 4415
Number of local moves: 1342 (including on plateau: 588)
Number of local minimum: 362 (including on plateau: 63)
Number of resets: 3
Number of restarts: 0

Problem in row 12: 287 348 254 264 453 293 310 302 201 324 283 299 256 450 424 241 417 186 536 188 236 390 312 246 326 => the sum is 7826 rather than 7825
Problem in row 22: 75 553 112 261 607 128 133 337 91 488 494 474 366 523 2 463 517 92 49 174 542 535 306 418 84 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 224 106 125 554 542 498 397 402 589 561 525   8 535  34 530  27 232 466  38  12 611 172  58 502  77
  99 198 114  32 571 167 445 316 518  42 528 582 117  24 575 284 581 291 482  85 599 119 479  28 549
 213  89 153 236  71 474 225 507 551  20 547 578 516 177 500 492 399 457  56 303 609  81  15  66 490
  54 120  16  13 543  48 235 487 258 151 583 520 471 111 533 480 568 436 522   7 570   6 538 133 422
 115 136 102 126 264  64  18 585 437 251 580 406 484 511 481 540 544 497 203 586  17  79 278 491  30
 219  96 132  67 254   4 433 447 531 309 555 459 552  93 607 496 128 506 418  26 320 175  65 465 468
  36  45 354  33 164 410  14 464 413 387 485 241 548  21 403 382 359 523  11 467 489  78 501 483 514
 215 166 417  37 334 524 365  61 444 469 171 508 416 186 494 401 432  31 390 333 515  80 318  95 423
 259 182 335 388 330 314 446 347  35 405 495 430 546   1 477 412 144 374 376 245 384   2 415 434  50
 435   9 104 456   3 348  87 453 307 499 332 381 451 449 340  22  43 380 420 366 378 421 345 370 426
  47 383 305 394 188 448 300 315 470 541 407 427 386 317 297 282 222 364 290 385  10 363   5 357 322
 337 206 327 262  23 339 185 389  40 438 463 373 302 324 393 411 408 367 358 230 398 271 343 368 270
 304 419 280 355 346 428 325 276 296 321 184 375 256 328 306 349 572 179 272 452 192 351 287 226 146
 265 338 239 342 443 331 486 266 360 289 176 587 391 379 269 100 409 195 208 392 237 356 253 221 293
 527 250 313 323 191 107 606 310 301 372 238 207 292 308 246 395 350 588 573 183 220 248 281 312  84
 353 369 181 130 539 336 576 286 326 620 319 279 288 565 212 553 122 234 194 209 127 361 242 173 231
 298 616 352 362 260 295 517 247 603 180 299 227 169 431 294 275 612 244 211 170 109 513 202 143 196
 441 329 493 593 440 240 201 597 214 160 228 189  97 439  57 255 155 566 168 400  49 283 608 458 165
 460 621 311 154 461 273 454 110  90  92 233 268 210 404 252 156 193 277 529 204 159 521 257 574 562
 536 604 556 569 174 596 475  72 178 129 124 123 157 537  68 559 261 113 147 478 150 550 229 190 249
 442 510 591 560 618 116 121 424 199 274 112  55 158 532 141 263 197 135 545 149 267 557  94 148 617
 512 598 472 624 584 142 161 134 509  63  51  41 162 341 223 108 217 344 602 504 200 519 534  62 118
 473 610 615 526 163 103 503  70  44 601  74 138 131 505  39 105  82  60 579 613  52 558 476 619  86
 371 429 450  75 243 595  98 187  29  46  91 218  53 592  69 377 455  59 145 564 600 594 577 285 623
 590 396 488 614  76 625 152  73  83 605  25 205 137 216  19 101 140 139  88 462 563 567 425 622 414

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00508e+07us (= 10050.8ms, 10.0508s)
Satisfaction error: 2
Number of search iterations: 3653
Number of local moves: 1433 (including on plateau: 685)
Number of local minimum: 289 (including on plateau: 83)
Number of resets: 2
Number of restarts: 0

Problem in row 9: 259 182 335 388 330 314 446 347 35 405 495 430 546 1 477 412 144 374 376 245 384 2 415 434 50 => the sum is 7826 rather than 7825
Problem in row 20: 536 604 556 569 174 596 475 72 178 129 124 123 157 537 68 559 261 113 147 478 150 550 229 190 249 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  28  41 235 354 152 549 129  38 418 607 322 467 610 566 581 256   9 242 555 281  82 576 155 253 319
  22  48 535  53  40 604  74 189  77 556  34 479 584 572 494 461 502 452 166 147 362 216 624  19 515
 568 562   1  20  21 521 476 529 298 106 500 490 596 595 176   2 579   4 329  67 142 564  16 210 453
 482 156 571  39 201 570 586 541 196 428 133 471 527 513 325  42 501 144 503  72 236  23  17 488  60
  15 446  92 178   6 561 517 287 403 199 225 411 484 450 131 130 590 140 552 111 271 473 167 472 514
 231 593 481  89 530 597 440 569 388 477  33 157  32 394  18  61 498 248 583 237 364  10 164 495 136
 382 540 491 426 510 245  11 509 383 492 398 574 323 285  93 213 282  25 336 406 100 250  59  12 480
 466  31 192 309 186 496 417 605  52 347 538 447 375 445  37 497 560 122 150 374 158 174 361 422  64
 373 470 413 378 263  13 547 464 197 400 414 468 200 451  94 563  36 204 343 304  96 195  57 408 474
 371 415 125 381 182 372 455  78 454 355 103 124 377 342 116 360 288 565 379 585  84 392 326 184 412
 289 448 421 578 115 318 420 462 405 346 341 357 350 305  47 345  29 113 389 324 246  99  97 404 577
 279  66 401 315 301 395 380  43 293 410 316 531 367 286 344 366 312 396 265 297 359 339 310 126 328
 206 351 303 241 391 191 269 376 554 348 370 435 353 274 368 419 255 439 188  46 356 267 321 299 205
 331 504 214 340 437 386 239 363 505 284 266 229 528 145 443 183  88  26 546 475 409 226 290  98 270
 337 365 275 487 438 109 431 327 533 249 240 252 230 291 320 384 247 171 358 107 463 295 444 260 212
 313 551  95 194 407 258 332 278 283 524 620 257 333 222 168 573 149  45 307 457 489 221 314 292 143
  91 118 170 427 436 154 317 128 600 511 220 308 251 219 238 276 349 506 134 424 485 543 280 338 302
 161 208 385 272 449 233 232 619  65 534 198 387 262 273 434 557 244 459   5 175 137 606 548 259 123
 243 622 138 432 207 187 612 228 203  56 148 114 162 153 603 227  71 613 618 525 209 102 592 614 146
 539 120 580 458 486 615  50 165 369 139 163 202 185 181 526 268 141 518  54 542 277 334 591 218 104
 499  55 234 601 478 121   3  69 177  24 522 460  51 211 559 180 399 179 558 159 537 519 516 602 112
 465 190  90 611 390  81 169 623 550 105 442  14 423  44 545 173 508 587  58 553 135   8 132 536 393
 294 469 352 264 483  49 101  63 119 223 520  76 110 441 335 523  62 430 306  83 621 311 617 429 544
 616 296 456 261 300  73  30 193  86  70 151   7  85  80 433 512 532 599  75 507 625 589 425 215 609
 224 160 575 117 416 127 588  79 217  35 608 108  27  87 397 254 594 598  68 567 582 493 402 172 330

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.02031e+06us (= 7020.31ms, 7.02031s)
Wall-clock time (full program): 7.07015e+06us (= 7070.15ms, 7.07015s)
Satisfaction error: 0
Number of search iterations: 2394
Number of local moves: 813 (including on plateau: 296)
Number of local minimum: 184 (including on plateau: 30)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 485 486  89  63 527 515  69  25  97 129  40 586  46  37 213  61 572 601 582 530 489 389 438 135 621
 440 611  84 110 462 610 569  58 452 144  41 534  30 172  48  64 492 570 173 500 497 117 151 624 272
 446 536 333 475  92 269 575  88 107 120 169 518 394  70  99  66 103 155 554 604 615 609 116 100 612
 192 502  36 595 608 398  43  51 532 276  79 477  47 131 542 205 359 165 112 445 484 619 139 190 598
 584 511 178 157 264 607 119 115 451 146  94 589 250  38 459 141 220 476 559 411 526 123  98 236 473
 185 568  65 602  83 344 370  62 193 143 159 447  49 305 561  95 562 625 183 620 539 133 182 132 618
 479 520 149 126  80 487 522 195 202 189 154 574 106 187 548 179 546 252 622 449 298 142  85 118 616
 617 372 207 217 371 512 162 318 253 176 381 248  29 167 461 235 457 268 292 285 509 208 243 277 560
 237 469 299 148 336 322 254 244 271 240 145 382 307 472 592 259 283 170 265 424 481 225 491 230 279
 434 460 623  73 191 200  77 197 125 347 260 228 275 121 597 367 364 206 415 334 376 316 549 406 284
 222 328 274 480 362 319 212 262 297 337 543 209 111 233 408 331 296 249 175 358 326 256 419 352 466
 378 311 310 373 422 216 174 188 273 356 229 122 309 291 280 287 263 366 603 375 294 383 321 324 377
 198 346 470 282 458 247 300 391 227 329 186 221 385 380 177 431 194 295 290 403 293 302 306 313 401
 360 245 203 437 349 304 152 374 420 323 261 340 421 330 465 270 357 335  31 341 288 258 368 281 312
 410  52 397 317 320 315 363 301 354 215 184 339 430 338 425 361 303 231 379 353 325 308 443 342  20
 393 351 402 514 503 416 399 350 257  60 355 242 289 444  17   4 388 412 348  53 427 429 251 156 365
 455 239 114 498 409 105 404 407 436 214 442 332 400 396 127 454  82 529 211 255  39 453 384 405  35
 390 180 426 314 483 517 113 456 164 432 417  42 544 387 441 160   2 140 587  27  32 474 501 580  16
 343  86 556 218 439  45  28 594 579 386 567  54 226 550 204 547 478 124 234 130  71 414 428 450  74
  91 219 433 482  18 166 392 505 467 496 508  81 563 528  87 495 464 138 201 266  21 423 134 494 153
 108  19 577 513  26 566 238 525  14 535 553 232 551 519 223 538 168  22 557  33 158 369 558  13 210
 196  57 413  55   5  90 576 533 136 571 395 573 468 605 128 541 181 590   6 137 327  67 552 545  78
  68  23  34 506 499  50 578 471 418 585 516 147 493 606 490 540   7 593   1  96  76 448  93 463  24
 102 278 565 267 507 101 599 591 596 521 583 109 488 510   9 613 161  72  10 246 163  15  44 600  75
  12  56 588   3  11 104 537 524 504 555 564 199 614   8 224 581 523 241 435 150 171 345 531  59 286

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.83864e+06us (= 3838.64ms, 3.83864s)
Wall-clock time (full program): 3.88748e+06us (= 3887.48ms, 3.88748s)
Satisfaction error: 0
Number of search iterations: 1037
Number of local moves: 660 (including on plateau: 205)
Number of local minimum: 45 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 541  72 600 589 552 505  47 625 157  37 452  39  59  20  75  87  30 358 118 553  60 520 497 614 618
 162 596 527 509 442 460 623 602  90  17  46  25  38  84  45 588  22  64 562 513 560 579 115 515  41
 603  77 550 428  69 420 617 114  91 123  93  83 463  49  61 558 109 112 490 595 510 542 532 407 129
 498  74 568 385  85 616 622 449 124 208  73 139 604 620 122 111 126 175  94 440 609 225  63 612 183
 539 100 521 431 582 439 574 393  98  44 538 166 154  95 146 624 303 176 103 464 549 147  48 563  28
 606 131 598 524 557 371 613 458  35 125 611  32 427 170 165 121 142 189 485 397 132  92 145 555 144
 403 621 447 581 181 512 155 105 200 108 536 276 411  65 164  24 184 158 516 493 228 117 619 594 127
 566 160 476 495 180 577 212 444 216 238 194 205 569 151 191 152 260 149 586 483 192 136 179 610 204
 215 159 456 573 187 233 190 178 294 220 445 217 245 252 236 540 357 597 210 322 275 580 301 355 188
  96 287 469 592 234 605 226  99 253 197 249 171 270 305 219 293 384 247 491 438 615 223 202 488 172
 282 235 499 193 246 429 207 243 224 185 283 239 163 242 213 486 195 241 471 391 297 218 570 526 547
 364 387 281 143 300 274 264 267 290 523 271 324 338 254 379 257 140 203 244 441 404 446 291 410 330
 295 231 381 316 382 269 285 327 339 398 354 443 380 461 320 256 240 343 373 227 279 304 317 119 186
 258 314 120 289 351 332 298 273 263 386 265 315 347 328 292 306 366 250 399 325 334 405 307 280 422
 296 342 196 337 299  12 531 313 406 277 319 353 278 372 321 361 395 336 266 261 323 377 310  78 466
 367 426 359 288 365 221 308  36 378 262 448 454  82 348 326 344 419 533  57 198 412 340 453 153 248
 201 425 174  66 368 259 363  79 333 519 522 383 134 517 472 376 309 360 107 229 341 251 455 148 434
  11 528   2 312 467 222 474 408 504 390 421 462 211 375 506 401 392  13 335  50 374 128 423  71 345
 475 394   9 214 477  27 329  89 500 492 388 432 138 459 349 402 457 424 362 206  55 369 436 284  58
 161 583  29 106 356 311  80 232 473 478  18 543 318  26 518 417 370 346 272 352 484 400 409  62 481
 503 546 150 168  16 101 414 545 302 389  81 601 156 465 593  19 559 507 116 182  15 416 237 230 514
 133 437 135   4 534  54 102 451 565 435 130 590 480 556 525 413 433 529  52  70  88   1 530   6 572
  76  21  53 199 554 141 173 489 544 576  23 482 494 564 511 177 450 396 418  68 537  86 255   3 535
 167 470  56  40   8 104  51 575 585 607 487 350 479 496 468  10 599 571 430  14  42 415  97 137 567
   7 209 169  43  33 331  67  31 561 591 578 501 587 551 608 502 584 548 268 113 110 508  34   5 286

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.24617e+06us (= 3246.17ms, 3.24617s)
Wall-clock time (full program): 3.29578e+06us (= 3295.78ms, 3.29578s)
Satisfaction error: 0
Number of search iterations: 743
Number of local moves: 584 (including on plateau: 139)
Number of local minimum: 24 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
   7 268 514 594 505 273  13  36  18  10 530 593 499  41 492 115   4 384 379 540 252 270 598 577 313
 541 288 497 280 551 256 269 501   8 118 585  16  54 504 533 100 612  58 323 332 277 469 544  52  57
  75  55 235 567 542 128 471 534 133   1 553 536 206 603 609  59  20 424 459 403 253 207  15 300 437
 605  83 436  63 564 344 157 335 500 106 329 475 472 515 460  64 228 517 284 422  61   5 484 299  17
 138  80 543 404   9 216 130 524  91  43 478 548   2 526 568 113 557 462 243 560 148 402 319 547 174
  22  24 474 446  35  67 259 359 203  14 136 399 559 591 506 208 463 479 241 434 333 455 546 477  95
 432  82 390 549 550   3  37 496 444 417  38 545 325 520 468 317 131  84  21 435  32 447 454 528  81
 488  33 274 578 418  98 211  12 452 346  23 449 522 415 358 171 529  48 328 539  60 433 450 503  87
 410  97 413 371 355 303 381 374 139 111 367 312 470 401 105 412 457 276 343 493 175  56 293 342 368
 265  51 392 373 318  49 345 448 250 129 370 465 339 387 406 330 396 102 456 156 289 391 352 315 451
 490 251 338 385 353 310 204 494 394 409  89 350 377 295 458 220 301 322 159 249 298 388 525   6 160
 354  93 365  11 372 308 375 369 485 324 360 267 331 411 408 443 247 225 292 366 153 341  29 416 480
 380 363 282 177 356 574 320 423 226 242 294 236 461 258 378 278 215 221 566  77 597 222 272 234 173
 172 428 314 306 166 260 531 245 144 192 296 592 357 334 257 283 305 194 571 255 347 281 227 386 382
 364 441 262 302 340 197 400 429 453 337 145 184 420 279 336 181 348 199 600 326 230 285 271 180 316
 442 426 147 150  90 205 297 248 586 595 231 218  19 246 168 421 261 552 570 146 610 244 376 179 398
 266 582 214 254 209 604 351 238 311 185 621 393 141 213 237 291 615 198 169 219  86 290 264 599 275
 167 439 362 495 307 487 466 602  25 516 152 232 149 201 212 624 304 587 224 162 589  99 202  46 176
 182 438 233 614 137  88 509  92 464 383 210 195 178 191 223 425 188 498 508 170 563 263 186 286 601
 158 617 116 196 200 573 608 193 309 623 397 104 101 190  94 523 140 440  71 618 405 538 112  72 427
 155 511 135 189 569 430 584 321 407 502 561  28 123 240 229 590 124 183 134  65 558 596  85 117 389
 565 467 217 122  66 327 165  27 625 532 419 527  73 143  70 572 607 431  76  42 507 489  68 126 562
 581 620 125 239 576 575 473 132 518 588 107  30 555  78  96 127  53 287  74 163  45 510 616 103 554
 519 482  26 121  50 613 161  44 486 483 414  69 512  79 114 513 109 535 151 622 476  34 142 579 491
  47 606 521  39 187 537 108 349 154 619 120  62 580 164  40 445 611 119 583  31 481 110 395 556 361

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00028e+07us (= 10002.8ms, 10.0028s)
Wall-clock time (full program): 1.00528e+07us (= 10052.8ms, 10.0528s)
Satisfaction error: 2
Number of search iterations: 3652
Number of local moves: 1201 (including on plateau: 521)
Number of local minimum: 325 (including on plateau: 66)
Number of resets: 2
Number of restarts: 0

Problem in row 7: 432 82 390 549 550 3 37 496 444 417 38 545 325 520 468 317 131 84 21 435 32 447 454 528 81 => the sum is 7826 rather than 7825
Problem in row 9: 410 97 413 371 355 303 381 374 139 111 367 312 470 401 105 412 457 276 343 493 175 56 293 342 368 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 598  80 267  71 621 106 135 519  88 377 103 547 100  65  31 160 483 534 591  47 601 624 562  54 461
 412 619 599 556 521  29 145  52  45 515 102 414  58  77 574  20 551 542  79  86 193  84 532 617 403
 314 524 615 605 422  32 122 475 197 525 167 609 162  62  25  49 548 625 608 144 128 111 191 482  83
 405 187 203 329 614 163 113 555  40 481  97 564  36 220  15 151 606 561 610  26  23 611 567 143 505
 506 181 417 159  27 225 222 129  87 604 130 568 472 200 531  96 595 582 133  93 580 101 226 594 367
 523 165 173 198 105 211 223 597 185 587 140 612 522  81 526  13 453 416 463 138 276 121 425 239 433
 473 178 374 228 224 266 620 565 270 600 108 583 142 161 258 131 451 168 229 119 146 196 581 245 509
 590 209 338 249 132 175  75 596  57 623 300  99  90 110 549 303 455 304 501 156 231 127 430 618 508
 262 139 557 164 327 253 448 397 514 269 170 602 184 149 183 179 494 613 107 208 227 174 356 278 571
 194 291 558 246 201 277 204 150 238 213 234 190 410 337 379 280 237 392 202 339 221 323 527 622 560
 359 284 530 407 274 293 230 371 260 279 271 364 348  28 436 445 214 419 305 212 263 243 218 254 518
 298 317 343 147 306 375 311 152 325 310 189 282 351 385 206 434 390 593 309 308 340 259 215 285 395
 450 232 236 273 297 210 389 251 471 378 261 290 287 320 347 283 335 361 418 502 235 182 248 268 301
 362 423  82 438 216 219 384 358 402 148 442  30 252 296 334 346 360 342 373 400 330 435 233 313 307
 281 341 154 116 354 292 302 386 355 424 286 474 350 370 188 369 336 240 366 404 388 420 166 415  48
  73 294 272 381 443 344 275 318 312  38 319 431 401 413 504 391 365 199 324 486 449 326   5 440  22
 466 333 134   9 353 376 177 406 576 328 393 427 396 428 411 485 289  59 368 357 363 452  56  46 137
 186 264   7 372 540 331 544 349 447  85 394 158 247 577 387 441  42 155 242 459 408 457 153 462 118
 112 529 172 322 439 399  21  34 468 470 429 169 467 507 464 477 180  91 616 345 487  12 295 195 125
  94 489 316 398 421 537 495 426 409 256 573 141 496 446 444 352 176 288  72 332  16 321  64   8 255
 465 479 109 550 241 539 458 114 543  69 533  41 510 484  92 476  70  53 250 516   3 460 512  14 244
  67  18 478 499  50 454 511  17 497  35 569  39 382 500 493 205  33  44 456 437 492 217 517 383 432
 126 607 157 520  60 603 299   6 480  78 488  19 585 528 192 588   1 104 124 592 491 490 115 257 315
 207  76 469 545 586 570 563  89 498  10 575  55  24 503 120 579  63  66  11 584 380 541 536   4 171
   2 566 265  43  51 546 559 513  61 123 552 117 553 578 136 572  98  74  68 535 554 538  95 589  37

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.14739e+06us (= 3147.39ms, 3.14739s)
Wall-clock time (full program): 3.19622e+06us (= 3196.22ms, 3.19622s)
Satisfaction error: 0
Number of search iterations: 948
Number of local moves: 473 (including on plateau: 175)
Number of local minimum: 64 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 522 484 574 570 541 569 549 241 389  17 214  50 266 550 174 303 577 133 426 200 164  13  33 252  14
 470 442  62 194 293 402  32 144 211 589  56 558  49 529  22 565 171 289 592  72 500 518  84 381 600
  25 277 512 568 153 467  80 159 572 537 476  29  10 202  48 533 555 145 542 474  92 538 347  67 417
 228 432  53 245  93 556  23  18  61 135 554 528 229 517   1 177 463 199 488 571 237 497 494 478 548
 446 524 110 604  34 510 388 221  54 465 580 503  16 507 464  86 492  95 480  15   3 516 196  39 477
 496 391  82 460 125   8 197 367 116 152 456 247 253 616 413 472 423 623  26 405  27 431 136 434 469
  41 444 509 504 378 526   5 122 119 251  11 453 105 387 525  19 386 582 551 493 127 430 325   9 523
 433 561 331 352 193 227 586  21 338 545 458  12 562 466 454  24 394 112  69 489 375 369  70  28 356
 383 181 370 514  42  36 263 603 438 328 398 343 327 372 314 515 608 272 143 355  30 471 183 131 205
 220 306 297 511 403 399 256 316 149 255 265 358 368 447 354 395 336 373 109 379 232 283  43 371 400
 560 176 505 483 380 282 384 280 419 298   4 286 238 415 351 166 170 408 100 416 326 420 322 365  71
 364 279 120 427 335 299 342 313 374 392 219 349 396 284 317 377 539 390 108 123 226 281 304 346 321
 333 301 302 441 285 291 311 362 262 324 437 260 296 339 334 269 366 353 305 350 329 178 233 179 385
 158 318 154 250 401 564 348 610 546 208 187 249 186 206 212 344 357 363 168 246 443 240 341 439 287
 242 156 278 557  44 482 411 243 254 481 147 224 323  58 421 180 236 258 288 581 448 468 185 599 261
 320 190 573 169 337 225 103 527 151 587 268 213 376 257 204 602 134 162 495 544 422 167 300 191 308
 210 290 137  60 239 126 486 605 274 406 235 292 521 222 294 163 436 625 425 611 414 150 124 264 216
  51 491 332 273 591 209 485 457 506 309 218 121 508 188 104 223  63 615 234 360 513 330 345 160 139
 101 319 173 114 563 117 520 531 459 475  20 424 175 248 184 259 231 195 596 113  31 198 606 566 607
 215 479 189 142 530 148 595 519 146 244 429 461 128 107 276  98 138 620 307 499 407 617 440  45  46
 182 382 536  73  96 140   2 111 553 576  91 217 547 141 567 579 172 614 359 106 270 155 598 597 161
  76  57 410  85 590 450   6 295 487  55 618 601 593 418 501  35  89  99 275 157 502 129 575 455 267
 552  97 203  66 435 132 559  83 207   7 621 462 449  40 578 409  90 130 340 165 624  59 397 532 588
 584 201 428  88 473 583 490  65 622  74 412 192 310 230 619 534  38 102  87  37 543  52 535 445  81
 613  47 585  75 271  77 404 612 118 115 451 393 594  79  94 498 361  68 312  64 540 315 609 452  78

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00025e+07us (= 10002.5ms, 10.0025s)
Wall-clock time (full program): 1.0051e+07us (= 10051ms, 10.051s)
Satisfaction error: 1
Number of search iterations: 3861
Number of local moves: 1405 (including on plateau: 645)
Number of local minimum: 359 (including on plateau: 83)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 1: 14 381 347 497 3 405 551 112 608 395 351 284 296 249 147 587 274 457 520 148 96 85 203 201 613 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 619 330 144  84  80 530  18  68  57 500  34 543 531 609  37 483  46 549 579  22  63  58 624 623 594
 428 621 479 128 462 166 526 584  55 517  96   2 432 532 133 499  15 492 429  35 160 422  53  19 540
 336 266 237 535 396 525 593 100  70 546  30  75 613 522  95 148 140 616  86 587  29  27 617  67 569
 512 213 405 604  66 605 403  83  73 496 352  71  39 563 168 545  87 541 536 154 217 567 193 194 138
 574 270 309 134 608 561 253 120 127 565 122 124 615 610 183 198 320 470  94 404   8 586  60 389 121
 311 132 591 146 161 566 114 598 109 539  59 112 580 620 221 259  76 491 131 560 208 581  78 343 239
 523 103 433 101 211 184 559 447 159 527 226 202 544 282 258 165 141 475 568 374 489 206  88 250 310
 145 143 327 328 175 195 111 595 618 524 557 444 435 269 147 136 185 366 425 582 332 191 238 205 152
 225  43 519 506 219 371 178 172 521 508 228 368 606 164 199 117 556  45 583 354 222 251 233 375 262
 209 181 450 408 235 227 277 261 431  20 257 151 203 529 573 410 200 397 301 386 402 349  99 331 538
 158 292 513 283 290 482 279 288 201 501 365 414 244 247 509 167 214 430 384 232 315 286 179 285 267
 321 420 338 254 614 307 303 236 224 329 268 246 611 204 182 316 231 497 308  17 446 273 426 297 157
 355 278 505 190 351 212 334 153 353 274 299 392 463 318 423 363 390 249 367 230 272 319 337 293 105
 373 291 220 142 369 313 333 223 294 335 443 421  25 106 504 378 383 104 245 437 305 287 361 516 417
 409 395 350 234 298 241 296 345 385  85 163 406 485 306 276 358 456 123 387 289 170 478 370 216 304
 436 553 150 263 415 115 459 502 599  97 196 419  69 588 341  12 391 399 248 468 339   5 300  79 382
 215 445  74 340 412 379  50 295 326 271 357 155 174 407  36 471 441 317 312 457 325 314 439 465 348
 416 380 240 460 442 510 469   3 177  91 324  38 169 218 473 440 438 110  31 362 480 372 542 376 264
 256 452  62 487  98 360 552 577 252 125 394 322 186  77 280 401 413  48  64 449 434 180 554 347 455
 381 472 622  23  47   4 448 547 255 265 515 126  93  24 503 139 275 342 494   1 400 458 424 514 453
  65 461  72 486  81  51 364 398 518 377 346 558 130  89 393 418 411 302 229 356 600 548  13 550   9
 210  14 498  28 474 135 596 493 592 129 451 589 323 189 564 260 601  54 107  26 476  21 388 555  52
  56  40  82 464 528 171  92 197 570 187 607 578  32 102 488 625 562 243 537 477 116 466  41  44 520
 119 454 156 612 242 507  42   6 575  10 533 602 162 113 344  33 572 149 188 207 590 490 597  11 511
 173 576  49 585 551 108 176 534 284   7 603 467  61 137 495 484 281  16 192 359 427  90 571 481 118

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.76995e+06us (= 7769.95ms, 7.76995s)
Wall-clock time (full program): 7.81919e+06us (= 7819.19ms, 7.81919s)
Satisfaction error: 0
Number of search iterations: 3315
Number of local moves: 1051 (including on plateau: 570)
Number of local minimum: 284 (including on plateau: 69)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  27 300  80  47 428   5  93 516 586 226 608 291 544 522 599 476 191  96  94 376   6 393 117 580 624
 616 618  65 567 577 202  67 412  40  21 598 569 292 338 547 212 127  48 349 551 310 386  31 166 116
 247 307  29 533 556   4 222 549 548 123 602  38 462 614 524 553  30 564 102 490 208  57 320   7 136
 512  63 494 430 200 584 240 160 532  41 477 574 588 419  17 456 315 180 210 391  13   8   9 587 325
  10  42 431 511 603  68 111 425 523 105 366 121 463 157 485 573 164 452 227 507 592  49  98 581 161
  16 158 204 469 537 339  79 138 558  58 347 423 568 251 514 554 418 334 235  14  70 377 113 492 559
 219 424  69 438 561 256 253 535 444 413 489  59 446 217 473 148  35 560 216 517  87 288  92 534  52
 367 229 331 426 385 278 143  19 442 453 184 353 455 496 406 498 480  23 481  78 394  71 329 390 114
   3 289 155 415 311 318 165 500 328 209 379 465 241 128 437 451 464  62 619 493 375 421 215   1 381
 466  90 565 482 132 327 190 203 284 245 467 337 170 109 409 470 363 432 471 575  77 401 151 279 130
 380 324 486 249 503 365 445 403 348 417 351 297 330 449 150  45 407 361 137 142 242 313 262 404  15
 405 103 309 218 414 312 335 282 475 450 287 411 308 173 163 441 244 239 225 207 342 344 230 609 299
 374 120 572 448 231 306 362 396 201 198 420 255  82 352 259 268 354 364 368 382 326 468 301 321  97
 286 457 408 304  86 316 604 319 617 400 139 458 355  88 340 293 106 267 265 264 356 345 416 144 192
 272 238 350 294 275 540 341 126 156 171 236 422 358 589 179 360 389 332 280 172 243 460 303 285 454
 447  84 296 387 515 248 322 271 269 399 175 196  12 252 506 369 211 234 590 246 585  24 525 274 388
 436 472 398 270 206 298 302 314 220 513 181 495 250 378 182 183 110 168  95 435 232 501 543 273 370
 188 488  83 129 295 483 221 607 277 612  73 555  54  74 197  55 373 583 443 141 101 497 591 169 536
 223 605 261  61 266 384 521 290 189 281  81 257 474 620 154 383  36 237 427  76 263 539 601 224 372
 546 108 333 115 167 146 397 159 317 596 214 118 336 505 152 499 538  64 162 557 576 228 487  44 461
 194 552 195 147 140 478 526 527  39 131 459 187 213 258  11 254 502 615  56 178 594 323 529 124 593
 346   2 520 613 186 185 371 479 133 510 119  32 531 343 260 112 597 177 625  22 491 193 434  26 518
 622 610 508 125  75 429 563  60 205 276  34 199  51 145 283  18 530 621 149 606 595 504  33 100 484
 570 623 174 122  72 562 410  85  66 582  99 135 153 305 541 134 402 233 566  46 176 528 550 600  91
  53 519 509  25 104 392 542  50  28 395 440 578  89  43  37  20 439 579 433 359 571 107 545 611 357

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00499e+07us (= 10049.9ms, 10.0499s)
Satisfaction error: 1
Number of search iterations: 5064
Number of local moves: 1534 (including on plateau: 629)
Number of local minimum: 479 (including on plateau: 88)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 1: 624 166 320 8 592 14 216 23 464 470 150 173 82 458 236 399 220 607 521 146 140 613 508 623 53 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 412  83  40  34 346 618 546 255 127   9 110  96  13 588 617 606 429  88 581 373 623 395 489 214 133
 554 611 607 176 274 169 236 122 100 622  58 619 477  57  78 515 105 120 575 436 114 370 129 539 162
 476 407 589  35  42  60  22 108 620 532  46  55 141 132 145 550 566 268 220 592 228 516 573 506 396
 424 624  50 285 154 358 405 392 608   2 166 182  71 276 189 500  69 531 304 578  99 530  47 553 428
 567 615 151  97 438 440 190 360   3   5 353 463  52 612 320 181 164 379 549  24 502 595 194 111 460
 300 545  25 616 417 586 524  51  63 520 150  16 323 580 388 147 247 229 345 398 134 342 529 233 117
 452 443 402 118 483 167 484 104 496 287 237 354 572  66 560 600 204 187  21  33 482 459 257 155 202
 555  82 330 213  36 175 521 540 598 374 224 149 231 102 625 547 259 188 349 163 329 336 242 422 235
 548 314 563 432 205 221 212 384  48 301  14 135 157 525 613 599 271 389 442 465 321 160 338  15 153
 543 391  32 399 222 324 375 240 450 119 267 596 196 295  65 534 251 198 369 308 427 195 262 488 279
 265 364 210 605 425 252 215 441 317 261 609 159 278 146 583 352 533 410 148 332  26  62  54 495 283
  72 302 281 335 492 542 263 140 275 327 225  38  59 458 272 319 296 404 522 486 177 439 310 316 475
 434 191 552 362  53 277 173 337 219  81 494 383 576 480 217 239 325 244 218 294 376 313 171 430 386
 266 209 126 289 501 297 298 390 249 131 556 469 509 280 208 193 348 152 497 306  87 243 315 461 445
 303 371 286 185 290 344 253 462 238 456  12 421  73 125 203 400 192 284 614 282 454 457 414 312 394
 124 368 311 385  18 363 411 431 423 485 446  19 366 288 115  43 464 487 101   7 437 351 582 322 478
  91 361 170 207 527 498 339 130 223 292 378 393 365 199 380 142 508 447 226 137 103 357 610 408 334
 250  89 536 518 499 269 453   1  92 343 451 473 309  80 419  90 197 467 273 318 409 227 307 158 597
  49 331 621 564 216 356 544 523 585 355 367 569 406 201  94 106 109 372 200 418  84 183 341 136  95
 186 144 435 594 519  37 326 258 403 474 448  30 579 561  86 172 174  76 184 161 512 468 528  93 377
 299 328 455 179  17  67 305 293 587 535 139 444 347 113 449  31 565 493 128 558 264 491  75  61 602
   4  64 577  70 471  39 426 601 538 397 517 584 165 382 260 168 256 248 234 472 604   6 541  85 116
 333  44  11 603 514 503 254 510  20 206 568 415 416 507 241 270 211 490 143 537  41  29   8 381 570
 138 470  45 401 559 504  27 178 387 121 433 350 593 526 466 230 511 112 505  79 479 245  28 340  98
 180  74 420 123 107 359  23 574 156 590 557 413 551 246 232 291 571 562  77  68 513  56 481 591  10

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.40289e+06us (= 8402.89ms, 8.40289s)
Wall-clock time (full program): 8.45151e+06us (= 8451.51ms, 8.45151s)
Satisfaction error: 0
Number of search iterations: 3502
Number of local moves: 1174 (including on plateau: 576)
Number of local minimum: 272 (including on plateau: 68)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 420  59  26  90 566 586 517 483 322  22 335 576 377 206 250 571 317 610  75 164 587 357  44   9 256
  17 556  40 597 498 261 394 588 361  19  45 523 398  88  68 532  74 607 234 115 423 430 129 446 382
 253 163  76 134 349 579 559 602 165 562 340 438  48  95 204 137 168 333 215 578 564  53 608 451 151
 210 623 103 620 157 456 582 199 174  80 469 297 246 406 320 552 621 123  78 140 264 254  70 557 224
 193  77 101 616 380 267 402  58 500 148 625 535 107 306 100 619 237 622  89 105 266 533 139 584 216
 515 186  31 142 529 205 379 258 470 595 184 592 528 229 121 452 158 235 111 551 474 128  62 565 125
  65 567 499 283 472 441 104  83 358 223 116 538 484 113 466 192 112 181 594 275 497 600 143 217 202
   2  51  85 418 222 611 467 429 473 150 338 445 615 298 547  16 183  34 400 309 290 603  42 570 227
 263 214 605 173 200 177 617 155 475 269 197 130 624 118 207 554 159 407 212 257 481 546 259 287 239
 191 268 247 460 126  61 291 601 265 419 252 313 231 167 331 436 374 590 240 299 409 308 280 341 325
 276 230 160 318 281 462 364 428 279 591 278 294 330 284 162 228 574  47 248 332 274 185 599 324 277
  38  60 249 323 236 387 435 536 422  36 241 301 225 303 344 179 389 399 482 376 558 285 443 369 209
  55 201 172 386 304 391 440 190 439 286 219 288 339 189 378 293 295 518 458 347 307 245 459 321 305
 187 596 457 311 416 300 213   1 431  28 388 343 609 326 182 513  84 242 329 345 433 312 144  21 614
 315 455 568 270 178 415 296 348  82 355 381 316 220 397 366 244 196 501 403 243 180 188 255 506 147
 425 464   3 453 356  49 561 310 405   6 336 384 272 365 478 444 424 211 401 353 548  87 273 124  93
 371 138 314 486 449 337  41 208  20 260 527 146 503 404 491 327 504 251 492 421 110 131 370 149 375
 372  73 505 170 413 342  98  72 154 434 480 417 362 408 119 194 618  99 232 411 171 489 508 175 509
 271 363 346 334 373 553 141 352 292 302 161 545  43 604 117 448 516 145  35 461 221 135 393 572 102
 581 359 542 392   8 350 383  37 477 589 494  63 495 520 524  30  94  11 262  23 226 426 531  13 395
 577 479 606  96 385 496 238 390  24 583  86  54 153 289 465  50 442 490  14 367  52 152 412 432 493
 550 522 487  56  25  46 195 410 351 427 514  57  71  81  66 613 176 368 598 218 122 360 485 447 580
 612  91 543 114 133   4  67 541 414 502 108 106 233 507 468  69 560   7 544 537 169 525 511 132 328
 540 593 539 463 450  10  12  27  18 354 156  32 203 549 476   5 471 512 510 534 166  97 530  15 563
 526 437 521 120 319  39  29 519 454 585 555  92 109 573 575 127  79 282 569  64  33 396 136 198 488

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00513e+07us (= 10051.3ms, 10.0513s)
Satisfaction error: 1
Number of search iterations: 3625
Number of local moves: 1206 (including on plateau: 591)
Number of local minimum: 299 (including on plateau: 79)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 1: 256 446 608 254 266 551 594 34 159 436 162 303 339 343 381 6 20 72 141 350 385 56 543 593 526 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 479 603 545 504  85 425 610 150 541  81  80 299  82 514  51 421 139 618 134 614  65  73  40 296 376
 595 597 538 394  37 115 438  46 202  28 586 280 481 270  41 128 418 565  23 532 593 462 144 268  44
 494 459  64 555 114 133 289 254  98 102  38 379 601 607 587 186  42 616  24 197  76 613 573 132 592
 456 534  49 542  60   3 239 330 605  48 104 519 529  87 455 167 233 148 502 117  83 511 408 560 536
 609 324 136 582 617  79 583  34 218 119  77 558 498 147 578  90  63  92 124 621 510 129 244 224 569
 544 362 177 101 588 576 602 442  95 546 172 562 506 173 113 135  56 151 161  26 178 604 146 327 482
 608 401 176 453 121 619 606 243 203 363 249 524 183 615 488 156  31 118 334 195 166 222 160  20 571
 205 185 153 336 137 100 288 214 110 300 480 448  32 474 261 311 410 612 396 503 257 293 286 620 414
 235 278 111 271 107 189 303 322 600   8 486 591 227 276 594 343 549 596 140 282 302 174 259 211 371
 476 598 273 256 169 228 272 145 355 225 350 384 584 201 513 352 213 389 208 241   1 291 184 338 579
 485 567  55 152 206 301 318 439 317 312 306 420 290 440 611 245 219  39 250 365 255 275 354 212 392
 251 269 284 223 446 411 360 142 333 287 193   6 283 236 435 405 345 478 599 163 319 399 357 252 349
 353 402 320 328 304 417 215 242 266 341 380 415 416 267 262 574 326  52 297 179 373 231 217 339 309
 404 277 407 325 234 397 281 158 321 181 381 433 305 168 340 313   5  57 463 382 553 342 285 422 391
 149  86 383 220 428 515 497 329 310 308 131   7 347 314 216 358 458 346 434 253 387 323 475 361 190
 162 180  14 337  19 386 548 487 265 247 366 279 393 444  30 170 625 199 274 484 489 445 432 368 182
 332  18 483 388 447 427 429 441  54 364 505  11 155 395 500 468  25 390 430 374 307  35 230 508 109
 367  93 491 547 473  50  84  78 466 493 260  70 335 413 221  75 461   9 528 454 423 400 351 443 240
 207 204 436 403 116 348 248 490 120 359 164  59 246 406 194 369 521 585 465 477 533  66 344 412  53
 112 159 375 451 419 543  61 426 138 575 452 295 192 175 292 378 526  97 552  71 424 437 377 157 141
  17 372 550  21 495 469  29 537 467 530  58 356  36 509 200 472 471 171 518 590  12 431 409 103   2
 108 331 589  16 531 315 130 449 125 535 370  72 492 450 127 398 564 525 264  27 570  96 516  99 126
  62 209  13 188 527 563 294 572 540 460 561  91 298 154 316 556 496 470   4 520 187 238 258  22 226
  10  88 581  67 568  94  33 232 559 512 522 143 123  43 385 557 523 457 237  69 263 539 566 580  74
 105 229 622 165 577 122  68 623 517 501 554 624 191  47  15 198 106  45 464  89 499 196 210 551 507

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.35806e+06us (= 6358.06ms, 6.35806s)
Wall-clock time (full program): 6.41065e+06us (= 6410.65ms, 6.41065s)
Satisfaction error: 0
Number of search iterations: 2086
Number of local moves: 756 (including on plateau: 286)
Number of local minimum: 153 (including on plateau: 39)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 615 567 553  78  68 523  41 594 163 174 266 447 105 580 218  21 520 554 215 244  74  23 591 586   5
   9 321 570 149  99 235  59 514 302 353 123 571 273 561  88  18 588 453 490 519 475  45 547   8 455
 592  57  15  61 142 172  11 596  65 435 518 543  13 597  54 581  40 605  12 544 525 486   2 595 564
 526  29 363 607  64 239 119 487 510  91 320 557 505 457  16   6 418 170 137 109 454 135 528 556 422
 611 491 562  35  25 122   7 498 139 185 535 497  17 429  92 356 531 420 228 440  26 493 584   1 501
 511 403 477  42  73  28   4 503 344  47 390 463 127 593 221 288 180 473 271  32 395 427 558 479 496
 470 285 458 382 342 111 161  36 103  46 307 533 431 534 360 297 507 392   3 396 283 412 488 150 338
 414 409 461 132 128  39 211 367  79 113 481 445  56 394  20 541 295 118 374 441 448 499 529 433 398
 530 419 337  14 268  82 364 261  24  63 407 443 552 332 143 462 310 456 195  90 379 480 372 347 495
 380 359 385 393 147 101 413 383 415 159 452 428 110 406 225 223 370 438 136 276 399 362  43 464 358
 387 245 451 258 330 306 411 377 335  98 126 357 416 263 164  66 333 327 388 328 400 426 253 343 437
 210 384 280 348 366 254 298 289 432 293 354 331 373 316 405 200 291  22 351 311 259 349 323 460 326
 269 284 444 208 264 312 277 423 304 397 430 308 315 278 313 133 294 381 365 255 336 368 290 334 243
 303 250 219 184 538 465 551 192 220 299  58 603 203 262 391 483 296 404 251 238 317 361 256 140 341
 224 217 270 324 614 375 300 350 229 613 542 222 248 198 274 494 260 249 201 309 279 206 301 171 355
 194 408 345 236 466 442 292 169 619 569  83 213 209 191 436 282 175 314 560 205 318 189 352 272 286
 134  97 146 329 267 622 232 216 305 241 197 151 509 214 467 476 545 346 484 242 599 478  84 187 257
 178 234  94 590 482 401 226 474 604 621 199 183 186 177 539 230 156 620 472 148  86 179 275 152 319
  75 246 138 471 468 513 459 190 565 410 287 108 549 231 500 376 153 524 492 181 176 165 202 158 188
 160  95  87 522 281 573 583 265 446 512 207 155 546 120 449 131 157  34 421 572 602 325 237 141 204
 173 610 129 563 247 502 517 233 389 536 618  72 532 196 575 378 112  55 167  53 339  44 193 559  33
  52 240 322 587 424 439 589 227 145 516 124  48 504 125 598 252  49 130 371 568 116 612  67 212 508
 104  85 585 402 606 540 574 100 340 515 625 106 162 168 600 577 102 115 609 624  37  93  30  50  76
  81 601 107 425 566 369 578  62 582  70  96  31 450 114  69 417 616 154 555 579 117  51 576 521  38
 623 489  27 485 550  60 548  19 166 469  80  10 434  89 608 537 527  71  77 121 386 617 144 506 182

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 2.81908e+06us (= 2819.08ms, 2.81908s)
Wall-clock time (full program): 2.866e+06us (= 2866ms, 2.866s)
Satisfaction error: 0
Number of search iterations: 666
Number of local moves: 420 (including on plateau: 140)
Number of local minimum: 30 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 613 547 520 176 600 522 597  87  50  94  22 577 585  68  28  69  16  41 439  46 457 560 561  70 480
 515 599 499 375 581 617 163  17  11  15 614  34 311  18  37 206  73  52 537  59 533 433 482 422 622
 330 624 592 550 437 484 189 390 606 180  75 130 586  51  63  40 128  85 174 202 591 144 544 170 460
 186 616 611 516 615 551 498 518 175  91  38  54 401 126 114  78  83 173 542  79 464 558 476  64 198
 403 559 565 332 570 608 579 131 124 156  67  96 488   7 178  86 103 188 500  62 620 146 496 612 149
 426 361 214 380 562 573 148 566 159  98 165 104 598 564 211 210 139 153 190 625 492 167 477 195  48
 485 259 243 245 534 517 593 556 391 319 134 221 405 154 168 141 169 527 289 185 536  65 127 249 313
 388 241 451 452 410 513 574 604 115  58 273 224 540 261  12 272 151 421 580 244 192 172 310 196 171
 602 314 483 343 425 453 507 623 181 183 264 155 320 177 133 296 236 160 257 263 336 253 367 267 227
 415 326 225 265 337 418 191 252 121 220 344 204 250 331 618 504 509 132 184 489 382 276 292 199 341
 471 248 304 605 256 317 446 254 268 354 285 201 503 240 372 234 621 203  72 293 222 271 328 291 166
 443 207 324 338 280 377 305 379 102 283 233 277 339 466 408 458 232 152 359 368 238 306 312 290 349
 302 275 287  31 300 295 282 309 462 266 351 307 129 395 342 340 251 247 400 429 394 369 335 325 402
 228 219 274 409 205 164 384 200 347 350 567 512 237 355 470 333 258 299 494 270  43 334 318 329 226
 374  81 213  89 364 231 346 456 385 490   2 229 463 373 281 360 469 424 363 262 407 352 316 278 217
 106 398 230 413  77 194 353 321 246 365 419 430 327 392 417 298 235 212 284 315 440 357 376 297 323
 136  25 366  29 378 187 569 444  36 447 381 386 411 242 387 427 209 362 288 239 107 445 223 563 538
 218 432 279 356 116 112 109  60 455 478 436 450 157 197 448 286 468 255 459 393 399 348 119 322 473
 182 389 135  84 179  44  27 158 441 371 481  49  66 404 416 497 588 486   5 546 479 465 428 438 467
 162  80 150 161  88 269  90 420 584 502 397 519  93 454 370 506 345 396 108 535 110  21 434 474 557
  45 308   4 137 208 123  35  10 543 383 495 523 193 607 414 587 406 521  82  20  57 539 423 553 609
 117 472   1 142  53 122  99 526 552 510 529 583 100 610 358 412 589 548 491 260 111   3  33 578  26
 301  30 138 505  95 101 449 475 294 530 596 554  61 603 501 541 514 619  92 528 105 147   6  32   8
  74  97 145 431  42  24 216  55 576 487 125 571  47 590 511 524 508 594 493 582  71 545  19  56 442
 303 118 572 461 113   9  76  14 601 595 532 435 215 140 568 120 525 575 143 531  39 549  23 555  13

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.87579e+06us (= 5875.79ms, 5.87579s)
Wall-clock time (full program): 5.92495e+06us (= 5924.95ms, 5.92495s)
Satisfaction error: 0
Number of search iterations: 1883
Number of local moves: 739 (including on plateau: 345)
Number of local minimum: 139 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 593 419  52 110 124 551 494 603  72 247 513  64  32 469 335 458  94 191 416 106 543 165 556  43 575
  44 102 601 622  50 569 379 604 114  33 508 147  51 527  84 583 453 545 119  73 599 196 115 611  96
 152 384 625 118 388 529 504 567 167  68 193  45 490 559 534 610  60  47 198 108 606  98 623 121  31
 558  55 171 549  41 591 493 524 143  49  81  87 470 511 156 330 148 528 479 387 620 592 111  89  62
  90 536 503 382  93 127 548 585  66 608 597 272 105 209  97 403 112 175 432 402 310 281 573 122 197
 140  59  79 390  40 594 540 578 414  30 615 157 308 542 169 621 588 199 562 447 186  77 217  65 208
 290  29 438 580  53 146 522 613 589 184 216 224 352 572 151 357 301 144 574 136 614 221 104 261 154
 142 138 125 173 252 602 481 377 255 218 617  99 476 179 595 568 210 618 161 257 456 251 176 139 260
 159 166 192 264 531 361 225 228 550 297 232 195 323 164 263 393 516 178 579 523 163 286 616 253 168
 214 187 514 244 229 292 287 451 202 624 120 212 563 294 134 462 325 194 577 475 347 222 131 322 203
 279 265 412 207 369 262 206 243 397 277 420 338 600 282 541 215 245 158 596 343 181 342 275 135 237
 340 299 180 242 267 329 250 512 304 354 312 444 492 392 238 278 235 363 328 182 317 240 288 302 337
 239 314 336 259 268 233 246 185 249 362 283 309 410 395 285 276 598 324 274 355 399 295 226 298 407
 367 394 375 296 460 368 315 353  34  15 201 371 300 177 443 378 248 413 303 425 418 270 293 258 350
 284 381  22 415 372 321 424 351 423 389  28 445 339 408  56 227  57 468 236 132 398 422 417 446 364
 319 385 496 383 333 521 123 305 341   7 535 348 356 370 344 205 113 472 320  38  76 376 332 396 331
 429  71 487 441 358 346 266 280  80 307 359 477  19 400 349 380  18 436   6 437 316 442 360 450 311
 345 454 103  13 401 269 373  39 313 582 452 500  42 431 365 200 241  25 116 449 426 306 391 491 498
 497 465 455  35 366 327   1 130 448 478  74 404 190 160 473  88 126 427  26 421 326 495 464 515 434
 256 485 466 483 544   9 153  10 411 533 440 547 183 128 517  16 463 188  70 234  78 435 318 374 484
 480 457 474  61  20  92  54  69 510 467 172  24 532 150 334 170 564 145 552 555   3 439 406 590 505
 557 605 149 538 519  63  27  12 526 553  95 499 213 174 231  23 609 459 273 428 291 204 271  17 489
 486 546   8 501 565 101 409  85 488 405 109 461 289  58  46 254 509 507 219 584   4 566   2 587  36
 560  48 129  37 612 155  75 107 223 576 571 619 607 133 561 230 520 530 189 211 137  86  21 386 502
   5 581 433 482 570  67 430  14 506 162  82 537  83 141 525 100 471  91 220 117  11 518 539 554 586

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00494e+07us (= 10049.4ms, 10.0494s)
Satisfaction error: 2
Number of search iterations: 5736
Number of local moves: 1579 (including on plateau: 663)
Number of local minimum: 514 (including on plateau: 97)
Number of resets: 4
Number of restarts: 0

Problem in column 15: 335 84 534 156 97 169 151 595 263 134 541 238 285 443 56 344 349 365 473 517 334 231 46 561 525 => the sum is 7826 rather than 7825
Problem in column 17: 94 453 60 148 112 588 301 210 516 325 245 235 598 248 57 113 18 241 126 463 564 609 509 520 471 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 277  33 496 541 461  62 165 498 531 115 563 173  93 206 613  79 593  89  41  40 499 361 537 163 596
 145 340 540 159 480 197 244 586 582 124 569  39 511  23 522  27 604  74   2 210 545  95 564  31 612
  26 494 552 559 112   4 449 294 574 343 485  67 502 573 526 101 602 252   1  35 571 161 204 270  68
  88 533 484  20 479 103 441 508 483 140 396 118 457 493 424  25 568  48  80 137 524  94 532 107 543
 171 536 431 470   6 100 462  81 432  61 528 481 566 517 592  84 577  97  90 450   3  77 555  45 413
 208  12 192  14 478 228 131 443 182 150 512 452 505 439 525 453 539 132 393 259 487 355  46 184 506
 135 403  99 471 448 139   5 444 318  13 513 415 490 534 583 147 405  69 427 380 127 354 400 149 357
  17 209  19 500 442 188 408 417 544 170 527 402 376 404 497 401 330  11 386   7 428 316 332 157 337
 349 425 264 423 327  96 492 367  30  38 476 446 407 335 329 339 156 200 440 455 406 189 299  73 464
  57 469 134 280 451 215 458 465 211 322 370 395 353 445 317  91 347 263  66 418 411 416 495 129 247
 108 385 233 371 459 219 472 436 310 410 346 368 314 260  22 372 350 198 288 248 300 383 324 267 382
 323 437 268 391 352 123 356 168 283 389 348 362 345 463 381 369 325 274 392 399 284  43 289 295 166
 291 375 302 419 422 374 319 194 238 344 412 309 239 276 196 278 433 333 266 243 253 240 279 360 430
 338 190 420 320 331 474 286 328 321 311 245 409 287 397 366 235 312 201 336 258 255 414 285 249 257
 608 246 426 365 272 542 298 275 301 181 351 222 120 221 207 232 307 394 290 261 282 587 305 341 191
 377 155 429 172 213 486 199 558 303 488 251 154 271 296 293 273 225 535 160 146 342 313 304 519 363
 518 269 600 227 218 434 388 297 398 614  36 226 214 143 262 178 193 609 281 162 237 223 250 607 241
 466 581 292  76 231 456 230 460 175 590 169 546 256 144 195 242 373 421 179 185 229 510 113 529 177
 562 102 308 153 254 468 110 224  49 234 220 594 591 105 121 617  52 265 467 625 186 576 183 523 236
 212  85 122 148 509 315 615 187 202 359 174 130 114 610 216 364 111 521 547 489  15 530 570 475 205
 384 176 217 141 551 482 611  34 567 520  86 554  16  60  83 538 151 515 334 106 597 514  75 387 126
 501 119 477 580 203 560  70  92 133 473 104 180 620  51 326 557  37 549 603 618  59  10 142 623 138
 503 578 447  63  50 454  42 390 164 553  71 109  98 117  64 622 152 598 516 491 158 575 588 306 116
 589 548  29 378  18 556 565  32 358 504  65 167  56 128  78 605  55 616 621 624 606  54  82 438  53
 572 125  44 584  58 550   9  47 136 379   8 507  24 585  87 595  28 561 619 579  21 435  72 599 601

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00501e+07us (= 10050.1ms, 10.0501s)
Satisfaction error: 2
Number of search iterations: 3636
Number of local moves: 1142 (including on plateau: 488)
Number of local minimum: 320 (including on plateau: 55)
Number of resets: 2
Number of restarts: 0

Problem in column 16: 79 27 101 25 84 453 147 401 339 91 372 369 278 235 232 273 178 242 617 364 538 557 622 605 595 => the sum is 7824 rather than 7825
Problem in column 24: 163 31 270 107 45 184 149 157 73 129 267 295 360 249 341 519 607 529 523 475 387 623 306 438 599 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
   8  49 547  68 224 554 123 596 273   9 297 569 541 132 575  17 524  47  37 574 538 562  53 498 410
  89 584 568  15 201 112   7 581 565  46 567 595 598 188 551  29 566 107 576 502 553  41  56  11 117
  34 151   5 340 500 157  12 607 526 527 181 609 549  72 555 497 510  54  20 600  13 114 258 508 426
 200  88 479 113 237  64  35 319 533 522 208 570 605 229 572  75 491  22 592 515 559  16  82 532 167
 219  62 196 434 481 535  59 454 419 272 141 406 496  73 424 506 594 421  25 478   4 520  94 509   3
 150  99 480 444 185  14  10 589 439 523  61 471 483 160 409 472 582 218 531  27  21 501 136 467 353
 177 264 507 457 370 168 306   6 423 227 111 504 459 182 492  92 413 420 270 432 493 379 133 335 205
  28  85 542 441 466  69 265  23 536 378 263 184 357 198 440 468 433 153 464 396 499 399 251 448  39
 212 402 387 138 400 277   2 486 512 373  84 431 461 104 408 460  43  19 451 144 545 453 140 447 446
 135 528 430 232 405 154 215 452 302 411 142 183 397 354 298   1 383 403 375 362 305 417 134 344 463
 339  31 254 351 256 269 291 359 312 294 323 458 316 243 290 324 450 304 289 392 371 394 147 326 442
 445 278 350 332 309 338 257 315 345 369 389  18 261 343 307 252 267 347 352 311 333 284 355 322 346
 376 330 283 391 348 557 327 360 374 328 202 287 166 178 292 393 301 365 381 253 398 206 244 175 310
 242 321 231 372 180 364 490 213 241 226 204 199 271 428 276 395 281 366 286 300 293 349 295 620 382
 435 247 337 192 608 438 578 275 234 145 418 171 130 518 331 233 235 282 482 187 248 296 462 169 174
 313 280 314 621 255 416 427 473 250 611 544 259 240 225 230 299 172 268 189 176 203 236 288 228 308
 503 246 197 249 573 377 388 118 597 266 516 412 216 422 238 164 303 179 285 217 149 186 585 245 194
 543 415 165 317 550 211 386 583 221 163 437  51 334 407 279 191 443 470 380 162 210 193 401  74 239
 513 586 262  93 124 558 361 161  58 119 560 220 436 561 110 159 148 599 601 131 128 170 484  90 593
 455 475 155  80 126 618 537 127  50 137 474 485 260 517 367 488 152 209 222 356 223 190 511 146 465
 494 495  38 320 610 173 622 125 195 539 487  98  55 414 122 109 143 546 214 534 564  60 385 115 368
 489 519 121 530 101  78 540 449 105 100  42 156  77 404 139 358  71 617 580 563  66 514 579 158 469
 604 384 603 106  91 456 591  30  87  79 476 342  24 588  40 616  81 336  95  86 425 619 625 116 325
 548 429 341 577  96 363 390  76 120 571 615 102  67 329  44 614 207 552  65  70  97 103 602 318 529
 274 477  33 612 129 505 606  48 108 590  83  45  26 556  36 613  32 521  63  57 587 623 525 624  52

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.65278e+06us (= 4652.78ms, 4.65278s)
Wall-clock time (full program): 4.70268e+06us (= 4702.68ms, 4.70268s)
Satisfaction error: 0
Number of search iterations: 1594
Number of local moves: 648 (including on plateau: 259)
Number of local minimum: 112 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 467  25  57 283  51  69 616 503 496 120 520 171 129 487  72 609 419 612 623  86  20 511 489  21 369
 506  64 110 521 497 598 622 119 106 561 443 190 442 562 608 613  88  74 606  53 164  98 151   6  23
 393  71 152 581  44  52 621 100 246 476 589 546 495 591 435  62 109 160 434 203  39 168 614 451 193
 130 157  92 574 132 566 617 185 539 522 544 192 529 532  60  58 253 137 200 225 127 611 548 194 101
 619  34 620 615 594 177 158  61 288 400 105 572 216 281 625 173 227  95 214  32 250  59 252 575 583
 153  28 257 380  89 558  96  55 565 483 605 490 303 610 196 141 273 155 230 424 330 436 510 224 234
  94 199 297 410  99 358 145 147 580 578 314 370 590 597 178 349 549 135 567  67 126 180 215 604  77
  81 299 124 513 285 464 211 563 577 363 254 601 184 251 142 244 286 618 146 267 296 156 559 223 118
 374 167 312 368  68 327 294 210 365 603 309 421 420 505 136 150 468 298 149 325 213 280 270 516 277
 217 238 248 404 313 427  85 233 353 449 128 301 236 198 348 282 457  91 576 582 553 264 208 295 339
 245 189 315 471 305 624 117 474 326 221 531 376 383 265 269 235 308 161 205 174 329 392 179 484 247
 387 102 338 293 323 321 276 504 463 343 111 431 335 448 359 226 344 166 279 197 231 375 362 291 320
 239 268 552 322 341 351  63 336 318 478 355 345 207 263 243 384 240 415 306 316 396 206 328 287 266
 278 260 289 229 317 237 191 290 373 385 148 220 386 332 352 381 377 274 413 311 346 479 342 284 331
 440 401  33 354 477 403 222 480 262 360 397   5 232 372 186 536 333 175 390 446 411  36 172 398 304
 430 389  37 204 367 209 414 405 307 350 165 181 433 452 379 509  84 408 432 114 256 426 399 458  17
  46 593 324 195 423  93 508 357   9  18 455 139 366 133 454 364 170 340 453 255 391 494 382 416 447
 441 570 371 201 242 144 347  11 134 261  73 530 459 361 465 499 154 437 493 462 334  14 182 202 438
 406 584 526  70 573 176  66 569   7 319 473  56 356  24 500  30  87 395 131 469 517 586 409  78 418
 533 428 486 123  83  19 507 259 212 188 541 112   1 116  40 439 527 310 554 450 456 425  43 498 475
 429 599 422 187   4  42 482 272 407 163  26 543 218   2 394 485 115 540 107 524  13 388 417 444 602
 587 466 412 271 555 162 592 523 241  38  27  15  54 121 551  16 545 525 104 292 501  75 402 143 607
  47 515 491  49 470 596  41 103 125  35  29 122 183 228 534 535 556 564  90 568 461 492 219 258 514
   8 579 472 159 585 550  22 547 481  80 140 378 560  12  50 502 300 571  10 538 528  79  76 138 460
 275 600 488  48 588 302 512 519  45  31 542 518 108  82 249   3 557 169 113 445 537 595  97 337  65

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00493e+07us (= 10049.3ms, 10.0493s)
Satisfaction error: 2
Number of search iterations: 3583
Number of local moves: 1372 (including on plateau: 609)
Number of local minimum: 346 (including on plateau: 63)
Number of resets: 2
Number of restarts: 0

Problem in column 11: 520 443 589 544 105 605 314 254 309 128 531 111 355 148 397 165 455 73 473 541 26 27 29 140 542 => the sum is 7824 rather than 7825
Problem in column 17: 419 88 109 253 227 273 549 286 468 457 308 344 240 377 333 84 170 154 87 527 115 545 556 300 557 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  83 599 337 467 120 102  57  45 546  47  85 589 472 504 388 240 462 603  88 162 512 578  51  65 623
 511 112  71 127 583 217  72  36 521  97 431 622 394 309 445 498 185  73 471 374 620 379 145 380 152
 601  82 608 109 118  35 549  26 525 190 421 541 433  25  89 554 137 254  74 108 588 151 573 529 505
 338  29 426 565 178  99 616 283 567 126 619 580 514  87 210 129 107 470 483  49 609 345 172 110 114
 303 184 212 182 526 311 159 230 572 452 618 296 612 174 382 544 113 149 106 194 373  68 234 553 278
 444 561 412 518 100 613 132 195  69 169 160 281 458 229 465 540 193 395 158 591 574  38 104 223 203
 477 533 166 605 196 365 614 600 564 186 156 220 427 606  54 310 206  63  59  48 430 117 592 140  91
 617 214 319 155 200 255 548 586 557 154 133 501 116 125  46 510 238 577 144 128 460 277 111 339 515
 527  64 279 251 261 218 621 153 342 424 624 371 181 180 304  94 235 524 263 384 481 163 171 267 443
 201 260 480 492 506 161 148 147 451 175 611 202 538 264 377 324 225 403 354 122 495 224 192 205 268
 142 213 293 305 187 386 595 531 258 282 335 191 241 322 438 244 198 414 173 333 411 271  90 413 559
 123 177 253 219 358 246 547 215 442 291 331 555 351 545 236 292 256 298 563 270 441 216 276 189 135
 398 207 366 308 419 101 349 381 288 543 247 355 136 295 306 262 249 334 448  12 280 341 610 359 231
 197 336 429 307  79 208 302 353 332 476 344 237 289 233 343 141 287 491 320 318  95 449 552 361 346
 594 415  10 232 330 360 316 227 266 340 375  70 134 323 300 406 252 275 447 482 274 352 392 327 326
 314 399 239 404 315 372  52 390  98 284 499 138 369  34 391  39 393 416 432 454  93 376 494 356 474
 179 598 532 408 434 103 581 489   9 378 317 436 484  67   4 226  24 325 273 478  80 328 301 348 423
 368 463 168 602 435 385  18 221 115 367 530 440  86 400  37 299 329 490 211 457 139 596  41 131 497
  43 507 350 383 455 466   2 396  60 461 257  75 176 164 312 487 537 347   8 425 250 370 520 453 321
 157 420 397 401 402 625  58 248 143 364  30 485 204 294 286 357 560  76 508 450  40 496 165 387 272
 150 558 199  32  84 519 363 456 405 516 167  27  61 422 389 105 409 130 575 570 242  22 428 503 493
  53 528 579  81 437 551  44 513  23 479  55 468 290 582 417 410 486  14 584 124  42   5 587 228 245
 285   3  33 259  62  77 502 562  66 418 269  17 615 593 597 209 569 566  31 473  16 550 542 500  11
 407 362 571 170 464 604  92 536  50  21  28 121  56 509 534 459 568  19 535 297 265 590 469  20  78
 313   1  96 243 576 446 488   6 556 585 183   7 188 539 475 146 607 119 517 522  15 523  13 439 222

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.59098e+06us (= 5590.98ms, 5.59098s)
Wall-clock time (full program): 5.64026e+06us (= 5640.26ms, 5.64026s)
Satisfaction error: 0
Number of search iterations: 1987
Number of local moves: 824 (including on plateau: 336)
Number of local minimum: 165 (including on plateau: 57)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  21 593  86 101 498 515 589 371  71 164 600  43 156 602 157  39 531 546 384  75 564 545 568   2   4
 597 512  40 586  33 553 294 142  25 102   8  95 117 613  13 118 536 479 535 108 579 485 582 215 458
 126 558   1 446 494 504 496  27 262 480 547  97 455 493  16  12  45 595  44 216 570 452 328 532  29
 417  17 109 436 509 533  66 159 297 542 457  93 247 505  23  61 420 544 537 460 210  77 556 355 195
 548 153 148 514   6 478 468 230  60 440 571 508 145 519  70 137  30 172 495 418 338 428 380 489  80
 524 184 374 456 431  31 503 119  90 507 522 205  48 448 192 454 490 369 353  10 449 520  41 500   5
 442 198 149 194 513 171 314 141 430 434 450 438 100 397  87 433 475 373 307 267 368 396 481 248  19
 392 517 134  38 400 506 352   3 208 486 406 445 426 375 168 416 394   9 411  76 427 357 383 462  34
 483  35 115 274  69 296 292 232  11 581 429 404 181 484 385 364   7 439 477 213 405 447 482 366 354
 421  84 169 278 376 543 191  46 330  63 401 372 388 370 432  88 316 423 312 363 419 270 437 467 266
 236  83 323 273 325 412 309 261 337 377 441 311 409 271 179 324 538 238 320 391 298 193 339 322 315
 252  50 138 346 251 243 528 255 358 492 422 281 359 272 343 200 435 299 425 386 203 362 342 227 356
 379 284 265 187 276 264 225 268 349 331 269 424 287 310 351 389 344 345 285 244 341 466 327 282 333
 313 288 399 256 290 329 488 471 577 175 332 163 277 221 259 189 177 283 402 249 472 280 562 188 185
 306 302 393 279 367  94 207 286 223 361 336 303 173 611 453 350 245 410 335 246 365 321 301 305 253
 151 122 395 183 240 502 360 326 222 201 318 334 234 347 180 555 162 257 176 607 308 563 226 250 606
 166 461 398 293 260 178 414 408 525 152 340 242 473 263 390 237 110 182 319 387 209 204 116 541 557
 239 382 465 300 196  74 111 348 578 289 202 599 624 229 403 144 275 610 197 136 131 228 231 258 576
 233 554 580 224 125 113 592 463 155 128 123 295 464 186 521 219 218 217 587 499 147 241 139 291 511
 190 516 552 539 206 550  36 572 174 133 158  99 585 132 540 491 569  82 143 470 105 161 121 107 594
  73 413 560 211 618 130 235 615 317 160 124 114 443  20 591 573 104 154 561 459 616 150  24  91 469
 623 415 476 619 199  79  15 487 588  55  78 220 526  57 304 381 612 614 103 625  81 254 165 120 129
  52 106 523 140 170  53 622 617 510 583  64 565  51  54 574 518 605  58  47 214  59  67 501 575 497
  32 620 474  68 407 603  96 534 527  37 135 608 127  28 596 529  98  65  56 621 112 146 167 590 549
 609 378 559 584 566  72  22 444 601 551  92 567 530  18 598 604  89  62  14  85  49 212  26  42 451

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00492e+07us (= 10049.2ms, 10.0492s)
Satisfaction error: 2
Number of search iterations: 4214
Number of local moves: 1240 (including on plateau: 457)
Number of local minimum: 375 (including on plateau: 53)
Number of resets: 3
Number of restarts: 0

Problem in column 6: 515 553 504 533 478 31 171 506 296 543 412 243 264 329 94 502 178 74 113 550 130 79 53 603 72 => the sum is 7826 rather than 7825
Problem in column 10: 164 102 480 542 440 507 434 486 581 63 377 492 331 175 361 201 152 289 128 133 160 55 583 37 551 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 600 612  18 604 576  37 213 581  11 582 158  10 559  89  79  29 211 596 589 124 243 607 538 155   4
 179 164 524 529 132 521   6 456 336 473 271 551 522  56  35  17 491  39 116 501 514 606 595  15 176
 245  38 510 608 493 541  14 505 506 329 178   8 569  40 504  63  33 593  48 565 507 563   3 133 229
  87 570 476  97 584 384   1 575 466 100 232 495 502  82 512 427  24 136 138 486 573  32 587  99 160
 157 375 455 558 580 107   5 567  13 426 108 465 572  26 554 535 345  31  68 574  47 517 520  93 127
   7 555 446 485  42 444 381 159 550 367  53 515 420  45 525 540  25 513 175  19 464 454 508  49  84
 118 150 475 450 480 389  30 300 519 531   2 348 357 302 484 492 256 469 230 438  27 258 511 197  12
 481 214 428 432 347 402 149 412 400  28  20 537 534 443 421 463  90  16 193 448 461 137 459 145 165
 410 474 337 319 360 387 123 431  36 288  72 439 423 415 404   9 343 334 120 440 332 489 355 433  52
 260 227 548 191 349 383 333 335 470  83 205 405 478 509 499 277 222 309  96 398 135  43 362 396 312
 297 172 331 403 306 391 184 251 330 285 236 498 339 377  23 406 351 323 183 327 527 374 315 395 201
 356 287 419 294 307 283 320 386 308 366 261 382 363 254 296 259 429  62 187 328 279 326 316 436 321
 241 325 399 291 338 263 268 314 370 430 392 324 371 311 310 301 235 477 208  86 274 317 303 313 364
 462 196 161 368 233 250 373 146 340 299 359 408 353 352 379 318 204 218 434 292 358 380 220 372 350
 503 365 442 215 305 225 388 217 246 290 341 282 221 180 397 223 500 249 354 322 276 224 284 177 599
 601 244  71 239 255 231 385 188 346 585 532 252  98 411 275 171 219 298 401 189 616 163 304 272 479
 602 242 206 262 280 207 416 237 579 228 556 265  80 289 182 451 376 148 409 195 199 273 200 447 496
 226 425 248 166 144 209 441 614 167 131 552 253 234 168 286 181 458 542 490 267 142 216 270 472 523
 518 424 210 186 109 173 553 192 344 603 361 264 185 445 147 247 588 169 266 238  61 418  65 543 516
 539 198 162 134 278 623 564  70 154  95 369 194  58 621  51  85 202 530 526 618 121 422 203 591 417
 102 114 152  69 620 257 452  75 141 583 468 106  73 577 549 560 568  92 390 240 378 139  59 590 471
 151 544 153 622 413 295 625 190  60 119 547  22  77 533 126 578  88 611 562 170 128 293  46 435 437
 156 174 566 117  50 112 619  64 610  94 528  44  21 598 617  57 597 546 497  55 457 281 105 393 467
 460 613  54  76 129 125 488 449 482 407 571 143  74  78 104 545 487 394 609  91 101  81 557 113 594
  67 122  34 110 115 586 494 111  41 103 453 615 342 624  66 592 483 130 536 414 605 212 140 561 269

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00025e+07us (= 10002.5ms, 10.0025s)
Wall-clock time (full program): 1.00517e+07us (= 10051.7ms, 10.0517s)
Satisfaction error: 2
Number of search iterations: 3598
Number of local moves: 1333 (including on plateau: 619)
Number of local minimum: 260 (including on plateau: 65)
Number of resets: 2
Number of restarts: 0

Problem in column 2: 612 164 38 570 375 555 150 214 474 227 172 287 325 196 365 244 242 425 424 198 114 544 174 613 122 => the sum is 7824 rather than 7825
Problem in column 16: 29 17 63 427 535 540 492 463 9 277 406 259 301 318 223 171 451 181 247 85 560 578 57 545 592 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 123 309 207  73  86  58 245 599 567 577  22 251 609 512 519  90 189 597 506 172 472  14 107 604 317
 606 113 153  29 586  25 615 177 603 316 217 553 498 513 178 421  79 336  44  71 420 617 469 140  46
 505 544 174 550 427  63 477 109 151 589 280 439 490  43 108 501 254 529 101   8 141 484 233 560  65
 500 138 102  11 596 470 307 465 531 225 451 520 350 495  17 180 111  51 538  30 492 221 361 621  42
  39 463 616 454 229 161  45 468 224  82 541 548 507 482 169 522 380 276 235 320  38 619 267 122  18
 410  31 499 579 460 149 592  16 349  74 601 536 291 137 154 162 236 508 247 602 220 462  62  49 399
 459 144 443 503 473 218 287 510 352 368 494 179 321 518  81  27  52 182 156 623 256 374 134 324 347
 528 388  87 385 612 429  92  28 493 198 434 424 268 393 150 425 338  37 488 146 447 275  72 359 329
 481 397  34  10 103 552 367  76 312 407  66 516 515 568  48 341 618 414 475  15 155  80 345 558 372
 402 369 405 403 379 173 340 363 209 181 293  64   4 370 392 234 573 114 377 360 302 456 332 330 400
  53 389 419 216 432 260 391 296 404 222 625 143  23 496 294 194  47 365 364 396 244 504 366 331 351
 348 435  12 261 228 390 112 362 584 282 171 158 607 231 299 537 358 257 242 160 301 382 327 395 386
 232 497 298 371 163 249 383 411 187 239 306  40 292 376 326 378 346 226 571 304 273 532 197 272 356
 286 325 322 546 300  75 288 343 412  67 184 213 223 580 549 297 148 265 474 413 559 192 357   6 401
 334 339 311  91 323 310 262 246 355 487 540 241 318 203 600 271 319 278 243 614 205  50 313 230 342
 489 305 281 466 204 199 270 104 269 578  96 384  68 398 565 587 594 255 117 206 212 542 283 142 211
 530 100 315 523 166 422 191 605  88 423 285 543 240 314 164 554  41 344 290 373 190 118 527 264 215
 176 208 337  98 525 159 555  24 253 277 175  36 333 227 608 444 106 593 196 610 394 214 588 252 437
 201  57 105 533 430 308  84 416 263 436 165 450 284 303 485 132  77 409 551 449 569 289 442 219 168
  60 556 210 116 121 483 353 200 139 611 193 202 110 130 185 557 545  83 583 431 167  69 622 479 620
  95 131 575 279 521 511 572 534  93 120 517 145 119 418  70 133 237 455 125 471 335  89 570 136 574
  56 441 598 562 295 453 547 258   7   9 408 127  20  26 535 124 591 458 387  13  19 480 440 381 590
  59 563 259 539  35 581 152  94 467 448  97 457 426  33 564 461 576 417 126 354 566  78 186  21 266
 375 582 502  32 129 613 115 526  85 452 188 147 464  54 274 250 486 128 328 446 433  99  55 624 438
 478   1 561 195   2 514 183 595 428 157 476 509 445   5 491   3 524 248  61 238 415 585 170 406 135

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.81639e+06us (= 8816.39ms, 8.81639s)
Wall-clock time (full program): 8.86501e+06us (= 8865.01ms, 8.86501s)
Satisfaction error: 0
Number of search iterations: 3369
Number of local moves: 1095 (including on plateau: 470)
Number of local minimum: 321 (including on plateau: 69)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 335 106  86 602  41 622  43 407  31 545  78 319 395 146 526 624 365  63 118 608 456  84  50 552 623
 434 391 610  35  40  81 397 535 174  93  72 483  49 178 621 570 453 272 379 186 593 587  79 382 131
 577 515 357 529  37 171 384 349  75 455 205 436 219 128 283 599 476 406 102  83  62 141 609  80 547
 601 531 604   2 549 466 514 481 168 561 239 595 122  33 566 192 537  16 149  97 422  27  54  99 200
 600 447 581 111 403  76 226 444 136 175  82 333 156 198 140 616 618 162 584 201 322 591  17 559  47
 273 528 134 614 480 284 556 546 185 115  70 605 262  68 385  73 366 119 139 344 607 606 296  28 142
 567 501 548 225 488  85 620 440 181 132 585 553 235 157 492 152 145 271 151 144  71 507 155 251 169
 424 491 287 267 619 184 236 503 173 297 187 308 195 130 625 114 615 158 218 387 416 589 109  55 238
 427 320 562  46 592 394 512 304 421 321 259 222 315 228 212 217 324 462 237 203 223 188 165 568 103
 454 433  11 244 472  56 356 328 431 555 525 269 229 233 189 191 390 413 368 310 311 210 193 475 179
 369 458 343 596 110 446 303 252 428 117 264 275 113  34 576 429 206 313 298 316 276 247  95 524 437
 469 166 215 270 291 323 265 355 377 160 412 274 180 612 358 248 249 371 207 361 231 363 295 288 485
 255 194 360  42 127 415 411 473 388 256 312 341 214 329 234 268 378 292 199 588 209 477 243 423 396
 325 419 286 280 254 409 293 281 347 327 399  21 326 336 417 213 282  44 494 374 398 342 245 337 376
 123 202 354 420 197 340 154 258 279 504 318 426 309 242  67 544 241 401 362 457 402 232 425 164 404
 502 380 240  18 170 153 350 129 143 306 334 452 603 435 148 373 285 346 375 572  45 372 410 332 352
 211 353  96 467 121 392 381 196 100 126 460 539 364 565 339 224   6 474 471  66 519 543 177 230 405
 137 294   7 510 250 414 135 314 277  94 317  38 506 613 518 300  52 508 289 408 105 523 468 330 418
 125 116  98  53 227 133 445 290 367   8 530  30 430 331 389 393  22 345 583 478 574 459 479 383 538
  24 159 498 557 204 253 108  39 470 451 301 400 359 163  29 563 461 190 161  89 534 448 582 536 246
 101 500   1 513 443 495  12  69 497 484 216 482 305 487  59 278  87 540 183 464 263  58 569 208 511
  51 167 597 442 580 351 465  92 449 517 509  20 386 571  65  61 505 522 438  57 138 112 441 257  32
 104  48 299 463  25 307 120 338 521 554   3 107 348 551  88 564 496 172 221 450 560  64 586 261 575
  77  91 527 493 532 486  23 182 590 370 550 147 594 558  60  10 176 533 579 578  74  36 541  13   5
 260  15 124  26 573 489 516 220 617 302 598 150 611 499 439   9  90 432 520   4  14  19 542 490 266

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00497e+07us (= 10049.7ms, 10.0497s)
Satisfaction error: 2
Number of search iterations: 4038
Number of local moves: 1274 (including on plateau: 606)
Number of local minimum: 381 (including on plateau: 64)
Number of resets: 3
Number of restarts: 0

Problem in row 13: 255 194 360 42 127 415 411 473 388 256 312 341 214 329 234 268 378 292 199 588 209 477 243 423 396 => the sum is 7824 rather than 7825
Problem in row 19: 125 116 98 53 227 133 445 290 367 8 530 30 430 331 389 393 22 345 583 478 574 459 479 383 538 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 610 538 577 205  84 136 602 535 469  32  66  19  55  80 267 456 596  18 341 169 314 563 450  56 587
 116 606  45  40  70 625 378 564 597 153  65  33  90 472 248 621 212  50 582 506 504 242 515 416  75
 349 445  37  28  78  99 623 611 376 591  85  69 333 609  51  86 618  53 556 622 272 605 482  39 108
 534 459 197  91 125 443 590  71 552 132 115   7 152  89 142 127 550 580  92 503 491 568 578  94 543
 586 190  87 105 537 101 393 603 522  83 187 419  52 240 532 131 451  67 486 397 408 460 495 139 154
 235 512 282 145 177 113 155 483 449  35 311  48 335 601 526 191 484  57 440 607 496 554 446  34 109
 471 194 171 530 158 203 253 215 510 221 223 230 144  63 620 600 243 487 548 616 168 422 224 213  98
 505 156 345 183 247 159 261 468 527 137  59 134 117 431  41 614 539 211 429 583 401 462 536 104 176
 525 518 379  14 200 172 199 232 160 244 218 330 357 474 581 210 466 262 294 476 477 396 226 179 236
 352 480 500 220 164 167 151 229 412 328 173 278 192 463 595 531 225 473 228 185 405 435 399 186  54
 481 323 288 135 198 250 163 513 387 245 287 300 188 395 413 392 331 107 319 268 234 241 490 617 260
 293 291 346 298 593 304 342 256 297 325 542 301 296 281 286 239 273 332 350 336 303 283 292 150 216
 308 317 347 327 270 356 266 613 289 265 318 411 383 233 257 254 415  81 175 324 315 369 309 280 343
 385 313 149 375 180 424 381 165 201 295 305 279 358 391 360 340 274 184 384 615 380  15 354 147 571
 284 302 339 414 157 196 361 231 100 326 252 368 382 193 410 404 547 447 255 316 227 498   9 454 353
 329  73 264 407 338 370 306 388 258 195 494 458  30  61 465 426 140 390 523 394 263 400 441  68 344
 237 461 373 363 541 562 367 444 362 418 417 364  10  26 276   6 321 427 337 238 129 182 251 249 464
 128 457 439 374 475 409 455  64 148 322 202 277 470 624 488  25 124 406 130 123 209 371 189 493 423
  44  97 433 320 403 540   1 174 499 428 573 420 467 421 111   5 359 453 222 217 214 365 432 489 138
 118 509 271 551 372  17 312 425 348 485 181 589 561 119  77 437 259 452 170  76 529  12  11 508 436
 285  74 398 569 351 502 519  82 133 533 511 492 528 307  93 479  36 501 355 110  62  88 106 570 141
 121 206 430 377 478 448 575 112  49 517 553 438 520 275 102 497 166 207   8  22 579  13  29 545 558
 219 299   4 598 516 269  72  47  46 386 576 434 612 246 162 389  43 507 402  38 334  21 442 619 544
 290   2 559 599 521 594  42 178 103 555 566 567 585 143 208 204  27 524 120  24  16 146  96 572 584
  20   3 565 557 592 366  58 122  31 574 546 560 608 588 514 161 126 549  79  60  95 114  23 604 310

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.56233e+06us (= 7562.33ms, 7.56233s)
Wall-clock time (full program): 7.61063e+06us (= 7610.63ms, 7.61063s)
Satisfaction error: 0
Number of search iterations: 2658
Number of local moves: 882 (including on plateau: 388)
Number of local minimum: 225 (including on plateau: 54)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 621 147 623 266  96 616 441 563  24  67 413  58  17  47  75 477  56 540 187 529 541  59 412 599 351
  23 538  18  81  62 344 619 597 339 593 143 188  53 321  21 500 310  61 507 461 454  85 493 425 589
  70 542 584 193 617 496 594 359  48  63 607  41  80  78  33 580 451  68 381 604 598  46 258 406  28
  37 105  76 110 588 390 482 418  90 156 612  77 157  50  71 556 331 494 453 456 123 620 561 536 276
 622 210  52 134 559 328 181 606 175  44 236 109 102 198 145 530 130 101 566 478 624 144 429 497 625
  39 194 124  64  82 573 513 531 115  84 509  91  83 121 192 572 464 596 411 387 171 169 595 527 618
 176 164 224 148 603 522 252 583 185 190 222  66 208 609 250 574 520 322 565 460 201  29 120 446 186
 183 114 129 103  65 567 551 363 386 214 455 223 167 471 330 553 519 613 539 373 127 189 168 204 219
 212 615 197 346 108 335 256 450 614 150 235 288 199 229  73 552 601 177 262 395 517 131 404 307 172
 313 257 165 261 586 510 426 408 246 255 151 119 191 267 106 308 240 217 525 577 394 205 419 554 125
 385 431 268 350 279 503 282 407 247 245 207 137 228 269 215 275 309 195 515 372 271 220 430 487 298
 203 241 263 343 349 420 170 166 182 196 300 248 333 336 414 304 347 340 533 306 327 402 575 231 296
 259 280 415 242 244 362 378 323 293 174 416 299 272 316 352 254 273 338 370 495 314 368 213 209 366
 278 284 357 377 286 265  45 369 516 312 325 486 302 417 422   5 439 465  74 355  98 364 283 398 303
 358 315 253 410 311 237 292 251 388 353  10 389 399  92 226 401 200 356 472 281 317 365 297 476 376
 337 354 379 467 324  51 459 162 380 555 384 375 391 287 403  93 332 227  49 152 348 434 436 230 216
 392 319 249 405 342 122 468 118  25 294 305 382 421 225 479 424  87 221 112 320 397 442 443 400 433
 290 396 526 502 544  86  32  36 457 360 444 550 532 423 462 211 270  26  30 239 374 506  27  55 447
 568 326 341 361 483  14 113  94 466 473 141 481 548 371 452 116 140 485  38  13 367 491 301 158 484
 511 445 547 600 475 274 490 163 318 329 449 393 345 458 524  54 184 133  31 291 432 128 153  79  19
 582 480 438 474   1 146 264 160 505 427 206 518 570 560 435  57 139 528  15  20 285 440 383 132  60
 605 437   8   2  40 289 233 260 545 608 470 585 543 590 508  97 499 469 334  42  72 295  35 104 155
 489  88 504 602 492  22  95 154 579 578 409 535 534  16 488 126   7 232 149 117 159 564 243 142 501
  34   6 587 463  12 135 100 173 179 591  69 576 581 562 592 202 549 610 546  99 178 558   9 180 234
 238 537 498 521 277 218  89 111 523 514 107 611 569 512 557   4 428  11 161   3 136 571 138  43 448

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.31075e+06us (= 3310.75ms, 3.31075s)
Wall-clock time (full program): 3.35974e+06us (= 3359.74ms, 3.35974s)
Satisfaction error: 0
Number of search iterations: 814
Number of local moves: 561 (including on plateau: 159)
Number of local minimum: 24 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 468 559  22 289  89 140 228 521 333 429  15 563 204   6 110 504 570 513 568 581 425  95 179 381  33
 413   1  63  37  23 503 585 533 187 556 588 557 183  61 287 498 565 528 109 441 263 129 209 431  75
 469  41 194 346 113  30 584 403  80 527 339 486 410 531 506 566 175 515  31 532 115 587  10 180  55
 616  79  62  88  78 154  94 416 210 421 547 578 146  14 167 572 545 302 382 593 519 200 452  17 573
 242 508 548 430  42 198 426  24 116 558  71 555   9 107 143 576 494 574 420 554 605  57   7 460 101
  87 144 474  53 340 250 582 351 137 461 538 350 358 158 510 128 472 377 208 114 500 131 265 467 370
 495 411 561 466 400  77  92  65 551 483 428 458  35 291 383 456 446  66   5 509   3 435  64 520 125
 391 399 405  69 549 120 453  19 436  25 522 562 281  70   8 552 437 259 364  39 485  54 206 540 580
 529 390 274 356 423 124 385 424  51 477 465 119  74 315  72 349 298 463 409  28 392  96 473 337 502
 314 511 454 459 215 147 244 478 480 447 362 442 375 267 126  20 406 330 310  12 386  27 395 293 325
  11 268 471 292 394 371 264 417 378 404 389 193 189 419  13 282 367 272 336 353 256 270 306 514 396
 357 438 439 338 334 191 384 235 328 414 233 374 372 319 216 297 219 218 308 149 243 236 332 401 450
 247 518 246 305 455  45 273 296 307 309 354 269 611 347 464 214 422 359 299  86  29 412 342 361 255
 482 335 258 279 181 138  98 277 212 598 577 257 348 170 294 369 229 174 316 312 301 536 202 260 622
 352 344 231 597 290 589 323   4 321 161  76 544 262 303 318 221 276 331 365 376 295 553 223 182 288
 541 222 199 284 271 285 159 445 326  47 201 205 224 343 569 415 283 433 184 261 240 602 560 313 213
 280 166 197 190 192 366  68 168 620  49 317 252 133 320 512 234 440 248 249 487 603 571 604 322 237
 355 105 241 211 451 398 152 501 543 387 142  32 481 324 550  36 207 345 327 443 195 457 397 373 172
 156 360 226 493 245 444 608 185 188  97 151 275 619 539 499 227 112 341 609 230  48 311 591 150 121
 196 238 239 111 368 600 329  93 145 118 253 388 300 579 524 491 122 136 171 623  56 408 594 176 567
 363 251 621 505 618 496 163 106 590 165 470 102 379 488 407  59 141 164 535 132 266 135 418 160  91
 178 186 103 595 612 516 155 479 427  82 169 157 497 162 434  73 380 130 278 617 484 286 203  58 564
   2 606 220 601 610 583 476 402 225  60  26  21 489 575  83  16 123 546 432  18 475 599  90  99 448
 108 592 615 127 393 523 596 534 517 507  50  46 614 625 100  84  44 134 525  81  34 148 177 613  38
 173 153 462 304 139 537 104 449 117  43 542  40 232 492 530 586  52  67  85 254 607 490 526 217 624

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.90518e+06us (= 5905.18ms, 5.90518s)
Wall-clock time (full program): 5.95524e+06us (= 5955.24ms, 5.95524s)
Satisfaction error: 0
Number of search iterations: 1935
Number of local moves: 685 (including on plateau: 257)
Number of local minimum: 159 (including on plateau: 33)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
   2  30 546  56 337  54 238 577 177 489 599 591 614  52   8  15  49 558 595 550 606 492 482   3 105
  62 189 516 507  51 576 119 309 137 584 593  36 592  46 520   6 548 167 521 470  12 508 151 510  95
 515  22 276 534 477 566  17  11 155 454 511 195 623 118 568 522  39  69  75 609 607 163  72 582  44
 486 569 203 562 532 419 117 174  93  26 535  50 574 124  53  38 512 148 397 561 528   1 301 601 221
 533 484  65 509 147 559 501 563  14 473 485  35 413  78 497 462  23 472 261 466   4  34 233 474  40
  61 444  10 540 475  37 490 538 235 456 427  60 604 279 549 294 506 450 366  59 440   5  16 287 197
 421 430  79 441 455 578  57 565  31 461 333 398  25 529  63 432 162 388  58 600 465 112 220 392 130
   7 437 252 447 383 325 115 245 223 386 543 396 493 451 319 402 418  13 286 479 527 254  42 250 132
 406   9  47 345 464 393 350  29 275 446 384 138 424 416 449 410 417 354 116 340 411 303 335 201 363
 438 442  68 381  77 394 296 356 114  41 415 338 409 448 359 431 395 405  20 443 342 332 161 379 341
 387 308 382 334 310 428 307 314 262 452  18 373 365 344 321 495 423 232 389 289  85 192 327 121 367
  55 488 330 375 445 460 422 348 207 239 404 129 463 299 369 358 313 349 399 390 120 169 230  64 400
 353 331 311 146 336 272 295 412 372 329 298 391 216 266 362 231 224 214 323 264 425 401 346 364 343
 259 184 317 277 594 352 328 433 306 244 339 453 360 491 300 145 282 253 347 292 158 280 293 255 283
 315 285 297 326 278 225 467 263 403 268 257 193 159 218 619 180 176 457 478 236 185 270 494 502 274
 215 385 476 305 355 240 157 211 370 210  86 173 322 166 267 613 251 208 552 371 256 435 544 420 237
 168 258 504 149 288 154 291 134 586 468 269 281 212 219 107 284 602 302 481 241 170 414 555 368 320
 260 139 571 196 209 290 217 625 378 150 226 318 198 206 205 101 265 615 200 459 213 483 596 187 519
 316 175 537 106 153  99 612 480 564 505 248 598 247 188 179  70  81 590 621  43 109 530 471 104 199
 547 108 436 229 554 583 122 204 380 135 165 123  32 246 202 579 181 611 172 249 183 531 524 271 458
 587 110 523 243 536 426 143  94 618  97  83 622 171 616 164 273 142 140 125 234 357 526 376  74 545
 514 581 222 573 113  27 407 186 361 133 194 541  33 517 580 103 144 191  66  48 567 588  82 551 503
  67 572 156  80  92 131 624 556 605  96 304 608 102 439 518 597 585 496 178  24 128 152  76 100 539
 351 228 324 136  91 111 620 127 525 542  21 603  84 570  87 557 498  45 312  19 553 242 429 190 560
 500 617 377  28  73 126 513  71 434 141  88 182  90 499 160 227 589  98 487  89 374 408 469 575 610

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.0048e+07us (= 10048ms, 10.048s)
Satisfaction error: 2
Number of search iterations: 3922
Number of local moves: 1062 (including on plateau: 417)
Number of local minimum: 332 (including on plateau: 54)
Number of resets: 2
Number of restarts: 0

Problem in row 3: 515 22 276 534 477 566 17 11 155 454 511 195 623 118 568 522 39 69 75 609 607 163 72 582 44 => the sum is 7824 rather than 7825
Problem in row 18: 260 139 571 196 209 290 217 625 378 150 226 318 198 206 205 101 265 615 200 459 213 483 596 187 519 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 318 107 332 414  64  26 352 140 609 588 583 110 616  44 114 357  86 105 574 446 596  65 606  22 551
 527 451  78 438  68 499 485 153  77 467 476 183 529  46 498 133  80 607 440 416  81  23 622  20 428
 576 429 613  60  45 138 612 368 490 362  67  63 121  50 502 462  93 621 534 524 113  25 610 208 139
 593  30 491 561 170  58 585 150 599 615 148 189  99  69 102 129  28 625 603 614  71 565 120 180 430
 500  49 177 176 402 617 597 605 405 510  66  48  94  33 193 547 244 458  98 528 608  43 104 142 581
 540 141 425 199  40 620 185 623 538 602 171 187 118 152  97 579 103 186 580 411 250 149 178 175 577
 483 572 445 230 157 211 558 435 245 452 226  47 272 331 115 117 134 179 433 548 563 111 218 198 545
 480 283 575 130 209 260 182 598 196 275 123  88 206 135 181 205 256 507 412 503 541 188 351 601 340
 398 482 517 271 241 184 240 225 504 191 207 215 203 270 166 301 573 132 453 431 344 323 221 571 162
 381 236 589 587 604 300 263 145 479 496 154 222 294 124 163 285 190 204 370 495 350 151 336 172 235
 371 567 455 169 159 229 161 373 322 481 343 220 137 248 328 450 420 247 302 512 251 288 282 201 309
 324 313 269 327 303 212 292 624 125 246 333 305 347 353 406 261 224 488 197 611 289  53 345 311 267
 375 310 358 342 258 274 216 392 366 223 217 147 348 417 239 320 374 264 243 298 329 469 266 321 459
 297 262 155 475 326 254 361 397 291   6 372 290 360 307 376 325 295 354 306 232 378 426 393 356 231
 227 401 284 346 355 367 494 385 280 253 304 564 364 403 281 338 334 399 400  72 213   9 404 278  70
 228 330 122 407 279 296 369 286 424 359 486 473 339 383 293 249 492 380  85  18 474 337  89 233 394
 259 158 116 252 421 363 418 341 255 422 101 268 335 384 410 522  14 377 396  56 299 391 349 509 409
 314 387 127 530 308 437  92   1 487 160 454 513 389 501  37  55 544  36 242 265 523 471 413 439 100
 165  73  75 388 365 464  17 468  21 549 390 379 584 449 427  35 442 457   3  38 434 550 531 505  16
 126 317  83 553 463  12 456 119  62 238 465 582 194 419 273 423 472 319 315  13 554 595  87 594  91
 112 395 436 164 386 415 514  82 287  74 443 543 557 508 542 108 484 448  59  79  19 408  54 552 156
  10 526 210 276 566 447  29 219  95   7 592 461  51 521 477 515 312  34 537 234  39 535 460 536 136
 174 493 316   8 520 546  24 146 470 168  11 578 533 516 466 519 556  52  42 143 214 591  27 173 539
  32   2 382 518 619  41 131 444 167   5 568 590 478 600 570 506 586 109  57  61  90 441 200  96 532
  15 511 195   4 497 555 192 106  31  76 525 560 257 562 569  84 489 237 144 277 202 618 559 432 128

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00502e+07us (= 10050.2ms, 10.0502s)
Satisfaction error: 2
Number of search iterations: 4229
Number of local moves: 1462 (including on plateau: 701)
Number of local minimum: 358 (including on plateau: 95)
Number of resets: 3
Number of restarts: 0

Problem in row 4: 593 30 491 561 170 58 585 150 599 615 148 189 99 69 102 129 28 625 603 614 71 565 120 180 430 => the sum is 7824 rather than 7825
Problem in row 6: 540 141 425 199 40 620 185 623 538 602 171 187 118 152 97 579 103 186 580 411 250 149 178 175 577 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 596 305 556  13 499 603 109 159 131  16 504  27  72 606 593 453  14 417 518  10 415 541  23 588  57
 223   1 569 113 255 546  77 378 176 522  94 181 291 574 559 553 342 515 252  98 516 224 180  85 501
  43  55  88 582 103  26 347 498 119 605 399  76 123 607 250 565 561  22 469 572 204  32 509 548 422
 147 177  59 317  31 625  91  63  46 488 336 613 257 467 485 287 575 580 597 129  28 299  25 480 623
 166 275   6 571 306 145  81  21 293 570 550 235  52 540 494 437 438 560 538 519 298 331 182  20 197
 134  35 528 477 338   8 379 200 254 447 122 160 307 452 442 532 421 486 584  40 130 127 323 385 514
 139 526 218 529 330  11 370 175 120 487  48 213 456 388 209 440 558 534  41 472 296 199 479 116 471
 510 364 419  71 360 143 265   3 201  65 371  75 234 390 489   2 459 458 482 340 503  90 451 525 555
  80 190 462 413 543 403  38 376 535 231 221  19 579 373 411 300  61  37 207 251 460 318 468 262 587
 248 115 547 592 394 325 173 269 241 202 443 104 405 264 457  82 188 289 337 466 341 144 441 277 481
 432 225 320 366 424 350 161  92 253 384 246 483 329  97 311 395 303 387 368 406 349 434 230 444  36
 240 279 448 243 344 310 335 404 237 508 233  53 611 386 351 319 286 108 332 278 322 198 382 355 263
 478  15 297 118 357 454 261 389 380 285 429 513 170 549 423 124 326  17 557 449 212 301 236 407  78
 398 420 183 551 302 282 273 408 567 304 295 132 135 238 455 189 226 362 430 101 598  50 260 358 308
 281 361 396 284 339   4 270 356 353 400 280 484 211 333 369 381 352 148 256 391 192 259 245 614 266
 244 439 276 536 206 227 507 372 345  56 590 521  12 359 493 568  44 162 232 141 111 229 313 247 595
 184 491 268 348 520 367 433 193 171 602 155 512 219  51 258 125 292 401   9  49 537 450 153 475 562
 576 490 217 179 172 290  96 618 474 216 581 377 156 383  89 191 288  64 169 511 249 615 502 283  39
 410 375 186 334 552 185 426 578 425 126 527 500 163 210 149 136 222 294 363 214 566 473 174 154  83
 392 589 506 187 208 577 435 409 464 107 152 545 194 203 215 314 121 497 239 624 195   5 431  99 117
 495 267 140  33 600 542 539 446 309 530 150 531 591  34  66  95 412 157  45 151 594 496 228 100 274
 599 563   7 619 142 544 617 620 610 196  69 316 585  42  30 205  74 583 476 133 112 414 102  62 105
 168 427 601 165 321 110 524 312 470 354 164 393 505  47 138 465 428 146  73 586 137 517 608  87  79
 315 621  67 114  86 402 573 328 523 106 374 365 564  54  60 324 416 533 167 622  24 616 271 242  58
 327 220 461  70  93 346 445 158 128  18 492 397 604 178  29 343 418  68  84 272 436 463 609 612 554

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.65977e+06us (= 6659.77ms, 6.65977s)
Wall-clock time (full program): 6.70938e+06us (= 6709.38ms, 6.70938s)
Satisfaction error: 0
Number of search iterations: 2492
Number of local moves: 986 (including on plateau: 465)
Number of local minimum: 223 (including on plateau: 60)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 605 415  12 475   7 548 454 239 536 523  19 543   2 171 525 570 602  11 124 125  40 573 595  73  38
  17 609   4 445 151  74 502 484  61  88  28 580 509 552 558  33 592 586 489 313 182   6 413 496  53
  21 273 269  96 188 549 596  95 204 557  71 534 553 378 568 429 577 457 148  24  44  32 102 506 554
 108 590  54 416  27 479 268 265  41 563  31 601 452 161 424   3 512 585 169 168 544 248 539   5 572
 492 430 150 220 103  84 527 202  29 468  13 521 540 469 463 550 267 537   1 122 104 500 535  72 426
 482 444 206  70  14  56 327 198  62 376 140 495 461 136 575 387 607 508  59 274 510 551 398  18 471
 394 528 221  15  58 520  37 201 435 494  22 564 518 448 594 476 460 483 250  36 402  35  89  99 446
  52  57 170 375 105 399 459 283 401 542 308 370 246 453 419 371 519 100  51 210 363 390 365 421 396
 456 442 187 359  67 478 346 114 409 381 422 593 474  26  25 240 203 369 167 405 545 417  42 357 301
 414 507 225 407 251 384 477  87 207 467 393 431 339 111 321 216 352 238 180 249 366 514  81 382 226
 299  65 191 408 281 395 349 412 451 325 379 217 350 314  23 377 334 418 159 306 356 312 432 410 262
 386 344 214 322 337 388 434 211 329 234 348 232 309 235 440 465 231 241 362 374 443 260 242 286 158
 319  66 320 438 328 279 345 342 213 515 338 290 307 392 385 354 154 358 326 173 333 343 400 335 172
 389 486 455 205 587 332 292 341 380 183 351 330 278 302 289 115 340 324 383 293 317 186 236 257 174
 272 285 275 277 617 254 263 288 303 323 473 219 176 209 353 485 331 311 480 411 316 119 310 296 179
 364 256 367 200 336 425 315 304 143 243 530 355 109 230 295 347 237 420 318 493 233 498 258 244 305
 287 466 513 504 516 391 163 462 614 212 185 166 208 531 123 195 133 184 368 546 120 107 190 361 280
 294 152 501 470 282 145 142 625 437 298 157 194 229 610 160 503 175 297 427 581 116 138 147 127 618
 196 222 436 559 574 264 624 403 270 218 224 134 178 526 300  78 261 155 284 433 252 423 458 189 164
  50 227 567 156 481 620  91 497 584 228 622 132 255 464 291 199 113 130 571 197 276 253 129 566 126
 247 215 490 153 259 177 162 449 597 245 603 112  60 524 373 181  77 128 491 588 613 139 397 511  34
 533  43 562 612 623 117 110 582 106  90 600  80 560 360  98  94  63 487 439 141 569 193 165 529  69
 547  49 266 488 608  47  39 576 135  86 556  79  30  55 121  64 583 192 541 149 604 522 271 611 606
 555 517 591   9 619  16 131  68 428 118 565   8 144  93  10 621  82 223 598 615  76 505 532  85 616
  46 137 579 146 406 404 372  97 450  48 447  45 538  75  92 472  20  83 441 599 101 561 499 589 578

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00517e+07us (= 10051.7ms, 10.0517s)
Satisfaction error: 2
Number of search iterations: 4226
Number of local moves: 1365 (including on plateau: 732)
Number of local minimum: 331 (including on plateau: 80)
Number of resets: 2
Number of restarts: 0

Problem in column 19: 124 489 148 169 1 59 250 51 167 180 159 362 326 383 480 318 368 427 284 571 491 439 541 598 441 => the sum is 7826 rather than 7825
Problem in column 25: 38 53 554 572 426 471 446 396 301 226 262 158 172 174 179 305 280 618 164 126 34 69 606 616 578 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 617 363 570  89  17 168 295  64 370 388 607  93 123 106 216  35 399 571 329 397  54 591 618 582 163
  12 619 561 154 200  74 379  94 625 562  99  75 556  62  90 564 103 515 614 590  59 435 501 205  77
  49 134 624 117 162 483 598  76 447 489 532  38  71  58 152 281  31 608 115 273 401 414 547 508 616
  97 475 179  70 507  55 544  85 553 197 602 129  82 573 126 464 101 509 176 357 524 623 173 538  86
  57 300 471 185 189 155 599 224 565 567 118 369 476 208 128 605 138 610 165 144 613 402 147 158 232
 543 604 198 572 145 209 577 180 569  20 301 136 193  72 215 332  69 433 132 621 463 479  37 601 124
 148 454 497 312 230 113 620 146 310 174 121 494 583 426 178 550 228 210 371 247 330 481 184 254 164
 169 263 594 187 514  56 603 592 225 255  88 201 130 190 202 488 137 380 486 157 297 527 326 566 192
 133 233 226 203 131 257 393 317 461 125 291 398 520 485 250 563 400 206 229 161 385 536 177 504 241
 172 149 213 214 151 589 484 348 127 597 531 521 314 261 294 358 237 387 240 195 347 298 279 323 196
 220 199 288 156 267 272 490 275 299 296 270 411 139 349 430 586 249 478 355 227 109 560 307 217 376
 405 283 446  61 339 309 251 407 576 246 277 431 519 204 181 182 346 207 258 328 231 311 333 308 386
 266 404 286 325 336 222 327 236 437 352 341 171 350 282 392 321 271 256 390 304 316 441 289 218 293
 367 361 315 259 353 444 140 351 274 265 450  44 287 372 324 429 343 365 238 278 425 419 320 191 211
 364 284 264 467 360 374   9 335 219 384 377 319 415 420 383 104 143 338 452 285 260 337 212 389 331
 239 413 442 458  25 253 269 455 460  21 453  84 375  83 356 186 427 160 472 416 243 183 473 445 434
 382 395 424 362 546 422 142 313 120 303 340 451 457 344 150  32  30 306 410 378  19 153 436 440 470
 449  91 167 368 522 322 223 305 499 359 491 235  48 141 381 110 525 276 242 496 194 108 503 170 600
 500 403  87 418 318 409 290 526  63 252 443 221 234 302 533  81 517  11  78 396 345  24 412 456 506
 466  79 102 459 394  36 107 342  53 408 432 516  96 354 593 498 448 462 292  51 554  22 542  50 469
 493  95 248 548   7 535  68 417  42   1 528 244 487 505 534  46 492 334 537 574  26 166   2 468 428
 557 100 112  18 510 559  92 245 391 530  41 529 555 421   8 262 512  98 568 406  33 122 465  80 611
  16 439 280 612 438 480  47 578  73 423  67 511 175 474 606 268 575  34  60   3 539  13 513  14 587
 622 580  43 596 585 552 159 373  40 495  15 595  52 584 558 114 523  66  65 502 540  45   6 111   4
 482 105 188 615 579 477 119 541  27 116  10 609 588 549 545 366 581   5 551  39 518 135  23  29  28

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00509e+07us (= 10050.9ms, 10.0509s)
Satisfaction error: 2
Number of search iterations: 3914
Number of local moves: 1010 (including on plateau: 452)
Number of local minimum: 335 (including on plateau: 62)
Number of resets: 2
Number of restarts: 0

Problem in row 3: 49 134 624 117 162 483 598 76 447 489 532 38 71 58 152 281 31 608 115 273 401 414 547 508 616 => the sum is 7824 rather than 7825
Problem in row 13: 266 404 286 325 336 222 327 236 437 352 341 171 350 282 392 321 271 256 390 304 316 441 289 218 293 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  44 551 587 616 581 606 620  83 505 180  68  82  64  87 577 100  24  71  91 506  42  77 565 504 594
 186 613  75 564 614 410 625  96 595  40  52  43  49  67 611  80  39 420 477 408 509 152 131 352 617
  63 567 619 622  37 578  73 496 597 574  60 545  81  61 379  56 121 123  86 124 610 113 582 167 491
 624 556  53 276  89 602  30  78 369 372  45 568  72 159 576 396  99 160 262 596 130 413 104 604 592
 181 541 166 601 584 429  51 450 607 572 147 128 208 108 211 498  55  54  74 553 605 161 177 200 464
 173 495 196 421 598 486 141 174 593 609 148 119 194 320 140 523 183 125 163 615 227  35 189 503 455
 314 599 103 555 360 621 397 187 446 378 129  92 134 118  97 289 236 178 386 566 560 210 462 149 259
 264 375 327 277 145 389 368 158 508 527 306 150 336 193 218 439 179 623 212 431 143 170 308 312 467
 521 282 126 400 243 415 171 591 203 590 106 299 198 217 220 441 612 215 271 350 207 122 538 239 248
 293 275 244 323 201 317 157 225 270 468 274 107 338 588 234 618 254 313 246 346 251 544 331 395 213
 279 460 356 461 115 384 307 411 390 337 456 353  85 205 278 252 111 237 315 333 404 348 374 301 273
 165 424 332 300 383 310 280 603 344 297 283 392 245 206 263 432 524 269 305 284 182 253 247 242 260
 229 341 290 291 240 285 575 371 250 292 199 422 451 519 403 319 330 184 304 226 176 228 334 224 342
 256 281 204 351 268 311 261  66 326 440 364 385 303 335 322 231 380 492 471 339 376 343 406  28 286
 255 295 434 365 407 302 393 266 363  47  14 463 391 287 233 316 357 340 362 387 401 444 197 249 257
 294 168 417 209 428  79 427 366 169  38 359 329 324 321 418 347 458 531 188 354  21 399 296 480 405
 192 216 398 195 373 191  46  33 137 419 530 470 370 535 394 221 433 382 465 325 500 135  17 490 358
 448  98 452  22 563 144 472 117 175  59 515 416 272 485 469 120 388 426 497 116 483 512 409  25 142
 550  90 487 139 377 151  10 402 154 288 580 345 355 298 510 101 435 430 349   6 222 494 481 457 114
 438 202 526 102  23 185 473 586  93 109 562  32 559 454 489 190 230   5 569  11 105 443 414 589 436
 381  58 511  76  34  65 466 534 110 328 514 474 478 558  18 127 318 501 499 132  62 532 447 533  69
 484  50 475 267 449 136 437 258 138  26 536 479 561 493  15 309 546 547 442  29 522  12 445 162   7
 549   9   8  48  20  70 476 554  95 488 525 557 570 482 219 361 425 528  31 241 542 502   1 520   4
 585 238 412 112 529 265 423 172 235 214 513  36 579 156 518 507 517 516 223  88   2 583 367  16  19
  57  41  27 232 164  94 146 548 153 133 540 539 608 573  13 552 571 155 537 459 543 600   3  84 453

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.90119e+06us (= 4901.19ms, 4.90119s)
Wall-clock time (full program): 4.95097e+06us (= 4950.97ms, 4.95097s)
Satisfaction error: 0
Number of search iterations: 1441
Number of local moves: 640 (including on plateau: 229)
Number of local minimum: 110 (including on plateau: 41)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 227 503 619 564  92  35 530 490 554 125  48 552 404 124 518 203 591  81 193 118 485  32  36 104 597
 605 497  97 571 475 506 132 221 572  77  24 501 167  50 614  27 171 602   9 296 594  73 205 246 493
 625 297 623 615 143  11  25  41  31 258  71 470  83  85 558 243 310 584 225 342 429  76 596 570 514
 138 575 622 260  86 146  10 159 235 197 586 502 532 156 249 401  91 224 189 256 624 611 112 304 560
 383 460  98  54 395  39 617 539 523 152 573 454 534 140 551 164  65 251 128  60   1 154 579 550 361
 511 492 240 414 244 582 207 250 288 281 119 547 568  42 510 212 230  23 170 606 499 248  47 439  56
 185 217 371 483 598 607 576 424 194 233 196 451 201 147 441 106 141 469 324 110 127 100 176 426 522
 238 236 479 334 315 173 264 160 521 228 165 402 381 347 279 103 254 543 252 540 431 151 155 261 613
 163 542 218 278 213 507 105 612 512 287 188 549 198 314 325 482 162  90 273 157 300 123 536 533 158
 556 428 320 587 373 135 301 186 220 184 121 298 557 270 359 360 245 577 175  52 299 166 321 305 430
 286 609 559 393 257 265 204 182 538 214 365 179 181 168 455   5 187 145 263 268 407 620 303 498 274
 120 307 191 354 247 339 412 180 346 222 232 199 457 356 390 461 422 311  67 358 312 352 269 433 488
 343 292 178 444 216 302 348 349 294 323 211 355 378 317 271 328 463 234 133 239 341 453 363 508 142
  45 285 262 226 413 313  40 410 411 437 283 237  13 290 291 524 177 423 569 403 384 316 389 242 442
 253 210  63 282   2 405 372 471 489 231 435 465 419 267 332 153 409   4 357 408 527 353 616 215  87
  58 137 474 139 484 289 379 350 329 387 376 440 420 344  33 308 367   7 601 380 107 375 385 209 447
 487 174 374 108 466  66 345  82   3 377 241 169 370 464 382 255 397 432 337 473 504 406 327 306 280
 445  95 546 223 418 604 529 362 161 417 574 400  37 319  57 144 275 434 130  69 366 486 351 322  61
 491 206  94 183 449 600   6 456 172 452 388 101  14 505  74 585 293 284 392 318 396 526 425 331  84
 520  88  78 369 338 272 394 330 416 427 326  17 129 450 472 500 336 368 438 149 443 481 259 195  30
 200 603 114  99  72 276 333 415 436 496 580  80 113 494  15 364 480 516 340 544   8 513  49  64 621
  53 111 519  79  38 531 541  62 462 266 459  16 567 517  96 335 477 421 509 478  28 102 563 525  70
 229 122  75  43 458 398 548 555  21 578 117  55 515 553 386 391 595 476 581 590  20  51 202 116 150
  46  44 599 592 467 309 208 446  29 448 610 109  22 545 148 583 495 136 608 593 134 468  26  34 126
 618 295  12 131 566 115 399  93  68 528 537 277 565 561  19 588 192 190 562  18  59 589 535  89 219

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.12752e+06us (= 7127.52ms, 7.12752s)
Wall-clock time (full program): 7.17861e+06us (= 7178.61ms, 7.17861s)
Satisfaction error: 0
Number of search iterations: 2531
Number of local moves: 926 (including on plateau: 477)
Number of local minimum: 207 (including on plateau: 60)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 294  72 587 608 302 612 111  88 604 387 116 435 596  43 400  20 535 607  45 146 459  46  55  74 583
 522 322  50 611 113 496  62 536 475 228  52 588 151  21 409  40 104 511 133 601 542  42  24 613 579
 512 183  86 625  91 602 201 619 323 242 223 560 106 102 196  89 163 530 407 438 595  99 606  75 152
 498  26 493 373 559 603 127 103  59 618  38 213 558  18 615 128 160 449  77 568 488 599 156 194 105
 532  69  73 622 364 422 112 614 592 129 131 555 572 177 621  81 175 616 114 169 351 206 210 220  98
 474 193  56 598 230 538 403 148 345 168 439 224 570  78 487 200 187 597 164 576 501 161 185 132 171
 581 491 149 421 264 510 346 140 617 209 139 283 121 290 473 138 165 609 159 162 556 354 289 215 144
 212 219 181 399 100 433 298 393 584 580 529 208 429 281 333 280 275 453 191 211 455 198 295 130 158
 562 291 287 286 150 569 234 120 563 316 494 203 319  65 623 124 620 416 126 216 516 250 199  39 237
 238 221  31 425 217 260 266 254 261 229 330 247 313 314 605 406 184 624 231 227 390 324 600 349 278
 244 410 417 537 325 269 117 197 279 448 308 263 376 239 225 356 110 315 335 312 565 262 342 317 257
 173 371 226 370 297 306 415 437 347 233 362 329 396 411 153 380 305 214 492 300 357 204 180 321 246
 418 358 331 143 236 365 384 190 303 232 272 271 296 240 340 327 334 367 424 363 259 320 304 430 318
 368 355 395   8 457 310 397 414  94 253 265 378 379 401 466 467 500 328 218 341 277  82 344  19 309
 361 255 377 195 386 134  27 404 427 336 419 460 428 369 222 282 503 307 350 352  29 385  53 405 359
 337   6 332 182 423 476 392  67 115 338 353 440 292 372 343 454 477 205 249 274 108 382 398 471 339
 497 394 276 251  37 202 293 426 256 273 375 552  25 245 267 383 444  36 502 348  61 388 505 381 408
  11 509 391  93 374  95 464  16 508 154  90 412 451 452 179 547 366 142 481  79 243 462 360 515 431
 458 478 446 268 447  49  58 485  66 389 170 472 101 465  30 270 461  70  23 484 155 402 479 553 546
 188 468 534  41 456 189 610 432 135 470 436  10 445 543 192 207 490  14 284  22 186 420 258 241 554
 141 528 504 167  13  34 441 521 166 299 434  15 157 506 172 480 109  97 578 450 311 548 137 531 486
   2 550 539 248 285 145 585 520  85 123 176  57  71 519  44 499 507 107 524 136  33 566 483 526 495
 147 590   5  80 582  83 557  28 301 469 513  63 551 549  12 593  64  76 574 442 235 525 252  17 518
  51   3 545  96 523   1 482 589  32 577 586 413  54 561  92 541  60  87 573 119 118 591 544 540  47
   4 463 514 178 594 122 443  84 288 125 575 174  68 564 326 533 527  48 571 489  35   9 567 517   7

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00506e+07us (= 10050.6ms, 10.0506s)
Satisfaction error: 2
Number of search iterations: 3827
Number of local moves: 1442 (including on plateau: 701)
Number of local minimum: 296 (including on plateau: 68)
Number of resets: 2
Number of restarts: 0

Problem in row 10: 238 221 31 425 217 260 266 254 261 229 330 247 313 314 605 406 184 624 231 227 390 324 600 349 278 => the sum is 7824 rather than 7825
Problem in row 23: 147 590 5 80 582 83 557 28 301 469 513 63 551 549 12 593 64 76 574 442 235 525 252 17 518 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 228 198 212 466 543 452 482 104 446 433  47 135 461 147 405   5 596 529 485 209 137  16 180 391 518
 183 583 114 501 402 190 156  90 513 593  98 138 603 428 457 420 534 490 550   3   2 535 179   6  57
 110  49 617 283  66 577 160  82  42 182 561 560  92  96 481   8 426 498 547  71 605 532 580  31 569
 465 526  61  13 556 125  62 189  43 473  38  75 345 487 443 522 269  52 597 291 440 524 416 528 285
  29 265 625  55 562 375 411  87 118 272 193  22 567 244 166  32 384 200 622 257  14 475 612 624 614
 442 219  50 176 418  10 541  48 585 570 117 163 146 149 404 480 454 587  85 555 240 551 214 226 395
 224 507  97 154 453 544 106 274 455 512 270  68   7 326 400 365 439 401  41 178 370 546 341 496 251
 435 527 468  28 450 525  26  24 488 298 448 282 478 486 141 483 459  17 344 252 499  51  63 124 429
 586 334 619 162 471 590 460 437   9 338 337 407 472 103  74 130  12 328 531 202  77 236  73 403 434
 574 364 336 306 497  59  93 358 393  25 304 373  30 608 349 115 127 423 311 319 449 310 503 264 335
 383 356 353 143 366 174 293  11 249 436 378 502 462 441 479 242 301 493 332 139 113 408 308 377  86
 564 263 363 470 230 340 112 516 276 321 243 267 289 261  36 394 167 225 533 317 360 277 134 359 508
 431 510 221 290 266 413 303 409 361   4 288 312 307 421 376 294 325 329  94 268 207 300 419 362 315
 347 313 177 553 122 374 589 322 279 318 239 386 197 271 339  84 188 346 456 406 414 350 205 153 397
 255 258 558 222 296 217  67 287 351 537 343  80 549 254 568 592 477 111 220 148 186 231 286 281 451
 331 227 552 299 284 578 571 248 260 150 348 447 368 246 417   1 382 438 158 390 320 352 165 278  15
 565 192 223 520  99 216 161 464 500 324 422 199 591 181  33 157 354 399 579 327 191  72 302 495 259
 412 232 542 539 211 280 233 467 238  54 101 427 387 201 206 613 208 247 210 476 519 185 253  69 515
  70 187  89 330 342 133 511 557 372 100 469 506 159 371 492 237 140 545 611 256 184 203 509 432  20
  60 172 116 504 151 623 175 610 120 169 620 582 295 494  83 600  81 196 164 598 540 234 131 355 152
  27 229 581 379 275 262 554 523  53 538 173 572 107 144 463 517 396  78  88 323 292 241 548 367  95
 250 195 392 595 119  64 129 128 136 314 521 505 474  35 316 215 618  39 121 273 425 559 357 601 444
  91 484 194 588 445 621 566 415 369 388 573 132 126 530 155 108 218 171  58 594 213  21 615  45 105
 430  19 142 170 145  37 489 599 606 458 309 305 109 491 245 602 168 607  23 584 424 381 398  44  40
 333 616 123  79  56  46 575 576 563  18 385 380 204 410 297 609 102  76  65 389 604 235  34 514 536

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.34919e+06us (= 7349.19ms, 7.34919s)
Wall-clock time (full program): 7.39874e+06us (= 7398.74ms, 7.39874s)
Satisfaction error: 0
Number of search iterations: 3001
Number of local moves: 1070 (including on plateau: 507)
Number of local minimum: 258 (including on plateau: 67)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  61 391 175  60 238 575 381  47 619 620  46 138  99  17  52 112 596 225 586 591 232 605 266 481 612
 604 410 573  72 379 535 597 550 152 240 347  30 160  48 510  25 101 123 343 326 155 557 169 616 203
 476 454 276 107 582 190 213 499 584 191 122 115  40 328 355 143 588 187 614  41 519 337 621  70 173
 487 479  31 579 211 163 273 625 162 170 176  85 418  86 202 284 285 278 576 589 235 552 549 234  96
 231 542 594  76 492  45 466  58 555 572  50  32 314 609 539 348  78 194 336 365 607 118 233 171 200
 611 606 116 167 532 459 262  64   5 411 111 394 402 274 488 299 486 520 248 545 205 166 195 128 131
 497 243  35 383 533 380 610 456 132 298 613 333 244 146 468 157 615 159 214 197 204 150 242 142 374
 493 104 110 602 447 432  28 335 530 309 444 565 161 563 534 505 257  10 429 113 207 129  91 181 246
 385 105  42 255 426 478 251  97 624 165 443 121 441 384  90 228 364 548 448 455 158 395 283 206 433
 377 219 164 598 463 400 263 595 451 352 544 346 130 363 259 145  36 252 425 439 528  84 136 193  63
 245 406 421 291 431 474 210 102 477 154 370 577 538 174 315 179 376 323 149 217 230 362 237 286 281
 324 361 356 345 218 462 482 271 265 339 446  19 303 312 320 369 261 317 188 401 208 114 390 258 496
 372  23 500 297 270 412  79 222  62 358 264 267 332 322 507 460 578 302 239 340 290 354 295 427 253
 382 209 407 172  21 226 405 622 147 306 585  39  75 480 133 511  57 398 409 461 277 304 393 392 414
 313 289  53 422 329 182 386 408 334   7 321 458 583 342 287  66 450 341 378 388 404 424 373 279   8
  83 319 587 387 199 186 288 430 196 600  88 137 327 437 119 564  74 135 330 489 223 331 127 561 608
 307 623 316 435 268 126 517 357 301 220 139 367 465 371 592  80 168 359  98  69  37 571 472 229 338
 241 403 452 415 537 156 344 375 153  26 189 554 180 419  82 556 280 151 292  43 457 536 215 349 420
 525  55 134 470 353 148  12  13 250 366 311 184 513 453 543 516 221 120 212 293 593 282 269 506 483
 360 249 389 396  59 434  34 275 325 514 192 540 618 518  22  67   9 498 296  29  33 495 467 522 484
 124 413 445 436 236  16 541 524   4 558  44 183  68 473   1 428 449 566 308 318 485 141 547 490  27
  95 227 416  20  54 567 177 527 247  87 531 617 471 399 125 351 144 508 310 523 475  65  81 305 503
 108 553 178 260   3 501 491   2 464  56 580 570 502 198 350 504 568 581 216 469  94  51  14 494  18
 109  49 526   6 106  77 442 254 562 509 569 551 256  38 417 560 272 590  92 100 546 103 559  11 521
  15  93 529 574 438 201  73 117 224 397 300 603 185  71 515 368 512 140  89  24 423 599 601 294 440

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.55815e+06us (= 9558.15ms, 9.55815s)
Wall-clock time (full program): 9.60735e+06us (= 9607.35ms, 9.60735s)
Satisfaction error: 0
Number of search iterations: 3508
Number of local moves: 1330 (including on plateau: 614)
Number of local minimum: 311 (including on plateau: 67)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 493 540 255 447 127 528 125 216 571  42 227 558  59 101 486 204 536 601 505  16 556   9   7 386 230
  85 173 514  45 559   8 339 574 373  35 203  67 370 527  64 461 383 583 459 577 115  73  98 602 538
 539 547 177 276 533 158 593 354 379 476  11 347  30  74  18  25 526 353 496  84 398 469   3 482 477
  27 566  33 575 335 489 471 443 446 133 589 537  48 550  28  21 172 413 290 176 529   4 506  26 418
 480 393 196  50 152 434 287 432 363 464 428 212 120 452 362 182 598 524 463  14 214 466  79 423  37
 522  36 217 123 541 163 484 511 106 495 509  13 472 499 431  10 502 318 492 293 425 410  90 110  53
  78 415 544 281 517 622 278 151 523  96 334 252  55   1 397 474 126 436 518 275 546  65 270 430 141
 457 403 103 170 389 381 401 328 239 237 491 510  60 420 503  99 372 118 394 462 352 327  94 289 226
 465 422 134  86 445 234 360 440 183 473 507  41 429 222 396 405 249 414 209 343 333 406 253 361  15
 404  56 191 258 475 374 490 284 424 213 301 305 122 375 272 501 357 316 283 264 294 341 241 392 292
 407 344 247 297 382 408 321 336 207 368 219 211 326 377 307 155 387 271 552 231 332 298 320 330 192
 331 562 235  22 358 198  57 605 376 378 433 388 366 303 256 229 500 233 390  61 238 265 369 349 323
 312 240 277  54 395 454 282 521 224 356 579 206   6 302 245 228 554 348 427 468 322 310 291 105 319
 244 458 223   5 266 435 342 313 345 329 108 309 417 220 578 225 269 280 400 359 273 402 337 364 324
  19 338 181 419 267 263 611 610 221 190 286 261 299 236  47 179 180 608 159 251 497 567 288 591 257
 161 543 485 498 250  69 201 470 135 442 416 202 295 164 185 242 460 409 168 149 384 259 607 143 488
 268 254 437 450 194 603 585 260 340 175 148 160 560 186 569 600 594  92   2  83 147 308 218 399 193
 576 119 367 582 169 592 138  34 200 311 315 597 128 614 350 165  63 371 187 121 199 351 479 346 451
 565 166 153 426 174 210 171 150 215 412 306 243 487  52 197 623 124 205 441 609  58 157 448 617 616
  51 112 508 467 114 545 136  97 285 535 530 564 504 156  76 262 140 137 130 439 167 551 421 581 317
  66 145 444 553 296 117 557 146 246 154  80 587 572 188 325 519  88  77 232 532 618 142 586 102 453
  31  44 612 449 568 104 385  40  71 570 516 624 525  24 596 513 131 113 208 534 162 314 116 184 391
 563 455 561  87 144 279  70 355 595 139  12  62 515 542 411 625  20 481  91 531  43 478 590  95  81
  93 456 248 606  75  68 109 132 580 613 195 520 512 619 111 274 129  17  29 573 584 304 494  46 438
 588  38 483 599 100  89  32  23 178 189  82  49 548 621 615 604 365 107 300 380  39 549 620  72 555

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.40439e+06us (= 7404.39ms, 7.40439s)
Wall-clock time (full program): 7.45372e+06us (= 7453.72ms, 7.45372s)
Satisfaction error: 0
Number of search iterations: 2508
Number of local moves: 855 (including on plateau: 316)
Number of local minimum: 215 (including on plateau: 52)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 494  26 585  66  13  15 536   9   1 563 522 586  69 255 210  19  61 136 572 520 557 544 605 569 292
 151  50  24 584 570  59 545  71 220 591 623 460 164 133 452  73 420  60 568 184 588 531 429  70 205
   6  72 212 508 583 546 562  18 578 600 130   7  62 547 283  23 480  41 505 599 595 176  25 616  51
   5 188 396  27 565  74 469  33 579 542 598   2 299 470  38  21 137 512 573 419 534 348 555 421  20
 455  10 612 410 602 118   3 181  58 403 359  11  94 524 444 183 407 526 486 334  17 476 596 409 107
  96 227 511 510 556  54 428 453  34 592 411 564  44 117 532   4 206 415 549 471 113 198 552  77 111
  43 124  46 488 492 443 554 356  79 550 447 387 450  64 123 514 318 375  30 440 441  81 435 503  42
  95 314 539 385  14 145 345 427 491 468 483 425  53  56  28 507 417 230 336 361 461 180 449 458 158
  67 172 399 497 366 194 197 504 445 426 433 463 223  39  83 350 481 401 502 423 365 143 333 216 103
 413   8 509  45 122 391 349 454 477 322 484 464 187 474 311 207 327 517 337 285 402 127 240 342  31
 175 437  80 457 338 290 209 235 465 462 266 251 321 324 179 378 189 310 147 412 369 276 414 473 368
 248 352 395 191 351 372 245 279 141 234 422 459 307 339 259 383 155 301 392 313 316 370 418 355 228
 400 371 174 367 328 317 363 382 282  22 398 264 304 200 439 262 405 325 360 190 358 393 296 394 231
 300 442 267 308 286 254 384 273 284 388 377 406 243 241 319 364 390 239 303 332 294 217 315 225 374
 323 305 269 312 376 326 608 309 236 195 533 270 261 302 496 389 196 213  87 408 221 275 263 271 381
 344 346 357 289 362 436 114 331 260 277 353 343 601 540 226 287 335 280  49 214 163 380 186 320 432
 479 482 297 199 171 274 192 574 624 373 156 237 513  91 566 379 203 178 146 204 148 622 166 258 293
 487 341 185 246 138 581 256 288 224  35  12 202 575 607 129 238 177 499 295 354 278 559 265 257 597
 475 619 247 193 218 211 528 434 281 201 208 615 609 222 620 169 157 253 150 244 252 154  68 159 538
 438 589 386 272  89 291  76 219 144 110 161 135 489 611 582 587  63 530 115 249 232 525 250 215 467
 498 548  32 126 268 347 100 128 229 153 160 621 298 576 108 448 590 149 485 101 606 543 170 125 416
 593 165 523 330  84 506  93 167  97  52 132 102 446 451 131 560 603  98 610 121 242 139 521 501 558
 551 519 613 142 182 430 105 571 577  47  88 431 162 168 541 515 495 529 109 112  85  48 106 119 580
 516 500  92 567 233 537 140 535 466  99  29  55 561 134 397 472  86 604  37 478 152 404  90  16 625
 173 618  75 306 518 614 424 594 553 120  40  65 490 340 329 493 527 104  82  57  36 116  78 456 617

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00502e+07us (= 10050.2ms, 10.0502s)
Satisfaction error: 1
Number of search iterations: 4314
Number of local moves: 1439 (including on plateau: 626)
Number of local minimum: 426 (including on plateau: 81)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 1: 292 70 25 348 17 471 30 230 481 207 179 339 304 406 533 277 624 288 528 291 268 330 613 500 173 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  14 108  84 560  70  54 606 534 146  53  73 516 593  46 389 354  91 598  23 541 609  40 624 523 576
 116 608  97  87  99  76 610 510 441  67 123 336 504 622 530 409 133 613   3 538  39  92 623 528  21
  49 531 619 585  42  56 449 478 153 170  86 542 166 535 566  98 329 513  26 621 117  64 482 526  22
 191 550 584 498  78  69 100 551 111 262 407 597 596 580 412 484  96 140 165 518  48 536  61 147  44
 158 586 112 556 155 144  57 395 355 135  65 572 138 228 595 467 594 521 131 244 195 278 532 540  72
 132 574  66 174 603 562 193 592  74 246 210 333  43 605 445 589 199 186 102 620 396  25 231 148 477
  59 134 121  62 362 254 612 418 178 517 184 308 224 213 151 512 514 393 237 564 607 192 578 286 145
 149 171 234 152 509 548 249 341 269 198 226 182 119 257 283 266 616 163 130 552 187 383 555 600 486
 179 261 448 128 229 338 255 406 617 137 315 109 604 375 101 565 625 216 142 183 167 253 188 414 570
 197  93 154 212 479 420 373 399 476 602 242 105 159 235 474 473 274 296 194 287 245 611 189 428 208
 309 618 239 601 392 202 240 436 496 218 248 260 322 120 223 252 271 284 520 276 386 367 207 214 124
 365 206 172 297 437 251 382 374 270 247 294 376 303 380 272 416 258 282 350 290 311 402 280 391 219
 292 363 304 291 310 295 238 279 275 298 314 301 265 323 360 404 256 366 288 410 328 349 264 422 230
 268 203 263 307 401 453 241 222 343 432 313 319 277 227 201 225 289 347 334 387 440 352 348 340 293
 471 460  35 345 302 430 339 221 331 332  20 267 351 358 285 169 281 423 378 438 306 318 368 236 361
 369 394 356 390 162 413 325 215  38  47 571  52 312 326 417 434 176 439 388 320 515 317 232 481 136
 454 372 547 385 408 384 415 211  41 327 381  13 433 427 400  33  51 371 443 444 519 370 196  90 110
 357 429 424 300 156 451 462 464 398 426 364  68 379 579 342  88 115  94 359  71 346 458 177  63 455
 469 459  10 475 220 157   9 205 442 457 335  77 330 337 506 377 113 447 321  36 493 403 507 324 316
 546   4 353 483 168  60 273 204 243 425 435 490 405 180  16 233 472 217 505 161 492 421 456  24 559
 465 502 524 164  32 527 539  82 466 501 491 200 450 114 525  75 175 488 463  85   5 107  18 305 522
 567  11 582 485 497 543  50   6 591 590 419 503  80  19  12 129 508  83 568  31 544 344  37 127 499
 533  15 452 259 588  95  29   7 411 468 573 185 575 480  17  89 397 104 583 126 494 495  79 190 581
 553  30 599  28 569 489 529 125 615 209 587 537  58 118 181 173 431 160 614  27  34 545 106   8 500
 563 143 446   1 557 554 250 150  45 461 549 577 139 141 122 511 561  81 558  55   2 103 487 470 299

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 2.94686e+06us (= 2946.86ms, 2.94686s)
Wall-clock time (full program): 2.99593e+06us (= 2995.93ms, 2.99593s)
Satisfaction error: 0
Number of search iterations: 665
Number of local moves: 394 (including on plateau: 56)
Number of local minimum: 35 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 347  51 540  82 608 442 479  76  75  37 615 481 122  71 450  24  14 605 410  83  32 490 613 453 625
 423 517 588 109  63 370  10  57 619  55 592 341 604  31 493 315  22 610 571  96 593  87  34 621   4
 529 448 601   6  46 514  38  35 594  33 614 393 590 138 444  98 174 598 322  91 132  69 624 579 116
 582 397 130 585  43 102 142 118 622 565 612 399 573 199 459  90  84 577 497 121  48 617  42  16 205
 532 159 124  85 611 539  70 113  58 173 522 430 520 100 387 309  13 320 432 374 607 587 137 508 115
 616 168  99 599 114 207 336 231 107 263 151 515 518 543 498 126 139 572 502 609 147 238 150 179 198
 206 506 202 149 310 357 527 208 261 145 156 466 196 596 566 330 252 553 581 153 191 548 141 128  97
 480 555 172 104 204 623  45 618 165 482 193 381 218 161 538 181 445 236 600 176 220 388 294 154 192
 243 260 314 276 277 359  93 180 560 226 214 505 215 143 586 326 227 245 509 210 557 281 462 119 438
 217 270 620 285 184 591 495 278 233 550 167 583 212 284 534 250 211 268 519 117 253 225 186 190 103
 337 228 219 213 194 221 355 400 369 578 435 302 327 229 301 292 237 437 461 247 269 350 209 329 286
 318 248 232 279 274 354 325 201 266 264 398 324 256 392 457 342 352 470 349 297 306 246 162 335 378
 267 313 249 304 203 280 603 271 312 317 362 319 242 283 332 287 340 299 195 426 334 163 433 300 390
 272 396 257 383 235 289 366 273 365 262 288 401 419 239 134 187 413 222 316 407 265 405 298 360 373
 363 282 308 258 323  94 170 328 503 414   3  92 368 463 296 182 574 189 305 331 345 494 431 353 356
 386 321 394 293 251 140 469 418 441 178 436 169 361 408   1  29 371 171 105 554 311 475 385 415 343
 346 483 338 402 344 439 376 487  78 364 380  52 375 391 200 468 177  56 166 473  19 417 421  74 499
  95  49 291 412 416 443 404 406 333 454 389 148 449 458 158 307 351 234  79 567 531  12   2 434 403
 112  25 367 485 422 440   7 465 507 133 513 188 424  89 101 420 377 409  30  41 411 384 562 427 486
  59   8 525 558 478  86 120 491 549  53 303  64  36 358  81 536 547 183 339  73 484 428 452 504 510
  67 476 241 521  20  62 535 460  27 526 129 223 290 131 157 524 541 240  28 556 382 244 425 474 546
 255 496 429 136 489 537 528 451 110 348  72   9  21 512  26 492 447  50 106 606 216  47 530 379 533
 544 516  23 570 580  65 224 464 559 471  66 230 456 500 146 552 472  77 111 455 467  61 123  88   5
 175 501  39 576 561 127 563 254  68 446  80 551  18 595 295 569 568  40  17 602 108 372 125  11 564
  54 152 523 155 575 144 545 542  44 488 135 259  15 511 185 589 477 164 275 160 597 197 584 395  60

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00509e+07us (= 10050.9ms, 10.0509s)
Satisfaction error: 2
Number of search iterations: 4866
Number of local moves: 1347 (including on plateau: 576)
Number of local minimum: 454 (including on plateau: 69)
Number of resets: 3
Number of restarts: 0

Problem in row 3: 529 448 601 6 46 514 38 35 594 33 614 393 590 138 444 98 174 598 322 91 132 69 624 579 116 => the sum is 7826 rather than 7825
Problem in row 13: 267 313 249 304 203 280 603 271 312 317 362 319 242 283 332 287 340 299 195 426 334 163 433 300 390 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 600 622 106 451  95  87 514 605 147 123 616 142 463 151 602 342 565 531 269  76  39  14 481  67 117
  48 255  65 366 118 424 400  40  34  20 560 617 214  42  71 529 544 549 526 466 220 128 505 569 515
  47 477 206 563 308 110 178 597 498 613 226 380 561  96 102  64 404 501 168 105  38 524 595  59 405
 139  93  51  88 547  81 166 286 611 376 610 452 575 161 586 520 384 175  69 537 223 187 487  53 368
 189 144 248 607 625 122 415 609 601 135 228 158 437 152  68 442 140 126 245 134 604 441 536 185 234
 154  89 150 172 141 606 315 588 591 146 540 162 303 624 157 210 476 311 121 425 312 278 568  73 313
 184  41 202  52  72 205 583 462 419 566 334 116  13 484 193 518 546 266 582 198 422 612  21 170 564
 176 493   2 394 456 305 475 538 125 138 133 240 412 580 330   7 346 439 509 243   8 232 455 273 516
  19 298 253  17 482 221 233 148 209 213 417 227 548 453 387 578 599 257 225 218 614 174 182 235 618
 260  82 207 159 483 510 197 444 557 180 230 195 554 386 186 263 474 297 543 345 258  99 284 229 403
 323 289 291 570 190 216 300 156 559 173 222 275 329 485 237 390 399 274 287 294 169 392 362 379 264
 208 299 306 355 521 239 391 304 276 252 339 316 244 249 317 149 389 408 246 331 480 247 320 282 357
 250  45 545 333 268 519 321 191 372 347 131 354 341 589 395 322 183 270 407 388 100 309 251 217 377
  32 351 343 353 238 319 124 508 219 242 292 409 352 236 349 350 459 262 277 382 385 325 254 416 348
 574 608 326 413 381 281  98  23  35 165 318 619 120  70 621 261 332 340 324 335 411 155 447 337 231
 465 432 556   5  11  85 449 371 571  74 167 436 293  28 572 224 199 401 359 429 468 398 426 402   4
 393 370 470 361 101 464 471 200  97 356 434 109 396 445 365 104  58 499 188 420 241 421  92 327 443
 594 435 265 360 473 418 581 153  22 615 103 406 296 367 491 374  79  16  26 383 136  78 307 433 414
 272 310 467 460 143 525  91 344 431 454 203 511 375 160 539  61 171 458  12 504 267 119 373 285 290
 506 378 603 503 552  33 302  62 364 535 450  83 114 620   1 397  66 478   6  31 576 592  24 534  15
 567 132 527  30 596 495 194 479 502 457  44 271  94  49 489 201 164 492 446 507 295 204 130 423  37
 513 163 551 358  25 410 550 430 181 448 111 585 314 177 129 363  27  50 497  54 438 593  77 522 259
 562 533   9 301  57 461  86 137  46 196  10  63 280 328 490 517  80 279 542 488 541 623 440 256 500
 558 288 590 494 573 112 336  43  75 469 579 115 113 338   3 427 530  56 523  36 108 553 179 512 215
 192 598 486  60 369 577  55 107 283 532 528 584  84 555 145 212 211  90 428 496 472 127  29 587  18

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.07687e+06us (= 8076.87ms, 8.07687s)
Wall-clock time (full program): 8.14189e+06us (= 8141.89ms, 8.14189s)
Satisfaction error: 0
Number of search iterations: 2731
Number of local moves: 855 (including on plateau: 372)
Number of local minimum: 227 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 558 415 108 128  29 367 600 538  81  41 121  40 100  37 623  27 612 560 532  33 156 526 546 619 428
  30 622  70 212 576 535 106 455 553  26  47 155 103 179 618  68 586 343  89  44 180 569 544 564 551
 541 610 581 493  72 563 123 506 520  61 151  55  52  45  95 460 524 602  76  97  90 562 598 182 166
 126 489  65 601 531 374 102 486 366 111 264  51 606 181 141 591 596 370  88  32 122 585 480 138 329
  56 332 500  79 513 219 587 496 552 418 224 152 276 190 135 239 573  82 522  63  94 318 396 361 448
 175 312  67  64 197 615 210 539 604  78 160  75 369 137 157 171 605 588 537 200  73 540 525 203 624
  84 227 208 225 589 549 236 572 131 146 169 107 459 593 110 214 231 153 134 229 375 621 608 244 611
 577 469 118 170 347 142 301 567 279 209 206 112 439 115 303 205 245 479 211 247 255 466 504 234 625
 249 603 271  96 148 213 168 183 421 204 235 216 609 163 543 269 139 557 514 324 162 435 461 261 381
 119 434 270 187 530 284 352 456 154 476 228 238 561 253 220 534 101 344 292 165 322 377 417  92 419
 140 215 191 280 288 334 218 277 257 201 325 240 392 266 221 337 159 290 378 389 287 599 613 308 620
 364 372 167 383 326 199 451 250 447 295 382 363 411 273 196 242 233 349 353 391 189 272 387 262 268
 281 470 185 341 282 331 426 346 294 394 198 299 305 458 345 172 339 164 384 260 441 192 310 350 258
 464 263 116 338 267 351 327 376 354 323 446 314 317  24 300 416 293 306 450 358 311 328 178 296 309
 223 388 359 407 285   1 356 174 147 316 430 400 478 256 275 307 386 265 355 438 335 289 304 414 237
 427 230 436 360 259 424 491  21 393  69 440 252 176 403 286  13 548 315 398 410 413  50 188 380 443
 474  77 490 298 145 445 402 283 127 404 422 542  54 401 397 437 336 254 379 395 373  34  49 477 130
 368 248 502 517 124   5 302 473 406 533 319 425 251 297 385 498 320  48 409 453   2 113 194 390 243
 405 274 433 348 193 463 342  86  57 291 516 495  31 580 449 471 226 399  25 487 499 150  80 454  71
 143 177 485 510 340 144 505 321 429 571 519 503 114 420 408 371 362  14 333  12 488  85  58 494  19
 492 133 523  36  60 432 444  18 423 412 313 590 278 521 582 515  46  16 129 501 462 149  83 472 195
 468  43 507 509 465 457  39  93  99 568 556 481 246 330  11 467 105  23 431 570 554 186   7 452 158
 528  59   4 584 545   3  53  38 161 617 616 547 109 536 511 222  42 484 482 594 597 173 232  22  66
  91 357 574 555 202  10 125 184 508 483   8 607 614 592  17 565  98 579 207 583 527  74  28  20 217
 442   6 595 104 512 365 559  87  62 578 529 566 475 575 497  15 120 241 117 550 518 132  35 136   9

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00498e+07us (= 10049.8ms, 10.0498s)
Satisfaction error: 2
Number of search iterations: 3818
Number of local moves: 1165 (including on plateau: 525)
Number of local minimum: 337 (including on plateau: 62)
Number of resets: 2
Number of restarts: 0

Problem in column 11: 121 47 151 264 224 160 169 206 235 228 325 382 198 446 430 440 422 319 516 519 313 556 616 8 529 => the sum is 7824 rather than 7825
Problem in column 16: 27 68 460 591 239 171 214 205 269 534 337 242 172 416 307 13 437 498 471 371 515 467 222 565 15 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 202  68 605 553 570 575 610 278 528  61  44 147 504 260   8  88  13 520 280  37 571 186 606 489  22
  46 200   1 583 539 594 420 612 313 124  64  35 507 593 180  84 479 495 536 207 519  59  11 497 127
  16  89 402  96 554 574 558 579 615 168 172 529 533 328  74 134 245 411  38 181 508 273 102 560  86
 144   3 581  14 512 531 493 538 598  92 236  33 542 517  17  45 532 592  56  85 526  21 496 503 118
  50 125 545 576 222 412 458 595 514 227  20 179 450 535  94  65 500 505 103  75 443  58 454 548  72
 136 304 460 382 550   7 541 464 498 209  57 376 472 543  42   2  12 471 484  31 423 164 562 524 111
 192  40 422 358 424 421   4 374 393 217 161 469 452 463 155 427 235 150 573  90 395 198 326 483 403
 174  95 391 482 444 387 527  36 513  24 375 428 561 457 392 240 470 237  48 189 405  54 437  30 429
 199 130 516 196 466 372 363 448 107 112 357 525 377 468 160 409 398 128  32 333  81 419 441 490 298
 215 132  19 459 447 407 356 406   5 557 368 486 303 351 433 378 355 492 446  28 347 416  10 400   9
 148 373   6 336 390 281 360 342 388 219 143  15 353 315 178 354 350 502 370 238 461 396 445 371 491
 309 317 366 415 314 224 389 187 397 341 413  52 142 418 284 359 288 362 329 272 301 338 340 385 283
 289 367 334 256 218 346 339 414 247 381 275 386 294 251 308 476 319 345 152 337 384 293 291 228 295
 285 250 369 299 221 274 254 494 349 480 311 327 220 577 343 184 122 410 277 401 335 246 417 211 169
 305 361 117 307 261 201 226 404 332 296 279 364 509 225 241 242 518 297 325 521 234 432 252 306 270
 456 611 233 399 276 302 244 258 264 185 318 232 223 266 320 287 568 191 485 239 105 248 203 312 600
 322 243 331 176 268 265 165 292 321 567 263 159 255 138 455 440 552 566 344 352 129 478 108 210 426
 515 451 271 162 499 104 194 249 190 578 467 214 170 282 442 173 110 599 534 603 183 290 212 158 175
 623 434 195 121 109 253 300 231 473 330 596 262 197  80 436 474 257  34 555 620 229 449 115  73 379
 588 475 205  97 188 182 131 204 208 591 438 625 213 106 580 166 153 163 431 481 167 565 120 146 602
 537 546 139 269 154 590  93  66 216 572 435 114 119 156 582 477 101 126 141 559 604 324 365 310 230
 597 511  55 614  51  99 586 116 206  98 530 157 137 267 522 616 585  79 151 587 177 259 149 113 563
 462 549 622  29  67  78  53  26  39 506 487 609 145 133 439 564 123  25 323 551 135 547 617  83 613
 621 607 100 569  18  60  91  41  49 510 408 601  71  27 556 618 453  43 193 425  23 488 316 348 589
 394 544 540  77  63 286  70 171  62 380 608 501  76  69 584 523  87  82 619 383 140 624 430  47 465

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00506e+07us (= 10050.6ms, 10.0506s)
Satisfaction error: 1
Number of search iterations: 5426
Number of local moves: 1676 (including on plateau: 781)
Number of local minimum: 482 (including on plateau: 114)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 1: 22 497 102 21 443 31 573 237 398 378 178 418 294 327 279 185 321 249 300 182 154 614 622 607 394 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 180  10 211  44 549 553 132 613 565 163 416 609 484 590 562  86  64 593  88 582  32 561  61  48  29
   3  23 259  11 181 501 230 581 464 171 162 594  79 554 533  52  26 568  56 584 545 583 519   8 538
 547 580  21   1 450 488  22 496 285 129 119 560  76 597 524 479  33 476 202 543  69 530   5  38 555
 420 546  55 419 520 459 109 529  74  15  60 125 160 200 502 608  41 166  67 558  27 512 526 564 563
 539 399 169 135  28 118 197 254 330  14 110 448  19 535 498 504  84 469 440 377 128 570 508 557 395
 495 491  12   7 392  16  73 480 265 107  75 358 238 527 525 551 302 471 183   9 378 470 435 505 460
 421 523  31  25 381 370 500 308 241 228  30  59  18 550 455 268 262 531  45 401 457 355 492 486 388
 444 438 113 219 371 423 294 339  85 364  51 375 199 452 472 218 168  40 151 552 443 376 475 384 379
 428 352 404 288 430 248 396 389  99  50 425 432 329 277 431 231   4  91 196 391 434 148 408 462 482
 258 393 223 134 441 357 385 394 204 209 152 411  57 424 192 490 275 386 415 410 367 250 383 242 373
 536 326 356   2 269 427 412 332   6 301 331  43 300 279 489 359 365 353 305 315 284 340 374 409 312
 414 323 369 319 390 184 328 351  58 345 456 261 283  47 286 304 324 322 466 363 270 335 398 382 247
 299 297 189 406 387 437 337 215 295 213 341 115 338 267 327 334 344 310 342 317 316 361 380 403 255
 447 405 422 436 290 354 126 296 522 292 276 214 232 511 343 314 245 313 252 280 266 278 207 253 251
 263 360 325 274 282 287 306 333 402 273 208 362 349 309 477 368 221 225 272 226 293 601 346 220 243
 256 234 453 418 318 240 222 244 400 521 187 140 587 212 224 493 612 303 257 311 307 203 281 298 104
 249 147 515 350 193 397 145 161 499 544 556 177 506 239 164 320 321 468 478 167 260 467  96 190 216
 185 205 429 463 246 291 136 610 451 174 532 106 513 172 117 210 417 497 503 236 105 173 165 271 618
 237  78 604 483 156 227 516 198 510 606 541 585 507 157 179  83 494 217 616 131 137 175  95  98 195
  94 191 458 439 121 623 101  97 540 579 534 622 518 264 141 366 407 336 201 158 615 159  63  68 130
 150 111 603 586 605  81 589 102 542 574 474 142 461 347  66 548 567 233 235 176 138  89 186  93 127
 112 149 537 611 206  72 591 144 588 509 445 178 481 153 114 103 600 146 454 442 619 120 133 124 194
  46 575  62 572  37 566 514 100 154 559 433 372 449  70  92  65 577  49 573  90 571  13 624 620  42
 188 598 592 607  54  24 595 116  17 289 465  20 487  53  77 348 599 182 426 170 625 122 578 485 108
 614  71 413 576 528  82 569 143 229 596 446 517 155  39  35 123 473  80 602  36 139  34  87 617 621

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.2493e+06us (= 4249.3ms, 4.2493s)
Wall-clock time (full program): 4.29876e+06us (= 4298.76ms, 4.29876s)
Satisfaction error: 0
Number of search iterations: 1257
Number of local moves: 525 (including on plateau: 180)
Number of local minimum: 99 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 602  31 153 266 244 619 384  83 407 281   1 604 490  36   2 416 325 580  16 507 543 276  18 412 529
 621 228 402 608 513 383  71 458 184 550  59 205  95 145 538 158 392   6 263 588 212  69   3 591 483
 176  65 222 620 563 133 385  41  74 451  10 509  75 108  32 599 555 617 152 572 297 434 450  98 587
 129 625 350 323 612 174 120  94 375 187 390 585  66 193 497 545 169  72 221 592 488 231  23 610 154
  57  88 459 527 605  58 262 432 119 615  50 575 213 177   7 160 180 594 183 380 622 561 128 255 518
 399 241 503 377 522 122 250  46 151 267  90 238  82 418 171 150 566 556  99 547 616 511 186 159 558
 261 624 516 358 144  54 607 166 121 138 195 391  13 298 272 332 508 554 598 481 237 426 167  42 322
 196 149 573 355 243 249 242 614 100 462  52 132 208 279 123 191 510 517 233 505 460 135 553 486 258
  47 315 410 526  37 351 485 170 603 182 203 579 125  68 178 220 204 439 227 446 223 540 565  96 586
 352 388 448 387 433 130 406 197  60 618 194 430 270 225 161 117 336 595 173 493 224 438 202 329 219
 582 282 365 260 317 207 578 264 246 252 168 303 211 292 423 235 256 287 376 389 248 299 354 283 348
 476 245 308 357 321 239  62 131 346 609 327   5 583 309 293 363 501 134 335 316 361 109 306 422 367
 344 285 370 359 232 209 452 300 435 305 456 372 382 215 269 274 295  22 229 310 436 368 427 199 280
 331 190 146 288 284 419 360 584 395 428 342 606 328 429 216 147 278  19 431 201 320 277  78 379 349
 319 549 311 156 445 484 114 347 425 400  29 401 345 421 339 515 318 290 371 164 265  87 304 334  92
 374 247 417 289 338 393 157 457 378 275 411  24 397 126 424 324 155 337 356 234 301 475 455 271 210
 105 533  44 115 340 343 353 506  80 413 596 487 396 437 143 404   9 420 469 112 333 136 415 557  79
 175 471 254 142 236 313  70 253 302 409 601 273 519 466 257 386  86   8 467 107 542 366 514 523  85
 453  39  28  20 185 398 226  40 381 369 597 534 449 162 440 477 576 560 307  45 140 103 447 537 312
 500 528 373 259  55  15 291 465 463 111 504 116 482 472 405 362 181  73 613 268 148  61 489 403 188
  34  12 286 330 364 548 314 571 443  14 559  81 474 494 495 520   4 530 102  91 137 139 525 569 189
  49 544 192  77  89 535 496 444 502 179 454  26 524 461 532 240 165 480 341 163 394 552  27  63 296
 414 464  21 113 589 577 539 110 200  56 567  43 473 551 491  51 492  67 468  25 124 568 217  93 512
 611 141 570 214  17 546  11 478 593  48 562  76 127 479 581 521 470  35 172 251  53 600 441  30 198
 218 541 104 499  97 326 590 574 442 206 408 230 498 564 536 118 294  33 623  38 101  64 531  84 106

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.88318e+06us (= 5883.18ms, 5.88318s)
Wall-clock time (full program): 5.9332e+06us (= 5933.2ms, 5.9332s)
Satisfaction error: 0
Number of search iterations: 2296
Number of local moves: 855 (including on plateau: 325)
Number of local minimum: 183 (including on plateau: 35)
Number of resets: 1
Number of restarts: 0

