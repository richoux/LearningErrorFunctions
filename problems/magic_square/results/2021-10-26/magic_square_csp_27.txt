@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 104 214 702 136 179 653 432 328 347 718 157  26 573 312 168 400  87 252 545 686 119 390 207 274 559 582 705
 580 237 356 290 567 129 250 320 278  55 125 714 640  79 500 601 186 191 126 232 401 499 617 584 138 672 488
 310 146 296 130 555 460  77 524 198 448 384 167  63 467 254 642 688 679  20 291 501 194  31  48 647 370 165
 593   2 485 635 439 261 561 289 513   1 655 116 182 103 321  83 159  13 670  45 381 678 710 615   3 133 578
 464 562  89 141 391 131  81 483 419  10 463 644 484 648 353 489  92 358 156 510 247 270 556 552 623 579  60
 337 591 604 413 298  67 697 523 657  58 128 664 566  36 445 224 105 607 385 622 144 576 536 242 473 698 646
  30 259 203 528 724  99 699 479 628 382 610 516 603 235 666 313 376 152  16 645 172 272 541 572 651 626 605
 303 295 518 535 284 629 143 503  23 530 404 637 716 700  37 256 301  53 504 487 245 314 517  71 319 434  97
 502 286 508 677 534 121 227 263 405 217 279 211 519 588 587  24 349 271 480  38 418  17 491 674 185 469 515
 447 118 109 305 204 193 379 178 451 332 589 597 201 440 532 309 493 408 461 124 410 527 495 497 548 255 253
 249 722 299  61 472 355 581 689 164 681 163 122 155  12  90 709 420 277 564  25  56 365 308  98  76 324 175
  15 288 150 225 158 416 441  72 471 537 650 586 457 436 148 414  93 395 423 431 219 608 409 402 543 442 426
 727 470 729 287 565 496 352 676  21 407 378 415 149 171 372 696 685 117 661 260 641 486 533 706 550  42  35
 386 327 359 361 360 393 398 345 344 362 396 354 375 563 294 369 380 340 317 341 371 388 325 394 348 334 331
 258 656  29  18 411 107 662 154  86 187 630 412 329 323 417 322 633 703  75 585  68 707  47 399 389 654 594
 318 570 577 456  62 684 511 112 596 613 192 330 652  64 632   4  94 549 335 490 551 715 269 228  32  84 135
 720 477 668 728 659 514 282  78 292 592 539 280 368 302 297 262   6 180 351 422 569 285  28 176 226 238 316
 494 462 627 264 273 682 123 281 643 240  52 246 506 538 170 142 691 619 229 160 257 621 248 267 618  96 306
  49 293  14 492 208  59 276 134 455 634 575 512 216 595 675 540 498 184 558 542 639 435 268  70 153 137 251
 658 583 196 598 649 338  34 283 692  69 111 100  74 387 602 114 522 695 701 307 188 234 189 568 367 190 406
  33 526 600 611 612 560 139 366   7 342 450 209 110 206 553 161 220  54 195 531 520 221 673 694 311 636 315
 638 127 403 443  39 113 205 708 723 304 174 392 620 433 476 606 624 482  66   9  80  40 667 266  27 521 669
 243 478 363 336 106 437 166 177 197 468  46 665 507 663 719   8 609 590 343 120 233 397 383 424 712  44 421
 377 449 202 115 625 339 546 683 427 690 326 210 373  82  43 453 711 374 616 614 465  50 213 357  85 218 212
 452 430  51  91  65 726 444  88 350 200 481 140  73 544 181 680 300 631 223 717 713 429 458 162 147 505 574
 557  57 474 275 151 364 721 660  22 231 173 571 145 241 222 525 425 215 236 183 554   5  95 346 454 239 475
  11 230 244 704 265 529 428 459 446 547 725  19 199 687 101 509 108 466 599 438 693 132  41 169 671 333 102

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00604e+07us (= 10060.4ms, 10.0604s)
Satisfaction error: 9
Number of search iterations: 3265
Number of local moves: 2762 (including on plateau: 2715)
Number of local minimum: 23 (including on plateau: 328)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 310 146 296 130 555 460 77 524 198 448 384 167 63 467 254 642 688 679 20 291 501 194 31 48 647 370 165 => the sum is 8755 rather than 9855
Problem in row 4: 593 2 485 635 439 261 561 289 513 1 655 116 182 103 321 83 159 13 670 45 381 678 710 615 3 133 578 => the sum is 9224 rather than 9855
Problem in row 6: 337 591 604 413 298 67 697 523 657 58 128 664 566 36 445 224 105 607 385 622 144 576 536 242 473 698 646 => the sum is 11342 rather than 9855
Problem in row 7: 30 259 203 528 724 99 699 479 628 382 610 516 603 235 666 313 376 152 16 645 172 272 541 572 651 626 605 => the sum is 11602 rather than 9855
Problem in row 11: 249 722 299 61 472 355 581 689 164 681 163 122 155 12 90 709 420 277 564 25 56 365 308 98 76 324 175 => the sum is 8212 rather than 9855
Problem in row 13: 727 470 729 287 565 496 352 676 21 407 378 415 149 171 372 696 685 117 661 260 641 486 533 706 550 42 35 => the sum is 11627 rather than 9855
Problem in row 19: 49 293 14 492 208 59 276 134 455 634 575 512 216 595 675 540 498 184 558 542 639 435 268 70 153 137 251 => the sum is 9462 rather than 9855
Problem in row 26: 557 57 474 275 151 364 721 660 22 231 173 571 145 241 222 525 425 215 236 183 554 5 95 346 454 239 475 => the sum is 8616 rather than 9855
Problem in diagonal 0: 104 237 296 635 391 67 699 503 405 332 163 586 149 563 417 4 6 619 558 307 520 40 383 357 147 239 102 => the sum is 8829 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 493 405  79 522 356 684 573 722 669 326 132 445 133 315 697 481 460 661 236  67 603  19 225 153  25 333  41
 134 703 559  36 382 298 543 439 519 200 172 699 141  64 214 231 459 399 255 562  84 544 269 448 390 664 447
  40  88 183 726 609 335 561  93  44 347 529 646 692 324 404 644 500 567 686 359 570 693  35  53 501 273 516
 467  62 728 696 221 409 391 345 673 491 550 227 259 106  20 161 249 289 717 105 407 252 286 480  54 510 700
 401 270 657 119 649 412 233 217  39 659 180 213   9  21 260 367 587  65 104 653 414 479 624 660 218 526 140
  92 520 137 593 267 571  10 471 121  47 723 162 595 590 188  33 706 713  68 635 250 514 271 563 489 212 314
 549 423  52 654 534 157 436 497 530 572 186 718 258 261 538  78 453 636 462 142 241  70 517  29  91 712  59
 384 321 272 370 555 484 478  86 242 187 130 357 619 475 454 168  50 184 668 568 219 411  30 542 574 651 239
 151 164 604 107 301 194 615 531 507 108 675 671  97 547 589 205  61 160 527  74 473 464 154 457 339 424 656
 630 222 264 441 687 336  46 169 506 494 509 528 458 584 325 566  12 539 455 416  72 601 620 135  60  58 122
 710 505 508  48 199 110 434 156 389 291 488 143 541 720 504 146 580 203 596 600  66 257 109 598 338 552  69
 128 643 207 536   5 616 111 503 608 148   7  23 197 537 711 136 629 707 274 287 237   1 177 238 380 211 438
 228  63 523 583 677 209 175 410 185 328 397   4 426 368 360 606 198 195 308 490 470 381 607 597 512 147 408
 398 461 402 361 373 348 365 341 354 394 379 374 363 278 350 383 355 375 352 288 351 428 362 317 378 376 349
 254 545 450 483 495 485 727 641 655 456 652 113  73 179 280 688 704   6 310  32 511  81 167 190  49 127 502
 320 627  76 396 290 323 344 322 612 557 309 645 556 358 316 284 144 299 435 330  26 334 513 353 518 306 262
 670 285 300 276 312 487 251  85 256 602 698 690 265 229 226 292 329 152 638 305 116  80 709 283 311 369 639
 553 176 446 442 114 208 268 248 420 413 281 230 234  90  31  77 419 721 524 304 708 540 452 204 689 623 440
 112 576 705 240  42 560 663  15 223 427 340 174 724 206 192 637 170 588 224 521 302  95 393   8 650  27 626
 642 189 599 145  43 564 415 181 318 263 385 729 430  37 388 294 101  94 579 193  89 631 492 683 443 395 533
 676  82 155 610 725 685 178 465 138 124 586 232 678 585 202 474 342 126  13 647 210 150 102 364 158 554 594
 246 431 332 303 139  71 182 591  99 422 253 611 613 313 496 386 406 433  24 679 371 247 605 714 307 466 115
 417 296 486 667 546 293 682 648 295 621  57 118 451 662 149 244 569 437 515 319 618 343 622 666 701  56 558
 548 275 633 103 163 129 125 695 421 672 468 634 123 592 581 702 449 498  96 173 575 482 243  34 159 117 165
 565 191  11 216 472 245 346  22 297 215 614 120 477 429  98 578 532 535 196 387 551 432 277 444 691 577 337
  45 658  87 131 372  17 628 282 719 463  55  83  18 582 617 469  14  38 201   3 640 694 715 476 499 171 220
   2 674 400  51 327 625  75 680  16  28 100 266 425 403 665 525 377 235 392 716 681 632 279 166 331 418 366

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00564e+07us (= 10056.4ms, 10.0564s)
Satisfaction error: 9
Number of search iterations: 3260
Number of local moves: 2766 (including on plateau: 2720)
Number of local minimum: 21 (including on plateau: 328)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 40 88 183 726 609 335 561 93 44 347 529 646 692 324 404 644 500 567 686 359 570 693 35 53 501 273 516 => the sum is 11018 rather than 9855
Problem in row 5: 401 270 657 119 649 412 233 217 39 659 180 213 9 21 260 367 587 65 104 653 414 479 624 660 218 526 140 => the sum is 9176 rather than 9855
Problem in row 8: 384 321 272 370 555 484 478 86 242 187 130 357 619 475 454 168 50 184 668 568 219 411 30 542 574 651 239 => the sum is 9718 rather than 9855
Problem in row 11: 710 505 508 48 199 110 434 156 389 291 488 143 541 720 504 146 580 203 596 600 66 257 109 598 338 552 69 => the sum is 9860 rather than 9855
Problem in row 12: 128 643 207 536 5 616 111 503 608 148 7 23 197 537 711 136 629 707 274 287 237 1 177 238 380 211 438 => the sum is 8695 rather than 9855
Problem in row 19: 112 576 705 240 42 560 663 15 223 427 340 174 724 206 192 637 170 588 224 521 302 95 393 8 650 27 626 => the sum is 9440 rather than 9855
Problem in row 23: 417 296 486 667 546 293 682 648 295 621 57 118 451 662 149 244 569 437 515 319 618 343 622 666 701 56 558 => the sum is 12036 rather than 9855
Problem in row 26: 45 658 87 131 372 17 628 282 719 463 55 83 18 582 617 469 14 38 201 3 640 694 715 476 499 171 220 => the sum is 8897 rather than 9855
Problem in diagonal 0: 493 703 183 696 649 571 436 86 507 494 488 23 426 278 280 284 329 721 224 193 210 247 622 34 691 171 366 => the sum is 10405 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 474 316 729 104  88 237 619 200 170 601 348 269 665  17  37 706 339 494 478 700 377 249 116 425 184 423 490
 687 548 681 207 379 351 718 644 411 364 143 404 427 142 694 447 217 492 287  47 562 488 193 658 342 701 583
 228 722 173 162 501 482 121 208 134 616 544 485  84 449 323 545 389 224  73  99 555 585  50 187 620 599 697
  43  96 561 579 277 645 266 432 696 564 105 172  60 513 472 614 655 410 124 250 218 546 571 541 367  16  62
 176  59 604 654 566   8 336 496 199 524 205 180 303 123 473 117 165 340 409 363 146 231 559 573 192 279 151
 326 685 542 471 183   9 333 723 321  64 459 392 345 133 314 258 189 707 253 476 709  80 663  29 335  70 495
 621  94 161 708 661 464 589 169 439 607 147 132 234 519 693  32 296  87 437 547  72 688 383 418  81 120 456
  24 226 311  97 444 672 580  19 140 223 522 209 641 111 611 458 536 233 587 675 692 307 322   1 682 615  14
 431 238  44 164 558 602 489 592 491 139 647 481 720 487 235 214 572 107 177   2  21 504  30 262 373 642 633
 202  18  13 480 468 284 306 186 591 477 590 643 436 148 556 691  35 276  20 517 272 271 460 705 159 497 554
 603 475 651 610 261 719 450  63 549 560 229 347 308 254 113 689 429 210  28 598 433 349 110  33 597 135  52
 213 540  71  39 313 462 632 507 639 281 352 656 275 315 317 400 484 523 527 629 203 394 446 660  92 259 671
 463 391 405 108 371 574 136  83  85 309 130 575 393 596  25 103 101 600 260 568 343 584 714 703 605 232 398
 381 359 368 366 424 329 384 390 387 667 355 397 330 286 378 353 388 357 304 382 268 362 280 376 240 403 341
 533 704 141 727  53 196 215 626 198   4 726 413 106 445  61  38 246  66 204 290 428 646 634 530 624 683 318
 438  89 466 618 227 435   7 623  54 576  95 493 442 154 407 324 448 416 676 100 128 514 543 520 538 350 630
 338 637  90 668 649 674 282 327 451  22 539 337 552 334 686 331 288 526 369  69 245 131 421 301   5 273 310
 155 206 251 521 415 612 157 512 622 285 408 225 595 289 274 244 638 361 312 255 617 461 222 292 414 247 265
 220 498 241 138 679 236 443 354 219 528 516 606 426 577   3  15 152 256 653 396 406 666 469 127 216 332 483
 470 565 711  48 129  12  27 417 270 188 305  77 263 635 588 532 680 441 690 156 264  56  75 422 455 537 586
 578 360 465 252 453 194 664 278  93  23 712 402 609 657 636 300 294  36 569 346 179   6 112 201 182 454  74
 168 102 505 299 724 171  41  11 267  86  45 119 109 702 534 434 386 358 570 659  55 420 511 125 710 158 557
 502 412 581 295 243 518 499 662 535 230 399  49 531 721 181 627 160 150  51 385 500  57 195 149 190  26 320
 728  82  79 550 430 508 118 319 628 669 344 593  78 137 479 122 486 678 713 608 652 302 677 509 699 163 175
 650 191 185 356 257  42 695 567 166 291 328 529 174 563 115 212  40 221  91 457 670 716 698 631 503 625  46
 145 594 452 395  68 293 197 380 725 715 297 372 684 178  10 467 525 613 440 114 515 144 248  76 419 506 283
  58 648 374 239  34 126 551  67 375 242 365 298  65 370 640 582 717 673 553 167 325  98 153 401  31 510 211

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00567e+07us (= 10056.7ms, 10.0567s)
Satisfaction error: 13
Number of search iterations: 2643
Number of local moves: 2251 (including on plateau: 2209)
Number of local minimum: 15 (including on plateau: 264)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 687 548 681 207 379 351 718 644 411 364 143 404 427 142 694 447 217 492 287 47 562 488 193 658 342 701 583 => the sum is 11817 rather than 9855
Problem in row 5: 176 59 604 654 566 8 336 496 199 524 205 180 303 123 473 117 165 340 409 363 146 231 559 573 192 279 151 => the sum is 8431 rather than 9855
Problem in row 6: 326 685 542 471 183 9 333 723 321 64 459 392 345 133 314 258 189 707 253 476 709 80 663 29 335 70 495 => the sum is 9564 rather than 9855
Problem in row 8: 24 226 311 97 444 672 580 19 140 223 522 209 641 111 611 458 536 233 587 675 692 307 322 1 682 615 14 => the sum is 9952 rather than 9855
Problem in row 12: 213 540 71 39 313 462 632 507 639 281 352 656 275 315 317 400 484 523 527 629 203 394 446 660 92 259 671 => the sum is 10900 rather than 9855
Problem in row 16: 438 89 466 618 227 435 7 623 54 576 95 493 442 154 407 324 448 416 676 100 128 514 543 520 538 350 630 => the sum is 10311 rather than 9855
Problem in row 20: 470 565 711 48 129 12 27 417 270 188 305 77 263 635 588 532 680 441 690 156 264 56 75 422 455 537 586 => the sum is 9599 rather than 9855
Problem in row 21: 578 360 465 252 453 194 664 278 93 23 712 402 609 657 636 300 294 36 569 346 179 6 112 201 182 454 74 => the sum is 9129 rather than 9855
Problem in row 22: 168 102 505 299 724 171 41 11 267 86 45 119 109 702 534 434 386 358 570 659 55 420 511 125 710 158 557 => the sum is 8826 rather than 9855
Problem in row 23: 502 412 581 295 243 518 499 662 535 230 399 49 531 721 181 627 160 150 51 385 500 57 195 149 190 26 320 => the sum is 9168 rather than 9855
Problem in row 24: 728 82 79 550 430 508 118 319 628 669 344 593 78 137 479 122 486 678 713 608 652 302 677 509 699 163 175 => the sum is 11526 rather than 9855
Problem in row 25: 650 191 185 356 257 42 695 567 166 291 328 529 174 563 115 212 40 221 91 457 670 716 698 631 503 625 46 => the sum is 10019 rather than 9855
Problem in row 27: 58 648 374 239 34 126 551 67 375 242 365 298 65 370 640 582 717 673 553 167 325 98 153 401 31 510 211 => the sum is 8873 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
   3  77  43 719 122 309 297 324 189 621 231 339 594 568 140  81 155 103 161  95 362 329 293 578  93 240 230
 530 277 415 202  51   7 645 678  36 156 698 507 720 422 404 209 657 281 144 409 630 396  24 445 283 412 217
 704 561 700 395 259  58  70  16 472 116 563 274 509 627 540 424 676 572 461 448 713 606 408 375  56 216 560
 403  12  50  47 494 670 108 609 482  29 656 128  35 174 212   1 546 577 549  78 697  19 522 592 290 527  41
 591 145 474  88  20 154 689 658 478 427 484 251 295 284 680 714  67 659  91 393 200 706 596 132 149 127 303
 207 292 669 650 150 417 272 141 617 169  31 523 138 267 602 583   6 124 709 302 649 589 322  55 398 391 582
  30 533 105 331 186 260 722 101 460 437 164  94  90 328 544 547 276  27 313 681 538 531 511 675 157 711 503
 431 106 316 151 726 114  72 298 566 514 469 446 146 153 453 420 718 634 491 646 168  49  38 173 317 665  75
 136 664  54 567 314  18 587 475 721 286 496 715  85 626  82 685 419 233 289 519 142 551 618 220 254 291 113
 476 485 373 379 679 430 130 694  59 439  62 595 110  89 414 192 498 447 159 528 194 449 683  74 203 556 458
 206  40 624 183 529 120 100 535 318 690  34   4 464 686 143 477 497 411  96 576 442 436 488 569 360 623 204
 632 486 502 545 273 724 588 129 197 191 641 608 107 198  97 188  28  66 228 481 176 687 126 614 712 471 160
 466 177 402 603 382 440 428 268 378 399 504 219 377 282 386 193 559 165 119 201 245 610 410 708 134 454 346
 338 341 383 347 423 357 364 381 421 380 397 343 332 435 367 363 353 401 345 371 356 358 374 368 327 294 336
 264 394 376  14 133 506 352 723 372 102 232 205 349 499 660 590 637 682 265 392 334 163 121 285 305 581 319
 607 310 593 223 480 599 333  37 413 300 296 418 489 655 266 354 321 597 405  15 175 330 253 355 456 269 306
  10 434  21 516 462 337 521 425 158 613 586 470 565 184 182 278  53 365  45 539 311 256 598 438 674 385 429
 455  83 170 369 215 210 224 600  92 611 705 226 695  25 195 631  68 135 244 703 463 167 508 492 236 671 662
 512 636 180  80 668 450 510 500 227 570 131  11 261 635 619 307 342 208 616 196 211 390  87 190 644 287 387
 467 688 179 185  57 252 490 117 536 214  33 707 495 384 585  63 416  71 479 242 620 237 564 335 642 104 693
 729 541 361 677  44 275 115 452  23  79 199 487 574 459 270 222 643 235 629 604 451 340 579 246   2 320 299
 625 308 166 601 699 148 552  98 633 661 280 505 654 513 716 389 255 520 640 366 483 468 359  39 247 557 638
 344 628 537 465 517 653 262 605 248 532 323 326 406 221 315 351 172 518 525  73 241 234  13 218 534 312 554
 271 663 225 123 580 612 325 137 257 279 118 666 652  84 125 691 238 243 575 152 370  60 524 555 702  86 542
 109 728 639 444 543 615 400 350 696  42 584  52 258 426 526 239 111 457 573  46  65 648 112 432 515 181  64
 304  99 571 701 301 558 673 443 667 288 213 348  22 622  69 501 493 717  32 550 178  17 553   8 692  48 187
   5 147 727 250 548 562  26  61 139 710 725 388 433   9 263 162 651 407 672 249 441 229 171 684 473  76 647

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00564e+07us (= 10056.4ms, 10.0564s)
Satisfaction error: 7
Number of search iterations: 3874
Number of local moves: 3266 (including on plateau: 3218)
Number of local minimum: 27 (including on plateau: 376)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 3 77 43 719 122 309 297 324 189 621 231 339 594 568 140 81 155 103 161 95 362 329 293 578 93 240 230 => the sum is 7296 rather than 9855
Problem in row 3: 704 561 700 395 259 58 70 16 472 116 563 274 509 627 540 424 676 572 461 448 713 606 408 375 56 216 560 => the sum is 11379 rather than 9855
Problem in row 4: 403 12 50 47 494 670 108 609 482 29 656 128 35 174 212 1 546 577 549 78 697 19 522 592 290 527 41 => the sum is 8548 rather than 9855
Problem in row 8: 431 106 316 151 726 114 72 298 566 514 469 446 146 153 453 420 718 634 491 646 168 49 38 173 317 665 75 => the sum is 9355 rather than 9855
Problem in row 9: 136 664 54 567 314 18 587 475 721 286 496 715 85 626 82 685 419 233 289 519 142 551 618 220 254 291 113 => the sum is 10160 rather than 9855
Problem in row 22: 625 308 166 601 699 148 552 98 633 661 280 505 654 513 716 389 255 520 640 366 483 468 359 39 247 557 638 => the sum is 12120 rather than 9855
Problem in row 23: 344 628 537 465 517 653 262 605 248 532 323 326 406 221 315 351 172 518 525 73 241 234 13 218 534 312 554 => the sum is 10127 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 690 323 523 556 491 631  13 411 622 531 244  82 209 505 166  60 714  12  28 705  80  99  57 197 625 582 699
 659  39   5 689  14 260 226 688 289 123 611 683 654  33 706 408 227 272 146 377 110  46 513 648  71 696 662
 341  34 478 310 458 446 267 119 666 669 432 203 599  38 493 234  93 597 717 607 355  22 387  43 651 198 398
  85 116 497 492 519 188 511  10  21 354 149 150 288 653 665 596 720 534 252 572 430 462 254 633 410  59 235
  32 483 230  91 269 537 725 542  44 301 718 180 248 450 295 190 701 215 427 498 208 496 592 390 468 715 421
 152 189 649 219 673 287  81 216 233 521 616 210 437 153 142 586 526 647 284  96 677 565 630  18   1 508 539
 626 381 191  41 456 328 634 126 573 664 307 558 428 619  56 527  63 524 553 221 560 529  16 169   8 154 543
 555 438 262 520 615 726 173 484 419 107  17 661  52 220 707 479 176 590 627 145 312  87 576 164 290 363  90
 433 181 728  98 504 442 140 723 499  97 105  48 721 109  72 620 585   3 473 351 547 292  55 243 486 618 682
 239 506 367 540 528 667 516 603 719 454   4 716 453 162 571  31  75 477  47 165  26 687 214 485  49 297 257
 563 546 342 724 104  69 645 374 692 467 113 489 495 574 595 562 129  64 501 642 577 296 352 151 533 641 639
 196 417 115 469 401 591 445 440 460 157 436 281 538 399 443 444 237 711 382 111  65 195 183 392 386 391 570
 170 670 579 314 228 459 663 231  70  61 403  62 259 686 416  77 202 415 617 685 613 640 518 311  35 447  24
 637 380 369 383 322 404 370 350 339 360 364 316 375  95 371 395 393 359 348 324 384 385 337 372 373 362 388
 561 702 378 329 332 418 405 353 333 326 347 368 330 300 298 358 621 315 320 302 127 346 356 345 318 340 327
 232 344 522 325  73 294 424 308 466 305 629 343 141 727 541 475  15 250 336 406 291 624 379 396 449 225 335
 530 729 536 638 223  79 564 509 161 680 253 103 672 184  84 321 684 128  25 132 101 713  20 510 681 593   2
 251 268  50 278 487 182 703 199 282 313 551 646 106 156 258 709 285 545 192 276 710 409 552 246 309 402 490
   9 143 136 679  27  45 319  36 261 610  23 338 422 604 148  74 179  30 426 488 608 172 133 317 578 174 600
 476 293 575 249 655 583 211 240 482  76 125 580 158 147  37 242 264 394 652 256 678 205 306 698 361 512 400
 283 636   7 171 159  83 212 255 137 656 463 414 643 708 435 413 567 695 588 280 207 266 644 236 331  29 102
 130 568 397  54 549 194  86 124 514 185 412 168 118  66 515 658 550 279 671 503 423 434 704 431 584  67 471
 135 265 263 160 494 559 274 472 175 357 657 517 229 581 628 245 201 186 163 238 676 407 134 507 178  58 270
 602 609 697  92 366 193 131 535 114 217 273 465 675 464 139 138 722 606 441 271  94 304 691 548 155 213 100
 474  42  68 594 349 425 650 204 108 452 557 566 554 420 569 222 122 455 500 598 480 112  78 694 224 532 187
 365  51 605 389  89 712 461 668 544 612 589 587  40 525 299 117 144 218 120 167 241 448 481 623 601 303 177
 429 502 286 451 470  53   6 635 632 200 457 121  11 277 206 674 660 334  19 439 275 614 693  88 700 376 247

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00586e+07us (= 10058.6ms, 10.0586s)
Satisfaction error: 7
Number of search iterations: 2756
Number of local moves: 2295 (including on plateau: 2248)
Number of local minimum: 18 (including on plateau: 256)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 32 483 230 91 269 537 725 542 44 301 718 180 248 450 295 190 701 215 427 498 208 496 592 390 468 715 421 => the sum is 10466 rather than 9855
Problem in row 11: 563 546 342 724 104 69 645 374 692 467 113 489 495 574 595 562 129 64 501 642 577 296 352 151 533 641 639 => the sum is 11879 rather than 9855
Problem in row 19: 9 143 136 679 27 45 319 36 261 610 23 338 422 604 148 74 179 30 426 488 608 172 133 317 578 174 600 => the sum is 7579 rather than 9855
Problem in row 21: 283 636 7 171 159 83 212 255 137 656 463 414 643 708 435 413 567 695 588 280 207 266 644 236 331 29 102 => the sum is 9620 rather than 9855
Problem in row 23: 135 265 263 160 494 559 274 472 175 357 657 517 229 581 628 245 201 186 163 238 676 407 134 507 178 58 270 => the sum is 9029 rather than 9855
Problem in row 25: 474 42 68 594 349 425 650 204 108 452 557 566 554 420 569 222 122 455 500 598 480 112 78 694 224 532 187 => the sum is 10236 rather than 9855
Problem in row 26: 365 51 605 389 89 712 461 668 544 612 589 587 40 525 299 117 144 218 120 167 241 448 481 623 601 303 177 => the sum is 10176 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 381 504 455 701 658  41 450  45 114 298 304 556 237 625 720 164 145 525 514 199 662  91   3   2 611 152 698
  44 120 190 217 138 722 355 187 702 399  34 489  18 670 659 179 176 663 211   7 578 614 653 673  32 679 446
  77 330 618 324  10 317 388  90 181 366 603 595 491 177 402 636 147 519 391 645 253 280 590 343 557 506  19
 569 641 678 531 105  52 644 642 501 360 271  42 307 201 638 441 581 434 182 106 128 601  79 604 277 129 111
 551  92 558 301 682 546 229 465 433 256 392 532 292 290 453 598 200 278  82 494 219 109  64 657 333 226 523
  69 495 326 568 456  80 717  16 646 576 387 148 627 274 257 497 383 520  15 493 104 583 466 616 230   1 305
 694 231   8 726 240 285 117 606  25 405 261  33 267 165 332  89 699 396 454 640 549 692 619 142 329 168 683
 729 218 674 193 371 572 429 554 723 719 354 163 167  13  57  43 375 596 284  85  21 508 437 710 541 197 122
 521 728 536 160 540 651  22 158  27 238 507 422 425 116 273 321 502 180 485 276 605 347 404 561 146 481 223
 539 282 171 101 505 496 260 667 198 563 565 172 643 592 602 216 649  81 287 518 685 474 291  86 451  93 459
 357 102 574 477 245 499 227 498 141 562  62 628 149  97 545 239 436 647  49 473 166 268 242 252 671 707 542
 281 488 119  11 191 420 103 427 397 214  40 487 124 431 295 413 395 608 552 439 462 312 599 577 418 384 668
 382 393 378 415  50 401 424 398 444 688 430 365 194 411 428 394 409 346 419 389 342 241 368 410 339 362  35
 417 408 266 386 403 377 363 356 353 334 350 358 379 361 323 335 369 320 337 331 564 345 390 372 373 349 336
 553 623 236 169 511 621 385 233 412 175 537 442 516 327 703 624  70  37  84 316 319 208 652 150 513 309 130
 155 691 468 348 617 687 526 279 246  61 588 421 665 718 483 482 156 708 677 655 328  14 215 174 478 586 650
 584 580 555 637  17  96 684 544 135 140  68 593 567 500 530  73  66 686 570 492 186 126 302  38 161 660  31
 716 289 597 406 322 340 587 721 370 414  88 250 314 475   5 610 629  99 189 490 352 634 262 225 212 192  67
   4 550 286 132 270 288 133 123 293 666 693   6 204 310 259  76 364  87 178 184  59 656  75 435 206 107 626
 224 108  28 313 315 527 680 235 571 303 664 600  24 609  12 560 559 294 100 220 464 458 695 452  47 631 162
 202 154 690 669 727 170 136 681 533 110 612  83 159 547 249 134 449 153 632  46 622 275 143 254 635 535 255
 416 183 196 440  23 661  74 137 222 247 308 269 534  36 479 467 265 359 503 725 522  95 486 463 706 591 448
 188 318 297 311 325 205 630 376 351 510 251 432 705 443  54 528 232 263 700 367 447 374 210  39  94 543 338
  60 585 296 566 613 234 484 258 594 400 112 438 724 185  51 714 306 300 648 131 709 221 115 712  29 213 157
 461 457  71 524 480  20  26 341 118 696 548 144  58 672 620 676 517  53 469 380   9 195 515 509 582 139 575
 633  78 529 173 697 426 538 203 471  30 113 472 589  98 127 283 704 243 264 689 228 423 407 151 209 470 607
  48 207  55  56 344 121 244 615 654 125 713 715 476 512 299  63  72 460 579  65 272 711 573 248 675 445 639

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00578e+07us (= 10057.8ms, 10.0578s)
Satisfaction error: 6
Number of search iterations: 3806
Number of local moves: 3169 (including on plateau: 3120)
Number of local minimum: 26 (including on plateau: 414)
Number of resets: 0
Number of restarts: 0

Problem in row 10: 539 282 171 101 505 496 260 667 198 563 565 172 643 592 602 216 649 81 287 518 685 474 291 86 451 93 459 => the sum is 10646 rather than 9855
Problem in row 16: 155 691 468 348 617 687 526 279 246 61 588 421 665 718 483 482 156 708 677 655 328 14 215 174 478 586 650 => the sum is 12076 rather than 9855
Problem in row 17: 584 580 555 637 17 96 684 544 135 140 68 593 567 500 530 73 66 686 570 492 186 126 302 38 161 660 31 => the sum is 9621 rather than 9855
Problem in row 19: 4 550 286 132 270 288 133 123 293 666 693 6 204 310 259 76 364 87 178 184 59 656 75 435 206 107 626 => the sum is 7270 rather than 9855
Problem in row 23: 188 318 297 311 325 205 630 376 351 510 251 432 705 443 54 528 232 263 700 367 447 374 210 39 94 543 338 => the sum is 9531 rather than 9855
Problem in row 27: 48 207 55 56 344 121 244 615 654 125 713 715 476 512 299 63 72 460 579 65 272 711 573 248 675 445 639 => the sum is 9986 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 494 515  32 120 516 214 548 522 639 286 167 647 514 586 701 618 557 154 218 420 663 562   9  47 201 236 143
 229 697 375 186  64 187 520  69 228 655 505 222 256 693  95 109 146 439 700  99 696 481 583 422 398 679 122
 609 303 680 656 289 276  86 448 675  40 288 101 715  12 551 644 606  35 628 107 115  18 371 510 544 194 354
  21 426 314 471 721 337 719 582 158 473  37  43 266 254 396   1 533 463 677  26 184 318 531 308 645 412 539
  91 617 291 529 608 495 238 595 508 549 423 552   8  93 278 455 534 669  56 311 665 216 213 718  77  44  22
 330  73  94 681 200 623 607 258 413 616 490 296 574 171 271 315  66  78 165 242 501 445 475 688 555 132 496
 538 185 658 561  33  45 592  17 177 727 678 458 259 553  88  57 207 622 668 394 280 543 241  61 147 604 462
 453 128 597  96   3 150 429 560 468 432  67 554  97 509 636 591 293 632  28 575 532 244 524  76 619 499  63
 729 568 232 176 240 166 275 226 174 267  10 124 210 441 287 148 672 576 304 525 170 674 470  25 706 566 172
 123 491 513  13 564 225  79 129 114 648 620   6 640 625 364 709 227 157  55  72 601 593  53 268  89 479 323
 250 189 198 724 641  34 613 570 469 694 421 433 449 720 662  19 440 518 542 627 121 352 598  42 192 139 726
 235 667 577 262 500 483  46 438  30  15 712 369 587 321  74 265 610 307 253 434  16 558 635 624 162 219 456
 424 376 373 393 419 411 377 155 442 361 370 436 138 406 585 388 395 368 414 328 401  98 417 312 383 408 277
 382 385 359 336 356 324 381 399 378 365 403 345 316 274 362 489 400 347 409 353 344 333 366 340 397 374 338
 392 332 341 326 367 294 339 272 387 331 342 310 350 355 357 579 349 327 325 523 390 334 313 351 282 690 297
  51 301 447 602 519 541 153 360 630 144 257 163 248  27 614 160 711 269 565 178 603 654 569 444  81 502  62
 546 111 571 245 380 273 159 660  36 285 559 657 103 485  92 676 346 547 492 299 540 572 173 220 233 295 300
 320 231  39 605  84 464 716 179   2  50 695 702 221 478 145 683 563 151  24 638 653 305 467 493 488 418 504
   5 476 199 389 142 437 348  41 263 530 141 302 251 290 281 190 169 197 503 379 497  49 188 584 528  48 202
 486 309 407 535 149 722 119 208 556 611 578 550 106 249 431 670 465  38 292 410 180  59 661 643 507 363 125
 506  58 460 127 682  75 223 626 261 182 358 673 446 230 686 405  71 451 466 215 126 588 415 545 113 252 615
 687 631 246 306 430 650 482 459 134 133 100 193 621 659 116  52 651 536  80 684 247  65 652 708 671 633 705
 181 596  85 425 590 649 646 723 710 404 205 599 175  90 391  68  70 692 454 140 343  83 416  31 164 212 713
 699 117 698 203 206 195   4 685 264 237 629 484 704 573 217 255 322 118 703 589  11 317 135 136 664 110 580
 279 112 239 372 714 689 474 131 725 191 183 196 600 477  54 461 243  20 209 498 517 487 270 152 443 691 428
 161 511 102 130 204 567 384 260 612 108 137 156 335 224 594 637 105 717 457 707 452 435  87 526  29  14 512
 634 450 728 386 234 329 298 283 402 521 480 284 666  60 527 211 104 427 168  82   7 472  23 581 537 642 319

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0003e+07us (= 10003ms, 10.003s)
Wall-clock time (full program): 1.00584e+07us (= 10058.4ms, 10.0584s)
Satisfaction error: 10
Number of search iterations: 2599
Number of local moves: 2228 (including on plateau: 2183)
Number of local minimum: 8 (including on plateau: 273)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 494 515 32 120 516 214 548 522 639 286 167 647 514 586 701 618 557 154 218 420 663 562 9 47 201 236 143 => the sum is 10329 rather than 9855
Problem in row 9: 729 568 232 176 240 166 275 226 174 267 10 124 210 441 287 148 672 576 304 525 170 674 470 25 706 566 172 => the sum is 9133 rather than 9855
Problem in row 10: 123 491 513 13 564 225 79 129 114 648 620 6 640 625 364 709 227 157 55 72 601 593 53 268 89 479 323 => the sum is 8780 rather than 9855
Problem in row 11: 250 189 198 724 641 34 613 570 469 694 421 433 449 720 662 19 440 518 542 627 121 352 598 42 192 139 726 => the sum is 11383 rather than 9855
Problem in row 18: 320 231 39 605 84 464 716 179 2 50 695 702 221 478 145 683 563 151 24 638 653 305 467 493 488 418 504 => the sum is 10318 rather than 9855
Problem in row 19: 5 476 199 389 142 437 348 41 263 530 141 302 251 290 281 190 169 197 503 379 497 49 188 584 528 48 202 => the sum is 7629 rather than 9855
Problem in row 20: 486 309 407 535 149 722 119 208 556 611 578 550 106 249 431 670 465 38 292 410 180 59 661 643 507 363 125 => the sum is 10429 rather than 9855
Problem in row 22: 687 631 246 306 430 650 482 459 134 133 100 193 621 659 116 52 651 536 80 684 247 65 652 708 671 633 705 => the sum is 11531 rather than 9855
Problem in row 26: 161 511 102 130 204 567 384 260 612 108 137 156 335 224 594 637 105 717 457 707 452 435 87 526 29 14 512 => the sum is 9163 rather than 9855
Problem in diagonal 0: 494 697 680 471 608 623 592 560 174 648 421 369 138 274 357 160 346 151 503 410 126 65 416 136 443 14 319 => the sum is 10195 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 564 518 358 166 476 573 347 355  82 568 207 415 216 622 226 581 115   4  64 514 120 378 649 673 530 103 431
 502 701 702 468  78 303 341 599 635 267 578 666 149 203  35 249 246 538 247 425 411 243  24 148 147 524 426
 225 301 677 593 101   2 444 439 662 181 111 317 664 122 626  18 580 372 531  86 658  30 160 605 202 515 633
  21 655 685 663 423  94 560  80 167 724 162 487 499 145  85 477  34 710 144 379 367 466 619 627 178 153 251
 245 210 505  22 729 212 329 302 422 690  36 289 714 584 262  95 182 630 711 253 470 678 110 585 248 173 512
 118 607 589 683  41 611 454  37 513 241 429  79 553  13 567 198 668 586 104 556 235 176 359 305 576 239 318
 276 204 456 190  12 227 424 671 280 433 659 595 234 171 151 597 703   5  58 261 709 232 217  56 693 177 268
 116 551  17 156 550   1 418 634 533 516 131 138  61 554 273 651  55 291 331 616 647 695 146 230 523 527 494
 594 255 141  40 136 501 420 320 495 657  27 529 293 535  68 133 410 403 474 478  99 330 163 504 244 665  98
 236  52  63 258 401 127 510  77 722 475 283 473 486 186 540 472 284 189 621 294 623 450 224 442 508 187 672
 656 209  83 469 274 465 723 704 206 222 447 639  46 254 452 140 421 229 432 412  39  45 700  38 269 707 574
 544 134 282 563 464 183 174 263 126 449 260 152 705 483 521 481 453 684 644 139 108 325 536 579  25 667 396
 393 392 434 391 402 692  90 259 383 343 371 164 357 408 374 405 399 377 387 326 361 382 188 409 389 395 384
 463 158 520 437 661 287 716 596 369  49 200  76 220 346 128 390 694 170 195 608 522  14 592 157 413 159 715
 270 364 400 376 338 311 315 285 332 344 373 266 333 388 558 351 314 334 339 368 309 489 328 304 547 348 571
 123 349 624 307 366 679 681 155 345 352 121 461  67 275 337 308 587  97 471 322 310 278 721 179 480 290 570
 363 572 398 427 297 500 641   3 288 636 394 591 559   7 507 113 231 546 438 713 300 199  89 643  92  44 264
 292 625   9   6 215 467 353 498 699 132 720 606 336 279 386 638 459 218 272 129 414 557 342 306 100 660 137
 600  65 640 250 223 416 497 298 445 142 648 385 598 192 208 233 196 194 214 441 718 534 356 528 620  42 172
 674 726 228  62 397 184  66 180  75 555 680 552 240 669 462 687  69 577 381 175  48 642 562 125  11 488 340
 460  88 482 698 653  87 169 583 575  96 380 191  19 548 312 446 617 503  29 286 165 582 652 542 602  91 135
 455 327 150 193 689 492  60  23 271 109 448 323 632 335 614  93 629  57 686 537 545  81 404 406 670 407 219
 370 479 728 539 205 725  59 324  73 354 119 252 124 130 601 107 112 102 631 675 238 525 360 221 646 613 543
 532 350 237 517 365 628 569 154 168 242 496 511 458 719 257 549 265 654  31  84 197 296 612 106 440 590 603
 114 417 211 727 609 362 213 697  72  28 566 490 565 435 201 712 485 451 375  74 484 321 277 419 105 430  15
 506 493  51  50  33 706 256 682 618 509 313 161 610 561 676 436  32 491 526  54 688 319   8 708 281  16  71
 143  53 185 604 717  20  26 637 299 541 696  47 117 691 428 295 615 443 519 650  70 588 457  10 316 645  43

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.0056e+07us (= 10056ms, 10.056s)
Satisfaction error: 6
Number of search iterations: 2904
Number of local moves: 2404 (including on plateau: 2355)
Number of local minimum: 20 (including on plateau: 304)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 245 210 505 22 729 212 329 302 422 690 36 289 714 584 262 95 182 630 711 253 470 678 110 585 248 173 512 => the sum is 10198 rather than 9855
Problem in row 7: 276 204 456 190 12 227 424 671 280 433 659 595 234 171 151 597 703 5 58 261 709 232 217 56 693 177 268 => the sum is 8959 rather than 9855
Problem in row 9: 594 255 141 40 136 501 420 320 495 657 27 529 293 535 68 133 410 403 474 478 99 330 163 504 244 665 98 => the sum is 9012 rather than 9855
Problem in row 12: 544 134 282 563 464 183 174 263 126 449 260 152 705 483 521 481 453 684 644 139 108 325 536 579 25 667 396 => the sum is 10340 rather than 9855
Problem in row 21: 460 88 482 698 653 87 169 583 575 96 380 191 19 548 312 446 617 503 29 286 165 582 652 542 602 91 135 => the sum is 9991 rather than 9855
Problem in row 24: 532 350 237 517 365 628 569 154 168 242 496 511 458 719 257 549 265 654 31 84 197 296 612 106 440 590 603 => the sum is 10630 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 383 415  99 195 651 630 583 413 249 492  72  34 422 535  17 688 636 241 376 485 528 606  37 269 140  98 701
  15 358 505 440 162 247 382 480 650 569 438 329 321 278 205 589 547  18 324 254 212 106 219 271 706 677 553
 158 482  30 562 289 718 143 617 414 165 568  16 580 719 566 649 229 189 431  36  70 512 446 159 378 225 504
 115 233 426 131  48 353 268 111 232 129 687 685 257 538 570 255  87 197 484 351 531 693 184 629 161 166 572
 293 441 379  63 530 335 615 142  62 345 624 642 627  53 251 454 196 116 313  83 584 668 621 483 487 276 172
 474 186 494 458 234 391 498 370 456 519 100 503 681 684  88 216 123 323 210 274 120 541 561 318 674 469  65
 179 124 598 513 261 122 396  84 407 602 689 468  67 144 419 355 236 710 542 273 545 591 221 112 445 290 462
 678 679 220 175 526 709 532 558 551 354  51 720 429 481 132 390 477  43  93 546  24  44 500 554 442 231 280
  38 301 126 435   5 534 246 336 619 316 464 164  27 515 155 406 506 597 502 208 660 518 549 248 539 237 604
 139 722 168 595 548  31 130 371 105 198  91 213 244 218 680 386 622 491 194 707 514 369  29  90  11 537 145
  78 411  81 448 452 463 104 322 439 461 421 453 436 465  66 223 459 444 451 471 455 449  58 433 434 402 476
 715 306   3 282 337 488 320 308  95 704 555 543 125 207  39 387  46 667 716 691 296 295  23 192 696 666 153
 222 395 432 409 405 408 346 250 334 385 259 356 363 416 661  28 401 374 417 423 375 377 397 360 364 333 365
 694 581 618 325 723 430 102 134 361 724 150 466 119 332 174 171 262  86 697 489 427 136 339 517 342 579 686
  26 243  92 726 495 682 327 588 157 294 671 312 253 443 450 516 348 127 611 330  56 267 637 567 265 586 173
 717 623 331 326 107 108 388  13 288 536 109 287 300 292 350 286 713 372 425 610 298 653 614 211 314 279 305
 639 214 368  32 110 202 705 340 698 457 245 170 703 647 160 640 141 299 114   7 608 573 527 201 239 478 338
 389 178 490 507 398 524 644 264 473 242 190 188 544 258 673 304 352 400 486  45  64 228  82 525 607 215 317
 593 135 590 655 315  89 209 310 291 662 200 675 447 147 654 692 154 648 193 148 343 467 152 664 183  76 163
 394  80 281 571 493 633 727 137 252  35 523 181 227 556 559 176 380 437  54 381 460 612 657 404  42 191 412
  97 509 645 303 577 319 266 224 632  96 714  71 690 373 277 199  59  22  73 576 711  25 418 695  55 700 529
 367 275 470 384 699 169  14 683  74 151 113  47 582 628 638 204 392 284 574 594  10 362 424 670 118  33  69
 479 297 613 311 128 260 676 399 156 410 349 499 669  19 729  60 540 564   8 672 146   2 702 359 217  94 497
 721 357 309 187 366 283  79 575 563 285 663 565  50  57 344 616 182 550 121 600 609  85 472  20 620 475 101
 585 599 103 552 206  61 511 712 725  77 508 403 133 167 420  75 521 501 578 307 235 226 708 601 347 341 557
 658  68 656  40 641 238 603 592  12  21 138 625  49 631 185 256 659 520 665 177 328 180   6 302 533 605 652
   9 643 728 230 149 428  41 522 560 626 263 240 510  52 393 634 587 635 203 117 646 270 272   1 496 596   4

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00583e+07us (= 10058.3ms, 10.0583s)
Satisfaction error: 11
Number of search iterations: 2962
Number of local moves: 2490 (including on plateau: 2446)
Number of local minimum: 21 (including on plateau: 289)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 383 415 99 195 651 630 583 413 249 492 72 34 422 535 17 688 636 241 376 485 528 606 37 269 140 98 701 => the sum is 9995 rather than 9855
Problem in row 4: 115 233 426 131 48 353 268 111 232 129 687 685 257 538 570 255 87 197 484 351 531 693 184 629 161 166 572 => the sum is 9093 rather than 9855
Problem in row 6: 474 186 494 458 234 391 498 370 456 519 100 503 681 684 88 216 123 323 210 274 120 541 561 318 674 469 65 => the sum is 10030 rather than 9855
Problem in row 8: 678 679 220 175 526 709 532 558 551 354 51 720 429 481 132 390 477 43 93 546 24 44 500 554 442 231 280 => the sum is 10419 rather than 9855
Problem in row 10: 139 722 168 595 548 31 130 371 105 198 91 213 244 218 680 386 622 491 194 707 514 369 29 90 11 537 145 => the sum is 8548 rather than 9855
Problem in row 14: 694 581 618 325 723 430 102 134 361 724 150 466 119 332 174 171 262 86 697 489 427 136 339 517 342 579 686 => the sum is 10664 rather than 9855
Problem in row 15: 26 243 92 726 495 682 327 588 157 294 671 312 253 443 450 516 348 127 611 330 56 267 637 567 265 586 173 => the sum is 10242 rather than 9855
Problem in row 18: 389 178 490 507 398 524 644 264 473 242 190 188 544 258 673 304 352 400 486 45 64 228 82 525 607 215 317 => the sum is 9587 rather than 9855
Problem in row 22: 367 275 470 384 699 169 14 683 74 151 113 47 582 628 638 204 392 284 574 594 10 362 424 670 118 33 69 => the sum is 9028 rather than 9855
Problem in row 25: 585 599 103 552 206 61 511 712 725 77 508 403 133 167 420 75 521 501 578 307 235 226 708 601 347 341 557 => the sum is 10759 rather than 9855
Problem in row 26: 658 68 656 40 641 238 603 592 12 21 138 625 49 631 185 256 659 520 665 177 328 180 6 302 533 605 652 => the sum is 10040 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 440  51 606 230  17 721   3 225 708 674 605 518 265 477 276 188  45 206 466 229 250 657 547 456 563  97 335
 710 236  47 528 584 143 648 413 223 198  69 627 238 400 483 150 274 189 201 517 512 673 180 553 135 680 244
 235 323 671 221 409  76 542 183 664 114 679 139 259 488 571  40 193 514 684 402  44 449 399  87 635 615 219
 729 538   5 382 450 447 482 487 293 122 507 718  42 640 481 317 503 653 387 126 310 327  20 115  52  75 647
 631 423 614 681  67 314 217 611 629 411 104  99 171 613 543 515 322 719 130 105  18 121 601 142 316 643  95
 636 156  83 120 687 554 352 211 321 181 159  61 638 660 319  41 634 442 220 530 304 550 166 303 141 709 677
 655 271 520 202  32 431 182  29 297 522 444 154 283 686  15  86 233 264 508 650 714 513 347 205  80 258 179
 103 275 173 269 455 668 415 284 628 203 149 540 715  64 694 234 475 113 652  10 118 197 580 239 458 421 723
 617 610  78 724 678  30 132  13 381 108 630  90 112 330 490 620 420 298 504  25 306 700 663 176 526  34 560
 525 649 661 644 246 277 175 158 505 559 260 144 412 116  88 693 599 625 566 499 586 429 289 294 470 539 551
 247 266 252 469 567 272 237 521 468 446  74 424 375 438 654 434 339 662 418 148 164  39  98 541 403 464 435
 432 509 253 480 256  12 641 471 242 624 422 581 106 725 228  93 618 414 226 439 204 136 698  65 383  60 689
 417  14 451 376  71 343 426 295 356 385 408 410 448 380 309 389 398 569 696 101 373 368 393 355 407 366 351
 379 392 353 396 405 363 388 342 359 361 390 428 367 346 395 358 337 384 296 308 329 397 348 349 362 369 354
 331 334  79 365 574 386 313 717 404 486 312 302 328 338 391 370 318 425 357 262 364 305 473 257 345 341 378
 119 582 498 224 535 516 479  49 557 667 577 145   1  50 720 534 676  70  21 670   8 485 478 524 213 245 212
 326  66 612 594 110 531 589 690 500 591 281 430 109  68   9 712 593  58 240 433   4 603 651 267 325 441  22
 536  92 527  16 699 184 290 162 279 190 506 590 268   7  94 333 107  11 544 604 707 185  59 565 207 191 579
 210  43  82  46 138 350 598 218 336 192 573 510 476 474 174 622 161 287 320 285 374 249 216 697 701 639 607
 151 416 263 502 495 472 728 545 427 555 196  35 546  38 124 208 199 214 704 564 457 549 231 616 597 556  54
 186 645 692 125 232 695  77 633 288 129  57 200 187 537 153 452 713 568  37 222 646 532 496  19 523  84 727
 147 726 169 344 307 377 572 548 133 261 100 248 529 575 570 282 324 632 291 278 170 596 562 608 280 178  48
  89 146  96 128 492 489 123 711  53 491 688 705 587 583 578 656 494  81 111  36 592  72  56 467 301 519 619
 533 461 360 292 443 372 511 463 172 177 722 600 623 168 394 332  63 666  23 459 683  26 672 561 685 140   2
 243 595 419 165 340 251 155 669 152 215 465 691 602 270 137  62 131 401 637 609 497 445 286 241 621 501  55
 195 484 588 706 406 454 371 134 453 311 315   6 493 227 665 576 658 117  31 642 659  85  91 716  24 254 194
  33 552 703 626 160 127 209  73  27 682 163 460 675 157 300 558  28 273 585 702 462 167 255 437 102 436 299

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00516e+07us (= 10051.6ms, 10.0516s)
Satisfaction error: 10
Number of search iterations: 2619
Number of local moves: 2215 (including on plateau: 2169)
Number of local minimum: 13 (including on plateau: 279)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 655 271 520 202 32 431 182 29 297 522 444 154 283 686 15 86 233 264 508 650 714 513 347 205 80 258 179 => the sum is 8760 rather than 9855
Problem in row 10: 525 649 661 644 246 277 175 158 505 559 260 144 412 116 88 693 599 625 566 499 586 429 289 294 470 539 551 => the sum is 11559 rather than 9855
Problem in row 12: 432 509 253 480 256 12 641 471 242 624 422 581 106 725 228 93 618 414 226 439 204 136 698 65 383 60 689 => the sum is 10007 rather than 9855
Problem in row 18: 536 92 527 16 699 184 290 162 279 190 506 590 268 7 94 333 107 11 544 604 707 185 59 565 207 191 579 => the sum is 8532 rather than 9855
Problem in row 19: 210 43 82 46 138 350 598 218 336 192 573 510 476 474 174 622 161 287 320 285 374 249 216 697 701 639 607 => the sum is 9578 rather than 9855
Problem in row 20: 151 416 263 502 495 472 728 545 427 555 196 35 546 38 124 208 199 214 704 564 457 549 231 616 597 556 54 => the sum is 10442 rather than 9855
Problem in row 23: 89 146 96 128 492 489 123 711 53 491 688 705 587 583 578 656 494 81 111 36 592 72 56 467 301 519 619 => the sum is 9963 rather than 9855
Problem in row 24: 533 461 360 292 443 372 511 463 172 177 722 600 623 168 394 332 63 666 23 459 683 26 672 561 685 140 2 => the sum is 10603 rather than 9855
Problem in row 27: 33 552 703 626 160 127 209 73 27 682 163 460 675 157 300 558 28 273 585 702 462 167 255 437 102 436 299 => the sum is 9251 rather than 9855
Problem in diagonal 0: 440 236 671 382 67 554 182 284 381 559 74 581 448 346 391 534 593 11 320 564 646 596 56 561 621 254 299 => the sum is 10651 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 699 150 336  95 591  70 693 131 622 168 481 495 130 184 285 209 651 468 516 566 275 278 522  23 584 438 195
 368 721 207 515 343 533 306 331 570 571 243 287 312 274  98 128 216 109 176 719  39  75 689 608 372 708 388
 238 474 576 725 667  86  31 349 665 190 713   1 104 628  43 461 449 247 707 145 453  63 116 346 543 246 475
  88 528 148 648 359 546  42 391 597 478 105 521 194 698 241 177 295 527 565  16 509 208 125 593 679 163 414
 350 147   5  67  61 114 727 345 354 115 154 714 196 156 697 408 513 673 217 229 162   8  69 206 213 653  27
 530 199 625 375  15 652 555 609 358 203 484 138 173  17 460 167 220 595 670  33 504 712 132 230 696  26 477
 245 508 178 692 398 231 605 367 251 369 219 556 538 344   9 694 311  53 257  46 399 592  96 441 467 298 691
 617 171 284 627 444 319 550 106  40 263 357 309 427 680 579 470 265 535  28 457 157 492 709 302 320 183 164
  21 101 596 158 726  35  45 236 405 645 432 573 629 400 686 191 494 479 107 514 644 334 232 702 587 431  94
 352 590 179 117 188 567 534  68 175 523 539 723 421 447 675  41 716 491  24 144 124 507 277 456  85 541 351
 423 276  38  54 240 658 426 451  30 547 383 485 424 242 415 445 361 466 607 517 370  34 633 395 374 121 440
  97 385 322 386 393 373 480 381 416 434 413 341 650 337 458 377 186 303   2 397 342 420 378 437 553  84 510
 407 313 380 376 422 524 487  93 330 406 333   7 511 471 335 512 428 519 252 281 435 338 411 139 172 586 387
 110 446 520 537 339 637 462 443 724  60 615 526  78 256 129 701 149 189 688 307 100 392 558  91  29 200 569
 293 439 355 360 382 316 518 657 404 589 379 436 253 362 315 476 329 402 366 305 269 271 500 201 266 197 215
 328  59 661 111  11  18 279 496 472 301 142 210 599 262   6 304 396 572 621 703 160 668 384 464 624 498 506
 582  99 561 249 365  51 140 503  74  56 119  37 562 642 557 193 205 469 166  87  92 501 728 554 690 632 578
  66 296 258 433 722 198 317 155 548 348 715 656 577   4 549 502 212 294 419 630 299 244 308 585 250  44 226
 403 483 636 681  58 324 185 151 288 113 202 268 291 710 655 152 292 261 611 310 649  20 459 711 410  90 442
 683 718 143 674 544 603 228 612 347 340 222 135 267 259 286  49 141 255 289 192 678 463 394  77 214 454 588
 182 235 112 364 448 559 123 536  89 604 687 664 682 227 430 600  52  50 669 417  80 581  57 560  25 618 204
 264 717 531 127   3 606 211 505 356 654  65 300 497  12 260 318 663 223 390 574 610 409  62 551  72 705 170
 646 429 323 626 490 187 180 174 450 623 613 270 159 314 685 489 272 225 635 532 363 598 103 133 486 120 465
 540 545 418 146 452  76  83 122 525  19 631 280 282 580 239 161 634 614 218 371 488 729 620 169 137 455 321
 493  13 254 499 482 619 640 401  36 672 325  73  10 575 283 706 564 638 234 616 327 153 102 108  71 290 671
 704 677 568  48 594 720 332 583 647  22  47 248 326 695 425 700 181 134 389 666 684 353 662 552 639 601 273
 126 136 641 165 118 233 676 659  82 542 237 602 563  79  55 224 660  64  32  81 643 412 529 221 297 473  14

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00546e+07us (= 10054.6ms, 10.0546s)
Satisfaction error: 8
Number of search iterations: 3382
Number of local moves: 2819 (including on plateau: 2773)
Number of local minimum: 27 (including on plateau: 326)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 368 721 207 515 343 533 306 331 570 571 243 287 312 274 98 128 216 109 176 719 39 75 689 608 372 708 388 => the sum is 9906 rather than 9855
Problem in row 3: 238 474 576 725 667 86 31 349 665 190 713 1 104 628 43 461 449 247 707 145 453 63 116 346 543 246 475 => the sum is 9741 rather than 9855
Problem in row 5: 350 147 5 67 61 114 727 345 354 115 154 714 196 156 697 408 513 673 217 229 162 8 69 206 213 653 27 => the sum is 7580 rather than 9855
Problem in row 9: 21 101 596 158 726 35 45 236 405 645 432 573 629 400 686 191 494 479 107 514 644 334 232 702 587 431 94 => the sum is 10497 rather than 9855
Problem in row 17: 582 99 561 249 365 51 140 503 74 56 119 37 562 642 557 193 205 469 166 87 92 501 728 554 690 632 578 => the sum is 9492 rather than 9855
Problem in row 23: 646 429 323 626 490 187 180 174 450 623 613 270 159 314 685 489 272 225 635 532 363 598 103 133 486 120 465 => the sum is 10590 rather than 9855
Problem in row 26: 704 677 568 48 594 720 332 583 647 22 47 248 326 695 425 700 181 134 389 666 684 353 662 552 639 601 273 => the sum is 12470 rather than 9855
Problem in row 27: 126 136 641 165 118 233 676 659 82 542 237 602 563 79 55 224 660 64 32 81 643 412 529 221 297 473 14 => the sum is 8564 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 728 290  75 209  77 465 446 157 312 140 284 655  76 408 578 311  31 377 573 255 591 469 538 712 676 419   3
  73 415 526 264 304 521  71  57 530 168 129   2 398 658 529 671 200 598  66 299 701  83 669 499 120 666 638
 334   6  86 357 245  44 394 594 702 102 138 174  95 627 518 452 464 269 508 201 635 582 613 502 720 476  17
 562  70 242 646  96 405 166  45 137 158 724 266 572 563 287 192 154 689 486 620 376 248 389 417 474 360 511
 681 185 292 577 622 660 623 569 123 186 340 110 106  85 451 151 640  24 536 254 256 388 593  13 147 617 626
 589 383 438 492 145 586 159 258 719 575 111 590 624 211 134  41 694 182 714 259 244 542 126 251  27 570 191
 644 275 528 726 619 135  38 370 463 514 505 436 285 107 210 171  74 710 606  14 718 113 105 588 547 270 203
 618   4 132 479 382 272 161  50  55 167 609 651 641 289  88 673 114 662  15 504 416 680 424 121 540 704 404
 433 587 414 581 683  58  36 516 288 468  94 489 387 604 116 558 668  46 709 437  19   7  25 276 601 101 654
  90 481 584 122 703 425 230 715 390 493 544 100 677 440  37 268  48 430 633 235 213 333 378 647 183 177 279
 109 484 475 509 431 198 233 176  35 523 401 524  69 193 359 639 698 534  61 663 657 194 277 442 238 250 483
 477 189 722 261 190 241 260  92 556 717  49 412 551 560  51 485 347 497 226 634 706 375 473 160 585 399 592
 561  52 418 391 410 664 313 682 380 199 104  18 439  82  65  34 236 625 402 232 531 549 602  42 692 705 427
 393 344 365 407 397 364 348 372 346 426 350 355 384  56 358 392 338 369 343 339 371 637 317 498 318 362 306
 341 326 363 330 353 716 679 351 337 316 342 349 307 428 327 352 262 314 298 368 324 354 361 297 319 356 385
 300 533 699 323 220 195 630 409 652 181 423 293 396 175 675 294 441 421 579  43 265 332  79 302 243 457 295
 345 546 628  80 227 697 470 725 291 406 218 117 631 721 686 112 305  30 257   5  11 224 645 231 659 555  33
 429 553 173 115  39 568 653 496 490 286 488  93 612 491 367 495 413 308 335 513  99 537 420 162 103 169 448
  40 595 144 131 522 443 656 267 661  26 202 219 133 480 596 541 723  62 204 435 124 460 501 462 453  91 684
 296 729 605  21 512 208 315 170  60 525 574 611 278 691 320 281 543 172 466 696 196  29 249 545 253 374 136
 535 503 222 128   1 246 184 216 678 643 228 237 247 331 125 178 616 559  10 557 188 610 693 381 708 321 510
 500 379 303 711 548 119 520 153 127 688 667 450 713 459 670 456 517  87  81 146 539 152  22 373 148  47 280
 263 665  98  28 143 164 527 240 603 282 621 571 271 507 455 467 608 434 454 515 118   8 163 576  54 225 672
 207  68 142 445 366 629 336 564 212  32 687 274 221 283 449 580 386 180 179 599 471 649 239 566 150 632 309
 187 674  89 565 472 447 583 695 482 690 141 552   9 130 532 400  67 325 273 215  78 444  72  84 310 328  63
 108 322 614 554 642 229 727 494  20 329 487 607 519 223 411 597 252 650 636 217 458 149 234  23 155  59 139
  12 197 478 403 506 156  97 422 206 615 395 700 214  53 461  64  16 301 205 600 550 707 648 685 432 165 567

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00558e+07us (= 10055.8ms, 10.0558s)
Satisfaction error: 5
Number of search iterations: 3589
Number of local moves: 2936 (including on plateau: 2886)
Number of local minimum: 28 (including on plateau: 363)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 644 275 528 726 619 135 38 370 463 514 505 436 285 107 210 171 74 710 606 14 718 113 105 588 547 270 203 => the sum is 9974 rather than 9855
Problem in row 12: 477 189 722 261 190 241 260 92 556 717 49 412 551 560 51 485 347 497 226 634 706 375 473 160 585 399 592 => the sum is 10807 rather than 9855
Problem in row 23: 263 665 98 28 143 164 527 240 603 282 621 571 271 507 455 467 608 434 454 515 118 8 163 576 54 225 672 => the sum is 9732 rather than 9855
Problem in row 25: 187 674 89 565 472 447 583 695 482 690 141 552 9 130 532 400 67 325 273 215 78 444 72 84 310 328 63 => the sum is 8907 rather than 9855
Problem in diagonal 0: 728 415 86 646 622 586 38 50 288 493 401 412 439 56 327 294 305 308 204 696 188 152 163 566 310 59 567 => the sum is 9399 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 335 520 438 429  31 234 225 338 282  45 650 566  66 594 415 309 341 506 709 546 299 658 217 285 402 403 258
  96 216 559 409 375 289 453 572 279 517  11   8 175   2  44 573 475 637  94 691 592 722 656 371 324  41 674
 332 515 653 156 457 297 333 727 568 470 724 416 189 102  38 380 249 591 155 345 435 126 684  32 620  97 164
 570  78 548  80 129 654 587 660  50   4 419 704 404 516 334  21 671 541 302 294  83 271 366 103 624 514 328
 628 131 167 450 325 451 124 121 391 622  71 445 677 141 198 148 701 208   9 304 293 206 385 589  81 639 112
 505 376 555 477  53 669 606  14   7 728 154 292 645 482 683 180 364 340 418 209 146 116 712 407 312 203 202
  95 110 523 621 287  99 195 512 172 238 468 168 528 703 610 496 603 422  59 710 118 474 369 165 239 296 575
 640 426 706 614 191 503 143 212 298 530  86 123 331 557 190 504 526 317 540  36  46 311 295 436 235 538 521
  73 486 114 465 363  22 424 423 444 694 721 524 481 688 417  93 609 410 183  33 286  42 536 689 105 260 270
 574 576 162 166 623 267  20 188 193 236 586 219  34 414 679 562 130 207 501 618 355 318 590 463 288 248 638
 257 716 232 319 552 405 247 567 629 715 137 625  30 412 389 630 307 723 237 373 275 108 135 109 428  54 244
 197 245 495  40  77 321 627 607 729 583 711 374 280  28 498 347 499 601 368  47 460 372  48 344 698 174  85
 488 150 218 581 652 104 378 227 441 261 214 635 531 106 281 392 641 478 454 642 697  56 461 204  10 448 672
 379 343 361 356 365 316 358 354 398 362 383 339 381 393 377 327 353 367 395 359 357 434 399 346 360 342 351
 686 657 551 268 676 228 469 387  29 388 107 138 561 529 382 598 144  70 170  24  17 221 223 534 169 315 600
 269 255 370 558 651 619 682 192  79 272   5 459 390 487 547 253 413 222 578 456 668 401  13 670 194 588 533
  12 161 145 433 525 675 266 310 230 549 494 479 211 265  76 440   6 673 648 326 283 452  91 666 210 695  25
 485 519 284  68 447 449 702  35 579 466 497  57  55 308 408 643  64 458  43 240 681 264 467 720 522 262 132
 580 612 532 163 717 157 113 303 350 626 246  51 199 432 513 142 437 119 492 136 632 595 564 187 186 593 178
 306 252 386 615 611  62 397 518 263 301 384 483 563 337 613 442 329 254 585 582  75 502  72  23 320 565  15
 158 173 491 134 430 229 507 439 425 597 605   3 571 117 273  26 693 471 644 153 584 659 159  82 569 243 420
 443 480  37 215  49 545 707 314 396 115 685 493 604 196  18 111 176  67 411 100 527 553 725 649  90 599 550
  98 696 184 700 185 200 278  89 726  16 290 277 349 602 718 128 462 101 608 400 151 464 616 336 680 179 322
 511 554 313  39 241 633 490  84 274  74 125 617 300 171 120 489 291 147 205 719 544 539 224 560 509 636 446
 256 201  19 455  92 182 213 348 305  63 508 678 596 646 665 535  60 226 713 556 664 699 160 473 662  61 427
 177   1 690 330  88 537  52 647 687 133 323 543 127 233 220 655 242 634 276 472 500 152 661 231 542 352 421
 705 406 122 714 663 708 259 667 631 250 251 139 577 394 149 431  69  65  58 484  87 140  27 181 476 510 692

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00579e+07us (= 10057.9ms, 10.0579s)
Satisfaction error: 10
Number of search iterations: 2805
Number of local moves: 2348 (including on plateau: 2305)
Number of local minimum: 14 (including on plateau: 285)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 335 520 438 429 31 234 225 338 282 45 650 566 66 594 415 309 341 506 709 546 299 658 217 285 402 403 258 => the sum is 10101 rather than 9855
Problem in row 5: 628 131 167 450 325 451 124 121 391 622 71 445 677 141 198 148 701 208 9 304 293 206 385 589 81 639 112 => the sum is 8617 rather than 9855
Problem in row 13: 488 150 218 581 652 104 378 227 441 261 214 635 531 106 281 392 641 478 454 642 697 56 461 204 10 448 672 => the sum is 10422 rather than 9855
Problem in row 15: 686 657 551 268 676 228 469 387 29 388 107 138 561 529 382 598 144 70 170 24 17 221 223 534 169 315 600 => the sum is 9141 rather than 9855
Problem in row 16: 269 255 370 558 651 619 682 192 79 272 5 459 390 487 547 253 413 222 578 456 668 401 13 670 194 588 533 => the sum is 10824 rather than 9855
Problem in row 17: 12 161 145 433 525 675 266 310 230 549 494 479 211 265 76 440 6 673 648 326 283 452 91 666 210 695 25 => the sum is 9346 rather than 9855
Problem in row 25: 256 201 19 455 92 182 213 348 305 63 508 678 596 646 665 535 60 226 713 556 664 699 160 473 662 61 427 => the sum is 10463 rather than 9855
Problem in row 26: 177 1 690 330 88 537 52 647 687 133 323 543 127 233 220 655 242 634 276 472 500 152 661 231 542 352 421 => the sum is 9926 rather than 9855
Problem in diagonal 0: 335 216 653 80 325 669 195 212 444 236 137 374 531 393 382 253 6 458 492 582 584 553 616 560 662 352 692 => the sum is 10992 rather than 9855
Problem in diagonal 1: 258 41 620 103 385 116 118 36 183 207 307 347 281 393 561 459 494 466 350 518 507 545 185 39 19 1 705 => the sum is 8244 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 729 409 250 517 132 223 381 364 668 619   1 126 727 680 129 148 436 394 579 519 634 626 505 306  99 702 175
 270 708 147 559 589 224 332 425 157 249  22 480  26 344 599 475 125 266 214 210 164  51 108 640 473 672 312
 172 627 674 403 127 281 691 200  12  53 698 602 407 617 644 113 136  83   7 695 243 115  36 149 662 305 221
 124 690  46 625 230 227 496 666  72 504  30 614 151  50 456 219 511 444 591 533 119 720 632 233 535  18 319
 349 141  76 339 631 308 384 490 316 464 433  40  35 716 692  34 572 130 134 309 569 441 612 552 426 423 239
 232 159 582 373 688  21 472 225 611   9 646  90  17 112  68  67 277 527 197 639 416 575 158 706 392  29 534
 656 728 183 369  71 346 571 653 287 670 252  92 155 185 231 375  80 152 650 255 539 693 347 432 595 592 439
 413 450 636 107 342 478 253   5 508  86 145 657 289 648 714 638  57 355 434 528 531 284 331  55 302 422 187
 167 258 310 101 315 655 725 186 518  79 489 711 213 470  81 455  93 654 507 283 171  20 703 395 557 133 606
  15 121 607 103 537 722  63 438 468 460 715 485 618 359  91 161 350 495 116 414  11 193 111 701 573 457 471
 491  73 251  82 442 118 466 551 288 541 462 512 445 461 137 327 452 237 338  94 285 660 658 449 484 538  13
 106 238 726 154 494 446 173  84 311 677 336 401 226  23 608 408 176 697 196 663 272 247 520 260 324 365 724
 211 574 503  61 388 532 676 385 411  39 372 435 424  42 704 245 282 192 378  75 204 386 633 264 390 469 580
 412 366 404 353 371 334 361 354 343 377 391 333 393 295 356 389 337 326 345 398 323 400 379 374 417 357 367
 547 630  24 561  74 317 274 325 584 244 156 131 362 382 318 502 448 553 114 681 710 679 271  88 254 329 297
 454 191 198 686 138 550 303 313 298 431 335 304 621 558 180 524 228 600 700 150 280  33 652  38 265 184 641
 498 428 497 487 415 420 348 647 169 286 292  43   4 206 567 296 256 474 637 181 673 493 203 352  27 586 370
 430 583 321 140 205 123 259 174 483 609 341 543 440 380 410 522  32  69 705 246 269 447 190 479 669 616 170
 166 268 437 718 554 405  48 603 217 556 578 208 712 142 501 240 682 188 291 122 667 596 427  85 128 104 212
 320  19 570 162 665 194  95 406 300  37 467 684 685 481 562 499 515 109 278 207 105 459 610 699 419  66 242
 593 486 542 476 177 645 236 178 687 530 165  65 713  47 294 678 421 144 387 577 179 222 694 709  97 275 601
 590  31 399 659 199 218 516 209 620 273 546 451 529 215 418 351 622 492 458 488 396  62   8 719 163 220   3
 696 509 168 598  52 500 314  45 615 721 195 564 402 536 322 649 189   6 229 290 383  96 102 568 628 368 110
 117 363 429  98 555 689 581 683  89 293 453 276 397 544 201 248 661 643 267  44 443 307 261  70 360 160 623
 605 216 153 540 465 182 642 521  25 513 594 340  16 514 301 651 717 560 510  59 526  64  49  56 120 675 241
 482  41 635  78 671 597  60   2 563 477  77 143 549 263  14  54 576 358 565 566 604 523 376 146 234 588 613
  10 548  87 506 328 100 135 723 235  58 664 525 299 585 257 587 624 707  28 629 139 463 279 330 262 202 545

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00567e+07us (= 10056.7ms, 10.0567s)
Satisfaction error: 6
Number of search iterations: 3092
Number of local moves: 2571 (including on plateau: 2522)
Number of local minimum: 32 (including on plateau: 307)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 729 409 250 517 132 223 381 364 668 619 1 126 727 680 129 148 436 394 579 519 634 626 505 306 99 702 175 => the sum is 11078 rather than 9855
Problem in row 2: 270 708 147 559 589 224 332 425 157 249 22 480 26 344 599 475 125 266 214 210 164 51 108 640 473 672 312 => the sum is 8841 rather than 9855
Problem in row 3: 172 627 674 403 127 281 691 200 12 53 698 602 407 617 644 113 136 83 7 695 243 115 36 149 662 305 221 => the sum is 8973 rather than 9855
Problem in row 6: 232 159 582 373 688 21 472 225 611 9 646 90 17 112 68 67 277 527 197 639 416 575 158 706 392 29 534 => the sum is 8822 rather than 9855
Problem in row 7: 656 728 183 369 71 346 571 653 287 670 252 92 155 185 231 375 80 152 650 255 539 693 347 432 595 592 439 => the sum is 10598 rather than 9855
Problem in row 21: 593 486 542 476 177 645 236 178 687 530 165 65 713 47 294 678 421 144 387 577 179 222 694 709 97 275 601 => the sum is 10818 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 727 607 300  91 556  60 320 722 223 311 406  99 463  53  49 625  77 187 674 444 270 388 485 289 192 534 703
 130 447 636  14 672 544 443 433 535 175 315   3 711 396 210 181 593 455 407 616  13 700 489 200 285 168  84
 104 670 580 213  69 492 581  88 299 166 522 582 527 679 322 644 649  21 154 507 286 268 393  65 664 196 114
 439 505 118 653 652 304 103 524 134 156  16 366  79 301 683 574 564 559 208 566 243  41 446 603  10 563 445
 216 272 295 678 358 704 306 292  96 188 693  45  89  90 729  20 342  34 394 410 585 626 599 237 705 264 588
 483 512 171 427 129 493 677  78 162 314 578 107 239 640 456 265 450 459 263 190 555 412  64 567 194 575 395
 317 242 324 332 600 655  40 341 605 638 719 244 123 721 116 520  86 402 418 111 560 153 197 681 109 465 136
 392 110 199 276 573 554 469 405 131  33 619 486 476 460 591  12 490 305 627 536 112 501  67 398 461  30 542
 281 249 702 667 488   8 185 601 528 502 325 381 259  93  25 491 685 448 496 183 494   6 340  75 606 709  28
 164 271  32 102 141  54 543  31  18 689 176 583 695 203 240 238 713 438 608 552 708 117 514 302 147 538 206
 354  59 504 207  22 169 553  50  98 273 204 642 214 408 697 598 441 714 572  17 296 562  44 526 399 609 623
 620 379 148 277 125 233 487 551 359 423 517 432 569 278 400 387 671 189 133 414 179 480 686   2 160 474 282
 523  42 420 345 369 440 422 413 533 338 416 373 428 430 377 437 106 350 375 386 372  80 371 426 344 382 357
 411 378 384 389 380 415 352 370 362 391 365 397 367 261 390 383 316 385 337 349 347 404 351 336 364 343 328
 186 339 329 471 122 218  55 587 401 472  97 656 126 549 546 473 466 645 253 132 376 479 235 515 290 202 635
 135 634 726  46 331 363 696 145 724   5 666 298  66 173 435 570 541  43  74 699 180 121  87 701 417 454 525
 557 613 589 323 241 419 138 170 266 662 334 191 297 669 159 318 269 355  11  92 633 310 717 561 254  39 668
 716 429 225 529 548 692 258 646 457 291 124  83 643 506 424 184 255 195 293 615 252  38 283 119 530 303 217
 222 468 675 234 248 326 621 267 144  73 647 617 425 482  35 228 219 622 245 313 654 251  94 212 597 657 279
 712 477 510 139 431 158 658 246 540 368 227 718 594 151 451 309 629 127 149 637 673 660 165 137 128 193 409
   7 163 511 618 215 568 198 691 481 632 101 161 229 611 172 327 346 550 545 596  37 280 319 453 360 661  23
 100 650  63 576 307  51  52  76 558 209 495 260 547 274  72 532 120 220 710 680 330 715 651 475 571  61 500
 157 113  62 224 152  47 287 201 592 565 519 521 639 308 275 531 146 284 698 174 503 687 182 513 577 250 648
 630 590  95 115 584 624 602 294 353 707  68 226 312  85 612  70 105 499 498 374 142 663 155  71 288 462 631
 682 167 610 720 458 484 150 467  82 595 205 690 247 348 539 231 537  81  26  29 470 321 694 723  19 335  36
 333  48 436 464 356 518 403 688 509 449   4 516  57  58 614   1  24 684 108 177 442 452 586 659 676 361 232
 257 421 211 725 728 262 256 478 665 230 497 178 434 628 236 706  15 604 579  56 143 140 641   9 508  27 221

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.0056e+07us (= 10056ms, 10.056s)
Satisfaction error: 5
Number of search iterations: 3551
Number of local moves: 2864 (including on plateau: 2814)
Number of local minimum: 42 (including on plateau: 315)
Number of resets: 0
Number of restarts: 0

Problem in row 10: 164 271 32 102 141 54 543 31 18 689 176 583 695 203 240 238 713 438 608 552 708 117 514 302 147 538 206 => the sum is 9023 rather than 9855
Problem in row 20: 712 477 510 139 431 158 658 246 540 368 227 718 594 151 451 309 629 127 149 637 673 660 165 137 128 193 409 => the sum is 10596 rather than 9855
Problem in row 25: 682 167 610 720 458 484 150 467 82 595 205 690 247 348 539 231 537 81 26 29 470 321 694 723 19 335 36 => the sum is 9946 rather than 9855
Problem in diagonal 0: 727 447 580 653 358 493 40 405 528 689 204 432 428 261 546 570 269 195 245 637 37 715 182 71 19 361 221 => the sum is 10313 rather than 9855
Problem in diagonal 1: 703 168 664 603 599 412 560 536 496 438 441 387 377 261 126 298 334 291 144 246 198 51 152 115 610 48 257 => the sum is 9515 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
  44 348 469 349  28 687 209 313 521 407  23 404 170 702 511 355 579 361 616 417 216  22 527 726 715 116  20
 572  54 218 188 167 675 481 729 365 122 175 612 392 694 558 147 260 614 324 648 494 132  17 317 310  90 410
 537  34  78 587 659 438 168 429 423 276 262 272 528 453 654  12 108 182 581 665 120 160 398 595  60 634 542
  58 220 641 446 507 117 688 296 597  79 144 483 257 139 599 247 600 624  89 169 322 657 234 437 700 100 405
 601  99 553 638 123 400 291 589 145 703 143 307 493  16 664 575 237 588 536 503 419  56 136  40 311 288 401
 152 208 728 594 671  96 213 546 126  33 140 535 119 618 467 491 661 195 124 497  38 531 232 455 156 696 533
  65 341 465 304 677 393 146  10  19 643 670 224 458  14 131 226 225 644 580 399 174 233 646 699 562 418 489
 695 436 314  24 342   4 184 274 615 610 540 197 463 584 222 515  66  25  84 305 109 331 340 130 424 329 663
 113 549 235 476 477 662 452 431 295 613 248 647 676 228 506 427 229 217 198  97 711 444 165 206 221 239  93
  88 485 242 585 472 204 717 530 223 292 684 524 207 137 286 171 683 256 724 285 290 251 261  64 211 302 681
 544 202  68  63 200 347  85 707 513 656 306 590 570 181  53 678 214  27 710 450 706 550 328 293  55 602 199
 406 525 473 619 114 411 704  82 246 666  36 680 451 708 338 299  59 161 358 254  47 484 574 227 141 500 360
 266  95 252  74 185  91 318 598 460 245 630 563 344 568 339 121 642 561 673 259 526 297   6 166 422  70  72
 402 403 370 395 326 334 387 443 352 337 330 343 377 250 374 333 596 300 369 441 412 373 312 389 414 375 118
 327 564 271 346 203  46 625 459 606  81 554 127 380 268 368 605 520 480 205  51 449 158 456 509  29 636 532
  30 107 396 529 667 555  18  37   9 325 367 651  61 263 714 415 523 445 142 278 194 309 727 679 366  26 573
 362 698 316 154 658 231  45 172 255 457 359  15 106 487 159 505 440 240 280 592 629 697 421 502 471 320 284
 622 391 519  69 102 420 397 336  76 492 129  35 686 479 319 157 354 138 498 682 603 721 660 187  94 541 148
 243 478  42 620  71 552 335 464 482 413 332 608 101 115 351  43 111  87 490 577 289 691 689 578 495 447 151
 433  21 539   1 426 210 496 110 623 303 379   8 230 390 277 253 514 538 364 560 517 701 105 669 196 504 488
 384 674  13  48 301 551 635 462  52   3 381 177 672 308 191 567  80 270 591 582 566 416 376 461 466 219 409
 586 583  86 442 448 713 607 356 454 722 692 128  83 516 428 298 357 709 155 350  98 617 282 383 653 508 626
 468 394 631 685 628 345  41  32 180 371  11 125 258 486  92 569 640 382 430 179 604 236 632 103 510 186 637
 723 557 475 183  62  39 652 283 267 192 512 273   2 134 281 712 275 435  49 112 378 408 388 639 571 705 548
 241 645 649 718 534 719 439 576 633 189 547 363 690 621 287 556 279 315 149  67 176   5 353  57 668 178 265
 238 609 650 565 543 190 372  73 725 432 545 244 470 173 522 501 499 627 215  50 474 212 559  75 385 693   7
 655 135 162 153 264 425 150 518 593 193 716 720 611 323 164  77 104 434 321 386 294 163  31 269 249 133 201

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00564e+07us (= 10056.4ms, 10.0564s)
Satisfaction error: 10
Number of search iterations: 2820
Number of local moves: 2369 (including on plateau: 2325)
Number of local minimum: 21 (including on plateau: 277)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 572 54 218 188 167 675 481 729 365 122 175 612 392 694 558 147 260 614 324 648 494 132 17 317 310 90 410 => the sum is 9765 rather than 9855
Problem in row 8: 695 436 314 24 342 4 184 274 615 610 540 197 463 584 222 515 66 25 84 305 109 331 340 130 424 329 663 => the sum is 8825 rather than 9855
Problem in row 11: 544 202 68 63 200 347 85 707 513 656 306 590 570 181 53 678 214 27 710 450 706 550 328 293 55 602 199 => the sum is 9897 rather than 9855
Problem in row 12: 406 525 473 619 114 411 704 82 246 666 36 680 451 708 338 299 59 161 358 254 47 484 574 227 141 500 360 => the sum is 9923 rather than 9855
Problem in row 13: 266 95 252 74 185 91 318 598 460 245 630 563 344 568 339 121 642 561 673 259 526 297 6 166 422 70 72 => the sum is 8843 rather than 9855
Problem in row 16: 30 107 396 529 667 555 18 37 9 325 367 651 61 263 714 415 523 445 142 278 194 309 727 679 366 26 573 => the sum is 9406 rather than 9855
Problem in row 22: 586 583 86 442 448 713 607 356 454 722 692 128 83 516 428 298 357 709 155 350 98 617 282 383 653 508 626 => the sum is 11880 rather than 9855
Problem in row 25: 241 645 649 718 534 719 439 576 633 189 547 363 690 621 287 556 279 315 149 67 176 5 353 57 668 178 265 => the sum is 10919 rather than 9855
Problem in row 26: 238 609 650 565 543 190 372 73 725 432 545 244 470 173 522 501 499 627 215 50 474 212 559 75 385 693 7 => the sum is 10648 rather than 9855
Problem in row 27: 655 135 162 153 264 425 150 518 593 193 716 720 611 323 164 77 104 434 321 386 294 163 31 269 249 133 201 => the sum is 8444 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
  33 656 191 437 193 294   5  78 506 547 648 440 621 212 579 251 529 712 335 566 159 128 645 265 161 614  50
 465  38 142 309 580  14 426 273 334 328 397 652 238 239 154 592 279  60 108 249 363 577 230 534  82 651 637
 536 383 109 240 431 563  19 344 608 125  52 681  67  92 728 643  71  39  10   6 521 143 683  81 593 388 649
 110 361 623  77 594 618 356 360 548 469 149 327 318  65 670 516 215 340 301 384 578 374  54 448 352 196 452
 331 292 617 463 129 590 639 153 144 531 709 605 501 668 688 216 229 222 330  72 243  31 458  74 387 439  94
 151 682 619 661 262 124 134 432 119 677 489 178 679 355 160 248 455 359 326 283 692 549 220 298 181 264 258
 350 610 408 595 588 172 167  37  93 582 189 672 218 650 163 371 691 416  95 339 174 635 171  58  46 723 642
 202 211 487 180 522 478 556 194 200 425 269 247 235 419 486 261 627 561 524 655 130 199 596 232 152 505 302
 287 241 675 173   8 210 285 564 234 674  98 217 544 495 599 525 227 137   7 337 697 231 320 589 603 382 496
 640  63 454  56 323 724 519 102  51 185 710 508  84 305  16 168 314 575 311 470  79 438 638 156 532 502 367
 545 147 213  61  18  36 184 704 607  41 252 135  32 630 277  66 291  89 157 725 658 560 685 464 509 526 507
 680 148 308 407 272 542 483 601 393 447 245 349 572 703 597 551 214 297 729 664 699 715 105 255 659 120 633
 379 293  85  27 717 276 528 474 558 418  17 636 377 106 520 587 104 567 166 573 274 121 236 700 586  47 624
  87 504 162 312 385 209 430 436 625 459 598  43 484 325  68 412 259 473 490 653 319  53 275 632 317 480 242
 366 358 381 420 380 401 424 466 364  40 390 441 375 406 403 332 445 411 333 368 421 444 396 370 362 354   4
 553 188 192 453 296 591 514 665 150 226  59  48 540 398 654 423 613 399 155   2 179 462 389 722  13 123   3
 111 404 281  12 409 170 386 713 698 457 280 498 373 410 329  62 471 417 644 117 468 244 634 369  20 278 600
 338 485 315 342 479 499 203 434 456 169 201 353 493 254 451 513   9 706 676 503 164 494 197 461 510 116  34
 402 541 517 552 303 475 415 300 669 221 310 422  44 606 482 690 620  55 450  86 571 472  73 576 488 500 250
 268 351 584  69 253 112 395 175 707 198 565 609 136   1 270 114 626 306 433 562 282  70 138 378 205  25 313
 286 357 394 667 530  64 165 622  29 107 145  49 550 721 100 348 141 219 260 195 481 118 400 256 343 346  45
 727 477 695 537 671 646 538 647 295 628 554 139 663 224 316 290 429 716 720 228 533 604 122 186 208 267 391
 131 322 631 611 206 535 345 177  26 225 694  28 719 427  35 629 660 101 405  96 207 257 491 581 515 568 233
  90 518  22 557  42 446 176 187 689 726 602 442 127 392 304 321 615 140 372 684  91 324 708 711 678 543 693
 559 428  23 365 662 336 555  11 237  76 539 113 299  21  75 687  97 583 569 467 511 641 497  30 718  99 657
 616  83 443 570 476  57 307 523 435 460 512 574 190 527 585  15 492 289 686 158 115 266 271  88 288 696 133
 612 714 284 702 126 673 701 183  80 414 182 449 376 204 146  24 132 666 263 413 246 705 223 341 347 103 546

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.0057e+07us (= 10057ms, 10.057s)
Satisfaction error: 13
Number of search iterations: 2542
Number of local moves: 2154 (including on plateau: 2113)
Number of local minimum: 15 (including on plateau: 241)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 465 38 142 309 580 14 426 273 334 328 397 652 238 239 154 592 279 60 108 249 363 577 230 534 82 651 637 => the sum is 8951 rather than 9855
Problem in row 3: 536 383 109 240 431 563 19 344 608 125 52 681 67 92 728 643 71 39 10 6 521 143 683 81 593 388 649 => the sum is 8805 rather than 9855
Problem in row 10: 640 63 454 56 323 724 519 102 51 185 710 508 84 305 16 168 314 575 311 470 79 438 638 156 532 502 367 => the sum is 9290 rather than 9855
Problem in row 11: 545 147 213 61 18 36 184 704 607 41 252 135 32 630 277 66 291 89 157 725 658 560 685 464 509 526 507 => the sum is 9119 rather than 9855
Problem in row 12: 680 148 308 407 272 542 483 601 393 447 245 349 572 703 597 551 214 297 729 664 699 715 105 255 659 120 633 => the sum is 12388 rather than 9855
Problem in row 13: 379 293 85 27 717 276 528 474 558 418 17 636 377 106 520 587 104 567 166 573 274 121 236 700 586 47 624 => the sum is 9996 rather than 9855
Problem in row 14: 87 504 162 312 385 209 430 436 625 459 598 43 484 325 68 412 259 473 490 653 319 53 275 632 317 480 242 => the sum is 9732 rather than 9855
Problem in row 16: 553 188 192 453 296 591 514 665 150 226 59 48 540 398 654 423 613 399 155 2 179 462 389 722 13 123 3 => the sum is 9010 rather than 9855
Problem in row 19: 402 541 517 552 303 475 415 300 669 221 310 422 44 606 482 690 620 55 450 86 571 472 73 576 488 500 250 => the sum is 11090 rather than 9855
Problem in row 20: 268 351 584 69 253 112 395 175 707 198 565 609 136 1 270 114 626 306 433 562 282 70 138 378 205 25 313 => the sum is 8145 rather than 9855
Problem in row 21: 286 357 394 667 530 64 165 622 29 107 145 49 550 721 100 348 141 219 260 195 481 118 400 256 343 346 45 => the sum is 7938 rather than 9855
Problem in row 22: 727 477 695 537 671 646 538 647 295 628 554 139 663 224 316 290 429 716 720 228 533 604 122 186 208 267 391 => the sum is 12451 rather than 9855
Problem in row 24: 90 518 22 557 42 446 176 187 689 726 602 442 127 392 304 321 615 140 372 684 91 324 708 711 678 543 693 => the sum is 11200 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 540 189 210 526 215 624 188 284  53 401 418 219 279 617 595 258 389 510 476 577 106  26 583 377 627 683 201
 434 505 218 146 715  15 672 607  80 639 629 174 705 265 231 422 152 363 414 172  27 364 552 490 135  40 689
 555 506  82 205 661 220 602 397 176 180 454 714 313 456 358 673  20 475 653 509 321  45 395 297  31 428 129
 183 679  71 447  47   4 495 275 644 384 571 362 626 238 712 635 470 100 455 423 402 226 390  37 407 457 115
  58 161 168 406 151 307 690 369 323 674 365 273  19  24 570 640 727 472 531 432 569   6 396 530 169 206 619
 535 186 486 223 649 207 371 301  94 452 108 153 588 692 302 147 660   5  60 451 256 236 686 553 645 480 329
  76 333 394 584 561 318 237 211 425 227 170 352  41 719 292 499 563 568 268 688 154 439 303 114   7 716 596
 262 375 233 382 388 250 332 608  17 695 701 694 145 536 646 501 204  54 120 440 298 637 191 132 420 136 458
 450 130 654  96 709 224  99 603 611 213  81 605 334 239 474 295 393 335 327 398 195 541 336 177 564 560 212
  63 197 243 516  67 119 234  18 702 208 426   9 290 667  85 590 659 235 721 444 548  72 225 403 537 469 616
 357 591 489 346 503 112 508 306 214 387 345 296 671 283 481 178 430 126 319 322 525 386  92 291 317 453 527
 685 304 181 597 349 270 404 259  57 133 272 184 107 252 723 681  90 260 675 494 412 286 500 491 436 203 550
 621 528 251  98 415 431   3 559 473 523 366 462 668 157 285 150  84 574  48 612 448 593 567  30 676  46 187
 703 468 198  23 385 722 373 122 630 355 707 309 350 370 543 520 488 148  55 693 725 173 446 580 216 125 614
 269 264  83 137  29 521 229 708 179 670 140  52  86 113 141 477 391 573 546  38 435 171 348 342 374 142 615
 222 165 461 720 579 566 502  39 305 104 628 483 642 372 110 287 729 240 368 139 111 351  21  36 710 411 554
   8 556 657 288 255 460 666 331 429 438 498 254 246  75 175  25 592 459 325 248 680 538 199 565 131 648 109
 163 698 613  62 410 485  89 409 562  93 445 533 545  78  65 102 618 383 706  35 572 575 641 196 221 202 354
 326  11 328  44 413 479 631 663 519 421 228 697 664 497 606 261  77 463 359 281 684 687 128 378 482  43 636
 158  22 487 691 101 609 314 539 652 344 504 620  79 190 347 408 471 678 134 433  32 586 312 381 144 514 105
 376 340 257 311  59 638 289  10 185 121  50 437 655 700 557 300 392 656 245  51  73 665 717 711 320   1 360
 267 356 330 379 156 604 464 551 587 718 193 625 585 623  34 266 478  87 277 361 271 634  42 367  12 339 249
 424 274 399 507 699  28 405 633 241  14 682  88  61 337 143  74 343 192  33 704 315 316 594 669 518 650 512
 515 544 449 622 253 466 138 117 465 182 522 532 159 511 294 651 123 696 155  70 610 427 467 308 299 118 162
 647 164 600 558 278 484 443 578 598 324 200  13 441 493 280  16 116 442 400 353 517 244 529  91 217 662 167
 726 728 589 524 599 276 230  95 341 242 103 549  64  69 310 380 194 601 542 149  56 534 127 632 582 547  66
 232 581 724 417 209 416 247 263 293 713  49 166 492 282 496 419   2 160 643 338 513  97  68 677 658 576 124

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00577e+07us (= 10057.7ms, 10.0577s)
Satisfaction error: 6
Number of search iterations: 3057
Number of local moves: 2551 (including on plateau: 2503)
Number of local minimum: 24 (including on plateau: 286)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 540 189 210 526 215 624 188 284 53 401 418 219 279 617 595 258 389 510 476 577 106 26 583 377 627 683 201 => the sum is 10171 rather than 9855
Problem in row 10: 63 197 243 516 67 119 234 18 702 208 426 9 290 667 85 590 659 235 721 444 548 72 225 403 537 469 616 => the sum is 9363 rather than 9855
Problem in row 14: 703 468 198 23 385 722 373 122 630 355 707 309 350 370 543 520 488 148 55 693 725 173 446 580 216 125 614 => the sum is 11041 rather than 9855
Problem in row 15: 269 264 83 137 29 521 229 708 179 670 140 52 86 113 141 477 391 573 546 38 435 171 348 342 374 142 615 => the sum is 8073 rather than 9855
Problem in row 19: 326 11 328 44 413 479 631 663 519 421 228 697 664 497 606 261 77 463 359 281 684 687 128 378 482 43 636 => the sum is 11006 rather than 9855
Problem in row 21: 376 340 257 311 59 638 289 10 185 121 50 437 655 700 557 300 392 656 245 51 73 665 717 711 320 1 360 => the sum is 9476 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 705 129  46 671 201 472 162  11  56 195 596 661 505 426 161 601 244 552  88 275 674 202 519 329 530 197  65
 318 179 156 443 170 673 414 574 487  15 719 578 689  43 568 613  29 682 358 662  60 726 728 324 377 670 633
  64 157 592 181 274 373 100 714 177 645 191 278 667 520 174 686 647 152 512 133  95 387  33 348 621 458 676
 430  37 652 167 420 169 407 692 339 658 302 320 246 292 693 501   9 616 683  45 444  14 437 332 367 340 243
  58 706 150 228 172  10 346  38 532 566 464 678  17 703 587 550 534 159 225   3 450 266 140 315 533 558 577
 630 611   5 343 417  91 617 526 118 424 166 544 503 666  85 298 231 644 345 355 328 524 220 351 229  98 486
 383 205 585 535 271 465 575 308 542 119 137 148 210 716 262   4 653  53 506 334 366 698 628  81 168 127 488
 215 213  31 136 672 116  77 299 277 441 473 636 122 536 422 504 527 105  34 727 570 252 352  69 230 104 173
 151 500 451 525 333 548  12 546 549 489  28 440 141 482 496 478 224  51 380 507 490 516 240 439 479 267  93
 564 457 663 291 236 722 182 494  59 510 264 106  54 288 303 285 204 400 491  66 582 640 301 331 688  62 612
 139 434 325  76 665 196 560 146 685 642 413  82 664 381 415 217  41 475 421 459 715 513  83 149 391 495  73
 537 304  22  47  49 353 131 101 462 547 707 502 729 701 108 199 605 606 408 720   8  50 573 412 107 192 675
 394 364 370 397 386 356 425 357 418 402 392 374  96 349  99 428 398 401 371 399 393 369 454 427 361 307 368
 378 485 319 336 362 365 435 342 335 354 350 337 347 313 388 376 305 419 384 474 312 363 283 446 330 327 390
 493 565 657 232 193 395 551 219 121 254  86 321 477 654 718 102 436 126  75 171 280 610 431 541 429 576 142
 111 423 238 471 226 697 599 186 604 696 521 677 695 600 433 311 694 545  21 583 579 110 237 555  70 360  16
 700  87 492 317 655 242 326 372 279 382 178 713 300  79 562 309 709 256 145 476 234 117 460 497 710  19 239
 211 338 569 190 598 132 208 316 687 272 590 528 268  97 287 282 112 396 235 216 323 411 290 629 463 589 618
 270 154  55 559 649 276 659 403 723  74 631 184 529 164 650 295 508  26 176 128 253 607 586 175 245 410 466
  32  35  80 580 483 581 265 669  92   2 187 251 543 114 160 183 281 679 461 113 603 165 593 721 614 531 103
 691 608 648 143 563 651  61 609 155 656 134 163 218 293  24 588 189  18 557  94  72 469 297 409 567 637 341
 523 198 711 725 406 405 115 445 120 188 273 375 138 344 314 539 147 634 681 153 125 135  39 263 625 717 517
 260 595 452 684 448  20 641 453  63 221 623  84   7 597  68 668 515 480 385 639 584 249 556  42 233 158 130
 602 456 518 258 259 209 712  90 404 124 432 250 438 248 449 509 261 442 561 615 467 522 123 286  67 540  13
 257 699 247 416 222 484 359  52 643 144 306  71 455   1  89  44 690 635 724 389 180 624 468 619  36 447 554
 470 294 511 200 203 627 214 708 296 241 194 514 591  25 660 207 109 255 571 499  30 289 212 284 379 646 626
 269 622 310 704 322 227 702 185 632 594 498  40 206 223 680  78 553  48  57 620 638  27 572 481   6  23 538

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00566e+07us (= 10056.6ms, 10.0566s)
Satisfaction error: 7
Number of search iterations: 2876
Number of local moves: 2413 (including on plateau: 2365)
Number of local minimum: 25 (including on plateau: 289)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 705 129 46 671 201 472 162 11 56 195 596 661 505 426 161 601 244 552 88 275 674 202 519 329 530 197 65 => the sum is 9273 rather than 9855
Problem in row 2: 318 179 156 443 170 673 414 574 487 15 719 578 689 43 568 613 29 682 358 662 60 726 728 324 377 670 633 => the sum is 11888 rather than 9855
Problem in row 5: 58 706 150 228 172 10 346 38 532 566 464 678 17 703 587 550 534 159 225 3 450 266 140 315 533 558 577 => the sum is 9565 rather than 9855
Problem in row 7: 383 205 585 535 271 465 575 308 542 119 137 148 210 716 262 4 653 53 506 334 366 698 628 81 168 127 488 => the sum is 9567 rather than 9855
Problem in row 8: 215 213 31 136 672 116 77 299 277 441 473 636 122 536 422 504 527 105 34 727 570 252 352 69 230 104 173 => the sum is 8313 rather than 9855
Problem in row 16: 111 423 238 471 226 697 599 186 604 696 521 677 695 600 433 311 694 545 21 583 579 110 237 555 70 360 16 => the sum is 11258 rather than 9855
Problem in row 20: 32 35 80 580 483 581 265 669 92 2 187 251 543 114 160 183 281 679 461 113 603 165 593 721 614 531 103 => the sum is 9121 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 729 674 176  17 259 704 606  58   8 185 183 117  37 275 223 237  70 232 286 598 484 612 253 133 338 552 712
  32 524 130 724 426 271 699 258 278 209  69 197 628 710 182 668 497 189 281 691   2 383 445 532 214 601  15
 452 522 177 435 659 462 514  57 418 667 112   5 582  46 669  84  56 507 646 655 184  43  40 268 633 340 622
 477 128 110 318 590  93  96 714 694 722 656 194 432 230 207 623 109 474 429  87 100 509 543 351 703  64 202
 686 222 696 518 629 727 407 111 159 496 719  94 641 195 607 708 145  66  78  25 573 469 632 565  61 388 564
 587 120 675 468 149  53  65 584 720 596 234 251  76  99 144 108 578  51 439 389 576 569 599 666 680 193 186
  91 446  68 515 689 660 544 242 545 114 263 585 570 160 513 478 180 233  48 592 556  31 404 127 206 575 420
 553 547 165 538 533 103 672 579  20 107 581 549 155 617 502 597 217  89 537 539  80  81 153 697  21 616   7
 211 245 693 663 511  71 257 277 541 604 167 523 648  38 453 121 264  26 488 131  30 678 295 530 595 319 476
 700 728 236  95 653 413 135 546 175 487 721  13 203 438  60 208 369 494 557  27 430 651 472 229 390  86 339
 240 558 148 216 164 250 634 325  29  44 212 639  54 550 138 129 384 142 357 192   1 256 248  28 536 290 643
 157 528 642 614 260 436 449 457 414 270 505 504 645 664  12 424 466 644 158 701 481 282 713 441 603 405 132
 301 640 408  98   9 554 725 139 269 150  24  49  23 285 362   3 221 527 470 137 670 692 227 187 437  39 610
 346 353 252 376 379 386 373 371 363 377 399 349 361 315 337 396 618 306 364 352 326 387 365 343 333 368 360
 375  83 705 243 444 427 500  10 170   4 682 630 359 246 226 561  77 586 467 442 458 555  36 679 341 433 116
 422 324 309 331 311 345 297 593 350 330 261 508 455 283 638 336 266 317 711 348 307 279 292 298 328 289 327
 400 609 101 316 123 540  75  67 465 169 244 272 454 498 647 706 291 690 577 280 367 611 119 151 415 143 525
 654 627 205 419 247 126 613 479 322 220  18 171 200 531 460 302 548 265 473  82 591  16 495 395 571 440 385
 152 196 471 228 574  22 161  92 241 421 398 284 583 296 568 482 303 335 506 636 657 461 676 342  74 662  34
 456 299 274 249 423 293  33 213 661 551 665 688 517 516 410 392 671 174 178 199 115 181 631   6 254 588 218
 125 332 723 323 394 602 231 434 147 344 381 391 198 685 172 308 621 707 273 378 358 179 366 262 447 493 154
 464  97 412  45 320 162 347 501 619  62 637 448 402 625 215 118 563 620 255 401 715 204 490 370 294 113 356
  73 417 428 600 102 443 312 658 542 649 492 314  47 354 173 201 650 238 136 489 276 105 188 491 475 329 673
  35  14 219 106  19 225 140 608 451 698 393 605  72 146 709 580 635 411 380 535 355 486  11 431 519 560 512
 626  79 122 615 726 321 562 684  41 526 559 567 717 409 683  88 310 677  50 300 163 239  85  59 191 168 288
 287  63 716 695 210 485 104 416 589 450 124 718 529 510 503 463 374 334 305 166 313 499 652 702  55 566 520
 224 480 594  90  52 681 304 382 624 403 156 190 267 134  42 534 372 521 406 483 687 397 425 572 141 235 459

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00561e+07us (= 10056.1ms, 10.0561s)
Satisfaction error: 7
Number of search iterations: 2847
Number of local moves: 2346 (including on plateau: 2298)
Number of local minimum: 27 (including on plateau: 286)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 729 674 176 17 259 704 606 58 8 185 183 117 37 275 223 237 70 232 286 598 484 612 253 133 338 552 712 => the sum is 8758 rather than 9855
Problem in row 5: 686 222 696 518 629 727 407 111 159 496 719 94 641 195 607 708 145 66 78 25 573 469 632 565 61 388 564 => the sum is 11181 rather than 9855
Problem in row 11: 240 558 148 216 164 250 634 325 29 44 212 639 54 550 138 129 384 142 357 192 1 256 248 28 536 290 643 => the sum is 7407 rather than 9855
Problem in row 12: 157 528 642 614 260 436 449 457 414 270 505 504 645 664 12 424 466 644 158 701 481 282 713 441 603 405 132 => the sum is 12007 rather than 9855
Problem in row 13: 301 640 408 98 9 554 725 139 269 150 24 49 23 285 362 3 221 527 470 137 670 692 227 187 437 39 610 => the sum is 8256 rather than 9855
Problem in row 21: 125 332 723 323 394 602 231 434 147 344 381 391 198 685 172 308 621 707 273 378 358 179 366 262 447 493 154 => the sum is 10028 rather than 9855
Problem in row 26: 287 63 716 695 210 485 104 416 589 450 124 718 529 510 503 463 374 334 305 166 313 499 652 702 55 566 520 => the sum is 11348 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 578 126 506  14 448 215 368  77 492 295  66 325 108 367 656 484 279 674 540 268 293 478 405 714 618 275 715
 120 132 706 281 654 266 286 627 697 496 411 401 296 327 186 339 483 503 119 262 680  57 196 672 713   3 404
 628 626 659 563 579 476 414 252 259  48 698 600 150 228  23 570 220 420 649 585 453 389 101 485 499 631 536
 230 677 394 648  90 634   6 589 599 551  98  51 127 475  47 542 301  74 703 256 465 316 505 427 124 700 226
 529 522  89 104 619 106 395  20 423  82 664  80 168 320 620  53 197 638 667 433 210 170 586 165 686 251 574
 308  32 481 223 726 597 271 231 725 329 283 326 524  72 487 546 357 441  44  19 355 693 218 500 335 460 272
 136 679 203 163 690 229 558  79 658 123  69 468 682 130 719 270 645 443  31 418 564  12 263 303 560 482 278
  81  15 319 720 164 722 494 541  27 612 652 508 723 530 699 100  94 174 178 504 147  13 399  92 269 445 633
 204 359 637 447   8 199 512 721 464 507 322  68 257 107 238 137 497 209 435 191 311 217 291  16 254 657 306
 302 607 469 561 473  93 528 328 156   5  86 133 545 425 450 640 452 407 193 687  41 387  26 646 167 378 670
 596 312 155 324 285 471 160 525 145  85 444 565 426 440 128 490 442 129 332 622  96 590 171 159 517 632 614
 403 511 501  58 669  83 498 694 665  88  24 477 569 109 470 416 161 581 241 264 571 179 454 177 553 207 232
 446 125 381 417 373 400 376 366 388 415 422 375 398  54 374 383 429 421 386 385 384 391 369 343 342 362 350
 406 380 392 409 390 382 393 313 363 372 361 344 348 290 351 412 396 364 354 338 379 345 352 347 356 365 353
 566 573  11 138  60 472 556 284 151 148 547   2 535 660 323 651 608 115 580 110 214 288  21 413 663 729 437
 480 531 180 410 200 675 146 310  56 195 671 265 431 549  52 336 253 587 455 474  87 154 532 701 282 668 175
 419 340 181 250 519 213 624 280 333 461 584  73 520 258 642  18 292 317 593 510 653 572 222 606  67 245  63
 246 112 321 491 576  46 567  42   1 705 287 709 704 346 157 141 515 236 297 568 523 644 676 360  30 434 121
 678 552 341 692 102 636 595 208 334 176 534 267 594 305 630 691  34 371 248 307 424 539 309 548 666   9 611
 603 650 615 683 298 314 249 182 513  45 202 462  55 212 240 488 533 247  29 187 438 559 655 227 349 583 237
 169 173 194 562 185 582 225  70 402 289 192 189  50 684  84 216  43 103 261 577 183 432 617 201   7 330 260
 331 728  35 463 243 158  40 456 493 641 643 673 239 621  36  78 467 681 516  22 294 708  91 521 408 172  17
 235 274 591  39 149 117 377 613 318 696 514 234 370 625 717 489 135 647 466 451 457 122 144 537 439   4  95
  64 152 727 118  10 184 724 662 206 629 188 550  33 710 588 131 707 300 299 695 139 397 458 116 436 153 479
 337 555  71 601 449 610 105 575 244 459 315 527 140  38 219 716 428 143 538  62 712 544 711  59 114 518  65
 661  75 554 255 304 702 277 605 134 685  76 688 639 543 486 276 198 602  97  25 166  61 526 358 190  49 623
  99  37 142 221 592 273 111 205 609 718 502 495 224 430 233 242 689  28 604 635 616 598 557 162 211 113 509

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00555e+07us (= 10055.5ms, 10.0555s)
Satisfaction error: 8
Number of search iterations: 3026
Number of local moves: 2525 (including on plateau: 2478)
Number of local minimum: 26 (including on plateau: 309)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 578 126 506 14 448 215 368 77 492 295 66 325 108 367 656 484 279 674 540 268 293 478 405 714 618 275 715 => the sum is 10384 rather than 9855
Problem in row 2: 120 132 706 281 654 266 286 627 697 496 411 401 296 327 186 339 483 503 119 262 680 57 196 672 713 3 404 => the sum is 10317 rather than 9855
Problem in row 3: 628 626 659 563 579 476 414 252 259 48 698 600 150 228 23 570 220 420 649 585 453 389 101 485 499 631 536 => the sum is 11741 rather than 9855
Problem in row 5: 529 522 89 104 619 106 395 20 423 82 664 80 168 320 620 53 197 638 667 433 210 170 586 165 686 251 574 => the sum is 9371 rather than 9855
Problem in row 9: 204 359 637 447 8 199 512 721 464 507 322 68 257 107 238 137 497 209 435 191 311 217 291 16 254 657 306 => the sum is 8571 rather than 9855
Problem in row 19: 678 552 341 692 102 636 595 208 334 176 534 267 594 305 630 691 34 371 248 307 424 539 309 548 666 9 611 => the sum is 11401 rather than 9855
Problem in row 21: 169 173 194 562 185 582 225 70 402 289 192 189 50 684 84 216 43 103 261 577 183 432 617 201 7 330 260 => the sum is 7280 rather than 9855
Problem in row 22: 331 728 35 463 243 158 40 456 493 641 643 673 239 621 36 78 467 681 516 22 294 708 91 521 408 172 17 => the sum is 9775 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 399  55 614 498 225 567 122 117 449 210 164 108 344 123 439 131 319 185 622 689 601 380 627 176 407 253 216
  24 714 660 263 113 458 698 695  44  46  23 652 208 310 130  63 448  88 716 270 459 107 696 679 264 575 452
 212 306 272  30 626 324 597 251 129 330  91 721  28  22 168 715 528  43 302 612 624 186 534 603 325 557 719
 541 545 281  84 727 240 414 218 580  53 392 291 466 527 497 568 662 275  40 427 104 672 489 363 468 269 702
 103 406   3  89 410 262 313 725 512 147 189 670 187 101 609 132 170 244 663 267 485 510 676 620 142 182 144
  26 571 224   7 355 595 106 475 337 513 610 536 564 709 454 479  75 673 199 241 563 283 546 243 235 215  21
 268 217 599 292 588 121 553 127  31 651 587 246  10 480 431 593  11 682 483 511 467 419 332 326 165 173 492
 701 637 699 152 136 509 288 230 572 236 396 177 160 184 231 277 569 539 585  38 645 205 234 434 102 566 353
 515 174 476 616  13 432  83 242 694 222 474   8 680 143 134 579 278   6 471 180 705 316 128 329 703 656 598
 618 693 203 529 358  27 219 481 495 473 552  45 633 196 178  49 124 461 257  41 323 532  39 642 491 519 677
 520  65 154 606 638 487 516  16 273 338 141 192 300 687 290 561 426 284  54 659  37 573 385 640 628   4 381
 440 111 574 692 518 188 249 294 675 412  33 318 718 526  34 409 148 655 195 226  86  70 248 405 646 478 207
 402 411 403 209 383 428 387 404 388 422 265 421 379 347 415 401 345 394 395 375 389 398 343 423 366 312  50
 335 384 371 304 386 351 382 333 339 336 374 362 354 555 391 352 340 361 359 376 400 365 368 331 370 327 349
 213 295  78 397 602 369 674 115 393  61 514 342 367 256 378 303 710 293 533  18 250 600 348 711 260 287 488
 690 729 724 298 285 237 445 194 643 204 424 540 462 112 578 200  19 521 647  48 151 171 590 525  42  97 279
 583 220 321 644 138 596 280 417 413 505 296 548 608 456  69 678 223 669 254 126 508  64 156 255  95 110 623
 315 522 496 531 549  36 301 653 247 274 372 328 683 435  29 636 206 713 499 377 114 167 261  73 470 450 118
 465 565  68 634 197  96  51 350 221 570  72 494  94  74 299 639 625 119 357 457 418 666 360  58 684 554 668
 258  67 654 259 286 661 611 153 631 266 166 707 502   1 211 297 538 191 162 436 311 430   9 408 558 641 441
 172  90 607 635 125 202 137 615 140 577 444 181 155 420 469 472 500 158 443 630 227 665 149 307 604 562 169
 289 453 314  17  77 157 723 649 228 667 619 190 135 559 551 163 116 594 105 629 308 429  25 523 686 159 490
 700 271 109 720 460 726 632 547 120 722 484  81  57 346 356 282 507 229  82 543 544 232 648  92 438 576 320
 728 504  62 658 691 717 560 139  56 150 708 214 442 482 657 201 334 463 317 238 592  98  99 133 161 437  14
 179 198  52   2 671  47 364 537 486 581 309 584 517 664 524  15 503  60 589 704 233 276 530  85  32 416 697
  79  35 390  76  59 341   5 556  71 464 506 706 550 535 712 477 446 582 433 591  66 455 493 451 501 175 100
  80 617 447 613 239 681 145 322 688 425 650 193 252 605 621 183 685 373  93 146 245 586 542  20  12 305  87

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00568e+07us (= 10056.8ms, 10.0568s)
Satisfaction error: 6
Number of search iterations: 3294
Number of local moves: 2747 (including on plateau: 2698)
Number of local minimum: 15 (including on plateau: 329)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 399 55 614 498 225 567 122 117 449 210 164 108 344 123 439 131 319 185 622 689 601 380 627 176 407 253 216 => the sum is 9040 rather than 9855
Problem in row 4: 541 545 281 84 727 240 414 218 580 53 392 291 466 527 497 568 662 275 40 427 104 672 489 363 468 269 702 => the sum is 10895 rather than 9855
Problem in row 5: 103 406 3 89 410 262 313 725 512 147 189 670 187 101 609 132 170 244 663 267 485 510 676 620 142 182 144 => the sum is 8961 rather than 9855
Problem in row 12: 440 111 574 692 518 188 249 294 675 412 33 318 718 526 34 409 148 655 195 226 86 70 248 405 646 478 207 => the sum is 9555 rather than 9855
Problem in row 23: 700 271 109 720 460 726 632 547 120 722 484 81 57 346 356 282 507 229 82 543 544 232 648 92 438 576 320 => the sum is 10824 rather than 9855
Problem in diagonal 1: 216 575 325 363 676 283 467 38 471 461 426 409 415 555 367 540 296 274 221 153 137 157 460 658 52 35 80 => the sum is 9110 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 715 446 637 364 225 652 596 660 166 278 489 482 405 655 252   1 437 702 391  41 303 248 305 192 136  62 516
 569 651 368 659 713 272 654 622 483  15 704 561 174 221 193 647 246 354 227 144 117 194  53 536 132 325  21
 523 685  12 699 674 205  33  83 671 710  38 414 173 512 373  48 608 606  71 611 339 108 727 202 585  18 127
 375 574  25 649 658 573  40 342 509 111 616  85  76   6 479 321 363 177 311 475 361 697 587 430 605 670 555
 197 357 123 330 275  54  47 725 259 103 474 213 703 556 684 588 195 662 487  37 709 196 519 247 507 436 172
 133   4 517  31 200 645 618 282 665 579 678 295 718 559 567 214 329 165 570 112 490  46  77 245 369 470 277
 542 549 554  92 385 454 240 657 124  73 179 600 687  42 152 378 444 264 254 478 374 450 164 514 693  17 495
  34 535  19 318 191 185 531 537 477 552 293 105 499 469 501 653 231 572 242 591  95 326 420 590 208 260 421
 101 151 711 317 290 237 404 409 138 376 592 253  96 565  27 360 589  57  55 370 109 644 667 612 541 462 722
 383 134 464 130  84 661 147 500  93 466 583 526 504 115 148 598 223 276 700 367 639 107  99  36 691 597 584
 298 120 139 322  70 348 448 613 682 642 568 397 106 289 664 629 457 557 238 170  63  51 451 456 680   2 395
 620  52 675  80 601 353  91 203  64  22 188 393 125 415 224 683 251  23 729 336 258 576 615 528 319 153 503
 268 366 435 309 529 235  32 439 286 442 408 461 267 323 423 343 425  60 340 280 365 593 558 398 390 384 496
 716 328 146 707 288 313 392 688 399 712 324  61 296 356  89 400 175 249 230 599 387 635  79 160 217 212 156
 539 285 338 320 428 412 441 359 488 236 403 406 410 294 350 491 402 178 347 292 291 266 422 433 472 283 269
  56 619 468 617 672  94 306  66  44 571 386 287 186 114 634 560 440 222 239 452 714 189 377 476  98 534 434
 250 666 513 525 372 218 673 129  35 229 210 621 607 480 371 299 417 432 424 511 546 121  78 465  20 380 263
 297 331 518  67 401 522 548 508  39 352  72 643 389  16 463 157 131 498 102 614 351 467 381 515 720 520 233
 532 201 128 492 241 407 625 181 538 163 681 215 419 279 206 726 314 669 262 335 449 244 334 273 257 486 198
 602 220 226  43 627 302  28 168 650 701 110 506 418 530 445 187 636 345 265  11  69 355 603 628 216 505 459
 190 689 346 550 145 182 485 307 692  65 344 349 154 527  14 119  59 544 575 300 243 543 551 676   3 679 524
 141  45 705 333 379 521 284 540 142  75 631 668 447  50 118 176 396 271 624 502 626 610 416 341 316 358 140
 453 426 382 199 162 553 255 135 533 595  49 232 394 677 630  13 228 564 460 327 721 149 270 113 167 695 473
 256 493 640 184 706 633 100 143 310  81 547   8  30 578 427 510 694 116  68 728 332 443  86   9 438 609 686
 632 315  87 484 471 204 656 413 719 362 171 219 301 562 663 169 724 586 429 388 155 211  90 494 126 150  74
 159 158 582 623  58 594 458 122 337 698  29 648 563 234 497 104 304 161 638 180 566 690 717   5 641   7  82
 274 455  97 411  10  26 723  24 312 646  88 207 708 431 261 481 137 545 577 604 183 696 209 281 308 581 580

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00583e+07us (= 10058.3ms, 10.0583s)
Satisfaction error: 5
Number of search iterations: 4598
Number of local moves: 3848 (including on plateau: 3799)
Number of local minimum: 34 (including on plateau: 419)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 715 446 637 364 225 652 596 660 166 278 489 482 405 655 252 1 437 702 391 41 303 248 305 192 136 62 516 => the sum is 10356 rather than 9855
Problem in row 4: 375 574 25 649 658 573 40 342 509 111 616 85 76 6 479 321 363 177 311 475 361 697 587 430 605 670 555 => the sum is 10670 rather than 9855
Problem in row 12: 620 52 675 80 601 353 91 203 64 22 188 393 125 415 224 683 251 23 729 336 258 576 615 528 319 153 503 => the sum is 9080 rather than 9855
Problem in row 14: 716 328 146 707 288 313 392 688 399 712 324 61 296 356 89 400 175 249 230 599 387 635 79 160 217 212 156 => the sum is 9314 rather than 9855
Problem in diagonal 1: 516 325 585 430 519 46 374 591 55 276 457 683 423 356 410 287 210 352 538 168 485 521 162 184 87 158 274 => the sum is 9472 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 693 395 132 150  99 128 689  63 436  51 719 677 133 276 576 324 265 184 674 408  96 543 309 550 270 517 194
 424   8 421 402 597  68  52 111 313 549 559 712 205 711 127 240  17 608 200 581 609 705  86 228 342 349 426
 423 573 624 163 690 415 658  65  49 442  89 248 465 478 607 684 629 475 431 406 135 113 318 122 537 713  54
 197 568 257 687 527 169 250 636 244 688 685 101 651 502 272  53 180  73 551 310  91  82 592 682 457  43 307
 665 271 495 593 441 666   1  16 269 419 343 327 432  93 295 539 107 393 323   2  22 631 533 225 622 491 641
 239 208  32 493  18 261 321 595 722 291  58 589 561 444 664 214 268  29 535 626 455 575  78 233 621 300 425
 485  19 289 516   5 590 461 382 678 146 610 506  35 215 528  25 238  69 451  30 504 704 578 605 469  36 681
 188 572 221 552 162 185 428 296 680 498 477 112 620 635  13 195 545 288 454 525  38 104 470 167 594 397 439
 183 103 274 544 279 617 488 703 542 212 137 106 582 371 463 721  77  74 600 158 396 468 438 474  39 388 418
  14 547 484 130 529 447 189 668 192 708 434 160 251 623 131 154 164 467 570 556 459 483 655 118  48 173 501
 464 222 255 709 203 494 405 286 433 652   9 489 702 206  33 706 462 277 161  97 676 513 588  28 515  24 246
 235  71 728 430 726 412 534  95 294 263 168 437 234 394 417 391 384 601 499 606 435 219 241 530  59 407  45
 553 199 698 216 226 505 691 577 416 102 285 165 134 362 360  72 566 541  70 596 700 305 320 496 139 480  81
 400 399 341 387 379 308 363 404 365 383 429 367 375 211 315 373 336 358 345 348 333 630 354 410 368 350 224
 364 292 284 328 331 355 372 389 312 374 338 340 359 361 332 293 366 330   6 302 334 448 586 317 699 696 347
 729 639 143 275 114 319 148 565 519 614 259 306  31 523  12 370 580 683 144 481 209 356 100 645 266 473 352
  57 640 422 725 204 563 602 509 619 201 247 555 376 282 207 230 562 538  11 290 262 598  34 108 524 145 344
 153 540 654 322 697 151  26  41 243 256 667 381  50 648 633 190 479 278 297 675 707  60 253 385 420 583  66
 166  21 564 482 335 325 599 115 223 178 638   4 663 138 671 526 694 220 646 611 198 670 120 217 380 105 346
  42 627 512  76 571 727 170 401 628 514 642 452 497 503 584 377 351  87 264  80  20 411 171 536 657 661 613
 647 558 591  61 616 109 123 612  90   3 353 557 460 585 210 299 119 714 653 695 314  15 486 445 152 136 252
 316 329 142  56 446 110 304 301 520 398 249   7 231 218 662 453 715 311 326 227 507 126 414  79 471 637 500
 510 673 337  75 625 531  84 403 176 157  62 644 569 117 155 672  92 603 232 490 618 191 242 710 149 487 202
 615 258 213 181 298  88 427 659  23 440 579 717 303 156 339 458  67 686 718 177 548 386 254 159  83 186 369
 567 723  55  27  37 193 720 574 182  40 125 492 532 692 521 604 456 378  85 187 679 357 587 449  44 140 409
 245  10 141 632 413 669 554 129 179 716 522 229 121  47  94 518 660 147  98 124 273 116 392 236 650 466 649
 281 390 546 643 287 450 196 260 508 560 172 175 283  64 634 174 476 443 511 267 237  46 656 701 280 472 724

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00615e+07us (= 10061.5ms, 10.0615s)
Satisfaction error: 10
Number of search iterations: 2659
Number of local moves: 2253 (including on plateau: 2208)
Number of local minimum: 14 (including on plateau: 287)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 693 395 132 150 99 128 689 63 436 51 719 677 133 276 576 324 265 184 674 408 96 543 309 550 270 517 194 => the sum is 9551 rather than 9855
Problem in row 2: 424 8 421 402 597 68 52 111 313 549 559 712 205 711 127 240 17 608 200 581 609 705 86 228 342 349 426 => the sum is 9650 rather than 9855
Problem in row 3: 423 573 624 163 690 415 658 65 49 442 89 248 465 478 607 684 629 475 431 406 135 113 318 122 537 713 54 => the sum is 10606 rather than 9855
Problem in row 20: 42 627 512 76 571 727 170 401 628 514 642 452 497 503 584 377 351 87 264 80 20 411 171 536 657 661 613 => the sum is 11174 rather than 9855
Problem in row 22: 316 329 142 56 446 110 304 301 520 398 249 7 231 218 662 453 715 311 326 227 507 126 414 79 471 637 500 => the sum is 9055 rather than 9855
Problem in row 23: 510 673 337 75 625 531 84 403 176 157 62 644 569 117 155 672 92 603 232 490 618 191 242 710 149 487 202 => the sum is 9806 rather than 9855
Problem in row 24: 615 258 213 181 298 88 427 659 23 440 579 717 303 156 339 458 67 686 718 177 548 386 254 159 83 186 369 => the sum is 9387 rather than 9855
Problem in row 26: 245 10 141 632 413 669 554 129 179 716 522 229 121 47 94 518 660 147 98 124 273 116 392 236 650 466 649 => the sum is 9030 rather than 9855
Problem in row 27: 281 390 546 643 287 450 196 260 508 560 172 175 283 64 634 174 476 443 511 267 237 46 656 701 280 472 724 => the sum is 10436 rather than 9855
Problem in diagonal 1: 194 349 537 682 533 575 504 525 600 467 462 391 360 211 359 306 247 256 223 401 123 110 625 181 55 10 281 => the sum is 9567 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 261 674 444  24 139 708 367 127 324 532  18  65 383 466 630 719 265 314 344 199 124 269 699 180 308 578 694
 157 227 725 259 462 430  28 233 503 108  84 299 692 687 566 525 489  31  94 576 621 278 185 390 515 203 488
 490  42  77 159 690 236 685 247  43 644  20 152 662 634 686 149 537  96 543 702 477  45 467 343 646 193 190
   3 204 213 595 250 607 660 336 285 230 664 458 481  44 619 519 561 628  36 544 194  87 353 626 298 118 242
 102 601 111 241 574  76 631 223 625  11 402   4 268 548 672 257 615 172 135 117 456 405 427 547 591 469 575
 594 565 571 590 671 183 360 482 240 104 665 535  22 105 150 494 143 140 276 216 713  19 302 288 573 179 675
 627 513 289 472 633 253 478 209 546  33 348 333 492  91  14 598 181 593 133 128 612 148 322  64 728 557 460
 394 436 255 417 218 485 136 551  59 691 666 502 196 727   2 208 160 639 293 726  57 295  85 113 501 629 414
 487 413 292 169 499 635 465 146 397  67 524 142  10 464 476 609 518 418 189 673  72  27 679 186 514 449 335
 678 358 382 277 381 279 504  98 649 316 372  49 319 581 260  40 421 392 408 378 616 350 214 538  92 681 222
 141 479 375 539 542 366  48 317 424 129 429 154 586 676 326 165 473 423 267 320  86  54 603 643  35 560 695
 454  60 562 611 585 176 205 636  50 522 120 409 406 484  47 412 426 511 463 294 369 712  71 693 355 144  78
 508 459 396 262 168 440 401 451 347 516 420 425 411 400 376 368 386 351 441 249 371 155 452 416 334   7 345
 304  89 583 437  46 342 395 307 388 661 541 271 521 617 364 398   5 229 663 530 270 483 114  58 608 321 310
 210 415 470 703 531 339 291 596 652 370 309 385 131 297 389  55 296  53 493 245 564 256 422 706 331  88 258
 540  73 729 184 197 138  81 717 164 433 529 122 696 174 623  25 215 480 379  12 474 704 391 640 177 290 668
 555 461 121 112 486 116 126 231 624 329 325 552   6 248 202 618 680 700 399 657 328 697 572 263  32 363  52
 428 667 232 723 327  79 500 243 206 648 239 632 362  34 410 688 620   8 318  62 338 577 722  68   1 528 195
 323 588 264 582 234 659 287 274 212 228 235 448 306 280 361 356 286 132 654 374 225 312 178  39 651 711 656
 614 393   9 188 549 455 701 587  61  93 217 698 446 191 527 226  29 442 431 221 523 497 272 468 219 647 151
 438  51 658 526 653  17 254 545 684 439 110 568 200  69 137 332 171 106 207 434 550 670 496 407  38 559 536
 147 457 303 506 158 567 403 495  16 275 714 721 244 166 682  21 718 238 579  23  63 669 491  26 373 677 123
 107 724 211  41  66 720 584 569 520 365 589 599  56 509 201 377 498 283 622 554 419 115  97 450 162 167  74
  70 100 642 273 282 613 251 153 512 404  37 192 689 340 145 300 198 715 655 359 707 517 313 252 683 352 101
 443 447 170 605 109 173  99 354  15 716 592 637 337 445 156 580 638 606 134 570  95 650  82 563 187 103 349
 705  13 384  30 315 161 610  83 709 281 556 266 380 453 301 641  80 558 475 510 220 507 341 284 471 163 534
  75 346 387 330  90 602 305 645 600 710 130 237 553 125 533 175 246 597 224 182 311 357 505 604 432 119 435

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00572e+07us (= 10057.2ms, 10.0572s)
Satisfaction error: 2
Number of search iterations: 4339
Number of local moves: 3621 (including on plateau: 3569)
Number of local minimum: 36 (including on plateau: 415)
Number of resets: 0
Number of restarts: 0

Problem in row 23: 107 724 211 41 66 720 584 569 520 365 589 599 56 509 201 377 498 283 622 554 419 115 97 450 162 167 74 => the sum is 9679 rather than 9855
Problem in row 26: 705 13 384 30 315 161 610 83 709 281 556 266 380 453 301 641 80 558 475 510 220 507 341 284 471 163 534 => the sum is 10031 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 314 729   7  84 528 329 440 650 261 143 687 413 642  11 114 154 607 632 164 459 116 656 411  29 497  71 707
 565 676  19 620 161 370 132   1 648 644 186 693 711 717 334 541 588  15 626 322 654 458 708  74 463 185 415
 196 595 668 171   2  52 449 376 481 624 506 544 277 355  51  56 457 663 331 477 715 483 268 214 669 149  26
 248 345 637  30 615  17 549 469 645 184 221  78 683 690 530 540  69  93 339 552 295  38 703 291  12 584 398
 498 686 274 131 176  55 306 692 178 333 165 201 539  14 689 675 643 218 286 362 639 419 245 174 542 499 216
 372  88 472 303 447 723 100 402 294 465 421 441 203  77 474 548 229 704 597 227 195 301  28 511 249 712  72
  96 551 266 576 618 682   9 462 204 719 424 102 288 160 525  34 713 714  50  76 537 522 407 133 134 247 606
 326 373 538 698 524 282 219 517 589 535 117 242 501 673  91 400 270 215   5 545 391 468 278 147 652 482 430
 496 368 701 390 609 273 512 197  66 672 129 401 416 146 670 128 272 577 492 453  24  87 300 256 596  20 604
 257 347  41 526 475 470 563 599  43 323 653 494 519 292 442 205 409 493 305 664 259 252  23 605  49 417 130
 127  94 724 533  22 523 630 716 431 485 510 515 439 432 144 685 611 104 316  57 120 674 168 467  47 228  53
 433 435 307 725 380 514 406 395 190 105 437 422 210 126 293  25 342 546 657 420 677   3 202  31 610 405 559
 473 213 101 536 688 628 503 671 662 388 594   4 135  32 239  33 633  48 455  10 153 386 451 353 464 341 661
 371 385 387 349 379 392 364 383 359 378 366 358 393 276 377 350 423 330 328 356 397 374 396 375 319 338 352
 573 623 150 125 581 235 681 115  37 225 139 287 182 627 315 550  80 304 509 612 361 655 586 325 290 340 348
  82 299 113 636 695 434 569 504 478 444 718 516  98 665 166 275 148 284 234 678  67  16 238 705  62 151 580
  86 200 443 211 317 194 142   6 720 429 508 313 592  68  95 265 679 585 507 191 365 560 466 557 696 621  39
 476 243 260 706 226 354 232 625 570 258 262 571 253 254 289 727 209 236 572 264 246 561 112 622 199 220 308
 699 619 603 384  83 231 666 593 702 118 578 660 667 531  45  27 310 145 111 177 207 159 582 298 206  40 414
 336 346 436  81 394 554 224 237 170 302   8  79 613 543 722 360 183 410 456 367 602 156 490 529 122 646 489
 629 158 495 233 553  64 175  36 381 556  58 212  63 583 500 614 471 491  35  21  54 608 710 658 534 332 631
 601 241  85 521 337 103 285 223 680  59 418 721 426 327 357 412  46 311 575 579 562 188  42  97 244 180 250
 181 173 518 427 110 566 438  44 106 169 312 179 222  90 461 251 574 480 460 709 564 162 728 697 363 527 344
 163 280 635 193 321 389 124 297 121 141 192 109 137 598 587 634 279 484 568 659 283 590 187 403 567 428 486
 651 240 425 454 107 649 726 138 140 119 324  13  18 450 684 399  99 136 452 369 445  75 520 108 694 513 296
 263 487 230 123 189 155  60 198 547 505 281 640 555 616 591 267 446 255 217  92 479 600 271 638 408 691 172
 343  61 320  89 318 617 351 309 152 532 641 647  73 502  70 700  65 382 208 157 448 404 335 558 167 488 269

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00562e+07us (= 10056.2ms, 10.0562s)
Satisfaction error: 7
Number of search iterations: 3208
Number of local moves: 2696 (including on plateau: 2648)
Number of local minimum: 31 (including on plateau: 306)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 565 676 19 620 161 370 132 1 648 644 186 693 711 717 334 541 588 15 626 322 654 458 708 74 463 185 415 => the sum is 11526 rather than 9855
Problem in row 6: 372 88 472 303 447 723 100 402 294 465 421 441 203 77 474 548 229 704 597 227 195 301 28 511 249 712 72 => the sum is 9655 rather than 9855
Problem in row 8: 326 373 538 698 524 282 219 517 589 535 117 242 501 673 91 400 270 215 5 545 391 468 278 147 652 482 430 => the sum is 10508 rather than 9855
Problem in row 22: 601 241 85 521 337 103 285 223 680 59 418 721 426 327 357 412 46 311 575 579 562 188 42 97 244 180 250 => the sum is 8870 rather than 9855
Problem in row 25: 651 240 425 454 107 649 726 138 140 119 324 13 18 450 684 399 99 136 452 369 445 75 520 108 694 513 296 => the sum is 9244 rather than 9855
Problem in row 26: 263 487 230 123 189 155 60 198 547 505 281 640 555 616 591 267 446 255 217 92 479 600 271 638 408 691 172 => the sum is 9976 rather than 9855
Problem in row 27: 343 61 320 89 318 617 351 309 152 532 641 647 73 502 70 700 65 382 208 157 448 404 335 558 167 488 269 => the sum is 9206 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 469 177 379  57 614 339 227 609 588 524 152 384 266 328  49 557 710 316 302 285  24  29  55 132 683 416 699
 543  14 645 495 511 610 105 408 574 377 555 461 291 143 449 653 722  91 604 725 226 632 153 654 202 698 696
 549 570  42 679 706 690 319 211 200 189 521 635  12  87 203 668 180 258  69 516 406 404 249 522  46 427 497
 612 254 116 306 607 688 590 496 199  38 314 629 366 584 689 103 660 502 685  25 439 332 354 726 595 168  66
 262 458 309 664 482 274  60 426 252 217 453 192 623 596  61 183  59 527 347 462 542   3 597 155 204  56 537
 207 693 703 598 171  47 466  50 124 349 120 608 624 125 492 618 191 169 179 308 129 578 616 457 411 260 562
 423 362 304 413 532  79 568 729 719 296  45 720 334 391 104  32  71 705 164 107 225 397 579 697 278  30 551
 141 118 667 374 100 353 665 178 538  31 263 435 613  85 246 159 257  27 245 220  84  41 646 644 499 669  64
 642 422  13 151 544 163  68 523  34  18 600 239 500 428 672 601 287 657 472 270 714 403 111 119 674 184 346
 695  53 615 222 315 445 711 224  48 387  63 533 236 599 633 195  65 512 639 716 269 208 647 400 127 133 165
 673 475 131 481 114 341 146 305  76 569 622  16 530 526 142 540 456 649 546 675 508 360 561 280 493 682  35
  26 241 634 661  40  15 721 670 663 628 356  22 247 534 437 620 566 701 503  97 712 564 214 440 536 300 289
 434 424 370 484  82 393 342 409 271 361 373 336 455  75 431 412 350 385 363 420 442 383 394 407 352 364 343
 395 405 438 340 378 381 415 338 560 388 396 418 317  21 392 321 376 301 303 320 344 460 398 324 417 358 351
 414 170 279  92 727 470 399 556 233 190 589 625 273 718   7 201 182 108  10 652 659 335 348 587 380 513 138
 637 368  98  33 144 197 490 565 658 253 175 337 700 425 581 355 573 265 704   6 515 154 294 135 572 156 465
 717 173 311 452 259 292 256 421 240 480 272 708 606  81 139 312 451  96 498 282 323 684  52 275 454 121 491
 261 307 298 631 707 559 593 268 520 554 432 382 205 255 677  20 519 485  80 357 333 286 112 483  88 594 318
 210 126 592 229 221 158 369 250 430  72 723 162 228 655 662 464 128 433 185 505 687 145 580  89 548 446 558
 148 602 218 638 216 501 504 251 234 477 651 375   5 293 640 244 605 188 419 149 591  83 447 193 553 436 194
 238 206 467 517 402  99 288  74 310 577  94  77  28 488 487 489 545 219 198 281 130 619 541 267  37 330 450
 212 676  95 531 329 694 313 113 692 525 680 331 586 147   1 506 136 448 242 167 441 215 507 299 359 444 166
  39 678 636   2  44 161  73 213 248 650  93  90 106 290 196 514 322 389 122 115 137 715  43 463 187 102 157
 386 641 702 243 567 617 547 176 237 648 264 117 101 535 709   9 235 390 571 401   4 474 150 728 295 681 479
 110 643  78 172 410 563  17 666 627 134 468 494 473 529  51 181 327 611 552 478 476 186 671  62 486  19 371
 345  23 140 160 123 656 277 283 109 691 209  11 509 550 276 724 297 365 630 713 459 626 528 231  54 582 284
  67 576 575 230 510  70 326 443 471 232 372 518 621 367 429 174 585  58 223 603  36 539   8  86 325 686 583

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00564e+07us (= 10056.4ms, 10.0564s)
Satisfaction error: 14
Number of search iterations: 2609
Number of local moves: 2216 (including on plateau: 2176)
Number of local minimum: 13 (including on plateau: 254)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 469 177 379 57 614 339 227 609 588 524 152 384 266 328 49 557 710 316 302 285 24 29 55 132 683 416 699 => the sum is 9370 rather than 9855
Problem in row 2: 543 14 645 495 511 610 105 408 574 377 555 461 291 143 449 653 722 91 604 725 226 632 153 654 202 698 696 => the sum is 12237 rather than 9855
Problem in row 4: 612 254 116 306 607 688 590 496 199 38 314 629 366 584 689 103 660 502 685 25 439 332 354 726 595 168 66 => the sum is 11143 rather than 9855
Problem in row 5: 262 458 309 664 482 274 60 426 252 217 453 192 623 596 61 183 59 527 347 462 542 3 597 155 204 56 537 => the sum is 9001 rather than 9855
Problem in row 8: 141 118 667 374 100 353 665 178 538 31 263 435 613 85 246 159 257 27 245 220 84 41 646 644 499 669 64 => the sum is 8362 rather than 9855
Problem in row 11: 673 475 131 481 114 341 146 305 76 569 622 16 530 526 142 540 456 649 546 675 508 360 561 280 493 682 35 => the sum is 10932 rather than 9855
Problem in row 12: 26 241 634 661 40 15 721 670 663 628 356 22 247 534 437 620 566 701 503 97 712 564 214 440 536 300 289 => the sum is 11437 rather than 9855
Problem in row 17: 717 173 311 452 259 292 256 421 240 480 272 708 606 81 139 312 451 96 498 282 323 684 52 275 454 121 491 => the sum is 9446 rather than 9855
Problem in row 18: 261 307 298 631 707 559 593 268 520 554 432 382 205 255 677 20 519 485 80 357 333 286 112 483 88 594 318 => the sum is 10324 rather than 9855
Problem in row 21: 238 206 467 517 402 99 288 74 310 577 94 77 28 488 487 489 545 219 198 281 130 619 541 267 37 330 450 => the sum is 8458 rather than 9855
Problem in row 23: 39 678 636 2 44 161 73 213 248 650 93 90 106 290 196 514 322 389 122 115 137 715 43 463 187 102 157 => the sum is 6785 rather than 9855
Problem in row 24: 386 641 702 243 567 617 547 176 237 648 264 117 101 535 709 9 235 390 571 401 4 474 150 728 295 681 479 => the sum is 10907 rather than 9855
Problem in row 27: 67 576 575 230 510 70 326 443 471 232 372 518 621 367 429 174 585 58 223 603 36 539 8 86 325 686 583 => the sum is 9713 rather than 9855
Problem in diagonal 0: 469 14 42 306 482 47 568 178 34 387 622 22 455 21 7 355 451 485 185 149 130 215 43 728 486 582 583 => the sum is 8046 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 611  89 448 133 549 300 103 371 403 151 480  37 245 547  39 198 605 723 622 677 268 409 156 563 499 544  85
 106 714 686 417 469  88 646  78 124 229 130 627 206  82 220 159 497 620 728 640  53 532 258 710 189 489 158
 713 695  49 474 490 423  59 552 237 275 355 516 639  20 522 252 139 293 311 508 406 586 107 612 182 514 395
 603 697 719 475 472 457 219 673 581 597 397 385 643  23 459 724  47 645 716 140 701 445 247 631 274 350 346
   1  35 571 663 509 511 698 584 171 691  31 155 672 561 518 632 349  27  72 592 676 513 460 565 341 421 163
 255 510 693 299 702 227 230 369 214  66 682 137 593 203 699 520 113 594 546 177   5 711 181 380 365  21 363
 657 242 442 650  50 669 120  17 573 317 556 119  95 684 383 169 675 356 244  75 551 495 526 500   8 625  57
 111 688 138 652  94 455 630 322 265 528 318 239 213 588 250 118 420 634  24 283 553 338 236 655 366 108   6
 321 548  10 449 705 431  29 535 329 638 135 441  13 550 259 466 432 332  74 462 256  54 446  41 379 164 712
 426 636 465 185 576 170 523 422 115 391  45 260 667 598 690  40 578 496  80 152 617 316  99 131 666 154 357
 184 117 231  91 179  73 306 437 411 142 540 105 319 464 491 141 238 336 696 339 240 554 304 225 542  97 606
 635 216 707 241 384 196 430 404 132 452 476 334 348 284 412 538 330 269 458 271 656 161 660 224 144 204 289
 387 361 427 477 591 471 333 370 461 249 331 444  44 410 243 390  77 405 351 201 402  69 485 408 653 399 416
 599 313 217 129 662  84  38  34 541 168 601 358 301 175 674 302 579 226 393 116 136  51 342 362 439 642 609
 251 324 364 564 486 286 377 434 443 310 344 467 215 340 309 372 381 291 436 649 345 582 273 303  71 312 326
 234 123 279 272  93   2 323   7 654 664 651 618 128 451 246 504 428 162 360 574 314 233 607 325 515 595 493
 261 222 295 715  92 456 223 228 429 305 530 287 292 425 505 687 545 277 280 352 127 689  15 297 400 414 507
 525 389 572 210  32 681 187 692 487   4 720 670 104 263  12 308 191 122 354 418 619 335 726 197 382 629  26
 709 276 254 376 278   9 536 570 253  64 200 615 583 717 148 368 623 577 315 555  18 359 290 307 703 157 694
 193 600  67 375 109 282 527 262 176 721 614 517  96 208 145 562 610 194 478 479  48 575 285 101 637 386 608
 266  83 433  36 566 438 147 481 413 533 343 102 146 248 195 327  52  87 212 235 668  65 626 589 494 453 419
 166   3 134 648 173 616 580 708 700 524  81 207 569 270 498 519 167 534  46 150 160 143 394 484 153 149 183
 398 114  22 186 558 587 264  19 178 211  70 596 641 202 543  63 267 483 257 320  56  58 568  11 396 521 680
 704 658 392 450 435 347 633 221 205 482 281 567 661 628 727 706 174 373 539 126 378 488  43 424 188 454 602
  60 388 209 447 353 232 718 100 537 492 722 604 729 125 199  79 218 585  14 192 367 298 624 665 512 121  86
  16 374 502  76  68 685 506 294 725 621 112  33 190 501 407  28 647  42 590 559 678 468 337  55 296 401 644
 463 440 529 165 180 679 470 671  98  30 110 415 503 288  62 683 473 172 659 613 557 328 560  90  61 531  25

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00574e+07us (= 10057.4ms, 10.0574s)
Satisfaction error: 13
Number of search iterations: 3170
Number of local moves: 2647 (including on plateau: 2605)
Number of local minimum: 19 (including on plateau: 311)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 713 695 49 474 490 423 59 552 237 275 355 516 639 20 522 252 139 293 311 508 406 586 107 612 182 514 395 => the sum is 10324 rather than 9855
Problem in row 4: 603 697 719 475 472 457 219 673 581 597 397 385 643 23 459 724 47 645 716 140 701 445 247 631 274 350 346 => the sum is 12666 rather than 9855
Problem in row 5: 1 35 571 663 509 511 698 584 171 691 31 155 672 561 518 632 349 27 72 592 676 513 460 565 341 421 163 => the sum is 11182 rather than 9855
Problem in row 8: 111 688 138 652 94 455 630 322 265 528 318 239 213 588 250 118 420 634 24 283 553 338 236 655 366 108 6 => the sum is 9232 rather than 9855
Problem in row 9: 321 548 10 449 705 431 29 535 329 638 135 441 13 550 259 466 432 332 74 462 256 54 446 41 379 164 712 => the sum is 9211 rather than 9855
Problem in row 11: 184 117 231 91 179 73 306 437 411 142 540 105 319 464 491 141 238 336 696 339 240 554 304 225 542 97 606 => the sum is 8408 rather than 9855
Problem in row 14: 599 313 217 129 662 84 38 34 541 168 601 358 301 175 674 302 579 226 393 116 136 51 342 362 439 642 609 => the sum is 9091 rather than 9855
Problem in row 19: 709 276 254 376 278 9 536 570 253 64 200 615 583 717 148 368 623 577 315 555 18 359 290 307 703 157 694 => the sum is 10554 rather than 9855
Problem in row 21: 266 83 433 36 566 438 147 481 413 533 343 102 146 248 195 327 52 87 212 235 668 65 626 589 494 453 419 => the sum is 8657 rather than 9855
Problem in row 22: 166 3 134 648 173 616 580 708 700 524 81 207 569 270 498 519 167 534 46 150 160 143 394 484 153 149 183 => the sum is 8959 rather than 9855
Problem in row 23: 398 114 22 186 558 587 264 19 178 211 70 596 641 202 543 63 267 483 257 320 56 58 568 11 396 521 680 => the sum is 8269 rather than 9855
Problem in row 24: 704 658 392 450 435 347 633 221 205 482 281 567 661 628 727 706 174 373 539 126 378 488 43 424 188 454 602 => the sum is 11886 rather than 9855
Problem in row 25: 60 388 209 447 353 232 718 100 537 492 722 604 729 125 199 79 218 585 14 192 367 298 624 665 512 121 86 => the sum is 9676 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 351 138 204 727  50 281 364 284  26 248 715 545 374 331 310 272 412   8 125 563 139 694 504 573 288 613 716
 282 320  22 442 524 691 280 191 697 318 137 672 237  63 308 175 495 467 337 665 663 107 343 634  37 640 108
 279 213 542 469 550 462 154 608  46 666  54 182 635 252 624 539 571 240 168 395 388   7 466 149 668  12 516
  16 541 447 112 362 597   3  28 556 143 578 478 313 681 465 210 391 285 594 246 496 405 729 630 160 224 203
 153 328 642 298 406 116  78 728 300 432  77 239 670 644 598 345 686 363 127 161 532 409  79 617 151 601  75
 638 283  51 376 501 535 188 304 140 171 367 643 178  35 662 567 489 619 717  18  20 583 383 273 494  33 587
 553 655 302 639 569  68 106 118 725 632 243 685  23 164  45 551 167 117 568 169 538 450   4 353 650 627 134
  98 527 334 723 179 241 202 227 654 706 238 590 688 257 453  49 316 111 440 511 215 436 699 423 375  85 261
 267 591 618 216  88 622 629 692 678 278  67  21 518 276  82 437 487 411 488  19 305 454 520  39 410 120 522
 446 415 384 472 593 206 113 123 448 588 474 443 449 459 229  10 309 503 173 531 475 157 256 427 431 506 235
 439 726 455 564 493 652 657 325 358 176 509 434  17 451 232 718 441 271 265 253 621 152 604 136 438  48 680
 242 312 508 230 566 244 721 595 572  34 346 177 165 174 616 429 110 631 603 141  25 321 546 702 354 444  47
 382 100 456 651 306 577 413  99  91  80 372 408 633 422 402 329 544  29 352 373 712 690 322 421 104 390 197
 407 335 389 387 333 398 370 381 378 349 379 399 386 356 347 249 336 332 401 403 268 365 348 480 380 340 359
 620 368 490 294 530  96 319  95 296 339 323 327 338 326 263   6 350 682 576 344 324 507 581 131 266 707 357
 502 660 166 129 205 426 464 470 561 114 689 314 292 223 626 615  60  11  31 700  72 705 162 103 492  66 574
 698 400 714  40 303 208 498 170 132 600 270 479 299  36 540 596  64 565 377 625 231 260 290 245 392 452 371
 414  76  53 287 710  97 486 430  14 218 636 722  87  81 144 190 560 212 126  58 156 580  71 147 295 575  42
 521 648  61 525 646 361 396  73 228 500 183 234 220 311 491 614 101 301 341 510 684 192 708  83 225 555 653
   1 159 533 130  70 645 514 342 554 696 529  27 150 558 247 483 667 523 121 115 217 211 196 404 582 355  65
 142 148 207 185 194 534 155 623 233 719 589 517 709 711  57 703 695 713 274 461 659 607 293 468 275 236 435
 195 163 669  13 720 128 693 547 425 419  44  89 536 549 559 586 254 258 397 457 675  52 609 366 201 105 146
 599 704 499 463 122 269 484 264 360  41 135   5 460 674 180  74  43 592 222 701 385 102 393 548 579 512 445
 724 262  86 109 369  32 286 418 297  94 676 658 526 515 477 679 199 307 656 214 612 158  90  84  24 291 649
 673 119 570 200  38 317  92 552 610 189 611 289  55 221 181 255 433 476 226 585 184 315 497 671 661 505 330
 198  62  59 537 209 628 584 683 420 647 186 133 416 557  30   2 193 641 473 513 250 519  93 277 259 251 543
  15 602 394 637 219 424 606 485  56 458 428 145 481 528 687 172 482 187 677 124   9 417  69 471 664 562 605

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00576e+07us (= 10057.6ms, 10.0576s)
Satisfaction error: 11
Number of search iterations: 2700
Number of local moves: 2273 (including on plateau: 2229)
Number of local minimum: 23 (including on plateau: 252)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 16 541 447 112 362 597 3 28 556 143 578 478 313 681 465 210 391 285 594 246 496 405 729 630 160 224 203 => the sum is 9893 rather than 9855
Problem in row 8: 98 527 334 723 179 241 202 227 654 706 238 590 688 257 453 49 316 111 440 511 215 436 699 423 375 85 261 => the sum is 10038 rather than 9855
Problem in row 11: 439 726 455 564 493 652 657 325 358 176 509 434 17 451 232 718 441 271 265 253 621 152 604 136 438 48 680 => the sum is 11115 rather than 9855
Problem in row 16: 502 660 166 129 205 426 464 470 561 114 689 314 292 223 626 615 60 11 31 700 72 705 162 103 492 66 574 => the sum is 9432 rather than 9855
Problem in row 18: 414 76 53 287 710 97 486 430 14 218 636 722 87 81 144 190 560 212 126 58 156 580 71 147 295 575 42 => the sum is 7467 rather than 9855
Problem in row 19: 521 648 61 525 646 361 396 73 228 500 183 234 220 311 491 614 101 301 341 510 684 192 708 83 225 555 653 => the sum is 10365 rather than 9855
Problem in row 20: 1 159 533 130 70 645 514 342 554 696 529 27 150 558 247 483 667 523 121 115 217 211 196 404 582 355 65 => the sum is 9094 rather than 9855
Problem in row 21: 142 148 207 185 194 534 155 623 233 719 589 517 709 711 57 703 695 713 274 461 659 607 293 468 275 236 435 => the sum is 11542 rather than 9855
Problem in row 24: 724 262 86 109 369 32 286 418 297 94 676 658 526 515 477 679 199 307 656 214 612 158 90 84 24 291 649 => the sum is 9492 rather than 9855
Problem in row 26: 198 62 59 537 209 628 584 683 420 647 186 133 416 557 30 2 193 641 473 513 250 519 93 277 259 251 543 => the sum is 9363 rather than 9855
Problem in row 27: 15 602 394 637 219 424 606 485 56 458 428 145 481 528 687 172 482 187 677 124 9 417 69 471 664 562 605 => the sum is 10604 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 729 165 228 437 112 629 154 431 327 366 420  96 300 316 192  68  98 640  17 623 564 446 639  45 532 584 697
 455 704 267 205 692 250  99 294 204 194  32 454 208 164 102 285 620 597 378 180  51 658 635 160 448 685   2
  79 305 674 333 140 193 441 610 529 276 659 712  55 696 206 708 408 199 296  82 258 593 386 249 654 660 148
 301 649 210 641  14 676 282 651 131  75 215 534 717 644 684 126 142 492 325 226 248  36 554 619 233 655 648
 133  44 134 484 591 245 405 175  92  15 575 103 145 291 562 314 320 362 407 544 691 511 478 119 115 600 607
 611 535  91 157 493 583 358 673 550 113  83 116 518  24 356 621 263 428 295 547 253 606 590 412 257 299 125
 219 433 442 693 310 289 569 694 702 524 634 181 580 438 667 137 536 151 110 260 549 100 548 642 531 308 545
 162 185  18 262 669 722 499 552 494 458 182 638 687 153 631  13 123 664 141 515 578  31   8 269 500 106 595
 505 672 551 469 174 347 236 348 508 602 594 214 681 268 303  87  52 361 521 465  23 144 476 501  28 556 312
 599  93 298  27 471 576 240 270 479 443 453  30 108 522 459 688 581 615  88 666 705 200 678   5   3 284 483
 187  70  16 553 528 480 451 261  61 136 421 168  50 488  35 530 432   7 503 713 332  56 331  42 171 404 241
 445  19 699 417 725 677  49  33  86 275  60 464 516 425 525  97 700  11 714 135 618 614 709 242 172  34 394
 387 177 385 411 379 429 526 195 371 391 383 402 346 293 413 357 399  53 514 406 338 372  38 414 392 710 374
 313 390 384  40 360 341 380  80 365 377 381 389 369 216 376 633 396 349 370 353 330 723 560 350 319 329 382
 364 355 395 166 326 335 367 309 167 322 323 198 363 337 368 671 351 680 375 352 388 315 426 670 336 256 340
 343 565 273  21 109 422 622 461 573 173 603 354  95 235 342 159 663 570 139 657 468 450 334 579 264 232 149
 706 373 513 519 207 509 254  94 170   6 292 690 616  26 587 359 223 628 489 188  77 715 138 689 558  58 571
 150 279 209 512 625  57 463 719 646 186 222 491 675 720 128 297 502 283 121   1 510 543 227 197 540 266 286
  37 539 460 345 504  84 130  12 218 665 158 586  67 601 537 523 495 231 217 239 436 220   9 707 679 474 682
 574 397 728 201 444 278 304 255 592 307 561 555 447  39  48 473 419 147  22 176 225 452 124 237 695 589 566
 401 202 224 546  63 415  72 418 661 582 496 662 280 533 596 211  66 179 636  78 189 114 416 486 439 456 434
 410 440 572 557 290 178 527 107 718 520 344   4 462 184  64 542 490  74 668 538 152 111 507 213 605  81 497
 645 630 183 317 196  10 726  85 287 698 498 243 632 650 244 703  41  71 190 118 423 169 311 585 156 541 272
 482 727 612 400 481 117 247 559 161 716 324 470 203 577  43 398 701 604 449 339  29 318 104  73 238 393  90
 288 608 120 265 191 656 466 588  54 626 132 212 221 487 302 127 643 467 686  47 653 627 328 435 259  46 321
 271  65 652 647 598 281 711 475 306 246  89 252 409 427 472 251 129 568 567 683 143 457 146 485 122  20  69
  59 234 517 230 163  76 277 506 403 563 721 637 105 101 613 477  62 424 617 724 624 274 155 430 609 229  25

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00574e+07us (= 10057.4ms, 10.0574s)
Satisfaction error: 12
Number of search iterations: 2713
Number of local moves: 2323 (including on plateau: 2280)
Number of local minimum: 15 (including on plateau: 234)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 455 704 267 205 692 250 99 294 204 194 32 454 208 164 102 285 620 597 378 180 51 658 635 160 448 685 2 => the sum is 9023 rather than 9855
Problem in row 3: 79 305 674 333 140 193 441 610 529 276 659 712 55 696 206 708 408 199 296 82 258 593 386 249 654 660 148 => the sum is 10549 rather than 9855
Problem in row 4: 301 649 210 641 14 676 282 651 131 75 215 534 717 644 684 126 142 492 325 226 248 36 554 619 233 655 648 => the sum is 10728 rather than 9855
Problem in row 5: 133 44 134 484 591 245 405 175 92 15 575 103 145 291 562 314 320 362 407 544 691 511 478 119 115 600 607 => the sum is 9062 rather than 9855
Problem in row 6: 611 535 91 157 493 583 358 673 550 113 83 116 518 24 356 621 263 428 295 547 253 606 590 412 257 299 125 => the sum is 9957 rather than 9855
Problem in row 7: 219 433 442 693 310 289 569 694 702 524 634 181 580 438 667 137 536 151 110 260 549 100 548 642 531 308 545 => the sum is 11792 rather than 9855
Problem in row 9: 505 672 551 469 174 347 236 348 508 602 594 214 681 268 303 87 52 361 521 465 23 144 476 501 28 556 312 => the sum is 9998 rather than 9855
Problem in row 10: 599 93 298 27 471 576 240 270 479 443 453 30 108 522 459 688 581 615 88 666 705 200 678 5 3 284 483 => the sum is 10064 rather than 9855
Problem in row 11: 187 70 16 553 528 480 451 261 61 136 421 168 50 488 35 530 432 7 503 713 332 56 331 42 171 404 241 => the sum is 7667 rather than 9855
Problem in row 17: 706 373 513 519 207 509 254 94 170 6 292 690 616 26 587 359 223 628 489 188 77 715 138 689 558 58 571 => the sum is 10255 rather than 9855
Problem in row 23: 645 630 183 317 196 10 726 85 287 698 498 243 632 650 244 703 41 71 190 118 423 169 311 585 156 541 272 => the sum is 9624 rather than 9855
Problem in row 26: 271 65 652 647 598 281 711 475 306 246 89 252 409 427 472 251 129 568 567 683 143 457 146 485 122 20 69 => the sum is 9541 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 201 332 264 154 400 334 615 727 177 283 532 684  59 451 692 466 132 522  94 616 701 587 416 648 190 169 490
 437 126 721 285 159  69 384 247 577 125 556 208 585 672 575 583 162 249  54  64 220 427 158 562 564 601 485
 590 445 660 151 518  13 293 665 631  83 351 627 678 166 313 709 302  32 513  50 120 450   6 593 213 526 157
 314 640 117 402 173 422 632 228 597 442  97  88 128 520 171 144 686 719 674  63 460 525 638  49  28 536 362
 183 148 608 182 607 535 454 695  47 238 233 521 203 456 155 696 550  58 508 510  73 161 624 449 651 145 165
 216 281  29 275  67 580  33  48 544 589 664 398 206  11 130 279 379  44 367 559 127 493 618 187 516 106 410
 461 514  30 110 694 243 592 164  99 483 289 185 529 480 576 146 443 687 318 397 584 170 323 440 623 195  80
 174 428  85 676 105 231 202 537 656 553 498 578 325 610 718  60 406 359 138 414 178  34 455 411 511 409 104
  78 263 634 277 667 205 232 658 268 543 586 486 463 194 447  98 217 545 186  31 309 693 533 287  26 408 311
 452 646 477 515 492 527  75 438 446 484 150 214 472 636 476 481 680  12 235 469 118  62 531   1  56 248 462
 240 572 645 111 457 464 689  40  71 114 728 303 530 605 196 215 108 179 211  53 439 540  84 199 685 698 679
 467 340 557 659 459 113 256 181 487 134  22 401 606 711 209 517 425 706 129 307 639 234 566 124 168 387  51
 604  86 465  16 296 432 253 444 417   2 588 629 420 565   8 141 635 204 625 617 291 304 539 226  19 458 571
 394 388 391 371 373 363 339 385 335 364 348 352 404 366 342 382 341 305 356 336 347 383 378 392 372 380 368
 345 600  93 677 337 361 370 349 333 321 357 317 374 343 331 376 358 360 269 353 329 297 324 298 301 717 365
 300 103 708 502 274 628 246 642  24  72 713 714 690 471 147 262  79 546 153 396 122 655 431 436 668  61  38
  82 582  18 308 596 626 320 326 259 299 286 192 316 312   7 278 647 633 224 691 681 716 558 160 227 239 272
 137 729 435 282 265 294 419 393 503 222 346 509  15  42 653 552 310  23 390 512 712 221 156 418 423 703 191
 142  43 507 671  81 682 133  77 369 654 245 123 167 223 131 637 424 594 237 702 389  74 548 327 614 495 407
 499 197 426 225 663 109 722 236 189 319 630 524 271   4 479 399  68 621 581 200 643  52 219 560 295  36 688
 554 276 473  41   5 140 505 567 375 675  66  91 441 434 612 641  27 595 669 649 697 598 519 619  10  76 261
 421 496 613 551 266 116  92 491 673 670 101 218 350 184 135  17  87 468 149 330 662 152 251 710 707 288 657
 198 538 254 506 315 705 541  37  14 720 242 666 574 143 569 139 433  39 478 252  45  89 273 163 700 652 570
 609   9 102 726 579 306 542  21 210 292 500 430  90 405 470  65 212 121 704 568 344 377  95 523 561 270 724
 603 395 260 290 725 188 136 172 229 355 175 230 241 413 412 644 715 284 611 489  96 591 255 354  57 386 549
 650 563 280 193  25 622 661 599 723 322  70  55 244 180 328 475 528 267 448 207 429 555 107 381 494  46 403
 504 115   3 699 257 547 119 488 602 497 482 112 474 258 573 453 501 683 534  20 100 415 250 338 176 620  35

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00569e+07us (= 10056.9ms, 10.0569s)
Satisfaction error: 6
Number of search iterations: 3193
Number of local moves: 2683 (including on plateau: 2635)
Number of local minimum: 13 (including on plateau: 337)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 201 332 264 154 400 334 615 727 177 283 532 684 59 451 692 466 132 522 94 616 701 587 416 648 190 169 490 => the sum is 10936 rather than 9855
Problem in row 6: 216 281 29 275 67 580 33 48 544 589 664 398 206 11 130 279 379 44 367 559 127 493 618 187 516 106 410 => the sum is 8156 rather than 9855
Problem in row 9: 78 263 634 277 667 205 232 658 268 543 586 486 463 194 447 98 217 545 186 31 309 693 533 287 26 408 311 => the sum is 9645 rather than 9855
Problem in row 16: 300 103 708 502 274 628 246 642 24 72 713 714 690 471 147 262 79 546 153 396 122 655 431 436 668 61 38 => the sum is 10081 rather than 9855
Problem in row 19: 142 43 507 671 81 682 133 77 369 654 245 123 167 223 131 637 424 594 237 702 389 74 548 327 614 495 407 => the sum is 9696 rather than 9855
Problem in row 21: 554 276 473 41 5 140 505 567 375 675 66 91 441 434 612 641 27 595 669 649 697 598 519 619 10 76 261 => the sum is 10616 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 221 523 669 171 498 464  62  86 232 407 515 160 534 496 599 626 635  46 251 532 627 344  30  58 140  16 529
 654 418 511  56 105 719 141 401 297  94 569 346  45 227 603 674 250 137 442 683 119 299 130 474 634 127 700
 151 383 516  17  78 557 684 650 567 106 131 538  72 375 392 416 718  90 487 179  69 710 253 706  88 656 266
 117 357 169 282 691 157 510 189 135 596 727 252  63  38 608 196 348 240 430 606 302 101 618 665 722  99 637
 466   6  44 568 296 539 396  39 488   1 503 642 188  92 303 185  52 373 590 280 397  91 153 260 553 646 478
 376 395 681 690 520   9 166 612   7 639  40 229 696 711 132 164  19 537  79 340 729  98 336 121 465 611 453
 147 204 394 723 545 207 210 600 508 261 587 107 113 328 269 721 245 491 162  80 154 580 589 620 446 317 247
 219 150 518  89 277  85 359 585 133 724 540 574 272 257  47 144 432 495 305 226 629 249 673 504 649 578 142
 497 459 505 661 239  27 472 202 325 321 355 471 609  95  82  59 622 509 197 449 175 513  83 717 349 686 176
 234  48  68 524 633 254 625 483  26 264 476 666 214 390 289 242 300 262 643 678 556  76 341 134 256 575 598
 581  66 310 307 623 663 178 339 720 218 579 610 238 615   5 586 276 414 177 208  61  21  20 322 628 393 697
 519 458 222 158 445 704 223 312 422 527 387 708 315 560 548  50 525 631 320 601  15 501 237 109 120 206  32
 447 632  49 405 715 343 148 274 714   4 278 566 198 271 338 410 443 584  11 298 533 421 672 345 225 290 241
 360 337 365 361 440 333 374 301 403 352 291 293 412 427 417 327 259 351 342 386 308 433 379 366 448 370 420
 330 111 209 411 283 329 709 551 695 679 124 378 463 485 489 187 451 203 399 331 367 391 381  65  54 112 668
 102 173 475 536 662 728 645 191 725 184 167 431  84 216  35  33  25 521   8 699 522 594 263 425 641 323  93
 468 552 591 492 152 115 457 490 444 224  29 469 100 542 692 499 460 712 605 455 145  22 159 165 231 415 170
  13 409 213 680 129 136 294 174 118 607 621 123 713 644 597 356 217 190 428 364 583 211 571 313 382 215 554
 368 604 434 326 408 555 273 559 467 429 267 193 500 319  77 660  51 354 128  18 703 413 572 220 482  36 439
 688 677 385 149 200 659 116 563 547 287 258  57 682   3 199 436 163 126 588 452  41 494 435 582 292 530 246
 701 186  37 423 265  53 564 687 168 716 454 535 402 638 550 398  81 685 558 389 593 705 400 565 172  73 192
 456 616 377  43 404 514 570  23 288 350 630 103 306 156 693 544 380 689 576 484 230 324 562  55 125 347  10
 602 655 577 424  12 194 316 182 183 480  42 314 426 526 104  96 698 244 617  34 228 653 707 318 592 419 212
 243  60  71 664 295 493 388 201 362  64  24 114 652 651 647 363 473 675 180 640 335 195 332 462 270 726 275
   2 461 657 268 384 502  75 358 479 561 671  28 481 441 437 438 546 139 309 248 334 512 110 507 122 624 161
 235 636 138 353  70 311 531 155 371 614 304 667 528 255 233 595 573 143 506 108 406 619 477 236  67 181 543
 658 279 670  74 486 205 369 648  31 146 286 281 549  97 470 450 613  14 517  87 694 285 372 541 702 284 676

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00035e+07us (= 10003.5ms, 10.0035s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 5
Number of search iterations: 2821
Number of local moves: 2361 (including on plateau: 2311)
Number of local minimum: 24 (including on plateau: 288)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 221 523 669 171 498 464 62 86 232 407 515 160 534 496 599 626 635 46 251 532 627 344 30 58 140 16 529 => the sum is 9471 rather than 9855
Problem in row 5: 466 6 44 568 296 539 396 39 488 1 503 642 188 92 303 185 52 373 590 280 397 91 153 260 553 646 478 => the sum is 8629 rather than 9855
Problem in row 16: 102 173 475 536 662 728 645 191 725 184 167 431 84 216 35 33 25 521 8 699 522 594 263 425 641 323 93 => the sum is 9501 rather than 9855
Problem in row 21: 701 186 37 423 265 53 564 687 168 716 454 535 402 638 550 398 81 685 558 389 593 705 400 565 172 73 192 => the sum is 11190 rather than 9855
Problem in row 27: 658 279 670 74 486 205 369 648 31 146 286 281 549 97 470 450 613 14 517 87 694 285 372 541 702 284 676 => the sum is 10484 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 728 616 188 235  35 374  46 541 583 560  20 601 231 240 232 274 234 336 598 171 106  77  25 604 113 515 700
 443 690 237 588 424 262 403 168 514 334 718 370  44 677  18 246 709 564 444 426 591  29 189 313 200 664  13
 213 479 659 179  84 681  48 550 287 497 236 539 493  98  40 673 672 202  30 245  72 440 561 704 641 130 402
 558 173 377 298 271 563 378 682 637  47  86  89 610 655 220 453 349 398 316  63 359 279 429 636 668 115 146
 261 303  70 485 630 187 264 495 411  32 157 423 698 689 176 506 474  36  21 223 396 544 596 263 623 465 427
 548 256 257  22 243 648 525  79 184 151  58 218 520 132 618 697 510 606  42 405 252 573 660 513 224 625 289
 705 584 496 543 526  75 572 357  28 653 692 518 283 268 408 364 295  49 305  61 540 620 490 449 193 434 536
 219 191 297 579 253  99 139 318 276 586 647 691 227 147   7  27 101 657 716 516 498 317 259 546 649 452 441
 554 296 587 489 337 464 597 472 461 215 239 469 266 361  81 569 134 174 487 145 203 699 310 128 481  78 559
 483   2 384 136 292 233 250 331  33 394 530 282  52 522 685  51 260 460 669  74 589 180 715 126 178 531 633
 463 663 462 542 568 470 448 729 319  65 473 137  96 507 416   8  71 119 577  95 492 612 216  12 521 611 163
 654 527  26 172  90   4  34 304 367 226 667 422 645 420 320 534 144 125 242 628 643 421 397 529 342 703 269
 433 435 383  80 410 373 399 153 409 431 392 148 362 382 418 379 407 376 386 345 594 350 351 314 391 339 415
  50 267 414 207 447 615 277 166 154 696 535  88 592 149 371 582 484 450 688  76 104 201 159 455 651 499 478
 375 380 537 366 330 288 363 344 324 683 335 329 302 352 190 354 646 341 326 369 327 333 309 328 355 322 347
 291  56 557 160 565  15 675 141 549 281 156 340 519 307 348  41 206 505 192 680 214 503 639 576 332 404 603
 167 477 727 432 143 182 475 725 247 165 293 670  43 251  69 640 676 228 105 701 412 674 388 162 438 299  66
 644 211 209 707 551 122 270   3 476 222 482 717 131 574 387 605 121 695 494 301  93 390 248  97 273 170 662
 686 395 123  60 325 308 353 300 238 459  11 599 721 439 532 389 614 111 255 638 656  19 290 687 107 346 194
  87 109  37 602 312 694 533 164 713 225 512 205 671  85 627 547 575 323 635 210 177  39  59 458 712  73 511
  38 726 600 621 501 650 140 679 103 118 311 629 155 142 244 607 723  62 665 538 343   5 186  64 138 454 413
 183 652 100 124 181 150 619 622 491 401 368 127 280 471 502 360 116  54 442 555 590 133 678 666 169 580 241
 285 278 417 265 110 508 372 571 185 258 617 198 120 608 567  10 117 457 358 480 720 626  91 249 212 552 624
 208 135 585 456 230 724   6  14 693 517 613 275 466 112 488 217 445 711 356 468 430 436 486  82 593   1 108
 197 400 393 581 658 406 632 437 467 634 221 195 428 500 661 102  83 609 196 425  68 199 545 161  57 294 306
 365  45  31 284 708 556 315 381 321 719  67 553 338  53 706 528 595 684 152 566 272 446   9 504 578  24  55
  17 509 702 642 631 204 722 129 385 286 419  23 562 714 524  92  94 523 158 451 114 710 570 229  16 175 254

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00027e+07us (= 10002.7ms, 10.0027s)
Wall-clock time (full program): 1.00587e+07us (= 10058.7ms, 10.0587s)
Satisfaction error: 5
Number of search iterations: 2733
Number of local moves: 2282 (including on plateau: 2233)
Number of local minimum: 27 (including on plateau: 272)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 728 616 188 235 35 374 46 541 583 560 20 601 231 240 232 274 234 336 598 171 106 77 25 604 113 515 700 => the sum is 8983 rather than 9855
Problem in row 2: 443 690 237 588 424 262 403 168 514 334 718 370 44 677 18 246 709 564 444 426 591 29 189 313 200 664 13 => the sum is 10278 rather than 9855
Problem in row 7: 705 584 496 543 526 75 572 357 28 653 692 518 283 268 408 364 295 49 305 61 540 620 490 449 193 434 536 => the sum is 11044 rather than 9855
Problem in row 10: 483 2 384 136 292 233 250 331 33 394 530 282 52 522 685 51 260 460 669 74 589 180 715 126 178 531 633 => the sum is 9075 rather than 9855
Problem in row 20: 87 109 37 602 312 694 533 164 713 225 512 205 671 85 627 547 575 323 635 210 177 39 59 458 712 73 511 => the sum is 9895 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 223  32 179 638 320 592 531 541 666 304 460 549 510 156 668 187 456  18  43 528 445  71  67  58 313  69 189
  93 704 724 437  61 421 711 164 234 315  31  76 298 423 523 684 655 196 259 426  37 665 143 685 399 129 362
 728 239 654  47 405 475 385 380 245 241 680 413 127 670 600  19 532 233 124  42 544 594 435 427 215 208 193
 344 729 699 581 420 639 691  13  11 178 493 254 588 142 314 513  52  74 434   6 272 338 502 589 602 238 139
 660 279 149 727 190 287 631  46 558 512 392 387 576  12 277  17 331 103 518 273 633 134 176 461 323 524 679
 260 611 337 486 284 363 180 160  90 539 648 561 433 177 207 624 690 428  78 310 368 137 330 203 126 191 596
 521 329  89 709 533 182  68 487 375  81 366 457  73 400 714 455 500 307 499 534 289 634  56 136 672 161 228
  65 458 244 547 216 116 482  29 516 574 703 293 446 511 439  55   5  51 317 723 643 232 226 615 697 494 158
 473 102 346 278 579 507 472 391 608 412 205 595 185 695  79 462 104 603 479 184 163 642 536  83 501 677  36
  54  49 332 526 506  82 702 692 132 108 100  20 265 586  59 290 404 688 650 676 422 249 492 509 308 585 369
 175 432 430 276 318 669 105 306 267 490 165  88 689 584 465 123 468 609 571  60 255 436 144 637 569 305 219
   7 550 395   8  64 213 425 620 614 202 601 467 162 224 113 565 243 630 159  34 607  98 616 560 566 570 542
 382  91 480 295 236 220   2 474 719 652 540 152 551 397 348 384 361 342 416 707 316 410 656 221  35 374  94
 328 424 396 357 339 407 367 398 325 373 376 371 349 360 353 388 535 351 365 345 336 358 286 341 302 355 370
  95 438 204 554 546  87 130 381 118 450  48 264 350 321 347 514 618 562 271 557 529 495 710 212 572   4 478
 645 555 418 390 593 527 231 481  92 693 377 538 646 477 662 303 628 411 417 181 319 451 686 525  99 237 269
 698 640 627 112 663 464 173 587  80 471 188 644 270 653 553 157 251 537  30 280  45 372 294 250  57 356 403
 583 671 235 443 622 296 150 261 673 312 263 720  96 326 246 281  39 715 247 256 262 543 409  33 257 275 641
 183 151 469 632 167 121 623 626  28 359  75 115 171  66 682 675 210 174 209 591 568 354 444 488 453 153 517
 429 333 107 393 725  15  16 288 230 454 590 222 379 718  72 378 194  25 713 659 497  38 484 133 567 491 705
 297 199  63 552 119 726 408 722 240 169 253 651  86 489 145 141 109 449 694 340  84 147  14 629 192 700 706
 401 125 573  26 300 466 580 168 172 649 452 268 664 218 415 406 717 301 101 106 282 515 154 229 658 364 545
 504  70 522 166 170 283 394 661 708 610 716 383 612 140  41  85 111 131 657 559 225   1 647 442 197 431 389
 604 386  23 327 258 195 285 402 448  97 556 122 135 335 206 605 155 476 211 419 324 414 548  21 343 619  53
 114 217 447  27 485 186 311  44 520 577 252 508  10  22 564 712 613 563 198 110 483 227 440 496 441 667 621
 470 459 636 120  40 681 674 242 683   9   3  50 463 505 625 334 575 678 578 352 598 701 146 606 117 530 292
 519 582  77 201 696 635 128 291 503  24 322 687 721 248 138 498 299 200 617 597 309 599 214 266 274 148  62

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00572e+07us (= 10057.2ms, 10.0572s)
Satisfaction error: 8
Number of search iterations: 2802
Number of local moves: 2351 (including on plateau: 2304)
Number of local minimum: 20 (including on plateau: 276)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 223 32 179 638 320 592 531 541 666 304 460 549 510 156 668 187 456 18 43 528 445 71 67 58 313 69 189 => the sum is 8813 rather than 9855
Problem in row 6: 260 611 337 486 284 363 180 160 90 539 648 561 433 177 207 624 690 428 78 310 368 137 330 203 126 191 596 => the sum is 9417 rather than 9855
Problem in row 9: 473 102 346 278 579 507 472 391 608 412 205 595 185 695 79 462 104 603 479 184 163 642 536 83 501 677 36 => the sum is 10397 rather than 9855
Problem in row 16: 645 555 418 390 593 527 231 481 92 693 377 538 646 477 662 303 628 411 417 181 319 451 686 525 99 237 269 => the sum is 11851 rather than 9855
Problem in row 19: 183 151 469 632 167 121 623 626 28 359 75 115 171 66 682 675 210 174 209 591 568 354 444 488 453 153 517 => the sum is 9304 rather than 9855
Problem in row 21: 297 199 63 552 119 726 408 722 240 169 253 651 86 489 145 141 109 449 694 340 84 147 14 629 192 700 706 => the sum is 9324 rather than 9855
Problem in row 24: 604 386 23 327 258 195 285 402 448 97 556 122 135 335 206 605 155 476 211 419 324 414 548 21 343 619 53 => the sum is 8567 rather than 9855
Problem in row 26: 470 459 636 120 40 681 674 242 683 9 3 50 463 505 625 334 575 678 578 352 598 701 146 606 117 530 292 => the sum is 11167 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 703  19 342 727 349 195 450 470 713 399 645 535  36  82  10 511  77 106 142 574 709  28 107 539 167 514 706
 340 486 146 127  67 248 570 476 649 569 415 548 308 430 259 370 674 176 191  69 627 211 468 447 557  24 403
 407  38 677 238 593  25 671 527 345 669  42 382 603 685 113 137 509 383 610 492  60 110 678 108 398  73 282
 363 561 641 652  62 381 361  75 255 396 351  35  55 477 722 518 536 660  12 303  83 575 474 480 243 391 193
 425 232 246 620 175 316 431 406 607  29 623 231 720 215 515 208 153 424 429 337  34 675 606 319 336 116 427
 326 261 327 496 526 615 169  72 549 218 314 230 648 140 613 292 306 295 338 172 563  84 347 400 472 467 546
  87 460 612   4 556 558 521 111 138 166 133   5 156 595 718 353 149 551 422 646 565 182 134 580 504 404 545
  52 644 466 188 344 520 216 540  32 577 256 194 242 147 419 287 635 458 661  13 401 239 386 236 179 462 698
 373  40 154 301 512 174 322 566 530 508 253 654 441 502 442  66 503  97 693 453  16 307 510 234 198 366 640
 265 621 276 157 190 700 689 490 277  54 213 410 601 189 681 712 411 694  65 323 647 662 364  14 708 283 130
 729 284 178  11 497 469 209 658 200 426 714 192 124 331 484 664 433 589 445 626 596 298 457  56   9 161  15
 354 553 690 482 417 384  91 334 365 592 104 728 631 394 204 224 235  48  93 332 269  68 655 372 343 604 289
 291 184 443 227 618 487 721 171 594  21 136 173 233 240 602 517 220 135 214 692 288 148 483 639 459 499 420
 481 505 500 317 704  70   8 181 672 222 625 588 516 160 275  80 207 650 702 432 168 100 223 622 109  95 643
 393 463 150 544 454 118 299 341 392 608 584   7 151 630 409 369 339  78 461 554 304 122 131 507 687 360 513
 667  18 552  41 726 293 281 333 357 434 494 572 375 329 302 258  71 152  90 355 435 611 348 389 228 568 576
 663 254  64 523 294 356 629 197  33 651 493 368 436 305 374 263 285 325 538 132 449 311 262 377 412 280 581
 119 614 573 418  85 423  37 542 300 226  47 105  76 202 531 455  57 421 525 405 187 439 321 699 324 682 451
 705 267 489 697 657 519 143 598 380 273 196 320 310  96 362  51 416 600 244 229 163 456 534 271 656 376  59
 501  17   1 180 177  22 201 199 103 290 488 684 144 533 170 679 653 506  86 408 495 715  46 680 559 249  81
 437 642 309 567 212 616 605 634 686 312 688 446 129 452 128 203 590 210 278 315 159 585 591  53 352 666 335
 123 475 155 350 257 723 464 696  45 296 564 471 691 528  31 164  23 328 571  88 683 126 636 318 632 272 145
   2 286 121 562 247  94 402 725 221  43 379 206 586 112 541 582 371 478 185 665 241 668 114 245 125 529 438
 120 397  89  49 444 670 378   3 268 695 158 297 346 638   6 659 619 330 385 274 395 599 587 139 491 711 165
 186 673 543 388 217 498 532  61  92 617  79 560  63 717 260 547 578  39 633 225 367 522 115 550 440  74 279
 716 597 724 270 358 219 250 183 473 465 448 359 710  50 101 628  98 637 701 428 414 390  26 102 237  20 251
  27 264 387 719 117 162 205 266 579  99 413 555 524 676 583  58 707 485 141 313 537 624 252 479  30 609  44

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00558e+07us (= 10055.8ms, 10.0558s)
Satisfaction error: 11
Number of search iterations: 2647
Number of local moves: 2264 (including on plateau: 2220)
Number of local minimum: 21 (including on plateau: 267)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 326 261 327 496 526 615 169 72 549 218 314 230 648 140 613 292 306 295 338 172 563 84 347 400 472 467 546 => the sum is 9786 rather than 9855
Problem in row 8: 52 644 466 188 344 520 216 540 32 577 256 194 242 147 419 287 635 458 661 13 401 239 386 236 179 462 698 => the sum is 9492 rather than 9855
Problem in row 10: 265 621 276 157 190 700 689 490 277 54 213 410 601 189 681 712 411 694 65 323 647 662 364 14 708 283 130 => the sum is 10826 rather than 9855
Problem in row 15: 393 463 150 544 454 118 299 341 392 608 584 7 151 630 409 369 339 78 461 554 304 122 131 507 687 360 513 => the sum is 9968 rather than 9855
Problem in row 18: 119 614 573 418 85 423 37 542 300 226 47 105 76 202 531 455 57 421 525 405 187 439 321 699 324 682 451 => the sum is 9264 rather than 9855
Problem in row 19: 705 267 489 697 657 519 143 598 380 273 196 320 310 96 362 51 416 600 244 229 163 456 534 271 656 376 59 => the sum is 10067 rather than 9855
Problem in row 20: 501 17 1 180 177 22 201 199 103 290 488 684 144 533 170 679 653 506 86 408 495 715 46 680 559 249 81 => the sum is 8867 rather than 9855
Problem in row 21: 437 642 309 567 212 616 605 634 686 312 688 446 129 452 128 203 590 210 278 315 159 585 591 53 352 666 335 => the sum is 11200 rather than 9855
Problem in row 23: 2 286 121 562 247 94 402 725 221 43 379 206 586 112 541 582 371 478 185 665 241 668 114 245 125 529 438 => the sum is 9168 rather than 9855
Problem in row 24: 120 397 89 49 444 670 378 3 268 695 158 297 346 638 6 659 619 330 385 274 395 599 587 139 491 711 165 => the sum is 9912 rather than 9855
Problem in diagonal 1: 706 24 398 480 606 84 565 13 693 694 433 224 602 160 151 572 493 226 380 199 605 723 247 49 543 597 27 => the sum is 10494 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 696 606 725  35  39 512  48 319  74 349 235 352 105 333 579 202 285 391 291 132 525 639 261 426 522 494 680
 634 728 722 104 441 581 649 355  75 678  64 119 515 670 192 625 361 723 397  11 439 589 107  21 476 539 424
 700 582 555 685 486   5  52  55 658 213 489 155 712 151 382 276 425  40 550 532  97 463 334 278 402 520  58
 292 454 210 596 401  90 394  13 258 576 660 304  51  26  63 471  61 385 669 627 631 601 472 538 207 272 533
 138 268 251 715 616 615 112 237 196 260 545 527 551 116 141 315 646 395 135 351  27 511 232 467 173 663 652
 368  84 223 297  34 477 172 438  93 502 708 162 662  96 145 713 624  22 635 480 588 367 521 314 465 178 487
 686 286 123 406 148 259 620 445 375 209 423 703 585 269 281 509 562 179 536 595 666 460 435 279 146 131 565
  16 605 705 226 289  83 337 193 516 212 149 575 554 687 273 200  62 673 677 320 599 623 577  94 567 464  70
 363 419   9 436 672 632 356  78 647 553 187 517 114 514 164 393 412 300 519 287 240 418  23 530 719  15 338
 128 570 455 492 411 405 277 568 195 484   8 537 429 306 500 388 659 227   7 619 130 544  17 505 479 231 284
 329 341 491 313 326 322 608 343 661 693 147 222 274 247 481 483 698 381 185 701 524 117 113 488 170 531 129
 478  95  43 266 592 328 707 280 529 238 127 468 443 163 587  24 243 559 100  54 597 241 543 540 359 621 630
 332 377 400 451 362 416 324 345 413 403 421 205 301 282 347 371  81 714 523 290 427 354 376 307 378 305 350
 379 396 437 244 373 168 507 366 459 296 389 298 340 651 309 501 311 442 358 374 263 283 325 346 344 336 360
 643 142 556 653 689 613 590 246  14 644 717 302 546 629 218  56 288 133 604  50 220  38 409 203   4 482 166
  53 153 598 318 216 716 158 711 331 642 417 496  73 704 457 422 175 386 194 667  47 611  10 364 225 159 552
 614 253 211 580 461 189 674 198 690 404 692  19 183 430 671 699 348 383 169  59 668 115 682 428 636 612 410
 245 387 250 255 407 184 228 357 447  25 370  99 177 136 257 111 584 262  45 392 469 110 541 655 626 121 399
 470 201 303 513 267 676 622 560  87  12 176 610 271 415 697  37 150 504 310  33  82 236 182  65 709 466 181
 171 650 586 316 191  67 224 547 495 264 102 157 508 180  85 485  28  69 702 204 122 144 143 654 603 452 607
 208 229 214 706 294 594 497 683 440 156  98 230 695 679 675 526 312 414 174 233 108  76 641  20 265 564 124
   2 199 563  29 510 101 628 327 137  88 609 506  89 420 542 458 160 535 490 549 390 473 578 369 242 640 221
 252 633  36  91 140 602 134 648 217 335 534 664 342 206  80 275 638 408 152 446 188 353  71 308 398 103 449
 161   1 434 450 718 431  92 727 694 617 330 215 618 295 321 249 293 657 197 444 593   6 726  57  31 456  42
 299 498 384  77  46 248 637 583 254 499 569 681 365 729 448 528 219  86 573  49 109 380 323 684  18   3 566
 474 572 339 462 561  66  41  79 710 317 433  44 234 453 239 106 656  30  72 691 548 600 720 645 120 125 518
 724 126  32 139 165 475 167 154 190 186 256 688 118  68 721 432 574 557 591 665 558 503 493 270 571 372  60

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00563e+07us (= 10056.3ms, 10.0563s)
Satisfaction error: 10
Number of search iterations: 2475
Number of local moves: 2141 (including on plateau: 2097)
Number of local minimum: 7 (including on plateau: 243)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 634 728 722 104 441 581 649 355 75 678 64 119 515 670 192 625 361 723 397 11 439 589 107 21 476 539 424 => the sum is 11239 rather than 9855
Problem in row 7: 686 286 123 406 148 259 620 445 375 209 423 703 585 269 281 509 562 179 536 595 666 460 435 279 146 131 565 => the sum is 10881 rather than 9855
Problem in row 8: 16 605 705 226 289 83 337 193 516 212 149 575 554 687 273 200 62 673 677 320 599 623 577 94 567 464 70 => the sum is 10346 rather than 9855
Problem in row 11: 329 341 491 313 326 322 608 343 661 693 147 222 274 247 481 483 698 381 185 701 524 117 113 488 170 531 129 => the sum is 10318 rather than 9855
Problem in row 17: 614 253 211 580 461 189 674 198 690 404 692 19 183 430 671 699 348 383 169 59 668 115 682 428 636 612 410 => the sum is 11478 rather than 9855
Problem in row 18: 245 387 250 255 407 184 228 357 447 25 370 99 177 136 257 111 584 262 45 392 469 110 541 655 626 121 399 => the sum is 8139 rather than 9855
Problem in row 19: 470 201 303 513 267 676 622 560 87 12 176 610 271 415 697 37 150 504 310 33 82 236 182 65 709 466 181 => the sum is 8835 rather than 9855
Problem in row 20: 171 650 586 316 191 67 224 547 495 264 102 157 508 180 85 485 28 69 702 204 122 144 143 654 603 452 607 => the sum is 8756 rather than 9855
Problem in row 23: 252 633 36 91 140 602 134 648 217 335 534 664 342 206 80 275 638 408 152 446 188 353 71 308 398 103 449 => the sum is 8703 rather than 9855
Problem in diagonal 1: 680 539 402 538 232 367 666 320 519 227 698 24 347 651 546 496 692 25 87 547 497 101 140 450 384 572 724 => the sum is 11471 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
  71 192 116 668 505 189 725 212 248   5 238 154  69 143  20 109 713 344 579 219 107 430 131  53  72 368 149
 224 325 251 476 661  84 327 597 309 652 243 257  46 456 173 267  96 589 198 235 153 538 272 667 458 680 621
 132 488 214  70 392 417 484 681 723 727 320 213 380 229 270 707 659 181 692 596 513 557 402 134 717 549 564
 197 584 382 280 406 503 152  23  89 106 541 636 405 449 526 528   7 533 164 399 268 391 437 655 387 702 105
 670 483 477  74 246  40 385 495 651 442 714 490 256 565 142 112 568 298 177 634  44 395 509 226 285  91 386
 338 563  78 728 221 373 663 421 108  14 448 249 290  28 158 480 555 283  19  17 115  58 203 629 561 389 208
 100 190   4 319 573  92 639  97 619 635 600 460 279 160 466 179  99 545 582 423 546  31 233 540 531 550 363
 497 372  95  22 447 645  79 440  63 475 196 217 556 436 263 473 459 653  68 519 296  21 697 481 310 487 588
 155 117 517 122  90 498  77  52 412 715 578 641 587 111 644  45 688 637 489 163 643 689 127 444 403  43 168
 465 250 314 711 145 253 422 669 144 128 694 201 434 640 194 259 506 441 289  41 673 262  18 220 193 599 690
  88 536 359 416 451 580 234 313 686 397 207 534  51 361  47 616 478 305 703 400 508  65 428 625 282 147  38
 598 455 705 610 496 425 532 601 474  24 174 374 206 522 665 424 261 439  80 574 195 252  98  86  54 244 287
 527 185 407 404  16 358 628 294  75 369 150 512 696 411 426 349 308 567 471 716 356 180   3 365 691 103 288
 377 722 347 276 378 548  15  25 341 571 348 323 463 393 165 328 304 151 388 335 623 346 646  30 275 685 452
  64 553 638 239  57 620 216 618 649 157 186 419 683 606 701 121 617  49 576 367 450 675 469  37 120 237 721
 303 322 355 312 281 317 530 354 350 297 360 699 664 299 329 315 291 339 271 301 178 472 337 357 326 720 176
 245 169 632 228 255 435 331  36 306 258 266 654 398 260 410 674 311 396  56 293  76 631 626 431 624 520 334
 695 371 161  83 381 362 130 586 223 187 515 136 678 648 302 429 102 284  87  48 438  50 682 200 510 524 607
 462 537 118 660 210 370 570 414 479 560 133 188 101 706 585 590 562  34 514 273 710 647 521 511 162 300 218
 604 166 672 286 603 726 415 345 379 502 467 148 191 712 113  39 529 215 184  73 183 518 202 321 432 384 446
 729  27 123 461 724  26 684 704 227 204 340 542 394  85 642 307 199 135 333 209 591 572 583 671 656   1 232
 264 420 156 558 630 104 593 539 482 119 494 278 138 139 608 615 182 679 408  81 658 141   8 547  12 352 650
 551 222 605 577 137  94 351 383 269 698 559 677 507 543 575 175  11  29 602 492  10 125 718  32  35 719 159
 336 332 609 171 581 666 110 390 376 544 470 129 491  61 353 676 114 468 236 504 318 501 330 708 418  93 457
 516 364 700 366 126 211  62 316 552 611  59 231   6 240 595 172 409  66 443 662 170 485 693 167 657 124 413
 614 375 525 146 277 627 247   9 554  13  55 433 274 427  82 523 622 709 633 687 569 324 140 265 230   2 493
  33 535 295 592 566 292 254 241  67 445 500  60 612 225 401 343 205 486 613 594 464 499 342 453 454 242  42

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00564e+07us (= 10056.4ms, 10.0564s)
Satisfaction error: 10
Number of search iterations: 3110
Number of local moves: 2663 (including on plateau: 2618)
Number of local minimum: 18 (including on plateau: 296)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 71 192 116 668 505 189 725 212 248 5 238 154 69 143 20 109 713 344 579 219 107 430 131 53 72 368 149 => the sum is 6829 rather than 9855
Problem in row 3: 132 488 214 70 392 417 484 681 723 727 320 213 380 229 270 707 659 181 692 596 513 557 402 134 717 549 564 => the sum is 12011 rather than 9855
Problem in row 6: 338 563 78 728 221 373 663 421 108 14 448 249 290 28 158 480 555 283 19 17 115 58 203 629 561 389 208 => the sum is 8197 rather than 9855
Problem in row 15: 64 553 638 239 57 620 216 618 649 157 186 419 683 606 701 121 617 49 576 367 450 675 469 37 120 237 721 => the sum is 10845 rather than 9855
Problem in row 18: 695 371 161 83 381 362 130 586 223 187 515 136 678 648 302 429 102 284 87 48 438 50 682 200 510 524 607 => the sum is 9419 rather than 9855
Problem in row 19: 462 537 118 660 210 370 570 414 479 560 133 188 101 706 585 590 562 34 514 273 710 647 521 511 162 300 218 => the sum is 11135 rather than 9855
Problem in row 21: 729 27 123 461 724 26 684 704 227 204 340 542 394 85 642 307 199 135 333 209 591 572 583 671 656 1 232 => the sum is 10401 rather than 9855
Problem in row 24: 336 332 609 171 581 666 110 390 376 544 470 129 491 61 353 676 114 468 236 504 318 501 330 708 418 93 457 => the sum is 10442 rather than 9855
Problem in row 25: 516 364 700 366 126 211 62 316 552 611 59 231 6 240 595 172 409 66 443 662 170 485 693 167 657 124 413 => the sum is 9416 rather than 9855
Problem in diagonal 1: 149 680 717 655 509 58 546 519 489 441 478 424 426 393 683 699 266 187 479 345 684 104 137 171 700 375 33 => the sum is 11347 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 656 341  53 164 586 184 474 666 615 525 227 623 109 584 271 684 648 638 508 425 436  29 711 298   1 190 552
 375 291  74 278 604 707 221  16 121 143 238 570 100 687 519  21 452   9 188 323  65 324  90 180 576  50 655
 486 601 222 174 456 553 652 717  63 201 460 200  45  14 502 661 605 506 719  46 119 594 723 628 657 203 494
 663 306 106 588 213 235 682 496 629  62 127 182 128 599 622 148 312  86 555  98 726 577 285 149 645 465 171
 115 685 464  58 304  80 634 244 489 514  95 583 582 275 236 217 543 385 545  32 485 591 113 608 548  15 141
 716 578 546 403 406 210 191 161   6 671 153  48 698  69  20 688 111 520 633 511 513 209 189 129 207 708 561
 125 509 350 137 523 461 459 670 564 329 139  34 334 722 195 224  26 480  51 697 136 198 691 704 573 265 259
 211 585 621 138 396 669 729 301 640 512 155 647  76 123 668  41 253  91 108 105 696 289 537 277 122 639 226
 701 147 581  99 674 426  88 653 172 712 611 272 163 399 252 159 518  67  24 495 170  79 549   2 471  70 382
 282 216 632 709 351 440 358  81 146 308 255 357 248 390 560 531 449 280 665 536 193  72 410 562 642 177   5
 126 484  75 419  17 715  44 157 269 192 654 393 251 522 620 631  31 725 344 250 635 692  37 369 241 517 445
 392 613  96 363 499 600 468 422 183 438 614 132 258 144 110 319 118 659  55 535 470  84  27 290 178 133 181
 218 466 330 228 322 321 223 365 281 315 394 683 359 367 214 398 302 294 187 695 288 325 636 415 186 710 333
 273 340 260 316 292 310 352 478 287 405 338 516 388 343 381 337 326 430 368 413 420 331 261 475 355 407 453
 428 408 342  11  85 348 101 476 371 347 346 457 404 267 335 401 389 448 429 454 479 431 364 395 356 490 493
 320 387 462 455 112 409 117 437  39 345 451 370 416  97 505 380 571 402 424 498 256 361 444 377 443 391 386
 418 309 314 589 152 243 286  71 557 686 469 542 664 705 167 649 199 196 593  57 610 208   8 276 625 234  28
 299  73 676 247 483  13 231  68 718 597 477  12 179 627   4 411 700 694  22 175 540 482 421 151 544 353 658
 447  40 463 563 185 156 339 417 487 575 488 116 680 233 305 114 332 168 590  30 521 693 162 249 414 646 442
  49  82  23 229 307 313  54 237 524 439 373 720 587 295 607 533  83 254 550 644 300 212 441 527 384 492 596
 472 362 154 257 107 103 595 283  93 566 714 703 303 130 205 618 124 412 689 215 225 713 435 510 383   3 481
 266  60 624 556 166 626 318 551 296 270 427 120 651 400 328 204 547  94  10 662  25 592 637 567 134 274 673
 131  77 446 565 602 202 617 534 194 279 672 206 491  89 434  19 724 158 142 458 530 145 262 242 721 598 317
  64 500 679 660 650 678 160 558 699 102 240  78 579 473 376 354 150   7 450 728  33 529 311  42  43 165  61
 423 580 284 677 501 176 378 239 467 169 643 374 528 559 197 503 603 538 574 360 268 297 246 641 104 630 379
 532 675 606 539 135 432 569 327 336  87  59 349 616 690 541  56 232 702 397  47 497  92 572 619  38 526 220
 667 140 372 433 727 245 515 230 609  66  36 568  18  52 681 554 507 612  35 366 219 706 293 173 264 504 263

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00561e+07us (= 10056.1ms, 10.0561s)
Satisfaction error: 10
Number of search iterations: 2646
Number of local moves: 2236 (including on plateau: 2192)
Number of local minimum: 15 (including on plateau: 265)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 656 341 53 164 586 184 474 666 615 525 227 623 109 584 271 684 648 638 508 425 436 29 711 298 1 190 552 => the sum is 11198 rather than 9855
Problem in row 2: 375 291 74 278 604 707 221 16 121 143 238 570 100 687 519 21 452 9 188 323 65 324 90 180 576 50 655 => the sum is 7877 rather than 9855
Problem in row 3: 486 601 222 174 456 553 652 717 63 201 460 200 45 14 502 661 605 506 719 46 119 594 723 628 657 203 494 => the sum is 11301 rather than 9855
Problem in row 5: 115 685 464 58 304 80 634 244 489 514 95 583 582 275 236 217 543 385 545 32 485 591 113 608 548 15 141 => the sum is 9581 rather than 9855
Problem in row 9: 701 147 581 99 674 426 88 653 172 712 611 272 163 399 252 159 518 67 24 495 170 79 549 2 471 70 382 => the sum is 8936 rather than 9855
Problem in row 12: 392 613 96 363 499 600 468 422 183 438 614 132 258 144 110 319 118 659 55 535 470 84 27 290 178 133 181 => the sum is 8381 rather than 9855
Problem in row 22: 266 60 624 556 166 626 318 551 296 270 427 120 651 400 328 204 547 94 10 662 25 592 637 567 134 274 673 => the sum is 10078 rather than 9855
Problem in row 24: 64 500 679 660 650 678 160 558 699 102 240 78 579 473 376 354 150 7 450 728 33 529 311 42 43 165 61 => the sum is 9369 rather than 9855
Problem in row 25: 423 580 284 677 501 176 378 239 467 169 643 374 528 559 197 503 603 538 574 360 268 297 246 641 104 630 379 => the sum is 11338 rather than 9855
Problem in row 26: 532 675 606 539 135 432 569 327 336 87 59 349 616 690 541 56 232 702 397 47 497 92 572 619 38 526 220 => the sum is 10491 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
  86 430 634 641 255 150 548 120 650 105  26   6 312 368 112 729  97  21 256 369 174 107 231  98 393 534 232
 464   3  22 206 604 540  39 670 411 646 624 480 651 619 151  29 594 424 158 617 379 155 295 689 185 471 609
 684  10  90 599 228 400  38  48 271 418 290 236 602 469 700 682 539 558 434  14 685 332 144 316   8 687 373
 285 626 399  78 457 612 448 662  67 110 240 215  55 153 720 516 306 697 402 258   4 442 388 725 577  50 363
  74 511 564 580 407  11 586 365 324 538 581 610  17 562 235 726 527 302  91 431 668  43  15 164 199 688  36
 339 487 168 456 603 592 494 383 467 343 340 165 522 103  46 141 241 176  58 706 677  59 508 436 419 270 656
 397 138 211 280 160 169 180 561 705 468 679 521 453 162 237 408 124 512 644 288 175  20 654   1 463 387  56
 532  81 201 502 100 242 563 699 193 545 571  92 589  93 238 192 218 675 588 154 292 262 495 170 664 694 210
  82 281 131 470 367 243 423 279 282 130 317 377 194 566 156 384 701 472 313 204 611 533 173 119 212 225 671
 499 696 476 304 351 582  27 196 197 195 305 146 572 249 247 272 556 132 635 728 559 560  19 171 596 179 406
 301 108 710 409 245 530 224 439 721 127 389 546  53 607  83  68 354 601 485 655  80 435 519 359 203 297 307
 303 536 460 273 319 576 101 711  87 649 346 555  31 202 595 347  42 214 250 518 181 440 410 396 695  51 567
 220 481 693 523 115 681 625 506 663 627 117 260 251 584 417 230 287 186 345 479  28 274 631 713 118 608 114
 355 390 209 265 342 277 364 473 382 283 413 328 348 597 360 318 483 349 486 331 401 267 493 352 311 358 320
 474 446 219 326  73 385 398 378 291 139 526  60 497 322 315 425 374 445 356 386 380 429 428 370 605 416 392
  35 667 614 314 344 372 264 207 443 353  32 336 503  89 570  66 338 286 489 395 122 490  75 263  30 637 350
 376 475  63 375 187 323 135  37 113  33 451 633 121 600 579  77 616 613 492 125 645 542 716 669  96 254 509
 126 661 683 514 547 148 636   5 450 676 623 221 659 537 444 106 222 335 727 161 505 217 143  16 276 391 188
 477  70 213 137 441 259  13 553 578 554 657 549 145 515 461 529 541 598 462 157 309 104 525 672 698 531 227
 394 420  72 361 488 371 674 484  95  65 403 665 723 257 341 660 223 333  99 427 310 226 337 109 678 449 191
 630  25 459  34 278 381 507  76 136 585 510 327 177 366 246 690 652 268  54  79 575 715 437 438 628 284 298
 482 717  62  18 593 432 308 491 498 190 551 718 618 666 648  84  45  69 524 573 569 673 639 330 422 205 691
 714 414 455 517 629 642 621 704 520 680 454 643 452  23 590 244 647 159  57 133 269 447 583 208 550 638 712
 296 198 565 178 129  44 426 152 166 229   7 724 183 275 466 615  41 719 149  71 544 239  61 458 552  24  85
 709 415 334 708 329 404 587 142 357 496 123 172 294 293 266 513 325  40 405 722 299 501  94 421 163 111 632
  88 321 591 653 606 289  52  49 253 504 233   9 686 216  64 620 528 543 707 252   2 703 140 500  12 300 182
 433 248 557 134 658 200 574 465 535 167  47 261 147 362 568 184 234 128 189 622 412 640 702 692 102 116 478

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.0046e+07us (= 10046ms, 10.046s)
Satisfaction error: 12
Number of search iterations: 3127
Number of local moves: 2590 (including on plateau: 2548)
Number of local minimum: 24 (including on plateau: 337)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 86 430 634 641 255 150 548 120 650 105 26 6 312 368 112 729 97 21 256 369 174 107 231 98 393 534 232 => the sum is 7684 rather than 9855
Problem in row 2: 464 3 22 206 604 540 39 670 411 646 624 480 651 619 151 29 594 424 158 617 379 155 295 689 185 471 609 => the sum is 10735 rather than 9855
Problem in row 7: 397 138 211 280 160 169 180 561 705 468 679 521 453 162 237 408 124 512 644 288 175 20 654 1 463 387 56 => the sum is 9053 rather than 9855
Problem in row 9: 82 281 131 470 367 243 423 279 282 130 317 377 194 566 156 384 701 472 313 204 611 533 173 119 212 225 671 => the sum is 8916 rather than 9855
Problem in row 13: 220 481 693 523 115 681 625 506 663 627 117 260 251 584 417 230 287 186 345 479 28 274 631 713 118 608 114 => the sum is 10776 rather than 9855
Problem in row 16: 35 667 614 314 344 372 264 207 443 353 32 336 503 89 570 66 338 286 489 395 122 490 75 263 30 637 350 => the sum is 8684 rather than 9855
Problem in row 18: 126 661 683 514 547 148 636 5 450 676 623 221 659 537 444 106 222 335 727 161 505 217 143 16 276 391 188 => the sum is 10217 rather than 9855
Problem in row 19: 477 70 213 137 441 259 13 553 578 554 657 549 145 515 461 529 541 598 462 157 309 104 525 672 698 531 227 => the sum is 10975 rather than 9855
Problem in row 22: 482 717 62 18 593 432 308 491 498 190 551 718 618 666 648 84 45 69 524 573 569 673 639 330 422 205 691 => the sum is 11816 rather than 9855
Problem in row 23: 714 414 455 517 629 642 621 704 520 680 454 643 452 23 590 244 647 159 57 133 269 447 583 208 550 638 712 => the sum is 12705 rather than 9855
Problem in row 24: 296 198 565 178 129 44 426 152 166 229 7 724 183 275 466 615 41 719 149 71 544 239 61 458 552 24 85 => the sum is 7596 rather than 9855
Problem in row 26: 88 321 591 653 606 289 52 49 253 504 233 9 686 216 64 620 528 543 707 252 2 703 140 500 12 300 182 => the sum is 9103 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 548 121 250 122 686 372 139 687 361 272 699 254 524  40 129 579 294 140 473  65 527 102   2 539 674 551 705
   8 287 443 188 440  63  62 552  70 424 708 136 264 228 256  59 496 534 460 389  39 512 651 192 111 691 445
 607 295 658 606 504  13 225 183 373 433 429 104 520 522 532 189 138 279 396  16 224 203 430 237 649 598 492
 696 439 507 661  46  87 131  34 488 147 415   9 160 406 453 669 624  12 581 253 318 517 580 644 482 167 329
 515 144 632 425 611 518 585 252 612 218 101 575 340  78 158 711 689 165 641 135 304 299 588 407 240 478 516
 171 346 305 323 170 589  68 678 630 200 574 656  79 408 320 242  84 195 697 419 501 577 286 314 306  61 399
 220 653 278 178 570 698 601 315 207  52 337 531  20 229 444  43 542 623 645 309 638 636 431 117  10 262 266
 344 511 172 216 722 513 660 729 437 591 206 470  95  48 690 455 267 375 381  90 334 204 127 151 126 313 628
 289 371 569   7 557 400  54 477 523  21  11 467 258 280 378 157 169 435 564 179 386 490 489 481 559 423  64
 245 164 723 499 226 568 397 107 719 418 302  33 248 244  53 426 613 391 681 541 648  25 223 274  30 374 683
  97   6 259 465  37 452 721  96  72  49 505 353 114 685  41  83 416 454 217 469  29 549 543 655 712 414 177
 208 327 300 508 436 145 497  81  98 537  92 432 181 667 707 271 563  42 105  47 214 246 700 584 567 701 599
 403 659 545 688 312 234 459 494 153 486  31 296 395  99 461 163  32 621 265 605 456 642 402 464 191 113 186
 379 380 343 370 363 159 428 409 359 412 332 377 384 184 342 382 325 368 358 695 362 326 360 393 355 365 345
 709  91  76 333 336 637 438 335 434 463 156 717 341 219 347 466 298 338 555  93 288 383 529  27 227 401 618
 671 672 411  94 595 255 349 376 176 626 550 124 713 620  50 330 495 149 462 633 316 544 398 405 457 198 647
  66 617 413 673 356 498 282 270 665 480 317 634  18 528 474 194 290  15 193 311 684  19 180 666 702  69 241
 540 631 115  14 476 600 663 500 275 350 643 509 283 152 472 238 110 706 221 239 592 519 130  74  28 609 166
  60 199 162 385 215 307 450  36 284 654 236 154 451 590 587 506 132 716 202 571 597 694 328 487  75 565 212
 576 728 123 276 201  22 514 185 366 364 675 680 676 410   1 538 421  45 573 196 243 190  58 150 558 603 483
 627 441 352 725  55 222 125 260 301 720 235 232 554 596 639 297 427 677 308 682  26  77  44 268 614 100 251
 422 103 704 586 387 128 583 394   4 230 448 211 449 133 291 578  23 257 148 662 446 141 468 277  89 146 339
 442 213  67 247 546 233  71 292 526 390 120 357 566 493 168 331 635 116 106 485 604 650 108 710 664 367 348
 629 388 503 119 281 404 692 619 197 525 610 625 484 369 175  73 173 479 187 714 261 351 210 142 670 646 134
 273 491  88 582 458 727 269 602 547 447   5 652 703 724 616 560 726 640  80 556 155  17 303 594 118 112  56
  24 293 533   3 231 657 143 174 561 209 608 182 420 593 535 622 668 553 321 109 502 263 715  82 322  57 475
  86 285 324 562  38 354 249 718 417 137 510  85 615 310 536 693 205 530  35 392 161 679 572 521 319 471  51

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00579e+07us (= 10057.9ms, 10.0579s)
Satisfaction error: 9
Number of search iterations: 3856
Number of local moves: 3253 (including on plateau: 3207)
Number of local minimum: 32 (including on plateau: 362)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 8 287 443 188 440 63 62 552 70 424 708 136 264 228 256 59 496 534 460 389 39 512 651 192 111 691 445 => the sum is 8708 rather than 9855
Problem in row 5: 515 144 632 425 611 518 585 252 612 218 101 575 340 78 158 711 689 165 641 135 304 299 588 407 240 478 516 => the sum is 10937 rather than 9855
Problem in row 6: 171 346 305 323 170 589 68 678 630 200 574 656 79 408 320 242 84 195 697 419 501 577 286 314 306 61 399 => the sum is 9598 rather than 9855
Problem in row 9: 289 371 569 7 557 400 54 477 523 21 11 467 258 280 378 157 169 435 564 179 386 490 489 481 559 423 64 => the sum is 9058 rather than 9855
Problem in row 11: 97 6 259 465 37 452 721 96 72 49 505 353 114 685 41 83 416 454 217 469 29 549 543 655 712 414 177 => the sum is 8670 rather than 9855
Problem in row 16: 671 672 411 94 595 255 349 376 176 626 550 124 713 620 50 330 495 149 462 633 316 544 398 405 457 198 647 => the sum is 11316 rather than 9855
Problem in row 22: 422 103 704 586 387 128 583 394 4 230 448 211 449 133 291 578 23 257 148 662 446 141 468 277 89 146 339 => the sum is 8647 rather than 9855
Problem in row 24: 629 388 503 119 281 404 692 619 197 525 610 625 484 369 175 73 173 479 187 714 261 351 210 142 670 646 134 => the sum is 10660 rather than 9855
Problem in row 25: 273 491 88 582 458 727 269 602 547 447 5 652 703 724 616 560 726 640 80 556 155 17 303 594 118 112 56 => the sum is 11101 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 408 213 633 546  99 723 201 562 456 651 713  12   5 312 337  49 296 547 439 247 575  33 204 263 449 177 705
  21 459 390  56  47  46  26 483 685 614 558 576  65 658 523 432 248 234 595 293 450 118  59 492 598 678 451
 143 537 273 631  15  98 251 120  83 616 490 493 506  55   4 443  72 116 249 100 725 281 236 226 652 163  76
 640  70   9  16 720 332 454 610 553 488 564 718 691 630 126 469  67 148  89 706 602 348 518 603 178 580 179
 485 526 726 428 176 111 617 318  60 119 624 702 446  43 194 567 191 698 231 101  38 673 591  71 173 272 674
 444 613  41 114 600 334 519  28 423 140 684 309 620 107 278 255 653  20 686 646 121 565 609 221 131 113 581
  93 645 667 316 239 136 502 660 420 697 315 605 180 167  19 129 467 303 556  58 453 445  23 321 336 544 559
 507 141 229 615 363 532 189 728 216 149 205  80 170 479 656 527 359 661 520 561 317 187 290  35 419 514 206
 683  62 313 473 109 628 509 536  39  85 533 471 280 154 256 162 157 394 505 588  79 541 152 677 486  40 612
 353 265 105 513 694 151 721 199 225 724 538 672 426 584 125 498  17 418 132 325  10 401 431 573 197 522  36
 623 474 534 504 447 104 627 530 160 227 128 521 237 695 599 215 106  57  95  54 585 594 124  31 266 655 663
 555 460 207 244 475 535 339 452 147 224 233 571 455 435 396 412 383 424 268 465  94  30 639 430 421 139 422
 384 397 388 608 437 433 386 409 399 376 413 393 291 368 374 392 400 415 362 343  48 382 403 344 279 379  52
 367 297 625 391 355 425 378 385 349 350 358 375 402 240 327 366 340 328 305 398 372 405 347 329 371 324 346
 373 354 364 270 662 357  74 311 342 333 284 238 352 338 719 365 310 330 377 568 654 174 351 380 360 326 289
 322 361 540 341 632 331 574 294 298 288 123 283 292 335 262 411 622 127 484 250 626 404 254 134 487 472 308
 287  73 704 675 153  14 323 687 277 407 264 165  69 592 729 286 441 295 417  27 369 241 276 578 696 700 110
 601 572 590 115 306 462   8 597 381 271  84 434 604 501 569 133 211 245 611 517 395  24 716 586 267 500 130
 259 668  29  22 300 464 212   1 242 427  45 102 257  78 619   7 466 320 182 512 200 709 676 169 158 438 529
  87 727 137 499 510 463 682 210  37  81 142 166 717 496 186 515 122   3 712 222  32 508 497 708 665  82 649
 503 345 193 387 208 636 203  64 722   6  66 664 302 196 548 714 476 715  86 146 618  50  77 494 589 370 477
 190 218 232 495 647 161  25  97 583 274 436 209 701 156 198 285 699 621  18 470 314 707 642 659 528  44 246
  90 688 468 202 181 235 410  63 566 103  34 108 579 442 457 228 577 606 480 680 693 112 458 159 192 638 406
 703 144 670 549 117 252 168 491 275 557 641 219 554  13 689 648 545 582   2 593 188 258  42 416  88 301 150
 482 299  53 185 253 570 629 543 644 563 650 356 542 414 478 531 669 171 635 389 711 634 587 524  11 261 539
 184 155 560 220 429 643 138 282 666 637 214 230  61 657  96 671 269 525 596 135  75 550 489 260 551 319 243
  68  92 175 440 681 679 690 195 607 448 516 183  51 710  91 145 692 552 223 461 511 481 164 172 307 304 217

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00567e+07us (= 10056.7ms, 10.0567s)
Satisfaction error: 6
Number of search iterations: 3148
Number of local moves: 2691 (including on plateau: 2642)
Number of local minimum: 18 (including on plateau: 323)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 143 537 273 631 15 98 251 120 83 616 490 493 506 55 4 443 72 116 249 100 725 281 236 226 652 163 76 => the sum is 7654 rather than 9855
Problem in row 4: 640 70 9 16 720 332 454 610 553 488 564 718 691 630 126 469 67 148 89 706 602 348 518 603 178 580 179 => the sum is 11108 rather than 9855
Problem in row 9: 683 62 313 473 109 628 509 536 39 85 533 471 280 154 256 162 157 394 505 588 79 541 152 677 486 40 612 => the sum is 9524 rather than 9855
Problem in row 18: 601 572 590 115 306 462 8 597 381 271 84 434 604 501 569 133 211 245 611 517 395 24 716 586 267 500 130 => the sum is 10430 rather than 9855
Problem in row 19: 259 668 29 22 300 464 212 1 242 427 45 102 257 78 619 7 466 320 182 512 200 709 676 169 158 438 529 => the sum is 8091 rather than 9855
Problem in row 25: 482 299 53 185 253 570 629 543 644 563 650 356 542 414 478 531 669 171 635 389 711 634 587 524 11 261 539 => the sum is 12323 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 387 198 187 318 477 316  20 679 288  55 434 702 407 478 159 615 310 529 473  96 108 706 325 209 356 315 708
 655 533 487   1 727 322  25 710 253 171 233 500 257 545  42 579 180 628  57   4 535 411 525 691  47 286 451
 548 583 659 453 498  69 485  76 458  17  68 712  26 400 103 678 377 685 637 240 412 609 342  66 660 553 379
 592 307 392 669 368 683 308 231 675 537 223 211 589 608 445 170  64  22 166 513  74 534 278 631 549 670 123
  63 462 304  87 633 466  56 427 528 671 141  60 105 638 189 718 206 426 595 340 102 684 597 505 274 472 106
 148  83 604 677  32 567 333  70 146   5 390 573 188 644 419 492  58 700 244 578 174 562 512 235 621 561 239
 653 279 520 725 232  14 559 155 280 126 654  73 120 218 212 164 690 348 716 145 576 554 657   7 504 391 283
 242 580 201 550 640 220 324 194 465 521 114 464 672 620 630 431 384  10  31 540  67 203 430 447 109 482 284
 251 568 422 486  37 542 216  21 642 234 619  11 519 452 511 229  75 272 461 558 680 192 636 254 450  71 446
 104 125 441 510 523 635 652 713 117 292 522  15 600  50 625 276 483 444  19 607 456 259 506 480 127 177  97
 515 385  89 135 403  54 200 617  85 474 539 237 632 428 546 199 470 331 729  91 361  59 161 514 418 687 496
  92  78 172 214 479 502  23 252 133 574 369 471 494 178 439 429 157 664 565 692 569 459 436 593 147 509 165
 353 215 413 437 111 674 309 136  33 320 262 532 493  41 389 393  86 197 167 273 358 376  94 100 566 344  48
 417 375 410 371 366 367 350 305 383 404 388 406 362 144 395 343 365 330 420 326 380 347 398 354 372 381 396
 226 247 258 196 707 193  28 575 624 415 538 656 338 543 357 476 531 423 394 467 230   6  44 648 162 370 623
 360  65  80 154 673 564 586 645 275 210 556 323 721 697 714 300 341  16  95 311 351  13  46 156 704 643 256
 495 634 551 699 263 268 265  49 588 488 291 306 140 163  29 317 293 130 438 399 281 491 414 416 603 183 661
 425 503   9 616  77 225 627 298 261 227 202 613 499 584 663 560 236 221 693 115 440 205 238 245 321 481 271
 547 696 409 190  39 373 484 243 319 610 639 282  51 151 682 264 217  43 168 601 665 497 552 181 469 299 184
 269 182 726 312 195 110 723 152 346 222 667 408 208 150 204 433 650 705 424 335 397 191 207 577 132 641 289
 359 611 618 296 449 719 213 572 676 355 334 301  24 435 160 119  36 555 297 260 186 129 463 352 374 405 557
 241 250 101 501 139 175 647 508 173 594 285 337 688 703 364  93 544 421 457 277 662 128 468 295  34 328 442
  62 454 475 490  45 113 612 720 570  35 666 402 255 246 266 313 598 629 302 401 287 294 121  72 327 432 668
   3 118 709  81 224 176 626  99 646 622 378  90 541 339 142 585 518 694 332  27 596 455 349 448 460  61 536
 695 728 124   2 591 517 153 602 131 270  84 651 443  40 571 122 581  98  82 658 711 614 267 715 134  52 219
 590 107 158  79 582 605 524 290 722 717 116 137 314 248 587  30 724 149 530 303 179 649  88 526 249  53 599
 563 489 336 606 345 386 507 516  38 689 143 382 169 112  12 527 681 185 363 698  18 228 701 138 686   8 329

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00573e+07us (= 10057.3ms, 10.0573s)
Satisfaction error: 4
Number of search iterations: 2861
Number of local moves: 2418 (including on plateau: 2367)
Number of local minimum: 22 (including on plateau: 258)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 548 583 659 453 498 69 485 76 458 17 68 712 26 400 103 678 377 685 637 240 412 609 342 66 660 553 379 => the sum is 10793 rather than 9855
Problem in row 4: 592 307 392 669 368 683 308 231 675 537 223 211 589 608 445 170 64 22 166 513 74 534 278 631 549 670 123 => the sum is 10632 rather than 9855
Problem in row 13: 353 215 413 437 111 674 309 136 33 320 262 532 493 41 389 393 86 197 167 273 358 376 94 100 566 344 48 => the sum is 7720 rather than 9855
Problem in row 15: 226 247 258 196 707 193 28 575 624 415 538 656 338 543 357 476 531 423 394 467 230 6 44 648 162 370 623 => the sum is 10275 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 728 552 154 467 564 683 306 300 351  94 616 239  83 235 193 656 595  22 668 495 182  71 432  97 230 609 233
 184 689 586 454 463  24  27 274 527 597 114 709 525 544  55  59 490 714 571 663 448  99 242 549 469 471 303
 514 729 674 431 352 126 218  77  45 426 155 406 245 518 481 170 556 226 418 363 702 607 166 512 147 336 255
 163 104 599 213 440 381 489 623 652 346 461 208 442  15 647  64 153 280 365 159 268 620 337 643 112 372 699
 701 327 428 560 618 430 499 646 118 251 174 259 547 222 682 523 161  56  16  21 390 693 248 417 289 258 321
 135 211 334 379 285 582 658 641 175 611 313 613 128 150 374 106 180 505 429 686 632 661 559 415 713 677 688
 240 375 364 199 367 475 570 314 142  89  10 529 678 627  63  72 192 639 710  41 501 558 574 628 263 138 497
 103 614 350 209 228 164 349 540 377 301  90  49 227 122 610 715 282  48 216 532 473 395 450 591 621 129 531
  75 100 725 596 214  81 724 113 503 267 498   6 452 545 156 445 651 416 485 579 483 151 360 424 617 679 615
 133 111 141 261 396  32 410 606 598 484 517 121 619  79 546 625 332 441 671 169 124 456 399 347 358 271 608
  46 304 511 116 659 443 648 727 585 554 449 534 250  66 707 706 676 102 221 635 119 533   1 143 500 515 168
 584 478 516 537 212 311  51 220 462 201 423 420 551 464  39 466 152 139 587  92  44 457 472 260 541 520  54
 407 394 371 419 389 404 434  25 369 402 439 408 342 411 136 362 553 401 330 380 370 348 385 392 391 200 393
 140 645 283 252 700 191 601 383 539 684 127 605 202 194 176  74 295 328 519 717  69 296 494 316 398 542  85
 685 458  23   3 177 629 414 698 691   9 719  60 123 703 355 178 173 649 538 236  53  86 593 107 331 167   4
 480 297 105 115 581 110  65 278 444 675  98 378 315 630 482 323 723 588 400 307  84 666  28  38 569 589 487
 241 290 708 603 137 308 530 726 326  29 299 345 376 669 264 284 281 446 317 318  62 288 496 266   5 665 576
 654 276 590 575 493 162 309 325 207 427 165 572 672 225 298 256 353 265 210 507 536 237 249 508 275 204 305
 117 626 279 183 361 477 149 502  43 232 642 324 638 224 548 592   7 602 269  40  58 509 704 338 513 453 425
 387 447 148  57  61 203 179 528 474 491 198  18 712 711 583   8 286 535 436 187 565 185 667 521 257 291 720
 486 524 219 254 320 637 195 506  47 206 205 181 504 186 543 243 384 563 302 333 640 622 160  34 664 488 409
 460 144 624 223 557 578 382  14 653  87 657 229 172 310 670 158 465 277  30 566 687 188 550 421 455 101 197
 594  96  35 696  95 568 470 405  80 705 577 335 293 253 388 468 680 108  36 287 722 459  88 694  31 555 246
 146 561 247 412 109 718 120  19 359 373 522 433 344 422   2 650 634 403 612 437 697  76 171  52 343 357 636
 604 215 292 644 631 716 273  17 721 655 340 690 132 319 244 580  20 695  67 567 231  82 134 673  91 189  33
 435 238 479 397  78 354 125 131  11  26 366 492  13 573 272 562 130 262 339  12 329 190 234 157 196  37 294
 413  50  70 600 368  68 660 217 356 633 681 692 270 438 341 510 451 145  93 526 386 322 662 312 476  42  73

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00573e+07us (= 10057.3ms, 10.0573s)
Satisfaction error: 9
Number of search iterations: 2867
Number of local moves: 2406 (including on plateau: 2359)
Number of local minimum: 21 (including on plateau: 282)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 184 689 586 454 463 24 27 274 527 597 114 709 525 544 55 59 490 714 571 663 448 99 242 549 469 471 303 => the sum is 10850 rather than 9855
Problem in row 6: 135 211 334 379 285 582 658 641 175 611 313 613 128 150 374 106 180 505 429 686 632 661 559 415 713 677 688 => the sum is 11840 rather than 9855
Problem in row 8: 103 614 350 209 228 164 349 540 377 301 90 49 227 122 610 715 282 48 216 532 473 395 450 591 621 129 531 => the sum is 9316 rather than 9855
Problem in row 9: 75 100 725 596 214 81 724 113 503 267 498 6 452 545 156 445 651 416 485 579 483 151 360 424 617 679 615 => the sum is 10960 rather than 9855
Problem in row 11: 46 304 511 116 659 443 648 727 585 554 449 534 250 66 707 706 676 102 221 635 119 533 1 143 500 515 168 => the sum is 10918 rather than 9855
Problem in row 12: 584 478 516 537 212 311 51 220 462 201 423 420 551 464 39 466 152 139 587 92 44 457 472 260 541 520 54 => the sum is 9253 rather than 9855
Problem in row 15: 685 458 23 3 177 629 414 698 691 9 719 60 123 703 355 178 173 649 538 236 53 86 593 107 331 167 4 => the sum is 8862 rather than 9855
Problem in row 23: 594 96 35 696 95 568 470 405 80 705 577 335 293 253 388 468 680 108 36 287 722 459 88 694 31 555 246 => the sum is 9964 rather than 9855
Problem in row 26: 435 238 479 397 78 354 125 131 11 26 366 492 13 573 272 562 130 262 339 12 329 190 234 157 196 37 294 => the sum is 6732 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 729 147 402 509 524 197 617 128 672 202 112 719 107 410  90 656 437 439  65 190 485 712 187 136 479  44 460
 180 700 480 113  52 708 563 685 255 182 560  83 318 654   8 207 649 205 352 588 652 390 668  20 179 342  62
 153 609 631 660 322 678 114 593 608 717 210 665 166  89 152 528  93 384 142 544 119 289 129 156 548  56 500
 283 641 100 642 624 442 116 530 694 300 130 566 368 268 715  60 295 474 293 411 542 196   9 512 188 275 181
 667 279 233 139 148 643 215  78 426  35 464 241 604  38 473 702 601 173 635 679 388 583 343 686 209 298 692
 489 581 596 235 605 591 137 291   5 592 292  76 192 319 677 618 337 582 262 311 683  58 138 662 143 118 265
 239 338 706 510 288 433 416 434 418 253 206  79 419 587 145 374 356 111 249 506 317 689 482 351 501 290 158
  53 517  23 381  43 579  37 534 109 115 598 508 513 688 546 149 125 658 502 721 446 395 462 335  32 386 400
 695 228  26 529 212 194  42  12 507 266 393 684 135  71 580 521 263 252 710 189 626 494 514 556 682 450  24
 406 451 584 106 367 248 664  19 616 483 467  11 216 600 244 612 140 172 573  80 376 633 150 267 673 452 245
  49  51 361 323 558 120 569 637 159 307 454 520 597 294 408 363 629 264 516 336 471  22 412  59 578 160 638
 493 366 127 438  57 234 488 621 421  91 285 398  61 429 675 423 420 599 422  99 545 200 557 389 639  81 297
 551  84 312 504 459  28  92 443 101 636 659 273 472 203 309 571  27 243 308 503 714 315 224 445 198 347 552
 349 375 362 385 407 353 414 373 447 358 382 392 396 226 348 357 354 328 320 372 371 346 364 350 359 397 370
 564 707 417 102 286 561 126 131  74 632 254 167 568 681 296  96 690 117   6 280 691 540 218 586 404 436 225
 523 466 651 195 222  85 476 163 470 547 495 435 481 432   1 305  50 711 519 219   4 301 567 428 640  68 401
 394 251  54 331  94 260 282 355 274 193 269 532 655 499 646 246   7 538 484 623 247 648 722 230 663 276  82
 365 168 701 250 492 377  21 469 220  14 718 213  45 553 444 185 463 236 696 329 177 144 653 455 108 698 661
  75 726 490 191 555 498 306 327 121 164 693 175 526 703 549 676 405 627  86 577  34  18 572 369  41 585 326
 666 157 505  33 345 270 622 725 303  77 110 576 525 141 124 409 217 614 630 186  66 238 281 497 204 647 687
  73 332 272 595 541  10 461 531 271 671  31 344  25 478 325 132 537 259 657 650 161 559 644 214 550 645 330
  95  67 590 431 674 155 477 680 201 441 669 105 610 178 615 183 486 720 154 403 256 134 333  87  16 716 379
 133 515 258  36  64 723 697 287 221 699 176 634 380 231 424 321 713 324 606 465 277 257  72  15 415 310 602
 704 278  70 727 575 184 625 146 724 491 539 339 456  55 391  29 533 536  40  46 607 496   2 123 340 458 341
   3  88 170 728 574 427 487  48 383 425  47 399 594 284 227 448 240  17  97  69 334 457 430 619 522 620 613
 611  63 565 554 299 314 316 237 628 453 229 151  39 440 232 122 589  98 171  30 104 223 709 705 302 535 103
 313 670 169 208 468 543 475 378 527 511 413 570 387 304 211 562 199 174 360 449 162 518  13 603 242 165 261

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.0058e+07us (= 10058ms, 10.058s)
Satisfaction error: 6
Number of search iterations: 2807
Number of local moves: 2344 (including on plateau: 2295)
Number of local minimum: 21 (including on plateau: 285)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 667 279 233 139 148 643 215 78 426 35 464 241 604 38 473 702 601 173 635 679 388 583 343 686 209 298 692 => the sum is 10672 rather than 9855
Problem in row 13: 551 84 312 504 459 28 92 443 101 636 659 273 472 203 309 571 27 243 308 503 714 315 224 445 198 347 552 => the sum is 9573 rather than 9855
Problem in row 19: 75 726 490 191 555 498 306 327 121 164 693 175 526 703 549 676 405 627 86 577 34 18 572 369 41 585 326 => the sum is 10415 rather than 9855
Problem in row 21: 73 332 272 595 541 10 461 531 271 671 31 344 25 478 325 132 537 259 657 650 161 559 644 214 550 645 330 => the sum is 10298 rather than 9855
Problem in row 25: 3 88 170 728 574 427 487 48 383 425 47 399 594 284 227 448 240 17 97 69 334 457 430 619 522 620 613 => the sum is 9350 rather than 9855
Problem in row 26: 611 63 565 554 299 314 316 237 628 453 229 151 39 440 232 122 589 98 171 30 104 223 709 705 302 535 103 => the sum is 8822 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 728 682 694 413 526 700 263 171  67 457 641  28 672 405 623 222 481  47 720 294 503 528 654 670 677  22 699
 203 688 515 306 321  89 604 627   7 293 713 651 212 209 156 115 138 201 491 529 177 618 233 149 485 257 126
 508 543 620 102 219 325 316 448 432 647 565 184  98 698  88 582 160 704 249  75 494  14  35 631 129 436 553
 297 478 577 649  69 281 110 234 596 140 162 173  33 224 255  80 139 254 715 661 243 706 393 502 639 597 648
 477 644 464 204 614 552 664 575 299 133 669 548 241  10 302  83 194  20 170 127 710 208 611 111 412 566 247
 264 260  95 560 726 600  24 150 197 516 258 206 244 701 626 489 608 458 125 142 683 178  72 501 214 568 390
  85 225 151 521 535 275 598 279  81 349 523 681  27 497 451 640   3 727 236 711  54 567 195 112 487 251 594
  43 174 278 301 709 509 444 555 253 196 584 602 571 107 588 717 202 537  64 496 633 144 507 104 295 217  25
 573 607 218 723 123 159 200 470 198 691  57 262 304 580 172 309  58 581 610 135 637 342 484  78 276 520 488
 625 152  70 296 495 163 591 705 287 492 531 532 675 237 668 662 346 433 455 724 546 685 238 712 522 490 187
 423 471 483 430 466 180 399  17 518 382 185 164 476 454 527  68 468  48 473 482 445 134 434 513 450 429 336
 417  39 189 599 269 427 226 722 693   8 182 391  16 572 716 687 398  40 563 547 109 192 108 291 708 660 165
 394 443 512 421 435 341 406 372 188 408 414 395 383 407 355 400 465 327 101 364 357 404 416  49 384 367 347
 365 345 415 392 352 397 386 329 350 339 403 373 358 186 369 354 375 363 388 389 361 366 378 401 418 359 344
 356 351 353 303 380 308 343 337 556 410 259 286 362 331 422 320 686 368 511 539 305 340 371  91 322 311 334
 586 312 153  76 121 622 499 242 657 148 324 472 589 510 449 332 440 593 467 442 659 387 239 227 106 141  62
 554  51 118  59 128 725 377  53 703 122 323 289 714 131 684 619  86 673 120  29 569 274 117  36 603 606 638
 300 519 579 230 272 271 702 132 374 248 231 544 285  44 474 267 642 191 328  60 578 250 229 636 228 583 658
   9  55   2 252  61 370 114 665 314  77 650 541 536 240   4 447 692 646 335 284  82 559 542 624 655 630 469
 666 292 283  71 679 460 656 167 326 419 179 721 146 558 562 428 480 181 288 169 290 376 689 100 396 105 168
 676 298 643 199 137  52 504  26  94 525 514 425 426 612 319 530 245  93  66 632 246 595 538 221 385 175 590
 273 729 561 671 635 145 158 462 585 609 621  74  87 653 157 154 441 161 533 277 381 176 307 411 461  92  41
  56 605 409 707 564  11 310 667  90 282 446 183 459 315 155 570 333 193  45 402 360 205 147 136 261 674 220
 697 130 486  18 166 690  32 270 330 587  37  42 348   5 268  21 557 629 266 439 119  12 551 506  23 317 475
  84 213 615 207 223 540 601 143 576 113 103 313 616 493  13 424 456 500 379 280  30 652 634 645  73 431 498
 190 452 256 517 420  46  96 574 534 545 216 696 524  63  15 211  99 549 678 592 265 505 695 718  31  50 318
   6  97 116 628 210 617 232 463 550 719  65  79 453 613 437 124 663 338 479  34  19 438  38 680 215   1 235

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.0056e+07us (= 10056ms, 10.056s)
Satisfaction error: 9
Number of search iterations: 2724
Number of local moves: 2316 (including on plateau: 2270)
Number of local minimum: 12 (including on plateau: 242)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 728 682 694 413 526 700 263 171 67 457 641 28 672 405 623 222 481 47 720 294 503 528 654 670 677 22 699 => the sum is 12587 rather than 9855
Problem in row 2: 203 688 515 306 321 89 604 627 7 293 713 651 212 209 156 115 138 201 491 529 177 618 233 149 485 257 126 => the sum is 9113 rather than 9855
Problem in row 10: 625 152 70 296 495 163 591 705 287 492 531 532 675 237 668 662 346 433 455 724 546 685 238 712 522 490 187 => the sum is 12519 rather than 9855
Problem in row 12: 417 39 189 599 269 427 226 722 693 8 182 391 16 572 716 687 398 40 563 547 109 192 108 291 708 660 165 => the sum is 9934 rather than 9855
Problem in row 17: 554 51 118 59 128 725 377 53 703 122 323 289 714 131 684 619 86 673 120 29 569 274 117 36 603 606 638 => the sum is 9401 rather than 9855
Problem in row 21: 676 298 643 199 137 52 504 26 94 525 514 425 426 612 319 530 245 93 66 632 246 595 538 221 385 175 590 => the sum is 9766 rather than 9855
Problem in row 23: 56 605 409 707 564 11 310 667 90 282 446 183 459 315 155 570 333 193 45 402 360 205 147 136 261 674 220 => the sum is 8805 rather than 9855
Problem in row 24: 697 130 486 18 166 690 32 270 330 587 37 42 348 5 268 21 557 629 266 439 119 12 551 506 23 317 475 => the sum is 8021 rather than 9855
Problem in row 27: 6 97 116 628 210 617 232 463 550 719 65 79 453 613 437 124 663 338 479 34 19 438 38 680 215 1 235 => the sum is 8549 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 561 101 124 300 711 257  80 152 680 601 560  26 517 613 216  28  22  40 135 719 693 620 562 610 218   2 707
 141 690 342 600 396 173 317 594 520 232 110 109 255 213  63 214 697 190 634 233 695  83 703 174 552 667 258
 578 161 662 145 270  82 140  59 219 637 673 674 419 603 661 261 622  33 308 678 248  44 445 464 180 299 290
  43 480 548 536   1 168 592 225 550 326 189 240 718  61 210 714 557 507  94 114 212 452 687 642 405 710 178
  46 587 246  52 118 645 588 706 151 441 153 207  17 282 254 159  70 491 440 691 470 171 598 319 692 242  50
 224 434 217 221 724  72 375 320 439 701 339 468 466 523 628 597 545  76 490 570 422 577 436   5  25  56 497
 150 563 494 399 306 591 602 117  13 476 136 580   6 554  37 585 505 713  12 125 549 281 553  27 444 481 556
 479 226 155 579  34  14 451 669 616 250 449 472 681 460 528 107 108 231 142 514 564 484 201 163 636 606  36
 312  30 633 499 275 188 191 641 492  67 688 128 162 264 208 653 244 683 509 498 599 160  65 465 540 241 525
 670 651  89 408 404 656 467 343 166 542 307 644 105 112 679  66 493 438   7 268 531 623 516 103 251  93 223
   9 325 457 725 625 504 575  31 287  49 463 433 666 469 524 296 414 558 284 329 534 716 363 705 311 537 477
 409 442 417 501 569 427 274 400 423 211 437 227  77 383 420 416 385 487 435 443 297 387  19 398 127 412 432
 421 394 379 403  73 402  57 393 411 386 338 426 392 428 381 397 309 430 401 370 413 295 374 367 429 395 391
 380 366 358 355 364 362 389 376 347 322 390 349 406 565 356 377 332 314 378 315 344 354 341 323 348 407 337
 632 511 353 154 336 351 717  58 462  97  20 715 350 384 567 614 146 131 506 515  42 373   4 334 547 286 650
 726 496 235 544 704 368  41 608 102 643  53 276 245 177 696 302  35 324 318 388 120 272 502 572 259 425 424
 682 365 555 262 181 236 664 583 330  18 249 454 700 172 193 371 298 652 584  48  92 123 197 519 478 209 640
 559 448 310 619 222 522 629 279 589 278 605 256  21 176 503 486 709 237 183 301 266  79 292 234  45 518 489
 175 526 164 148 205  74 156 722 238 133 621 574 138 631 328  24 185 126 410 359  99 382 456 659 635 500 137
 269 609 595 182 243 538  75 179 473 708 581  71 345  60 247 689 321 352 672 184 626 215 649   8 360 593  11
 446 158 657  86 676 612 139 485 607 546 196 283 533 335 471  95 543 458 144 100  10 418 194 450 134 357 617
 333 729 132  84 229 165 655 327  91 331 512 677 130 720 582 294 200 293 230 624 529 648 169 220 113 167 671
 685 119 527  64 627  81 313  98 316  69 488 541 586 204 106 415 340 658 712  96  38 475 265 431 686 630 285
 508 104 252  88 267 576 535 521   3 482 111 568 369 263 459 590 273 665 551 260  32 684 304  68 202 646 291
 199 239  78 699 305 698 675 170 147 157 723 280 647 447 228 483 611 121 206 495 116 604 303 668 198 271  87
 203  16 727 539 702 721  29 346 728 639 187  55 615 694 195  90 253 186 474  47 660 192  39 361 530  54 573
  15  85 149 663 288 372 129 453 455 513 277 122 289  62 115 532 638 461 596 571 654 143 618 566 510  51  23

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00024e+07us (= 10002.4ms, 10.0024s)
Wall-clock time (full program): 1.00579e+07us (= 10057.9ms, 10.0579s)
Satisfaction error: 9
Number of search iterations: 2875
Number of local moves: 2378 (including on plateau: 2332)
Number of local minimum: 20 (including on plateau: 287)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 43 480 548 536 1 168 592 225 550 326 189 240 718 61 210 714 557 507 94 114 212 452 687 642 405 710 178 => the sum is 10159 rather than 9855
Problem in row 5: 46 587 246 52 118 645 588 706 151 441 153 207 17 282 254 159 70 491 440 691 470 171 598 319 692 242 50 => the sum is 8886 rather than 9855
Problem in row 6: 224 434 217 221 724 72 375 320 439 701 339 468 466 523 628 597 545 76 490 570 422 577 436 5 25 56 497 => the sum is 10447 rather than 9855
Problem in row 9: 312 30 633 499 275 188 191 641 492 67 688 128 162 264 208 653 244 683 509 498 599 160 65 465 540 241 525 => the sum is 9960 rather than 9855
Problem in row 11: 9 325 457 725 625 504 575 31 287 49 463 433 666 469 524 296 414 558 284 329 534 716 363 705 311 537 477 => the sum is 11666 rather than 9855
Problem in row 19: 175 526 164 148 205 74 156 722 238 133 621 574 138 631 328 24 185 126 410 359 99 382 456 659 635 500 137 => the sum is 8805 rather than 9855
Problem in row 21: 446 158 657 86 676 612 139 485 607 546 196 283 533 335 471 95 543 458 144 100 10 418 194 450 134 357 617 => the sum is 9750 rather than 9855
Problem in row 24: 508 104 252 88 267 576 535 521 3 482 111 568 369 263 459 590 273 665 551 260 32 684 304 68 202 646 291 => the sum is 9672 rather than 9855
Problem in row 27: 15 85 149 663 288 372 129 453 455 513 277 122 289 62 115 532 638 461 596 571 654 143 618 566 510 51 23 => the sum is 9350 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 487 151 248 220 165 415 198 188 224 134 563 260 588 400 310 543 666 671  88 105  29 109 410 231 425  63 708
 477 699 553  80  14 111 122  82 558 525 640 167  40 169 692  66 324 676  84 720 201 121 694 703 468 669 533
 139 727 659 447 392 624 574  76 550 143 463  26  53 586 327 674 114 542 191 360 643 328 651 442 635 222 422
  23  59 364 631 686 541 115 663 284  37 559 249   9 208 721 397 492  61 311 271 164  99 456 599 535 363 548
 569 499  92 576 584 339  51 117 592 300 128 634 653  42 212 175 199 697 211  50 378  33 621 657 693 153 374
 611 448  38 160 180 607 568 601  97  93 183 283 564 610 156 596 552 133 520 243 467 457  48 473 575 556  36
 501 483 195 142 486 236  89 646 474 481 506 567 524 493 382  86 600 206 238 197 580  58 444 297 239 166 539
 436 612 433 593 409 386 113 528 307 684 146 598  95 658  45 293 193 285 443 411  81 667 439 458 173 302  67
 154  27 255 723 438 630 244 282 490 717  12 459 250 497 622 614 696 110 452 517 714  91 402 148 129   3 179
 130 289 573 672 488 514 259 690 170 472 719 185 112 566  25 116 476 469 247  71 268 729 150 572 217 484 192
 145 453 451  21 515 106 668 470 489 503  52 571 219 275 358  85 413 290 102 725 498 678 123 546 460 107 626
 344 189 701  47 523 522 171 496 578 591 108 403 266 722 264 432 270 336 587 298 636   6 125 215 131 419 475
 414 385 434 359 423 371 126 426 420 398 405 401 342 394 346 430 424 365 361 345 149 184 654 418  94 396 391
 349 370 377 383 362 368 408 407 381 384 337 379 356 287 350 380 387 341 332 406 351 335 354 334 331 449 357
 343 355 352 326 340 312 286  68 395 373 295 538 375 388 527 314 367 366 323 565 376 263 299 369 677 333 330
 261 155  39 534 417 695 306 321 269 329 316 605 348 296 294 288 531 650 560 320 583  44 190 257 242 317 688
 660 603 726  31 441  19 710 466 202 562 291 509 404 685 544 715 292 445  57 416 178 681 235 390 616 513 136
 281 218 214 629 132  43 609  78 174 223 429 279 633 454 637 421 103 274 675  18 617 602 427 549 141 728 267
 547 253 246 232 265 216 177 554 315 251 237 228 716 254 581 227 207 240 446 713 504 526 245 225 205 618 627
 645 683 181 455 303 305 704 186  55 620 682 318 203  11 689 512  17   4 555  87 656 135 642 176  22 412 597
 673 579 256 194 152  41 464 632  98 589 661 435 118 258 127 644 530 147 706 687 182 712 662 304 711 461 613
 479 221 649 537 372 157 480 241  75  15 536 664 440 196  20 639 641 570 465 209  62 234 200  73 313 119 338
 691 638 301 709  34 161 213 187 399 226 519 532 252 124 431 229   1 508 450 707  16 615 308 608 507   7 482
  96  83 325  60 273 500 594 718 647 393  49 144 625 172 389 204 437 577 628  69 319 585 521 158 545 705  24
 230 137  54 495 353 233 590 210 262 665 280 104 698 518 100 540  64  65 140 272  32 561   5 138  77 652 162
 168  10 516 322 502 724 511 494 702 101 619   8 510  35 428  72 700 551  13 595 680 347 471  30  90 582  74
   2 529 623 277 606 679 505  28 648  46 120 309 462 557 278 163 159 276 670 478 491 655  79 485 604  56  70

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00573e+07us (= 10057.3ms, 10.0573s)
Satisfaction error: 11
Number of search iterations: 2761
Number of local moves: 2307 (including on plateau: 2263)
Number of local minimum: 20 (including on plateau: 277)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 487 151 248 220 165 415 198 188 224 134 563 260 588 400 310 543 666 671 88 105 29 109 410 231 425 63 708 => the sum is 8599 rather than 9855
Problem in row 2: 477 699 553 80 14 111 122 82 558 525 640 167 40 169 692 66 324 676 84 720 201 121 694 703 468 669 533 => the sum is 10188 rather than 9855
Problem in row 3: 139 727 659 447 392 624 574 76 550 143 463 26 53 586 327 674 114 542 191 360 643 328 651 442 635 222 422 => the sum is 11010 rather than 9855
Problem in row 4: 23 59 364 631 686 541 115 663 284 37 559 249 9 208 721 397 492 61 311 271 164 99 456 599 535 363 548 => the sum is 9445 rather than 9855
Problem in row 5: 569 499 92 576 584 339 51 117 592 300 128 634 653 42 212 175 199 697 211 50 378 33 621 657 693 153 374 => the sum is 9629 rather than 9855
Problem in row 11: 145 453 451 21 515 106 668 470 489 503 52 571 219 275 358 85 413 290 102 725 498 678 123 546 460 107 626 => the sum is 9949 rather than 9855
Problem in row 17: 660 603 726 31 441 19 710 466 202 562 291 509 404 685 544 715 292 445 57 416 178 681 235 390 616 513 136 => the sum is 11527 rather than 9855
Problem in row 21: 673 579 256 194 152 41 464 632 98 589 661 435 118 258 127 644 530 147 706 687 182 712 662 304 711 461 613 => the sum is 11636 rather than 9855
Problem in row 22: 479 221 649 537 372 157 480 241 75 15 536 664 440 196 20 639 641 570 465 209 62 234 200 73 313 119 338 => the sum is 8945 rather than 9855
Problem in row 24: 96 83 325 60 273 500 594 718 647 393 49 144 625 172 389 204 437 577 628 69 319 585 521 158 545 705 24 => the sum is 9840 rather than 9855
Problem in row 25: 230 137 54 495 353 233 590 210 262 665 280 104 698 518 100 540 64 65 140 272 32 561 5 138 77 652 162 => the sum is 7637 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
  78  15 176 132 584 465 604 231 233 329 153 519   7 398 570 459 401 569 711 551 263 379 255 315  90 639 729
 558 142 116 212 321 721  44 260 293 276 626 280 114 577 126 269 701 118 247 668 660 314 675 680 593  93 171
 481 703 147 113  22 705 494 129 156 346 472 258 471 463 691 271  23  48 214 508  72 628  73 376  75 578 261
 696 443 336 462 423 717 585  16 606 663 446  58 219 611 102  21  68 670 377 631  51 429 399 135 575 313  36
 671 616 499 724  14  92 486  17 566 286 402 640 453 428 618  30   9 334  50 184 557  71 522 105 685 183 613
 629 518 417 665 291  67 544 596 704 447  83  35 152  40 713 625 491 134 254 416 591 140 285 253 468  33 264
 497 229  82  89 395 179  65 512 195 669 107 243 304 310 236 112 651 242  18  91 163 716 534 369 382 477 374
 406 572 574 532 177 504  76 228  61 632 594 600 178 636 248 413 620 241  46 194 210 440 556  41 506 245 325
  88 360 598 502 531 186 621   8 235 190 115 582 517 167 715 688 549  85 583 411  98 498 318 464 208 450 124
 535 349 266 561  70 469 706 608 121 375 154 540 529 684 139 515 268 282 324 371  53 122 421 316  77 328 672
 128 603 207 698 595 200  12 667 193 317 223 366 461  62 710   3 363 426 217 617 673 630   5 509 198 199 681
  43 273 185 420 634  81 227 292 187 100 204 427  87 654 103 215 158 191 501 581 237 718 410 338 714 589 573
 343 470 419 308 407 287 288 320 408 332 548 345 387 367 368 341 352 330 431 362 339 370 365 296 380 259 433
 305  49 474 381  42 523 234 526 451 505 277 607 439  24 442 545 676 445 488  66 690 149 311 530 306 262 108
 274 404 348 396 391 355 364   2 390 449 422 455 164 358 458 340 337 372 412 492 393 373 414 378 386 384 344
 503 452 359 438 473 467  28 436 424 409 489 448 697  97 484 354 117 622 415 145 432 138 270  99 482 434 143
 133 538 127 633  31  32 677 525 661  26 101 645 189 225 141 687 539 683 157 612 394 172  20 476 335 510 586
 155 689 554  74 294  10  56  39 719 322 679 272 239 211 319 728 437 513 682 148 635 642 647 216 297  69 209
 694 302 723 588 521 692 624 637 361 109 479  29  34 712 170 205 542 457 592 238 130 312 541 347 560 623 111
  11 144 397 257 169 249 388 425 323 206 727  45 435 392 496 466 226 278 232 357 353 579 300 150 307 456 562
 533 161 119  94 137 222 400 709   4 327 587 221 520 299 418 597 483 722  63  80 666 576 252 543 202 265 655
 602 182 110 281 702 495  96 555 514 500 203 131 590  25 536 567 162 546 192 643 246 444 244 658   6 565  60
 173 493 720  27 614 599 454 351 700  84 650 295 678 383 160 664 403 507 240 136 553 250 659 644 475 159 649
 267 120 605 653 619 564 309 230 301 638 356 657 610 188 123  64 385 275 511 106 524  52   1 601 441 289 180
 146 333 652 174 707 527 726 478 490 218  55  57 487 460 104 331 166  54 662 693  13 430 201  95 699 641 256
 220 648 559 290 516 168 550 708  79 485 405 563 342 695 627  19 181  37 656 251 646 224 609 196 283 528 165
 686  47  86 151 175 279 197 350 480 615 298 537 552 389  38 326 547 674 580 303 213  59 568 725 125 284 571

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00567e+07us (= 10056.7ms, 10.0567s)
Satisfaction error: 11
Number of search iterations: 2866
Number of local moves: 2391 (including on plateau: 2348)
Number of local minimum: 32 (including on plateau: 272)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 481 703 147 113 22 705 494 129 156 346 472 258 471 463 691 271 23 48 214 508 72 628 73 376 75 578 261 => the sum is 8778 rather than 9855
Problem in row 4: 696 443 336 462 423 717 585 16 606 663 446 58 219 611 102 21 68 670 377 631 51 429 399 135 575 313 36 => the sum is 10088 rather than 9855
Problem in row 7: 497 229 82 89 395 179 65 512 195 669 107 243 304 310 236 112 651 242 18 91 163 716 534 369 382 477 374 => the sum is 8241 rather than 9855
Problem in row 9: 88 360 598 502 531 186 621 8 235 190 115 582 517 167 715 688 549 85 583 411 98 498 318 464 208 450 124 => the sum is 9891 rather than 9855
Problem in row 11: 128 603 207 698 595 200 12 667 193 317 223 366 461 62 710 3 363 426 217 617 673 630 5 509 198 199 681 => the sum is 9963 rather than 9855
Problem in row 12: 43 273 185 420 634 81 227 292 187 100 204 427 87 654 103 215 158 191 501 581 237 718 410 338 714 589 573 => the sum is 9142 rather than 9855
Problem in row 19: 694 302 723 588 521 692 624 637 361 109 479 29 34 712 170 205 542 457 592 238 130 312 541 347 560 623 111 => the sum is 11333 rather than 9855
Problem in row 20: 11 144 397 257 169 249 388 425 323 206 727 45 435 392 496 466 226 278 232 357 353 579 300 150 307 456 562 => the sum is 8930 rather than 9855
Problem in row 23: 173 493 720 27 614 599 454 351 700 84 650 295 678 383 160 664 403 507 240 136 553 250 659 644 475 159 649 => the sum is 11720 rather than 9855
Problem in row 24: 267 120 605 653 619 564 309 230 301 638 356 657 610 188 123 64 385 275 511 106 524 52 1 601 441 289 180 => the sum is 9669 rather than 9855
Problem in row 26: 220 648 559 290 516 168 550 708 79 485 405 563 342 695 627 19 181 37 656 251 646 224 609 196 283 528 165 => the sum is 10650 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 589 447 444 127 411 109 485 541 116 580 314 673 152 167 544 501 249 526 656 432 571   4  15 159 709  62 272
 122 274 649 492  83 658 597 579 180 123 460 268 630  92 423 283 357   9 505 517 660 196 281 704  28 641  44
  87  19  70 345 436 453  29 198 245 433 166 233 661 686 687 489 480 299 622  55 563 655  49 188 145 396 671
 595 108 581 472 468 148 645  27 682 694 456 222 242 138 312 234 553 135 511 545 300  17 421 550  48 441 310
  50 619  47  13 610 124 615 700 471 246 547  11 699 629 590 337  20 289 525  95 317 685  77 507 602 251 179
 494 548 143 115 434 586   6 303 566 174  46 293 291  78 717 551 235 555 391 301 513 282 690 241 676  66 560
 252 328 611 705 721 499 549 176   3 594 255  79 605 273  54 539 164 696 173 187 422 263 628  34 500 509  36
 278 683 191 155 512 225 296 587  90  21 151 102 136 650 457 540 695 416 362 583 381 593 508 290 631 592 448
 406 232 510 643  94 642 669 519 226 588 618 104 527 315  63 654 664  84 264 393 679 211  64  43 221 336  86
 256 648 181 488 559 323 276 657 689 495 584 175  59 531  42  88  96 663 101 567 464  98 542  39 112 646 476
   5 322 729 614 333 483 157 346 156 666 496  81 418 326 487 419 603 216  71 371 147 228 484 142 412 693 450
 728 582  35  57  76 626 154 442 342 177  91 385 344 184 577 153 295 601 161 238 334 437  41 100 210 110 600
 395 417 414 285 146 415 409 384 402 363 405 408 394 348 361 382 379 277 380 375 378 376 369 304 365 351 373
 318 368 370 377 343 388 399 339 320 387 359 367 354 431 364 331 397 358 349 360 410 306 386 372 321 352 429
 623 213 398 220 160 332 490 607 454 229 625 596 493 137 366 624 529 194 311  73 608  37  65 530 546  93 302
 355 407 575 718 267 253 534 308 158 535 621 316 327 224 286 275 120 163 413 305 604 462 206 195 639 390 199
 497 172 522 178 139 561  32 439  67 121 260 652 543 445  85 428 170 726 248 506 223 335 467 653 313 515 558
 113 477 701 338 404 724 325 258 710 239 183 212 459  72 119 114 714 169 271 684 244 356 425 599  53 185 707
 440 691  82 675 292 307 140 455 698 521  40 598 270 651 215  74 634  56 237 640  51 279 591 435 182 570  31
  52 565 458 692 564 257 400 107 205  75 324 562  14 576 186  68 446 727 612 227   1 713 165 665 491 532 171
 702  99 430 150 193 202 688 240 568 482 461 659 533  58 557 197 481 711 638 133  69 574 269 573 473  80 204
 470  45 261 667 474 192 131 720 218 259 498 569 200 552 632 329  61   2 647 636 353 129 452 149 554 254 401
 247 466 214 284  23   7 479 144 330 443 678 518 578 722  25 697 118 523 162 712 706 613 117 350  30 141 528
 516 309 207 287 672 427 723  16 572 719  38  24 168 465 426 617 266 504 680 128  18 374 670 486 297 585 644
 681 537 662  12 677 347 208  22 536   8 633 424  10 451 217 189 420 288 236 438 134 520 502 725 637 132 209
 201  60 105 190 514  89 294 106 231 280  97 708 715 262 674  26 606 538 203 243 475 609 668 524 341 469 627
 383 219 265 556 250 478 125 635 620 403 449 616  33 392 389 716 103 130 126 111 230 503 703 298 319 463 340

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00562e+07us (= 10056.2ms, 10.0562s)
Satisfaction error: 5
Number of search iterations: 4250
Number of local moves: 3575 (including on plateau: 3524)
Number of local minimum: 34 (including on plateau: 442)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 87 19 70 345 436 453 29 198 245 433 166 233 661 686 687 489 480 299 622 55 563 655 49 188 145 396 671 => the sum is 9360 rather than 9855
Problem in row 8: 278 683 191 155 512 225 296 587 90 21 151 102 136 650 457 540 695 416 362 583 381 593 508 290 631 592 448 => the sum is 10573 rather than 9855
Problem in row 12: 728 582 35 57 76 626 154 442 342 177 91 385 344 184 577 153 295 601 161 238 334 437 41 100 210 110 600 => the sum is 8080 rather than 9855
Problem in row 21: 702 99 430 150 193 202 688 240 568 482 461 659 533 58 557 197 481 711 638 133 69 574 269 573 473 80 204 => the sum is 10424 rather than 9855
Problem in row 24: 516 309 207 287 672 427 723 16 572 719 38 24 168 465 426 617 266 504 680 128 18 374 670 486 297 585 644 => the sum is 10838 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 728 515 350 245 324  79 119 592 533 687 302 164 495 680 254 176 574 204 490   8  67 128 136  50 459 396 703
  26 641 444 244 503 600   4 198  48 222 293 576   5 227 718  24 673 689 394 313  78 712 684 682 311 472  74
 476 275 672  49 440  21 698 215 439 192 702 143 696 160 541 384 124 595 588  61  53 356 266 549 638  37 485
 370 231 720 690  97 408 521  17 566  90 362 460 538 357 483 518  59 716 668 122 111 454 479 617 391 410 695
 599 207 569  35 623 206 480 273 129 265 571 688 674 456 261 298 294 666 109 240 692 496 627  86 236 158 373
 498 263 385 322 225 603 151 644 334 317 499  33 224 171 546 229 246 295 612 372 101 579 255 278 562 664 447
  45 598 146 438 671  77 147  96 723 230 540  80 585 635  47 161 174 361 159 316 686 611 201 333 474 655  27
 477 513 606 193 636 186 428 557 681 426 205 300 172 257 180 613 504  40 522 552 103  64 344  23 484 228 561
 235 708 424 419 589  14  92 120 371 190  88 127 422 114 616 621 446 148 523 559 481 679 505 647  73 183 461
 188 448 705 724 179 657 697 221 382 473 165 511  41 493 154  52 525 427  19 140 436  62  83 711 149 551 662
 189 239  34 640  71  10 299 678 665 407 248 320 425  46 651 596 412 402 277 450 628  16 468 274 685 449 276
 570 643 497 132 106 200 722 700 117 463 395 105 169 420 501 167  54  58 451 368 642 594 710 486  42 386 157
 529 242 609 185 414 630 648 343 399 619 597 542 421   3 335 430 187  81  60 381 366 241 441 336 405  66 345
 383 339 354 271 355 400 332 388 351 321 376 347 360 634 319 445 374 352 365 346 377 364 328 359 369 283 363
 137 107 304 519 727 162 387 389 558 593 478 714 296 699 348 123 556 583 194 659 195 141   1 238  38 462 247
 323 269 253 100 289 318 547 375 327 291 303 307 309 250 340 553 622 329 676  29 500 308 532 580 314 527 284
 390   7 584 587 270 568 156 415 131 717 234 121 715 150 125 338 367 409 288 507 554 432 218 626 512 423  11
  93 260 310 397 315 489 259 133 455 181 243 469  91 216 536 458 306 272 232 494 645 535 285 434 565 358 632
 115  56 534 650 465 704 667 457 237 573  15 175 135 590 379 694 118  32 223 575 531 607 608 392 178  43 102
 280 543 212 380 443 654 615 153  18 514   9 652  87 398  31 729 516 520 416 213 470 210 548 452 197 331 264
 669 233  72 637 524 297 203  76   6  75 639 601 211 453  55  85 649 287 709 591  99 660 305 378 577 586 252
 625 646  89 475  44 168 116 262 560 155  70 658 563 290 677 675  25 488  95 214 464  13 431 555 683 471 337
 545 517 435 653  63 325 413 564 406 418 707 104 633 719 208  69 217 578 620 196 567 163 110 152 170  84 219
 693 209 251 442 706 492 526 508 177 134 226 401 502  65 656 582 404 130 403 292 108 467  20 113 604 605 624
 279 506  36 144 466 433  30 487 330  82 510 353 202 491 258  12 610 701  39 537 182 411 663 139  57 312 509
 342 112  94 256 184 725 249 726 631 670 417 286 282 614 437 341  98 301 581 691 393  22 539 145 544   2 173
  51 528 166  28 126 429 349 268 281 550 661 618 602 267 199 482 721 191 142 629 326 530  68 220 138 713 572

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00564e+07us (= 10056.4ms, 10.0564s)
Satisfaction error: 9
Number of search iterations: 3072
Number of local moves: 2569 (including on plateau: 2523)
Number of local minimum: 24 (including on plateau: 293)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 728 515 350 245 324 79 119 592 533 687 302 164 495 680 254 176 574 204 490 8 67 128 136 50 459 396 703 => the sum is 9458 rather than 9855
Problem in row 4: 370 231 720 690 97 408 521 17 566 90 362 460 538 357 483 518 59 716 668 122 111 454 479 617 391 410 695 => the sum is 11150 rather than 9855
Problem in row 5: 599 207 569 35 623 206 480 273 129 265 571 688 674 456 261 298 294 666 109 240 692 496 627 86 236 158 373 => the sum is 10311 rather than 9855
Problem in row 7: 45 598 146 438 671 77 147 96 723 230 540 80 585 635 47 161 174 361 159 316 686 611 201 333 474 655 27 => the sum is 9216 rather than 9855
Problem in row 18: 93 260 310 397 315 489 259 133 455 181 243 469 91 216 536 458 306 272 232 494 645 535 285 434 565 358 632 => the sum is 9663 rather than 9855
Problem in row 21: 669 233 72 637 524 297 203 76 6 75 639 601 211 453 55 85 649 287 709 591 99 660 305 378 577 586 252 => the sum is 9929 rather than 9855
Problem in row 22: 625 646 89 475 44 168 116 262 560 155 70 658 563 290 677 675 25 488 95 214 464 13 431 555 683 471 337 => the sum is 9849 rather than 9855
Problem in row 24: 693 209 251 442 706 492 526 508 177 134 226 401 502 65 656 582 404 130 403 292 108 467 20 113 604 605 624 => the sum is 10340 rather than 9855
Problem in row 25: 279 506 36 144 466 433 30 487 330 82 510 353 202 491 258 12 610 701 39 537 182 411 663 139 57 312 509 => the sum is 8779 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
  51  92 724 639 165 673 668 227 546 678 542 290   8 271 130  25 243 113 638 622 300 479 597 311  36 121 666
 134 493 695  30 245 492 251 379 248 269 328 631 675  56 473 687 614 127  16  73 239 418 533 440 529 153 627
 221 318 496 213 447  83 194 157  18 422 716 486 235 198 223 554 457 459 485 331 500 699 225 515 652 464  87
 580 475 647 217 511 685 262 705 197 509 371 211 593 286 564 341 267  41  32 654 445 502 644 467 619 552 494
 718 629 571 260 192 481 351 641  12 577  65 325 454 600 605 548 103 143  49 690 329 122 452  40 249  46 603
 608  79 665  89 282 693 229  81 135 648  11  53 458 591 578 725  82 679  84 488 226  54 624 188 601 574 330
  13 727  95 558 205 169 569 674 556 535 531 175 312 146 525  63 634 623 680  61 550 586 181   5  67 189 426
 358  45 519 252 561 191  37 228 721 449 524 149 553 321 676 114 657 277 301 408  55 182 527 154 714 686 534
 342 669 626  97 214 100 513 472 573 170 495 539 632 106 241 406 450 589 159 324 155 307  77 187 465 620 327
 499 347 148  38 415 403 538 283 651 116  22 698 201 566  48 443 476 435 543 460 119 292 470 514 352 491 287
  14 195 333 477 587 272 431  68 505  43 596  31 425 717 184 438 653 296 402 520 681  93  27 138 522 400 456
 101 247 298 628 258 708 694 469  58 313 274 712 611 448 152 145 523 677 429 123 710 126 270 478 380 224  34
 441 420 179 386 392 120 407 364 390 393 395 396 413 382 391 378 399 360 398 337 387 374 389 339 343 359 323
 385 394 353 355 350 585 373 410 383 340 366 348 370 377 338 346 315 356 345 299 336 314 319 372 375 388 363
 278 174 503  70 357  94 276 215 504 133  91  26 268 421  10 209   9 430 610 218 607 437 656 584 689 285 160
 257 237 203 565 582 414 105 650 599 306 684 570  29 273 295 265 697 162 497 411 147 289  99 537 279 507 196
  72 108  90 663  96 618 303 715 334   6 528 118 111 683 163  66  98 238 462 208  20  47   7 645 621   2  19
 506 156 263 541 726  86   4 242 104  17 180 583 309 294 672 563 261 259 646 183 609 310 612 516 284 713 216
 711 480  33 489 453 173 463 555 367 320 139 549 532 240 557 199 706 293 140 166 125 649  57 344 264 551 581
 567 661 244  85 176 275   3  74 102 659 434 424 365 317 530 177 560 615 253 137 664 606 461 590 202 720 451
 206 255 115 468 384 405 361 433 246 231 442 232  35 335 501 483 204 703 536 427 518 707 701  23 112 233 559
 322  75 630 368  78 161 643 545 200 723 129 409 682 207 109 439 212 498 576 193 444  69 613 254  21 660 595
 142 446 281 419 691 131 482 190 692 540 210 594 512  88 417 604 172  24 305 572 636 369  64 617 474  42 141
 729 700 625 362  62 640 186 416 256 455 168 107  76 219 308 667 592 132   1 521 110 575 349 704  52 185 658
 655 547 178 171 381 151 728  50 316 602 291 662 722 302 404 432 304 508 642 588 280 526 354 670 401 150 484
 517 288  15 719 633 436 222 376 671 234 688  71 230 709 637  28  39 250 490 297 397 144 487  59 332 423 158
 428 598 326 696 412 616 562 236 471 167 635 466  44 702 124 510 128 568 136 544 266 579  60 164 220 117  80

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00562e+07us (= 10056.2ms, 10.0562s)
Satisfaction error: 11
Number of search iterations: 2857
Number of local moves: 2417 (including on plateau: 2372)
Number of local minimum: 21 (including on plateau: 296)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 580 475 647 217 511 685 262 705 197 509 371 211 593 286 564 341 267 41 32 654 445 502 644 467 619 552 494 => the sum is 11871 rather than 9855
Problem in row 8: 358 45 519 252 561 191 37 228 721 449 524 149 553 321 676 114 657 277 301 408 55 182 527 154 714 686 534 => the sum is 10193 rather than 9855
Problem in row 11: 14 195 333 477 587 272 431 68 505 43 596 31 425 717 184 438 653 296 402 520 681 93 27 138 522 400 456 => the sum is 9504 rather than 9855
Problem in row 12: 101 247 298 628 258 708 694 469 58 313 274 712 611 448 152 145 523 677 429 123 710 126 270 478 380 224 34 => the sum is 10090 rather than 9855
Problem in row 15: 278 174 503 70 357 94 276 215 504 133 91 26 268 421 10 209 9 430 610 218 607 437 656 584 689 285 160 => the sum is 8314 rather than 9855
Problem in row 17: 72 108 90 663 96 618 303 715 334 6 528 118 111 683 163 66 98 238 462 208 20 47 7 645 621 2 19 => the sum is 7041 rather than 9855
Problem in row 19: 711 480 33 489 453 173 463 555 367 320 139 549 532 240 557 199 706 293 140 166 125 649 57 344 264 551 581 => the sum is 10136 rather than 9855
Problem in row 20: 567 661 244 85 176 275 3 74 102 659 434 424 365 317 530 177 560 615 253 137 664 606 461 590 202 720 451 => the sum is 10352 rather than 9855
Problem in row 25: 655 547 178 171 381 151 728 50 316 602 291 662 722 302 404 432 304 508 642 588 280 526 354 670 401 150 484 => the sum is 11499 rather than 9855
Problem in row 26: 517 288 15 719 633 436 222 376 671 234 688 71 230 709 637 28 39 250 490 297 397 144 487 59 332 423 158 => the sum is 9550 rather than 9855
Problem in diagonal 0: 51 493 496 217 192 693 569 228 573 116 596 712 413 377 10 265 98 259 140 137 518 69 64 704 401 423 80 => the sum is 8894 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 106 223 617  45 125  82 470 670 243 607 716 631 718 665 156 206 686 147 415 256 279 263 443  52 513   9 512
 597 608 162  35 637 705 516   5 721 719  18  80 491 561  85 636  83 550 298 152 166 200 502 114 708 453  53
 144 274 219 261  40 672 517 724  99 292 569 230 693 543 113 365  30 717 120 544  96 556 430 180 565 305 557
   6 178 725 302 457  23 540 536 248 182 339 170 194 539 158 506 529 218 662  11  33 546 619 497 683 366 368
 205 646 127 276 119 624 596 616 515  73 123 278 545 572 620 676 582 154 287 153 213 229   3 325 591 105 602
 406 595 157 118 583 612 576 586 258  68 441 187  37  12 541 110 600 644 109 553 584 221 701  22 236 429 469
 413 259 549 671 132  47 112  63  64 128 673 696 294  61 265 623 474  46 714 633 183 124 129 629 533 640 700
  51  78 416 692 552 143 664 138 703 177 535 605 207 488 709 290 634  84  77 450 204 710 208 498 199 674 238
 477 639 548 137 136 492 168 649 231 268 647 310 511 212 514 579 169  15 587 704 473  79  89 404 300 260 257
 466 472 677 663 467 726 117  65  38 679 271  58 155  36 342  91 651 291 599 695  56 655 111 277 427 520 250
 433  98 449 484 100 440   4 478 460  49 431 434 428 167 462 604   8 508 458 424 667 468 487 432 483  43 356
 400 422 273 442 410 401 392 262 481 452 435 354 656  25 409 217 403 386 437  59 198 423  55 659 420 139 645
 402 419 172 340 370 436 369 411 388 394 417   1 378 454 387 421 412 501 391 381 249 334 389 357 398 309 375
 385 384 397 311 383 377 395 447 363 355 407 372 358 280 313 318 376 371 353 359 350 380 374 336 396 364 351
 455 286 304 326 367 320 315 362 382 317 399 341 531 349 337 592 360 321 361 348 285 322 330 335 327 590 293
  70 685 190 573 720  75 699 316 463 281 499 723 239 347 116 504 418 642 657 606 489 581 176 538 601 456 558
  50 568 297 307 288 344 329 130 625 575 272  86 618  34 216 555 296 712 551 251 570  95 580 588 104 594 220
 614 669 308 728 242 635  69  39 159 301 214 528 331 711 324 191 526 343 145 149 682 134 163 333 585 102 630
 603  16 332 150 654 503 660 490 202 702 131 425  14 658 209 524 171 195 175 148 373 289 666 566 227 626 146
 108 151  62 240 684 519  27 393 593 613 121  93  24 115 689  17 518 589 482 226 563 494 611  48 133 615 522
 729 727 496 567 621  32 338  76 160 521  13 471 560 562 653  88 713  60  28 532 464 577 203 210  90 224 140
 698 445 408 252 201 303 101 500 609 622 485 505 426 312 459 264 235 295 232 523 247 465 266 254 438 185  20
 638  26  29 439 559 414 534 527 122 197 571 554 446 234 476  66 186 564  81 245 715 643 675  42  31 161 680
 479 283 142 192 319 173 241 179 547 107  54 193 181 691 578 255 189  67 525 652 681  74 574 707 211 537 103
 126 306 706 164 486  57 722 687 661 495 668 688 135 267   2 542 282 480  94  97 648 228 444 269   7 215 379
 346 233 461 530 184 225 196 222 510 174  92 244 641 509  72 270  71 627 694 299 246 678 275 690 628 697  41
 448 165 632 610  19 475 188 284  10 507 314 598  44 451 650 345 253 328 323 405 141  87 352 493  21 237 390

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00575e+07us (= 10057.5ms, 10.0575s)
Satisfaction error: 7
Number of search iterations: 2691
Number of local moves: 2259 (including on plateau: 2212)
Number of local minimum: 14 (including on plateau: 265)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 6 178 725 302 457 23 540 536 248 182 339 170 194 539 158 506 529 218 662 11 33 546 619 497 683 366 368 => the sum is 9635 rather than 9855
Problem in row 8: 51 78 416 692 552 143 664 138 703 177 535 605 207 488 709 290 634 84 77 450 204 710 208 498 199 674 238 => the sum is 10424 rather than 9855
Problem in row 16: 70 685 190 573 720 75 699 316 463 281 499 723 239 347 116 504 418 642 657 606 489 581 176 538 601 456 558 => the sum is 12222 rather than 9855
Problem in row 20: 108 151 62 240 684 519 27 393 593 613 121 93 24 115 689 17 518 589 482 226 563 494 611 48 133 615 522 => the sum is 9250 rather than 9855
Problem in row 22: 698 445 408 252 201 303 101 500 609 622 485 505 426 312 459 264 235 295 232 523 247 465 266 254 438 185 20 => the sum is 9750 rather than 9855
Problem in row 24: 479 283 142 192 319 173 241 179 547 107 54 193 181 691 578 255 189 67 525 652 681 74 574 707 211 537 103 => the sum is 8934 rather than 9855
Problem in row 27: 448 165 632 610 19 475 188 284 10 507 314 598 44 451 650 345 253 328 323 405 141 87 352 493 21 237 390 => the sum is 8770 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 669   7  67 683 205 238   8 121 383 618 635  80 460 634 646 174 547 104 477  59  23 657 685 476 556 118 525
 216 548 579  64 649 344  48 166 671 620 642 584 127 570 352 562 171  13 624 546  84  61   1 695 705  90 123
 471 651 614   2 418 138 186 221 532 163 727 707  28 483 287 558 517 466 230 278 184 591 176 356  63 491 332
 403 185 602 459 372 324 673 189  38 107 465 240 596 692 187  44  71 604 716  49 429 543 658 161 225 102 721
 136 311 482 393 219  35 684 718 202 158 625 676 606  81 263 616 160  66   9 569 612 719  18  12 505 564 416
 178 428  45 299 353 175 318  26   5 252 182 576 500 506  37 577 394 122 703  96 146  83 648 693 534  39  60
  14 597 440 578  57 507 228 680 617  88 640 535  29 533 236  10 571 144 615 134 245 242 455 700 539 152 660
 585 224 198 595 147 140 521 266 516 528   3 126 561  42 565 713 630 450 250 229 527 130 377 251 598 113 348
 254 426 155 172 498 682 131 258 173 411 475  70  36 541 670 453 255 712 259  72 672 400 409 100 531 363 170
 381 119 729 714  43 555 162 305 563 151 212 653 188  74 662 159 226 275 358 261 601  17 345 580 699 330 493
 237 201 389 509 637 234 208  77  97  75  99 215 524 282 499 304 264 698 686 659 622  55 200 281 696 605 502
 295 210  30 468 717 117 463 638 433 589 156 338 681 347  53 396 540 599 280 710 586 223 209 355  95 194 133
 270 220 391 354 488 728 357 246 286 315 485 303 520 290 323 371 402 342 370 294 388 406 267 420 319 313 387
 239 349 279 308 412 310 366 398 362 404 314 392 395 340 341 300 439 378 424 325 408 380 367 417 337 434 437
 529 430 364 414 360 288 272 368 375 274 470 415 359 390  50  89 331 297 322 554 327 447 449 335 457 425 464
   6 181  47 421 566 722 329 536 129 376 199 445 197 495 269 276 723 374 490 328 456 557 285 639 307 296 206
  62 487 150 549 103 575 724 399 386  24 481 550 321 306 157 289 687 260  78  46 379 594 720 153 316 486 573
 726 574 697  54 164 204 108 667  51 436 109 213 473  21 227 422 647 626 143 652 253 538 544  22 431 448 405
 351  52 141 183 537  19 725 145 518 715 169 511 326 115  31 623 709 665 644 629 497 193 567  16 241 106 427
  93 663 407 277 603 508 467 446 320 613 438  92 302 501 664  69 542 515  76 231 268 195 191 600  94 512 168
 582 583 496  85 632 654 492 668 708 413 110  41 650 350 572 689 211 607 454 545 462 691 125 196 298 222 137
 633 283 621 552 343 609 203 124 643 284 479 154 461 641 105 522  34 273  15 472 142  87 101 610 452 593 336
 655  68 553 217 214 478 510 560 551 165 369 588 503 218 257 249  11 442 458 167  20 139 526 444 116 675 702
 674 111 256 608  32 265 373 494  25 309 365 312 435 401 568 114  27 244 559 504 190 645 180 694  86 611 706
   4 592 619 410 346 177 587 484 711 530  56 384 135 192 443 179  98 385  73 666 382 627 474  40 292 636 333
 513 678 271 148 661 397 480 523 243 656 262  65 149 519 701 628 441 112  91 361 704 301 247 120 128 423  33
 679 677 233 339  79 432 232 132 317 581 688 590 293 291 690 469 207  82 451 419 248 334 631 489 235 514  58

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.0045e+07us (= 10045ms, 10.045s)
Satisfaction error: 9
Number of search iterations: 2681
Number of local moves: 2235 (including on plateau: 2190)
Number of local minimum: 22 (including on plateau: 259)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 471 651 614 2 418 138 186 221 532 163 727 707 28 483 287 558 517 466 230 278 184 591 176 356 63 491 332 => the sum is 9870 rather than 9855
Problem in row 6: 178 428 45 299 353 175 318 26 5 252 182 576 500 506 37 577 394 122 703 96 146 83 648 693 534 39 60 => the sum is 7975 rather than 9855
Problem in row 7: 14 597 440 578 57 507 228 680 617 88 640 535 29 533 236 10 571 144 615 134 245 242 455 700 539 152 660 => the sum is 10246 rather than 9855
Problem in row 8: 585 224 198 595 147 140 521 266 516 528 3 126 561 42 565 713 630 450 250 229 527 130 377 251 598 113 348 => the sum is 9633 rather than 9855
Problem in row 9: 254 426 155 172 498 682 131 258 173 411 475 70 36 541 670 453 255 712 259 72 672 400 409 100 531 363 170 => the sum is 9348 rather than 9855
Problem in row 21: 582 583 496 85 632 654 492 668 708 413 110 41 650 350 572 689 211 607 454 545 462 691 125 196 298 222 137 => the sum is 11673 rather than 9855
Problem in row 22: 633 283 621 552 343 609 203 124 643 284 479 154 461 641 105 522 34 273 15 472 142 87 101 610 452 593 336 => the sum is 9772 rather than 9855
Problem in row 24: 674 111 256 608 32 265 373 494 25 309 365 312 435 401 568 114 27 244 559 504 190 645 180 694 86 611 706 => the sum is 9788 rather than 9855
Problem in row 27: 679 677 233 339 79 432 232 132 317 581 688 590 293 291 690 469 207 82 451 419 248 334 631 489 235 514 58 => the sum is 10390 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 649 549  85 300 507 261 163 342 307  89 728 717 604 439 636 138 598  43  80 622 593 291  29 133 643  61 248
 521 121 381 543 708 103 162 154 718 131 164 559 473   6 116 650 492 702 685 118 546 242 241 454  81 427 357
 169 452 311 561   3 185 557 308 606  21 239 250 714 421 398 205  12 356 548 628 517 501 485 266 668  62 412
 254 148 217 583 574 111 562 651 532 488 667 220 109  82 663 582  58 213 437 475 284  10 287 592 461 556  39
  57 177 646  68  31 166 410 497 569 176 536 479 404 292 247 297 288 106 679 620 626 377 639 565 157 676  70
 310 238 391 167  54  30  27 346 187 656  59 596 442 419 428  88 161 695 529 631 425 196 688 355 580 482 675
 256 347  44  15  96 334 704 686 197 571   8 323 199 641 262 495 146 278 662  66 105 464 697 613 581 541  98
 601 724 619 671 568 174 304 134 155   9 450 654  92  91 701 298 221 341  14 431 432 674 600 395  45 394  63
 433 558 489 171  94 487  86 537  25 709 594 629 186 424 234   2 597 715 504 178 160 500 496 289 192 120 446
 712 243 208 215 710  47 491  77 490 316 713 123  49 603  46 267 449 331 246 364 691 664 170 644  28 408 550
 570 554 670 608 294 305  93 258 216 194 486  35 587 519 379 451 290 128 137 384 159 545 657 368  55 638 275
 525 457 595 327 652 453 101 586 445 218  42 434 107 260 367 573 315 588 114  16 729  48 564 189 725 201 224
 270 511 527 429 706 415 245 198 373 506   5 476 617 465 406 348 386 448 694  13 153 640  53 172 184 436 179
 351 336 455 413 402 329 366 416 401 295 332 353 257 563 302 382 400 430 203 365 388 380 335 372 407 313 309
 135 648 269 614 505 333 682 126 223 237 119 314 376 726 127 272 618 195 340 655 352 458 414  69 259 326 463
 143 301   1 417 540 481 236 660  90 438 669  41 268 371 624 602 390 409 191 129 405 339 462 296 378 344 630
  72 343 225 579 124 711 282 443 396 190 112 526 544 632 104 444  99 539 359  38 480 422 317 325 576 693 280
 277 281 211 253 319 474 720 328 193 158 466  36  64 264  56 567 616 645 484 647 528 358 144 387 611 265 503
 722 530 255 633 228 677 623 271 230 165 575 244 286  50 705  60 578 531 207 338 156 183 456 590 615 392 635
 661  65 435 231 512 605 100  19 361 687 202 625  95 322 627 493 524 680 673 719  22  73 547 115 212 108 142
 374  76 642 681 363 125  37 672 690 460 411  83 478 299 522 249 209 469 200 360 459 274 240 117 182 518 665
 273 621 318 130 188 689 499 535 589 584 534 251 222  78 471 152 150  52 235 226 122 468   7 483 658 383 283
  79 607 533 470 140  20 293  18 698 423 330 514 699 149  23 727 723 515 312 263 210 276 349 572 369  34 509
 102 252 350  74 610 637 447 523  75 707 520  97 324 653 552 609 696 385 168 303 229 151 173 440 136  87 555
 692 141 110  51 393 591 477  24  32 684 397 175 659 553  11 206 181   4 560 666 285 219 634 612 370 551 577
 467  33 147 345 214 599 510 508 472 389 426 418 498 420 716 494 337  17 232  84 566 703  26 375 279 139 441
 180 542 721 306 320 513 678 538 585 354  71 683 502 113 132 204 321  40 362 516 233 399 145  67 403 700 227

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00021e+07us (= 10002.1ms, 10.0021s)
Wall-clock time (full program): 1.00582e+07us (= 10058.2ms, 10.0582s)
Satisfaction error: 4
Number of search iterations: 3509
Number of local moves: 2887 (including on plateau: 2836)
Number of local minimum: 26 (including on plateau: 379)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 256 347 44 15 96 334 704 686 197 571 8 323 199 641 262 495 146 278 662 66 105 464 697 613 581 541 98 => the sum is 9429 rather than 9855
Problem in row 19: 722 530 255 633 228 677 623 271 230 165 575 244 286 50 705 60 578 531 207 338 156 183 456 590 615 392 635 => the sum is 10935 rather than 9855
Problem in row 22: 273 621 318 130 188 689 499 535 589 584 534 251 222 78 471 152 150 52 235 226 122 468 7 483 658 383 283 => the sum is 9201 rather than 9855
Problem in diagonal 1: 248 427 668 592 639 196 105 431 504 331 290 573 406 563 376 41 112 158 230 19 37 689 140 74 110 33 180 => the sum is 8172 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 505 316 204 604  15 250 173  77 693 645 520 556 142 232 126 422 319  46 246 205 717 180 551 222 201 511  36
 405  88 529 601 460 615  93 284 108 393 699 547 591  31  12 137 580 216 499 681  69 541  96   3 718 135 724
  90 641 623 451  52 140 502 508 565  66 517 148 575 574 585 439 609 377 195 538 630 265 257 543 107 313  25
 468 303 638 226 369 301 564 196  58 660 156 149 240  22 124 182 440 242 706 498 335 665 253 635 588 428 409
 549  86 582 726 453  57 117 603 487 590  63 634 431  81 482 670  89 476 509 491 164 115 500 247   1 268 384
 172 280 433 599 528 648 288 249 494 191 698 101 722  38 516 470 444 546 203 186 380 178 711 141  43  44 552
 400   7 200 467 346 260 236 426 464 352  79 225 629 227 454 673  51 712 655  16  84 357 643 579 620 675  18
  33 224 390 477  29 298 550  97 697   2 473 605 701 295 382 169 646 259  91  74 680 702 412 176 725 716 691
 450 514 207 281 328 290 622 418  23  73 312 375 104 558 534 684 123 385 287 650 338 522  55 632 321 210 559
 370 306 162 218 456 598 349 613 627 658 576  80 102 704 430  92 525 231 133 197  78 359 555 480 296  27 633
 442 553  32 383 179 708 215 519 276 510 654 188 159 597 229 255 484 144  40 728 676  10 696 347 429 326  76
  62 611 274 116 421 212 639 628 331 157 190 397  99 713 272 292 678 496 278 524 614 194 100 219  87 707 544
 652 317 463 341 323  67 228 297 262 493 122 311 386 360 336 608 682 449 371 415 279 435 344 310 237 305 462
 381 363 324 432 391 300 271 327 364 389 314 414 230 302 401 353 504 535 351 443 388 175 447 348 238 398 472
 322 166 416 492 234 489 366  48 424 413 345 343 423 277 376 269 354 573 448 356 241 533 220 667 404 294 362
 659 618  53 244 548 521 394 333 373 459 587  71 105 703 657 395 139  26 150 152  13 275 365 160 410 478 127
 145 624 589 128 420 640 131 189 213 488 329 170 125 132  42 109 674 595 235 721 526 342 656 147 339 457 689
 239 690 653 368 165  72 571 686 666 583 154 586 469 233 340 685  20   4 192 112 610 532 318 545  68 266  28
 211  30 208  50 651  59 723 539 554 174 334 669 485 374 396 417 171  61 513 408 506  35 130 330 569 727 531
 372  45   9 248 446 518  54 688 563 282 594 252 572 530 458  37 206 309 411 129 143 710 267 243  85 315 387
 637 419 436 407 136 567 562 619  83  56 709 134 427 683 155  49 578 560  41 264 163 602 566 120 466 223 193
 465 512 581 199 642 479 258 251 153  24 183 256   5 700 715 263 114 452 621 490 273 121 392 461 113 445 687
 441 542 103 438 671  21 527 221 291 592  11 644 402 325 570 486 616  98 617 503 692 705 497 209 475 600 332
  60  94 664 320 612 537  34  95 403 110 679 668 367 119  14 647 111 625 677 358 455 307 293 286 607 261 151
 577 437 593  75 118 378 626 270 198 481 361 596 663 557 662 350 138 254 536 434  17 299 184 584 606 474  70
 561 714 304 245 483 158 337 167 283 285  19 168 695  82 540 694 161 661 636  65 289 515  39 501 631 146  64
 187 355 185 719 379 672 425 507 202 729 177 568   6 406  47   8 399 523 214 217 495 181 308 720 471 106 649

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00565e+07us (= 10056.5ms, 10.0565s)
Satisfaction error: 9
Number of search iterations: 2694
Number of local moves: 2318 (including on plateau: 2273)
Number of local minimum: 10 (including on plateau: 253)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 505 316 204 604 15 250 173 77 693 645 520 556 142 232 126 422 319 46 246 205 717 180 551 222 201 511 36 => the sum is 8714 rather than 9855
Problem in row 3: 90 641 623 451 52 140 502 508 565 66 517 148 575 574 585 439 609 377 195 538 630 265 257 543 107 313 25 => the sum is 10335 rather than 9855
Problem in row 8: 33 224 390 477 29 298 550 97 697 2 473 605 701 295 382 169 646 259 91 74 680 702 412 176 725 716 691 => the sum is 10594 rather than 9855
Problem in row 16: 659 618 53 244 548 521 394 333 373 459 587 71 105 703 657 395 139 26 150 152 13 275 365 160 410 478 127 => the sum is 9015 rather than 9855
Problem in row 20: 372 45 9 248 446 518 54 688 563 282 594 252 572 530 458 37 206 309 411 129 143 710 267 243 85 315 387 => the sum is 8873 rather than 9855
Problem in row 23: 441 542 103 438 671 21 527 221 291 592 11 644 402 325 570 486 616 98 617 503 692 705 497 209 475 600 332 => the sum is 11629 rather than 9855
Problem in row 24: 60 94 664 320 612 537 34 95 403 110 679 668 367 119 14 647 111 625 677 358 455 307 293 286 607 261 151 => the sum is 9554 rather than 9855
Problem in row 25: 577 437 593 75 118 378 626 270 198 481 361 596 663 557 662 350 138 254 536 434 17 299 184 584 606 474 70 => the sum is 10538 rather than 9855
Problem in row 26: 561 714 304 245 483 158 337 167 283 285 19 168 695 82 540 694 161 661 636 65 289 515 39 501 631 146 64 => the sum is 9443 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
  11 434 104 160 150 386 281 717 420 694  25 110 599 277  19 322 676 679 288 294 706 336 598 143 113 657 656
 714  90 669 164 499 410  46 541 726 584  56 502 186 216  30   9 268 368 170 585 162  91 675 351 583 202 472
 729 326  42 390 553 282 196 582 609  26 653 165 345 149 158 493 695 550 468 452  92 632  89  33 444 462 240
 522 379 334 105 688  62 256 451  50 507 235 573 619 629 712  47 112 648 344 699 319 289 134 230  71 168 672
 348 624 200 521 209 690 490 123 399 225 514   3 244  29 727 560  40 450 427 145 333 526  16 220 500 446 454
 228 556 532 666  65 118  74 415 273 265 261 487 221 332 631 538 574 253 716  82 103 206 627 307 443 634 248
 558 111 409  95 551 608 171 393 459 114 435 476 718 711  84 374 566  10  22 700 491 231  55 370 488  76 579
 264 142 280 259 236 601 603 194 517 181 663 295  80 590  58 677 458 546 328 519 210 614 372 191  59 329 589
 366 548 166 720 453 242 479 636 207 296 342 611  12 412 267 673 176  87 651 537 612 528 668 563 198 470  43
 438 317 309 137 440 205 116 448 138 188 620 125 698 193 169  79 416 147 489 346 684  31  64 696 218  32 588
 183 257  85 418 439 542 607 323 357 623 204 292 461 428 361 407 232 208 365 710 633 102 172  45 728 121 552
 302 135 557 321 647 293 430 279 154 466 397 217 637 475 549 561 391 239 132  78 266 498 404 543   7 539 338
 701 285 331 195  98 284 702   8 687 159 594 367 387 269 481 640 396 241  94 593 484  28 419  18 565 655 174
 414 353 378 413 325 270 363 330 398 340 395 355 359 457 382 384 371 421 349 455 352 343 436 394  51 392 375
  96 659 422 310 388 314 515 708 402  63 400 721 299 130 449 376  27 389 298 341 423 380 377 258 431 403 276
 383 483 303 658 568 178 219 350 339 469 197 117 246 362 510 347 304 179 586  24  72 693 465 654 263 478 408
  57 683 661 441 100 587 646 109 175 635 157 152  86  49 501 670 492 262 234 600  44 320 226 719 575 107 567
  67 411 463 580 278 128 650 689  41 527 297 467 167 680 555 133 354 425 301 495 707 127 251 447 381 126 108
 356 536 437 569 275 525 511 136 534 369  13 287 505 213 503 115 572 554 508  69 473 686  35 405 199 364 106
 715 417 649 626 327 713 249   5 306 316  37 477 494 432 482 255 564 578 547 545 129 429 271 291  70 283 385
 486 214 229 101 315 645 406 274  99 424 639 615 497 233 237  48 215 139 122 192 540 685 504 709 692 464 131
 312  39 664 360 682 124  17  75 621 723 227 643 222 506 426 161 177 595 592 212 190 577 460 496 513  97 144
 224 148 617   2 606 531 571 597 570 642 641 652 530 120 203 311  60  21 604 153 665 250 596  23 156 119 243
 697 638  77 544 189 480 512 576 660 201 602   6  53 474 252 610 725 705  20 616  83 313 308 678  54 722 529
 254 335 613 523 155   4 581 180  36  66 630 520 401 373 622 211 562 141 628  93 485 337 518 509 704 151 223
 245 445 184 516 605  15 163 260 644 671 533 187 318 442 305 681 146 662 272  73  38  68 591 324 724 691  52
 185 290 140  61  14 618   1 456  34  81  88 433 471 674 182 173 286 358 300 247 559 535 524 238 625 667 703

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00571e+07us (= 10057.1ms, 10.0571s)
Satisfaction error: 7
Number of search iterations: 3346
Number of local moves: 2773 (including on plateau: 2726)
Number of local minimum: 32 (including on plateau: 348)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 714 90 669 164 499 410 46 541 726 584 56 502 186 216 30 9 268 368 170 585 162 91 675 351 583 202 472 => the sum is 9369 rather than 9855
Problem in row 5: 348 624 200 521 209 690 490 123 399 225 514 3 244 29 727 560 40 450 427 145 333 526 16 220 500 446 454 => the sum is 9463 rather than 9855
Problem in row 9: 366 548 166 720 453 242 479 636 207 296 342 611 12 412 267 673 176 87 651 537 612 528 668 563 198 470 43 => the sum is 10963 rather than 9855
Problem in row 10: 438 317 309 137 440 205 116 448 138 188 620 125 698 193 169 79 416 147 489 346 684 31 64 696 218 32 588 => the sum is 8331 rather than 9855
Problem in row 20: 715 417 649 626 327 713 249 5 306 316 37 477 494 432 482 255 564 578 547 545 129 429 271 291 70 283 385 => the sum is 10592 rather than 9855
Problem in row 24: 697 638 77 544 189 480 512 576 660 201 602 6 53 474 252 610 725 705 20 616 83 313 308 678 54 722 529 => the sum is 11324 rather than 9855
Problem in row 27: 185 290 140 61 14 618 1 456 34 81 88 433 471 674 182 173 286 358 300 247 559 535 524 238 625 667 703 => the sum is 8943 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 263 710 650 213  53 450  31  83 528 333 666  29  81 672  70  11 659 158 557 596 640 505 585 692 597 503   1
  61  97 105 536 301 652 376 120 703 619 129 453 722   4  52 337 394 360  74 121 646 187 441 267 476  78 226
 459 270 434 719 416 241   7 724 602 446 628  56 591 134 201 147 701 638 490 475 576  44  82 458  21 269  87
  43 401 148 593 660 234 629 582 479 609 225 663 380 512 620 258 526 119 409 154 405   8 284  72 139 612  91
 565 661 559 138 560 161  73 608  15 262 574 140 455 179 249 508 112 110 658 670 707  92 212 176 518 240 653
 680 713 351  84 396  18 554 524  24  68 314 474 669 250 196 678 523 547 144 146 101 189 306 683 510 454 259
 467 462  63 310 265 486 480 286 106   3 586 709 625 601 469 570 198 651  50 126 100 244 599 464 691 151  93
 164 124 594 137 145 538 194 188 282 553 496 624 178 584 587 511 491 184 131 160 493 200 592 219 641 191 654
  95 192 220 217 580 157 136 168  94 181 729 318  30  40  54 685 290  71 237 320 578 704 463 332 529 133 540
 193 398 623 135 228  59 502 365 688 293 190 506 113 233 520 694 297 221 392 676 152 132 682 431 277 210 630
 294 635 216 243 386 312 224 717 247  60 313 588 632 272 285 639 302 439 278 223 254 533 515 348 305 303 292
 487 143 264  96  86  49 109 114 568 668 229 170  77 718 567 420  41 231 679 516 230 684 471 725 579 695 239
 336 699 296 355 406 379 377 325 331 350 338 385 407 280 309 327 308 697 288 304 358 335 341 330 349 393 252
 347 343 236 326 279 378 324 389 397 411 321 359 414 715 173 400 424 363 361 373 375 364 368 413 329 339 334
 370 384 399 437 345 352 395 451 418 353 273 311 371 448 444 494 422 122 417 382 356 346 387 142 430 423 183
 391 500 662 648 561 403 460 130 177  12 519 421 492 433 315   9 118 402 155 266  62 484 426 522 481 108 698
 606 690  66 488 172 595 412 550 261 631 556 203 214 728  48 466 369 649 537  67   6 307  39 532 156 440 169
 166 381 202 473  14  88 255 442  55 497 245 246 383 600 275 276 342  25 534 283 408 287  17 107 104 572 295
 117  13 427  76 611 242 185  27 477 300 123 687 723 238 165 706 636 419 232 175 501 546 362   2  26 367 115
  22 425 517 438 521 675 657 610 344 482  64  65 509 727 163  75  69 549 323 499 432 452  16 207 291 514 209
 555 218 374  89 340 116 562 205 159 410 128 186 525 366 589 268 527 111 626 577 354 495 197 204 693 607 622
 174 180 447 571 564 551 390 357 103 531 541  57  23 483 686  90 449 199  79 617 671 566 456 548 322 298 720
 673 222 485 445 281 712 489 605 674 689 633 544 457 257 569 614  10 498 665 603  19 299 435 316 248 468 513
 429 125  20 598 274 613  45 443 642 644 504 700 271  58 558 167 637 372   5  99 535  32 328 615 171 681 289
 575  80 655 208 563 507 573 215 461 141  38 260 317 162 436 153 182 645 251 714 256 634 470 627 253  51 428
 667 583 195 664 227 472 705 590 616 211 465 552 150  34 539  33 726 530 581 478 604 643  85  35 677 708 542
 656 206 647 618 621 415 711  37 404  98  28 149  46 127 716 319 102 545 702 235  36 543 696 388  42  47 721

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00025e+07us (= 10002.5ms, 10.0025s)
Wall-clock time (full program): 1.00582e+07us (= 10058.2ms, 10.0582s)
Satisfaction error: 12
Number of search iterations: 2856
Number of local moves: 2343 (including on plateau: 2301)
Number of local minimum: 27 (including on plateau: 303)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 263 710 650 213 53 450 31 83 528 333 666 29 81 672 70 11 659 158 557 596 640 505 585 692 597 503 1 => the sum is 10336 rather than 9855
Problem in row 2: 61 97 105 536 301 652 376 120 703 619 129 453 722 4 52 337 394 360 74 121 646 187 441 267 476 78 226 => the sum is 8537 rather than 9855
Problem in row 3: 459 270 434 719 416 241 7 724 602 446 628 56 591 134 201 147 701 638 490 475 576 44 82 458 21 269 87 => the sum is 9916 rather than 9855
Problem in row 9: 95 192 220 217 580 157 136 168 94 181 729 318 30 40 54 685 290 71 237 320 578 704 463 332 529 133 540 => the sum is 8093 rather than 9855
Problem in row 10: 193 398 623 135 228 59 502 365 688 293 190 506 113 233 520 694 297 221 392 676 152 132 682 431 277 210 630 => the sum is 9840 rather than 9855
Problem in row 17: 606 690 66 488 172 595 412 550 261 631 556 203 214 728 48 466 369 649 537 67 6 307 39 532 156 440 169 => the sum is 9957 rather than 9855
Problem in row 18: 166 381 202 473 14 88 255 442 55 497 245 246 383 600 275 276 342 25 534 283 408 287 17 107 104 572 295 => the sum is 7572 rather than 9855
Problem in row 19: 117 13 427 76 611 242 185 27 477 300 123 687 723 238 165 706 636 419 232 175 501 546 362 2 26 367 115 => the sum is 8498 rather than 9855
Problem in row 21: 555 218 374 89 340 116 562 205 159 410 128 186 525 366 589 268 527 111 626 577 354 495 197 204 693 607 622 => the sum is 10103 rather than 9855
Problem in row 22: 174 180 447 571 564 551 390 357 103 531 541 57 23 483 686 90 449 199 79 617 671 566 456 548 322 298 720 => the sum is 10673 rather than 9855
Problem in row 23: 673 222 485 445 281 712 489 605 674 689 633 544 457 257 569 614 10 498 665 603 19 299 435 316 248 468 513 => the sum is 12423 rather than 9855
Problem in row 26: 667 583 195 664 227 472 705 590 616 211 465 552 150 34 539 33 726 530 581 478 604 643 85 35 677 708 542 => the sum is 12312 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 729 420 116 163 539 185 332  42 270 300 660 311 626 661 134 435 280  58 151 316 241  19 495 167 361 584 708
  49 184 117 616   1 344 327 654 724 611 262 566 416 620 583 212 522  37 112  94 494 285 668 568 407 114 268
 330 450 216 596 357 304 609  57  34 301 154 496 489  76 354 132 101 324 664 663 251 456 666 590 677 373 135
 289 541 719 657 702 236  16 296  48  88  99 485 123 587 264 559 181 279 404 221 406 674 195 617 422 232 515
 210 728 211 382 575   9 149 439 269 683 480 199  92 519 493 640 381 164 415 431 671 168 604  97 509 387  15
 634 389 588 223  82 233 574 608 157 533 379 249  45 524  60 589 130 158 290 286 512 550 537 678 177  32 638
 100   7 701 551  36 576 317  72 189 347 716 173 228 565 622  27 426 530 302 679 527 142 642  75 614 291 400
 525 593  25 695 696 612 160 313  44   3 445 471 339 692  46 229 138 662 218 721 170 372 547  41 514 546  38
 207 388 397 137 162  13 504 705 518 484  35 107 230 403 718 133 602 615 457 631 222 394  40 648 224 582 299
 520 477 176 672 399  95 391 486 571 505 468 109 351  83 320 452 214 473 284 491 462 434 227  59 318 261 557
 526 309 188 498 380 215 697 585 342 444 254 625 712 273 161 690 307  21  10 111 633 386 501  77 312 650 655
 245 651 152 472 153 684  81 534 370  96 430 465 113 265 703  68 469 423 545  73 552 717 362 248   8 645 331
 355 126 287 395 419 409 467 129 371 396 186 257 378 392 429 442 358 401 704 375  51 503 267 528 446 421 363
 191 131 408 146 140 366 669 159 689 219 334  85 511  87 564 346 384 558 413 190 244 542  78 693 385 723 600
 393 581 325 266 523 554  98  89 329 356 169 319 118 644 253 234 714 487 124 710 364  52 433 507 629 105 479
 226 711  50 231 521  80 271 437 618 483 699 639 335 369 411 374 274 295 432  43  71 685 572 463 125 297 143
 686 506 531   6 707 532 410 438 179 670 345 323  84 139 624 709 579 147  61 333  39 275  90 691 599  86  66
 459 202 653 250 675 598 500 376 148 293 665 635 548 492 175  20 106 621 283 517 119  14 694 337 206  65 204
 597 187 497 726 461 436 586 529 239 145 321 237 260 288 298  67 630  28  47 263 706 310 341 360 256 700 340
 165 637 594 447 196 482 172 623 488 641 155 595 192 220 208 478 183 343 567  62 243 305 425 276 470  12 676
 502 255 658   2  30 141 150 252 247 197 592  22 688 182 424 536 272 322 680 555 417 563 292 238 569 659 649
 348 365 377 326 390 367 725 110 448 543  33 713 449  24 458 122 475 580 102 174 338 605 336 193 178 562  55
 643 156 200 217 121 627 194 499  79 476 127 281 698 720   5 418 166 242 610 412 591 636 314 443  74 350 556
 427 553 306 128  11  23 201 349 628   4 508 490 613 481 681 647 682 601 538 607 278 103 171 405 258 144  18
 414 235 383  53 727 687 652 315 606 466 441 240 578  26 561 120 667 115 451 454 205 203  69 474 136 368 209
  31  56 464 560 549 619 510 246 673 294 328 455 104  63 108 573 544 656 359 352 402 180 225  29 722 213 540
  54  17 516 440 303 428  93 513 577 277 570 308 535 460 198 603  70 715 632  91 646 282  64 353 259 453 398

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.0056e+07us (= 10056ms, 10.056s)
Satisfaction error: 5
Number of search iterations: 2744
Number of local moves: 2291 (including on plateau: 2241)
Number of local minimum: 21 (including on plateau: 262)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 729 420 116 163 539 185 332 42 270 300 660 311 626 661 134 435 280 58 151 316 241 19 495 167 361 584 708 => the sum is 9303 rather than 9855
Problem in row 5: 210 728 211 382 575 9 149 439 269 683 480 199 92 519 493 640 381 164 415 431 671 168 604 97 509 387 15 => the sum is 9920 rather than 9855
Problem in row 11: 526 309 188 498 380 215 697 585 342 444 254 625 712 273 161 690 307 21 10 111 633 386 501 77 312 650 655 => the sum is 10562 rather than 9855
Problem in row 21: 502 255 658 2 30 141 150 252 247 197 592 22 688 182 424 536 272 322 680 555 417 563 292 238 569 659 649 => the sum is 10094 rather than 9855
Problem in row 22: 348 365 377 326 390 367 725 110 448 543 33 713 449 24 458 122 475 580 102 174 338 605 336 193 178 562 55 => the sum is 9396 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 398 455 227 545 662 107 271 238  71 125 600  22  60 576 448  58 713 694 553 485 150 659 364 529  10 606 229
 727  45 513 496 397   4 629 531 267  42 200 260 656 489 421   6 283 392 635 410 620 153 480  63 323 347 466
 580 601 533 188 266 677 691 428 131 247 682   1 457 560 520 699  54 611 608 715 679 683 526 562 657 299 508
 366 145 133 558 728 540 274  30  34 636 328 515  66 330 654 106  89 220 135  98 665 320 370 617 351 269  28
 231 729 236 206 614 245 192 357 632 151 723 470 191 479  47 157 185 425 108 201 463 234 588 664 394 248 685
 121 584 532 388  36  91 356 317 278 313 409 416  24  15 214 118 557 251 678 648 365 552 180 507  23 705 642
 468 156 380 312 258 472 491 139 451 390 132  32 279 495 194 441 667 199 190 120 551 446 711 476 604 689 112
 196 539 641 371 499 548  18 500 565 224 202 484 213  76 710 622  52 174   8 554 186 259 573 631 454  96 460
 348 307 561  13 183 498 440  73 111 579 624 621 676 687 173 595 473 210 478 306 505 142 418  72  70 377 315
 136 706 494 119 406 122 130 693 316 143   9 164 172   7  33  93 640 242 333  53 217 424 268 167 163  27 383
 300 160 334 422 543 609 322 616 690  69 503  35 293 158 203 244 412 716 459 535 528  12 471 216 277  85 643
 549 655 318 221 195 109 607 304 417 444 670 521 612 721 140 117 211 651 408 692 302  31  37 113 141 393 276
 296 419  87 404 405 399 467 407 384 294 346  55 354 449 391 453 381 379 337 400 362 411 556 373 344 339 363
 349 361 311 591 128 352 368 345 395 415 372 401 336 538 332 114 324 374 438 481 387 359  94 382 321 342 645
 700 205 569 338 571 287 147 519  17 396 232 433 285 116 666 514 550 105  80 445 486 464 726 154 525 215  65
  29 490 110 378 704 575  86 602  67 652  74 684 477 270 610 298 254  95 212  62 282 603 669 341 506 647  78
 295 605 310 181  79 724 510 630 314 688 290 198 544 171 488 509 627   3 427 252 168 207 179 309 292 658 197
 431 325 675 355 284 326  88 146 589 695 403 426  16 469 534  97 567 501 590 375 250 137  49 263 585 430 249
 152 547 273  61 126 649 634 305 204 686  48 353 681 218 619 303 331 367 193 175  84 709 628 261 593 144 511
 237  90 582 708 222 703 102 230 530 524 129 177 497 101 434 698 239  39 707 165 483 209 272 169 447 487 674
 516 385 423 559 697 240 187  25 625  56 149 369 256 482 228 599 115 536 523 522 583 474  21 124 301 458 402
 668 450  14 465 308 170 319 725 577 598 564 443 243 289 286 435 512 574 420  68  41 123  92 439 623 327  82
 644 219 653 572 155 297 661 527 134 462 329 233 592 389 208 189 262 148 660 587 452  40   5 578 413 280 166
 257 264 275  75   2 461 442 100 663 253 626 719 586 255  46 613 376 650  59 570  50 615 225 639 672  81 281
 618 104 504 722 568  43 720 436 717 358 456 680 714 701 502 718 291 432 343 246 360 542 594  11  19 265 563
 223  83  64 581 182 178 162  77 492 288 159 546 138 176 414 386  57 517 235  44 537 335 241 702 696 475 671
  20 226 103  26 637 429 541 555 184 127 596 597 437 638 340 673 633 350  38 646  99 712 518 493  51 566 161

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00564e+07us (= 10056.4ms, 10.0564s)
Satisfaction error: 8
Number of search iterations: 2669
Number of local moves: 2273 (including on plateau: 2226)
Number of local minimum: 23 (including on plateau: 254)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 580 601 533 188 266 677 691 428 131 247 682 1 457 560 520 699 54 611 608 715 679 683 526 562 657 299 508 => the sum is 13163 rather than 9855
Problem in row 4: 366 145 133 558 728 540 274 30 34 636 328 515 66 330 654 106 89 220 135 98 665 320 370 617 351 269 28 => the sum is 8605 rather than 9855
Problem in row 6: 121 584 532 388 36 91 356 317 278 313 409 416 24 15 214 118 557 251 678 648 365 552 180 507 23 705 642 => the sum is 9320 rather than 9855
Problem in row 10: 136 706 494 119 406 122 130 693 316 143 9 164 172 7 33 93 640 242 333 53 217 424 268 167 163 27 383 => the sum is 6660 rather than 9855
Problem in row 15: 700 205 569 338 571 287 147 519 17 396 232 433 285 116 666 514 550 105 80 445 486 464 726 154 525 215 65 => the sum is 9810 rather than 9855
Problem in row 25: 618 104 504 722 568 43 720 436 717 358 456 680 714 701 502 718 291 432 343 246 360 542 594 11 19 265 563 => the sum is 12227 rather than 9855
Problem in row 26: 223 83 64 581 182 178 162 77 492 288 159 546 138 176 414 386 57 517 235 44 537 335 241 702 696 475 671 => the sum is 8659 rather than 9855
Problem in row 27: 20 226 103 26 637 429 541 555 184 127 596 597 437 638 340 673 633 350 38 646 99 712 518 493 51 566 161 => the sum is 10396 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 729 718 217 261 605  82 505 166  95 164 495  21 569 393 240 488 649 630 615 183  89  97  20 596 631 554 716
 466 134 586  62  24 710 291 690 610 430 723 647 307 161 501  87  11 684 178 490 622 560 553  49 285 679 571
 441 105 202 171 153 186  57 127 666 191 672 448 695 257  41 638 278 322 515 124 700 384 499 237 588 625 533
 239 156 673 618 170 284  35 290 255 414  65  36 450 599 687 341 624 248  58 451 607 674 106 603  46 475 100
  51 476 478 487 663 724 722 565 619 550  48 300 513 150 206  53 142 403 256 312 590  13 579 144 434  79 298
 496   3 181 508 359 436 417 210 712 287 324  54 194 682 226 137 688 169 582 222 280 531  81 566 703 159 648
 386 392 351 637 608 203 725 680 180  83 547 535  43 677 136 542 145 653  63  59 540 114  18 416 387  64 671
  52 425  99 543 455 728 601 642 683 305 122 514 600 460  70 587 563 310 711 494 440 120 173 620 212 570 595
  85 138 689 428 365  71 270 556  61 213  25 176 575 246 303  30  31 591 491 435 651 179 309  44 101 185  94
 331 245 250 646 701 109 726 244 132 361 456 184 511 521 557 654 662 481  19 118 241 205 484 158 480 516 482
 574 363 267 706 263 338 616 658 518 135 552 676 292 117 276 702 465   8 486 411 199 634 128 462 585 652  22
 696 549 399 502 454   5 457 639 583  56 628 500 715 464  26 453  60 581  29 330 379 526 234 198 167 148  77
 373 433 438 356 405 383 272 407 391 388 390 346 362 385 404 413 397 358 419 352 415 370 369 266 389   6 368
 422 288 423 381 380 406 378 345 329 308 396 344 377 347 335 321 301 376 336 348 375 489 394 372 343 367 374
 349 698 262 339 429 328 371 350 382 189 332 589 320 366 229 519 325 705 133 447 315 316 408 337 364 174 279
  96 355 693 555 655 727 694 412 294 275 140 306 432 313 697 265  15 333 296 661  40 354 260 143 319 211 314
 686 318 640 268 249 626 437  66 421  42 271 115 195  28 597 231 474 197 604 650 536  27 418 493  68 621 577
 477  73 187 236 334 613 107 104 537 252 398 545 110  45 283 573 269 215 410 360 685 669 675 302 163 721 512
 165 538 259 426 468  76 243 681 218 641 504 228 111 717 467 146 506 209 196 568 230 576 130 527 606 409  10
 529 530 472 224  39 192 162 201 221 678  74 528 282 564 558 444 227 193 546   9 520 126 479 667 668   4 461
 177 400  93   1 562 643 175 473  37 594 548 238  69 602 121 567 442 449 452 154  86 160 208  32 469 277  84
 311 459 281 119 242 190 659 233 446 611 524  23 633 295 598 327 357  50  12 632 503 523 572 258 274 584 139
 297 645 623 247 200 342  47  72 113 427 149 720  80 636 439 692 443 541 299 544  33 522 223 699 492 123 207
  92 593 103 157 317 445  88 251 644 497 580 609 660 204 664  14 112 116 708 129 326 498 713 188 219 470 458
 704 691 102 559  90 483 182  67   2 517 293  34 509 463 141 264 304 401 551 592 214 254 627 289 539 152 617
 614  75 485  78 155 172 471 719 286 635 168 578 235 125 629 151 709  98 225 273 108 714 670 532 232 323 395
  17  55 402 340 510 353 147   7 420 612 431 561  16  38 424 216 656 534 665 507 131 220 525 657  91 707 253

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00569e+07us (= 10056.9ms, 10.0569s)
Satisfaction error: 11
Number of search iterations: 2671
Number of local moves: 2212 (including on plateau: 2169)
Number of local minimum: 25 (including on plateau: 281)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 729 718 217 261 605 82 505 166 95 164 495 21 569 393 240 488 649 630 615 183 89 97 20 596 631 554 716 => the sum is 10528 rather than 9855
Problem in row 2: 466 134 586 62 24 710 291 690 610 430 723 647 307 161 501 87 11 684 178 490 622 560 553 49 285 679 571 => the sum is 11111 rather than 9855
Problem in row 4: 239 156 673 618 170 284 35 290 255 414 65 36 450 599 687 341 624 248 58 451 607 674 106 603 46 475 100 => the sum is 9304 rather than 9855
Problem in row 8: 52 425 99 543 455 728 601 642 683 305 122 514 600 460 70 587 563 310 711 494 440 120 173 620 212 570 595 => the sum is 11694 rather than 9855
Problem in row 9: 85 138 689 428 365 71 270 556 61 213 25 176 575 246 303 30 31 591 491 435 651 179 309 44 101 185 94 => the sum is 7342 rather than 9855
Problem in row 10: 331 245 250 646 701 109 726 244 132 361 456 184 511 521 557 654 662 481 19 118 241 205 484 158 480 516 482 => the sum is 10474 rather than 9855
Problem in row 11: 574 363 267 706 263 338 616 658 518 135 552 676 292 117 276 702 465 8 486 411 199 634 128 462 585 652 22 => the sum is 11105 rather than 9855
Problem in row 20: 529 530 472 224 39 192 162 201 221 678 74 528 282 564 558 444 227 193 546 9 520 126 479 667 668 4 461 => the sum is 9598 rather than 9855
Problem in row 21: 177 400 93 1 562 643 175 473 37 594 548 238 69 602 121 567 442 449 452 154 86 160 208 32 469 277 84 => the sum is 8113 rather than 9855
Problem in row 25: 704 691 102 559 90 483 182 67 2 517 293 34 509 463 141 264 304 401 551 592 214 254 627 289 539 152 617 => the sum is 9641 rather than 9855
Problem in row 27: 17 55 402 340 510 353 147 7 420 612 431 561 16 38 424 216 656 534 665 507 131 220 525 657 91 707 253 => the sum is 9495 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 122 545  22 114 623 264  27  92 635 588 430 174 255 462 679 328 364 539 376 493 610 485 557  89  41 272 669
  46 517 638 211 459 487 650   4  10  29 198 137  48 551 606 317 167 657 449 646 636 460 107 276 458 699 392
 475 244 586 446 660  76 698  63  64 147 712 440  73 543 257 540 538 625  69 152 443 643  19 109 649 275 309
 527 555 516 190 581 628 286 682 536  15 725 232 173 319 126 132 563 598 521 714 349 560 647 622 404  94  80
 199 110 644  90   1 395 595 344 721 512 200 531 423  95  55 535  82  37  71 394 136  70  79 525 561 552 684
 237 445  78 127 284 146 321 401  49 456 562 633 318 324 350 486 530 302 279  98 390 429 314 658 667  93 252
 377 474 452 265 592 151 225 131 260 113 334 542 149  45 559 247   6 418 705 640 578 120 612 620  75  85 159
 494 100 528 156 217 500 579 280 322 720  23 696 436 483 234   9 477 713 451 153 501 143 300 227 577 489  47
 703 629  91 673 170 331 183 480 186 666 473 240 584  12 369 613  40 362 203 603 710 626 391 374 550 307 695
 634  17 469 616 269 576 478 665 291 438 544 466 343 267 652 491 434 428 303  87  81 228  14 158  20 632 254
 236 281 686 468 541 121  77 708 470 675 108 105 691 582 278 639 336 305  24  68 566  25  84 422 453 396 510
 370 479 410  42 342 356 320  35 607 554 311 492  38 662 589 419 104 499 290 507 694 139 221 196 298 656  43
 287 441 406 407 529 570 359 409 431  74 367  52 426 283 405 389 435  39 193 403 513 368 360 384 564 383 378
 371 366 424 398 417 381 402 416 357 332 325 340 351 339 379 408 358 365 382 341 380 361 315 337 354 327 329
 727  60 150 648 345 709  61  62 604 386 205 722  21 263 457 427 655 119 599 677  13 556 115  72 425 177 600
 124 189 481 294 412 565 664 295 142 524 511 111 484 175 546 288 433 400 496   3 678 597 533 488   8 248 166
   7 724 271 615 397 261 719 596 414 630 624  16  99 346 224 663 641 482 168 242 301 495 308 231  54 101 520
 266 574 270 447 299 659 467 313  97 683 182 226 621 326 164  58 148 249 338 558 522 128 125 690 602 411 432
 547 312 243 138 155 188 171 537 130  11 506 532 519 160 191 715 716 103 526 508 335 310 472 514 490 463 363
 387 204 161 509 681 651 268 209 206 296 393 609 502 688 352  50 415  57 618 246  26 702 220 347 701 251 106
 187 162 184 553 230 723 154 608 645 323 590 439 680 585 707   5 274 567 289 222 239 471 627 591 163 399 693
 316 685 235 292  51 219 133 102 213 293 123 373 141 461  18 687 218 672 372 605 464 476 601 700  44 297 259
 653 594 306 385 503  67 207 413 455 192 454 210 572 118  34  31 593 202 654 273  56  88 706 117 497 129  36
 465 165 569 689 241  53 285 504 253 215  83 216 642 450 233 568 676 256 692 515 229 238 245 116 134 448 195
 179 250 181 726 728 282 534 729 505 262 169 549 717 178 637 277 208  33 176   2 194 670 674  30 671 523 631
 661  65 697 144  96 437 571 197 548 388  86 185 348 718 619 180 304 614  28 375  66 112 711 518 172 573 442
 258 668 157 212  32  59 421 580 704 333 617 587 201 420 135 353 140 214 583 330 145 355 498 444 223 575 611

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00558e+07us (= 10055.8ms, 10.0558s)
Satisfaction error: 12
Number of search iterations: 2812
Number of local moves: 2347 (including on plateau: 2303)
Number of local minimum: 21 (including on plateau: 277)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 527 555 516 190 581 628 286 682 536 15 725 232 173 319 126 132 563 598 521 714 349 560 647 622 404 94 80 => the sum is 11375 rather than 9855
Problem in row 5: 199 110 644 90 1 395 595 344 721 512 200 531 423 95 55 535 82 37 71 394 136 70 79 525 561 552 684 => the sum is 8641 rather than 9855
Problem in row 6: 237 445 78 127 284 146 321 401 49 456 562 633 318 324 350 486 530 302 279 98 390 429 314 658 667 93 252 => the sum is 9229 rather than 9855
Problem in row 7: 377 474 452 265 592 151 225 131 260 113 334 542 149 45 559 247 6 418 705 640 578 120 612 620 75 85 159 => the sum is 8934 rather than 9855
Problem in row 9: 703 629 91 673 170 331 183 480 186 666 473 240 584 12 369 613 40 362 203 603 710 626 391 374 550 307 695 => the sum is 11264 rather than 9855
Problem in row 12: 370 479 410 42 342 356 320 35 607 554 311 492 38 662 589 419 104 499 290 507 694 139 221 196 298 656 43 => the sum is 9673 rather than 9855
Problem in row 17: 7 724 271 615 397 261 719 596 414 630 624 16 99 346 224 663 641 482 168 242 301 495 308 231 54 101 520 => the sum is 10149 rather than 9855
Problem in row 21: 187 162 184 553 230 723 154 608 645 323 590 439 680 585 707 5 274 567 289 222 239 471 627 591 163 399 693 => the sum is 11310 rather than 9855
Problem in row 22: 316 685 235 292 51 219 133 102 213 293 123 373 141 461 18 687 218 672 372 605 464 476 601 700 44 297 259 => the sum is 9050 rather than 9855
Problem in row 23: 653 594 306 385 503 67 207 413 455 192 454 210 572 118 34 31 593 202 654 273 56 88 706 117 497 129 36 => the sum is 8545 rather than 9855
Problem in row 24: 465 165 569 689 241 53 285 504 253 215 83 216 642 450 233 568 676 256 692 515 229 238 245 116 134 448 195 => the sum is 9375 rather than 9855
Problem in row 25: 179 250 181 726 728 282 534 729 505 262 169 549 717 178 637 277 208 33 176 2 194 670 674 30 671 523 631 => the sum is 10715 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 545 546 190 466 685 469 725 163 111  41 114  96 602 175  22 169 452 221 552 472 256 505 501 224 403 454 696
 273 693 309  13 440 566 315 627 646 569  10  56 100 293 460  88 638 215  70 153 131 629 586 272 576 441 686
 604 124 152 538  61 266  77 331 464 338 493 251 549 219 563 683 625 187  58  97 235 657 634 177 643 222 607
 122 615 110 609 166 530 584 653  37 161 325  82  86 680 600 484 353 650 675 618   9 249 547 159 109 494 148
 661 392 149 121 599 422  85  57 718  16 218 556 168 312 720 632 608 496  55 299 570 562 162 337 248 677  15
 201 587   8  62 622 606 195 719 203 138  69 281 564 561 644 134  25  73 596 601 567 560 531   4 158 581 565
 633 470 712 330 541 146 421 125  21 430 143 514 689 728 442 394 350 555 619 507  47 688 701 524  18  44 492
 387 729 498 516 511 180 465 500 550 681 519 453 463 139  42 250 254 551 344 535 202  40 197 182 137 223 307
 597  66 126 127  81 284 668 204 512 261 306 651  36 522 591 714 383 420 491  99 658 439 193  24 488 332 582
  67 129 509 288 227 659 209 580 694 486 671 276 150  45   6  68 645 360 186  34 702 468 303 503 664 716 210
 462 577 480 504 181 283 525 238 118 144 455 536 553 300 151  79 502  89 673 571 523  93 347 513 200 117 641
 419 432 102 428 375 434 275  48 413 446 416 130 409 128 414 407 427 305 473 445 389 435 449 365 533 373 385
 443 400 451 423  71   7 660 364 402 410 415 380 386 374 382 520 339 384 377 367 359 366 429  17 368 405 356
 390 447 397 404 417 314 371 357 379 378 376 369 341 393 328 372 370 362 345 458 426 398   2 354 408 318 381
 635  26 234 142  46 418 595  11 592 670 724 721 230 172 532 136 292  27 705 214 623 605  74 287 459 711 461
 194 156 575 589 527 247 231 361 343 298 217 324 358 537 155 351  43 692 120 346 593 244 225 637 335 640 517
 655 289 497  54 271 642 355 103 274 280 263 471 278 241 226 282 257 242 174 713 636 485 578 722 258 308 301
 229 115 672 286 279 107 628 297 269 239 302 476 179 363 119 621 490 265 252 236 515 704 147 649 482 317 617
  49 268 717 654 727 313 448 388 270 568  39 709 243 334 145 323 259 707 211 154 189 173 554 579 544 157 133
  95 178 583 598 506 132 105 237 411 639 322 340 207  35  51 676 246 613 594 191  60 160 690 631 529 710 316
 610 474 391 206 245 171 140 620 697  92 699 614 647 141 267 489 342  14 294 687 213 285 320 192 184 656 165
 590 539  76 691 255 624 475 135  52 508 630 167 199 572 542 438 188 104 518 662 483  80 253 495 336  23 220
 233 113  53  98 682  50  29 695  65 611 612  19 457 348 262 665 708 112 176 164 264 479 548 626   1 123  30
  75 290 723  83 499 558 291 648 321 106 183 521  28 703 663 534  72 333 444   5 311 329 208 667 616 557  87
 196 674 425 726  94 260 240 228 603 198 528 477 540 706 349  63 585 669 437 526 412 101  33  84  38 185 478
 399 216 652 573 352 700 319 487 116 588 296 277 678 433 481  78 232 543  20 406  32  31 431 327 436  12 456
  91 310  64 326 395 467 424 679 574 559 510 108 715 401 698 205 170 666 396 295 450  90 212 304 684  59   3

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00569e+07us (= 10056.9ms, 10.0569s)
Satisfaction error: 5
Number of search iterations: 3139
Number of local moves: 2608 (including on plateau: 2558)
Number of local minimum: 30 (including on plateau: 311)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 633 470 712 330 541 146 421 125 21 430 143 514 689 728 442 394 350 555 619 507 47 688 701 524 18 44 492 => the sum is 11284 rather than 9855
Problem in row 15: 635 26 234 142 46 418 595 11 592 670 724 721 230 172 532 136 292 27 705 214 623 605 74 287 459 711 461 => the sum is 10342 rather than 9855
Problem in row 23: 233 113 53 98 682 50 29 695 65 611 612 19 457 348 262 665 708 112 176 164 264 479 548 626 1 123 30 => the sum is 8223 rather than 9855
Problem in row 26: 399 216 652 573 352 700 319 487 116 588 296 277 678 433 481 78 232 543 20 406 32 31 431 327 436 12 456 => the sum is 9571 rather than 9855
Problem in diagonal 1: 696 441 643 159 162 560 47 535 491 360 502 407 382 393 230 324 263 239 270 237 140 624 682 83 425 216 91 => the sum is 9602 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 145 514  53 661 166 719  13 443 566 584 446 215 216 588 316 118 198 616 489  65 170 429 416 284 603 159 663
 499 235  85 498 362 533 181 619 705  40 202 708 626 512 368 195 147  51 471 608  55 356 205 193 258 716 427
 262 179 721 112 197 201 689 176 634 382 483 462 665 149 550 532 188 352 246 432 428 589 710 704 180 403 302
 231 206 496 100  67 519 666 370 163 253 714 386 522 677 326 105 618 142 209 247 529 121 571 690 572  38 317
 503 476 511 185 411 131 440 585  74 341  10 169 233  61 605 697 552 640 210 648 191 239 140 266 207 394 371
 711 637 113 269  41 321  32 556 106 453 497  87 630 683 713 127 243 415 580 528 409 536 595 712  35 444 395
   8 615 520 724   7 110 707 172 465 513 643 168 189 250  21 639   6 212 183 468   5 632 600 609 165 597 627
 144 218 175 586 650 241 526 320  26 726 225 285  98 390 558 652 628 477 238 366 516 208 126 287 633 554   2
 378 587 134 644 642 151  64 458 278  44 441 523 545  84 108 495 466 190 383  95 474 293 292 645 369 635 437
 531 473 227 129 297 578 289 617  45 555 280 405 248 560 327 156  82 296 340 649 548  22  43 434 694  14 674
 601 553 351 164 583 221 203 691 659  27 232 372 575 568  16 177 501 137 204  57  47 606 614 133 667 306 590
 454 361  50 604 141 451 304 591 433 485 559 430 470 399 478 400 393 534 182 174 226  91 158 701  70 406 310
 480 257 417 350 679 325 346 357 282 397 322 423 353 173 418 431 363 425 388 334 290 318 472 219 332 396 308
 410 442  69 345 135 456 360 413 544 283 426 298 291 525 279 452 343 311 407 445 467 314 484 349 412 319 276
 654 450 307  56 636 527 347  81 482 315 459 629 377 355 509 300 461 727  86 402 358 680 272  19 211 101  54
 330 109 236 435 281 562 723 494 685 561 184 220 234 132  52  36 717 681 563 576  75 638 299  63 120 380 469
 540 254 729 331 294 448 222 123 259 547 301 535 313 328 157 420 274 491 229 658 342 335 167 656 392 323 187
 194  23 364 539 622 305 567 725 502 359 333 664 671  66 286 213 387  11 464 537 500 122 506 419 596 338 624
  24 324 577 543 277   1 261 178 295 692  78  42   9 271  29  33 700 384 582  30 686 228 463 389 510 408 720
  83 107 124 693 620 329  48 381 119 374 479  94  71  92 696 492 348 336 508 237 598 557 641 610 422 699  97
 593 574 155 223 455 684  76 200 592 130 678 581 136 515 460 722 487 375 687  62 309 104   3  28 505 117  58
 252 625 673 244 670  79 517  59 115 486 103 414 611 150 240 401  96 569 653 379  12 703 196  49 249  89 530
 715 573 709 275 436 542 599 265 199  17 255 657 102 676 521  80 214 116 138 288 728 702 260  31  25 672  60
 651 621 376 344 128 273 154  93  68   4 698 230 493 579 490 551 669 268 457 312 143 148 488 688 365 546  18
  37 171 706 602 564 447 655  72 662 594 507  34 192 224 675 518  90 438 270 242 660  15  77 162 373 682 186
  88 125 439 160 421 152 391 367 251 647 139 607 481 153 303 668 114 398 424 631 524 256 718 111 623  20 541
 337 146 538  39  73 549 475 449 646  46 161 217 504 695 354 245 570 263 264 385 565 613 339 404 267  99 612

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00561e+07us (= 10056.1ms, 10.0561s)
Satisfaction error: 10
Number of search iterations: 3997
Number of local moves: 3356 (including on plateau: 3311)
Number of local minimum: 31 (including on plateau: 390)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 262 179 721 112 197 201 689 176 634 382 483 462 665 149 550 532 188 352 246 432 428 589 710 704 180 403 302 => the sum is 10928 rather than 9855
Problem in row 5: 503 476 511 185 411 131 440 585 74 341 10 169 233 61 605 697 552 640 210 648 191 239 140 266 207 394 371 => the sum is 9290 rather than 9855
Problem in row 6: 711 637 113 269 41 321 32 556 106 453 497 87 630 683 713 127 243 415 580 528 409 536 595 712 35 444 395 => the sum is 10868 rather than 9855
Problem in row 10: 531 473 227 129 297 578 289 617 45 555 280 405 248 560 327 156 82 296 340 649 548 22 43 434 694 14 674 => the sum is 9513 rather than 9855
Problem in row 18: 194 23 364 539 622 305 567 725 502 359 333 664 671 66 286 213 387 11 464 537 500 122 506 419 596 338 624 => the sum is 10937 rather than 9855
Problem in row 19: 24 324 577 543 277 1 261 178 295 692 78 42 9 271 29 33 700 384 582 30 686 228 463 389 510 408 720 => the sum is 8734 rather than 9855
Problem in row 21: 593 574 155 223 455 684 76 200 592 130 678 581 136 515 460 722 487 375 687 62 309 104 3 28 505 117 58 => the sum is 9509 rather than 9855
Problem in row 22: 252 625 673 244 670 79 517 59 115 486 103 414 611 150 240 401 96 569 653 379 12 703 196 49 249 89 530 => the sum is 9164 rather than 9855
Problem in row 26: 88 125 439 160 421 152 391 367 251 647 139 607 481 153 303 668 114 398 424 631 524 256 718 111 623 20 541 => the sum is 9752 rather than 9855
Problem in diagonal 0: 145 235 721 100 411 321 707 320 278 555 232 430 353 525 509 36 274 11 582 237 309 703 260 688 373 20 612 => the sum is 9947 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 729 363 329 429 210  79 536 433 425 596 719 568 197 242   1 198 238 148 277 247 477 683 631  71 326 548 155
 533 722  45 195  38 559 234 331 123  69 265 162 154 165 724 485 602 138 179 253 388 662 607 484 507 670 561
 274 450 414  68 304 615 310  82 299 375 509 157 542 643 651  46 690 296 678   6 471 616 316 252 262 236 293
 345 587 424 692 221 426 118 635 147  88 318 571  13  53 171 708 524 341 458 161 712 342 231 626  98 550 295
 307  85 311  32 590 525 464 144 637 391 394 268 454 519 491 109 503 324 211 606  80  26 709 402 703   7 563
 543 333 702 526  47 567 672 500 417 334  39 203 530  74 573 499 627 474   4 336  81 707  92 166 713  63  33
 209 225 237 522 244 668 364 682 184 580 613 439  35 432   9 413 410 428 191 623 537 467 256 681  21 150 235
 145 697 189 645 725 461  48 100  29 163 107 642  76 281 135 122 527 182 261 535 494 110 502 459 397 368 367
 517 696 216  14 102 120 199 255 520 539 419 501 636 257 506 660  40 534 515 232 103 335 149 654 366  94 676
 505 168 532 508 325 323 704 222 152 420 462 360 665 344 516 605 164 483 434  99 689 292 130 633 422 283 398
 579  83 114 218 684  18 469 640 445 249 416 321 175 482 207 215 188 663 468 259 558 187 655 504 275 180 603
 139 451  22 440 401 436 473 116 463 260 544 106 347 475 399 407 664 421 628 406 365 371 566 190 431 317  17
  72 412 575 720 387 455 488 389 382 379  66 521  37 404 384 396 392 403 337 409 385 383 381 400 226 192 280
 671 160 597 481 287  16 121 119 285  91 677 611 523 582 452 357  62 446  84 476 229 196 340 415 608 497 472
 393  57 349 390 650 423  64 560  28 254 591 648 598 351 290 572  56 470 140 680  27 437 269 487  23 486 562
 239 183 694 230 585 266 619 723 612 581 213 656 378  58 136 272  42  41 332 405 449  78 358 273 531 408 493
 112 301  86 303 705  87 284 302 411 131 315 599 514 698 327 270 320  12 717 706 278 227 577 173 552 430 418
 659 373 314 448 125  49 377 456 513 217 361 305 339 438  20 688 466 241 556 679 646 137 291 169 194 617 177
 104 251 675 208 370 624 289 376 214 489  10 212 127 716 282 271 380 584 240 443 610 453 129 565 276 479 478
 622 330 246 250 309 726  55 170 691 653 639 540 538 126 638 549 629 652  43 178 156  51 142  89 588 186  59
 386 586  95 352 518 204 146 143 322 308 557 128 644  93 661 219 346 201 620  67 545 569 667 101 457 714 206
 700 167 649 604 348 369 553  65 666 176   3  61 728  15 264  70 328 685 547 298 245 338 343 441 442 618 132
 205 495 141 570 174 113 313 541 267 711 224  44 306 721 589 595  96  90 359  34 263 592 319 258 647 634 554
 286 576 555 117 427  11 727 193 200 294 134  97 279 693 435 374 715 395 350 621 181 512 228  31 355 444 625
 551 593  75 601  60 510 105 574 111 699 687 460 248 243 108 115 288  77 528  52 609 223 362 695 312 300 669
   5  19 583 159 529 641 658 657 594 297 353   2 614 578 701   8 356 630 674 498 124 151 372 600  73  30  54
  25 492 686 133 490 564 465 447 718 511 220 673 158 172 185 632 202 496  24 546 153 710 233  36  50 354 480

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00575e+07us (= 10057.5ms, 10.0575s)
Satisfaction error: 3
Number of search iterations: 2990
Number of local moves: 2468 (including on plateau: 2416)
Number of local minimum: 26 (including on plateau: 303)
Number of resets: 0
Number of restarts: 0

Problem in row 8: 145 697 189 645 725 461 48 100 29 163 107 642 76 281 135 122 527 182 261 535 494 110 502 459 397 368 367 => the sum is 8767 rather than 9855
Problem in row 10: 505 168 532 508 325 323 704 222 152 420 462 360 665 344 516 605 164 483 434 99 689 292 130 633 422 283 398 => the sum is 10838 rather than 9855
Problem in row 26: 5 19 583 159 529 641 658 657 594 297 353 2 614 578 701 8 356 630 674 498 124 151 372 600 73 30 54 => the sum is 9960 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 132 243   1 130 610 688 173  34 197 709 209 440 459 464 428 258 585 558 169  69 214 433 161 666 639 526 660
 268 285 708 460 123 486 219 481 190  94 469 575 155 548 263 121 164 484 563 172 136 145 698 407 644 693 304
 485 499 451 409 560 621 475 471 654  59  46 311 348  43  57 576 418  85  37 339 389  72 616 262 470 482 620
 564 637 221  36 723 507 320 597 579 273  25  51 394 284  26 336 177 670 141 125 298 534 246 523 640 619 309
 445 456 513 668 614 159 541  88 322   3  13 150 657 461 496 101 140 306 487 694 312  87 411 684  50 393 604
 315 508  16 319 382 330 538 596 374 549 592 220 237 690 302 255 250  91 283   9 532 567 489  44 168 566 633
 413  11  67 671 217 147 479 556 265 466 266 254 511 203 593 578 476 465 149 512 537 661  70  58 342 611 277
   5 685 495  33 509 242  77 718  14  10 525 286 714 598 516 215 719  29 653 543 573 200 510 146 599  81 160
 609 222 120 303   7 128 602 423 251 636 503 559 504 198   2 498 664 700 506 712 497 710  52 294  31  38  86
 156  84 675  97 643 687 328 301 676 366 535 419 256  79 713 157 162 494 104 103  41 626 569 478  96 420 590
 672 430  56 425 452 184 239  99  27 240 135 244 317 613 577 455 415  45 519 391 622 649 163 167 472 682 565
 520 583 354 275 404 229  48 477 655 667 457 601 561 502 106 417 223 299 331  19 711 112 245 375 313 347  24
 454 372 325 424 410 379 397 359 357 362  66 344 376 363 350 453 340 370 426 408 385 406 386 395 165 431 352
 364 402 436 390 360 380 398 438 369 278 356 381 384 388 414 367 371 383 365 353 377 181 358 349 346 335 332
  53 253 680  93 695   8 195  63  83 531 230 656  62 126 329 462 631 114 231 630 108 651  17  76 635  39 194
 166 728  21 527 638 247 615  73 490 603 134  22  65  64 699 634 176 341 199 545 645 208 605 488 697  47 178
 421 295 392 722 530 305 650 314 463 267 271 547  92 227 401 115  98 399 310 663 272 412 259 296 355 225 554
 632  78 293 432 300 533 290 264 249 260 446 107 608 333 483 500 437 171 138 289 542 403 624 316 443 584 100
 308 439 551 515 291  32 274 226 233 400 435 625 528 473 279 591 191 552 447 595 387 351 142 204 405 192 189
  23 345 148  55 416 586 288 186 606 492 674 261 213 185 187 683 493 641  28 361 201 474 458 553 212 659 427
 102 210 324 127 205 539 467 152 449 724 696 468 627 594 681 238  40 692 703 544 224 517 529 618 248 234 211
 727 705 646 720  89 236 196 555 153 241 689 658 179 174 180 216  12 232 704 139 491 276 536 175 373 124 429
 321 338 717 521 183 571 129 628 550 111  20 706 188  71 170 151 546 137 629 270 122 326 669 707 343 524 207
 648 131 182  75 117 505 396 701 378 623 337 144   6 109 292  54 600 307 158  90 729 580 281 617 540 518 691
 252 218 702 206  60  15 118 133 721 202 582 334 686 715 574 716 368 287 422 448  68  18 297 280 444 327 662
 726 110 568 570  35 522 678 257  49 607 587  42 116 677 642  61 679 441 581 514 119 143 434 235  80 154 228
  74 588 193 652 282 589 725 665 501  82 557 450 612 673  95 647 480 562 572 318 323 113  30 442 105   4 269

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00562e+07us (= 10056.2ms, 10.0562s)
Satisfaction error: 4
Number of search iterations: 3151
Number of local moves: 2639 (including on plateau: 2588)
Number of local minimum: 18 (including on plateau: 301)
Number of resets: 0
Number of restarts: 0

Problem in row 15: 53 253 680 93 695 8 195 63 83 531 230 656 62 126 329 462 631 114 231 630 108 651 17 76 635 39 194 => the sum is 7845 rather than 9855
Problem in row 21: 102 210 324 127 205 539 467 152 449 724 696 468 627 594 681 238 40 692 703 544 224 517 529 618 248 234 211 => the sum is 11163 rather than 9855
Problem in row 24: 648 131 182 75 117 505 396 701 378 623 337 144 6 109 292 54 600 307 158 90 729 580 281 617 540 518 691 => the sum is 9809 rather than 9855
Problem in row 27: 74 588 193 652 282 589 725 665 501 82 557 450 612 673 95 647 480 562 572 318 323 113 30 442 105 4 269 => the sum is 10603 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 726 149 606 440 539  76 491 708 135 225 182 329 233 223  58 330  87 281 123 254 635 505 374 213 205 114 701
 164 709 702 724 258 484 309 467 296 531 486 195 659 262 390 244 224   4  45 293 325  39 681 703 321 280  60
 556 729  20 252 328 444 634 181 286 700 207 384 499 358 596 194 197  47  97 647 169  46 642 419 674  81 468
 111 513  22 621 216 602 386 437  29  15 155 626 118 561 346 545 661 601 533 442 249  16  66 688 471 598 227
 206 485  75 288 605 266 208  37 226 636  41  69 690 707 191 685 154 340 279 131 112 185 591 691 265 529  10
 452 214 171 250 453 573 509 134 521 294 201 414 260 130 563 719  17 159 474 589 107 557 697 278 299 510 310
 200 610 133  99 487 530 572 408 313 540 679 595 153   5 711  86 712 212 303 142 218 275 230 562 534 461  85
 689 423 550 633 125 455 138 514 571  62 653 108 292  50 631 535 284 473 305 379 660 344  27 383 693 583 179
 273 356 339 426 240 168  91 268 421 361 415 187 549 256 160 128  14 538 480 695 706 643 576 357 348 715 145
 559 327 523  19  33 300 607 671 568 527 109 717 616 106  42 302 446 470 656   2 271 270 306 603  40 248 517
 186 170 673  63 372 312 666 551  93 331 434 403 555 369 580  43 401 368 608 307 102 543 127 541 322 536 199
 316 680 100 238 465  98 136 619  92 124 590 430 458 623 336 682 630 627 204 122 515 581   9 274  88 438 380
 483   1 388 469 476 119 638 259 492 450 315 429 424 464 378 237 560 528 366  32  38 407 399 247 696 156 404
 352 441 354 370 394 362 365 337 342 364 350 397 375 391 359 387 395 381 411 632 349 363 371  26 298 351 338
 676  54 462 353 728 672 718 335 166  28  30 257 343 650 295   3 345 699 188 382 537 173 220 267 618 202 454
 651 161 565 658 594 506 117 420 222  72 178 320  24  95 472 217 116 146 150 436 687 412 355 640 495 582 564
 297 162 367 180  23 228 241 277 668 667 333 319 449 507  96 497 289 435 544 721  53 670 432 172 578  13 637
 239 552 104 498 655 132 459 493 317 314 584  57 232 251 243   8 518 318 167 644 624 264 720 236 392 332 502
 113 126 725 377 532 433 304 504 389 577 360  65 144 494 482 704 570 625 211 569 593 600  64 654 525 402 678
 148 669 466 137  71  74  48 193 663 190 694 586 272 192 548 575 613 151 649 324 157 639 246 587  34 290 546
 413 604 103 524 163 652 139  25 234 409 451 121 183 714  31 457 684 710 585 184 141 326 554 334 445  70 599
  77 479 520 488 677 158 612 210 428 101 405 400  84 628 683 460 376  18  11   6 646  94 641 396  90 579 588
 622 522 242 417 147 727 723  73 542 722  52 692 105  79  67 174  80 291 447 439 511  89 175 347 553 611 406
 448 283 664  59 323 512  68 427 431 215 519 620 235 574 198  12 311 385 221 287 481 463 129  83 373 341 503
 592 393 308 189 176 263 416 615 547 285 261 475 558 398 489 609 456 276 675 229 418 443 422  55  49 115 143
  51   7 617 516 209 231 120 648 698 501 526 152 716  82 245 597 496 662 410 477 282 203 301  21 253 657 177
 255  36  56 567 566 478 140  44 165 614 645 508 629 686 665 425 219 110 713 490 269 705 500  78 196  61  35

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00565e+07us (= 10056.5ms, 10.0565s)
Satisfaction error: 6
Number of search iterations: 3915
Number of local moves: 3253 (including on plateau: 3204)
Number of local minimum: 28 (including on plateau: 379)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 726 149 606 440 539 76 491 708 135 225 182 329 233 223 58 330 87 281 123 254 635 505 374 213 205 114 701 => the sum is 8942 rather than 9855
Problem in row 5: 206 485 75 288 605 266 208 37 226 636 41 69 690 707 191 685 154 340 279 131 112 185 591 691 265 529 10 => the sum is 8702 rather than 9855
Problem in row 8: 689 423 550 633 125 455 138 514 571 62 653 108 292 50 631 535 284 473 305 379 660 344 27 383 693 583 179 => the sum is 10739 rather than 9855
Problem in row 19: 113 126 725 377 532 433 304 504 389 577 360 65 144 494 482 704 570 625 211 569 593 600 64 654 525 402 678 => the sum is 11820 rather than 9855
Problem in row 20: 148 669 466 137 71 74 48 193 663 190 694 586 272 192 548 575 613 151 649 324 157 639 246 587 34 290 546 => the sum is 9762 rather than 9855
Problem in row 24: 448 283 664 59 323 512 68 427 431 215 519 620 235 574 198 12 311 385 221 287 481 463 129 83 373 341 503 => the sum is 9165 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 729 143 162 393 496 650 138  39 542 450 368  43 491 319 274 719 712 675  99 371 210  48 167 124 299 492 702
 534 431 311 490 197 538 726 158 563 204 628 147 358  88 512 472  91 307 583 672 126  27 331 263  94 670 334
 249 664 161 278 562 313  70 164 570 403 696 566 166 194 203 519  73 389  23 425 671  42 636 289 649 716 136
 227 447 601 624 273 287 489 537 530 256 202 428 157 605 618 654 153 718 686 327  14 539 574 561 623 252 191
  95 141 551 612 364 177 684 655 683  74  75 473 432 398   8 156 308 284 373 559  61 556 610 569 180 294 483
 324 401 350 484 411 568 185 590 246 582 255 370 608  59 646 188 579 110 430 149  41 609 181 413 385  29 662
 353 615 323  80 700   7 303 715 300 642 627 356 676 651 690  81 272 714 355 276 378 127 117 639  50 281 386
 549 648 707 338 500 228 151 321 198 497 134 508 419 420  18 140  49 644 455 526 521 611 259 245  71 219 479
 115 461 266 540  16 511 326  30 693  93 258 103 599 509 504 460 498 593 518  13 297 486  34 532 475 443 482
 390  51 633 396 187 721 515 231 347 527 567 253  47  67 550 427 175 448 572 720 480 268  17  78 531 603  54
 211 724 453  44 663 678 595  52 291  40 474 701  12 172 154 695 444  25 257 280 129 384 634 507 709   5 522
 535 242 557 208 457 205 424 333 694 705 435  62 322 506 416 576 229 422  35  20 666 137 510 464  79 174 442
 622 452 218 544 163 113  55 305 503 470  92 600 399 637 383 410 657 146 145 625 660 237 111 379 232 501 196
 387 315 397 372 357 404 400 367 363 375 339 361 119 374 725 222 380 342 391 340 395 360 382 394 330 328 336
  96  58 708 168 728 241 230 588  86 283 516 238 310 711 301 125 412 195 459 635 665 314 478  68 573  11 658
 421   1 261 316 207 417 468 392 285 545 377 298 476 591 236 179 362 429 495 687 454 343 320 598 293 536 463
 150 123 446 632 528 437 462 438 456 346 317 722  56  53 426 105 250  32 525 487 440 652 341 469 493 365 104
 502 199 233 565 270  66 434 494  10 248  33 265 630 251 575 335 471 264 190 271 176 597 206 433   3 513 325
 697 144 619 704 594 345 189 306 290 114 217 221 698 523 201 614  57 182 239 128 107 706 183 337 673 596 171
 677 629 405  36 165 118 713 192 560 212 659 514 352 155 641 581 580 669 142 439 585 717 408 139 101 135 617
 121 529 406 692  38 645 223 436 112 592 275 173 220 169 209  84 564 499 160 329 543 309 604 558 458 621 286
  72 100 402 344 656 152 423 517 369 279 727 548 553 488 318 354 481 577 116  28 148  97 682 643 520 216  45
 234 710  24 130  76  21  15 288 224 626 587 620 571 292   6 616   9 296 685  19 407 277 366 120 213 225  26
 606 415 109  83 312 691 262 226 332  69 170 102 106 689 465 267 351  85 244 159 607 667 723  87 304 122 640
 269 533  64 349  98 555 554 131 466 674  90 505 359 302  46   2 638 552 631 200 602 445 578  31 243 414 524
 668 132  37 247 449 485 688 647  65 467 477  89 541 418 184 193 381 254 699 584  63 240 295 235 661 441 215
  22 547 451 186 388 282 133 703  77  82 260 589 178 214 546 681 679   4 348 586 409  60 108 680 613 653 376

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00521e+07us (= 10052.1ms, 10.0521s)
Satisfaction error: 8
Number of search iterations: 2662
Number of local moves: 2173 (including on plateau: 2126)
Number of local minimum: 21 (including on plateau: 305)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 249 664 161 278 562 313 70 164 570 403 696 566 166 194 203 519 73 389 23 425 671 42 636 289 649 716 136 => the sum is 9827 rather than 9855
Problem in row 4: 227 447 601 624 273 287 489 537 530 256 202 428 157 605 618 654 153 718 686 327 14 539 574 561 623 252 191 => the sum is 11573 rather than 9855
Problem in row 7: 353 615 323 80 700 7 303 715 300 642 627 356 676 651 690 81 272 714 355 276 378 127 117 639 50 281 386 => the sum is 10714 rather than 9855
Problem in row 16: 421 1 261 316 207 417 468 392 285 545 377 298 476 591 236 179 362 429 495 687 454 343 320 598 293 536 463 => the sum is 10450 rather than 9855
Problem in row 18: 502 199 233 565 270 66 434 494 10 248 33 265 630 251 575 335 471 264 190 271 176 597 206 433 3 513 325 => the sum is 8559 rather than 9855
Problem in row 20: 677 629 405 36 165 118 713 192 560 212 659 514 352 155 641 581 580 669 142 439 585 717 408 139 101 135 617 => the sum is 11141 rather than 9855
Problem in row 23: 234 710 24 130 76 21 15 288 224 626 587 620 571 292 6 616 9 296 685 19 407 277 366 120 213 225 26 => the sum is 7683 rather than 9855
Problem in row 24: 606 415 109 83 312 691 262 226 332 69 170 102 106 689 465 267 351 85 244 159 607 667 723 87 304 122 640 => the sum is 8893 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 255 332 373 569 437  14 650 250 337 585  26 560 112 104 245 665  52 507 381 589 710 297 120  87 213 201  43
 119 512 659 237 410 310 289 501 577 221 639 590  57 599 281 216 254  77  44 497 530 481 280 307 398 725  45
 208 544 553  25 624 420 282 317 214  41 116 155 572 631 692 509 313 269 361 220 224 605 184 458 719 163 436
 616 628 689  59 582 270 443 652 421  64 491  47 141 430 584  93 296 479 132 656  70 159 578 375 106 305 489
 379 195 626 294 453 684 126 711 259 341  73 133 470 299 181  16 535 274 607 717 128 594 592 486 190  81 411
 324 598 482 432 217 170 617 574 223 459 325 295  33 619 306  76 418 160 562 304 579 205 702 266 342  53 514
 706 273 401 460 285  74  54   3 539  58 676 503 604 538 454 440 130 333 151   7 290   4 716 657 462 524 513
 523 643  42 334 718  98 570 703 188 516 468  91 662 606 472 499 722 576 475 541 248  22  56 202  89 111 249
 263 533 517 276 376 180 561 383 500  28 131 186 595 465 663 161   2 240 177 164 372 327 698 540 646 536 335
 647 261 442 593 723 146 144 446 484 515 168 284 303 311 124 433 469 173  66  50 206 621 392 176 532 550 596
   8 174 218 268 461 726 185 600  18 615 412 330 101 318 529 148 563  13 526 431 636 673 612  80 559 557  94
 645  82  29 485 534 429 487 445 222 355 200 211 701 641 356  20 527 714 674 118 704 293 521 312  83 669 423
 425 374 394 434 448 367 439 386 403 407 107 371 399 397 152 451 427 388 347 384  31 419 387 370 349 435 364
 393 366 390 359 416 408 340 377 729 320 309 380 405 256 389 323 413 348 365 368 360 354  65 329 362 385 346
 314   5 226 415 622 228 409  27 199 713 474 715 705 655 471 632 189 242  51 345 210  84 629 558 145 483 109
 212 363 728 301  12 230  21 602 139 568 586 637 552 122 219 583 623 633 456 638  38 495  62  90  67 591 287
 531 712 235  68 209 275 697 194 450  79  78 326 417 105 625 321  37 422 424 653 382 649  39 630 603 693   1
 554 300 452 668 264 357 267 508 157 178 227 395 288 257 322 182 654 525 179 232  11 681 542 660 225 215 555
 351 153 277 369 134 571 721 291 272 400 138 480 519   6 449 233 627 414 246 447 620 253  75 137 707 352 613
 396 683 575  10  55 467 551 113 466 258 610 700  63 229  86 691 502 147 339 308 328 699 319 391 455  61 183
 504  96 331 666 166 100  69 546 402 404 727 493 651 708   9 358 135  88 609  34 682 117 241 204 283 597 635
 150 238 158  60 125 696 236 203 175 642 567 426 191  17 265 724 251 564 608 108 244 127 522 478 198 488 278
  30 167  92 685 548 580  71 162 302 679 688 644 463 694 103 457  85 315 640 494 677 169  95 709 675 172 292
 444 102  46 506 406 511  72 247 588 498 316 142 344  36 670 614 252 658 193 518 566 545 234 441 129  97 680
  32 565 207 438 171 648 505  99 260 192 720  48 343 123 556 353 231 473 686 618 336 581  23 114 549 464 520
 239 428 573 243 338 634 671 165 667 695  40  35 149 197 156 547 672 687  19 143 477 115 661 611 490  49 154
 587 528 140 601 121 262 378 350 664  24 543 678  15 492 496 110 476 136 537 271 196 286 510 187 279 298 690

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00483e+07us (= 10048.3ms, 10.0483s)
Satisfaction error: 6
Number of search iterations: 3055
Number of local moves: 2611 (including on plateau: 2562)
Number of local minimum: 17 (including on plateau: 320)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 255 332 373 569 437 14 650 250 337 585 26 560 112 104 245 665 52 507 381 589 710 297 120 87 213 201 43 => the sum is 8714 rather than 9855
Problem in row 8: 523 643 42 334 718 98 570 703 188 516 468 91 662 606 472 499 722 576 475 541 248 22 56 202 89 111 249 => the sum is 10424 rather than 9855
Problem in row 12: 645 82 29 485 534 429 487 445 222 355 200 211 701 641 356 20 527 714 674 118 704 293 521 312 83 669 423 => the sum is 10880 rather than 9855
Problem in row 20: 396 683 575 10 55 467 551 113 466 258 610 700 63 229 86 691 502 147 339 308 328 699 319 391 455 61 183 => the sum is 9685 rather than 9855
Problem in row 22: 150 238 158 60 125 696 236 203 175 642 567 426 191 17 265 724 251 564 608 108 244 127 522 478 198 488 278 => the sum is 8739 rather than 9855
Problem in row 23: 30 167 92 685 548 580 71 162 302 679 688 644 463 694 103 457 85 315 640 494 677 169 95 709 675 172 292 => the sum is 10688 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 357 292 140 350 247 623 393 446 435 561 251 673  11 645 125 465 678 481  20 239 512 562 202 139 279 176 553
 451 701 110 507  95 401 643 482 108 248 390 196 249 682 692  61  54 180  57 527 152 614 378 584  28 675 590
 342 395 235 647 665 506 698 633 543 320 144 625 566 529 344 571  87 684 119 460 310 558 702 191  65 428 338
  78  90   1 434 589 700 604 149 487 689 713 227 346 298 644 514 515 711 477  71  49 241 215   5 299 613  40
 666 164 437 610 608 508 179 691 615 287 282   9 419 290 188 168 105 258  52 652 611 186 599 268 402 564  37
 556 485 267 156  89 560  99 234 225 618 630 288 199 120  24 183 662 328 325 668 664 612  84 484 491 302 502
 708  45  74  42 368 719 546 157  29 667   8 539 226 398 242 450  63 488 683 498 472 240 624 519 104 706 177
 185 200 453 576 178 195 617 559 109 586 345 406 454 100 492 206 486  97 511 552 557 601 136 264 544  83 363
  43 530  79 520 118 656 660 650 403 111 685 606 526 563  80 635  27 360 464  46 366 473  12  26 476 531 209
 458  67 582 311 449 503 329 341 517 462 659 150 276  47 720 301 372 271 340 494  64 198 541 695 184  50 474
 580 493 272  86 308 275  58 594  16 205 286 688 121 128  76  17 549  93 609 690 714 470 383 670 162 173 245
 443 457 676 475 407  51 127 166 629 414 321 438  33 410 187 420 413 371 170 424  72 427  92 351 622 638 621
 408 364 411 381  59 439 362 441 376 392 412 375 415 425 370  68 377 400 382 374 243 518 369 352 353 440 349
 385 266 224 387 358 359 380 348 418 409 291 332 399 405 396 384 373 300 343 391 728 197 354 397 319 347 365
 172 640 568 422 646 112 536 146 277 154 327 555 116 210 421 102 591  35 219 261 337 657 499 433 671 356 663
  53 314 619 703  77 192 723 501 213  44 653 479 469 331 306 293 129  34 273 339 212 442 466 495 727  91 677
 236 138 718 124 681 305 581 444 721 132 137 122 404 429 628 280 294 522 165  55 330 616 284 217 430 169 693
 297 259 636 216 214 252 304 244 285 303 218 189 687 281 230 423 649 461 525 278 295 324 679 211 532 540 323
 222 704 504 361 595 605 153 334 250  13  85 490  60 725 583 627 335 262 194 316 386 265 538 436  15 694 103
 167 585 148 587 270 134 326 201 151 131 106 220 143 658 651 547 389 416 642 254 570 101 641 707 174 480 456
 524 190 489 528  56  31 147 550 289 716  98 592 574   7 107 717 207 510 712 565 133 567  81 158 602 163 542
 171 521 579 229 145 204 263 221 483 548 573 445 296 578 467 463 203 322 496  88 417  96 455 379 283 509 142
  75 631 228  10  73 431 471 551 697 569 246  69 672 260 307 253 575 312 593 175 223 620  19 626 680 233 256
 600 333 500 126 535 533  82  21 141 160 452  66 318 113 161 367 336 724 269 588 516 159 632 686 710 534 193
 729 355 705 238 726  32 257 115 309 426 459 231 715 208 394  94 505  62 669   6 655  22 117  14  23  25 388
 634  38 130 155 603 255 313  39 661  36 637 123 648 478 497 639 699 577 114 709 237  48 572 545 448  18   2
 315 598  70 674 696 274   4 597 468 654 447 722 513 537 523 607 182 596 432 135  30  41 181   3 232 317 554

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00584e+07us (= 10058.4ms, 10.0584s)
Satisfaction error: 9
Number of search iterations: 3558
Number of local moves: 2999 (including on plateau: 2953)
Number of local minimum: 20 (including on plateau: 368)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 342 395 235 647 665 506 698 633 543 320 144 625 566 529 344 571 87 684 119 460 310 558 702 191 65 428 338 => the sum is 11705 rather than 9855
Problem in row 4: 78 90 1 434 589 700 604 149 487 689 713 227 346 298 644 514 515 711 477 71 49 241 215 5 299 613 40 => the sum is 9799 rather than 9855
Problem in row 7: 708 45 74 42 368 719 546 157 29 667 8 539 226 398 242 450 63 488 683 498 472 240 624 519 104 706 177 => the sum is 9792 rather than 9855
Problem in row 11: 580 493 272 86 308 275 58 594 16 205 286 688 121 128 76 17 549 93 609 690 714 470 383 670 162 173 245 => the sum is 8961 rather than 9855
Problem in row 15: 172 640 568 422 646 112 536 146 277 154 327 555 116 210 421 102 591 35 219 261 337 657 499 433 671 356 663 => the sum is 10126 rather than 9855
Problem in row 22: 171 521 579 229 145 204 263 221 483 548 573 445 296 578 467 463 203 322 496 88 417 96 455 379 283 509 142 => the sum is 9576 rather than 9855
Problem in row 25: 729 355 705 238 726 32 257 115 309 426 459 231 715 208 394 94 505 62 669 6 655 22 117 14 23 25 388 => the sum is 8479 rather than 9855
Problem in row 27: 315 598 70 674 696 274 4 597 468 654 447 722 513 537 523 607 182 596 432 135 30 41 181 3 232 317 554 => the sum is 10402 rather than 9855
Problem in diagonal 1: 553 675 65 5 599 612 472 552 464 271 549 420 370 405 116 479 137 303 250 201 147 204 73 126 705 38 315 => the sum is 9106 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 728 694 301 553 218 202  16 572 563 331 326 343 720  22 524 466 316 602  87  99 200 234 254 656 406 434 153
 124 243 117 314 141 155 561 233 101 414 108 291 453 589 702 385  31  64 654 591 432 368 241 567 313 174 460
 111 519 678 213  55 272 120 653 723 321  98 661 393 484 138 283 682 100   5 649  37 669 305 542 578  89  34
 195 240 442  82 373 584 277 577  76 568 616 538 115 635 149 534 713 322 548  10 128 676 487 593 651 248 229
 537 510 614 302 278 169 131 369  77 372 324 708 665 116 592 150 350  92 342 273 509 606 205 501 125 673 168
 707 333 560 500  95 550 420  47  25 485 347 325 585 490 639  94 426 543 658 147 196 549 431 469 539 590 646
 558 474 701 257 253 129 475 311 433 250 214  91 467 223 575  54 123 492 521 225 415  44 604 445 518  60  14
 477 621  36 219 569 660 227 437 695 472 489 692 374 725 685 513 135 523 110 583 209 395 197 189 237 412 323
 497 107 435 625 600   6 491 540 505  17 222 535  66 242 425 688 623 309 163 464 187 164 717 473  28 715  11
 286 181 727  67  56 520 210 693 551 310 598 479 289 265 158 709 160 564 236 162 566 161 648 411 662  41 145
 644 256  18 175 396 512 533 282 679 358 595  57 198 498 624 136 556 361 172   7  70 268 622  75  29 307 618
 157 133 192 609 721 470 351 348 231  88 386 522 423 246  30 390  63 346 284 647 547 383 327 215 619 641 486
 176 318 421 429 165 389 384 419 418 526 574 370 388 392 380 408 366  50 357 251 132 367 341 364 378 402 690
  97 304 617 594 668 697 719  86 379  59  21 559  42 140  81 340 674  65 428 699 689 645  39 249 465 319 180
 643  24 462 468 148 308 628 722 263 404 672 255 297 349 334  96 247 599 144 280 121 541 555 154 613 137 391
 295 413 238  40 303  74 281 455 315 636 337 317 687 244 269 507 528 671 448 359 300 156 267 712 306 292 405
 142 177 517 338 530 729 483 212 239 211 716 588 506 287 546 224 290 220 705 199 328 608  85 191 710 204 276
 603 664  13 703 704 362 152 228 446 579 458  71 221 657 365  83 183  12 684 552 626 207 443 629 194 461 698
 670 573 299 652 516 293 611  33 252 683  93 134   1 113 494 463 216 360 451 642 312 471 330 226 441 262 264
 438 724 398 449 397 496  23  15 260 270 106 409 610 504 266 659  27 329 502 186 714 232  48 718 354 531 190
 376   2 650  84  51 355  62 105 371 511 363 188  46 544 271 454 122 637 596 481 166  58 675 686  20 480 401
 320 410 503 726 403 167 667 245 184  79 130 476 450 640 139 185 532 681 335 666 381 416 109 353 102  78 478
 382 536 173 118 206  49 482 422 103 529   4 680 565 151 430 562 400 126 439 440 597 427 399  72 457 499 607
 424 201 171 447 700 230 332 104 576 581 706 182 114 417 627 615 620 452  61  68 634 663  53  69 275 630 525
  52 375  43 178 298 285 179 677 632 170 508 193 633 159 274   9 459 407  35 143 514  73 387   3 444 601 554
 208 527 235 336 655 580 344 582 631 605 586  45 288 691  19 261 557 217 345 394 352  38 571  90 279  80 339
   8 296 294 377 356 612 696 488 127  26 258 146 259  32 119 587 456 711 545 638 493 436 515 203 112 495 570

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00574e+07us (= 10057.4ms, 10.0574s)
Satisfaction error: 15
Number of search iterations: 2910
Number of local moves: 2445 (including on plateau: 2405)
Number of local minimum: 23 (including on plateau: 302)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 728 694 301 553 218 202 16 572 563 331 326 343 720 22 524 466 316 602 87 99 200 234 254 656 406 434 153 => the sum is 10020 rather than 9855
Problem in row 2: 124 243 117 314 141 155 561 233 101 414 108 291 453 589 702 385 31 64 654 591 432 368 241 567 313 174 460 => the sum is 8826 rather than 9855
Problem in row 3: 111 519 678 213 55 272 120 653 723 321 98 661 393 484 138 283 682 100 5 649 37 669 305 542 578 89 34 => the sum is 9412 rather than 9855
Problem in row 4: 195 240 442 82 373 584 277 577 76 568 616 538 115 635 149 534 713 322 548 10 128 676 487 593 651 248 229 => the sum is 10606 rather than 9855
Problem in row 5: 537 510 614 302 278 169 131 369 77 372 324 708 665 116 592 150 350 92 342 273 509 606 205 501 125 673 168 => the sum is 9758 rather than 9855
Problem in row 6: 707 333 560 500 95 550 420 47 25 485 347 325 585 490 639 94 426 543 658 147 196 549 431 469 539 590 646 => the sum is 11396 rather than 9855
Problem in row 7: 558 474 701 257 253 129 475 311 433 250 214 91 467 223 575 54 123 492 521 225 415 44 604 445 518 60 14 => the sum is 8926 rather than 9855
Problem in row 8: 477 621 36 219 569 660 227 437 695 472 489 692 374 725 685 513 135 523 110 583 209 395 197 189 237 412 323 => the sum is 11204 rather than 9855
Problem in row 11: 644 256 18 175 396 512 533 282 679 358 595 57 198 498 624 136 556 361 172 7 70 268 622 75 29 307 618 => the sum is 9046 rather than 9855
Problem in row 17: 142 177 517 338 530 729 483 212 239 211 716 588 506 287 546 224 290 220 705 199 328 608 85 191 710 204 276 => the sum is 10261 rather than 9855
Problem in row 18: 603 664 13 703 704 362 152 228 446 579 458 71 221 657 365 83 183 12 684 552 626 207 443 629 194 461 698 => the sum is 10998 rather than 9855
Problem in row 21: 376 2 650 84 51 355 62 105 371 511 363 188 46 544 271 454 122 637 596 481 166 58 675 686 20 480 401 => the sum is 8755 rather than 9855
Problem in row 24: 424 201 171 447 700 230 332 104 576 581 706 182 114 417 627 615 620 452 61 68 634 663 53 69 275 630 525 => the sum is 10477 rather than 9855
Problem in row 25: 52 375 43 178 298 285 179 677 632 170 508 193 633 159 274 9 459 407 35 143 514 73 387 3 444 601 554 => the sum is 8285 rather than 9855
Problem in diagonal 1: 153 174 578 593 205 549 415 583 163 564 556 390 380 140 297 317 716 579 252 15 62 167 206 447 43 527 8 => the sum is 9079 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 571 247 309 326 346 523 322 171 615 361 624 717 582 410 644 201 365  30  41  38  26 115 274 265 715 289 728
 369 104 542 317 721 270  56 684 132 324  92 607 655 444 294 545  33 625 213 168 276 442  48 299 610 680 209
  27 231 386 637 402 255 685 343 116 192 521 370 544 559  37 667 602   7 125 690 616 122 572 305 531  72 241
 349 173 476  24 632 145 359 593 495 694 452 663  59 217 165 584 237 140 709 590 464 144  23 657 334 367 110
 161 277 405 109 553 664 672  10 392  77 301 182 662 698 272 639  91 368 248 258 651 149 548 387 504 134 443
 606 716 695 128 647 396 674 412 470 314 722  11 214 312 589 244  60 159  21  18 426 519 198 185 222 720 177
 238  52 179 371  43 585 172 373 105  63 526 472 413 152 153 608  53 658 551 118 456 453 648 211 445 604  22
 666 727 242 178 518 626 283  15 517  25 705  39  50 136 617 202 549 699  45 500 556 652 191  65 441 587 560
  99 434 166 645 344 358 467 485 287 356 554 687 640 573 253 117 281  94 411 336 401  96 421 455 232 539 124
 629 501 194 497 570 578 269 649 139  76  51 457  61 535 290 204 557 433  95 700 418 133 565  84  68 503 599
 189 220 679 619 481 427 106 534 451 408  82 525 210 486 164 527 483  36 598 540  46 245 419 494 325 162 399
 506 345 613 157 101 362 348   2 304 678 697 591 190 206 400 477 291 409 708 609 120 439  86 385   6 357 468
 490 404 347 630 440 516 634 114 537 212 338 284 425  40 372 196 208 600 195 223 319 329 438 611 424 254 275
 407 352 381 337 566 174 353 327 271 447 257 397 181 623 393 360 469 378 502 342 268 302 310 335 340 480 303
 508 330  17 437   9  57 298 729 250 215 562 714 239 389 226 704 665 488 564 403 107   8  87 561 363 297 628
 377 509 229 459 354 341 532 429 315 446 383 264 465 293 430 510 260 235 233 646 285 376 295 219 388 249 333
 184 487  54 450 102 108 111 635 207 726 320 515  89 155 351 520 612 422 203 160 633 323 432 574 642 282 558
 682 259 278 420 186 707 296 313  78 246 316 428 332 482 170  83  98 384 380  16  29 701  97 127 414  31 318
 339 691 643 395 328 536 677 496 256 586 205 188 605 279 581 641  67  79 156 180 130 541 151 552  93  66 394
 594  13 514 236 266  35 146 113 718 143 533 119 622 580 596  20 499 183 390 689 511 489 583  12 614 588  49
 547 595 471 460 603 546 175 240 725 252 199 331 218   3 458  62 350 436 692 696 579 292 138 158  88 406 135
  85  47 234 306 417  58 415 675 193 638 528   1 416 529 513 103 661 567 512 462 576 216 671  75 154 228 575
  32 723 688 670 187 131 262 121 668 435  90 321 492 141 230  74 601 129 550 267 197 597 543 653 176 423 454
 618 706 366 163 522 364 592 713 355 673 524 142 627 621 479 148 686 669 538 448  70 631 474 577 449 263 112
 379 243 167   4 375 569 555 147 505  73  34  81 126 693 568 478 227 484  69 463 676 261 286 398 563 719 712
 123 169 307 224  42 150 391 311 683 702 225 288 710 280 137 466 200 507 724  44 711 660 654 530  55  64 498
  80 300 273 656 100 374   5 221  71 493  14 461  28  19 473 475 650 636 382 251 308 620 703 681 659 491 431

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00578e+07us (= 10057.8ms, 10.0578s)
Satisfaction error: 5
Number of search iterations: 3084
Number of local moves: 2607 (including on plateau: 2557)
Number of local minimum: 26 (including on plateau: 284)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 369 104 542 317 721 270 56 684 132 324 92 607 655 444 294 545 33 625 213 168 276 442 48 299 610 680 209 => the sum is 9759 rather than 9855
Problem in row 7: 238 52 179 371 43 585 172 373 105 63 526 472 413 152 153 608 53 658 551 118 456 453 648 211 445 604 22 => the sum is 8724 rather than 9855
Problem in row 8: 666 727 242 178 518 626 283 15 517 25 705 39 50 136 617 202 549 699 45 500 556 652 191 65 441 587 560 => the sum is 10391 rather than 9855
Problem in row 18: 682 259 278 420 186 707 296 313 78 246 316 428 332 482 170 83 98 384 380 16 29 701 97 127 414 31 318 => the sum is 7871 rather than 9855
Problem in row 24: 618 706 366 163 522 364 592 713 355 673 524 142 627 621 479 148 686 669 538 448 70 631 474 577 449 263 112 => the sum is 12530 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 565 296 724 577 353 320  67 665 165 232 729  39 198 608 677 453   7 587 399 365 504  74  27 506 532  51 135
 699 180 153 192 722   4 149 639 562 547 635 418 109 293 564 488 196 268  86 456 102 597 602 407 168 624 708
 526  96 697  59 632 477 236 352 432 652 330  15 623 115 132 576 138 614 242  63 579 384 507 133 470 461 314
 233 659  68 329 310  75 472   6 431 578 203 424 683 177 648 584 588 148   8 636 658 140 220 604 551  18 404
 332 100  28 187 535 554 725 710 718 230 160 619  49 316 719 689  24  20 605 189 276 704 435  90   3 188 650
 607 702 264 156 172 159 303 610 190 191 359 213 103 568 580 171 228 621 517 346 592 567 616 425 248 260  87
 599 108 395 202 112 308 613 137 351 528 302 570 401 144  77 241 581 307  58 692 634 415  55 557 227 709 305
 572 194 363  33 319 721 550 501 275  45 685 426 101 214 466 281 537 713  95  79 705 128 446 249 596 388 173
 322 443 267  72 556 318 219 152  99 240 150 375 530 643 204 575 297 549 566 598 298 682 673 257  17 417 336
 176 522 594 255   9 629 131 406 479 166 482 454 179 615 514 201 653 483 696  19 111 226  66 601 471 183 534
 462 261  30 480 548 441 625 116 286  73   1 272 449 362 181 649 451 258 434 688 440 533 195 458 158 463 541
 444 421 460 701 217 143 433  76 569 266 300 503 288 436 412 409  64 429 419 252 123 553 544   2 675 465 251
 393 367 391  82 411 394 207 413 229 340 398 358 645 380 396 366 392 378 376 289 410 369 377 333 385 403 373
 408 382 113 543 244 344 350 400 499 117 589  92 390 552 386 343 361 354 349 657 304 355 360 334 348 368 313
 315  13 224 342 706 357 694  36   5  97 306 519 338 282 676 370 476 199 325 505 324 474 703 323 666 321 259
 438 681 402 727 134 527 542 234 124 590 497 291 273 106  38 491 182 162 185 167 237 455  26 583 595 563 119
  37  83 484 684 285  34 397 726 660  81  52 536  32 263 223 622 371 686 715 274  21 573 312 345 389 642 328
 246 591 510 647  42 452 335 311 294 414 284  60 593 448  93  56 630 661 114  69 538 383 486 670 356 502  70
 728 447 586 379 422 247 515 105 450 459 723 582 161  14 209 714 287 428  23  57 262 295 606  11 529 174 442
  89 210 437 279 208 512 216 222 559 651 540 521 439 490  91 225 127 509 545 151 405  71 129 525 511 531 662
 118 518 646 637 197 218 169 492 364 720 170 430 561 717 326 163 420  62 644 508 500  35 680 193 292  10  65
 672 221 164 277 678 146 464 574  61 107  54 215  29 184 416 250 690 457 655 698 656 253 178 687 141 301 627
 122 571 669  78 487 626 493 445 640 695  53  44 478 609 139  84  85 120 628 546  43 667 125 711 283 239 175
 200 331 270 516 381 278 155 617 157 130 600 467 712 211 494  88 603 205 347 468 641 238  47 290 145 679 585
 231 633  16 485 121 212 674 475 693 372 539 427 671 341 654 206 700  31  12 136 256  25 555 142 147 612 489
 299 327 620 423 558 668  41  98 469 716 664 374 481 104 271  40 243  46 495 638 110 186 254 265 707 235 523
  22 498 280 513 496 691  80 337  94 618  50 611 339 663 269 520 524 560 317 309 126 473 631 154 245  48 387

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00562e+07us (= 10056.2ms, 10.0562s)
Satisfaction error: 3
Number of search iterations: 3739
Number of local moves: 3147 (including on plateau: 3095)
Number of local minimum: 23 (including on plateau: 337)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 699 180 153 192 722 4 149 639 562 547 635 418 109 293 564 488 196 268 86 456 102 597 602 407 168 624 708 => the sum is 10568 rather than 9855
Problem in row 7: 599 108 395 202 112 308 613 137 351 528 302 570 401 144 77 241 581 307 58 692 634 415 55 557 227 709 305 => the sum is 9628 rather than 9855
Problem in row 16: 438 681 402 727 134 527 542 234 124 590 497 291 273 106 38 491 182 162 185 167 237 455 26 583 595 563 119 => the sum is 9369 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 698 421 409 446 600 705 528  82 526 501  14 142 263  34 368 384 109 567 163 213 416 509 618 355  12  63 494
 401 453 170 183 560 545 153 495 702  42 644 524 275 467 488 133 722 410 350 106 500 534 270 185 530 670  19
 519 551 268  73 649 521  40 728 190 479 717 377 256 259 192 277  61 430 286 512 333 637 456 128 724  45 147
 111 167 598  87 432 281 255  50  60 627   7 296 720  66 629 685 546 654 254 723  85 481 564 621 262 442  70
  48  98  13 507 451   1 538 250 492 245 666 664   8 399 568 293 565 248 342 599 624  89 613 634 253 294 353
 593 291 688 316 136 151  51  88 716 171 543 475 669 418 491 718  20  93 280 460 158 570  49 424 536  54 696
 533 141 439 523 668 674 304 458 299 415 202 631 544 559 168 522 648 104 297  53 563  39 676 707 219 438 464
 727 623 385 396 125  77 448 604 164 221 400 572 695 178 156 592  37 645 573 232  64 386  30 502 616  95 339
 173 719 609 712  94 626 341 318 537  71 472   4 186 113 662 425 527 356 465 222 325 469 393  59 457  38 482
 261 647 119 660  32 571 127 529   6 108 195 588  81 711 517 269  52 434 715 539 566 584 485 123 428 210 298
 211  92 311 344 242 531 215 366 710 558 542 103 550 540   2  10 427  33  46  68  24 152 346 271   3 378 639
  18   5 278 140 653 721 498  96 462 361 391 379 180 273 686 436 115 437 230 126 148 656 691 404 652 431 388
 216  16 658 601 402 323 478 608 285 408 134 234 486 693 450 506 699 244 165 549 646 340 143 556 348 650 154
 382 374 441 375 359 354 395 322 369 370 360 331 413 398 414 358 357 367 313 337 349 383 314 343 387 317 373
 363 283 114 726 351 338 200 364 335 667 330 332 246 320 371 315 324 372 709 380 300 307 505 288  80 321 614
 677 121 209 105 525 394 597 264 547 224 159 303 217  65 622 138 287 603 682 714  78 231 490 510 620 461 661
 412  62 463 553 305 640 443 575 282 590 310 725 452 532 541  97 130 694 207 577 240 124  74 129 122 102 474
 243 673 476 132 578 423 659 390 459 329  99 562 628 203  22 162 189 161 309 679 397 276  84 212 672 583 352
 258 137 184 193 206 454 411 198 205 480 169 187  47 417 237  91 267 548 422 196 516  57 440 249 574 701 257
 473 381 514 272 229 204 535 241 619 657 466 155 632 223 227 483 392 146 362 602 499 284 199 182  41 334 503
 511 433 642 587 552 236 107 214  28 149 233  26 449 689 406 290 365 515 179 118 131  83  69 675 301 470 347
 239 150 405 117 447 160 605 177  29 172 579 504 166 225 704 594 641 279 302 265 625 175 306 135   9 585 201
 617 633 589 326  11 319 174 266 112 145 376  17 576 635  36 610 569 513 157 582 678 681 697 630 508 643  76
 638 729 407 116  44 389 101 580 663 708 684 683 419  75 327 665 611 703 251  58 228  72 426 420 655 176  31
 292 312  23 345 191 110 497 403  56 690 274 444 484 596  79  27 247  55 636 238 713 706 561 471  90 615 700
 226 692 208 429 520  86 687 671 557 328 308 477  25 181 295 220 336 100 554 218 455 595 289 607 496 252  43
  15 651 235 591 493  21 468 518 445 139 581 120 188 586 197 555 612 144 606 489 194 435  67  35 260 487 680

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00576e+07us (= 10057.6ms, 10.0576s)
Satisfaction error: 16
Number of search iterations: 2582
Number of local moves: 2213 (including on plateau: 2175)
Number of local minimum: 7 (including on plateau: 269)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 698 421 409 446 600 705 528 82 526 501 14 142 263 34 368 384 109 567 163 213 416 509 618 355 12 63 494 => the sum is 9640 rather than 9855
Problem in row 2: 401 453 170 183 560 545 153 495 702 42 644 524 275 467 488 133 722 410 350 106 500 534 270 185 530 670 19 => the sum is 10531 rather than 9855
Problem in row 4: 111 167 598 87 432 281 255 50 60 627 7 296 720 66 629 685 546 654 254 723 85 481 564 621 262 442 70 => the sum is 9773 rather than 9855
Problem in row 7: 533 141 439 523 668 674 304 458 299 415 202 631 544 559 168 522 648 104 297 53 563 39 676 707 219 438 464 => the sum is 11288 rather than 9855
Problem in row 8: 727 623 385 396 125 77 448 604 164 221 400 572 695 178 156 592 37 645 573 232 64 386 30 502 616 95 339 => the sum is 9882 rather than 9855
Problem in row 11: 211 92 311 344 242 531 215 366 710 558 542 103 550 540 2 10 427 33 46 68 24 152 346 271 3 378 639 => the sum is 7714 rather than 9855
Problem in row 13: 216 16 658 601 402 323 478 608 285 408 134 234 486 693 450 506 699 244 165 549 646 340 143 556 348 650 154 => the sum is 10992 rather than 9855
Problem in row 16: 677 121 209 105 525 394 597 264 547 224 159 303 217 65 622 138 287 603 682 714 78 231 490 510 620 461 661 => the sum is 10504 rather than 9855
Problem in row 18: 243 673 476 132 578 423 659 390 459 329 99 562 628 203 22 162 189 161 309 679 397 276 84 212 672 583 352 => the sum is 9952 rather than 9855
Problem in row 19: 258 137 184 193 206 454 411 198 205 480 169 187 47 417 237 91 267 548 422 196 516 57 440 249 574 701 257 => the sum is 8101 rather than 9855
Problem in row 21: 511 433 642 587 552 236 107 214 28 149 233 26 449 689 406 290 365 515 179 118 131 83 69 675 301 470 347 => the sum is 8805 rather than 9855
Problem in row 22: 239 150 405 117 447 160 605 177 29 172 579 504 166 225 704 594 641 279 302 265 625 175 306 135 9 585 201 => the sum is 8796 rather than 9855
Problem in row 23: 617 633 589 326 11 319 174 266 112 145 376 17 576 635 36 610 569 513 157 582 678 681 697 630 508 643 76 => the sum is 11176 rather than 9855
Problem in row 24: 638 729 407 116 44 389 101 580 663 708 684 683 419 75 327 665 611 703 251 58 228 72 426 420 655 176 31 => the sum is 10859 rather than 9855
Problem in row 27: 15 651 235 591 493 21 468 518 445 139 581 120 188 586 197 555 612 144 606 489 194 435 67 35 260 487 680 => the sum is 9812 rather than 9855
Problem in diagonal 0: 698 453 268 87 451 151 304 604 537 108 542 379 486 398 371 138 130 161 422 602 131 175 697 420 90 252 680 => the sum is 9735 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 496 520  63 514 259 570 721 545 720 109  81 339 219 719  67 529 568 648 227 486 428 508 338 711   5 398 645
 112 269 690 724 499 280  40 315 439  65 395 140 379 358 260 105 511 610 135 569  14 222 678 560 206 668 621
 572  47 650 541 458 603 601 123 314 392 273 130 172 677  44 460  51 255 542 549 316 431 268 111 664  22 589
  32 161   7 728 659 510 553 386  12 576 602 655 267 647  57 662 531  16   8 405 142 351  18 506 703  25 636
 432 352 242 138 725 706 298 454 229 252 476  24 190 571 156 208 212 587 311 674 419  69 596 489 334 494 217
 302 116 365 235 299 361 354 578  19 492 347 634  64 126 617 684  42 121 170 234 588 607 282 615 573 656 374
 199  96 383 133 715  61 507  17 179 635  68  60 532 628 150 559 643 160  89 129 538 166 418 401 406 448 425
 561 729 609 567  59 188 293 524 205 176 153  56 639 547 131 221 115 228 430 552 317 239 518 258 436 614 490
 702 689  58 278 649 445 696 423 281 175 698 159 136 450 408 198  70 525 487 626  73  21 480  26 390 119 593
  30 287 669 465 307  93 110  31 295 481 551  94 687 251 723   9 594 705 585 371 479 233 225 550  54 580 396
 321 122  13 417 391 522   4 632 566 113 443 718 591  92 535  75 484 477 586  10 660 713  43 536 606 575 539
 409 495 168 373  20  48 638  76  85 699  11 671 710 466 456 289 583 633 683 319 244 276 429 177 313 467 117
 266 412 457 290 310  77 478 722 343 680 521 498 389  41 376 271 174 500 512 326  79 526 184 362 611  80 370
 387 404 380 384 377 364 360 381 402 394 331 270 366 182 372 612 393 333 378 336 345 357 346 350 369 327 355
 441 673 726 137 688 554  55 407 691 318 446 625 328 201 340 264  37 101 203 257 519 329  91 667 422 194 141
 288 324 435 493 468 413 341 292 202 342 104 411 676 294 230 709 349 275 254 356 682 424 308 563 220 320  82
 604 558  15 533 173 291 158 620 144 564 285  86  78 661 631 249 200  66 186  99 312 232   6 641 148 700 226
 675 253 399 261 248 305 515 231  90 241 178 400 437 434 582  38 204 403 416 581 245 482 707 250 598 444 238
 642  97 712 114 164  33 679 414 192 459 187 469 304 433 565 627 363 344 180 301 503 337 637  39 102 265 693
 185 154 577 263 243 727 193 246 599 183 619 335 237 284  27 537 453 348 497 279 215 646 410 209 685 421 283
 196 462 353 452 155 654 143 666 694 597 332 608 297 322 306 483 223  87 651 451 107 125 128 224 165 426 548
 272 523 600 169 189 214 471 488 543 124 461 274  35 106 672 697 686 716 397 277  29 491 463 440  36 330 152
 681 622 546 134 171 657 103 162 695 181 213 665 516  52 623 210 505 420 470 132 708 157 120 464 502 118  28
  88 127  50 139 501 325 388  34 474 449 663 236 427 544 240 256 714 473 704   2 415 557 367 100 303 629 309
 527 717  71 475 455 447 207 149 504 579 613 640  46 211 540  84 630  23 658 163 616 146 644 147  49 296 218
 382  62 108 368  83 216 574 692 652  45 151 513 528   3 485 624 323 442   1 670 300 592 595 385 517  72 472
  53 584 509 530 590 191 375 247 286 534 653 145 605 555 262 195 197 359  95 701 562 618 556  74 438 167  98

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00563e+07us (= 10056.3ms, 10.0563s)
Satisfaction error: 7
Number of search iterations: 2949
Number of local moves: 2467 (including on plateau: 2419)
Number of local minimum: 25 (including on plateau: 273)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 496 520 63 514 259 570 721 545 720 109 81 339 219 719 67 529 568 648 227 486 428 508 338 711 5 398 645 => the sum is 11433 rather than 9855
Problem in row 2: 112 269 690 724 499 280 40 315 439 65 395 140 379 358 260 105 511 610 135 569 14 222 678 560 206 668 621 => the sum is 9864 rather than 9855
Problem in row 7: 199 96 383 133 715 61 507 17 179 635 68 60 532 628 150 559 643 160 89 129 538 166 418 401 406 448 425 => the sum is 8745 rather than 9855
Problem in row 11: 321 122 13 417 391 522 4 632 566 113 443 718 591 92 535 75 484 477 586 10 660 713 43 536 606 575 539 => the sum is 10784 rather than 9855
Problem in row 17: 604 558 15 533 173 291 158 620 144 564 285 86 78 661 631 249 200 66 186 99 312 232 6 641 148 700 226 => the sum is 8466 rather than 9855
Problem in row 24: 88 127 50 139 501 325 388 34 474 449 663 236 427 544 240 256 714 473 704 2 415 557 367 100 303 629 309 => the sum is 9514 rather than 9855
Problem in row 27: 53 584 509 530 590 191 375 247 286 534 653 145 605 555 262 195 197 359 95 701 562 618 556 74 438 167 98 => the sum is 10179 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 676 489 517 543 577 483 172 449 521 299 560 626 648 457 469 225  67   1 508 142 720  45 643 507 204 222 567
 655 117 132 589 647 329 241 136 627 723 640 118  33  43 135 465 486 566 209 658 431 535 620 544 607 518 170
 243 557 612 472 700 595 477 301 550 103 601 446  48 102 405 174  44 646 239 200 199 644 534 284 562 111   6
  76 410 650 651 357 450 346  20 182 164 404 258 476 637 500 634  13 121 367 246 603 484  87 614 417 578 110
 234 282 152 438 150 530 235 645 143  15 363 531 663 719 487 409 673 666  75 280 497 201 208 268 528   3 460
 571   4 677  52  65 181 398  34 382 137 482 697 168 169 271 513 109  85 597 254 100 524 269 127 678 128  70
 263 171 187 184 453 390 548 556 231 509 653 203 302 580 523  95  17  46 165 594 555 443 309 635  86 447 710
 273  55 249 163  78 255 260 501 430  36  30 176 456 532 675 615 215 613 704 140 642 314 406 608 611 319 499
 167 461 480 724 196 686 133 462 498 229 488 622 244 261 318 466  74 166 479 158 224 514 311 565 126 563 240
 122 668  12 138  98  64 649  71 146 564  47 659 265 403 134 113 596 414 338 519  38 598 422 599 368 144  23
  10 511 492 467 297 458  79 618 228 682 478 287 394 433 670 628 304 442  92   7 149 413 384 275 412  66 579
 444 617 310 664 257 364 223  14 471 353 264 385 180 542  90 397 708 279 214 395  57 373 683 420 286 401 464
  21 391 189 698 396 342 288 427 632 383 360 154 423 388 381 389 455 407 210 411 365 436 232 379 362 375 361
 435 419 369 372 386 350 356 312 371 387 380 354 325 162 416 366 370 321 323 344 359 347 660 345 331 378 317
 561 333 316 393  42 343 315 376 337  84 536 107 661 335 374  53 326 336 587 242 485 527 537 341 690 296 322
 115 654 520  93 377  88  25 592  61  72   2 334 590  27 540 211 503 212  77 630 451 114 148  40 221 266 639
 694 552 298 525 665  63 216  80 656 568 293 584  82 290  89 291 339 468 400 441 238 305 106 432 307 448 425
 493 696  94 593  18 205 157 636 692 619 541 233 123  37 145 270 408 230 554 728  54 662 454  19 711 495 546
 434 245 277 303 570 693 671 505 226 421 141 217 178 112 684 463 281 506 729 267 475 190 399 159 283 179 247
  96 130  35  56 512 306 701 292 193 295 308  59 718 185 227 707 539 494 688 624 581 198 131 445 120 641 574
 713 591 248 474 515 545 470 256 716 355 727 276  81 289  41  29 629 490 125 108 496 251 274 124  31 609 392
 529 173 219 129 725 194 491 722 191 183 206 481 426 259 522 220 610 558 147   9 572 119 714 553 116 551 236
 352 151 726  83 313 516 402 202 600 440 623 526 237 638 207 583 213 101   5 706 685 104 320 105 285 672  60
 631 328 702  62 621  26 588 569 330 699  28 703 604 652 272 605 538 709 657 510 139 616 586 340 452 705 424
 327 473 428  69 186  49 721 252  24 602 175 437 695 349 715 559 680 253 218 547 197 294  97 689  16  91 712
 681  99 549 418 459 633  68 153 155 429 177  50 156 585  32  51 358 667 573 687 351 582 160 188 439  73 691
  39 278 415 502 195 717 625 674 262 504 348 332 679 669 533 324 300  58 575   8 192  22 161 250 606 576  11

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00573e+07us (= 10057.3ms, 10.0573s)
Satisfaction error: 9
Number of search iterations: 2609
Number of local moves: 2202 (including on plateau: 2155)
Number of local minimum: 10 (including on plateau: 283)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 676 489 517 543 577 483 172 449 521 299 560 626 648 457 469 225 67 1 508 142 720 45 643 507 204 222 567 => the sum is 11337 rather than 9855
Problem in row 2: 655 117 132 589 647 329 241 136 627 723 640 118 33 43 135 465 486 566 209 658 431 535 620 544 607 518 170 => the sum is 10974 rather than 9855
Problem in row 6: 571 4 677 52 65 181 398 34 382 137 482 697 168 169 271 513 109 85 597 254 100 524 269 127 678 128 70 => the sum is 7742 rather than 9855
Problem in row 10: 122 668 12 138 98 64 649 71 146 564 47 659 265 403 134 113 596 414 338 519 38 598 422 599 368 144 23 => the sum is 8212 rather than 9855
Problem in row 16: 115 654 520 93 377 88 25 592 61 72 2 334 590 27 540 211 503 212 77 630 451 114 148 40 221 266 639 => the sum is 7602 rather than 9855
Problem in row 18: 493 696 94 593 18 205 157 636 692 619 541 233 123 37 145 270 408 230 554 728 54 662 454 19 711 495 546 => the sum is 10413 rather than 9855
Problem in row 24: 631 328 702 62 621 26 588 569 330 699 28 703 604 652 272 605 538 709 657 510 139 616 586 340 452 705 424 => the sum is 13096 rather than 9855
Problem in row 26: 681 99 549 418 459 633 68 153 155 429 177 50 156 585 32 51 358 667 573 687 351 582 160 188 439 73 691 => the sum is 9464 rather than 9855
Problem in diagonal 0: 676 117 612 651 150 181 548 501 498 564 478 385 423 162 374 211 339 230 729 624 496 119 320 340 16 73 11 => the sum is 9828 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 492 393 279 252 726 429 574 357 639 184  50 585 473 452  83  27 292 244 179 124  56 371 663 148 370  44 520
 681 698  69 705  65 687  52 127 487 130 501  94 543  55  86 498 262   1 524 238 620 493 286 609 592 692  60
 349 322 126 113 612 296  84 364 510 511 143 233 716 234 481 239 142 704 694  61 172 153 195 544 329 361 549
 258 268 255 669 627 623 383 293 441 245 420 503 580 709 200 271 562 183  23   3 107 103 411 653 478  17 570
 604 122 456 727 105 521 158 608 646 625  51 175 491  92 466  96 435  89 607 710 374  53 611 156 578 257  42
 408  77  36 160 287 729 476 306 702 117 665 668  10 590 617 593  40 651 302 248 194 566 171 413 228 486 115
   8 635 658 272 198 439 595 274  48 553 190 541  46 211  87  80 581 715 613 616 569 391 209 324 199 174 629
 140 640 489 443 596 163 180  43 725 461 260 192 135  38 436 388 723  12 533 407 673 416 433 362 231 528 208
 196 434 125 506 712  88 657 189 512 304 242 539 173 558 425 319 108 316 523 320 301 666  79 675 247 101 540
 565 170 634  28 321 372 451 582  32 111 299 217 277 109 310 236 664 442 267 689 636 703 312 298 471 290 369
 375 325 509 496 529 191 686 352 615 129  41 202 201 432 688 647  30  31 254 430  66 610 519 215 358 283 641
 288 670 603 667 323 295 659   2 187 598 485 654 243 650  45 502 401 203 550   5  64  62 351 530 205 597  16
 527 546 197 145 701 483 264 446 110 392 297 396 356  33 587 281 394 368 346 314 708 572  54 284 535 484  35
 583  21 360 380 405 379 318 632 404 337 682 377 350 240 336 119 384 378 397 342 415 282 376 345 367 333 313
  13 545 722 112   4  57 114 167 482 166 118  82 431 266 275 557  72 120 162 643 537 421 331 102  15 406 347
  20 480 699 354 151 218 547 447 690 106 276 440 685 588 660 309 207 232 417 226 265 256 573  14 656 146 193
 591 332 532 343  25 575 576  68 269 672 713 711 605 402 474 561 697 149 259 628 584 490 649 422  11 470 683
 427 159 382 263 131 671 249 555  22  63 714  74 691 516 280 548 652 497  58 128 230 307 398 186 472 619 563
 169 227 514 455 606  99 311 463 222 237 449 602 526 457 134 224 522 644 214 577 458 136 499  24  97 662 327
 515  85  49 144 418 631 366  19 161 600 400 448 250 303 206 556 289 181 678 403 409 410 554 622 454 706 348
 693 426  98 536 261  90 137 719  39 684 213 500  71 637 642 212 381 437 445 560 464 517  37 513 586 518 460
 150 165 414 285 178  78 251 559 210   7 542 594 423 508 246 707 728 467 386 164 123 132 674 100 141 363 551
 505 724 534 618 317 679 176 419 121 645 154 219  93 221  70 428  76 564 718 300 599  75 104 253 680 139 424
 204 568 116 147 133 344 626 614 601 355 399 157 339 229 525 468 340 567  18 624 390 479  95 531 695 571 477
 188 373 338  91 225 138 720 630 655 412 387   9 638 359 552 507 462 621 469 438  59 294 700 389  73  47  81
 633   6 353 365 538 395 216 465 291 717 488 315 168 696 223 305  26 450  67 475 504 220 330 495 453 326 335
 273 444 308 579 661 185  29 155  34 494 676 328 341 270 721 177 385 589 152 182 278 677 241 648 334 235 459

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00559e+07us (= 10055.9ms, 10.0559s)
Satisfaction error: 8
Number of search iterations: 3712
Number of local moves: 3096 (including on plateau: 3049)
Number of local minimum: 23 (including on plateau: 371)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 492 393 279 252 726 429 574 357 639 184 50 585 473 452 83 27 292 244 179 124 56 371 663 148 370 44 520 => the sum is 9006 rather than 9855
Problem in row 3: 349 322 126 113 612 296 84 364 510 511 143 233 716 234 481 239 142 704 694 61 172 153 195 544 329 361 549 => the sum is 9237 rather than 9855
Problem in row 15: 13 545 722 112 4 57 114 167 482 166 118 82 431 266 275 557 72 120 162 643 537 421 331 102 15 406 347 => the sum is 7267 rather than 9855
Problem in row 17: 591 332 532 343 25 575 576 68 269 672 713 711 605 402 474 561 697 149 259 628 584 490 649 422 11 470 683 => the sum is 12491 rather than 9855
Problem in row 20: 515 85 49 144 418 631 366 19 161 600 400 448 250 303 206 556 289 181 678 403 409 410 554 622 454 706 348 => the sum is 10205 rather than 9855
Problem in row 21: 693 426 98 536 261 90 137 719 39 684 213 500 71 637 642 212 381 437 445 560 464 517 37 513 586 518 460 => the sum is 10876 rather than 9855
Problem in row 22: 150 165 414 285 178 78 251 559 210 7 542 594 423 508 246 707 728 467 386 164 123 132 674 100 141 363 551 => the sum is 9146 rather than 9855
Problem in row 24: 204 568 116 147 133 344 626 614 601 355 399 157 339 229 525 468 340 567 18 624 390 479 95 531 695 571 477 => the sum is 10612 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 677 644 508 217 370 470 218 664 446 512 531  75 340  33  72 134 586  84 610 366  60  36 652 463 227 247 613
 221 601 393 401 650 192 321 709 665 150 694  91 168 319 364 439 474  30 287 623 147 397 432 259 136 269 423
 516 264 175 299 442 138 641 663 268 110 626 448 604 211  82 253 421 163 157 477 607 313  92 562 440 574 309
 600 165 679 538 280 413 133 539 458  83 314 333 635 518 498 352 494 161 526 262 693  81 226  59 555 298 376
 391  13 135 638 715 140 387 687 420 726 653  87  79 628 556 198 246 114  10  50 258 394 409 130 589 210 473
 624  94 696 261 305 625 542  18 691 616 176 431  15 631 295 639 234 563 596 103 658 256 620 169  35 214 237
 506 591 611 108  73 575 461 322 479  70  71  11 251 490 678 466 278 571 209 588 502 410 235 618 180 475  26
 112 132 582 154 230 129  58 505 187 480 167 408 375 543  65  34 388 528 353 667 615 252 121 356 683 205 115
 487 300 316 208  27 676 178 534 541 177  96  68 345 517 106 552 400 634 510 273 307 189 173 646 311 330 699
 290 513 125 532  45 559 557 488 323 449 465 648 193   1 215 459 523 354 649 492 603 727  46 540 120  53 325
 334 670 229 700 578  56 535  14  16 612 503 384 335 263 260 706 627 632  95 164 186  32 213  51 656 708 585
 595 146 686 689 143 179 554 139 116 291 206 425 633 673 312 416 162  24 651 212  97 602   7 713 137 363 684
 266 294  57 360 301 342 481 407 371 324 289 460 422 435 436 378 451 239 372 418 379 339 306 527 389 398 414
 406 429 331 382 546 341 249 500 380 383 275 403 317  93 361 374 288 357 404 417 444 332 701 225 250 385 282
   2 712 248 630  48 456 427 608 336 381 668 695 188 703 373 499 199 195 328 520 386  98 729 580   8  40 337
 464 304 362 511 220 274 569 128 113 104 100 318 483 621 315 228 156 285 469 666 320 688 501 452 102 572 530
  23 203 434 216 558 450 717 171  67 223 521 185 643 174 151  21 614 566 725 204 568 655 489 111 711 303 152
 197 368  80 590 594 564  12 201 710 183   6 297 411  64 533  63 514 402 550 437 257 529 690 166 343 419 675
 617 158 579 462  99 131 637  74 118 191 704  78 599   3 567 548 272 622 117 544 443 674 302 123 581 144 468
 619 310  52 202 547 441 222 692 367 509 219 702  22 338 399 194 293 412 485 255 241 524 609   4 722 561 549
 148 659 271 454 365 296  66 267 565 723  69 159 522 155 583 181 270 724 447 347 182 276 471 642 153 415 445
 265 455 714 519 238 467 396 245  44 682 283 719 453 232 457  62 560 573  31 344 124 105  76 553 482 657 119
 392 101 671 636 377  17 672  25 172 662 507 698  49 170 697 645   5 277 327 127 598 525  85 279 605  37  47
 329 504 236  61 716 728 254 515 576 484  77 369  90 426 200 720 184 390  89 350 536 284 395 207 433 660  42
 109 593 495  39 349 107 190 145 685 233 680 606 584 424 359 570   9 126 243  20 348 654 551 537  38 346 647
  88 141  41  29 681 497  86 351 196 142 629 597 669 718 640 493 486 122 587 224 242  55 286 478 661 476 240
 577 491 149  19 358 592 292 244 545 355 326 160 430 472 281 231 721 707  28 705  54 428 438 405 308 496  43

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00561e+07us (= 10056.1ms, 10.0561s)
Satisfaction error: 11
Number of search iterations: 3004
Number of local moves: 2515 (including on plateau: 2471)
Number of local minimum: 24 (including on plateau: 303)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 600 165 679 538 280 413 133 539 458 83 314 333 635 518 498 352 494 161 526 262 693 81 226 59 555 298 376 => the sum is 10269 rather than 9855
Problem in row 5: 391 13 135 638 715 140 387 687 420 726 653 87 79 628 556 198 246 114 10 50 258 394 409 130 589 210 473 => the sum is 9336 rather than 9855
Problem in row 6: 624 94 696 261 305 625 542 18 691 616 176 431 15 631 295 639 234 563 596 103 658 256 620 169 35 214 237 => the sum is 10344 rather than 9855
Problem in row 8: 112 132 582 154 230 129 58 505 187 480 167 408 375 543 65 34 388 528 353 667 615 252 121 356 683 205 115 => the sum is 8444 rather than 9855
Problem in row 9: 487 300 316 208 27 676 178 534 541 177 96 68 345 517 106 552 400 634 510 273 307 189 173 646 311 330 699 => the sum is 9600 rather than 9855
Problem in row 10: 290 513 125 532 45 559 557 488 323 449 465 648 193 1 215 459 523 354 649 492 603 727 46 540 120 53 325 => the sum is 10294 rather than 9855
Problem in row 11: 334 670 229 700 578 56 535 14 16 612 503 384 335 263 260 706 627 632 95 164 186 32 213 51 656 708 585 => the sum is 10144 rather than 9855
Problem in row 15: 2 712 248 630 48 456 427 608 336 381 668 695 188 703 373 499 199 195 328 520 386 98 729 580 8 40 337 => the sum is 10394 rather than 9855
Problem in row 20: 619 310 52 202 547 441 222 692 367 509 219 702 22 338 399 194 293 412 485 255 241 524 609 4 722 561 549 => the sum is 10490 rather than 9855
Problem in row 23: 392 101 671 636 377 17 672 25 172 662 507 698 49 170 697 645 5 277 327 127 598 525 85 279 605 37 47 => the sum is 9403 rather than 9855
Problem in row 25: 109 593 495 39 349 107 190 145 685 233 680 606 584 424 359 570 9 126 243 20 348 654 551 537 38 346 647 => the sum is 9687 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 507 157  40 723 201  86 327  57  96 287 623 714 657 399 130 131 574 674 440 365  50  62 396 571 260 613 715
  52 698 339  73 118 726 569 602 298 580 137 200  93 689 303 491 326  31 412 106 681 175 600 463  23 684 386
 176 305 665 364 652 191 634 159 474 555 173  83 420 505 242  13 553 608 378 624 247  14 184  29 646 626 335
 261 582 340 655  30 286 174  11 198 197 263  74 500 568 587 631  47 124 185 673   4 438 686 645 594 117 675
  16   7 398  59 650 556 259 336 644 643  38 183 721 138 671 439 143 113 504 703 481 533 605 291 560 318 465
 531 196 579 488 153 577 218 203 669  12 122 606  21 221  70 391 325 244 628 529 179 578 104 379 707 576 549
 609 315 563 469 370 447 596 663 134 502 356 498 332 271  43 418 494 152 257 618 552 406 635 115 572 376 310
 534 355 550   6  35 414 508 512  34  28 388 544 541  94 588  56 538 354 540 548 199 614 515 220 543 536  61
 163 149 150 694 449 678 206 566 487 720 581 132 639 660 353 431 430  22  27   5 254 509 136 349  60 604 401
 100  42 205 567 458 457 453 367 393 190 688 557 554 444 372 409  81 202  17 546 459 427 535 245 193 428 466
  33 116  36 155 151  75 455 110 528 514 226  55 510 503 599 622 445 710 654 670 450 666 636 169 142   8 617
 603 558 724 518 292  25 392 460 241 475 542 432 223  24 516 435 640 222 102  91 691 290 219 470  69  18 583
 397 467 375 421 348 410  98 411 160 706  97 403 422 395 258 700 383 380 181 382 360 251 426 385 346 289 404
 497 128 162 147  37 158 499 722 272 486 712 585 135 389 653 425 390 446 109 564 148 374  92 501 281 331 612
 230 345 361 323 545 341 727 317 615 126 651 369 306  78 161 384 697 551 236 337 313 342 338 329 296 166 371
 705 308 402 293 719 362 127 215 264 141 416 304 192 168 164  15 527 547 621 213 638  71 482 647 683 511 120
 358 661 187 451  79 629   3 405 713 171 240 477 307 524 679 156 248 589 119 301  76 485 282 562 539 434 180
 366 312 288 228 619 256 387 231 268 468 725 212 210 237 648 593 276 269 695 255 285 217 676 284 309 274 267
 448 373 704 278 496 506 319 250 216 154 597 483 461  87 521 443 146 611 728  77 229 658 165 311 490 252  19
 575 729  90 625 400 363 633 270 139 357 352 234 692 718 320  45 441 717  44 235 359 225 277 586 125 224  80
 275 598 239 324 523 632 121   9 351 238 232  10  82 300 194  66 701 302 233 522 433 314 123 590 479  89 243
 133 114 607 664 334 129 394 424 519 659 711 177  65 328 492 316 637 297 368  51 591 227 343  20 280 442 471
 592 517 167 532 140  84  72 620 559 347 294 687 265 630  58 537  32 144 452 189 641 437 178 656  68 464 493
 489 677 667 472 584 561 321 616 672 103 211  64 513  88 279 526 246 495 111 377  85 188 283  54 413 565 195
 214 478  53 107 595 112 680 525 108 417  99 716 262 266 415 454 322 186 662 182 709 685 573 436  46 408 145
 610  26 480 170 209  95   1 101 330 350 333 407 627 530  63 208 172 570 696 419 702 462 299 344 708 253 690
 381 642 484  49 668 699 682 693 473 429  48 649 105 601 476 520  41 295 456 273  39 207  67 204 423 249   2

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.0057e+07us (= 10057ms, 10.057s)
Satisfaction error: 6
Number of search iterations: 3034
Number of local moves: 2535 (including on plateau: 2486)
Number of local minimum: 23 (including on plateau: 299)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 261 582 340 655 30 286 174 11 198 197 263 74 500 568 587 631 47 124 185 673 4 438 686 645 594 117 675 => the sum is 9545 rather than 9855
Problem in row 5: 16 7 398 59 650 556 259 336 644 643 38 183 721 138 671 439 143 113 504 703 481 533 605 291 560 318 465 => the sum is 10474 rather than 9855
Problem in row 7: 609 315 563 469 370 447 596 663 134 502 356 498 332 271 43 418 494 152 257 618 552 406 635 115 572 376 310 => the sum is 11073 rather than 9855
Problem in row 19: 448 373 704 278 496 506 319 250 216 154 597 483 461 87 521 443 146 611 728 77 229 658 165 311 490 252 19 => the sum is 10022 rather than 9855
Problem in row 21: 275 598 239 324 523 632 121 9 351 238 232 10 82 300 194 66 701 302 233 522 433 314 123 590 479 89 243 => the sum is 8223 rather than 9855
Problem in row 22: 133 114 607 664 334 129 394 424 519 659 711 177 65 328 492 316 637 297 368 51 591 227 343 20 280 442 471 => the sum is 9793 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 627  57 476 274 418 280 573 255 550  88 651 544 308 442 184  45  31  18 709 724 175 305 620 325 517  58 186
 251  73 718 526 406 447 604 705 282 673 594 119 525  91 409 722 265 523 103 399  68 110 655 128  15   6 438
 686 575 349 257 150 598 198 391 484 167 300 708 276  39 179 562 408 556 584 115 640  42 648  66 302 342 233
 524 489 133 203 560 619 185 692 603 606 445 563 149 176 199 570 635 451 659 468 605 671 414  80 599 243 247
 166  85 564 162 443  43 287 390 403  63 726 515 382  79 339  40 711 545 540 116 480 666  89 704  59 622 636
 215 289 510  96 296 221 507  25 374 549  53 701 728 669  61 253 588 235 720  75 393  24 205 229 616 687 536
 624 360 194 721 397 126 488 658 320 475 259 318  36 456 646 271  12 719 665   2 122  92 260 516 210 227 681
 222 672 220 258 174 688 729 267 519  37 614  50 509 601 482  28 212 413 161 240 593 657 618 273 388 225 312
 286 585 610 464   4 450 568 577  55 100 440 234 269 634 543 471 654 144 248 329 389 104 307 164 631 209 386
 660 277  38 346 512 241 678 371 527 503 576 529 216 350 417 217 667  19 129  11 245 555  21 645 231 416 458
 542 623 242 714 163 211 213 197 572 727 169 224 508 173 262 219 364 613 518 109 466 383 181 528 294 699  14
  27 112 537  51 683  10 674 621 288 392 449 283 137 356 689 223 490 376 232 314 187 125  13 195   3  84 145
 485 316 455 381 118 263 310 261 664  70 448 311 101 326 357 661 290 340  47 696 378 244 467 531 633 361 341
 284 324 275 423 338 278 291 298 394 452 202 375 405 592 343 347 336 333 322 431 421 410 457 395 362 401 366
 379 419 465 315 514 359 130  54 578 331 293 479 363 428 206 580 446 304 437 608 337 387 459  34 139 396 415
  26 256 591 513 266 700 647 200 461 581  94 370 313 295  83 270 463 117 652 365 354 609 180 607 330 407 105
 596 157  97 717 188 384  48 427 558 192 511 238 653 328  65 630  41 189 505 107 706 574 160 617 158 398 611
 385 353 285 123 643 535 327 473 190 481 554 183 168 264 228 493 236 151  71 430 710 626 250 532 135 538 491
   7 506 182 579 424 474 165 561 272 552 411 566 441 685 143 239 380  23  46 425 134 522 498 159 317 502 642
 499 582  44 369  64 367 656 504  32 690  72 495 723 142 639 478 454 177  86 436  22 650 155 321 530 148 520
 373 694 439 170  87  56 497  98 433 306 644  99 102 281 677 486 348 703 435 113 500 567 496 412 147 602  90
 153 124 207 615 691 682 131 299 208 106 191  30 628   5 178 368 494 589 279 679 146 483 303 595 422 587 662
 632 597 469   8 684 707 156  17 249 546  20 590  35  74 533 334 355 583 297 319 246 127 521 358 501 565 332
  78 193 629 551 663 586  81 676  33 571   1 138  82 698 218 487 539  60  93 377 547 226 675 344 641 252 114
  76 141 713 230 420  29 472 477 453  49 534  62 548 541 470 172  77 725 702 559 154  16 492 351 557  95 345
 372 695 404 649 429  69 132 309 201 352 204 434 638 670 668 553 292 712 171 693 569 426 111 121 716 323 214
 680 301   9 140 120 432 108  52 152 196 400 697 612 460 637 136  67 237 444 715 268 254 600 625 402 462 335

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00568e+07us (= 10056.8ms, 10.0568s)
Satisfaction error: 10
Number of search iterations: 3265
Number of local moves: 2715 (including on plateau: 2671)
Number of local minimum: 24 (including on plateau: 360)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 627 57 476 274 418 280 573 255 550 88 651 544 308 442 184 45 31 18 709 724 175 305 620 325 517 58 186 => the sum is 9440 rather than 9855
Problem in row 4: 524 489 133 203 560 619 185 692 603 606 445 563 149 176 199 570 635 451 659 468 605 671 414 80 599 243 247 => the sum is 11788 rather than 9855
Problem in row 8: 222 672 220 258 174 688 729 267 519 37 614 50 509 601 482 28 212 413 161 240 593 657 618 273 388 225 312 => the sum is 10162 rather than 9855
Problem in row 11: 542 623 242 714 163 211 213 197 572 727 169 224 508 173 262 219 364 613 518 109 466 383 181 528 294 699 14 => the sum is 9928 rather than 9855
Problem in row 12: 27 112 537 51 683 10 674 621 288 392 449 283 137 356 689 223 490 376 232 314 187 125 13 195 3 84 145 => the sum is 7696 rather than 9855
Problem in row 24: 78 193 629 551 663 586 81 676 33 571 1 138 82 698 218 487 539 60 93 377 547 226 675 344 641 252 114 => the sum is 9553 rather than 9855
Problem in row 25: 76 141 713 230 420 29 472 477 453 49 534 62 548 541 470 172 77 725 702 559 154 16 492 351 557 95 345 => the sum is 9460 rather than 9855
Problem in row 26: 372 695 404 649 429 69 132 309 201 352 204 434 638 670 668 553 292 712 171 693 569 426 111 121 716 323 214 => the sum is 11127 rather than 9855
Problem in row 27: 680 301 9 140 120 432 108 52 152 196 400 697 612 460 637 136 67 237 444 715 268 254 600 625 402 462 335 => the sum is 9541 rather than 9855
Problem in diagonal 0: 627 73 349 203 443 221 488 267 55 503 169 283 101 592 206 270 41 151 46 436 500 483 521 344 557 323 335 => the sum is 8587 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 289 463 420 292  58 233 265 688 687 263 198 196  75 320 128 276 158 659 578 698 607 150 542 348 140 425 701
 448 685 299 683 259 699 269 401 368 107 549  66 199 655  45 728  11 417 182 397 661 600  94  21  48 679 285
 712 110  36 534 576 500 725 221 229 440  10  56 497   5 663 142 347 609 511 242 281 516 273 280 669 135 536
 102 643  81 408 268  82 660 583 714 154 246 615 293 507 575 644  95 601 421 369  76 130 155 630 256 505  42
 697 389 201 116 623 180 404 136 219 264 560 650 288 667 384  90 104 315 477 115 720 227 614 203 658 204 350
 167 278 381 402 179 565 596 494 570 532 358 592  34 372 608 510 237 252  50 478 208 599   1 558  27 704 103
 591 172 211  70 721 518 346  15 270 306 652 235 561 468 489 539  84 374 230 531 523 647 394 111 481 245  71
  79 611 391 550 635  65 493 528 192 327 236 588 675 455 106  41 552  28 260 555 274 502 495 612 112 325 168
 157 729 589 692 176 624 160  77 467 610  97 429 715 133 479 686  23 602 161  83 432  47 131 681 127 538 210
 645 207   3 490  12 283 119 385 238 484  20 139 535 574 546 416 100 491 656 175 506 682 719 410 476 195 291
  39 653 662 152  62 567 487 331 121 165 465 627 323 166 108 164 458 517 222 657 370 503 338 488  54 641 515
 330 310 407 470 462 124 439 453 433  64 492 451 405 409 434 387 709 254 184 716 403 441  22 373 253   2 428
 415  92  74 551 620 364 631 159 271 437 431 400 379   9 399 472 395 177 361 218 396 378 272 513 677 388 376
 530 514 527 582 360 363 240 632 143 311 613 282 383 352  33 371 469  53 365 351 101 382 459 430 307   7 695
 305 339 525 380 628 303 317 366 349 367 300 301 341 342 475 262 343 375 295 377 326 287 526 357 435 321 313
  96 239 693 597 226 178 109 723 298  59 277 297 134 621 456 241  85 710 191  99 328 302 569   6 543 605 445
 566 148 554   4 460 444 691 296 625 594 224  57 603 120 548  37 322 169 480 651  49 633 398 217 702 419 250
 696  63 123 337 353 411 392 587 665 304 474 522 482 225 126 724 485 427 512 137 581  87 461 473 595 244 294
  38 257 727 200 232  98   8  73 220 664 406 717 355 708 333 449 557 689  35 418 228  25 197 174 113 359 617
  67 544 446 336  89 622 563 223  31 498 251 564 193 189 214 206 648 386 671 202 637 471 151 705 286 122 579
 486 672 362 173 266 726 171 678  43 345 215 318 247  69 186 559 447 504 412  80 423 279 638 541 390 573  52
 674 424 454 722 334 181 190  44 598 340 636 170 149 188  14 668 585 519 436 642  13 129 634 258 457 255 141
 187 450  72 216 464 312 146 496 640 508 706 499 646 284 690 629 231 147 319 509 105 584 132 156 442 243 414
 117 438 580  51 413 606 356 618  29 309 556  40 586 520 185 275 684  91 670 183 501 125 248 553 521  55 545
 700 261  24 344 524 209 426 153 590 680  32 332  68 562 707  17 666  46 324  86 163 249 703 649  93 593 654
 604  19 547  60 144  61  26 290 452 194 713  18 673 316 308 234 483 329 639 314 676 718 335  30 571 533 568
 118 145 466 443 711 537 626 205 393 529 138 694  16 619 616  88 577 114 213 572 267 162 354  78 422 540 212

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.0058e+07us (= 10058ms, 10.058s)
Satisfaction error: 8
Number of search iterations: 3115
Number of local moves: 2580 (including on plateau: 2532)
Number of local minimum: 27 (including on plateau: 312)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 289 463 420 292 58 233 265 688 687 263 198 196 75 320 128 276 158 659 578 698 607 150 542 348 140 425 701 => the sum is 9857 rather than 9855
Problem in row 10: 645 207 3 490 12 283 119 385 238 484 20 139 535 574 546 416 100 491 656 175 506 682 719 410 476 195 291 => the sum is 9797 rather than 9855
Problem in row 16: 96 239 693 597 226 178 109 723 298 59 277 297 134 621 456 241 85 710 191 99 328 302 569 6 543 605 445 => the sum is 9127 rather than 9855
Problem in row 17: 566 148 554 4 460 444 691 296 625 594 224 57 603 120 548 37 322 169 480 651 49 633 398 217 702 419 250 => the sum is 10261 rather than 9855
Problem in row 18: 696 63 123 337 353 411 392 587 665 304 474 522 482 225 126 724 485 427 512 137 581 87 461 473 595 244 294 => the sum is 10780 rather than 9855
Problem in row 19: 38 257 727 200 232 98 8 73 220 664 406 717 355 708 333 449 557 689 35 418 228 25 197 174 113 359 617 => the sum is 8897 rather than 9855
Problem in row 20: 67 544 446 336 89 622 563 223 31 498 251 564 193 189 214 206 648 386 671 202 637 471 151 705 286 122 579 => the sum is 9894 rather than 9855
Problem in row 23: 187 450 72 216 464 312 146 496 640 508 706 499 646 284 690 629 231 147 319 509 105 584 132 156 442 243 414 => the sum is 10227 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 700 360 260 711 586 535 280 520 541 450  50 198 634 178 558 669 284 153 373 150   1 312 453 120 592 299 728
  74 691 311 435 523 148 445  90 308 567 100  87 118 141 238 180  18 200 684 560 664 609 639 553 169 647 656
 135 530 617 338  78 382 614 207  35 610 439 225 579 510  17 692 674  62 160 210 615 330 306 110 635 101 644
 704 414 552  29 336  57 309 482  24 496 593 478 124 621 671 400 708 442 403 488 374 717  82 655 138  53 446
 245  92 602 557 352 192 429 174 612 597 575 555 524  59 505 276 147 416 145 492 319 392 235  48 390 556 369
  94   5 666 168 116 618 188  91 112 183 155 693 185 653  84 596  73 649  25  66   3 544  40 278 322 605  27
 516 512 705 430 359 625 531 162  43 218  20 339   4 263 379 380 228 136 517 495 633 254 648 529 130 121 678
 266 469 230 316 220 707 677 499 582 128 413 706 367 660 262 559  72 247 547 424 509 581 126 268 108 540 494
  22 103 646 641  65 289 712 305 214 685 357 580 470 537 212 175 532 197 378 265 683 333  42 122 389 577 324
 497 578 191 184 542 718 690 663 720 550 703 106 156 451 199 528  77 459 481  36 627 249  75 613 591 518 604
 723 428 205 534 177 227  16 533  54 351 548 105 694 149 507  71 519 719 698 402 246 636 387 217 159 334 216
 371 599 467  69 665 362 398  13 206 406 137 384 568 410 361 237 589  55 139 672  51 521 498 431 460 332 454
 474 427 420 231 366 123 493 404 295 421 432 463 611 386 572 443  52 452 426 408 326 313  38 375 341 310 253
 234  93 600 508  80 224 285 573 202 632 722 179 418 551 129 181 209 241 657 176 475  37 438 642 187 699 483
 301 296 346 726 355 433 292 257 335 637 345 348 356 407 267 315 274 208 340 331 393 370 623 328 329 248 395
 682  67  47 676 472 286 251 318 203 444 670 358 302 401 250 307 585  21  97 142 687 479 630 522 466  95 397
 696 114 504 485 163 554 525 282 721 275 270 383 325 477 243  98 304 189 344 583  96 628 368 489 244 239 256
 277 232 167 626 144  41 616 675 337 242 146 458 539 673 365 297 215 513 500 327 291  19 686 353 710 440 638
 211 491 165 117 724 680  56 716  39  32 219 447 376 448 607 662 347 538 226 608 190  12 152 650 515 620   7
 173 425 388 317 457 236  76 213 702 240 584 381 645 182   2 501 164 714 194 264  99 363 587 434 545 514 455
 506 273 170 490 571 668  44 298 688 598 294 561 140 293 255 303 713 372 527  60 288 204 465 436 476  49 113
  88 480 300  83 314 196  31 471 576 590 166 695 119  81 727 464 437 562 364 729  70 252 606 391 271 343 449
 411 473 502 287 111 409 526 419 396   9 394 574 570 195 456 689 511 157 107 652 272 323 279 320 258 354 201
 283 143 151 125 441 269 566  23 223 281 564   6 350 221  68 565 640 701  63 377 536 486 154  30  14  33 233
 594 222  10  34 259 133 132 681 549  45 468 349 569 131 629 193 595 543 290 651 603 624 622 115 161 601 102
 563 659 462 321 654 658 127  89 715  64  79  11  86 134 661  28 385 487 709  58 399 109 415 484 667   8 172
  15 679 171 417 725  85 546 697 423 104 412 186  26 643 631  46 503 422 461 229 405 158 261 342 588 619  61

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00031e+07us (= 10003.1ms, 10.0031s)
Wall-clock time (full program): 1.00592e+07us (= 10059.2ms, 10.0592s)
Satisfaction error: 9
Number of search iterations: 3075
Number of local moves: 2573 (including on plateau: 2527)
Number of local minimum: 27 (including on plateau: 309)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 700 360 260 711 586 535 280 520 541 450 50 198 634 178 558 669 284 153 373 150 1 312 453 120 592 299 728 => the sum is 10695 rather than 9855
Problem in row 4: 704 414 552 29 336 57 309 482 24 496 593 478 124 621 671 400 708 442 403 488 374 717 82 655 138 53 446 => the sum is 10796 rather than 9855
Problem in row 6: 94 5 666 168 116 618 188 91 112 183 155 693 185 653 84 596 73 649 25 66 3 544 40 278 322 605 27 => the sum is 7239 rather than 9855
Problem in row 8: 266 469 230 316 220 707 677 499 582 128 413 706 367 660 262 559 72 247 547 424 509 581 126 268 108 540 494 => the sum is 10977 rather than 9855
Problem in row 10: 497 578 191 184 542 718 690 663 720 550 703 106 156 451 199 528 77 459 481 36 627 249 75 613 591 518 604 => the sum is 11806 rather than 9855
Problem in row 18: 277 232 167 626 144 41 616 675 337 242 146 458 539 673 365 297 215 513 500 327 291 19 686 353 710 440 638 => the sum is 10527 rather than 9855
Problem in row 24: 283 143 151 125 441 269 566 23 223 281 564 6 350 221 68 565 640 701 63 377 536 486 154 30 14 33 233 => the sum is 7546 rather than 9855
Problem in row 25: 594 222 10 34 259 133 132 681 549 45 468 349 569 131 629 193 595 543 290 651 603 624 622 115 161 601 102 => the sum is 9905 rather than 9855
Problem in row 26: 563 659 462 321 654 658 127 89 715 64 79 11 86 134 661 28 385 487 709 58 399 109 415 484 667 8 172 => the sum is 9204 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 490  47 125 222 230 109 203 643 693 694 562 409 702 640 102 233 708 616 208 344  52  74  42 423 395 185 704
 535 697 225 512 413 120 688 169 570 118  69  66 590   9 266 679 527 216 657  17 255 332 705 457  84 678 201
 613 112 552 595 726 210 724 424 248 633 157 599 611 335 549  87 270 464 257 301 435 636 168 471 647  76 606
 525 483 388 243 315 265 214 218 215 523  16 555 379 376 463 129 170 384 575 396 717 419 147 618 316 450 356
 364 686 614 355 258  27 539 127 622 373  61 242 495 676  43 375 352 104 415 274 637 628 571 430 182 656  55
 681 339  30 130 641 592   2 437 302 543 689  99 131 236 381 515 150 711  44  86 459 547 299 612 521 261 418
   4 250 645 126 414 649 105  78 426 138 362 720 569 445 721 522  26 262 714  65 580   6 282 548 671 327 200
 229 610 658 532  32 651 156 466  40 295 331 652 425 347  85 121 468 558 455 517 489 528 514  46 204  53 393
 303 256  28  24 675 557  71 673 507  62 607 706 172 454 670 576 358  29 500 695  12 630 173 421  23 496 177
 174 486 247 461 662 306  79 568 665 163 718 197 709 314 321 349 221 484 166  75 504 244 519 192 294 456 281
 655 526 307 451 234 452 476  49  35 453 280 407 499 369 473 503 443 439 639 140 493  94 460 114 440 416   8
 189 405 533 551  73 487 531 598 432 627 198 434  51 141  37 410 438 433 115 623 188  13 378 698 193 617 462
 293 207 289 387 691 145 680 334 273 567 263  96  18  81 402 264  70 677 573 634 342   5 605 615 707 119 518
 158 288 211 501 252 431 382 692 142 404 223  95 181 385 583  60 360 353 609 153 589 367 361 135 530 710 700
 328 310 276 397 338 333 389 368 278 346 329 359 345 320 712 380 317 305 323 330 600 300 357 553 313 340 309
 143 727 428 238 366  38 237 516 149 529 191 343 479 298 199 577 311  83 545 621  15 498   7 650 588 403 664
 436 319 164 725  58 482 492 723 190 722 228  34 322 308 687 602 674 132 348  63 408 524 683 137 429 591 511
 412 227 648 653 178 699 619 297 401 254 110 213 271 585 497 107 672 365 447 561 275 246  36 422  56 253 351
 586 160 372 608 564 205 400 326 239 663 659 581 324 249 111 399 472 235  14 668  72 386 566 661 546 113 370
 594 139 604 124 272  59 465 167 632 232 544 377 240 337 219 666 579 179 560 259 245 161 625 106 646 128 696
 703 644 155  77 510 719 224 391  39 325 635 626 449 563 505 442 220 304  68 542 144 154 458 284 296 183 195
 506 554 398 260 116 136  98 574 446  19 488 520  50 209 226 184 624 690 312 444 584 474 394 292 269 469 122
 251 241 603 279  91 318 638 285 559 467 478 287 231 728 134 175  22 491 267 481 682 420 538 196 146 354 187
 101 541  97 148 341 406 202 475 716  21 100 477 536 593 631 667  93 502 411  92 485 654 283   1  90 508 684
 448 133 108 701 371 587 601 206 417  11 291 534  80 715 629 596 642 103   3 729 350 685  48  64 470 171 162
  89  41 578 165 540 392 363  20 537 290 597  33 336  88  57 212 509 550 620 180  67 117 123 268 217 286 374
  45 427 572 390 494 480 277  31  82 383 669 194 660  54 152  25 159 186  10 565 176 713 513 441 582 556 151

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00031e+07us (= 10003.1ms, 10.0031s)
Wall-clock time (full program): 1.00504e+07us (= 10050.4ms, 10.0504s)
Satisfaction error: 10
Number of search iterations: 2637
Number of local moves: 2258 (including on plateau: 2213)
Number of local minimum: 9 (including on plateau: 233)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 613 112 552 595 726 210 724 424 248 633 157 599 611 335 549 87 270 464 257 301 435 636 168 471 647 76 606 => the sum is 11506 rather than 9855
Problem in row 5: 364 686 614 355 258 27 539 127 622 373 61 242 495 676 43 375 352 104 415 274 637 628 571 430 182 656 55 => the sum is 10161 rather than 9855
Problem in row 6: 681 339 30 130 641 592 2 437 302 543 689 99 131 236 381 515 150 711 44 86 459 547 299 612 521 261 418 => the sum is 9856 rather than 9855
Problem in row 16: 143 727 428 238 366 38 237 516 149 529 191 343 479 298 199 577 311 83 545 621 15 498 7 650 588 403 664 => the sum is 9843 rather than 9855
Problem in row 17: 436 319 164 725 58 482 492 723 190 722 228 34 322 308 687 602 674 132 348 63 408 524 683 137 429 591 511 => the sum is 10992 rather than 9855
Problem in row 19: 586 160 372 608 564 205 400 326 239 663 659 581 324 249 111 399 472 235 14 668 72 386 566 661 546 113 370 => the sum is 10549 rather than 9855
Problem in row 22: 506 554 398 260 116 136 98 574 446 19 488 520 50 209 226 184 624 690 312 444 584 474 394 292 269 469 122 => the sum is 9458 rather than 9855
Problem in row 23: 251 241 603 279 91 318 638 285 559 467 478 287 231 728 134 175 22 491 267 481 682 420 538 196 146 354 187 => the sum is 9549 rather than 9855
Problem in row 26: 89 41 578 165 540 392 363 20 537 290 597 33 336 88 57 212 509 550 620 180 67 117 123 268 217 286 374 => the sum is 7649 rather than 9855
Problem in row 27: 45 427 572 390 494 480 277 31 82 383 669 194 660 54 152 25 159 186 10 565 176 713 513 441 582 556 151 => the sum is 8987 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 405  40  55 267 366  18  94 512 521  20 577 502 225 283 319 669  62 384 581  38 214 407 578 271 334 649  53
 696 137 528 692 601 302 640 515 193 395 699  65 516 260 604 728 326 379 294 487  60 224  80 702  15  57 442
 639  11 156 479  30 118  16 704 176 720 352 717 219 171 422 542 471 433  46 684 691 627 321 109  48 653 300
 266 499 531 151  43 365 688 462 638 643  66 637 613 472   3 188 549 597 246 332 400 476 440  63 179  45 263
 236 206 237 295 115 454 448 346 657 377 367 655 647 493 729 261  27 641 126 527 675  23 221 145 173 182 592
 386 426 439 408 181  81   4 663 514 282 726 164 107 103  19 227 672 140 455 550 719 242 278 328 644 486 611
 191  89 676 574 529 223 513 474 233 565 571 609 325 622 694  75  72 629 161 216  82 625 158 333  70  95 451
 315 198  25 192 425 306  77 245 546  14 276 349 518 401 633  50 557 526  34 575  13 323 705 588 570 681 713
 547 174 248 165 168 623 583 431 347 450 255 157 374 217 339 402 376 703 279 532 212 144 303 510 651 606  59
 636 356  73 100 312 683 727 186   9 228  21 285 427 700 146  78  87 270  22 579 113 670  12 187 551 259 284
 147 706 162 630 301 327 679 178 239 123 291 478 205 288 716 235 337  41 539 343 428 389 477 538 254 359 445
 545 568 485 108 621 453 443   6 119 635 229 385  79 595 603 345 148 238 290 522 535 481  29 648 399  58 419
 467 416 299 393  98 563 152 614 169  76 243 722 375 590 189 708 507 121 322 602 364 409 413 287 232 330 194
 274 256 262 449 324 340 342 417 391 406 438 424 370 234 268 411 272 488 362 404 305 336 344 469 308 589 372
 530 558 289 357 338 354 403 341 441 628 150 134 329 519 368 292 394 382 412 110 250 446 390 125 461 436 418
 562 555 666 105 458 111 484 626  24  49 218 695  86 444 686 468 599 114 101 415  84 707  88 573 388 624 432
 204 615 701 587 373 215  32 556  61 452 490 184 665 309 139 659 420 656 304 383 619  39 634 201 153 112  92
  42 275 506 410 509 480  28  85 351 505 460 251 605 135  33 430 586 429 661 320 350 559 482 423 335 298 307
 175 196 650 631 711 381 117  44 470  93 371 203 361 280 685  52 434 257 520 465 414 129 582 397 247 632 358
 122 463 143 508 475 718 131 459 569  17 494  47 159 316  96 652 104 226 489 130 500 483 501 596 496 540 421
 554 447 200  37 213 249 566 311 714 617 698 544 154 537 220 313 668 564 553 585 491  91 511  71 677 132 163
   2 208 396 620  83 392 572 378 680 697   7  74 355 673 567 353 183 286 534 102 710 608  67 533 363 240 172
 457 209 723 222 618  51 561 369  35 241 503 277 525 473 523 252 712  90 318  56 667 517 142 166 149 495 504
 331 610   1 593 690 612 497 380 678 106  68 293 548  36  69 387  99 536 645 170 265  10 580 642 160 167 682
 654 297 671 128 466 310 141 185 258 498 435 207 195 136 524 273 269 456 591 492 541 646 210 197 693 138 244
 124 724 296 211 231 662 202 314 725 360 190 133 674 560  31 552 607   5 281 120 127  64 709 598 584 594 177
 348 616 437 543 576 464 715  54  97 658 660 664 199   8 230 253 317 264 689 116  26 180 600 155 721 398 687

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.006e+07us (= 10060ms, 10.06s)
Satisfaction error: 7
Number of search iterations: 3101
Number of local moves: 2611 (including on plateau: 2565)
Number of local minimum: 21 (including on plateau: 301)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 405 40 55 267 366 18 94 512 521 20 577 502 225 283 319 669 62 384 581 38 214 407 578 271 334 649 53 => the sum is 8444 rather than 9855
Problem in row 2: 696 137 528 692 601 302 640 515 193 395 699 65 516 260 604 728 326 379 294 487 60 224 80 702 15 57 442 => the sum is 10637 rather than 9855
Problem in row 10: 636 356 73 100 312 683 727 186 9 228 21 285 427 700 146 78 87 270 22 579 113 670 12 187 551 259 284 => the sum is 8001 rather than 9855
Problem in row 12: 545 568 485 108 621 453 443 6 119 635 229 385 79 595 603 345 148 238 290 522 535 481 29 648 399 58 419 => the sum is 9986 rather than 9855
Problem in row 16: 562 555 666 105 458 111 484 626 24 49 218 695 86 444 686 468 599 114 101 415 84 707 88 573 388 624 432 => the sum is 10362 rather than 9855
Problem in row 21: 554 447 200 37 213 249 566 311 714 617 698 544 154 537 220 313 668 564 553 585 491 91 511 71 677 132 163 => the sum is 10880 rather than 9855
Problem in row 27: 348 616 437 543 576 464 715 54 97 658 660 664 199 8 230 253 317 264 689 116 26 180 600 155 721 398 687 => the sum is 10675 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 470 543 370 541 628 181 398 189 292 337  47 582 315  74  53 410 153 708 599  32 214 416  95 695 565 246 702
 308 647 518 597  61 502 693 723 414 534 415  79 347  43 666 519 533   3 202 131 339  31 235 156 362 688 109
 710 627   4 209  99 481 278 335 185 167 569 424 586 199 216 618 665  87 717 696  77 474 354 525  81 168 304
  30 654 170 644  83 707 448 384 122 175 521 642 163 612 183 296  93 648 613 125 176 256 450 625 317  59 659
 166 434 148 306 623 305 499 440 154 374 242 291 136  63 268 213 369 685 641 573 567 715 548 126 215 594 160
 515 219 232 682 516 364 728 192 333 714  64 127 718  15 143  57 467 614  65 247 212 536 562 658 446 263 610
 564 673  18 103 724 239 561 439 476 303 517 150 190 571 130 174 140 353  60 280 583 119 544 161 704 511 568
 169 325 254 342 655  71 379 351 631 604 179 598 457  42 483 422 194 310 311 563  67 662 438 221 616 478  33
 159 313 531 726 588  14 460  44   2 638 621  91   6 477 413 405  24 469 520 395 676 137 657 187 677  70 555
 324  78 144   8  35   1 290 620 694 141 198 285 624 491 321  22  51 510 346  92 272   9 686  38  28 546 539
  13  29 286 429 445 444 437 463 458 489 443 426  45 427 442 201  96 449 428 462 454 447 433 411 452 432 314
 255 698 149 661 271 720 240 497   5 487 116 530 356 164 633 566 602 375 581 316 281  27 327  17 289 361 603
 524 601  72 514 472 668 282  39 547 526 385 230 494 630 288 713 574 507 386  69 529 300  12 238 503 656 453
 425  90 535 363 231 249 552 275 371 377 652 468 407 274 406 430 667 632  34 496 498 691  94 145 195 191 107
 637  76 106 345 706 435 113 220 589  55 358 180 505 651 579  25 129  10 680 699  26 540 629 572 265 701 495
 320 389 712 488 391 378  37 459 669 121 606 322 617 307 273 294 330 309  58 479 409 368 338 302 196 352 331
 162  19 678  75 253 558  11 559 205 237 117 719 270 436 480 485 412 334 486 155  88 500 509 523 650 108  41
 636 284 512 490 355  89 626  66 551 264 689 538 461 388 151 634 208 266 206 592 344 135 408 257 365 123 217
 397 182 703 138 277 556 349 639 329 252 396 142  84 223 711 593 269 575 211 147 193 466 262 576 101 403 681
 456 473 367 203 134 508 679 251 643 298 241 350 258 326  86 244 646 120 506 615 683 260  46 418 299  23 722
 465 132 687 236 218 605 210 328 227 348 102 557 674 248  49 387 475 341 261 359 200 585 560 279 513 727  82
 224 542 635  56 554 178 172 250 112 287 319 372 233 619 690 670 532 392 399 527 600 225 152 332 295 390  98
 675 504 366 431   7 276 591 664 340  50 622  16 204 709 222  52 501 226 146 360 482 660 114 684 608 100 245
 259 729 545 177 229 580 184  36 423 663 484 700 283 716 243 607 139 157 336 404 653  54 197 380 522 672 186
  21 373 318  62 721 188 115 110 402 133 207 645 570 128 578 550 464 493 549 649 357 553 705 301  73 293 297
 577  48 267 609 158 393 419 692  85 697  20 323 471 382 611  40 451 111 417 312 492 455 124 587 118 595 401
 394 173 528 420 421 165 104 590 596 584 725  68 381 640 537 228 671 171  97  80 383 234 376 441 400 105 343

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0003e+07us (= 10003ms, 10.003s)
Wall-clock time (full program): 1.00589e+07us (= 10058.9ms, 10.0589s)
Satisfaction error: 8
Number of search iterations: 3012
Number of local moves: 2501 (including on plateau: 2454)
Number of local minimum: 28 (including on plateau: 307)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 515 219 232 682 516 364 728 192 333 714 64 127 718 15 143 57 467 614 65 247 212 536 562 658 446 263 610 => the sum is 10299 rather than 9855
Problem in row 10: 324 78 144 8 35 1 290 620 694 141 198 285 624 491 321 22 51 510 346 92 272 9 686 38 28 546 539 => the sum is 7393 rather than 9855
Problem in row 12: 255 698 149 661 271 720 240 497 5 487 116 530 356 164 633 566 602 375 581 316 281 27 327 17 289 361 603 => the sum is 10127 rather than 9855
Problem in row 13: 524 601 72 514 472 668 282 39 547 526 385 230 494 630 288 713 574 507 386 69 529 300 12 238 503 656 453 => the sum is 11212 rather than 9855
Problem in row 15: 637 76 106 345 706 435 113 220 589 55 358 180 505 651 579 25 129 10 680 699 26 540 629 572 265 701 495 => the sum is 10326 rather than 9855
Problem in row 17: 162 19 678 75 253 558 11 559 205 237 117 719 270 436 480 485 412 334 486 155 88 500 509 523 650 108 41 => the sum is 9070 rather than 9855
Problem in row 24: 259 729 545 177 229 580 184 36 423 663 484 700 283 716 243 607 139 157 336 404 653 54 197 380 522 672 186 => the sum is 10558 rather than 9855
Problem in diagonal 1: 702 688 81 625 548 536 583 563 520 510 96 566 288 274 505 322 117 264 329 251 210 178 7 177 318 48 394 => the sum is 9700 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 102 511  73 568 185 458 326 160 127 609 455 399 583 694 361 153 352 345 632  11 219 281 245 182 577 449 476
 308 639  18  76 403 312 721 603 627 570 407 542 141  29 547 655 112   4 172  49 649 678  66 434 468 372 253
 728 557 628   9 122  35 662 139 726  13 515 666 446 269 347 586 580  89 422 344 279  92 221 703 630 188 621
 701 370 699 664 492 411 648  65 234  28  42 315  20 439 710 278 619 527 714 645 562  48  80  40 186  64 254
  98 453 365 647 393 509 493 596  14 616 321 107 474 198  30 684 424 293 267 479 192  32 482 409 679 528  72
 676 228 672 117 142 469 464 658  97 374 421 275 208 169  63  68 363 179 104 575 226 356 176  75 317 364 614
 473 129 404 623  47 435 554 285 537 156 526 579 110 391 247 480 394 717  17 190  24 641   3 572 550 525 246
 366 380 121  69  84 652 288  94 173 456 626 567  34 566 556 357 323 663  87 519 210 375 377 617 147  12 178
 514 651 459 358 349  33 520 496 507 157   2 137 659 487  27 461 428 477 406 443 136 463   6 296 437 460 486
 276  60 193 513 592 126 283 388 512 392 606  83 338 233 602  23 417 685 543  54 341  41 518 634 355 687 661
 560 727 264 266 257 540 109 433 494 199 292 134 438 249 336 373 195 145 670 217  57 299 597 598 128 569 709
 272 385 508 305 220 334  39 300 558 324 546 457 677 218 695 397 211 441 113 171 189 605 331 416 702 601 447
 445 545 429 722 310 131 155 719 418 270 162 472 378   7 133 243  37 591 665 691 265 607 252 242 302 413 251
 353 115 408 686 383  91 236 282 163 488 262 280 561 475 309 633 384 369 362 237 538 401 376 227 504 301 431
 644 140 268  52 294 725 671 204  46 454 263 340 273 414 563 224 106 491 471 624 517  50 194 683 135 613 396
 146 207 729  55 599 690 389  95 346 290 667 724 500  51 669  21 581 379 325 255  79 427 559 470  44 329 229
 541 216 590 584  96 209 552 582 307 668 223  86 303 555 244 318 311  70 495 230 485 350 337 335 367 708  93
 235 723 175 167 696 191 595 402 306 174 181 420  71 640 291 715 713 274 250 111 673 212 631 166 222  90 531
  53 159 120 304 704 330  45 501 322 712 170  99 164  85 343 657 548 574 232 360 442 654 697 125 680 197 578
   5  81 314 481 138 576 277 689 700 151 201 425 706 177 333 149  82 203 539 452 553 489 529   8 530  16 611
 629 450 320 168 419  77  59 544  10 693 716 114 313 612 638 524 682 180  25 498 490 240 502 295 184 215 258
 123 124 462 688 718 674 205 298 660 643 101 261 642 400 698 390 444 348  67 213 395 150 405 183 637 214 342
 351 259 516 152 533 503 148  88 382 521  31 565 588 551 549 119  56 615 286 635 692 571  78 522  26 108 410
 564 430 636 436 432 231 448 386 238  22 483 622 260 412   1 587 650 143 165 707 316 705 594 534 297 646 116
 105 287  43 319 618 154 585 239 332 256 593 589 103 608 371  61 510 284 600 711 532 225 478 466  58 328  19
 426 354 200 359 130 620  15 158 415 423 656 465 381 720 118 497  62 144 653  36 505 327 440 100 506 610 535
 161 675 241 467 499 339 368 451 604 196 387 132 484 206  74 202 271 625 573 398 289 536 681 523 187 248  38

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00559e+07us (= 10055.9ms, 10.0559s)
Satisfaction error: 10
Number of search iterations: 3448
Number of local moves: 2915 (including on plateau: 2869)
Number of local minimum: 15 (including on plateau: 330)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 102 511 73 568 185 458 326 160 127 609 455 399 583 694 361 153 352 345 632 11 219 281 245 182 577 449 476 => the sum is 9533 rather than 9855
Problem in row 3: 728 557 628 9 122 35 662 139 726 13 515 666 446 269 347 586 580 89 422 344 279 92 221 703 630 188 621 => the sum is 10617 rather than 9855
Problem in row 6: 676 228 672 117 142 469 464 658 97 374 421 275 208 169 63 68 363 179 104 575 226 356 176 75 317 364 614 => the sum is 8450 rather than 9855
Problem in row 8: 366 380 121 69 84 652 288 94 173 456 626 567 34 566 556 357 323 663 87 519 210 375 377 617 147 12 178 => the sum is 8897 rather than 9855
Problem in row 10: 276 60 193 513 592 126 283 388 512 392 606 83 338 233 602 23 417 685 543 54 341 41 518 634 355 687 661 => the sum is 10156 rather than 9855
Problem in row 12: 272 385 508 305 220 334 39 300 558 324 546 457 677 218 695 397 211 441 113 171 189 605 331 416 702 601 447 => the sum is 10462 rather than 9855
Problem in row 20: 5 81 314 481 138 576 277 689 700 151 201 425 706 177 333 149 82 203 539 452 553 489 529 8 530 16 611 => the sum is 9415 rather than 9855
Problem in row 22: 123 124 462 688 718 674 205 298 660 643 101 261 642 400 698 390 444 348 67 213 395 150 405 183 637 214 342 => the sum is 10485 rather than 9855
Problem in row 24: 564 430 636 436 432 231 448 386 238 22 483 622 260 412 1 587 650 143 165 707 316 705 594 534 297 646 116 => the sum is 11061 rather than 9855
Problem in row 25: 105 287 43 319 618 154 585 239 332 256 593 589 103 608 371 61 510 284 600 711 532 225 478 466 58 328 19 => the sum is 9474 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 107 722   2 391 518 102 646  18 681 512 360 584 629 717 216 184 117 297 368 244 121 120 586 188 465 513 447
 223 639 600 420 401 571 597 181 133 602 356 599   1  64 605 302 574  45 406 458 286 483 277 466  99 293  78
 611  73 695 318 411 606  56 197 670 161 632 207 712 119 448  19  92 123 601 540 608 255  27 413 628 235 437
  86 687 205 625  69 634 284 312 726 684 492 719 315 381 182  48 281 331  61 233 258 309 489  79  39 640 686
 407  94 546 260 547 314 723 701 526 178  28 386 374 505 111 417  15 500 710 593 713  60 497 246  22 270 112
 604 443 159 393 595 165 645 454 481 169  20 697 241 554 170 619 424 130 479 369  63 538  52 666 191 321 213
 485 698 728 231 323 224 226 495  50 289 278 354 683 140 268 517 553  89 234  59 583 338  37 665 347 416 545
 204 299 667 176 364 631 469 644 262 136 587  35 498  70 196 692  49 711  46  26  85 565 522  77 672 636 536
 664 430 330 158  81 152 566 150 291 376 326 210 548 294 661 271 346  71 487 709 310 242 725 614 156 630  57
 304  91 103 674 704 727 525   6  74 282 549 480 671 696 402 199 718 471 349 343 472 708 179 463 383 167 109
 143 329 275 247 192 707  31 177 609 387 451 662 276 535  14 261 689  41  36 582 589 195 362 541 643 229 652
 237  58 395 333 257  17 490 658 202 648  95 388 131 716 588  72 649 580  47 141 685 183 561 296 590 598 240
 432 594 425  55 423 379  65 365 434  82 370 372 404 467 382 361 449 409 371 389 367 412 209 439 377 385 438
 446 530   5 581 496 673  84 134 357 714 375 185 579 206 555 129 153 621 352 113 358 316 441 328 528   4 592
 250  24 418 219 137 473 544 101 267 654 435 248 285 550 339 392 186 624 501 637 618 668 341 222   3 575 144
  67 515 203 616 410 208 307 104 399  68 403 468 394 212 305 622  76 568 596 615 494 445 503 215 288 116 638
 514 225 251 426 678 486 635 110 108 520 325  21 427  30 703 543  80 380 249 453 699 243  23 166 414 702 444
 373 221 488 694 100 556 175 348 542 232 482 272 493 138 313 516 508 265 577 151 351  29 301 300 626 228 576
 660 572 570  43 557 280 273 521 252 317 139 157 436  13  40 720 647 190 539 475 230 353 390 259 256 456 510
 729 350 149  53 470 523 171 680 146 617 415 155 218 663 201 452 531 679 623  38 384 585  42 690 659  16  10
 484 578 340  96 238 187 431 705 650 558 603 464 560 172 457 180 422 168 266 189 164 502 118   7 552 398 366
 706 126 641 534 642 295  33 160 217 320 573 147  98 359 688 363 612 220 274 620  97  44 657 462 700  93 174
 334 135 504 450 128 419 607 610 193  90 327 287 132 429 491 122 477 433 529 236 651 324 591 322 303 569 162
 194 148  62 564  54 106 198 721 507  87 459  51   8 211 124 551 264 559 290 682 214 655 693 440 105 145 292
 269 405 154 724 308 163 114 669 461 283 506 527  83 460 396 656 344 337 519 355 421 562 115 200  75  34 715
  11 332 532 239 253 245 563 125 298 511 142 567 627 478 476 173 254 336 279 342  25 633 675 691 428 533 227
 311 537 408 335 499  12 397 509 319 378 127 613  32 676 524 474 345 677  66 263   9  88 442 400 306 653 455

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00557e+07us (= 10055.7ms, 10.0557s)
Satisfaction error: 6
Number of search iterations: 3360
Number of local moves: 2868 (including on plateau: 2820)
Number of local minimum: 20 (including on plateau: 327)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 223 639 600 420 401 571 597 181 133 602 356 599 1 64 605 302 574 45 406 458 286 483 277 466 99 293 78 => the sum is 9759 rather than 9855
Problem in row 3: 611 73 695 318 411 606 56 197 670 161 632 207 712 119 448 19 92 123 601 540 608 255 27 413 628 235 437 => the sum is 9894 rather than 9855
Problem in row 10: 304 91 103 674 704 727 525 6 74 282 549 480 671 696 402 199 718 471 349 343 472 708 179 463 383 167 109 => the sum is 10849 rather than 9855
Problem in row 20: 729 350 149 53 470 523 171 680 146 617 415 155 218 663 201 452 531 679 623 38 384 585 42 690 659 16 10 => the sum is 10249 rather than 9855
Problem in row 24: 194 148 62 564 54 106 198 721 507 87 459 51 8 211 124 551 264 559 290 682 214 655 693 440 105 145 292 => the sum is 8384 rather than 9855
Problem in row 26: 11 332 532 239 253 245 563 125 298 511 142 567 627 478 476 173 254 336 279 342 25 633 675 691 428 533 227 => the sum is 9995 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 729 725 728 129 473 102   2  49 122 612 105  10 707 488 516 322 264  28 710 712  14  37 262 470 384 455 700
 591  16 424 319  70 279 252 185 382 670 293 711 399 462 618 379 156 599  73 219 527 166   9 571 608 680 197
 277 388  51 704 575 101 481  94  47 683 211 191 539 624  72 243 515 303 307 672 318 214 659 651 636 241  58
 561 545 321 555 464 677 323 174 255   5 413 273 178 648 280 625 406 431 157 151 224 284 139 637 235 476 418
 578 130 281 520 645 182 460 619 507 696 228  60  36 184 125 600 722 263 647 435 247 498 601 572 118  54 172
  64 302 373 586 169 585 679 259 598 434 162 492 107 207  44 567 232 699 531 212 188 535 499 143 552 124 512
 468 631 720 479 533 514 724 333 141 349 164 149  88 715 511 719  41 117 165 244 313  42 275 412  12 509  15
 676 652 688 261 653 144 177 551 360 348 604 324 627 326 134 140 218 593  65 500  96 193 345 513 109 329 229
 542  85 510 403 362  95 226 315 428 440 579 458 638 312 282   3 543 714 452 334 655 475 199 426  81 630 559
  61 596   6 248 721 390 159  99 687  29 484 614 565 208 563  53 296 451 119 111 590 521 150 698 294 471 671
 557 495 490 457  35 497 597 459  22 588 415 449 438 626 501 467 442 278  26  76 448 454  89  17 439 138 355
 654  77 222  46 209 357 536 544 632 562 650 429  83 437 554 158 665 530 430  69 606 239  57 203 465 155 286
 180 640  63 609 314 493 487 456 325 643 673 221  21 254 370 573 153 570 603 463 703  93 346  34 223 306  39
 343 300 353 341 380 375 327 381 409 364 387 400 405 291 393 332 337 270 368 522 372 351 397 359 394 366 338
 421 104 482 525 367 210 385 723 292 195  86 547 356  59 633 256 347 641 317 553 602  19 529 253 251 258 444
 206   7 192 299 331 344 350  98 167  62 392 335 494 363 398 340 564 328 658 635 198 661 620 295 697 336 485
 100 577 128  48   1 309 201 450 690 179 540 175 616 190 217 646 301 425  67 272 595 657  11 537 518 713 692
 187 581 441  23 706 649 230 160 112  78 546 114 308  91 330 108 311 491  66 402  92 486 584 623 691 605 236
  24 285 708  43 446  18 478 664 289 233  25 528 148 695 613 622 611 260 135 508 419 371 453  33 594 216 436
 168 505 320 477 131 183  38 245 265 310 176 550 227 589 718 200 395 483 717 137  31 660 189 215 681 662 583
 391 685  75 726 136 504 238  82 116 342 422 237 560 480 377 304 472   8 249 686 634 502 517 234 205  56 617
 423 171 266 204 106 142  79 705 568 103 669 186  87 566 147 668 628  84 408 194 433 684 694 365 445 250 580
 427 132 709 145 152 411 146 401 716 538 414 113 592 123  68 389 667 461 576  90 121 358 701 163 610 558  74
 607 268 523 126 231 621 702 220 519 242 213 582 271 506 574 257 466  97 541 432 339  45 267 276 225 532 173
  71 269  52 274 396 727 503 644 587 420 161 682 404  55 290 361  13 534 410 496 240 524 689 354   4 407 288
 133 120 181 642 693 283 549 316 417 443 469 639 656 110 447 369  40 170 675 115 376 489 196 127 352  30 678
 416 569 548 666 556 663 526 629 202 287 374 386 305 246  80 154  50  27 383 615 474 297 378 674  32 298  20

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00573e+07us (= 10057.3ms, 10.0573s)
Satisfaction error: 5
Number of search iterations: 3504
Number of local moves: 2935 (including on plateau: 2885)
Number of local minimum: 24 (including on plateau: 356)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 578 130 281 520 645 182 460 619 507 696 228 60 36 184 125 600 722 263 647 435 247 498 601 572 118 54 172 => the sum is 10180 rather than 9855
Problem in row 7: 468 631 720 479 533 514 724 333 141 349 164 149 88 715 511 719 41 117 165 244 313 42 275 412 12 509 15 => the sum is 9383 rather than 9855
Problem in row 9: 542 85 510 403 362 95 226 315 428 440 579 458 638 312 282 3 543 714 452 334 655 475 199 426 81 630 559 => the sum is 10746 rather than 9855
Problem in row 18: 187 581 441 23 706 649 230 160 112 78 546 114 308 91 330 108 311 491 66 402 92 486 584 623 691 605 236 => the sum is 9251 rather than 9855
Problem in row 26: 133 120 181 642 693 283 549 316 417 443 469 639 656 110 447 369 40 170 675 115 376 489 196 127 352 30 678 => the sum is 9715 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 729 318 243 163 213 490  56 465 283 305 474 173 449 669 643 202 427 187  10 714 558  54  17 650 524 146 693
 123 667 415 206 112 143 125 495 699 456  63 727 609 712 700 323 395 536 154  49 394 280 319 422  28  71 632
 624 436 272 225 251 311 673 416 485 193   9 412 398 347 680  79 331 695 725 554 455 160 504 242  51 274  53
 203 257 208 618 314 343 227 539 629 439 136 166  81 697 605 252 513 675 234 330 362 708 370 613  19 198 119
 127  37 663 550 521 388 291 239 335 578 233 576 322 217  41 603 336  45 640  36 364 518 584 604 571  25 411
 685 103 250 135  73 450 598 253  89 665 320 157 219 148 134 563 557 278 575 101 711 573 582 475 486 371 304
 581 379 273 286 538 131 570 621  78  66 527 275  42 564  99 424 284 547 636 457 167 599 294  23 508 710 176
 196  75  59 209 354 651 205 437 532 333  43 316 713 529 514 542 139 484 215 505 510 551 195 528 244 494 282
  93 287  15 183 549 389 690 480 468 254 306 671  96   2  61  21 654 705 531   5 174 178 200 212 438 365 646
 133 552 276 534 719  44  31 185 429 463 672 566 145 453 102 130 567  40  46 312 458 585 477 483 216 535 702
 520 147 562  69 189 612 433 308 452 459 590 625 299 109 470 577 191 172 517 435 617  57 451 222  47 246 479
 349   1 589 684 267 722 418 325 302 526 522  16 530 515 155 161  98 720 694 633  91 300  95   6 238 339 559
  39 440 414 402 560 420 401 114 375 369 426 409 226 421 377 368 387 405  64 553 399 382 374 396 357 352 425
 338 337 706  85 350 381 366 324 397 372 383 446 428 279 407 393 378 351 360 293 353 419 326 344 341 340 358
  62 620 674   8 709 137  77  74 662 606 207 476 648  80 376 489  70 627 386 611 204 140 165  68 501 666 512
 118 181 580 543 231  82 596 655 623 545 686 303 241 228 586 332 104 126 158 197  84 540 309 464 488 288  13
 478 587  65 728  27 502 500 525 544 142  76 192 506  83 264 496 230  58 171 692 600 268 523 346 591 403 258
 715 653 595 263 664 637 245 177 269  35 444  72 471 499 259 431 498 141  24 649 443   4 194 296 704 583 380
 149 537 285 473 384 703 487 313 588 110 718 641 334 266  20 248 660 607 180  94  11 447 138  22 100 201 622
 561 265 249 661 199 392 390 658 164 188 677 270 256 594 329 461 240 400 639 237 220 290 432 701 235 144   3
 413 614 460 132 385 162 175 221 106 682 150 555 556 579 363 271 218  92  88 619 260 676 516 533 462 408 159
 602 647 128 616 410 307 190 497 229 721 569 156  14 169 315 404 342  50 261 108 328 117 679 652 628 124 592
 120 255  34 214 441 509 726  55 724  87 430 417 434 634 716 111 448 493 615 223 688  97 182 168 224 548 262
 277 519 445 481 565 541 210 151 107 626 301 115 691 184 467 659  32 601  38 289 297 491 630 121 170 610 113
 707 281 574 327  90 367 644 503 152  67 356  86 442 292 507 670 597 211 454 105 298 657 631 361 642 668 391
 232  52 466 568 317  12 345 129 116 247  26 348  60 406 635 638 472 373 723 572 656 295 122 310 359 698 678
 681 608 355 492 423  29 186 696  18 321 511 689 645 179  30   7 687 236 717 482 153 469 546 593 683  48  33

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00567e+07us (= 10056.7ms, 10.0567s)
Satisfaction error: 7
Number of search iterations: 3340
Number of local moves: 2832 (including on plateau: 2784)
Number of local minimum: 21 (including on plateau: 319)
Number of resets: 0
Number of restarts: 0

Problem in row 9: 93 287 15 183 549 389 690 480 468 254 306 671 96 2 61 21 654 705 531 5 174 178 200 212 438 365 646 => the sum is 8673 rather than 9855
Problem in row 16: 118 181 580 543 231 82 596 655 623 545 686 303 241 228 586 332 104 126 158 197 84 540 309 464 488 288 13 => the sum is 9301 rather than 9855
Problem in row 18: 715 653 595 263 664 637 245 177 269 35 444 72 471 499 259 431 498 141 24 649 443 4 194 296 704 583 380 => the sum is 10345 rather than 9855
Problem in row 19: 149 537 285 473 384 703 487 313 588 110 718 641 334 266 20 248 660 607 180 94 11 447 138 22 100 201 622 => the sum is 9338 rather than 9855
Problem in row 24: 277 519 445 481 565 541 210 151 107 626 301 115 691 184 467 659 32 601 38 289 297 491 630 121 170 610 113 => the sum is 9731 rather than 9855
Problem in row 25: 707 281 574 327 90 367 644 503 152 67 356 86 442 292 507 670 597 211 454 105 298 657 631 361 642 668 391 => the sum is 11080 rather than 9855
Problem in row 27: 681 608 355 492 423 29 186 696 18 321 511 689 645 179 30 7 687 236 717 482 153 469 546 593 683 48 33 => the sum is 10517 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 726 688 728   6 433 135 689  54 422 632  16 263  40 100 131 267 716 110 182 200 214 710 264 209 659 552 709
 147 461 706 216 305 167 573 232 493 609 431 113  56 665 124 346 536 127 682 481 289 670 514  65  91 672  84
  51 203 296 194 231 658 492 550 698  30 251 153 626 221 254 637  31 601 244 236 537 287 327 591 567 618 271
 303 395 168 156 566 551 382 141   8 449 557 398 109  53 623 669 588 224 434 647 660  62 713 634 684 407 602
 106 441  86 143 558 180 286  34 211 242 512 526 410 265 559 473 635 491 484 600 643 206 597 416 238  39 474
 612 381 629 614 695 610 187 393 178 310 608 721 108 462 619 544  74  22 702 278 126 565  88  68 592 678  61
 333 448 405 725 729 297 569 204 605  48 628 620 680 174 663 148 519 644 191 697 164 456 320 499 150 664 685
 639 323 532 130 480  79 624 521 173 207 572 546 531 582 517 257 111 152  37 502 213 621 188 272 316 513 217
 383 561 223 312 399  25 510 617  69 157 129  73 139   5 676  87 654 413 488  21 464 522 411 662 179 273 215
 349 101 458   3 259 538  10 476  44 326 477 471 468 518 466 585 226 455 469 470 123 489 439 683 397 475  80
 457 248 282 262 195 452 134 418 112  57  13 595 450 459 454 227 487 548 541 703 315 432 460 144 400 426 584
 704 496 472 401 653 205 196  83 642 494  90 228 705 577 133 374  60 172 274  78 302 554 516 607 701  35  76
  64 534 356 700 392 483 189 328 675 437 367 165 570  11 427 243 409 714 404  63 511 542 107 140  59 430 535
 373 368 417 360 442 394 354 338 420 369 424 482 337 103 329 387 376 343 363 324 380 366 353 372 359 345 377
 341 336 357 344 339 630 386 309 350 355 378 332 340 348 321 261 295 330 362 317 580 364 306 325 638 292 319
  93  97  19 524 497 334 342 190 547 177 260 301 375 311 284 155 686 616 158 651 699 299 633 543 574  94 396
 314 707  27 674  15   9 279 351 504 720 285 277 358  99 198 690  17 266 571 219 335 596 240 708  66 694 636
  43 239 245 631  28 435 202 428 467 235 275 503 515 587  75  45 161 438 640 599 120  98 385 307 429   1 163
 579 627 171 586 384 485 390 718 252 119  49 408 184 220 581 225 415 539 661   4 186 199 201 509 500 138 525
 181 667 445 406 365 125 648 160 304 212 234 553 298 604 117 436  33 270 545 508 176 403 563 370 293 379 560
 724 291 556  70 253 288 233 649 717 506  47  14 247 478 419 549 529 645  38 412 498 371 137 495  89 533  67
 555 142 594 197 463 650  96 389 564 290 615 249 715 388 723 625 308 347 116  95 414  55 102 146 258 118 641
 250 136 166 613 318 444  71 691 151 656 687 114 578 183 501  50 276 490 246 440 712 671 727  26 256 121 281
 540 568 528 105 294 122 145 154 443 696 128 646  77 668 218 229 673 677 149 652 175 222 507  72 421 576 170
 425 208  92 447 132 593 681 603 589 520 657 423 241 622  82 711 611 185 598 115 606  20  23 210  18  41 402
 527 104 575 583 268 666 722 655 159 523 719   2 193 562 280 283 192  24   7 230 361  29 692 451 530 486  32
  36  85 322 453 162 300 465 169  58 479 446 679 505 590  81 352 237  12 269 313  52  46  42 331 391 255 693

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00564e+07us (= 10056.4ms, 10.0564s)
Satisfaction error: 7
Number of search iterations: 3197
Number of local moves: 2669 (including on plateau: 2621)
Number of local minimum: 27 (including on plateau: 323)
Number of resets: 0
Number of restarts: 0

Problem in row 4: 303 395 168 156 566 551 382 141 8 449 557 398 109 53 623 669 588 224 434 647 660 62 713 634 684 407 602 => the sum is 11183 rather than 9855
Problem in row 6: 612 381 629 614 695 610 187 393 178 310 608 721 108 462 619 544 74 22 702 278 126 565 88 68 592 678 61 => the sum is 10925 rather than 9855
Problem in row 7: 333 448 405 725 729 297 569 204 605 48 628 620 680 174 663 148 519 644 191 697 164 456 320 499 150 664 685 => the sum is 12265 rather than 9855
Problem in row 9: 383 561 223 312 399 25 510 617 69 157 129 73 139 5 676 87 654 413 488 21 464 522 411 662 179 273 215 => the sum is 8667 rather than 9855
Problem in row 12: 704 496 472 401 653 205 196 83 642 494 90 228 705 577 133 374 60 172 274 78 302 554 516 607 701 35 76 => the sum is 9828 rather than 9855
Problem in row 18: 43 239 245 631 28 435 202 428 467 235 275 503 515 587 75 45 161 438 640 599 120 98 385 307 429 1 163 => the sum is 8294 rather than 9855
Problem in row 27: 36 85 322 453 162 300 465 169 58 479 446 679 505 590 81 352 237 12 269 313 52 46 42 331 391 255 693 => the sum is 7823 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 413  50 617 637 671 645 652 498 629  30 526 493 182 711 586 133  49 481 109 327 475 162 204 113 210 227  25
 228 114 431 254 654 271  26  53 590 386  59 102   8 663 397 544 723   3 630 728 701 648 267 156 300 199 720
 591  28 702 552  42 298 657 696 679  47 695 363 305 166 729 317 437 246 335  46   9 615 393  38 117 580 172
 212 631 683 152 200 177 232 512 189 253 610 496 352 106 669 207 518 625 135 710 550 465 120 222 529  13 287
  52 105 150 510 192 499 134 461 585 571  71 171 469 532 607 599 556 688 570 124 224 221 146  97 682 316 523
 691 213 118 314 536  66 294 206 142 721 139 618 719 705 318 372 644 218 291 706  79 296 540 198  86 374 251
 560 349  99 458 309 473 188 521  80 520 626 219  96  35 391 257 462 360 646 712 179 209 492 357 402 614 241
 638 707 178 148 656 395 238  39 501 601 140 252 466 528 336 687 439 619 460  74  41 649  17 367  65 471 143
 420 237 502 158  27 442 223 160 609 112  83 149 551 664 400 412 398 546 299 692 727 488 483 633  15 161 264
 553 313 543 725 270  19 592 490 380 235 307  92 240 170 279 598 383 379  90 370 387 324 511 562 697 255  91
 457 558 115 611 337 132 259 384  62 339 381 127 215 289  16 174 595 640 500 434 578 673 538 662 185 184 410
 677   1 125 247  12 635 428 119  77 505 205 226 670 533 620 474 197 126 639  34 680 477 564 202 674 100 608
 208 647 449 382 123  10 455 534 425 344 507 665 242 173 482 269 588 531 623 371 168 236 138 306 583 121 275
 265 436 377 258 272 304 297 326 355 435 321 292 404 319 388 325 389 516 261 295 446 503 453 484 320 415 399
 566 278 283 331 392 373 341 315 622 440 375 351 345 239 323 430 282 432 429 433 414  57 426 489 263 342 284
  51 468 129 394 452 616 396 276 122 368 545 574 369 361 459 467 416 485 470 169 444  22 407 655 332  68 340
  14 709 211 180 589 147 479 486  75 675 346 597 268 285  55 606 411 494 451 220 563 157 333  61 311 548 584
 718 685  58 593 390 634 506 689  37 167 151 290 353 274 358 308 229 406 154 376 186 216 527 699 334 445  72
  11  44 572 568  56 356   5 329 636   4 110 524 260 624 514 194 249 193  88 427  67 587 643 256 581 476 604
 509 303 408  93 642 684 164 513 366 364 504  40 554 350  82  45 508 405 666 602 195 245  21 603 330 565  94
 286 214 667 517  63 698 312 108 424  33 714 262 658  48 448 480  98 441 137 322 401 515 659  95  87 555 613
 187  54 547 230 678 612 378 661 385 596 530 577 155 605   6 293  81 191 266  18 539 715 159 348 443 525  76
 717 627 310 165  20 447 359 181 362 130 575 328 463 418   2 600 478 136  84 464 423 201 107 542 422 641 653
 233 417 273 569 519 288 686 250 101 495  60  78 537 668 651 176  89 103 650 579  24  43 203 700 535 234 694
  32 703 704 549 522 144 419 365 244 491 141 628 196  64 104 301 277  73 343 190 450 111 594 576 403 559 672
  69 716 183  29 541 454 726   7 621 713 561 660  70  23 163 131 116  31 354 347 338 582 693 153 724 722 128
 497 248 421 231 690  36 409 676 557 280 573 681 708 302 472 456 243 487 175  85 567 438 217 281 225 145 632

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00561e+07us (= 10056.1ms, 10.0561s)
Satisfaction error: 3
Number of search iterations: 3243
Number of local moves: 2597 (including on plateau: 2546)
Number of local minimum: 37 (including on plateau: 336)
Number of resets: 0
Number of restarts: 0

Problem in row 19: 11 44 572 568 56 356 5 329 636 4 110 524 260 624 514 194 249 193 88 427 67 587 643 256 581 476 604 => the sum is 8978 rather than 9855
Problem in row 27: 497 248 421 231 690 36 409 676 557 280 573 681 708 302 472 456 243 487 175 85 567 438 217 281 225 145 632 => the sum is 10732 rather than 9855
Problem in diagonal 1: 25 199 117 222 146 296 179 74 299 379 595 474 482 319 345 574 346 167 636 513 312 612 20 569 704 716 497 => the sum is 9817 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 203  15 170 159 725  50 373 215 175 305 624  98 283 654 288  87 179 514 686 711 580 608 250 681 569 525 128
 439   7 188 339  27 577 611 622 590 548 210 125  63 226 397 421 407 444 638 398 586 440 497 433 515  74 665
 449 251 399 435  22 264 604 576 570 535 230  93 510 558 672 623  30 587 516 480 451 431  64   2 237 245  21
 617 538 728 643 448 126 723 229 102 718 335 331 505 150  75  47  29 330 508 572 527  97 284 406  55 556 176
 727 685  86 699 609 220 613  59 116 428 522 134 664 502 381 156 103 483 151 233 249 325 196 285 539 144 546
 705 596  90 534 212 724 666 648 642 621 426 490 329 178  56 544  72 378  41 463 157 146 722 168 232  65 616
 118 153 688 460 317 472   4 386 273 563 320 313 492 541 549 152 656   5 127 246 266 136 207 601 669 676 465
 132 476 303 262 709 629 495 531 109 540  52 462 582 504 488  40  39 595 342 387  45  88 479 219 645 224 478
 418 494 466  24 615 469 559 282 475 427 411  68  12 180   9 482 721 499 430 208 708 671 684 518 529   6 471
 591 729 551  31  69 278 537 114 457 458 675 553  92  23  18 395 487 710  26 164 385 562 241 238 437 404 630
 167 459 670 655 550 412 108 270 308  33 555 101 181 694 205 634 501  46 455 545  94 530 327 415 593 328  19
 216 106 632 500 158 247 186 434 123 110 689 509 105 324 436  49 486 574  84 124 256 104 279 695 443 388  20
 272 211 423 393 318 384 438 344 354 390  54 369 413 361 700  11 599 137 365 410 450 394 401 392 380 484 408
 414 383 368 363 371 347 357 349 228 376 334 552 377  57 389 370 359 358 379 372 635 454 301 382 343 275 362
 231 321 364 174 366 351 299 311 336 352 647 306 294 310 350 319 575 338 409 309 291 644 528 374 594 122 340
  62 281 111 292 693 161 566 565 360 187  76 652 425 605 202 300 626  38 147 222 391 474 585 612 610 139 473
 263 405 197 248 461 302  85 687 326 276 287 166 353 348 653 701 420 396 269 143 165  13 649 517 254 573 698
 316 453 506 620 253 690 243 154 213 268  25 571 333 650 424 267 191 199 713 660 312 200 290 557 295 195 257
  48 641 236 258 477 714  79 468 607 141 520 217 322 503 293 547 235 240 252  82 297 667 145 375 441 618 432
 227 149 651 280 422 628 194 639 489 117 218 583 598 193 239 715  83 588 657 201  14 223 277  80 113 717 560
 581 225 121 355 130 100 679  89 619 691 592 513 658 452 442 659 332 107 532 597 259 337 271 172  42 242  58
 345 636 356 142 162 567 296 265 523 192 456 716 214  37 498 298 185 663 314 625 579 304 536  10 209 589 138
 640 702  96 131 221  99 274 720  95 674 140 446 402  91   8 578 234 160 554 341 584  36 367 206 163 631 561
 481  73 307 726 286 204 115 521 646  17 155  28 177 403 133 416 682 419 485 526  43 704 673 171 182 602 680
 524 491 507 543 417 512 135  51 696 184 183 661 260  66 637 129 703  35  60 683 564 189 429 603  44 496  53
 668 120 493 511 190 261 169 323  77  71 400 600 519 712 606 445 244 697 542 119 678 614  61  81  16  70 568
   1 255 148  78 627  67 447   3 346 633 719 198 692 533 707 470 677 315 173  34 289 464 112 662 706 467  32

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00004e+07us (= 10000.4ms, 10.0004s)
Wall-clock time (full program): 1.00558e+07us (= 10055.8ms, 10.0558s)
Satisfaction error: 6
Number of search iterations: 2948
Number of local moves: 2494 (including on plateau: 2445)
Number of local minimum: 22 (including on plateau: 291)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 439 7 188 339 27 577 611 622 590 548 210 125 63 226 397 421 407 444 638 398 586 440 497 433 515 74 665 => the sum is 10487 rather than 9855
Problem in row 6: 705 596 90 534 212 724 666 648 642 621 426 490 329 178 56 544 72 378 41 463 157 146 722 168 232 65 616 => the sum is 10521 rather than 9855
Problem in row 9: 418 494 466 24 615 469 559 282 475 427 411 68 12 180 9 482 721 499 430 208 708 671 684 518 529 6 471 => the sum is 10836 rather than 9855
Problem in row 12: 216 106 632 500 158 247 186 434 123 110 689 509 105 324 436 49 486 574 84 124 256 104 279 695 443 388 20 => the sum is 8277 rather than 9855
Problem in row 23: 640 702 96 131 221 99 274 720 95 674 140 446 402 91 8 578 234 160 554 341 584 36 367 206 163 631 561 => the sum is 9154 rather than 9855
Problem in diagonal 0: 203 7 399 643 609 724 4 531 475 458 555 509 413 57 350 300 420 199 252 201 259 304 367 171 44 70 32 => the sum is 8556 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 727  73 459 401 203  12 352 729 678  47  16 498  39 644 501  38 699  91 621 106 650 191 432 249 180 552 667
 711  52  21 630 360 315  35  41 224 169 663 383 713 228  68 613 697 362 316 463 277 335 541 694 188 446 310
 122 536 588 292 254 561 549 665 215 231 675 109  10   7 178 162 237 617 442 256 669 475 502 280  84 648 491
 631 513 274 307  31 577  76 651   3 289 439 127 347 219 393 199  33 287 579 480 391  85 397 627 722 622 556
 595 163 638 257 464 421 457 660 282 625 719 568 388 462 698 450 424 420 146 113 467  48 709 381 664  70 154
 478 509 728   6 351 596  36 259 504 535  22 226 101 184 659 592 482 423 246 693 601 539 128 430 171 135 221
 269 499 537 496 176 279 532 290 695 225 618 438 195 470  98 688 640 170 150 167 526  30  42  17 649 540 419
 546 681 143 112  45 357 270  89 528 441 305 234 456 530 623 517 402 159 263 422 230 168 514 484 286 599 451
 141 200 689  15 380 679 210 253 600 543 100 493 682 309 604 251 656 677 313 104 602 189 337 607 181 302 235
 172 363 486 247 670   5 327 558 416 466 133 715  43 573 606 562 153 657 452 266  96 260 232 216 597 583   1
   4 557 275 229 721 494 262 554 336 661 476 164 510 710 218  18 297 201 183 551 136 523  69 182 492 403 629
  83 574 361 612  86 186 628  25  19 320 696 323 585 137  94 426 124  26 576 718 555 473 223 527 547 317 614
 407 453 348 398 329   2 312 404 387 355 377 369 354 408  92 544 465 409 382 359 373 415 340 386 385 389 413
 374 378 345 399 148 349 370 372 390 341 344 410 571 503 324 350 375 358 371 376 343 384 368 311 342 325 334
 605 455 396 683 119 346 264 130 566 400  44 433 706  87  13 161 553 303 333 468 417 673  82 632 674 120 192
 515 481  78 425 705 619 444 318 284  37 490  46 412 460 487  40 244 142 635 365 500  71 589 580 654 185  49
 285  93 131 129 542 418 111 615 461 637 268 550 157 639 366 559 298 265 671  23  58 666  57 392  60 704 700
 445 702 479 177 633 212 587 395  50 321 276 653 108 125 507 294 497 301 437 158 522 300 634 708  28  63 243
 211 411 250 652 448 116 472   9 636  88 584 610 296 581 271 564 521 102 241 495 489 138 458  65 394 319 434
 214  99  97 620  54 194 645 506 152 165 512 304 427 471 686 477 299 449  34 339 330 428 145 132 278  74 531
 217 454 560 582 443 524 144 641  81 134 208 126 565 567 483 147 227 570 356 364 174 239 533 690 233 179 414
 139 655  32 209 548 687 701 204 338  80 273 676 267 207 331 140 149 511 716 447 206 590 205 261 379 662 242
 118 190 611 534 508 175 505  67 156 563 245 429  75 248  90 405  66 578 308 603 714 440 691 545 525 291 117
 326  64 272 406 586  95  61 288 572 643 575 220 646 703 121 685 115 469 519 608 252 213 314  59 672 198 173
 594 518 436 151 626 680 724 155 485 306 202  29 196 255 197  62 593  27 110 222 166 707 240  14 332 474 520
 258  79 328 160 238 236 658 624 725 717 488 193 723  51 538 616 598 712  20 322  55 684 642 105  24   8  53
 668 103 293 726 187 720 123 353  72 516 107 529 283  77 609 295  11 569 435 367  56 591 431 281 114 647 692

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00563e+07us (= 10056.3ms, 10.0563s)
Satisfaction error: 6
Number of search iterations: 3206
Number of local moves: 2740 (including on plateau: 2691)
Number of local minimum: 19 (including on plateau: 298)
Number of resets: 0
Number of restarts: 0

Problem in row 5: 595 163 638 257 464 421 457 660 282 625 719 568 388 462 698 450 424 420 146 113 467 48 709 381 664 70 154 => the sum is 11443 rather than 9855
Problem in row 9: 141 200 689 15 380 679 210 253 600 543 100 493 682 309 604 251 656 677 313 104 602 189 337 607 181 302 235 => the sum is 10352 rather than 9855
Problem in row 20: 214 99 97 620 54 194 645 506 152 165 512 304 427 471 686 477 299 449 34 339 330 428 145 132 278 74 531 => the sum is 8662 rather than 9855
Problem in row 23: 118 190 611 534 508 175 505 67 156 563 245 429 75 248 90 405 66 578 308 603 714 440 691 545 525 291 117 => the sum is 9797 rather than 9855
Problem in row 25: 594 518 436 151 626 680 724 155 485 306 202 29 196 255 197 62 593 27 110 222 166 707 240 14 332 474 520 => the sum is 9021 rather than 9855
Problem in diagonal 1: 667 446 84 627 709 539 526 422 313 657 297 426 92 503 706 46 268 321 636 506 144 687 508 406 436 79 668 => the sum is 11719 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 214 487 722 504 472  94 685 169 367 471 712 330 630 599 505 223 644 416 430 112 246 141 196 497 542 420 708
 191 637  27  38 267 224 368 710 554  10 390 700 210  47 720 688 188 561  43 669 658  22 503  11 143 676 600
 686 175 261 159 493 618 441 473 203 632 548 206 156 362 654 465 284   8 134  69 572 709 545 235 638  78  51
 640 253 622 651 314 574 221 342 719 723 317 269 421 209 646 331 102 659 414  76 450 400 318 590 634 185 501
 255  49  29 447 586 724 424 449  75 489 119 413  82 170 671 282 559 304 536 151 366 553 601 479 535 245 262
 598 728 382  60 122 530 549 521 412 229 454 596 130  12  77 290 183 522 694 239 613 579 428  50  96 585 176
 485 628 336 256 647 178 233 510 451 546 227 109 642  23  35  14 661 149  64 558 541  40  21 184  52 498 595
 192 484 167 263 157  36 285 678 692 573  65 714 515 216 144 656 436 172 288 526 507  87 207 309 335 132 312
 186 621 560 240 103 308 231 538 193 703 543 110 537 354 295 121 660  17 491  83 173 655 679 406 695  66 287
 359 607 483 564 117 344 496  16 291 133 529 243 556 689 281 608 111 466 254  33 435 350 475 633 215 393 174
 162  79  42 332 527 702 408 641 584 204  88 477 551 164 311 137 427 431 589 576  15 432 351 120 386 657 462
 409 383 234 610  19 444 118  95 571 320 297 241 699 717 569 418  30 518  84 575 211 189 348 419 396 499 442
 153  89 265 403  71 166  70  39 142 425 605 360 423 300 384 438 247 401 305 525 635 468 577 705 620 355 684
 364 358 217 361 363 375 410 114 683 379 326 398 373 426 328 402 706  58 323 372 512 370 343 222 302 394 376
 481 307 232 333 674 562 329 377   4 405 171 591 322 104 154 158 395 369 701 180 464 276 357 582 225 508 594
 690 516 648 602 616  97 238 127  32   6 457  72 345 252 250 440 682 696 148 555  67 520 219 150 380  13 514
 347 365 490 422 455 407 681 627 417 532 341  90 126 443 673 177 528 160  73 244  24 665  26 606  31  81  20
 310  25 652 136 306 566 629  92 636 279 643 146 272 623 531 718 340 292 448 237 381 324 198 552  68 124 327
 534 280  56 677 275 257 631 615 197 434 128 220 495  80 592 557 411 716 296 274 385 437 258 299 486 273 374
 106 672 200 726 704 662 131 212 625 113  48 626  53 259 353 547 533 378 194 195 208 612 664 349 271 251 163
 509 277 597 249 544   5 293 337 729  44 474 476 268 624 283 614 523  99 181 404 278 609 494 298 593 578 260
  59 568 453 511 721 145 581 727  54 270 650 482 675 500 463 567 168 321 663 611 691 182   7   9 228 248 289
 294 129 334 155 152 492  57   2 478 264 218 506 187 550  34   1  63 226 502 467 687 115 415 101 445 316  91
 580 399 524  45 190 391 388 459 107 213 452 339 715 649 697 603 161 619  55 371  37 266 202 346 165 433 667
 439 242 205  85 563 236 389 286 135 645 315 653  46 565   3  98 387 570 540 668 456  61 639 587 325 617 100
 519  28 604 319  41 488 461 116 303 666 199 470 301 458 140 179 352 139 725 693 105 313  86 670 338 713 429
  93 469 513 707 356 230 108 583 201 147 539  18 125 460  62 123  74 588 680 392 138 480 698 446 711 517 397

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00563e+07us (= 10056.3ms, 10.0563s)
Satisfaction error: 11
Number of search iterations: 2670
Number of local moves: 2220 (including on plateau: 2176)
Number of local minimum: 18 (including on plateau: 234)
Number of resets: 0
Number of restarts: 0

Problem in row 1: 214 487 722 504 472 94 685 169 367 471 712 330 630 599 505 223 644 416 430 112 246 141 196 497 542 420 708 => the sum is 11536 rather than 9855
Problem in row 4: 640 253 622 651 314 574 221 342 719 723 317 269 421 209 646 331 102 659 414 76 450 400 318 590 634 185 501 => the sum is 11581 rather than 9855
Problem in row 7: 485 628 336 256 647 178 233 510 451 546 227 109 642 23 35 14 661 149 64 558 541 40 21 184 52 498 595 => the sum is 8683 rather than 9855
Problem in row 8: 192 484 167 263 157 36 285 678 692 573 65 714 515 216 144 656 436 172 288 526 507 87 207 309 335 132 312 => the sum is 9148 rather than 9855
Problem in row 16: 690 516 648 602 616 97 238 127 32 6 457 72 345 252 250 440 682 696 148 555 67 520 219 150 380 13 514 => the sum is 9332 rather than 9855
Problem in row 17: 347 365 490 422 455 407 681 627 417 532 341 90 126 443 673 177 528 160 73 244 24 665 26 606 31 81 20 => the sum is 9051 rather than 9855
Problem in row 19: 534 280 56 677 275 257 631 615 197 434 128 220 495 80 592 557 411 716 296 274 385 437 258 299 486 273 374 => the sum is 10237 rather than 9855
Problem in row 21: 509 277 597 249 544 5 293 337 729 44 474 476 268 624 283 614 523 99 181 404 278 609 494 298 593 578 260 => the sum is 10640 rather than 9855
Problem in row 22: 59 568 453 511 721 145 581 727 54 270 650 482 675 500 463 567 168 321 663 611 691 182 7 9 228 248 289 => the sum is 10843 rather than 9855
Problem in row 23: 294 129 334 155 152 492 57 2 478 264 218 506 187 550 34 1 63 226 502 467 687 115 415 101 445 316 91 => the sum is 7281 rather than 9855
Problem in row 24: 580 399 524 45 190 391 388 459 107 213 452 339 715 649 697 603 161 619 55 371 37 266 202 346 165 433 667 => the sum is 10073 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 370  30 504 272  76 484 658 237 700 719  57 393  89   2 612 584  50 145 279 226 476 674 675 693 561 225  64
 254 486 318 533 146 306 648 366 513 567 531 211 621 104 633 717 343 121 207 261 642 186  62 655 519 535 390
 457 415 227 460 501 116 206 175  48  12 193 521 689 328 696 602 198 709 102 659 137 463 458  38 725 691 212
 284  87 404 297 256 412  73 507  78 639 508 312 690 400  20  85 695 670 414 429 189 615 548 644 307 187 105
 645 167 154  60 593 114 505 213 498 128 591 482 222 416  55 672  24 597 692 539 293 204 282 443 524 599 143
 585 581  91 275 361  54 570 194 336 552 216 315 168 149 238 557 576 495 139 471 698 562 705 433   4 230 300
 727 378 424 525 288 647 545 109 260 188 721 553 419 325 664  80   1  21 603 177 607 499 135 249 180  36 494
 347  83 475 321 202 681 528 543  70 640 478 712 582 550 229 268 493 219  10 344 673  18 575 472   9 106 706
 588 595 646 125  61  13 232 294 518 413 611 169 253 163 496  86 392 233 679 111 529 701 346 241 108 583 669
 115 506 464 257  71 542 276 483 103 515 107 522 435 248 468 479 487 465 408 438 477 454 371  52  19 624 469
  49 512 480 726 598 491 403 427 556 425 431 551  47 437 181 341 459 586 703 520  58 668 481 714 517 305  32
 124 724 623 594 686 365  37 286 708  16 699 411  29 618 170 363 215 445 606   8  26  28 516 130 357 436 635
 405 394 417 287 391 271 340 345 474  31 680 398 410 467 397  22 136 376 401 364 402 356 374 395 729 396 197
 389 377 434 359 373 368 388 360 381 379 174 351 372 358 350 406 348 387 353 327 362 426 380 367 349 382 355
 452 317 209 166 244 281 161 100 319 702 335 628 580 638 292 626 192 560  33 651 423 262 527 563  69 252 273
 280 331 316 190 334 369 258 330 609 267 338 430 342 577 324 290 323 333 685 622 326 285 265 322 571 240 298
 526 677 236 605 264 195 418 296 421 247 277 155 295 129 138 309 255  51 715 657 616 269 629 218 665 160 432
 523 299  17  81  74 165 722 569  34 274  40 707 489 490 578 466 631 650 329 141 231 610  95 153 182 384 303
 142 687 641 558 540  67  14 549  56 119 385  35 662 661 171 510 636 332 301  79 587 568 601  42 313 455 144
  93 235 564 573 485 354 291 208 694 541 234 173 547 682 579 224  68  63 399 183 656 514 148 473 205 470 199
 172 304 339 164 728 617 178 720 220 132 420 667 162 554 559 537 544 157 663  90 191  44 159 228 711  84 511
 643 444 383 120 613 156 684  66 201 140 278 352 127 449 110  25 534 630 250 223 302 179 652 447 509 634 704
 263 134 270 671   3 497 451 453 614 502 619 428 439  27 492 184 604 221  72 441 158 446  98  88 196 242 538
 713  97 113 600 546 565  59 676 654 243 555 117 666 203 112 251 152 407 118 503  75 627 386  77 185 530 625
 214 653 310 133  94 688 150 697   6 620 239 151 337 448 532 123 718 126 283 589  82 147 131 375 259 462 456
 442 246 200 311 678 314 572  15 574 536  39  46   7  23 716 440 320 266 122 710 217   5  11 683 450  41 500
  53  96 596 592 649 723 488 637 210 308  99  65 176 409  43 608 461 590 289  92 422  45 245 660 632 566 101

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00567e+07us (= 10056.7ms, 10.0567s)
Satisfaction error: 9
Number of search iterations: 3385
Number of local moves: 2805 (including on plateau: 2759)
Number of local minimum: 35 (including on plateau: 349)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 254 486 318 533 146 306 648 366 513 567 531 211 621 104 633 717 343 121 207 261 642 186 62 655 519 535 390 => the sum is 10875 rather than 9855
Problem in row 3: 457 415 227 460 501 116 206 175 48 12 193 521 689 328 696 602 198 709 102 659 137 463 458 38 725 691 212 => the sum is 10038 rather than 9855
Problem in row 8: 347 83 475 321 202 681 528 543 70 640 478 712 582 550 229 268 493 219 10 344 673 18 575 472 9 106 706 => the sum is 10334 rather than 9855
Problem in row 11: 49 512 480 726 598 491 403 427 556 425 431 551 47 437 181 341 459 586 703 520 58 668 481 714 517 305 32 => the sum is 11698 rather than 9855
Problem in row 18: 523 299 17 81 74 165 722 569 34 274 40 707 489 490 578 466 631 650 329 141 231 610 95 153 182 384 303 => the sum is 9237 rather than 9855
Problem in row 23: 263 134 270 671 3 497 451 453 614 502 619 428 439 27 492 184 604 221 72 441 158 446 98 88 196 242 538 => the sum is 9151 rather than 9855
Problem in row 25: 214 653 310 133 94 688 150 697 6 620 239 151 337 448 532 123 718 126 283 589 82 147 131 375 259 462 456 => the sum is 9023 rather than 9855
Problem in row 26: 442 246 200 311 678 314 572 15 574 536 39 46 7 23 716 440 320 266 122 710 217 5 11 683 450 41 500 => the sum is 8484 rather than 9855
Problem in diagonal 0: 370 486 227 297 593 54 545 543 518 515 431 411 410 358 292 290 255 650 301 183 191 179 98 77 259 41 101 => the sum is 8675 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 558  86 205 266 237 703 666 139 434 450 614 396 435 116 115 243 185 154 168 717  82 676 670 254 441 119 726
 410  99 662 225 519 540 208 182 412 668   3  20 149 605 581 571  57 669 163 405 574 688 294 109  66 557 419
 514 387 175 292 724 580  16 723 599 231 128 129 417 202 582 264   7 293 470 587 713 609  73 195 626 200 515
  89 156 635 158 683 251 619 631 160 416 397 462 517 423 140 332  97 477 213 223 300 621 627 611  56 404 157
 590 728 673 314 642 169 428  80 310  65 656  49 613 336  48  34 275 148 218 298 324 126 585 323 693 466 664
 241 566 427  68  33 641 307  76 234 111 630 551 546   5 384 681 502 622   2  36 421 162 467 553 667 238 684
 478 584  24 538 283 151 138  23  52 174 399 686 192 518 452   9 612 232 529 542 260 539 505 385 652 464  38
 100 640 155 522 541 299 544 346 127 380 354 512  60  51  95 309 359  63 716 533 458 439 527 463 117 496 649
 288 471 135 212 286 561 569 468 197 608 248 201 198 706 624 445  64 682 262 349 487 227 233 443 510 239 142
 146 199 420 482 367 488 124 319 513 191  98 705 449 230 625  54 617 308 368 210 560 491 256  42 281 615 697
 159 276  92 727 426  77 244 258 484 600 438 448 263 430 250 565 217 352 690 454 457 411 485 453 433 121  45
 655 386 278 418 700 296 279 658 623  85 207 395 171 203  79 383 583 589 390 219 408 267  43 573 190 556 221
 729 653 271  17  25 393  96 456 651 543 719 272 634 598 407 355 440 145 603  13  27 226 295 535  90  30 632
 375 362 374 363 373 337 340 360 415 341 394 338 401 564 382 347 348 391 290 372 351 357 356 369 277 343 335
 536 389 521 414 361 392 344  78 345 379 334 326 365 315 305 153 388 588 371 317 708 329 306 274 364 331 322
 204 413 725 710 214 567 499 696 105 144 150 282  12 134 252 638 709  88 242 555 285 183 400 563 370 229 486
 504  26 483 113 437 311 644  40  59 120 313 680 303 534 511 249 720 287 178 628 554 378 103 196 576 643 265
 220 687 350 444   8  87 721 136 559 247 591 302  70 595 650 500 675  74 528 671  21 187  53 102 297 601 479
 548  15 578 524 206  72  91 402 714 465 224 620 545 694 181  18  67  28 490 118 661 579 353 606 592 211 253
 240  39 550 245 530 506 459 637  58 575 143 473   6 639   1 602 509 702 321 442 235  37 594 398 222 403 289
 447 507 330 577 593 674 186 328 689  81 472 147 280 173 461 131 268 432 106  94 409  69 672 711 520 494   4
  62 707 215 647 125 170 701 492 320 715  83 596 568  41 422 547 607 516  46 481  44 130 698 318  32 431 141
 358  61 480 325 137 167 246 236  35 508 188 104 377 366 685 177 429 552 648 255 469 525 291 284 663 660 629
 425 166 342 101 257 180  10 570 446  93 586 165 228 498 712 316 133 376 436 503 301  55 562 646 532 537 679
 474 616  75 695 327 455 501 489 152 312 704 194 722 123 107 691 339 597 636 179 114 718  19 108 193 304  11
 476 475  47 269 645 678 451 460 497 699 259 184 657 261 273 549 526  84 659  50 610 493 172  71  14 132 164
  29 161 633 189 176 110 424 572 665 654 523 618 677 495 531 692 122 406 112 604  22 333 216 270 381  31 209

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00027e+07us (= 10002.7ms, 10.0027s)
Wall-clock time (full program): 1.00593e+07us (= 10059.3ms, 10.0593s)
Satisfaction error: 3
Number of search iterations: 3837
Number of local moves: 3002 (including on plateau: 2950)
Number of local minimum: 47 (including on plateau: 395)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 514 387 175 292 724 580 16 723 599 231 128 129 417 202 582 264 7 293 470 587 713 609 73 195 626 200 515 => the sum is 10251 rather than 9855
Problem in row 7: 478 584 24 538 283 151 138 23 52 174 399 686 192 518 452 9 612 232 529 542 260 539 505 385 652 464 38 => the sum is 9459 rather than 9855
Problem in diagonal 1: 726 557 626 611 585 162 260 533 262 308 217 383 407 564 365 282 313 247 714 637 186 170 137 101 75 475 29 => the sum is 9932 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 545 226 492  10 195 206 642 303 174 658 676 596  78 606  28 670 333  67 452 508 323  56 441   2 275 566 727
 516 691 518 130 159 487 411 187  97  76 592 193 178 564 241  33 572 630 388 643 485 372  84 294  87 714 481
 646 515 721  38 541  93 701 504 199  17 324 705 177 229  19 609 179 641 698 514 690  31  83 139 635 108  99
  35 265 221 627  40 157 495 445 530 621 679 488 142  68 439 282 717 720 615 726  26 500 638 612 708 477  23
 406 664 321 204 600 594  37 693 141 451 671 468 582 188 147 191 526  86 185  15 580  24 513  25 436 490 617
 649 126 473 253 562 660 482  48 295  91 511 681 359  98 672 558  53 167 268 278  90 640 181 498 394  58 493
 576  70 527 502 249  77 243 557 478 194 101 400 550 595 314  14 601 161 486 200 598 262 479 151 396 454 620
  22 344 263 170 186 471 559 657 298 616  85  63 419 149 462 480 176 349 421 251 716 238 599 539 236 523 104
 222 103   1 651 197 655 145 121 519  21 673 624 415 169 405 453 505 719  30 610 524 484 402 461 688 276  41
 210 134 723 433 296  54 347 363 496 533  20 172 501 703 255 128 724 465 528 542 385 677  13 552 227 135 239
  72 725  96 422 271 133 376 381 652 603 470 281 549  43 208 317 435  62 140 475 571 360 666 457 449 531 110
 343 254 114 587 710 112 283 334 395 633 397 442 223 327  73 219 456 144 180 546 233 417 408 497 393 510 625
 370 414 447 398 386 420 644 120 424 418  51  29 438 581 304 713  12 297 472 361 428 391 366 102 380 367 522
 407 355 401 416 292 345 489 315 356 429 310 270 320 280 331 699 383 390 300 350 348 382 287 374 357 330 339
 225 668 107 235 437 521 273 622 444 656 586 469 326 184 336 115  34 119 661  74 535 335 305 267 459 525 337
 520 272 689 237 319 368 712 329 308 286 252 302 293 647 404 544 341 322 340 245 105 257 285 284 387 247 560
 715 171 166 669  18 568 532 427  95 575 290  65 190  89 729 212 307  16 613 189 301 583 569 209 579 704 274
 196 258 680 136 354 702 431  39 517 214 211 675 722 553 645 607 578 306   7   6 116 264 565  94 224 129 626
 152 540 365 122 378 260 403 261 201 246  88 266 663 534 561 338 474 312 183 597 410 175 605 455 299 256 711
 611 384  60 450 536 325 198 259   8 499 358 692 154 700 448 173 156 650 697 146   3 678 138 389 623 328 192
  57 458 619 207  79  92  36 352 667 155 242 694 425 113 567 563 654 460 342 718 137 202 230 685 648 164 289
 446 426 279 288 631 213 125  75 412 377 503  52 216 588 467 351 316 573 604 158 248 132 364 512  11 215 430
 593 589 634 556 371 117 353   9 686 109 537 269 165 413 277 507 218 574 409 332 369 585 148 373  55 602   5
 628 100  44 682 476 659 205 551 639 228 143  66 707 674 127  71 111 494 464  47 231 548 684  81 463 118 614
 570 466 392 695 636 423 608 662  61 709 491 150 683  49 483 375 591 440 162 291 653  46 124 706  27 250 346
  59  82 123 160 618 637  80 554 543 309 232 509 311 182 696   4 163 153 168 590 203 632 244 665 106  50 399
  64 555 379 577 318 506  45 687 220 131 362 234  69 529 217 629 240 538  42 443 547 584 434 432 313 728  32

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00035e+07us (= 10003.5ms, 10.0035s)
Wall-clock time (full program): 1.00535e+07us (= 10053.5ms, 10.0535s)
Satisfaction error: 8
Number of search iterations: 2633
Number of local moves: 2215 (including on plateau: 2169)
Number of local minimum: 20 (including on plateau: 259)
Number of resets: 0
Number of restarts: 0

Problem in row 2: 516 691 518 130 159 487 411 187 97 76 592 193 178 564 241 33 572 630 388 643 485 372 84 294 87 714 481 => the sum is 9823 rather than 9855
Problem in row 4: 35 265 221 627 40 157 495 445 530 621 679 488 142 68 439 282 717 720 615 726 26 500 638 612 708 477 23 => the sum is 11296 rather than 9855
Problem in row 6: 649 126 473 253 562 660 482 48 295 91 511 681 359 98 672 558 53 167 268 278 90 640 181 498 394 58 493 => the sum is 9638 rather than 9855
Problem in row 8: 22 344 263 170 186 471 559 657 298 616 85 63 419 149 462 480 176 349 421 251 716 238 599 539 236 523 104 => the sum is 9396 rather than 9855
Problem in row 9: 222 103 1 651 197 655 145 121 519 21 673 624 415 169 405 453 505 719 30 610 524 484 402 461 688 276 41 => the sum is 10114 rather than 9855
Problem in row 22: 446 426 279 288 631 213 125 75 412 377 503 52 216 588 467 351 316 573 604 158 248 132 364 512 11 215 430 => the sum is 9012 rather than 9855
Problem in row 25: 570 466 392 695 636 423 608 662 61 709 491 150 683 49 483 375 591 440 162 291 653 46 124 706 27 250 346 => the sum is 11089 rather than 9855
Problem in row 26: 59 82 123 160 618 637 80 554 543 309 232 509 311 182 696 4 163 153 168 590 203 632 244 665 106 50 399 => the sum is 8472 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 472 395 633  10  37 186  76 282  59 456 695 724 576 445 109 400 142 225 677 613 603 481 262 567  44 582 104
 296 707 150  92 528  94 442 491 204   3 500  53 544 341 479 192 265 490 685 425 591 353  77 523 622 128 580
 344  23 644 465 374 709 679 420 176  35 122  34 359 348  93 658 557  18  70 671 545 536 572 640 435 179 149
 462  26  20 565 674 444 621 446 614 253 482  12 518 728 290  16 291 570 697 349 471 372  90  24 439 158 223
 419 714 561 131 501 161 653 117 384 509 702 115 520 127 313 178 682 146 303  39 114 600 406 513 583 276  88
 175 143 229 575 137 199  28 144 224 641 589  91  25  27 404 198 373 675 300 217 568 649 396  86 299 681 376
 172 167   7  72 660 464 315 643 627 499 427 431 360 521 596  52 665 254 165 422 505 609 432 295 102 343  50
 604 526 423 239 339 272 231  30   9 597 118 487  46 693 156 242  97 585 655 483  81  54 631 723 235 440 651
 261 351 108 307 312 705 302 451 403 639 212 468 716 107 308 595 273 605 230 475 713  80 248 292  68 112 469
 398 209 542 474 134 601 507 194 719 347 636  21 304 195 721 338 452 546 511 240 325 129 638 135  42 551 588
 382 286 385 153 275 267 363 624 113 336  29 252 323 162 587  58 105 659 673  22  11 386 703  71 552 238 264
 208  31 558 233 201 356 553 494 676 393 361 606   2 701 559 342 181 164 301 355 257 381 123 401 637 234 547
 391 683 632 236 566 726 200 429 380 684 540 271 219 244 436 467 672 383 111  69 433 564 569 577 512 294 690
 670  56 563 538 413 110  55 447 489  19 522 667 459 333 187 288 189 415 530 140 116 293 628 354 414 497 463
 274 154  38 541 535 496 136  47 608 504 692 711 327 331 124 485 573 531 130 457 533  95 311  89 317 668 148
 241 473 171 696 362  78 708 654 657 502 247 389 166 232 228 399 449 484 648 245 617 100 226 443 120  99 221
 326 680 268 466  60  83  64 689 470 377 370 669 159 519 610 727 203 174 556 625 207 607 418 184  98 101 145
 337 691 710 661 215 434 132  65 121 517 320 249 581 258 630 421 350 352 213 550  96 103  43  63 514 188 524
 310 555 227 133 656 593 539 478 488  40 394 525 453 448 205 330 424 157 417 251 397 197 119 493 392 316 318
 460 688 515 412 441 378 388 506   8 410 284 322 729 428 647 548 364 169 259 139 168 368 289   4 279 306 346
 578  51 152 185 706 263 590 250 592  84  75 594  48 202 255 371  45 340 366 387 527 571 534 586 328 626 549
 629 543 718  82 155 450 390 287 602 218  33 345 216 508 503   6  79 283 678 599 455 177 480  74 722 498 125
 138 623 618 717 375 687  67 309 409 584  15 616 574 191 170 476 486 532  62 686 725 634 619 357 379 554 437
 405 278 402 358 106 281 270 246 314 222 516 196 365 190  17 652 461  36  41 367  49 646  61 635 220 611 712
 324 211 416 615 620 214 698 408  57 266 269 260 277 664 319 663 182  13 163 297 495   1 369 720 430 694 210
 492 256  14 662 407 193 642   5 147 160 579 321 285 458 666 612 650 334 329  32  73 332 438 477 510 183 598
  87 335 151 237  66 411 206 699 305 560 126 426 704 454 243 141 645 715  85 700 180 537 173 529 562 298 280

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00028e+07us (= 10002.8ms, 10.0028s)
Wall-clock time (full program): 1.00582e+07us (= 10058.2ms, 10.0582s)
Satisfaction error: 9
Number of search iterations: 2954
Number of local moves: 2505 (including on plateau: 2460)
Number of local minimum: 14 (including on plateau: 279)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 175 143 229 575 137 199 28 144 224 641 589 91 25 27 404 198 373 675 300 217 568 649 396 86 299 681 376 => the sum is 8449 rather than 9855
Problem in row 8: 604 526 423 239 339 272 231 30 9 597 118 487 46 693 156 242 97 585 655 483 81 54 631 723 235 440 651 => the sum is 9647 rather than 9855
Problem in row 9: 261 351 108 307 312 705 302 451 403 639 212 468 716 107 308 595 273 605 230 475 713 80 248 292 68 112 469 => the sum is 9810 rather than 9855
Problem in row 10: 398 209 542 474 134 601 507 194 719 347 636 21 304 195 721 338 452 546 511 240 325 129 638 135 42 551 588 => the sum is 10497 rather than 9855
Problem in row 11: 382 286 385 153 275 267 363 624 113 336 29 252 323 162 587 58 105 659 673 22 11 386 703 71 552 238 264 => the sum is 8279 rather than 9855
Problem in row 13: 391 683 632 236 566 726 200 429 380 684 540 271 219 244 436 467 672 383 111 69 433 564 569 577 512 294 690 => the sum is 11978 rather than 9855
Problem in row 18: 337 691 710 661 215 434 132 65 121 517 320 249 581 258 630 421 350 352 213 550 96 103 43 63 514 188 524 => the sum is 9338 rather than 9855
Problem in row 23: 138 623 618 717 375 687 67 309 409 584 15 616 574 191 170 476 486 532 62 686 725 634 619 357 379 554 437 => the sum is 12040 rather than 9855
Problem in row 24: 405 278 402 358 106 281 270 246 314 222 516 196 365 190 17 652 461 36 41 367 49 646 61 635 220 611 712 => the sum is 8657 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 476 529   4 282 705 125  18 564 604 533 446 279 174  72 572 166  75 204 546 680 251 431 444 237 592 157 689
  76 129 209 160 107 421 724 265  35 230 615  57 649 712 456 268 574 247 579 438 647 558 216  37 527 261 658
 112 668 666 635 400 567 326 390 203 280  56 503 532 162 473  99 683 330 659   7 165 643 316  64 670 124 122
 458 599  38 654  14 264 596 290 133 641 561 379  63 152 718 411  23 486 161 715 288 559  54 228 676 525 169
 258  70 145 451 167 457  83 492 469  10 100 627  84 369 403 536 675 208 368 584 621 299 648 372 309 601 449
 418 623 150 629 631  98 609   3 508 131 625 663 429 656 200  59  32 531 304 102 703 420 181 495 382 634  50
 434 554 206  51 139 672 557 453  61 186 726 441 177 141 577 475 471 645 600 175  25 242 185 173 628 231 630
 562 140 642 607 538 118  31 560 402 153  43 684 417  29 468 474 723 463 319  73 111  65 565 329 305 489 545
 588 447 351 374  93 498 137 499 108 515 496 199 488 563  88 255 262 613 480 383 514 189   1 575 501  48 590
 236 439 472  49 478 493 394 725 506 481 232 699 633 704 114 583 182 101 158 323  34 194 587 617 246 110 409
   6 154 620 497 197 334 274 116 346 178 610   8 605 465 537 682 211 632 275  22 466 253 696 692 215 660 104
 534 284  95 504 655  58 300 644 706 387  71 405 212 662 243 281 640 520 412  30  77 240 490 296  46 385 678
 624 272 707   2 289 626 373 233 423 322 548  60 391  97 364 239 428 363 448 702 292 652 119 342 179 359 401
 386 371 399 419 340 355 377 348 381 315 301 407 338 479 331 398 376 345 358 450 388 287 354 365 337 357 293
 113  91 244 151 192 720 517 180 218 597  53 285 267 105 306 728 614 312  45 661 375 722 424 440 427 608 460
 147 314 121 205 389 187 686  78 126 576 664 526 344 393 370 297 606 671 540 443  90 327 260 176 222 556 541
 250 518 589  67 539  82  62 455 708 432  44 271 257 425 202 667 343 298 168 213 149 566 665 679 307 445 454
 482 578 245 467 512 442 238 103 636 278 452 106 500 657 582 470  42 302 207 220 603 172  11 509  47 426 568
 269  92 164 721 321 651 266  79 677 719 595 115 248 217 694 591  87 585 214 639 487  89 336 256 709 270 183
  17 353 729 303 313 547 528 366 120 674  24 138 464 524 109 156 416 148 436 462  28 638 519 544 422 223 225
 276 332 433 700 586 594 193 117 611 571 555  41 128 130   9 580 328  52 163 693 619 521 339 459 123  96 159
 324 196 380 384 249 522 485 573 132 143 602 570 681 235  86 310 461 710  13 134 397 144 516  19 549 691 349
 711 646 352 550 507 341 669 333 714   5 198 378 362 415  21 295 234  16 690 201 698 350  74 191 317 502  85
 320 294 523 146 263  15 637 697 184 360 136 653  94 688 229 367 226 392 717 325 241 142 685 701  69 170 283
 483 530 318 311 727 356  55  26 227 695 254 581 713 219 612 347 190  80 361 127 553 252 221 716  68 396 437
 622 408 569 259 477 273 210 650  66 308 335 494  12 171 404  40 410 195 598 435 491 505 414 155 552 511 291
 673 224 484 277  27  39 510 616 551 135 513 286 593 413 687  81 543 406  36 618 542 395 535 188 430  20  33

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00568e+07us (= 10056.8ms, 10.0568s)
Satisfaction error: 6
Number of search iterations: 3386
Number of local moves: 2828 (including on plateau: 2779)
Number of local minimum: 40 (including on plateau: 319)
Number of resets: 0
Number of restarts: 0

Problem in row 6: 418 623 150 629 631 98 609 3 508 131 625 663 429 656 200 59 32 531 304 102 703 420 181 495 382 634 50 => the sum is 10266 rather than 9855
Problem in row 10: 236 439 472 49 478 493 394 725 506 481 232 699 633 704 114 583 182 101 158 323 34 194 587 617 246 110 409 => the sum is 10199 rather than 9855
Problem in row 19: 269 92 164 721 321 651 266 79 677 719 595 115 248 217 694 591 87 585 214 639 487 89 336 256 709 270 183 => the sum is 10274 rather than 9855
Problem in row 20: 17 353 729 303 313 547 528 366 120 674 24 138 464 524 109 156 416 148 436 462 28 638 519 544 422 223 225 => the sum is 9426 rather than 9855
Problem in row 21: 276 332 433 700 586 594 193 117 611 571 555 41 128 130 9 580 328 52 163 693 619 521 339 459 123 96 159 => the sum is 9408 rather than 9855
Problem in row 24: 320 294 523 146 263 15 637 697 184 360 136 653 94 688 229 367 226 392 717 325 241 142 685 701 69 170 283 => the sum is 9557 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
  55  39 268 241 724  15 530 609 628 422 173 565  16 634 307 400 645  77 611 308 707 348 332 584 107 116 394
  51 613 159 122 148 689 203 500 551 102 274 536  22 501 213 498 672 438 680 578  70 190 682  46  79 677 561
 450 566  32 327 529 534 154 629 667 550 485 330 211 598 256 269 144 538 511  14 697 607 434 261 659 310 455
 338 543  10 234  67 652 219 617  40 504 548 687 670  20 644 684 545 193 100 160 605 423 512 334 328 473 229
 141 513 657 542  66 647 622 156 533 696 185  83 648 597 134  52 384  64 288  71 478 275 444 428 549 581  21
 673 344 157  61 441 602 503 574 601 442 656 719 600  38 539 150 143 392 186 161 155 583 675  30 172 180  78
 655 306 413   6  11 315 113  23 653 679 662 674 145 209   7 579 220 518 225 532 571 544 103 683 608 151 250
 136 465 207 273 643 140 417 125 164 495 593 176 178 699 165 492 329 632 660 461  44 676  94  19 716 665 264
 671 690 694 702 191 131 335 124 482 585 110 119 231 488  76 693 232 262 387  97  13 146 477  86 466 709 658
 589 152 130 216 451 547 484 168 221  54 326 620 267 721 424 445 289 319 618 104 347 619 295 528 257 218 446
 558 255 700 453 311 245 712  80 284  87 463 302 430 258 715 115 346 272 304 323 560 486  60 479 263  89 705
  92 123 158 440 162 366 580 476 612 610 470 646 425 321   3 436 708 226 546 443 276 342  75  69 633  29 588
 377 421 386 452 431 407 388   4 408 402 409 414 381 378 399 599 365 345 355 403 383  45 376 183 382 369 393
 391 373 412 396 367 398 415 325 385 359 405 351 375 227 379 316 360 333 356 410 341 357 363 362 370 358 371
 704 429 435 259 320  28 235 361 135 339 720  36 301 397 725 169 350 711 517 713 401 205 167 271 368 179 380
 404 626 318 239 300 411 246 685  25 312 217 192 491 515 564 188 502 475  56 340  43 181 591 727 462 596 149
 283 299 726 728 460 224 454 456  35   5 317 337 537 139 236 552 293  47  68 661 663 418  73 281 291 594 678
 448 467 222 567 701 349 336 253 270 286 604  18 238 314 592 698 623 254 228 206 266 189 481 714  98 251 182
 292 210 640 651 199 464 522 666 230 184   2 126 483 395 637 153  31 692 215 525 223 509 406 294 458 353 420
 194 197 496 554 573 196 105 516  85   8 233 242 576 556 313 171 531  42 519 527 642  17 572 710 117 120  37
 137  33 195 668 474  90 175 296 240 331  99 568 540 654 494  58 469 586 595 298 127 260 569 523 212 514 650
 575 147 324 163 603 138 200 287 722 718 372 625  49 142 688 389 214 520  93 499 437 562 174 559  57 101 497
 132 133 247 521 114 506 303 507 487 553  27 472 664 106 252 703 577  50 468 582  96 493  34 279 555 505 489
 432 128 570 112 471 621 627 433 187  81 686 459  95 480  84 111  12 129 447 631 419 630 248  91 669 439 563
 641 638 426 541 202 723  53 170 636 204 282 374 691 109 557 278  72 614 166 108 606   9 277 237 427 524 290
 354 729 249 322 695  74 639 535 309 198  88  63 590  62 208 352 118 510  41 243 177  24 635 587 526 390  59
  82 416 624  65 201 343 285 280 265 649 449 121   1 297 244 305 681 616 615 457 508 717 706 490  26 364  48

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00571e+07us (= 10057.1ms, 10.0571s)
Satisfaction error: 7
Number of search iterations: 3390
Number of local moves: 2852 (including on plateau: 2804)
Number of local minimum: 27 (including on plateau: 333)
Number of resets: 0
Number of restarts: 0

Problem in row 3: 450 566 32 327 529 534 154 629 667 550 485 330 211 598 256 269 144 538 511 14 697 607 434 261 659 310 455 => the sum is 11217 rather than 9855
Problem in row 4: 338 543 10 234 67 652 219 617 40 504 548 687 670 20 644 684 545 193 100 160 605 423 512 334 328 473 229 => the sum is 10379 rather than 9855
Problem in row 8: 136 465 207 273 643 140 417 125 164 495 593 176 178 699 165 492 329 632 660 461 44 676 94 19 716 665 264 => the sum is 9928 rather than 9855
Problem in row 19: 292 210 640 651 199 464 522 666 230 184 2 126 483 395 637 153 31 692 215 525 223 509 406 294 458 353 420 => the sum is 9980 rather than 9855
Problem in row 20: 194 197 496 554 573 196 105 516 85 8 233 242 576 556 313 171 531 42 519 527 642 17 572 710 117 120 37 => the sum is 8849 rather than 9855
Problem in row 26: 354 729 249 322 695 74 639 535 309 198 88 63 590 62 208 352 118 510 41 243 177 24 635 587 526 390 59 => the sum is 8777 rather than 9855
Problem in diagonal 0: 55 613 32 234 66 602 113 125 482 54 463 646 381 227 725 188 293 254 215 527 127 562 34 91 427 390 48 => the sum is 7974 rather than 9855
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 146 local moves
Selected variables are frozen for: 0 local moves
73 variables are reset when 146 variables are frozen
Do a restart each time 729 resets are performed
############
Solution:
 718 570 164 103 257 283  32 472 680  47 540 329 565   3 622 589 698  77 236 409  78 263  25 646 124 603 722
 106 712 188 379  35  37 397 201 594  36 668 375 530 238 126 590 494 672 449  75 127 474 691 496 162 724 279
 585 157 728 402 228  23   5 251 133  92 549 273 171 684 340 584  90 287 606 337 697 435 259 237 630 593 479
 491  15 271 642 214 384 554 316 309 232  93 436  58 536 464 422 538 450 234 440 498 578 368 610  17 256 429
 260 239 154 588  86 489 613 445 122  96 206 596 477 104 682 512 457 475  29 182 240 266 587 690 315 725 220
  41 344 692  99 671 708 325 373 408 291 480 720   2 471 343  76 462 525  60 308 574  13 281 666 109 414 399
 559  74 332  22 284 707 196 575 140 551 199 141 173 513 465 410 223 357 219 318 532 548 321 507 716  50 351
 579  24 617  72 158  94  38 451 539 524 595  21 663 289 534 311 502   1 387 685 580 582 134 253 645 518  59
  71 673 114  33 262 165 519 628 552 443 687 659 544 417 147 320 704 105 169 296 650 149 381  48 120 560 439
 361 177 676 388 152 403  87 297 660 460 312 193 709 356  19 211 305 468 527 243 664  45  42 706  31 522 640
 181 184  91 203 469 648 605 620 145 669 354 662 563 504 461 290 338 241 581 438 192 686 159  54 191 129 197
 577 623 378 455 401  98 567 317 272 215 113 393 727 719  28 400 398 566 347 244 189 323 470 633  10  97 295
 366 657 389 679 390 419 441 412 407 428 433  84 328 326 174 406 137 367 374 372 446 207 319 313 364 396 221
 695 430 230 442 495 665 355 261 526 330 175 333 205 531 353 699 541 537  83 478 466 371 723 573 432 360 616
  69 557 452 394 298 202 651  18 509 336 345 621 280 282  64 542 385 456 348 146 267 693 568  51 591 299 431
 210 608 555 235 572 144 459  44   8 490 217 615 413 583 350 404 486 711 153 492 484  68 121  85 618 485 245
 625 427 515 611 694 543 303  67 453 270 178 545  89  34 529 213 246 142 696 444  11 601 562 225 516 156 160
 285 179 418  81 208 227 717 653  30 170 346 700 473 231 107 310 624 247 569 702 458 670 370  82 553 265 180
 437 327 487 383 481 276 294 520 248 674 334 115 339  14 609 634 359 416 286 307  12 454 510 268 592 204 275
 293 136 249 523 701 497 600 198 331 643 264 488 550 186 508 166 130 116 212 571 483 420 341 395 517 274  63
 150 322  16 415 637 358 187 715 167 258 511 224 607 655 369 632 301 143 631 482 110 277 656 132   9 363 528
  52 250 638 688 117 218 226  40 190 681 689 163 172 342 254 123 161 629 710 667 324 101 376 448 467 426 703
 675 564  55 561 112 635 135 598 118 652 151  65  49 229 654  46 155 377 185 604  66 639 125 506 636 677 586
 222 576 713 411   4 386 729 365 721  53 641 714 100 535 425 102  61 476 602 300 380  73 626 306 269  26  39
 521 209  79 108 705 599 119  95 661 503 493   7 216 612 505 176 726 128 314 148 658 233 558 463 392  80 547
 683 533 292 514 546  20 423 304 597 649  27 200 500  70 421 556 195 644 499 111 501 252 194  57 447   6 614
  43 288 362 424 678 627 278 619 335  62 255 183 352 391 302 131 139 242 349  56 168 434  88 405 382 647 138

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00566e+07us (= 10056.6ms, 10.0566s)
Satisfaction error: 4
Number of search iterations: 3047
Number of local moves: 2525 (including on plateau: 2475)
Number of local minimum: 23 (including on plateau: 318)
Number of resets: 0
Number of restarts: 0

Problem in row 7: 559 74 332 22 284 707 196 575 140 551 199 141 173 513 465 410 223 357 219 318 532 548 321 507 716 50 351 => the sum is 9483 rather than 9855
Problem in row 10: 361 177 676 388 152 403 87 297 660 460 312 193 709 356 19 211 305 468 527 243 664 45 42 706 31 522 640 => the sum is 9654 rather than 9855
Problem in row 14: 695 430 230 442 495 665 355 261 526 330 175 333 205 531 353 699 541 537 83 478 466 371 723 573 432 360 616 => the sum is 11905 rather than 9855
Problem in row 27: 43 288 362 424 678 627 278 619 335 62 255 183 352 391 302 131 139 242 349 56 168 434 88 405 382 647 138 => the sum is 8378 rather than 9855
