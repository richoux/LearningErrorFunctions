@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 101 566 109  57  41  44 536 624 513 447 126 611 261  76 400 183 393   2 367 537 593 610 463 132  33
 112 412  91 466  67 592  96 553 123   6 552  38 104  64 113 567 543 177  22 583 562 575 549 550 308
  56 483 625 601   4 404 300 590 492  24 446 411  36 182 337 238 154 114  78 420 131 600 617 470  12
 155  93 604 621   3 127  77 330 586 116 319 142 152 480 594 519 579 484 141 418 161 460 166 464  34
 356 179 102 107 558 570  50 597 561 130  42 520 149 146 115 527 595  85 274 307 204 545 397 620  89
 143 512 417 551  54 563 408 532  14 517 482  46 221 133 145 491  20  92 148 531  55 606 560 359 225
 436 108 150 258 568 496 214 134 426 525 192  88 151 139 170 556 584  37 576 193  65 355 571 542 291
 421 121 521  79 577 226 125  21 174 574 599 382 265 187 280  73 191 368 218 533 194 373 587 120 616
 147 486 207 185 623 453 240 270 176 289 534 451 236 138 157 564 613 217 118 302 156 618 375 103 167
 144 380 255 224 424 422 403 410  84 209 369   7 603 414 241 502   8 269 117 504 476 589 180 201 390
 283 242 339 331 206 434 184 572 341 311 338 168 239 252 598 286 260 395 171 257 383 336 322 364 213
 386 251 591 423 169 198 254 233 248 281 263 293 310 329 256 394 370 312 454 430 203 106 468 253 350
 188 275 243 328 318 216 378 342 374 399 228 304 344 385 277 327 284 334 509 173 372 200 285 402 340
 500 472 273 371 324 237 413 363 296 305 332  69 557 279 326 181 212 321 429 232 409 164 282  28 450
 295 442 516 439 353 208 365  82 266 317  97 565 376 524 474 389 323 354 433  95 205 160  74  30 443
 387  75  19 259 301 441 361 377 345 129 614 297 272 357 352 406 268 290 622  43 315 234 314 427 320
 459 335 489 105 465 392 306 244  94 186 388 271  83 458 431 264 384 452 348 278 119 246 175 347 506
 607 287 540 405 309 351 438 196 432 487 135  10 229 461 440  66 358 298 511  81 619 215  68  15 267
 100 362   5 494 333 449 503 288 396 124  40 481 569 530 428 349 477 488  62  47 425 276  18 162 419
 522 407 211 165 467  70 415 292 448 379 223 518 497  59 510  60 111 343 210 444 478  31  17 602 346
  53 547 437 507   1   9 546 462 535 455 202 445 538 303 485  27  48 490 539  11 190  51 316 172 456
 615 493 299 247 435 159  61  13  80 128 235 475 529 580  16 153 499 581 360 249 479 231  72 227 609
 612  32 245 505 515 313  98 178 222 381 391 140 469 608 137 555 136 554 197 526 199 110  25 220 457
 528 230 498  45 294 262 559  23  58 605  90 585  87 578  29  26 366 573 325 473 250  71 401 471 398
 219  35  39  52 416 189 495  99 541 501 588 508 548 163 514 122  49 195 596 158 582  63 523 544  86

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.15114e+06us (= 6151.14ms, 6.15114s)
Wall-clock time (full program): 6.20063e+06us (= 6200.63ms, 6.20063s)
Satisfaction error: 0
Number of search iterations: 1849
Number of local moves: 811 (including on plateau: 291)
Number of local minimum: 148 (including on plateau: 46)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  94 170 560 589  11 585 616 502 557 482  19  50 147 451 501 562 197 112  76 178 158 110   9 492 597
 203  21 565 537 493 542  70 583 157 559  33 127 154  29 553 601 113 491  35 536 525  25 271  12 591
 133 117   5 588  40 548 509 594 576 495 521 114 167  45 407 100  93 189 455 346 566  58  42 511 606
 360  43 545   2  15 556 568 529 507 443 111  84 270  61 379 218  92 397 168 323 428 592 235 464 435
 192 220 528 465  48 459  16  31 517 593  41   7 489  18 534 519  13 457 544 573 445  27 200 335 554
 104  66 552 508 485   1 411 429 513 510  49 404 325 512 155 174 139  56 419 540 515  20  75 433 430
 106  44 504 527  62 569  73 550 520 494  34 418 570  99 148  60 210 403 228  53 412 483 454 438 365
 153 251 398 470 394 341 437   8 339 452 357 320 376 474  39 328 142 125 432 358 371 460  14 337 449
  87 177 427 396 516 384 426 462 480 311 126 299 506 453 267  71  90 369 101 236 522  82 118 497 422
 108 408 463 190 331 549 416 447 541  28 366 395 349 385 169  17 195 336 136 266 330 363 343 344 350
 307 264 352  85 487 364 401 368 260 381 273 387 372 400 377 143 138 356 409 230 373 322 456 246  74
 414 391 425 475 281 389  10 283 383 442 301 240   3 279 314 338 471 233   4 303 201 476 446 361 362
 288 313 198 413 302 348 423 317 306 300 329 285 257 237 327 421 334 269 199 468 375 172 254 304 386
 472 297 274 225 275 215 261 222 152 399 444 309 223 347 256 295 316 262 392 587 292 406 238 388 278
 345 258 241 390 207 221 204 280 333 319 259 353 187 287 402 582 461 249 245 268 252 326 622 310 224
 243 374 173 164 294 226 298 318 289 229 354 232 595 441 586 579 234 242 247 496 182 263 248 151 367
 498 526  68 176 308 436 209 193 611 186 535 239 165 181 208 277 551 291 286 370 276 272 524 324 115
 523 253 284 137 206 128 282 624 131 150 561 216 231 107 219 293 503 486 351 484 184 531 547 265 129
 604 555 171 250 567 105 578  95 213 144 188 149 255 532 244 603 382 163 602  63 332 415 420  72 123
 574 191 612 393 183 217 161 212  79  55 609 543 615 103 481 162 448 458 185 355 227 290 514 132  26
 380 417  91 202 156  65 180 214  59 211 600 599 124 572 505 175 499 145 620  47 575 577 607  46 159
 539 608  81 315 538  36 296 160 102 119 342 467 116 500 340 434 619 571 584  78  97 546 166 120  51
 479 623 122  86 478  23  96 194  54  80 431 466 596 121 196 359 518 146 378 533  98 490 621 605  32
 440 625 134  37 618  30 321 141   6 405 473 564 135 610  88 450 590 439 424  77  22 410  89 614  83
 179 613  52 205 530 488 563  69 140  38 469 558 598 581 130  64 477 580 305  57  67 109 312  24 617

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00028e+07us (= 10002.8ms, 10.0028s)
Wall-clock time (full program): 1.0051e+07us (= 10051ms, 10.051s)
Satisfaction error: 2
Number of search iterations: 2930
Number of local moves: 902 (including on plateau: 336)
Number of local minimum: 260 (including on plateau: 37)
Number of resets: 2
Number of restarts: 0

Problem in row 2: 203 21 565 537 493 542 70 583 157 559 33 127 154 29 553 601 113 491 35 536 525 25 271 12 591 => the sum is 7826 rather than 7825
Problem in row 7: 106 44 504 527 62 569 73 550 520 494 34 418 570 99 148 60 210 403 228 53 412 483 454 438 365 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  36 576 163   7 250 473 177 544 557 535 597  79 156 575 489 115 160 347  28  64 604  82 591 571  49
 581 600  46 556  12 550 316 570 472 121 552 547  53 532 484 328 148 143  73 111 593   3 138  18 278
 524 588  74 494 573  30 226 596 188 152 598   2  40 511 480 537  52 243  33  80 564 497  14 507 222
 208 548  51  91  22 568 173 561 522 383 599  77 240 560 380 549 363 428 126  78 471  11 125 558 133
 586 526   8 516 512 404 377 379 580 492 106   4  86   5 578  24 483 134 141 130 346 531 142 534 201
 397 308 166 498 411 123 442 503 460  17 409  72  66 482 447  13 112 325 261 337 518 577  35 415 431
 481 454  15 461 462 424 366  41 352 323 420 405 541 418 345  44 361  21  81   6 538 276 422 374 194
 305 331  62 539 506 487 288 144 445 219  38 193  34 491 559 543 553  54 195 118 412 468 291 423 127
  26 470 183 510 478 272  16 465 102 401 375 500 396 326 321 342 529 237 389 204  10 517 393 274  89
 360  92 205  83 391 421 330  71 416 433  47 439 359 329 264 400 528 252 332 294 406 451 246 425 251
 417 217 259 448 265 394 109 153 315 300  39 430 513 509 289 206 402 354 306 171 334 388 356 438 213
 414 499 348 464  65 147 301 317 466 214 432 324 229 275 358 235 355 437 271  59 319 469 231 311 286
 233 310 370 281 284 279 495 241 277 527 303 257 176 322 440 372 234 197 407 369 299 199 247 320 386
 333 290 339 269 293 351 312 341 382 267 239 368 268 327 357 215 349 313 190 395 387 436 245 410 149
 371 181 362 210 198 295 479 508 285 212 569 150 108 390 515 304 164 263 314 572 191 202 270 161 551
 353 336 545 318 262 248 505 292 232 124 266 280 373  90 309 611 209 488 185 376 307 260 189 131 536
 236 168 419 179 338 186 463 365 398 253 104 297 258 216 249 114 613 450 230 455 618 340 178 242 456
 227 283 525 200 256 485 449 343 282 244 159 146 579 296 101 350 224 459 399 562  96 254 174 255 477
 622 105 457 223 140 302 624 167 403  70  95 287 601 225 238 453 211 364 606 502 187 158 180 221 384
 139  87 378 530 435 620 192  75 196 554 107 132 540 184 207 566 145 385 413 490 136 135 474 182 523
 298 120 612 165 381  57 117  23 170 344 621 589 113 574  88 169  99 427 587 475 162 619 458 116 441
  67 203 519 367 567  84 426  97  60 446  42 584 452 122 172 592 605  29 493 504  48  69 602 590  85
 119  27 615 110  58  61 521 443  68 565 218 542 583  20  25 594 103 520 546 434 228 175 625 157 467
  63 408 608 155  50 533  45 486 154 128 335 607 585  37 129  93 220 563 610 595  32  94 617  55 623
 429  98 496 151 616  31  76 100  43 501 555 514 476   9   1  56 603 392 609 444  19 614 582 137 273

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00003e+07us (= 10000.3ms, 10.0003s)
Wall-clock time (full program): 1.00485e+07us (= 10048.5ms, 10.0485s)
Satisfaction error: 2
Number of search iterations: 3338
Number of local moves: 1132 (including on plateau: 630)
Number of local minimum: 279 (including on plateau: 74)
Number of resets: 1
Number of restarts: 0

Problem in row 12: 414 499 348 464 65 147 301 317 466 214 432 324 229 275 358 235 355 437 271 59 319 469 231 311 286 => the sum is 7826 rather than 7825
Problem in row 23: 119 27 615 110 58 61 521 443 68 565 218 542 583 20 25 594 103 520 546 434 228 175 625 157 467 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 610 512 295 435  16 447 149 498 386  65 397  91 220 558 323 510 174 544 598  79  48  51  87 119 613
 563 207 523 191  35 575 527   4 334 287 394  11  25 131 584 488 369 249 471  38   1  71 590 608 549
 427 520 616  63 128 192 622  50 339 166 464 116 132  43 586 621  40 176 336 440 114 557 250 547 280
 391 518  32   3 493  93 379 103  78  82 401 499 576 331 481 453 252 599 460  99  45 231 500 319 407
 571 381  53 198  70 160 148 529 254 303 611 104 604 240  31 343 205 405 492 125 537 151 594 121 595
 597  95  97 330  41 178 241  85 606 458 591 113 602 316 475 430 232 521 491 190 533 145 109 162 187
 543 546 169 188 296 118 514 183 465 270 505 142 199 161 137 143 164 242 592 200 322 229 624 388 485
 152 567 443 345 202  96 568  73 578 466 223 408 210 285 288 389 215 618 467 209 213 227 157 259 167
 218 184 180 217 230 380  39 382 619  17 367 221  33 281 573 290 623 251 117 593 208 605 502 225 470
  67 441  46 235 267 277 226 355  27 291 540 452 565 311 417  98 413 197 327 601 363 193 545 306 265
 247 195 155 508 276 177 271 384 341 272 580 286 353 301 477 194 248 263 476 147 313 480 559 222 100
 279 359 335 245 256 171 324 354 233 358 282 111 425 420 228 170 300 486 519 284 463 269 348 410 196
 337  52 206 278 422 283 264 457 305 302 315 428 490 312 325 308 297 352 307 356  59 515 342  69 444
 294 320 329 260 399 393 310 289 309 366  94  29 314 442 293 318 168 372 371 556 350 130 376 426 317
  81 346 332 373 525 357 261 403  74  15 262 572 370 374 561 385 102 392  90 365 406 438 377 175 189
 461 361 424 321 387 415 360 439 134   6  76 237 115 212 418 211 450 378 238 333 423 437 140 433 416
 615 364 338 404 411 459 456 474 120 434  24 503 243 347  20 553 484  44 105  30 368 445 204  54 326
 609  13 395 349 431 531 528 106 141 398  80 479 620 497 108 409 448  68 156 139 163 482  23 516 136
  77 244 579 494 258 375  34 535  47 446  49 454  55 239 383 328 275  83 340 612 451 449 526 473  19
 101 127 607 496 478   5 107   7 224 534 150 562  36 504 344 554 552 483 112 246 581 133 299 154 429
  26  28  75 462   9  89 495 560 292 513 253 569 146  42 255  86 472 625 266 489 536 436 257 432 412
 172 298  14 274 509 455 124 468 541 517 159 542 138 566 181 351 419  72 129 469 421  12  62 570 362
 126  21 585   8 577 524 185  10 400 507 390 216 617 550  61 173 564 203 165 589 614  64  22 532 122
 201 587 414 548 506 501 182 522 396 538 530 596 186  58  57   2 236 110 144 402 135 487 153 268  66
  60 539 583 600 603 574 511 555 582 214  88  84 551 304 219  18 123  92  56 234 158 588 179  37 273

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00499e+07us (= 10049.9ms, 10.0499s)
Satisfaction error: 1
Number of search iterations: 4014
Number of local moves: 1198 (including on plateau: 452)
Number of local minimum: 353 (including on plateau: 64)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 1: 613 608 250 231 537 190 592 618 623 98 477 420 490 29 262 6 120 106 34 5 9 274 585 587 60 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 508 463 235 573  27 203 572 526 315 338 225  99 118 113 554 416 277   5  97  55 460 543 555 535  13
 569  23  38 468 521  93 173  21 585 502 174 126 594 116  83 487 310   7  78 548 542 591  86 530 560
 576 275 500 568 556 123  19 429 553 227 308  32 297 108 389  84   2 494  36 495 538 559  76   1 580
 519 181   8 134 520  54   4  96 589 534 581 145 579 584 186 378 158  50 473 528 575 398 140  12 399
 488 336 155 506 111   3 407 276 409 515 236  16 551  82 427   6  70 319 313 523 504 583  46 537 406
 503 472 464 457 461  90 324 524 448  44 202 110 367  15 288 117 323 266 333  14 582  20 480 403 518
 567 410 115 469 486 141  26 394  41 507  59 122 544 166 252 320 199 351 191 571 418 405 509 131 431
 467  57 230 510 492  87 550  10 441 433 232 419 511  75 133 312  45 345 248 400 458 425   9 445 491
 341 443  17 321 451  72 489 375  11 404  62 350 449 219 268 395  63 446 354 340 483 371 422 278 401
 346 412 286 417 408 267 376 452 423  18 182 285 379 121 428  94 436 138 135 396 390 241 358 440 397
 314 190 339 512  24 240 365 462 298 194 282 259 439 475 301 330 175 307 331 366 421 414 368  47 372
 450 280 385 284 257 169 424 413 373 335 295 318 172  22 233 392 193 377 271 294 369 434 435 270 380
 363 306 290 325 244 281 402 343 221 304 347 255 289 327 384 393 466 264 283 517 119 215 262 263 362
 329 437 249 305 261 411 356 355 206 361 352 192 353 300 381 370 374 296 246 291 328 273 243 234 322
 220 161 265 388 348 357 238 311  61 222 456 596 250 279 482 334 478 152 593 344 195 383 242 274 196
 299 224 253 129 309 387 260 211 258 623 498 204 269 272 316 484 360 256 541 177 200 128 302 533 332
 160 292 217 303 226 595 212 136 592 164 608 532 606 470 178 187 620 420 359 120  48 139 147 201 293
 197 228 223  92 326 455 287 513 599 167 603 337 239 527 148 247 501 625 391 143 189  79 216 144 349
 101 251 612 176 151 525 577 481 205  80 497 597  40 561 185 237 342 132 598 180 563 165 142 198 229
 159 214 415 213 124 529 218  91 106 444 499 552 245 522 156 493 586  89 588 610  29  71 231 590  51
 105 545 153 209 171 624 605 112  42  95 114 514 188 557 163 479 562 477 471  30 168 615 617 184  25
  64 183 601 146 125 600 149  53 485 602 382 254  43 574 566 531 438 162 102 107  77 578 386 490 127
  68 426 607  85 100 459  66 616  35 611 453 505 157 430 618 154 207 621  81 150  67  31 614 210 454
  73 540 619 137 587 613 547  60  33  49 104 442  88 364 536 516 208 622 103 570  65 130 474 317  28
  39 476 549  98 539 447 179 565 496  52  74 564  58 546 170  69 432 604 609  56  37  34 465 558 109

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.13262e+06us (= 3132.62ms, 3.13262s)
Wall-clock time (full program): 3.18166e+06us (= 3181.66ms, 3.18166s)
Satisfaction error: 0
Number of search iterations: 702
Number of local moves: 602 (including on plateau: 187)
Number of local minimum: 15 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 571  64 135 495 589  96   9 567 577 149 550  14  82 580  75  19 477  88 481 510 568 588  45 492   4
 570 389 541 469 545   5 178 472 551  49 518  16 438 566   8   3 435 475 100 614  25  86 110 597  65
 544 379 315  26 615 531 140 461 410 154 279 148 392 509  83  24 210  80 581 260 520 444  87 600  33
 224   7 153  12 552 443 108 431 507 160 623 138  92 540 603  15 316 506 458 542 493 202  68 517 115
 553 559 250 204   6 322 119 590 500  27 537 288 146 575 168 489 329  43 407 564 261  77 298 424  89
 386  29 445  53 351 355  69 417 560 375 419 121 432 514  36 524 118 504 455  32 476 450 532   2 170
 359 448  11 441 516 398 203 383 371  55 320 129 125 465 396 512 473 124  34 349 416 498 176 456 167
 338 427  31 478 370 405 127 360 463  72  40 418 421 496 486 462  95 212 342 321 497 412  62 436  54
 470 474  20 434 220 433 310 391 306  21 526 453 181 295 394 466   1 103 479 395 369 491  58 328 207
 372 428 415 300 345 278 111 393 459  18 483 503  28 341 401 151  76  73 439 380 513 346 335 457 180
 326 423 363 366 259 364 384 336 123 331 200 307 382 255 285 294 440 426  90 402 217 253 361 362 276
 400 409 305 283 334 358 206 373 558 242 309  93 452 262 323 312 447 333 296 289 404  10 237 352 238
 390 354 231 353 236 239 291 414 344 350 301 311 214 269 244 264 324 287 430 339 348 192 286 403 411
 266 208 281 468 327 246 337 303 282 318 249 330 263 104 325 367 216 408 314 374 292 356 511 267 413
 226  70 189 258 275 271 221  99 471 519 618 248 273 302 254 399 616 347 565 272 270 213 234 173 442
 184 573 547 340 165 525 319 219 126 488 109 183 546 102 209 122 606 420 232 147 501 365 247 172 378
  79 182 601 228 357 215 451 132 188 529 186 256 308 230 594 161 223 274 579 194 257 245 612 280 464
 252 233 554 235 199 297 484 605 265 502  66 191 201 196 304 187 222 617 171 205 317 332 586 150 454
 268 116 494 197 313 591 624 227 134 548 130 556 528 175 157 397 449 241 277 106  22 141 549 179 406
 290 293 166 114 490 585 218 152  56 387  74 572 535 162 621 485 425 385 133 596 145 243 113 139 446
 599  46 284 543 376 105 534 155 229 522 107 198 569 128 143 536 144 240 177  85 595 211 584 185 530
  39 142 561 625 131  13 602 169  51 343 460 592 539  42 508 158 164 563 174 112  47 608 609  52 521
  23 557 527 193 163  60 576  30  37 613  84 598  67 505 480 381 429 251 467  78 156 604 225 101 620
  61 482 368 574  41  71 622  98 120 515 593 578 190 195 117 610  91 388  81  97  57 159 523 607 587
  35 533  38 136  50 619 582  48 137 538  44 583 422  17 611 487 499 437  63 562  59 299 377  94 555

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00503e+07us (= 10050.3ms, 10.0503s)
Satisfaction error: 2
Number of search iterations: 2780
Number of local moves: 1024 (including on plateau: 540)
Number of local minimum: 224 (including on plateau: 59)
Number of resets: 1
Number of restarts: 0

Problem in column 12: 14 16 148 138 288 121 129 418 453 503 307 93 311 330 248 183 256 191 556 572 198 592 598 578 583 => the sum is 7824 rather than 7825
Problem in column 13: 82 438 392 92 146 432 125 421 181 28 382 452 214 263 273 546 308 201 528 535 569 539 67 190 422 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 126  10 121 610  33   3 152 581  84 545 474 618 561 527 114 505 537  52 516 573  25 160 576  29 293
 566   6  12 353  42 113 309 184 218 482 523 514 522 389  15 191 563  11 232 519  32 506 481 518 524
 544 473   1  76 502  75 167 443   7 572 560 569 554 553   5 186 480  58 162 564  14  54  64 580 562
 450  68 124   8 131 454 187 492 120 593 582 310 597 139 100 279 370 272  39 530  90 358 568 436 528
   4  88 437 195 515 488  83 477  51 426 427 574 418 439 129 388 342 103 409 531 265 469  66  80 421
 510 448 475  79 328 517  28 534  18 551 458 390 464 397 491  96 345  19  22 303  69 362 541 238 142
   2 102   9 204 509 419 290 453  13 470 106 406 465 472 430 339 508 376 349 511 105 314 387 215 371
 374 134 312  26 413 495  85 350 253 483 380 433 466  45 484  48 536 422 396 438 151 148 476  20 457
 316 381 410 164 352 500  95 479 373 377 478 412 325 420 330  36 104 407 408 417 174  61 440  70 296
 395 459 428 451 489 494 136 306 208 202 415 441 504 416 402  21 411  44  57 351 166 119 423 123 364
 363 398 308 260 414 503 165 367 116 501 326 243 403  87 359  91 400 434 257 446 275  40 382 263 424
 274 378 224 269 300 341 368 333 277 347 391 276 270 340 548 190 385 255 281 225 496 145 258 282 372
 401 285 321 348 429 304 213 355 365 435 305 210 205 425 292 137 394 357 332 379 254 261 185 302 331
 338 299 344 329 262 335 311 317 180 354 307 234 468 346 246 343 366 334 318 324 361 264 220 327 298
 589 289 605 227 226 221 449 487 259 170 320 252 369 140 287 273 214 493 216 247 462 233 267 288 242
 107 404 375 245 128 323 467 284 590 212 294 169 280 172 521 286 163 193 206 251 486 499 196 399 575
 161 198 337 547 235 207 513 115 585 150 141 266 239 157 336 579  93 460 583 175 431 295 201 592 229
 176 278  50 616 315 200 444 584 432 256 283 217 203 194 241 520 237 549 319 182 393 178 219 550 189
  67 608 249 384 529 231 526 110 613 149 132 111  37 223 556 512  62 570 620 183 383 447 144 356  23
 118 609  41 540 228 250 386 301 442 236 173 199 179  92 552 485 154 594  81 181 555 587 156 543 143
  59 211 539 599  86 192 611  16 621  47 240 168  63 538  77 602  82 471 598 138 291 532 130 313 601
 600 230 455  30  73 133 392  38 565 155 197 153  60 624 604 268 615 209 244 101 557 617 622 125 158
  89 603 507 248 578 559 490  99 567  35 159  17  46 171 586 456 188 445 122  31 607 463 591  56 112
 577 271 535 405  94 360 497  49 546  43 127  72  53 297  55 542  98 588 533 147 558 596 135 623  24
 619 595 606 612 614 108 461  71 322  34  27 571  74 222  65 452 177 109 525  78 625 117  97 498 146

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.0051e+07us (= 10051ms, 10.051s)
Satisfaction error: 2
Number of search iterations: 3030
Number of local moves: 838 (including on plateau: 360)
Number of local minimum: 241 (including on plateau: 37)
Number of resets: 2
Number of restarts: 0

Problem in column 17: 537 563 480 370 342 345 508 536 104 411 400 385 394 366 214 163 93 237 62 154 82 615 188 98 177 => the sum is 7824 rather than 7825
Problem in column 24: 29 518 580 436 80 238 215 20 70 123 263 282 302 327 288 399 592 550 356 543 313 125 56 623 498 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 413 149  91 437 585 134 117  87  25 291 520 362 621  55 530 110 208 481 447 104 568 469 167 506 348
 471 239 604 180 601 624 489  58  57 477 405 147 127  33 158  70  84 625  46 140 532 513 454 593  98
 213  97 622 586 615  31 340  90 159 509 577 614 575  34  76 113 223 550 170 560 269 252 317  60 173
 543 546  72 133 611 562 238 144  82 555 168 410 526  77  80  54 409 485  71 188 595 468 139  56 613
 187 161 130 207 609 111 538 182 122 174 559 116 177  28  92 378 204 602 608  89 581 569 564 552 285
 541 157 106 206 603 607 181 114 255 227 438 247 494 241  88 129 112 507 288 366 553 610 201 473  81
 571 197 536 590 388  52 596 154 229 579 502 136 232 234 109 262 279 164 415 203 527 370 189 185 126
 521 192 235 620 557 102 296 616 280 547 196 619 200 108 107 145 184 533  43 331 510 250 222 220 191
 618 202  95 584 337 295 428 260 617 338 176 272 101 143 300 153 519 472 198  59 309 249 623 263 214
 219 314 277 390 522 493 205 169 265 606 218 323 193 210 156 397 479 354 148 372 376 281 237 350 271
 286 342  93 243 328 264 430 257 224 256 612 254 303 330 373 274 497 275 194 386 452 367 287 302 195
 230 355 166 456 273 304 319 292 135 333 441 150 440 209 301 379 320 384 294 374 346 324 334 315 351
 451 385 276 266 380 245 542 251 316 344 368 284 244 305 270 178 369 480 231 253 261 412 225 199 290
 343 349  35 179 246 310 426 339 423 297 318 387 361 411 459 298 393 283 401 160 341 259 233 326 248
 347 307 268 381 289 258 466 306 312 216 103 364 358 418 267 293 431 165 399 321 308 336 327 359 226
 329 465 453 121 123 594 137 420 395 332 508  85 353 345  36  24 375 429 396 444 228  32 394 383 424
 398 446 484 363  94 457 352 371 487 433  49   9 435 416 470 482  18 356 215 389 152 427  69  50 403
  68 425 357 404 138 467 163 498 175 155 236 360 402 537 313 598 132 118 531 439 128 183 400 587  11
  63 408 392 492  86 282  62 419 436  21 120 442 464 448 406 422 499  74  53 534 186 505 463  23 525
  39 501 529  17  22  26 449 474 504 172 162  42 462 518 540 311 511 325 573  47 142  41 561 414 443
 146 515 460 535  15 377 278 574 217  13  27 450  64 539 495 544 221  48 512 458 242  30  66 407 592
 391 461 417  10 124 434  75 500 455 475 115  44   7 600 496 486 432   4 488 516  73  99  96 445 582
  83  12 503 299  67  78 382 212 576  45 491 588  37 478 578 551 365  65 528 524  51 171 131 421 589
 335  20 483   1 151 599 105 548 514 190 476 523 100 545 567 591   5   8   6 566  79   3 572 322 517
  19 580 141 125  61 119 211 490 565 240  40 597 549 563 558 583 556  38 570   2  16 605 554  14  29

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00027e+07us (= 10002.7ms, 10.0027s)
Wall-clock time (full program): 1.00518e+07us (= 10051.8ms, 10.0518s)
Satisfaction error: 2
Number of search iterations: 2625
Number of local moves: 860 (including on plateau: 342)
Number of local minimum: 227 (including on plateau: 48)
Number of resets: 1
Number of restarts: 0

Problem in row 11: 286 342 93 243 328 264 430 257 224 256 612 254 303 330 373 274 497 275 194 386 452 367 287 302 195 => the sum is 7824 rather than 7825
Problem in row 24: 335 20 483 1 151 599 105 548 514 190 476 523 100 545 567 591 5 8 6 566 79 3 572 322 517 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 496 445 492 603 140 214 264 551 525 599  73  86 104  29 340 288 237  99  68 480  55  81 468 478 610
 617 614 132 552 616 380 363 107 395  17 569  41 261  39 420 142 353 184  32 161 121 570  12 615 512
 582  70  52 534 137 537 595 566 579 259  92 493  44  57 565 151 494 228  90 207 521  75 147 243 507
 135  56 250 597 385 542 156 607 535 158 350 575  24  50 444  49 585 127 437  36 218 624  60 555 270
  35 170 310 547 324 546 604 346 482 306 150 621 178  95 144 619 169 602  79 262 331 246 171 378 110
 103 499 220 281 152 406 613 182  59 545 165 276 100  93  84  91 561 600 265 612 424 148 187 587 572
 153 126 474 526 203 522 605 358 601 172 129 217 244 206 396 416 543 174 348 233  66 166 164 247 536
 136 123 591 309 125 470 168 539 391  38 280 212 222 577 490 341 531 558 224 201 272 114 197 157 559
 108 266 226 298 589 473 317 320 334 590  26 596 236 303 508 413   7 557 223 517 177 239 202  21 279
 163 199 466 498 292 393 219 387 154 593 256 241 429 112 464 505 314 245 432 252 234 304 145 293 235
 299 338 215 388  87 573 330 342 438 366 586 383 337  89 335 204 255 481 355 475 190 225  96 319 119
 175 176 305 268 625 399  43 269 392 608 258 196 188 454 402 332 419 271 297 372 325  14 315 394 328
 538 124 442 101 285 205 195 452 370 361 111 254 322 352 410 229 351 200 275 447 316 373 376 362 374
 523 318 287 260 426  42 162 453 291 128 302  28 421 398 451  88 253 277 326 300 344 576 408 409 354
 349 411 382 251 623 180 365  54 249 289 263 405 267 301 232 467 462 294 323  19 179 321 357 403 379
 282 231 198 274  58 540 369 102  98 191 290 428 460 375 242 422 307 308 186 311 556 448 578 159 412
 415 504 435 295 312 113 506 469 329 441 404  40 347 443 122  20 183  63 461 371 221 495 283 368 185
 333  69  33  48 497 134 433 554  47  37  74 458 502 544 238 339  31 418 472 459 488 401 417 286 513
 427 503 146 571 381  71 120 284  72   3 528 568 414 484 360 584 257  97  13  18 407 483 479 210 345
 389 581 455  94 364 377 240 216 208 434 553 117 456 423   8 620 192 598 160   1 194 564 457 109  15
 446 463 430 343  45 209 425 106 518 514 450  85 449 574  78 278 130 296 511 248  27 533 529  62  76
 486 189 487  53 431  51  46 356  67   9 563 131 515 562 336 213 138 510 527 592 580 167 606  61 149
 500 501  11 118 532 141  25  34 139 211 476 439 397 560 143 509 440  82 516 436 477 530   5 520  83
 133 384 386   6 116 230 489  16 359 471 327 622 541 524   4 115 549 491 611 227 519 105 548  22  30
   2 465 400  10  80  77 173 155 193 485 550 313 367 181 609 390  64  65 594 588 583  23 618 567 273

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.62901e+06us (= 7629.01ms, 7.62901s)
Wall-clock time (full program): 7.67927e+06us (= 7679.27ms, 7.67927s)
Satisfaction error: 0
Number of search iterations: 2087
Number of local moves: 790 (including on plateau: 272)
Number of local minimum: 176 (including on plateau: 34)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  50 362 150  39 520  23 433 314 296 586 217  27 184 182 595 413 280  32 398 601 591 522 535 188 287
 598 361 563  21  59 208 128 506 507 232 229 517 235 111 543 556  16 358 108 605 542 213 269  18 322
 478 545   2 224  38   3 332 498 222 476  14 554 215 494 574 584 126 495  89 516 582 447  36 199  82
 566  30 550 316  71 286  24 467 568 504  73 263  10  22 530 589 439  58 500 604 336  44 513 264 198
 564 380 606 372 523 315 195 293 281 561 207 452   4 176 484 555 112  77 140 410   7 422 510  26 153
  12 526 489 436  34   1 212 331 407 339 129 386 488  33 479 412 168 524 553  42 612 472 446 170 124
 525 501 409 133 172 131 285 486 138 502 201 121 175 152 428 360 572 531 253 397 473 278  96 419  87
 369  83 445  28  53 461 107 465 463 540  37 367 349 538   5 451 456 508  76 416 477 468 499 151  13
 375 354 247 454 474 135 187 274  31 536 585 392 255  78 471 384  98 334 309 547 557 294 343   9 102
 424 460 457 352 276 399   8 511 414  11 335 350 368 321 353   6 390 441 435 196  40 319 466 429  64
 202 396 401 453 505 381  68 288 440 437 431 275 411 602  74 415  17 279 165 192 427 226 178 408 154
 266 306 190 299 395 298 324 301 449 283 400 388 458 209 337 426 425 262  43 189 186 373 355 359 304
 167 389 391 141 297 234 599 329 347 271 376 305 303 231 387 211 223 548 114  72 323 308 346 326 587
 270 607 260  79 267 248 256 333 241 144 273 289 236 418 580 300 320 327 382 257 227 404 338 405 364
 491 340 313 497 284 218 621 571 268 307 590 345 261 351  62 149 180 158 252 142 385 101 318 244 377
 239 290 237 205 567 480 147 117 156 588 265 312 181 546 251 206 325 403 470 171 194 394 291 342 448
 183 173 357 254 562 295 496  41 613 185 578 521 169 197 148 341 443 420 259 220 119 132 127 528 464
 137 203 438 120 292  46 240 559 600 539 503 243 366 249 125 136 282 518 272 246 204 619 155 219 514
 200 344 166 423 221 614 622 116 104 191 302 363 374 383 216  48 450  75 519 277 238 210 549 245 575
  57 193  15 469 558 490 552  92 565  90 123 485 551 544 371 159 532  80 579  93  52  45  65 583 482
  94 161  81 611 328 592 493 146  86 164 109 130 311 509  97 455 615  67 258 560 608 233 122 593 402
 610 177  47 348 475 432 310 115 417  70 174 534 594 577  25  54 113  20 356 379 365 492 597 214 330
 228  49 317 616 625 430 527 106  84 103 434  51 573 230 179 110 481 160 603  88 162 157 459 483 570
 100 576 609 529 163 618 624 421  99  61 623  60 242 533 118 134 225 581 250  91  63  56 143 462 444
 620  19  85 406  66 487  35 145  29 105 617  95 512 139 393 370 537 569 442 515  55 596  69 541 378

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00513e+07us (= 10051.3ms, 10.0513s)
Satisfaction error: 2
Number of search iterations: 2678
Number of local moves: 913 (including on plateau: 386)
Number of local minimum: 247 (including on plateau: 47)
Number of resets: 1
Number of restarts: 0

Problem in column 16: 413 556 584 589 555 412 360 451 384 6 415 426 211 300 149 206 341 136 48 159 455 54 110 134 370 => the sum is 7824 rather than 7825
Problem in column 20: 601 605 516 604 410 42 397 416 547 196 192 189 72 257 142 171 220 246 277 93 560 379 88 91 515 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  84  83 480 422  44 522 575  60  39 572 141  97 441 621 112  69  63  73 536 285 612 591  57 622 624
 483 520 448 586  29 565 573 530 298 534 169  67 527 606  22 130 120  49 126  38 470 602  98 108 127
 528  80 551 577 195 436 617 114 105 319 102 487 272  65  40  90  95 449 613 146 481  79 623 601 160
 605 111 544 620  31 414  94 450  99 590 162 139 608 129 134 205 472  76 482  30 558 564 240  92 376
 543 124 444 463 426 556 535 599 173 263 236 248 581 115 145 168 132 182 191 170 568 231 206 283 243
 336 136 563 537 279 592 164  78  93 570 196 412 545 117 201 394  81 121 203 541 435 104 157 381 589
 198 194 533 151 192 562 594  62 180 403 202 464 619 269 478 429 184 178 220 171 615 222 109 224 372
 511 210 596 166  85 488 163 614 313 484 185 618 326  51 143 261 221 598 144 149 382 177 138 193 609
 233 135 292 386  88 603  74 239 611 229 489 616 152 209 337 532 588 304 156 137 549 103 296 260 207
 317 363 495 165  66 466 267 485 167 625 199 320 172 308 232 225 390 375 268 404 350 277 307 106 476
 241 254 547 161 342 430 274 341 204 401 595 214 118 266 427 306 301 190 249 325 415 322 324 213 365
 440 297 355 252 335 455 187 275 447 471 245 311 303  32 340 133 314 200 329 395 561 188 369 281 310
 255 211 242 289 387 419 265 273 286 367 362 288 287 305 374 364 338 244 502 208 378 228 258 348 347
 328 354 315 250 370 218 352 339 411 345 271 360 417 359 276 397 330 408 309 270   9 150 333 392 262
 361 312  61 291 529 122 473 513 318 216 373 110 353 418 282 379 410 398 344 294  72 226 332 358 280
 389 384  35 402  27 215 366 509 377   7 452 284 357 251 323  10 438 343 490 492 293 531 451  68 331
 493  36  47 465 346  87 460 383  16 446 295 425 442 264 391 223  37 380 443 368 290 400 421 514 153
 174 469 189 101 432  56 457 321 399 219 300 123 439 474 494 247 454  58 334 433 158 508 496 253 237
 125 491 238  77 407  12   3 424 521 230 349 302  71 356 505 459 501 569  19 557 154 405 385 479 186
  42 477  96 566 524   8 351   5 179  33 431 176  28 538 571 393 580 467 217  17 181 406 550 576 413
 437 420  41  82 327 147 416 458 475  25 116 212  48 434 497 409 371 523 461 504 107 428   1 498 388
 462 515 234   4 600 183  53   2 518  45 456 584  75 500 423 540 131 552  21 583  23  46 512 604 159
  91 554 316 610 607 113 175 503 516 140 486 468 142 519 546 567 587  14  18 542  64  24   6  20 197
  50 585  43 148 578  70  59  13 525 257 453 445 256 593  15 499 128 548 597 227  89 507 582 299 259
 100 510 119  54 579  86 278 235 555  34 560  55 246  26 517 396 559 526 553 539  11 506 574  52 155

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00448e+07us (= 10044.8ms, 10.0448s)
Satisfaction error: 2
Number of search iterations: 2909
Number of local moves: 915 (including on plateau: 453)
Number of local minimum: 213 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

Problem in column 1: 84 483 528 605 543 336 198 511 233 317 241 440 255 328 361 389 493 174 125 42 437 462 91 50 100 => the sum is 7826 rather than 7825
Problem in column 3: 480 448 551 544 444 563 533 596 292 495 547 355 242 315 61 35 47 189 238 96 41 234 316 43 119 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  71 586 612  84 176 604 531 481 568 118  43  80  27  44 110  28 485 589 484  23 554 582 613  64 268
  46  65 331  67 587 289 391 624 601 459 556   4 608  30 339 108 583  66 565 107 609 144 134 187 325
 122 502 605 623 106 555 496 575 593 592 351 111 401  78  70  38 549 131 232  47 137  75 117 159 560
 616 430 611 619  95 514 320 571 548 499 516  91  32 103  97 105 133 101 509  73 250 129 621 146  96
 147 553 506 419 572 374 185  83 240 529 230 102 237 330 585 152 397 143  60 167 534 432 249 119 480
  53 305 501 318 121 622 618 578  69 469 354  40 597  52 153  99 545  74 590 625  92 100 179 177 494
 263 443 603 243 184 580 220 423 270 570 503 248 215 188 162 192 234 114 620 340 160 155 211 207 477
 135 166 546 123 140 487 547 154 225 464 520 149  29 304 551 600 202 379 596 116 189 236 599 156 212
 138 479 453 332 302 173 180 335 313 594 563 168  82 229 500 171 527 233 371 193  36 366 287 258 542
 293 295 411 197 224 195 208 299 378 285 380 280 297 253 314 434 342 573 115 205 301 606 358 219 363
 306 274 615 127 292 343 468 251 241 284 308 602 356 120 264 300 163 296 346 204 322 200 413 344 386
 283 281 445 275 336 222 307 319 266 291 196 231 282 385 136 303 265 338 539  77 422 377 588 352 309
 213 315 276 217 256 158 426 218 214 433 271 394 139 360 348 466 446 436 364 244 337 355 333 441 165
 194 408 172 254 327 368 190 388 359 181 262 390 439 350 245 203 277 145 475 286 310 421 405 406 370
 252 410 170 420 398 221 259 246 414 463 349 341 519 279 272 161 326 261 383 312 329 126 242 361 311
 392  94 128 462 353 269 455 381 357 389  19 437 396 316  89 294 334 473 440 273 428 298 255  39 454
 474 365 321 431 522 227  54 530 491  24 191 257 429 323 427 393  57 247 169 416 512 412   3 376 174
 375 125  61 228 290 418 198  14 399  51  98 210 577 483 482 448 206 557 400 470 235 489 223 404 384
 382 175  26  17 450 260 460 458 395 328 372 566  15 373 186 497 209 444  16 511 425 362 478 402  18
 517 278  41 504 471  63  62  81  22 109 492 576 562 451 324 505 508  55  72 456 486 288 369 409 124
 442 452  31 495   5 141  88 447  33  79 226 541 467 498 544 550  50 533 178 528  35 476   9 574 403
 515 345 104 387 157 132 493  86 524  34 216 538   8 584 607 438 457 561  25 540  56  37 435 347 199
 526 465  59 407 510 449  68  76  90 112 183 367 579 564 164 567 424   1  87 614 513  10 417 525  48
 472  12 148 518 415  11 113   6  85 151 581 507  42 559 617 238  13 552 182 461 532 591 267 610 142
 598   2  49  58 536 150 488 201 130 317  45 595 490 569 239 535  93 523   7 537  21 558  20 543 521

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00498e+07us (= 10049.8ms, 10.0498s)
Satisfaction error: 1
Number of search iterations: 3282
Number of local moves: 1064 (including on plateau: 475)
Number of local minimum: 283 (including on plateau: 68)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 71 65 605 619 572 622 220 154 313 285 308 231 139 350 272 294 57 557 16 456 35 37 417 610 521 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  42 624 129  70 163 611 596 535 272 277  83 103 323  20 358  61 533 366  60 600 365  17 553 475 589
  50 218 620 592  29 579 164 459  53 595  49  92  73 613 554 409 491  52  21 586 268  16 130 541 571
 606  13 537  32 111 522  18 578 100 205 527  69 548 388  39 142 420  59  86 133 582 476 604 560 471
 104 597 319 622  38 385 549 602 115 357 145  85 348 594 156  27 623 107  67 212 108 598 563   4 500
 468 539 126  94 513 618  99 616 171 170 122 266 430 121 181 184 599  66 123 177 207 415 591 531 398
 428 331 101 224 625 503 159 610 105 431 260 289 566 499  93 226 315  95  62 577 287 110  96 432 401
  87 484 239 341 332 251  84 512 487 225 313 250 450 570 151 118 498 144 564 150 169 262  31 562 551
 581 355 295 354 249 379 252 492 270 263  58 179 546 235 183 124 148 556  98 293 446 116 438 501 414
 197 234 352 194 583 505 160 154 490 175 297 174 517 607 161 210 199 196 529 232 601 241 240 227 350
 482 286 223 247 584 274 325 167 190 276 477 248 614 314 228 238 220 280 609 237 574 192  41 285 214
 193 617 217 253 180 211 200 230 303 236 452 136  72 128 590 321 296 261 619 568 347 309 425 300 361
 371 334 356 275 363 176 203 344 165 387 335 615 283 113 244 337 258 257 353 284 373 273 423 279 424
 328  34 485 120  37 305 394 378 382 412 216 437 173 339 381 426 310 290 400 243 320 346 489 219 360
 351 299 202 298 443 370 322 444 480 168 458 359  45 534 282 215 306 292 245 246 439 391 141 343 152
 396 291 406 336 208  56 318 369 149  43  75 312 209 462 326 377 340 449 327 376 308 403 612 389 288
 418 304 345 201  28 479 264 265 271 155 267 465 157 135 374 375 364 416 421 440 281 399 567 307 127
 311 383 362 521 278 422 411 324  30 349 233 256 301 404 470 294 242 119 410 317 392 419 187 204 186
  79 497 453 451 380 413 372   9 474 131 523 493  57  65 407 473 402 390 302 494 384 368  64  90  54
 342  89 417 405 393  23 433 112 519  25 435 447 143 457 496  22 162 515   2 528 329 269 559 621  82
 221   5 427 434 106 188 455  88 507 330 550 338 436 508 172 543  46 472 561  63 395 536  91 213 140
  68 555 483 461 454  44 441  36 463 408 386 442  78 178 229 488   8 448 481 132  76 544 518   7 397
 495 109 511  24 509 147 466  35 552 545 464 538  47 191 603 588 429 486 526  80  77  71  81 117 134
 198 254   3 575  74 255 572 158 524 557   1 478 231 125 576 502 138 506 504 333 467 514  10 222  48
 469   6  51 114 580  97  26 102 558 585 530 608 573  40 516 532 445 547 316 510  11  15 182 259 153
 540 367 166 587 565  12 542 206 195 520 569 146 605 185  55 593  33 456 139  14  19 525 189 137 460

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00024e+07us (= 10002.4ms, 10.0024s)
Wall-clock time (full program): 1.00518e+07us (= 10051.8ms, 10.0518s)
Satisfaction error: 2
Number of search iterations: 2652
Number of local moves: 791 (including on plateau: 249)
Number of local minimum: 236 (including on plateau: 30)
Number of resets: 2
Number of restarts: 0

Problem in row 3: 606 13 537 32 111 522 18 578 100 205 527 69 548 388 39 142 420 59 86 133 582 476 604 560 471 => the sum is 7826 rather than 7825
Problem in row 13: 328 34 485 120 37 305 394 378 382 412 216 437 173 339 381 426 310 290 400 243 320 346 489 219 360 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  12 113  13 111 559  74 132 307 572 535 534 172 521 548 614 261 595 218 620   9 141   2 574  30 558
 116  16 315 100 544 230  32 154 546 547 436  81 510 570 591 565 553 127 520 138 517  45  78 446  48
 136  23 562  89 603  41 144 148 589 593 408  63 259 581 502 561 344 149 524  20 145 295  56 496 494
 528  22 571 146 484  49  27 411 573 459 604  31   6 354 450 610 599 173 126 153 106  54 579 112 598
 508 131 485 433  10  88 228 103 415 612 314  92  53 545 447 525 423 147 541 125 437  64 532  37 530
 470 118 431   7 464  57  72  96 480 492 101 486 516 609 417 511 237  25 518 150   5 399 473 220 471
 394 479 466 413 498  51  73  76 465 489 240 105 434 560 439 455  17  99 449 123 107 349 445 117 482
  18 469 444  58 509 475  50  14  33 441 404 416 585 514 443 537 388  55 568 143   3 254 414 139 451
 410 477 550 453 371 401 202  36   4 328 421 462 346 383 483 400  11 260 373 109 108 340 478  44 375
 407 198 288 217 355   1 304 392 488 197 384 429 341 347 337 440 367 151 452 152 334 386 343 238 277
 323 391 316  34 201 359 381 378 216 339 206 419 395 205 333  91 442 364 533 142 396 360 363 329 309
 376 336 310 208 461 487  47 345 278 385 606 276 267   8 313 356 425 322 358  94 253 236 226 432 420
 292 393 361 380 372 222 387 193 365 326 321 188 287 283 424 293 457 209 279 265 403 200 302 374 249
 231 320 362 271 357 291 519 402 298 256 258 379 199 448 270 177 389 405 286 398 303 242 235 248 281
 317 318 331 582 221 239 390 275 274 338 350 294 296 213 335 171 250 268 165 382 543 369 285 438 181
 499 273 299 282 175 348 311 605 122 161 234 266 225 133 353 583 182 584 232 552 196 251 183 592 184
 308 262 272 312 157 255 368 555 428 324 189 284 207 290 269 246 616 493  43 529 300 481 195 223 219
 319 527 203 515 257 263 587 556  61 170 539 130 351 227  86  80  75 306 229 588 507 247 212 622 168
 557 187 110 625 214 624 504 245 102 422 264 623 185 128 211  46 104 476 576 607 210 241  82 412  70
 204 463 243 454 224 567 619 179 301 120 215 140 297  69 162 325 137 430 190 377 551 563 280 426 289
 252 601 119 613  62 536 472 180 352  85 406 586  90 174 114  52 159 495  26 564 596  95 549 305 342
 155 540 523 370  87 580 505 611 134  38 169 506 178 158  40  21 397 597  28 497 427 615  77 409 163
 166 577 135 460 569 531 327 500 330  60  83 418 121  98  65 160 458 468  84 522 244 617 621  35 176
 233 435  19 501  42 456 602 474 332  15 115 467 618 194  59 192  71 513  39 578 490 566 164 526 124
 594 156  97 191  29 600 542 590  67  93  24 512 538 186  68 167 129 491  66 608 503 554  79 575 366

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.08481e+06us (= 3084.81ms, 3.08481s)
Wall-clock time (full program): 3.13415e+06us (= 3134.15ms, 3.13415s)
Satisfaction error: 0
Number of search iterations: 565
Number of local moves: 426 (including on plateau: 117)
Number of local minimum: 17 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
   9 593  46 585 524 357  47 301 163 592 574 486  43  16  33 515 161 217 469 566 397 531 579   4  17
 530  91 497   5 581 589 274 598 402 575 337  22   3  48  36 594  30 591 512  26 265 548 597  20  54
 551 508  85 550 298   8 155  35 433 576 561 428  88 233  93 549  57 244 510 464  10 556 259 498  76
 543 568 523  37 372 121  63 208 443 494 392  29  55  28 148 528  81 534 483 477 135 328 588 539 108
 134 558 488 536   6  32 462 601 482 511 540  42  40  39  62 489  75 327  92 596  61 525 547 478 102
 138 456 350 475 492 133  60 472 449 435 480 393 417 235  80 105 197 382 405  95 101 349 503 386 237
 246 481 533 502  83 419 117 378 377 507 381  82 431 389 122 285 421 115   2 293 107 538 440 465 111
 403 582 375 376  65  56 269 183 416 396 499 303 453 220 236 286 460  49 120 580 466 106 448 322 156
 309 485 541 373 430 116 452 415   1 427 467 408 344  27  23 445 458 112 401 493 118  18 325 450 187
 154 358 457 471 114 151 454   7 323 250 422 437 463 130 248 280 371 400 379 364 404 264 339 380 204
 315 343 516 290 537 144 441 399  53 300 347 313 332 432 299 284 297 113 302 283 318 224 345 330 268
 383 577 519  68 206 413 434 341 418 279 281  78 423 158 266 429 243 152 103 270 387 369 354 444 230
 232 289 316 307 599 305 185 277 255 335 353 346 254 317 362 370 424 261  70 366 312 361 288 257 384
 245 359 338 340 267 296 521 314 505 184 342 191 271 351 409 127 182 249 367 198 275 470 234 438 352
 573 193 294 181 586 169 160 385 242 212 611 282 178 595 518 202 304 278 368 407 226 125 171 231 334
 256 213 229 398 439 218 225 221 247 569 308 194 567 495 336 535 173 552  97 326 172 287 145 168 455
 188 252 292 311 222 425 348 273 251 451  66 388 310 200 514 331 365 570 476 374 211 203 214 227 363
 164 166 356 201 487 157 291 605 238 223 142 319 140 324 578 165 262 590 216 329 500 199 205 360 608
 260 241 137 209  84 609 474 560 306 176 207 129 210 554 571 126 607 240 615 139 517 177 132 150 395
 239 215 167 180  94 618 219 175 506  44 110 509 179 544 559 228 128 447 553 614 263 391 253 196 394
 557 189 124 190 572 426 529 159 522  71  87 513 412 461 333  79 555 153 276 146 479 258  98  34 602
 272  21  12 410  86 600  99 295  69  45 136 149 612 564 532 192 542 186 473  89 526 604  73 617 621
 100  24 584 131  96 527 587 162  64 104  25 562 545 406 420  59 411 436 355  41 620 147 623 174 622
 414  50  31  74 442 546 468 141  77  58  67 616 490 446 484 603 520 123 109 119 496 195  14 619 624
 610  13  15 625 143 390 491 320 583  11  90 606 565 613 563  19 501 504  72 170 459  52  51  38 321

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00507e+07us (= 10050.7ms, 10.0507s)
Satisfaction error: 2
Number of search iterations: 2814
Number of local moves: 947 (including on plateau: 451)
Number of local minimum: 205 (including on plateau: 57)
Number of resets: 1
Number of restarts: 0

Problem in row 10: 154 358 457 471 114 151 454 7 323 250 422 437 463 130 248 280 371 400 379 364 404 264 339 380 204 => the sum is 7824 rather than 7825
Problem in row 24: 414 50 31 74 442 546 468 141 77 58 67 616 490 446 484 603 520 123 109 119 496 195 14 619 624 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 623 194 382 102 573 597 595 174  89  83 139 567   3 596 508 135 446 359 551 204 606  35 163  79  22
   8   6  90 223 517 548 523 148  16  98 107 588 510 607 505 465 533  54  23 574 525  72 490   2 593
 598 440   4 114 528 557 582 151  84   5  44 589 484 325 611  65 568 142  43 527 564  27  36 161 576
 512  51 305 337 498 129 511  42 294  21  52 608 526 491 420  69 536  12  26 570  15 336 572 425 467
 461  99 343  92  14 482  76  31 502 146 156 489 375 535 616  45 222 506  30 545 470 154 507 485 444
 540 322  71   7 212  13 451 100 323 347  91 416 381 488 477 205 575 338 503  38 522 192 414 401 398
 520 265 369 385 203 453  19  93 546  97   1 464 544 531 406 413 438 103  49 452 518  63 339 479  75
 400  87  86 389  32 283 430  24 441 538  48 566 408 466 419 499 330 120  10 455 318 116 387 432 541
 454 478 225 159 147 486 496 314 364  46 184 412  11 579 386 380 271 524 353 355 492 209 179 312   9
  50 435 166 177 399 374  28 331 367 423 307 239 469 383 436 144 296 357 335 384 483 342 431 449  20
 275 371 230 391 149 319 308 255 279 390 366 329 476 287 344 405 360 346 429 404 310 104 388 293  17
 327 471 428 231 110 368 207 317 351 298 407 303 424 350 321 379 241 403  18 301 272 118 341 402 437
 445 267 306 354 427 257 256 309 183 315 378 302 299 282 202 218 173 372 396 333 295 284 468 393 311
 160 236 409 422 334 196 292 434 316 443 358 410 210 289 266 253 198 281 361 244 228 373 324 370 418
 348 395 459 349 345 332 270 463 123 278 246 143 320 224 417 208 392 340 261 201 176 460 587 248 240
 273 188 433 457 326 304 291 356 264 577 258 262 263 260 421 500 487 237 158 171 238 529 180 140 252
 243 619 456 251 415 245 300 362 211 191 513 229  82 288 111 552 585 600 290 277 189 426  37 216 137
 133 112 584 247 286 280 220 352 113 170 534 199 578 119 274 555 250 581 153 215 214 493  62 592 509
 276 235 475 394 604 157 603 530 128 121 377 175 328 254  64 130  85 553 625 178 313 602 127 259 232
  66 615 187 219 165 599 125 504 186 495 447  34 234  56 122 558 206 268 565 617  88 547 168 233 521
 131  94 612 481 365 242  80 605 591 586 621  55 297  41 197 217 181 172 543 195 115 562 145 141 556
 213 190 134 472 442 497 169 550 249 561 542 182 185  60  58 117 136 363 473 193 108 164 580 618 569
  68 571 411 516 162  53 397 376 590 480 620 105 132 138  61 539  67 563 613 124 200 560 285  39 155
  77 474 439 462 532  25  95 554 614 494 514  33  59 106  74 226  96  81 559 167 519 448 537 583  57
 624 610 221 594  40  29 501 450 601 622 515 126 227  70 109 549 152 150 458 101  47 609  78  73 269

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0003e+07us (= 10003ms, 10.003s)
Wall-clock time (full program): 1.00519e+07us (= 10051.9ms, 10.0519s)
Satisfaction error: 2
Number of search iterations: 3024
Number of local moves: 976 (including on plateau: 321)
Number of local minimum: 282 (including on plateau: 52)
Number of resets: 2
Number of restarts: 0

Problem in column 16: 135 465 65 69 45 205 413 499 380 144 405 379 218 253 208 500 552 555 130 558 217 117 539 226 549 => the sum is 7826 rather than 7825
Problem in column 17: 446 533 568 536 222 575 438 330 271 296 360 241 173 198 392 487 585 250 85 206 181 136 67 96 152 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 437 570  51  53  22 542 574  99  82  65 187 373 599 515  15  19 569 307 523 538  54 536 421 150 524
 158  47 404 248  26 388 527 229 370  61 578 600 568 541 100 215 425 491 203  69 440   4 489  73 571
 223 566   2 596  60 537 213 550 204 149 505 447 475 490  21 169 502 544  74 464 379 519  14  79  43
 207  59 545 461  78  30 297 251 465 222 127 582 575 458  70 595 597 288  24  95 623  27 498 116 535
 487  33 186 602   8 481  20 463   7 479 419 413 450 472 478 428 513 452 175 129  17  32 549  44 488
 200 503 496  40 220  50 354 181 411  46 483 383 539 512 199 125 253 500  42  66 506 482 556 148 530
  37 407 514 451 418 124  36 400 401 325 105 468 439 417 409  29  87 415 510 470 525  41 562 152  83
 302 429 493 132 403 467 389  10  13  97  28 455 396 433 386 339 375  12 332 423 345 449 471 170 476
  11 361 367 380 408 410 262 473   5 155 526 285 422 494 381 137   3 289   6 446 402 492 441 277 392
 168 454 326 462 430 366 184   9 436  16  18 146 296 350 397   1 485 484 443 271 528 312 459 336 448
 241 348 340 504 308 315  94 331 420 265 246 405 338 287 239 108 385 279 341 431 243 256 406 177 518
 329 384 368 416 378 427 111 393 438 335 196 301 382 337 282 202 322 294 330 276 292 270 300  63 399
 343 266 303 321 347 344 342 362 412 226 209 316 356 295 281 313 314 317 274 272 349 284 225 434 320
 263 293 247 374 235 304 363 319 346 166 355 618 237 221 394 217 230 197 353 327 359 291 249 477 390
 426 143 171 211 218 242 619 250 228 283 311 377 180 592 499 435 625 194  34 201 580 254 216 324 212
 334 352 306 147 273 236 583 267 351 414 309  67 260 172 233 608 268 365 298 232 621 112 275 511 231
 178 305 299 206 358 189 594 136 387 445 290 286 280 192 252 547 553 558 245 259 195 328 139 460 144
 579 198 174 244 593 357 264 555 134 183 165  68 214 110 577 156 164 616 466 255 557 516 240 323 117
 533 123 587 179 161 193 278 561 138 548 398 589 227 210 109 581 238 118 614 188 163 234 153 333 369
 620 360 258 162 151 495 456 576 607 573 610  72  90 190 208 469 101 159 122 509 114 126  92 560 145
 520 115 529 546 442 182 391 522 572 622 130 176 135  76 107 474 395  85  88 554 224  93 185 534 128
 371 191 119 364 605 531 261  75 480 563 376 121 113 219 501 598 167  91 584  84  80 613  86 543  89
  98  77 552 612 601  52  96 372 507 604 257  38  71 104 615 157  45 588 586 564 141 432 173 444  39
 154 624 140  58 565 508 453 310 269 559 540 106 102  35 551 585 160  62 591 205  57 532  23 611  25
 606 617  48  56 517  55  64 131 142 424 457 133  81 103 521 318  49 120 567 497  31 590 603 486 609

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.61e+06us (= 4610ms, 4.61s)
Wall-clock time (full program): 4.65828e+06us (= 4658.28ms, 4.65828s)
Satisfaction error: 0
Number of search iterations: 926
Number of local moves: 607 (including on plateau: 228)
Number of local minimum: 37 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 530  70 220  72  15   8 486   6 550  53 521 557 534 103 602  81 598 192 614 170 589  37 591  14 612
   7  28 114 472  12 501  56  16 215 300 117 596 490  52 584 552 618 543 135 309 540  43 541 404 580
 610 507 608 431  17 549 122 102 187  82  35 594 514  79 505 120 171 547 400 475  36  98   3 568 464
 533 485  34  76  60  19 123   5  22 125 234 595 503 468 538 113 525 482  59 603 577  11 604 569 462
 492 524 112 405 554 600 216  18  27 445  50 566 535  21 556 186 197 476  83 393   4 150 301 467 447
 519 402  91 290   9  10 497 424 109 502 423 542 487 134 458  68 190 172 529  29 509  64 427 457 483
 416 420 132 432 384 385 328 291  39 460 500 440 410 373 459 363 130 465  20  33 403 263  55 406 218
 510 368 160 274 155 426  38 520  51  54 399 369 473 335 390 314 387 444 145 372 480  23 230 478 430
 435 422 455 299 200 504 177 463   1 484 522 374 398 407 437 489  13 221  31 302 536  46  87 361 161
 366 343 418 317 358 375 176 332 154  69 303 544 379 456 198 357 137 425 169   2 367 392 409 391 388
 277 414 421 306 395 199 139 331 344 365 371 452 413 345 105 330 321 364 138 354 305 419 260 350 107
 296 219 355 415 352 428 189 380 362 232 342 307 325 396 381 382 262 278 412 316 313 293  58 244 288
 356 312 360 433 252 242 269 397 248 254 333 370 267 268 347 304 442 311 265 233 279 326 349 225 383
 251 605 319 434 329 204 386 275 348 401 213 327 341 292 157 237 353 287 214 310 537 338 222 238 207
 298 246 261 567 491 294 496 323 255 297 334 259 257 286 231 272 178 308 289 285 284 585 236 270 223
 179 245 588 227 253 322 315 281 558 545 185  90 205 184 241 229 575 264 488 250 243 324 411 180 443
 168 226 141 188 283 195 548 163 563 156 136 196 146 337 318 276 625 271 623 593 273 256 359 258 527
 159 152 474 201 280 210 320 606 438 193 240 206 266 539 106 212 466 622 471 164  78 532 553 162 175
 295 202 511 167 559 124 228 203 181 182 247  88 209 560 144 224 582  99 578 620 493 498 454 129 249
 127 174 376 611 562 516 494 208 546 116 217  41 166 523  93 173  47 142 564 481 515 561 126 211 235
 131 148 513 451 446 499 526 151 528 599 239 101 133 570 121 613 479 143 429  84  49 448 147 128 149
  86 194 461 441 191 518 351 579 615 346 108  45 183 417 104 565  25 616 115 282  95 617 439  92 340
  75  65  77 165 469 592 573 583 436 581 551 100  96 153  97 508  94  42 389 495 119 574 339 572  80
  85 453 506  62 590  32 394 597 517 377 586  40  24 470 587 408  74  67 110 512 140 477 576  30 111
 624 601 118  89 609  73 378 571 531 607 619  26  71  57  66 449 336  44 555 158  61 450  48 621  63

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00498e+07us (= 10049.8ms, 10.0498s)
Satisfaction error: 2
Number of search iterations: 2953
Number of local moves: 1012 (including on plateau: 497)
Number of local minimum: 266 (including on plateau: 71)
Number of resets: 2
Number of restarts: 0

Problem in row 3: 610 507 608 431 17 549 122 102 187 82 35 594 514 79 505 120 171 547 400 475 36 98 3 568 464 => the sum is 7824 rather than 7825
Problem in row 19: 295 202 511 167 559 124 228 203 181 182 247 88 209 560 144 224 582 99 578 620 493 498 454 129 249 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 457  19  72 172 569 437 578 533 155 243  33 284 449  20  63  23  17 573 178 426 575 620 150 599 580
 603 374 523  87 526 614  50 593  18 579 112 412 335  73  52 274  47 487 140 121 414 199 600 454 138
 581 211 462  43  35 617 565 513  58 435 314 338 480  62 107  36  75 142 434  27 550 601 585 512  42
 193 372  69 524 109 606  67 616  76 520 419 291 559 209  25 188  22 561 410 226 470 102 609 567  15
 141 173 160 103 500 227  30 592 157 547 464 543 235  55 557 181 120 477 408 273 587 145 618 466  66
 200  56 376 610 619 494 268 143  64  37 551 432 621 151 214 115  78 164 220 472 366 126 608 451 390
 576 180 245  70 179 187 534 114 132 393 475 415 213 218 233 224 257 548 624 177 496 184 499 498 154
 196 163 219 554 582 329 244 168 540 596 308 166 190 169 176 149 275 571 255 413 471 135 589  89 278
  28 388 222 119 545 264 328 428 539 111 331 136 417 206 229 378 598 431 572 194  34 445 356 230 296
 317 221 203 625 174 171 358 333 153 375 267 604 529 279 339 253 133 392 246 146 473 162 381 343 348
   8 310 324  99 430 197 309 350 228 217 622 280 239 316 292 304 404 416  44 256 560 259 444 517 400
 208 340 286 611 302 386 337 277 325 158 282 258 231 247 320 583 327  45 315 373 212 237 380 346 439
  90 394  86 322 311 385 341 240 597 353 336 397  83 201 272 205 570 266 363 365 293 509 234 371 241
  51 476 312 330 384 298 396 113 391 198 323 191 427 613 438 281 411 225 265 131 185 502 223 478 183
 361 354 300 269  96 294 420 297 441 456 248 215 369 260 402 261 148  84 326 484 307 595 100 359 379
 418 344 453 401 283 360 305 491 465  14 156  65 303 461 288  24 367 342 423 306 276 474 202 368 236
 482 370 495 514 349 192 159 422 450 568  11  53 139 313 488 108 424 144 263 377  91 486 591 262  74
 458 501 383 442 406 334 425 395 318  21  88 167  46 489 460 399 574  61 127 436  85 481 152  94 483
 175 403 467   2 355 216   1 352 289  81 421 505  38 493 541 508 409 429 251 522 170 525 106  59 507
 440 479 566 345 299 129 398 134 332 238 455 287 165 446 492 535 537 123  93   9  49 504 118 125 527
 516  32 530 357   5  92 117 485 387 210 447  10 182 433 563 518 130 490 463 510 364 301  12 128 542
 558 506 250 147 271 555 448   3 362 452  41 319 497 468  16 528 511 536 577 161  77  54  26  80 382
 270 562 290 285 295 110 519  31 556 186 351 607 116 546 602 552 207 189 564 321  40  71   4  82 469
  39  48 503 405 195  79 531  98 538 232 249 407 615 544 588 586 594 122  60 584  57  13 101 105 532
 459 549  29 389   6 252  97 104 254 605 521 443 347 553  68 612 590   7 204 515 623  95 137 242 124

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00039e+07us (= 10003.9ms, 10.0039s)
Wall-clock time (full program): 1.00526e+07us (= 10052.6ms, 10.0526s)
Satisfaction error: 2
Number of search iterations: 2823
Number of local moves: 867 (including on plateau: 419)
Number of local minimum: 237 (including on plateau: 40)
Number of resets: 2
Number of restarts: 0

Problem in row 6: 200 56 376 610 619 494 268 143 64 37 551 432 621 151 214 115 78 164 220 472 366 126 608 451 390 => the sum is 7826 rather than 7825
Problem in row 21: 516 32 530 357 5 92 117 485 387 210 447 10 182 433 563 518 130 490 463 510 364 301 12 128 542 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 618 125 572 595 619 378 152 420 200 559  83 128 114 115 162 516 476  53  54 617 582  98  48  57 484
 230 501 606 624 305 573 507 602 600  41 184 140 623 578 102  58  60  33 435 596  87  89  77  86  88
 133 315 610 365 500 213 487 386 453 103  92 134 110 422 439 124 138  95 237 376 609 474 575 292 143
 199  65 611 616 486 141  39 589 562 448 419  80 348 175 621  66 471  78  56 456  73 236 142 540 308
 148 489 565 458 538 521   6   4 372 385 139  42  72 234 225 232 150 149 587 465 625 215 548 467 189
  69 352 440 454 415 576 615   9 105 607  93  63 531   2 475 144 179   3 584 411 211   8 519 452 508
  84 462 470 155 426 171 167 262 598 303 207 382 145 221 364 351 222 191 622 590 172 251 279 529 201
 151 593 157 272 216 253 112 604 431 349 260 158 286 341 194 101 428 568 546 460 229 182 242 405 287
 186 326 319 492 314 146 586 212 196 159 163 285 330 166 164 370 613 389 127 220 276 591 414 534 247
 261 567 533  12 479 296 178 210 545 288 444 280 340 187 209 278 170 173 241 443 281 255 547 499 109
 256 563 310  94 188 223 327 334 387 320 205 218 238 483 570 309 246 407 180 554 265 283 263 257 345
 336 239 430 312 231 304 270  16 332 325 248 408 282 299 249 268 356 557 193 530 277 197 289 608 269
  71 259 267 317 392 399 240 442 311 293 219 224 266 496 118 342 355 350 421 339 318 250 367 214 555
 322 360  59 271 324 379 353 363 541 498 301 176 206 227 446 300 323 258 409 208 243 434 357 121 346
 331 329  31 482 275 328 388 450 359 337  43  85 284 517 298 362 129 290 391 273 307 228 418 302 588
 384  96 195 344 306 338 451 380 217 190 347 371 403 264 561  21 585 438 321 295 423 375 377  44  99
 612 147 204 574 369  25 374 457 177 441 122 396  62  35 464 156 373 447 412 226 254 390 449 154 505
 526  74 106  46 153  18 354  55  82 490 502 518 416 459 436 425 556 181 413  28 445 524  49 488 481
 485  91 233 316  97 511 313 137 558 394 543 472 429 433 192 397  75 463 126  37 564 185 108 198 468
 549 343 165 245 203 402 404 361 398  24 477 504  68 131 113 580 525 491   1  22  70 497 532 169 551
 478 168  19  26 135  36 552 461 202  64 513 493 506 560 366 510  38 537  51 368 417 520 427 358  20
 542 410 544 136  67   7 509 107  50 432 601 550 583 528 120 594  61 244 503  90 571  13  76 455  32
 274 597 335 473 183 566 291 437  15 539 401 603 553 406 381 130 252 514 174  81  47 466  45  52  10
 469 119  14 123 577 527 116 522 117 132 614 579 333  11 161 599 620 523 160 100  79 495 294  29 512
 111 235  30  23  27 494  34   5  17 104 605 536 297 535 395 592 424 393 581  40 400 569 383 515 480

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.26415e+06us (= 8264.15ms, 8.26415s)
Wall-clock time (full program): 8.31324e+06us (= 8313.24ms, 8.31324s)
Satisfaction error: 0
Number of search iterations: 2065
Number of local moves: 793 (including on plateau: 278)
Number of local minimum: 167 (including on plateau: 38)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  20 119 563 106 103 551 165 589 364  32 433 455 538 429  58 118 523  18  68  33 607 369 358 591 615
 514 557  51 545 624  46  16 604  88  30 439 403 571 510 223  79 467 567 105 228 255 248 541  29  85
 609 622 620 117 180  41  89 464 115  37 555 447 436 475 329  87 597 602  82 138 363 142 595  22  61
 517 621  55 297 542 139  84 509 108 140 601 610 559  52 111  69 544 472 390 148  50 334 474 170 229
 483 187 132  54 413 535 531 376 135 157 596 614 527 212 112 287 480 520 124  90 574 151 190 178 167
 532  98 129 188 192 594  12 528 161 126 612 618 211 549 238 203 501 471 184 619 113 606  81  57 202
 616 230 294 160 104 279  86 490 185 194 625 552 405 477 146 182 468 466 600 163 107 177 128 598  93
 309 530  99 121 554 221 197 617 207 237 453 314 257 560 222 110 458 543  74 271  70 516 546 166 173
 478 196  56 109 200 227 276 498 603 256 286 158 534 344 613 321 623 521 156 171  97 575 218 159 150
 444 319  76 258 558 176  72 349 220 611 261 233 224 593 310 608 432 130 201 226 169 599 289 293 174
 548 214 553 315 122 204 225 239 232 585 504 259 155 588 270 331 306 246 327 350 307 231 288 217 209
 267 251 241 301 260 243 338 216 383 275 236 266 303 206 172 345 417 339 325 304 335 592 380 420 410
 254 305 395 265 332 503 263 284 377 295 235 353 352 247 234 391 300 326 205 366 357 285 360 219 322
 346 283 253  95 213 179 476 280 424 341 323 351 392 199 370 291 282 281 415 343 245 354 401 371 317
 268 488 409 394 274 356 454 375 378 298 141 362 397  43  60 379 250  36 434 508 359  13 249 502 398
 365 302 419 448 361 273 328 412 393  35 262 441 414 388 318  42 269 373 320 215  63 324 443 277 340
  73 290 355 399 162 387 427  64  26 402 404 374 462  67 486 372 191 426 473 389  62 400 337 367 430
 186 446 482 465 183 308 568   8 579 463  94 123 244  38 347 431  92  47 460 469 452 342  71 442 485
 292 242 386 497 382 313 506  19 423 499 193  80 408 333 418 336 143 479  53 422 435 348  96 368 154
  77 381 406 489 145 495 264   1 481 505 127  21  23 407 438 416 189 312 512 316 134 195 451 484 556
  65 494 411 540  11 457 445 175 515 525  48   6  27 136 569 330  15 210 584 449 511 198   4 539 561
 181  83 425  25 565 500 507 153 164 437 116  91 133 149 573 518  34 385 570 470 526 311  28 299 582
  40 487  14 578 168  10 456 278 586 547   3 491 144 272  59 550  17   2 524 536 529  49 396 513 576
 100   5 580 566 572 492 581 252 114 590 131  66  78 450 562 533 102  44 120  24 583 428 461   7 384
 240  75 421 493 605 296 459  45 564 208 147 137  31 101 587 496 125   9 519 577 522  39 440 537 152

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00504e+07us (= 10050.4ms, 10.0504s)
Satisfaction error: 2
Number of search iterations: 2625
Number of local moves: 847 (including on plateau: 369)
Number of local minimum: 200 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

Problem in column 1: 20 514 609 517 483 532 616 309 478 444 548 267 254 346 268 365 73 186 292 77 65 181 40 100 240 => the sum is 7824 rather than 7825
Problem in column 22: 369 248 142 334 151 606 177 516 575 599 231 592 285 354 13 324 400 342 348 195 198 311 49 428 39 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 253 464  22 566  98 549 122  78 526 150 163 596 552  30 217 577   5 125 129 209 594 532 175 606 487
 523  89 507 121 569 554 544 182 576 157  79 515 598 147 170  59   6 211 529 586  42 498  11 455  97
 518 269 538  17 195  99  48 539 165 550  50 584 527 506 292  40 240  26 509 516 581  15   2 551 448
  35 508 140   8 604 580 133 513 130 548 159 543 512  18 100 561   4 107 570 483 567 258 136 137 471
 491  72 530 106  12 510 233 190 188 485  20 504 572 578 446 524  16  82 531 481 556  19 117 431 131
 545 118 467 433 395  45 126 397  32 462 143 463 457 511 484 450  14 405 437  24 414 199  13 355 436
 391 493 547 474 541 146  25 478 210 432  90 505 445  52  64 517 411 164 289 158 407 345 111 520  10
 335 134 453 499 416 461 228  44  63 465 376 394 246 490 380 519  49   9 384  91 425 421 413 444  86
 401 171 430 503 400 101 206 354   3 427 381 422 274 472 360 404   1 103 451 108 393 372 213 502 373
 489 357 418 408 442 388 219 313  60  33 319  23 390 402 327  27 375 113 320 374 428 365 383 496 356
 323 339 290 338 346 456 261 300  84 409 347 359 203 495  46 366 276 249 386 293 306 267 350 396 340
 378 358 283 344 382 251 387 278 334 415 364 326 315 317 252 259 441 264 308 312  21 343 311 245 337
 379 399 406 235 367 248 342 368 275 534 385 244 363 237 353 288 314 234 305 330 231 224 321 200 243
 304 297 352 325 336 227 295 282 318 302 279 298 351 271 309 291 299 424 222 324 458 377 262 362 260
 331 398 230 197 176 369 440 329 494 236 452 242 479 294 265 229 303 419 417 220 194 257 273 301 280
 169 192 284 605 254 460 480 287 497 184 263 202 255 174 270 277 585 371 332 268 167 459 232 225 333
 601 205 307 151 208 449 438 625 348 119 149 250 473 247 492 154 540 525 322 185 221 226 218 193 179
 189 216 286 172 215 266 611 593 389 316 110 181 212 196 201 241 563 256  93 562 183 536 429 207 602
  87 173 281 115 272 420 412 187 555  92 488 617 296 214 587 120 239 614 583 361 153 145 501 152 161
  38 537  62 180 160 571 573 191 310 127 341 148  76 162 564 186 469 522 168 591 621 560 477  36 155
 557 447 144 141 619 177 123  85 521 166 589 178  68 533 142 370 588 500 204 156 597 112 600  94 114
 132 403 139 574  61 109 328  47 565 623 514  70  54  80  71 608 486 595 128 470  58 616 599  29 466
 138 528 582 603  81 198  96 423 285 475 612  56  43 624 434 102 468 592  51  73 105  55 553 238 410
  83 223  39 615 609  75 620 124 443  41 542  74   7 426 392 590 558 439 104  37  69  65 546 622 482
 135 435  88  95  67 116 535 618 454  77 610  31  57 349 607  66 575 476  53 613  34 559 579  28 568

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.62697e+06us (= 4626.97ms, 4.62697s)
Wall-clock time (full program): 4.67496e+06us (= 4674.96ms, 4.67496s)
Satisfaction error: 0
Number of search iterations: 1356
Number of local moves: 580 (including on plateau: 168)
Number of local minimum: 106 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 537 120  26   3 236 105 612 548 147 569 534 417 564 572 175 503  70 605 198  74 466  30 108 567  39
  13 553 244 103   6 426 477 562 157 544 557 295 600 577  49 561 584 614  61 190 153  22 130 343   4
  80 501 509  56 280 117 470 550  31 505 593 580   5 449  32 543 412 468  71 171 528  94 100 223 457
 112 520  54 608  15 158 587  14 538 601 496 220 287 579   2 514 551 488  85 142 443 106 135  16 554
  52  47 472 526  24  95 493 530 447 188 547 452 546 384 214 404 532 475 114  20  21 539 141 160 402
  65  29 525 535 241 268 389 115 277 406 523  89  41 476 174 491 508 444 111 519 101 405 335 192 566
  86 430 380  87 232 329 481 390 436 340 499 200 282 531 284 399 379 474   1  78 502 345 408  36 216
 338 462 369 410 441 107 471  45 527 372 565 169 133 378 374 382 397  25   8 159 260 450 438  35 510
 355 253 342 351 368 442 556 381 435 437 337  46  23 432 118 308  55 400 454 128 388 376 148 237 455
 134 377 411 255 349 301 331 424 453 517 460 215 185 480  66  28 353 423 422 311 350   7 485  48 440
 187 328 439 484 360 262 312 347 448 291 222  43  11 322 305 235 341 392 428 271 416 375 414 358 234
 334 365 371 419 456  18 259 391 407 370 357  27 315 127 339 409 425 373 361 275 123 299 303 289 413
 478 394 145 316 270 326 242 245 366 321 325 298 208 296 233 624 352 229 193 359 486 248 306 319 246
 346 251 176 227 211 581 310 172 238 294 354 573 558 283 324 323 217 348 367 256 285 297 144 451 239
 269 336 363 201 179 218 364 318 497 309 302 473 549 292 162 278 109 209 314 333 603 257 274 356 261
 205 286 276 168 504 463 330 293 225 591 307 403 495 207 458 313 221 273 545 143 258 167 199 304 191
 156 203 129 194 589 212 178 228 615 186 219 427 511 560 522 387 137 252 266 494  83 344 249 420 264
 588 247 606 290 533 281 240 609 288  17  97 524 279 196 415  79  96 197 431 578 136 210 272 500 116
 619 542 224 104 617 243 149 429 170 181  75 489 396  42 461 125 184 230 195 598 594 320 154 518 166
 620  57  98 146 622 490 213 599  63 250  93 568 383  12 483 231 126 202 586 189  99 575 386 582 152
 446 102 177 267 459 571  76 138 226 131  82 183 506 204 536  92 121  51 516 611 621 555 515 507 132
 434 139  72 563 161 602  77 155  91  19  53 263 498   9 623 300 625 140 467 327  68 576 529 421 613
 541 618 616 401  10 206  62 110 595  73  37 433 119  40 479  44 362  34 592 607 165 122 590 487 482
 445 596 469 552 512 464 113  50  84 254 124 173 180  60 393 164  58 398 465 395 163 521 570  38 583
 385  69 332 559 150 540  33 182  64  59  67 265 151 317 604  88 610  81 574 597 513 585 492 418  90

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00029e+07us (= 10002.9ms, 10.0029s)
Wall-clock time (full program): 1.0052e+07us (= 10052ms, 10.052s)
Satisfaction error: 2
Number of search iterations: 3589
Number of local moves: 1113 (including on plateau: 424)
Number of local minimum: 360 (including on plateau: 48)
Number of resets: 3
Number of restarts: 0

Problem in row 15: 269 336 363 201 179 218 364 318 497 309 302 473 549 292 162 278 109 209 314 333 603 257 274 356 261 => the sum is 7826 rather than 7825
Problem in row 24: 445 596 469 552 512 464 113 50 84 254 124 173 180 60 393 164 58 398 465 395 163 521 570 38 583 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 547 602 606 384 596 545 610 136  55  16  92 157  75  84  58  21 502  40 101 611 396 573  80 399 539
 620 435 478  81 613 425 598 148 452 171 147  53 532 574  48  51 536 429 404  69 107  73 115 579  87
  74 534 503 554  45 616 540 336 476  78 106  46  54 364  93  10 553 569  66 599 481 459 307 152 210
 460 605 567 592 128 580 555 262 621  85 353  59 114 117  71 134 604 125 586  36 167 154  44 622 184
 223 527 495 108 529 116 393 431 221 273 456 162  96 601 209  29 614  61 506 558 600 123  24 237 233
 207 608 182 267 175 244 131 615 127 234 588 191 198 504 341 105 420 531 548 133  86 603 113 570 104
 195 563 170 524 122 130 623 609 174  79 486 139  95 589 120 111 488 166 556 168 266 612 231 499 110
 189 543 387 566 118 165 103 624  67 150 490 272 202 607 169  98 451 176 584 278 200 149 314 617 306
 126 256 523 403 159 160  97 625 595 132 513 172 296 463 343 141 472 325 562 143 155 177 289 483 215
 151 217 203 449 235 355 583 469 229 280 492 201 252 192 206 590 447 335 249 293 129 241 238 585 204
 344 283 348 295 281 230 618 361 240 288 218 380 268 185 257 274 213 276 211 538 317 330 597 181 292
 338 389 216 360 270 305 508 263 301 287 402 310 440 315 428 378 224 145 309 367 228 362 199 239 242
 285 321 284 331 359 340 316 352 332 290 334 373 212 388 291 467 320 354 248 219 161 414 222 304 308
 271 342 382 264 376 265 333 432 302 163 408 313 275  17 327 345 322 328 356 374  22 473 381 397 357
 419 298 379 227 282 259 186 337  47 193 303 391 329 372 401 326 225 407 458 260 426 383  37 482 398
 251 347 427 323 299 294 423 247 409 346 164 318 377 410 521 245  82 246 416 375 497 269 422  99  18
 312 190 371 156 507 465  28 121 358 480  38 453 505 350 370 471  88 444 413 349 500  56 324 137 339
 479  19  31 112 417 518 208  23 430 434 232 385 462 102 454 369 214 366  39 457 572 392 511 178 421
 468 220 351  57 455 406   5  90 461 516  65 443 450 243 363 491  42 522   1 437  32 405 549 311 442
 365  11  83   2 550 493 236 300 415 575  91 439 535 279  25 412  70 411 466  13 424 446 477 197 510
 464 194 470 109 487 438 253 183 561 594  72 544  15  68 542 528 158  26 258 368  14 394 441 124 520
  64  49 180 533  33  89   9 205 475 541 196 418 433 445 551 587 286 489 138 581 576  50 494 153 250
 400 135   4   3  52 297  35 319 436 484 501 530 474 188 512 519 277   8 187 525 390 395 386 254 514
 546  43  41 557 591  30 179  76   7 517 485 498 559 142 560 552 140 509  63  12 515 119 582   6 496
  27  94 144 568 146  60 255 261  34 619 593 578 577 226 565 571  77 537 100  62 564 173 448  20 526

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.1642e+06us (= 3164.2ms, 3.1642s)
Wall-clock time (full program): 3.23627e+06us (= 3236.27ms, 3.23627s)
Satisfaction error: 0
Number of search iterations: 585
Number of local moves: 416 (including on plateau: 132)
Number of local minimum: 18 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 286  81 619 521 166 487 616 151 214 575  23  55 190 184  34  70 545  49   6 566 618  65 567 574 563
  96 577 136 314 456 482 433  64 278 463  27 103 537 518 188  53 194  48  54 555 610  51 582 596 410
 508  97 226 476 122 546 595  76 557 168 133 472 143 275 556 137 206  45 264 443 591  88 611  46 444
  69 550 116 468 157 519 517  78  84 539 364 605 313 529  44 173 602  59 622 562 493  92  50  90 130
 147 125 495 285 612 464 215  67 148 503 105 492 405 212 201  52 462 144 155 409 615 617 543 187 165
  95 159  91 568 623 297 350 446 526 243 389 597 222 505 200  93 586 186 436 620  30  87 160 171 145
 140  85 474 613 284 581 192 293  99 229 317 551 621 419 102 107 609 198 600 438 245 221  58 158 191
 246 113 524 309 412 606 162 320 536 262 424 484 175 342 452 213 219 614 146 457 311  66 131 152 149
 225 369 241 340 218 496 248 251 334 298 268 598 239 608 209 164 573 202 216 357 250 305 259 170 387
 199 276 182 345 210 592 123 624 374 511 490 280 491 291 124 404 290 135 242 488 295 138 240 300 181
 230 500 273 307 274 324 323 244 322 227 195 552 378 625 393 359 289 223 319 415  26 271 331 321 104
 339 142 559 499 287 348 228 232 220 163 312 360 315 326 296 288 256 368 439 396 304 203 477 207 261
 277 236 301 420 330 211 365 265 272 252 403 362 204 421 176 258 402 139 318 356 282 343 358 351 523
  35 372 247 471 281 414 254 458 169 441 346 394  89 341 263 328 425 422 267 235 408 249 353 260 303
 366 363 121 534 379 120 354 347 183 266 294 382 538 269 336 257 117 329 427 185 449 497 344 349  19
 423 270 466 515 316 233 310 253 385 172 177 238 367  83 373 108 196 371 299 231 395 432 333 480 399
 407 292 361  61 520 174 514  82 473 150 413 101  33 224 332 469 161 528 406 179 451 411  32 448 603
 455 338 445  75 470 237 435  22 450 392  98  28 418  47 384 587 126 479 327 234 442 447  72 416 401
 486 437 386   3 100 197  56 355 390 397 381 134 127 112  71 507 308 429 516  41 564 352 535 431 510
 542 376 459  68  63  13 377 428  80 370 465 302  37 153 454 426 502 325 255 189  94 522 375 461 489
 440 548 501   4  43 208 553 467 417 485 475 337 119 109 506 494  79 483 129  38 118 604 279 380   9
 561 540 571   8 558  42  77 572 283 154 205 193 128  73 541 579 110 527  12  60  20 512 530 578 391
 585 460  10 106 388  36 478 547 453  25 434  62 569 398 509 531 383 335 481 167 156  86  39 570  17
 554  15   5 513 525  57  21 599 178 533 498  11 607 217 549 580  74 593 306 180  18 576   1  14 601
 114 504  16   2  31 141  29 584 400   7 589 132 560 544 532 588 111 594 583  24  40 590 565 115 430

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.61954e+06us (= 5619.54ms, 5.61954s)
Wall-clock time (full program): 5.66885e+06us (= 5668.85ms, 5.66885s)
Satisfaction error: 0
Number of search iterations: 1327
Number of local moves: 649 (including on plateau: 244)
Number of local minimum: 77 (including on plateau: 36)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  29 311 610 435 489 132  21 464 520 588 570 118  10 135  53  71 582 265 398 232 528 554 392 201 117
 217 368 565 237 595 296 248 416 539  18 191 131 584 269 529 108 494 606 429 531  36 151  30 127 110
 142 369  14 395 592 178   3 591 524 414 493 622 505  64   5 454 525 228  81  15 621 611 241  87  51
 527 100 516 509 594  19 148 536  75 576 299 130 543 272 105   9 188 484 147 447 182 379 556  24 460
 549 218 564   1 552 114 481 596  55 559 125  28 461  98 236 423 308  41 561 530   4 434  40 349 498
 450 259 350 499 439  49  78 541 603 338 171 497 546 304  34 106 560 134 318  91 534 356 128 244 196
 113  44 482 343  45 453 328 598 337 538  20 380 327 155 526  74 492   6  88 418 466 501 271 362 458
 542 283 377  43 415 263 504 425  16 213 300 294 470 361 472  22 444 383 455 456 286 445 152 101 103
 322 180 462  72 119 446 550 123 419 407 515 336 480 220 287 167  37 385 341 465 161 410 202  95 624
 436  61  67 310 129  83 491 317 399 347  66 421 359 475 422 496 437 149 488 282 340 388 210 243 409
 325  12 443 288 319 623 250 463 316 203   2 278 277 360 382 354 427  35 615 262 532 547 168 276  68
 396 321 378 291 486 586 121 239 238 330 264   7 535 363 284 376 393 364 267 205 442 245  47 301 346
 280 367 387 339 370 332 397 240 295 352 403 315 355 351 256  17 249 533 305 279 141 314 333 309 306
 303 298 246 215 353 389 452 120 372 381 345 616 227 206 258 404  93 254  76 257 375 357 391 432 405
 140 579 348 474 268 224 289 176 394 281 441 204 173 329 223 313 449 358 402 344  52 255 386 448 275
 165  32 157 184 483 411 209 312 200 605 433 618 195 485 229 617 290  50 297 225 207 211 424 366 420
 408 557 197 230 175 190 253 222 251  59 518 126 242 365 266 154 604 613 261 587 235 208 413 506 185
 199 537 614 233 247 551 459   8  77 293 600 162  85 502 334 115 231 589 221 216 193 111 374 601 273
 179 513 156 212 153 139 104 371 558 192 342 169 507 567  46 170  23 521 234 569 122 401 575 390 612
 107 417 174 571 109 563 581 324 136  70  86 469 150  60 219 478  57 510 514 426 172 189 457 467 519
 292 260  99 473 508 544  65  42 568  26 166 181 577 468 545 540 143 226 320  54 599 512 307 194 116
 620 451 133 384 144  38 471 187 400  84 590 487  89 511 578 574 138 495 477  94 146  58 373 145 158
 137 323 440 566  96 164 177 285 214 302 270 625  39 562 608 619  82 431  80  92 438  25 252 476 522
 517 412  33 186  48 548 572 198 160  56 503 428  62  69 331 609 500 102 124 163 406  90 523 602 583
 430 553  13 335  97 490 573  31 159 593 112 183  27 274 597 555  79  63 326 585 607  73 580 479  11

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.96546e+06us (= 8965.46ms, 8.96546s)
Wall-clock time (full program): 9.01371e+06us (= 9013.71ms, 9.01371s)
Satisfaction error: 0
Number of search iterations: 2782
Number of local moves: 840 (including on plateau: 433)
Number of local minimum: 220 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 547 609  24 104 346 454  66 499 495  31 121 527  47 615  97 117  49 330 296 544 100 601  28 608 570
  33 288 458 481 607  77 611  91 616  27  20 592  73 604  68  60 404 505 602 530 455  52 337 144  90
 167 535 613  69 587 612  70 580 386  37  41 579 107 606 126 143 486 584 566  42 558  23 135  94  79
 182 395 449 622 588  30 475 195 349  62 145 563 106 110 105 204 436  53 512 598 118 578 450 413  87
 212 529 446 147 465 164 158 173 142 114 507 551 185 154  61 461 594 120 531 473 410  54 509 434 232
 201 583 585 123 621 112 140 177 343 230 203 103  88  59 178 361 582  57 546 500 600 157 556 421 299
 149 474 438  67 150 270 618 414 160 138 287 359 152  58 193 597 577 113 472 480 187 129 478 586 279
 171 483 520 211 208 210  71 625 137 207 209 216 191 303 174 467 550 614 493 427 134 285 153 564 202
 183 517 476 194 240 217 233 262 442 163 139 161 305 128 246 320 377 496 172 312 397 132 605 489 619
 199 514 267 280 162 215 259 293 175 623 255 198 235 192 271 265 249 251 572 273 624 260 573 440 179
 205 392 290 222 284 301 266 261 225 242 274 362 289 620 593 155 275 244 466 409 596 223 169 294 168
 617 340 213 353 238 374 247 283 408 228 200 306 366 310 248 263 276 326 350 347 351 302 354 272 253
 241 295 394 286 422 365 231 328 111 431 197 385 314 348 319 221 264 282 278 313 339 345 407 304 405
 367 189 411 315 268   5 352 325 257 256 364 333 341 335 415 403 227 298 236 412 322 432 245 336 381
 318 243 300 384 430 309 321 281  96 355 332 316 338 375 317 184  22 291 334 292 360 470 428 342 387
 357 226 424 468 518 344 329 370 464 224 252 390 327 186  29  80 331 420 416 146 297 371 372 234 250
 417 324 165 537 479 487 398 130 136 447 477 382 388 433 441  26 170 401  50 206 393 373  45  10 510
 376  86 108 426 423 542 459   2 528 490 127 456 363 502 536 396  89  51 269 308 102 569 122  95 400
 419 115 125 491  32 521  34 445 188 471 485 448 484 488 380 277  25 451  18 159 237 425 391 190 526
 519   6 148 418 452  11 358 379 435 548 457 307 378 444 239 453 101 429  82 406 214 460 119 151 311
 492  74  19 469   8 508 443 383 571 603 511  15 581 389 533 229  84 402  85  43  38 463 220 156 506
 356  99 176   1  72 522  56 575  48 498 504  14 439 503 525 560 497 109  65 368 462  12 254 567 543
  44  64 555  55 131 590 524 513  36 258 576  98 574   4 599 482 565 554 141 181 116  63 523 540  39
 515 369 218 568  78  40 549  75 516 553 532  81 559  46 541 539 399   7  93  21 323 552 133  17 501
 538  76   3 534  16 545 557 166 561 589 610  83 595  13 591 562 196 437 180  35  92 494 219 124   9

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00006e+07us (= 10000.6ms, 10.0006s)
Wall-clock time (full program): 1.00499e+07us (= 10049.9ms, 10.0499s)
Satisfaction error: 2
Number of search iterations: 3193
Number of local moves: 1160 (including on plateau: 473)
Number of local minimum: 289 (including on plateau: 74)
Number of resets: 2
Number of restarts: 0

Problem in row 5: 212 529 446 147 465 164 158 173 142 114 507 551 185 154 61 461 594 120 531 473 410 54 509 434 232 => the sum is 7826 rather than 7825
Problem in row 10: 199 514 267 280 162 215 259 293 175 623 255 198 235 192 271 265 249 251 572 273 624 260 573 440 179 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 594 161  47 624 622  26  96  14 588 522 572 571  90  56 480  62  78 567 526  22  98 570 615 190  33
  42  25 564 582 599 182 523  43 600 454 598 211 251   2 542 232  82  94 565 503 227 575 121 155  53
 186  58 373 281 476 538 510  83 533 549 532 139 167 115 555 203 154  45  41 569  34 562 581 123 418
 270 539 552  37 516 561 474  92 492 514 507 163  64 176 369 119 244  10 558 573 146   8 192  86 563
 465  17 548 486 106 560 125 273 520 395 331 144  76 128 431 188 439  31 500 471 438 448 427 114 164
 394 420 491  50 446 374 513 389 437 410 536  77  60   3 488 134 193 545 502   9 358 541 191  44 220
 484 392 468 387 457 440 493  68 489 479 554  71   4   5 508   1 415 469  12 467 231 445 286  15 185
 414  38 441 240 519 518 463 189 393 432 419  13 451 442 455  11 407  67 421 359 413 375  70  69 206
 297 470 362 162 385 478 459 487  23 386 311 453 482 350 264  84   6 416 397 400 472 466  21  89 105
 402 506 403 129 226 382 384 444 499  91 260  54 333 218 345 456 343 378 340 425 381 417  40 318  51
 461 342 473 495 411 124 367 321 424 435  49  61 396 360 371 452 100 364 302 426 329 330 102 170 160
 335 337 282 130 305 347 370 408 351 117 348 293 391 181 315 225 237 262 497 309 365 368 322 436 294
 460 344 287 228 323 401 361 265 313 247 291 301 307 279 306 303 150 336 316 255 289 376 377 406 304
 328 180 166 423 245 357 238 223 277 300 319 327 230 591 272 334 398 295 283 122 566 324 353 275 399
 274 601 285 298 278 229 263 258 363 296 271 352 388 197 608 195 338 314 269 266 290 276 256 210 450
 148 312 325 341 235 326 550 198 219 241 603 250 149 292 236 531 243 356 212 584 233 249 204 383 405
 234 147 288 544 151 248 207 194 168 199 280 551 156 494 268 559 620 200 208 259 165 221 587 430 447
 201 184 215 299 267 252 169 504 222 372 355 462 177 593 205 524 187 261 196 257 217 157 574 422 553
 120 209 174 111 143 254 546 308 109 349 284 537 606 521 127 512 535 202 224 172 246  87 320 540 589
 597 101  97 547 135 145 178 216 141 214  80 592 501 585 104 511 490  95  66 623 113 153 481 611 449
 159  19 253 239 557  57 132 428 158 578 133 543 477 509  72 527 515 475  88  65 443  27 429 577 366
 137 617  24 619  39  99 140 609 346  75  20 409 332 568 142 534 339 612  59  81 586 118 528 579 213
 171 614 605 116  30 618  93 610  52   7  46 530 595 458 152 138 434 496 183 107 517  73  48 525 607
  36 602  28 354 242 173  63 621  29 131 110 317 613 126  35 485 498 379 464 483  85 604 310 625 412
 616 590  74 103 112 136 108 580  79  32  16 404 529 576 175 505 380 556 596  18 583  55 390 433 179

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00014e+07us (= 10001.4ms, 10.0014s)
Wall-clock time (full program): 1.00505e+07us (= 10050.5ms, 10.0505s)
Satisfaction error: 2
Number of search iterations: 2661
Number of local moves: 829 (including on plateau: 372)
Number of local minimum: 214 (including on plateau: 40)
Number of resets: 1
Number of restarts: 0

Problem in row 1: 594 161 47 624 622 26 96 14 588 522 572 571 90 56 480 62 78 567 526 22 98 570 615 190 33 => the sum is 7824 rather than 7825
Problem in row 21: 159 19 253 239 557 57 132 428 158 578 133 543 477 509 72 527 515 475 88 65 443 27 429 577 366 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 268 597  92  61 167 516 572 257 530  81 518 540 554 155 216 476 116 272 164 573  36 175 470 405  14
 463 328 599 481 124 537 585  71 520  99 421 263 576 208   8  63 559 570 162  21   7 548 443  97  72
  15  17 591 505  10 461 596 117 512 141 561 467 373  95 149 541  60 568 110 549 226 550   2 600   9
 584 514 532  13  47 497 544 502 562 248 547  20 493  67  22 486 211 543 138 432  19  45 524 160  75
 462 513 460 482   3 448 349  83 453   5 509 351 587  11   1  28 496 546 266 477 288 407 399  58 143
 538 414 515 473 525  12 468 415 487 120 417 529 465  76  86 488 115   6  33  52  69 398 522 133 469
 423 425 397 404 131 435 180 439 478  82 441 183 495 196 119 301 440 589  31 318  65 379 258 136 480
 442 418 556 445 235 134 499  80 335 412 240 101 450 392 315  34 437 457 145 364 321 340 490  46 137
 284 366 261  66 401 385  44 304 377 339 466 308 451 427 348 125 456 433 202 458 121 402 365 325 111
 471 314 455 511 485 191  54  70 431   4 510 106 311 444 368  16 305 416 381 498 262 370 429  40 383
 353 264 294 316 403 129  49 361 291 358 127  29 472 420 375 459 369 527 210 323 259 344 355 388 350
 374 393 273 380 447 356 411 270 362 357 227 230 299 251 198 303 146 395 337 363 252 330 276 271 324
 282 372 419 422 446 254  30 500 231 188 275 269 336 327 322 464 313 297 255 410 298 387 225 345 158
 352 334 232 595 242 289 338 161 287 428 140 343 622 253 171 371 274 384 320 170 506 331 144 329 209
 200 378 241 233 243 260 475 197 290 326 376 539 256 319 222 619 302 151 341 449 347 244 333 234 250
 342 239 367 179 309 192 214 386 293 424 359 592  89 177 346 224 292 205 332  91 390 228 394 580 581
 285 249 193 108 408 201 185 215 307 245 557 574 195 354 130 139 608 204 246 277 501 236 300 545 563
 286 237  32 212 523 194 206 310 281 438 181 430 172 534 565 454  56 621 536 169 382 152 199 436 219
 296 118 165 283 569 207 590 238 189 221 265 295 223 109 625 166 267 174 558 100 605  41 598 306 617
  27 279  74  90  50 312 280 503 220 579 123 406 105 103 535 531 623  94 508 624 389 178  87 519 586
  85  96 159 526 603 426 156 560  88 491 154 128  43 593 528 504 607  98 517 132 360  93 168 553 157
 163 217 190 317 612 614 542 578  42 575  39 173  62 577 606  35 615  38 452 126 552 184 153 176 187
 148  77 601  57 147  59 203 594 107 479 182 489  24 582 521 483  26 122 533 186 409 400 611 278 507
  73 613 104 618  79 566 113 396  84 602 112 213 135 567 494 102 114  64 484 229 551 492  25 391 604
 609  53  23  48 616 150 142 218  68 583  78 247  37 588 555 413  18  51 564 434 610 571  55 474 620

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.52193e+06us (= 4521.93ms, 4.52193s)
Wall-clock time (full program): 4.57126e+06us (= 4571.26ms, 4.57126s)
Satisfaction error: 0
Number of search iterations: 1080
Number of local moves: 603 (including on plateau: 205)
Number of local minimum: 44 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 191 189 179 109 111 589 604 514 458 585 124 411   2 438 525 598  99   8 566 226 445  77 539   7 231
  26 157 138 190 160 208  57  68 316 572 544 620  56 550 581 610 481 489 557 580 120  62  70 595  18
 564  31 256  63 468 502 578 413  19 507 536 563 498 518  16 407 456 112 521 193  88 439  59   6  12
 590  86  27 217 579  17 565   4 574 509 531 483 270 134 279 484 278 186 619  42 107  43 142 510 549
 494 110  93 356 443 517 533  37 491 501 292 374  11 500 547 485  23 126 548  48   5 305 171 472 343
 492 105 415  81 185 562 406 440 493 490 437 470 232 588  52 499 163  60 524 181  51  85 273 520  21
 573  90 103 452  61 298  28 213 463 473 537 462 130 475 382 530 282  53 453 394 149   3 370 459 392
 478  97  32 425 433 486 383 251 371 448 314 560 184  96 216 476  64 404 402 508 156 101 384 419 137
 567 295 436 397 388 418 431 380 465 512 429  20 203 412  80 408 121 201 444 366 151 115 144 396  46
 341 608 367 114 430 464 409 369 526 340 417  25 435 416 116  72  24 354 400 534 183 155 222  76 428
 297 235 100 353 339 395 391 348 403 326 240  40  10 432 378 347 387 324 280 320 393 328 271 337 551
 377 528 424 449 288 180  83 361 247 344 315  35 317 300 319 293 342 262 373 359 355 265 268 291 450
 346 330 421 313 372 352 364 233 331 242 325 327 322 334 360 228 266 362 335 284 252 249 351 283 243
 237 139 296 329 434 398 368 215 308 358 516 220 254 399  45 272 238 294 264 287 302 571 559 236 286
 225 497 275 345 289 259 321 471 336 301 338 303 466 205 310 281 605 122 210 245 178 376 420 136 311
 261 426 455 625 597 255 195 198 162 219 307 545 541 349 241 267 227 274  75 199 200 552 248 177 230
 141 212 577 457  36 511 318 224 381 221  38 197 390 350 568 239 414 299 168 379 601 234 263 153 454
 246 542 258 172 363 204 515 333  30 173 555 188 145  14 269 250 554 410 277 576 496 211 495 127 422
 244 175 290 154 209 170 218 161 174 194 158 596 570 214 505 152 375 164 133 556 513 587 206 569 538
 140 442 257 323 129 609 131 594 165  92 182  91 482 106 451 427 176 584  84 223 469 532 285 575 276
 132 441 488 135 611  66 207 150 480 196  58 389 535 166 309 123 306 546 128 592 446 385 602  74 260
 365 617 618 187  89  47  49 253  13 125  98  44 582 146 553 167 614 506  95 583 487 460 529  71 527
 119 229 612 607 102 118 504 599  39  73 104 304 143 202 169  82 405 540 108  94 522 600 503 586 461
  67 621 117 615 561  41 113 477 558   9  29  79 624 447 467  78 593 622  69  55 543 474 386 147  33
 312 623 591 357 148 159  54 519  22  15 401 479 423  34  87  50 332 523 192   1 613 616  65 603 606

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.64444e+06us (= 8644.44ms, 8.64444s)
Wall-clock time (full program): 8.69349e+06us (= 8693.49ms, 8.69349s)
Satisfaction error: 0
Number of search iterations: 2197
Number of local moves: 888 (including on plateau: 337)
Number of local minimum: 164 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 605 577   9  55 534  61  15 603 598 600 561  34 564  80  35 609  40 615 196  20 571 170 565  41  67
 110  82 560  22 483 546  24 484 530 151 352 551 592  10  19 567  17 491 166 267 588 488  79 545 101
   7 498  66   3 499 555 115 578 210  92 527 574 583 131 544 500 111 501 126 100 477  28 480 508  12
 227  98 473 133 514 248  16 552 575 123 197 520 519 162  91 558 475 543  50   2 579  52  48 568 502
 134  29 536 467 277 486 513 566 535  74 474 470 539  56  90 424  13 230  58 228 596 102  26 442 460
  37 494 453 505 507  14 186 428 563  39 128 511 455  43 517 200 395 440  54   4 429 531   5 461 426
 113 485 122 421 445 425  21  53 528 206 295 597 447 496 466 495 120 521   6  18 381 452 106 443 163
  83 355 446 404 383 161 419   1 533   8 328 457 415 245 399 481 218 559 261 250 104 389  30 478 418
  71 422 450 435 319 215 407 288  11 160 497 340 331 434 326 336  77 386 343 256 314 506 156 349 396
 172 413 224 365 320  65 385 368 309 211 403 402 375 329 504 251 373 377  73 135 487 401 146 317 420
 299 306 350 430 456 193 347 363 243 284  31 423 333 382 345 411  70 270 370 271 334 339 202 410 362
 310 353 259 388 335 258 354 311 348 152 380 237 441 372 263 356 374 234 225 255 338 325 322 361 274
 427 364 107 321 379 240 376 301 359 275 369 390 213 384 344 257 239 367 242 297 300 341 286 360 287
 293 214 272 268 493 346 307 509 276 433 357 387 315 232 238 290 236 304 216 414 269 303 305 247 302
 589 233 337 312 244 155 226 154 165 512 150 282 308 231 235 298 222 323 610 437 265 327 599 330 281
 351 262 188 241 371 313 620 179 223 283 358 278 141 391 318 525 207 266 607 612 139 208 289 260 195
 522 181 143 220 253 492 204 273 581 554 219 412 291 187 205 296 604 183 254 398 342  95 523 184 209
 400 194 280 292 294 462 158 173 190 553 153 118 246 114 138 192 594 548 625 541 180 174 408 175 623
 617 185 451 157 191 476 526 229 203 518 549 103  97 119 117 168 469  69 482 570 164 178 468 124 595
 438 490 465 249 212 622 109 149 136 431 537 198 147 557 547 129 516  23 540 332 140  88 454 189 127
 503 201 316 576  64 252 221 176  47 463 608 137  89 619  38 130 580 169 378 471 542 538 449  87 171
 417 177 532 590  60  62 585  59 432 510  57 121  93 550 582 132 366  49 458 602  86 572 409 199 125
 439 573 593 167 116 324 489 144  68 393  96 145 159 529 584 108 444  33 562 416 112  85 606  27 613
 397  25 148 587  32 285 591 436  78 406 105  63  81 556 601  76 479 142 464 524  46 618 392 621  72
 264 614  45 217  44 569 611 448  84 394  94  75  51 616 279  36 586 182 459 405  42 515 472  99 624

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00504e+07us (= 10050.4ms, 10.0504s)
Satisfaction error: 2
Number of search iterations: 2677
Number of local moves: 928 (including on plateau: 371)
Number of local minimum: 220 (including on plateau: 49)
Number of resets: 1
Number of restarts: 0

Problem in row 11: 299 306 350 430 456 193 347 363 243 284 31 423 333 382 345 411 70 270 370 271 334 339 202 410 362 => the sum is 7824 rather than 7825
Problem in row 14: 293 214 272 268 493 346 307 509 276 433 357 387 315 232 238 290 236 304 216 414 269 303 305 247 302 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 474 597  82 160 573 104 575  98  69 572   6 467   5 508 609 302  13  16 343 553 554 607 498  39   1
  17 307  33  49 454  65 228 468 499 147 129 518 571 604 610 211 294  14  67 557 463 562 473   8 477
 501 561 410 179  56 101 493  37 257 574 472 555  63  58 536  54  38  52 113 530 586 450   7 551 591
   9 500 462  11 595 100 524  77  30 237 108 107  76 510 578 172  62  55 480 547 582 569 504 529 401
 437 512 206 112 279  29 452  22 540 564  92 605  73 542 439 132 124 125 380 140  21 577 471 358 593
 116 567 451 383 527 148 521 497 459 405  10 264   3 486 526   2  32 142  59   4 531 455 447 393 397
  34 387 197  90 395 469 400  84 470 475 230 145 519 552 417 146  78 313  72  93 350 404 549 428 528
 535 386 171  96 429  28 364 213 444 546  25  46 556 600 298 117 130  44 545 326 533 412 464 239 278
 360  79 159 102 566 391 431 457  18 421 390 218 502 359 378 121 168 283 482  15 490 520 416 103 396
 369  91 362 418 363 398 385 411  87 335 256 432 382 426 340 327 196 281 157 341 330 377 394 355  12
 419 339 137 200 161 406 392 310 372 280 403 332 292 402 349 331 162 136 381 272 388 370 399 269 323
 344 277 293 299 389 315 273 189 284 354 263 443 188 144 408 336 266 438 345 430 249 333 304 436 225
 407 318 195 295 422 357 246 342 324 365 375 322 245 368 205 150 243 334 374 434 276 212 265 414 337
 346 247 305 216 361 238 259 379 248 296 376 494 415 232 320 244 568 353 127 240 319 445 190 371 236
 476 288 204 297 253 199 252 221 303 308 446 268 222 433 306 544 456 435 352 282 241 141 321 229 348
 366 613 260 285 214 301 158 300 543 601 151 491 227 231 219 511 453 424 194 254 286 174 187 198 184
 515 169 224 449 373 608 183 177 621 351 220 514 208 309 261 217 290 427 210 441 201  66 338 186 267
 131 178 583 532 384 202 316 152 522 114 619 233 262 105 274 314 503 616 589 119 250 155 329 176 167
 287 181 585 539 215 367 615 612  86 166 550 258 109 154 191 484 478 496 193 192 270 235  40 423  99
 291 106 592 487 149 461 110 492 203 165 525 485 251 126  83 617 413 460 618 579  70 134  19 180 209
 115  94 143 541 356 603 271 517 135  68 614  85 581 325  24 409 599 311 495 223  53 234 622  95 312
 170 506 138 620  88 347 207 523 185 255 505  35 558 128 156 465 598 611 596 164  50 226  43  81 570
  20  41 624 448 118 509  26 606 507 133 481  80 580 173 163 576 513 590 122  36 489  31 289 625  45
 538 328 425 483  48 563  47 175  60  51 440 111 479  23  71 623 560 594  89 565 120  61 182 602 587
 548 153 584 534  57 516  97 466 559  42 139 317 458  27  64 420 588 275 442 488 123  75  74 537 242

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.51641e+06us (= 6516.41ms, 6.51641s)
Wall-clock time (full program): 6.56511e+06us (= 6565.11ms, 6.56511s)
Satisfaction error: 0
Number of search iterations: 1498
Number of local moves: 599 (including on plateau: 261)
Number of local minimum: 117 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 620 168  32 129 504 213  88 609 608  81 548 484 559  92 511  71 305 200 564  38 567 604  89  20 121
 481 621  52 128 605  69  51 503 614 165 601  42 556  49  83  25 613 428 612 189 436 515 180  80 127
 495 459 615 535  60 298 139 470 619 310 474 215 103 625 177  93 346  75 497  58 591  55  59  31 426
 526 540 160 622  98 311 475 536 147 142 473 126 584  57  50 101 181  68 611  84 516 598 134 167 518
 581 159  44  82 580 496 104 194 576 595 541 618 294 112 176 187 169 191 573 153 492  95 130  67 616
 236 537 115 113 402 422  46 542 617 175 543 527 161 137 183  86 413 152 251 606 607 140 596  85 133
  77 560 122  96 549 593 603 172 244  64 370 563 455 202 352 249 190 205 326 283 545 149 234  39 583
 110 155 135 201  53 514 188 462 419 623 587 453 265 257 231 170 124 610 624  76 447 239 114 211 557
 258 572  72 178 145 235 301 164 222 247 592 196 600 420 594 262 582 132 396 321 392 148 241 307 248
 141 439 342 271 296 411 405 228 338 171 197 233 586 259 232 599 278 125 450 344 471 384 221 206 198
 466 186  73 524 207 500 203 144 391 212 362 316 229 414 566 216 179 260 465 230 416 226 270 312 458
 299 182 448 350 184 204 424 322 297 425 432 328 245 325 431 256 308 409 357 219 193 286 372 330 199
 255 173 185 274 320 304 387 347 227 343 303 252 332 498 253 289 578 237 403 351 334 348 250 339 243
 279 381 397 469 157 220 282 293  34 341 292 314 433 280 366 225 440 375 355 353 238 377 261 295 368
 276 336 263 446 269  74 317 268 319 284 401 272 441 395 138 398 143 383 354 324 192 335 380 331 486
 288 345 329 365 349 131 479 369 407  13 117 373 302 394 376 493  90 454 136 442 364  54 327 457 371
 277 361 452 534 443 217 445 162  17 358 118 360 309 359  61 390 107 393  94 522 214 281 480 483 388
 382 506 418 340 273 374 378   1 464 266  47 412  27 306 386 400 389  40 218 547 163 478 512 399  99
 423  91 555 467 510 363  12 356  97 507  37  28 210 561 290 463 456 174  16 444 158 553 421 554  79
  70 337 461 590  56 123 520 435 410 472  66 427   9  63 502 521 111 430 240  14 264 287 529 565 323
 195 267 451 530 300 224 120 460  18 318 291 487   3 508  29 544 404 429   2 546  30 406 574 589 100
  43  11 501  15 476 166 477 415 588 517   7 482 246 513 408 242 108 499   4 550   5  19 552 490 491
 468 116 489  33 532 523 568  78  26 571 119  22 437 385 558 509 438 417  65   6   8 570 105 333 449
  48 313 539  45  23 315 275 254 102 106 156 208 154 579 505 485 379 577 150 597  36 569 585 602 223
 531  10 575 488 434 525 538  41  24 519 151  87 285  35 367 551 494 562  62 528 146 109 209 533  21

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.0606e+06us (= 6060.6ms, 6.0606s)
Wall-clock time (full program): 6.10965e+06us (= 6109.65ms, 6.10965s)
Satisfaction error: 0
Number of search iterations: 1496
Number of local moves: 754 (including on plateau: 405)
Number of local minimum: 101 (including on plateau: 40)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 609 578 105 542 545 532 595 441 368  44 516  46  29 137  39 152 472  72  77 130 582  73 102 603 436
 625 376  78 586 495 503 623 548  88  83  76  55 121 448 482  96 511 167  38 474 500 125 117 540  70
 129 616 574 173 534  92 547 497 342 220 229  49  85 366 559  80 567 446  79 611 116 156 136 553  69
  87 468 613 612 432 139 461 484 209  56 275  33 618 464 514  75 483 230 172 155  27 600  97 186 335
 187 406 135 424 604 455 606 488 237  34 570 113 140 585 383  82 197 146 108 577 239 115 192 206 596
  81 431 151 247 177 617 489 601 221 103 367 133 418 538 498 148 506 293 536 521  48 111 182 190 218
 114 415 107 112 463 317 322 412 162 188 522 203 576 602 571 256 208 303 566 178  64 217 272 278 397
 235 390  62 551 253  98 456 615 414 213 481 175  61 450 622 249 265 614 166 120 341 210 485 157 142
 334 353 231 161 429  95 512 349 312 123 555 165 581 324 535 216 605 362 171 264 176 399 169 181 223
 164 619 207 250 287 195 598 355 288 316 307 163 179 529 271 525 124 299 204 620 444 273 134 193 281
 225 329 594 340 255 211 385 469 344 201 315 389 154 301 295 212 624 345 526 263 244 360 174 138 132
 294 440 191 242 189 254 325 351 270 305 458 445 378 541 402 240 400 452 269 127 319 158 227 268 280
 196 277 393 309 332 395 348 326 337 300 338 328 359 292 286 356 289 266 153 260 224 382 350 290 439
 261 160 352 199 318 408 370 523 423 314 410 259  47 222 346 306 279 284 363 401 297 374 336 202 371
 365 357 258 339 398 308 214 232  91 417  36 285 435 381 377 313 331 141 379 343 473 470 245 327 310
 369 267 364 236 427 323   6   4 518 454 252 403 537 428 296  16 409  57 396 447 241 422 330 276 347
 404 375 373 333  52 416 168 234  23 502  45 560 419  41 198 491  86 291 283 504 413 392 442 460 320
 466  67 477 262 302 505 215 248 233 304 205 508 443  30  89 243  53 110 420 438 462 471 519 434 321
 421 131 391 467  20 387   8  42 430 513 354 507 380  28  24 479  99 476 144 251 496 527 531 569 150
 517 145 453 358 159  11 101 147 425 457 126 499 311 185  71 587  43 539 544  18 437  25 572 565 530
 298 122 509   1  15 494   9 109  37 520   5 361 554  65  10 465 589 583 524 372  84 552 584 384 579
  32  14 575  31 487 568 104   2 407 492 128 593 219 257 194 501 426 563 533  63 580 480 490  26  60
 411 100  66 449 543 386  68  58 478 592 459 557 228 180 475 573 119 200 226  40 394  59  12 562 590
 550 246 549 588  74  94  21 106 607 510 238 405   7 149 118 556  90  93 515 597   3 388 528 183 610
 451 143  17  13  35  22 274 184 561 564 558 591 546 282 170 608  50 493 433  51 621 486 599  54  19

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00511e+07us (= 10051.1ms, 10.0511s)
Satisfaction error: 2
Number of search iterations: 3234
Number of local moves: 1134 (including on plateau: 549)
Number of local minimum: 269 (including on plateau: 65)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 609 376 574 612 604 617 322 615 312 316 315 445 359 222 377 16 86 110 144 18 84 480 12 183 19 => the sum is 7827 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 591 129 398 458  77 450 609  72 134 107  34 154 610  73 189 420  21 557 552 618 337 616 234 106 279
  25 295 558 394 116 485  33 571  52  61 112 486 559 218 194 379 478  49 451 113 138 562 542 367 587
 213 175 494 576 594 493 516  96 186  28  53 598 468  64 446 139  14  44 561 176 590 110 375 215 601
 625  66 412 534 603 238 459  89  85 163 581 311 570  22 130 340  99  31 336 619 399  79 452  95 487
 620 541 127  94 313 148 551 532 144 301 624 396 479  45  19 226   7  82 568 613  13 621 184 114 463
 605 142 546 608 137 167 510 235 187 193 179 496 236  42 438 432 330 171 523 611  18 200  55 287 477
  86 543  68  93 519 227 377 166 140 220  76 472 170 426 623 535 382 602 567 199  83 439  35 360 417
 133 156 105 521 285 205 428 622 121 353 304 173 500 145 617 307 376 354 153 231 159 612 141 358 466
  69 147 599  20 582 164 550 247 520 122 280 319 302 253 242 513  54 268 433 160 508 291 595  90 497
 498 321 300 136 261 476 351 255 204 583 126 172 195 177 445 258 320 310 289 239 555 344 305 397 308
 315 192 198 531 309 524 403 174 299 333 530 263 262 385 282 149 225 327 544 196 232 366 185  32 569
 593 347 224 264 357 341 339 411 352 303 298 267 286 290 278 190 355 361 191 219 474 277 252 312 244
 212 378 228 245 419 575 206 100 372 211 326 221 180 481 338 577 447 346 208 222 237 318 207 383 388
 514  38 371 314 109 356 401 274 540 369 272 453 462 407 120 436 349 306 146 270 343 248  63 294 370
 217 203 440 455 328 589  26 292 441 374 297 408 448  74  39 406 389 152 342 471 240 461 359 128 246
  98 251 404 564 549  16 572 233 435 348 260  56 381 296 402 556  17 418 322 275  97 443 363 345 124
  24 489 249 444 332 329  57 316 409 434 281 365 161 596  60 421 135 464 387 527 469 102 288 424  62
 331 475 457 214 473   3 243 391 484 386 210 104 162 414 273  84 423 229 182 425 615 201 614 230 202
  46 488 266  27 197 317 456  11 157 380 536 539  92 525 410 400 480   4   1 323 413 422 522 563 250
 335 492  40 430 470 350 241 405 395 580 545 115   8 565 216 283 169 606 165 117 143  75 533 392 155
 103 427  51 334 490 431  58 325 509 538 560 223 390 393 579 168 515 442  67  29 269  80  10 578 256
 553 276   2   9  50 254  43 504 529 517 547 512  48 607 537 158 507  30 506 467 429  12 482 181  65
 554 384 528 454  71 131  47 518 505 373 465  23 108 368 188 183 548 573  81  91 499 502   6 416 209
 364 284 257  70 125 437  78 460 584 511   5 111 483 597 259  87 585 604 132 123 415 151 449 566  88
 101 586 503  36  59 119 271 526  41  37 324 588 265 362 501 178 600 495 118 491 150 293 574 592  15

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.98391e+06us (= 6983.91ms, 6.98391s)
Wall-clock time (full program): 7.03246e+06us (= 7032.46ms, 7.03246s)
Satisfaction error: 0
Number of search iterations: 1963
Number of local moves: 729 (including on plateau: 306)
Number of local minimum: 139 (including on plateau: 27)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 281   9  40 588 616 505  61 115 483 569 591  39  54 625  27  95 552 424 202 573  55 596 600  32  93
 604  12 425 445 146 499 586 249 191 606 338 564  48  70 594 104 330 522   5 373  16  87 188 597 226
 184  84 516 423  83 533  51 441  72 459 584 608 453  75  24 135 571 286  94 108 593 246 576  58 568
  56 415 123 154 413 506 515  69 540 513 122 114 296 574  53  96 587 560 299  97 405 620  38 149 511
 150 100  31 396  47 611  35 603 615 474  11 420 360 398 121 213 602 358 614 112 379 541  43  60 531
  88 117 180 111 524 371  41 194 309 507 153 127 455 136 469 217 485 589 426 592 227 512 283 174 538
 223  89 177 210 624 487 481 436 183 462 156 225 473  67 139 160 446 442 580  17 411 601 113 404 219
 186 252 182 466 549 484 164 220 142 207  63 351 575 579 165 131 377 361 230 101 241 266 444 572 517
 476 144 195 103 495 561 619 197 479 172 270 157 578 171  76 329   1 581 209 243 457 333  98 401 480
 232 257 240 255 321 421 449 229 236 253 267 251 201 331 375 622 510 319 269 147 250 258 315 612 205
 292 545 170 539 390 385 155 348 494  33 374 366 288 228  79 140 312 387 618 133 295 297 519 203 235
 308 169 316 372 313 310 325 239 166 334 341 526 383 290 320 120 393 304 294 344 347 464 245 208 394
 280 263 242 349 285 254 276 305 159 248 332 211  99 607 370 291 443 102 335 447 196 389 409 609 324
 382 432 298 318 395 190 284 364 221 261 412 271 357 224 438 336 256 301 162 206 273 356 403 342 343
 437 428 369 152 337 187 145 302 422 548 380 327  15 339 238 345 176 268 277 439 158 274 523 450 289
 317 477 328 279 431 141  65 492 307 381 212 355 311  73 391 509 365  82 367 282 417 167 322 376 378
 105 433 470 448  49 198 410 353 193 418 544 508 400 429 363 346 237  77 502  45 168 200 362 109 458
 472  81 397  68  57  92 471 107 192 577 503 293  59 399 419 468 359 557 272 465  42 234 408 340 493
 454 456 475 407 218 143 214 130 467 179 314 350 525 151 535 384 259 138 303 451 430 264  14 536  28
  85 392 354 514 278 244 478 247 617 406 414 565 215 489 434 126 106  26 504 388  90 119 542 118  74
 529 558 497 233  19  29 599  37  80  46 555  91  13 148 352 463 132 222 527 562 590 553 452 534   4
 231 610 490   2 323 110 537 496 554  66 124 605 275 623 547 583  20  21   6 563 501 163  30 129 216
 532 498 262 386 486  86 300 550 440  18  10  22 598 178 521 460   8 185 518  50 427 204 260 500 326
 520 461 482 491 161  62 530 546  64  36 621  44 613  25 488 582 125 585  23 559 551   3  71 175   7
 402 543 566 116 265 416  34 556 199  52 134 435 181 595 287 570 173 128 189 528 306  78 567 137 368

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00026e+07us (= 10002.6ms, 10.0026s)
Wall-clock time (full program): 1.00514e+07us (= 10051.4ms, 10.0514s)
Satisfaction error: 2
Number of search iterations: 3035
Number of local moves: 1049 (including on plateau: 376)
Number of local minimum: 286 (including on plateau: 45)
Number of resets: 2
Number of restarts: 0

Problem in column 1: 281 604 184 56 150 88 223 186 476 232 292 308 280 382 437 317 105 472 454 85 529 231 532 520 402 => the sum is 7826 rather than 7825
Problem in column 14: 625 70 75 574 398 136 67 579 171 331 228 290 607 224 339 73 429 399 151 489 148 623 178 25 595 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
   1 521 357 104 458  18 471 562 585 571 497 210  48  35 584 536 594  11  37 595 131 163  43 473 220
 515 193   6 414  46 424 558 598 554 224 523 535  22  13 480 588 534 466 168 520 142 139  50   3 110
 609 109  58 550 153  86 400 503 319 525 477 517 233  79 519 596 574  45  95 614  97  83  19 495  70
  24 537  14   2 118  68 454 589 524 533 599  15 227  32 560 549 481  87 532 528  36  98 563 498 157
 580 415 217 439  25 461 422 207 538 467 499 172 154 146 582 406 412  59 177 540  27  54 283 482  62
 545 516 123 390 126   9 407 457 132 504 448 468  94  40 478 559 592 149  64  52 469 147 464 553  39
 561 418  23  44 187 382 452 470 441 494 492 450  89 384 456 343 442 200  65 314  53 188 426 337 114
 392 474 169 496  74 447 512 196 376 296 511 351   8 476 198 421 394 184 381 446 135 293   5 543  47
 403 475 100 465 405 419 277 368 355 348 399 182 155 389 334 429  10 388   7 401 356  91 462 395 212
 420 455 129 262 130 383 377 304 375 362 366 427 417 440 411  20 385  57 428 379 331 190 438  88 251
 387 432  96 397 365 346 243 361 372 500   4 338 241 294 527 510 359 344  82 254 330  17 349 459 218
 453 256 194 410 167  12 322 333 246 341 280 370 345 350 303 195 402 295 443 347 309 490 180 413 369
 305 281 437 237 247 336 268 270 260 206 298 312 622 451 354 158 231 508 328 290 302 374 292 119 339
 306 332 329 252 318 423 216 164 311 386 491 287 373 321 213 320 275 179 363 272 274 327 335 367 391
 267 223 530 324 264 396 308 278 291 301 300 181 326 430 378 259 282 245 215 435 404 273 191 360 364
 222 547 444 101 460 261 285 229 234 416 240 162 583 202 176 315 189 236 323 173 506 548 317 316 340
 112 286 479 178 393 310 106 578 601 297 171 352 299 342 284 208 269 408 486 265 186 433 253  84 445
 235  31 398 127 576 266 111 507 199 425 232  80 546 552 145 211  71 487 568 263 203 579 219 250 544
 115 144 618 276 611 151 610 228 137  51 160 617 581 531 108 134 289 258 271 125 600 539 201  61 409
 249  92 483  85 434 183 204 230 603  72 238 557 436 279 244 255  29 606 380 358 214 353 133 607 501
 174 107 522 242 573 209 136  67 117 141 138 556 221 518 105 205 143 623 612  76 605 513 616 175 431
 185 156 566 587 509 542 307 122 121  77 150 449 505 148 116 325 170 288 575 197 526 489 159  42 514
 120 226 371 248 529 597 192  33  38  60 166 113 577 565 152 103  73 620 608 128 472 567 593  69 604
  21 569 572 625  66 555 161  93  55 165  90  49 484 257 102  81 485 619 124  28 502 313 621 602 586
 624  30 590 570 591 541  26  78  41  63  56  75 239 551  16  99 140 463 493 225 615 564 613  34 488

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00507e+07us (= 10050.7ms, 10.0507s)
Satisfaction error: 2
Number of search iterations: 3024
Number of local moves: 1203 (including on plateau: 578)
Number of local minimum: 243 (including on plateau: 66)
Number of resets: 2
Number of restarts: 0

Problem in row 5: 580 415 217 439 25 461 422 207 538 467 499 172 154 146 582 406 412 59 177 540 27 54 283 482 62 => the sum is 7826 rather than 7825
Problem in row 23: 120 226 371 248 529 597 192 33 38 60 166 113 577 565 152 103 73 620 608 128 472 567 593 69 604 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 610  81  44  74 609 607 519   8 486  37  30 481  85 460 452  97 539 544 512 569  48 587 105  27 214
  18  51 490  43 618  95 534 113  64  45 508 577  38 560 525  39 591 586 136 624 498 119 165 345 443
  42 142 134 582  83 183 546  32 523  87  15 506 129 596 562 279 503 601 494 335  91  71 605 158 526
  86 108  84 584 434  92 552 200 240 606  33  88 109 509 608 121 193 565 139 568 593 611 424 161 117
 368  29 102 112 615  58 457  25 621 159 415 572  55 163 589 535 388  68 140 354 604 146 489 141 620
 110  76 122  99 453 549 439 172 590 150 459 222  77 573 538 350 436  59 185 622 137 148 463 184 612
  67 198 103  69 561 111 555  82 548 333 581 493 205 132 101 542 524 124 625 487 233 131 517  89 414
  66 588 366 223 479 397 418 623 216 266 246 176 118 125 244 340 278 225 204 537 208 179 496 228 579
 599 127 135 219 403 247 445 191 492 156 547 213 180 154 155 475 603 162 152 369 594 251 500 197 259
 288 151 359 602 430 325 550 313 294 217 289 173 274 280 255 358 410 298 171 352 239 300 221 284 392
 320 444 337 257 326 262 283 206 209 349 237 619 264 324 429 322 456 187 203 372 306 254 242 281 336
 295 272 307 220 401 315 235 275 316 348 461 260 351 269 249 342 343 617 212 398 379 250 309 175 226
 252 293 376 305 393 270 290 382 248 277 207 245 450 331 363 314 402 253 330 312 308 319 323 218 364
 241 194 303 321 328 268 406 371 282 334 408 229 318 404 261 373 160 440 425 230 311 286 243 385 304
 412 455 273 428 285 297 170 347 422 332 169 360 367 374 327 365 107 383 447 224 276 433  62 380 130
 357 405 431 339 143 378  75 409 446  22 356 381 271 420 370 164 421 299 384 256 510 482  90  26 390
 468 362 416 426 166 473 190 395 317 346  34 448 556 236 394  19   1 437 419 201 474 302 115 532  98
 355 423 287 504  31 258 168 377  56 462 292  94 441 400  52 435 232 389 449 227 231 574 167 514 407
 502 614 291 531 174 427 211 396 454 567 114 375 361 411 310 138  61 386  14 199 341 153 238 485  72
 471 527 564 432 210  23 157 467  24 470 196  79 391 516  46 178 263 505 353 267 128 530 417 576  35
  80 464 521 488  60 491  17 533 477 438 234 149 570   3   6 529 177 501  41  11  40 458 476 578 483
 566 442 540  12  13 515  21 478 186 499 553 451 511 518 195 413  36  16 520  63 497  57 100 507 116
 480 613  49 472 133 571  47 541 192 598 329 484 595   4   7 104 188 106 580  28 536 559  20 466 123
 557 181 575 182 399  50 202 545 120 583 513   5 551  53 522 465 387  65  93 147 189 554 495 296  96
 215 585 616 301  78 563 338 344   2 144 600 145 558  10 265 528 126   9 597  73  54  70 543 592 469

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00036e+07us (= 10003.6ms, 10.0036s)
Wall-clock time (full program): 1.00532e+07us (= 10053.2ms, 10.0532s)
Satisfaction error: 2
Number of search iterations: 3024
Number of local moves: 1045 (including on plateau: 562)
Number of local minimum: 261 (including on plateau: 53)
Number of resets: 1
Number of restarts: 0

Problem in column 11: 30 508 15 33 415 459 581 246 547 289 237 461 207 408 169 356 34 292 114 196 234 553 329 513 600 => the sum is 7826 rather than 7825
Problem in column 22: 587 119 71 611 146 148 131 179 251 300 254 250 319 286 433 482 302 574 153 530 458 57 559 554 70 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  64 593 106 550 168  78  79  60  38 561 536 622  44  69 578  40 610 448 407 533 494  48  62 625 412
 616 615 594 160 592 196  85 154  34 104 307 513 236  46 114  61  95  97 602 539 540 132 569 316 508
 272 601 142  81 560 408 152 122 611 506 164  72  42  91 479 166 108  56 471 576 612 587 608 208 130
 153 552 156 568 117  65  68  99 454 145 140 618  33 216 486 193  76 600 512 609 603 554 184 220 404
 254 491 118  27 619  93 161  75 534 590 570  54 109  32 566  30  84 450 502 584 613 617 238 189 225
  98 205 186 200 522 574 119 155 557 141 514 621  94 126 516 209 252 226 413 340 148 165 425 573 446
 101 181 228  86 194 135 624 110 614 176 580 577 195 262 604 202 127 495 377 199 170 237 607 180 564
 182 217 107 586 620 247 518 488 501 223 233  31 395 246 266 249 240 605 503 150 137 134 474 269 204
 171 478 188 158 244 239 116 553 394 179 466 496 270 192 301 299 546 317 423 354 284 261 460 206 230
 115 428 219 112 222 260 210 177 442 623 159 447 256 185 292 124 545 232 524 336 344 250 144 583 596
 290 375 258 174 173 113 264 363 526 187 421 285 212 235 380 367 582 606 400 306 259 111 429 214 295
 136 328 300 402 257 241 298 415 149 565 370 348 215 293 291 319 278 318 459 311 384 265 359 273 251
 242 263 314 253 366 372 289 190 438 245 579 392 322 255 334 321 163 274 313 303 281 296 456 234 330
 302 365 383 360 178 323 304 294   4 351 286 352 248 280 342 398 335 362 364 346 169 378 288 361 453
 371 221 432 369 325 379 277 218 341 172 287 131 320 338  43 441 345 339 283 436 389 401 267 424 276
 418  53 391 329 433 268 373 315 128  15 121 376 227 464 434 393 312 403 197 439 374 485 102 331 443
 458 416 353 537  35 419 427 343 167 500  66 355 356 511 100 505  12  63 203  92 426 387 211 469 414
 324 326 452 497  39 444 399 529  89 397  36 517 523 435 410  77 243  19  52 417 420 473 350 347  10
 386  49 279 480 451 527 310 483 305 381 382  22 498 358  37 462 531  80  23  57 532 430 175 571  16
 598 406 567 357 388   2 484 308 349 477 271 333 535 507 337 409 468 103 120 368  21  41 224 143   9
 591  25  70 445  28 467 411 525 139 541  88  73 558 519 123 493 475 472 162 396  11 528 457  45 183
 530 129 332   1  50 504 509 282 157 133 385  26 481 597 461 390 489 521  96  13 405  14 431 440 449
 548  82 476 543 465 487 201 482 105 515 147 551 563 470 146 562  90 213  59  83  29 422 297  58 231
 588 151 589 463 198 547 575 595 520  24 510   7 549 599 138 556 492  71 309  20  55  67   3   8 191
  17 275 585  87 581 437 572 490 229  74 207   6 544 499  47 559 327 455  51  18 125 542   5 538 555

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00445e+07us (= 10044.5ms, 10.0445s)
Satisfaction error: 2
Number of search iterations: 2949
Number of local moves: 1064 (including on plateau: 361)
Number of local minimum: 312 (including on plateau: 43)
Number of resets: 2
Number of restarts: 0

Problem in row 14: 302 365 383 360 178 323 304 294 4 351 286 352 248 280 342 398 335 362 364 346 169 378 288 361 453 => the sum is 7826 rather than 7825
Problem in row 16: 418 53 391 329 433 268 373 315 128 15 121 376 227 464 434 393 312 403 197 439 374 485 102 331 443 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  37 565 508 380 616 102  10  53 588  50  86 619 355 610 134 523  63 543  16  11  45 591  79 624 617
 105 137  54 573 579  70  61 329  34 476  43 604 453 424 555 587 593 519  29 161 598 116 603 101  21
 521  62 621 572 446  48  83 481 501  42 420 602 448 235 585 546 129 561  77 141  87  57 377  58 125
 576 191 477 256 317 124 467 179 527 426  80 557 479  82 470  72 181 575 173 150  96 622 581  76  91
 270 223 143 484 296 113  85 605 608 594  92 111 571 205 559 612 584 255 145 115 614 196 106 121 118
  98 436 434  39 570 112 131 611 398 231 214 509 149 207 187 595 444 520  88 625  65 160 580 198 224
 104 154 180 411 609 166 601 346 416 127 219 189 556  73 471 217 450 532 623 185 157 122 514 213 190
 442 315 192 418 437 182 171 237 455 337 163 218 596 186 533 459 244 600 204 390 232  67 135 374 238
 304 251 194 285 412 274 155 402 615 193 206 215 503 148 269 599 385 408 119 613 322 130 569 126 128
 227 236 200 545 507 203 387 265 202 618 114 267 209 620 276 394 313 440 331 140 156 263 297 316 299
 280 107 220 330 319 298 279 249 401 212 607 281 379 221 496 340 492 597 228 153 178 273 266 262 357
 309 378 369 407 328 243 318 386 391 197 321 233 261 335 288 216 356 294 159 282 264 354 417 348 371
  52 290 293 254 308 283 240 242 425 253 307 229 553 409 376 353 344 393 332 415 248 277 305 211 433
 445 245 342 456 195 396 362 259 284 451 210 188 449 174 225 241 132 272 306 430 303 460 325 352 323
 432 175 358 364 343 381 347 151 226 405  13 383 310 286 419 350 287 312 525 324 458 239  97 301 339
 360 457 427 300 275 311 414 326 184  27 333 359  46 314 258 388 123 177 384 271 410 406 462 431 382
 320 345 327 349 250 539 480 133 370 483 361 165  44 252 292   1  51 176 392 289 465 469 506 428 338
 435 395   5  78  66 438 464  69 375 389 291 493  33 373 278  28 461  95 341 363 526 474 366 447 542
 422 399 478 167 334 400   7  19  84 441 473 367 413 491 302  24 168 117 566 351 336 372 146 466 482
 550 463 500   2 142 468 535 152  49 452 497 454  31 423  20 368 147 162 439 404 512 397 100 494  64
 443 524   9 489 103 499  99 110 199 536 586 534 169  40  23   8 246  94 537 548  32 538 504 552 403
 486 365 421  68 108 560 530 574 164   3 567 136 268  89  90  38 510  26 558 138 488 518  30 577 513
  22 563  55  81 120 502 568 515 170 541 551  60  47 522 475 516 592  36 495 222 547  18  41   4 562
 529  59 429 511  71 531 487 549 144 158 517  35 208 528 230  93  25 109 498 540 201 472 172 139 590
  56 490 589   6  74 582 544 583  15 183 554  17 295 578  14 257 505  12 260 564 485 234 247 606  75

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.23422e+06us (= 6234.22ms, 6.23422s)
Wall-clock time (full program): 6.28269e+06us (= 6282.69ms, 6.28269s)
Satisfaction error: 0
Number of search iterations: 1609
Number of local moves: 859 (including on plateau: 451)
Number of local minimum: 93 (including on plateau: 45)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  90 616 514 202 550 154  95 560 519 569 596 584  19 138 607 573  65 169 128 160  18   4 296 592   7
 120 250  68  12  67 172  70 143 194 618 528 558 604 157 590 547 534 110 579 488 503  32 244  17 620
 554 552 131   8  31  62 181 505 565 574 478 204 522 265 348 585  16  15  37 269 599 184 158 523 459
  20   5 105   1 444 192   2 539 527 544 498 235 568 257 535 533  13 450  58 119 542 587   9 460 582
 536 609  69 537 504 272  42 472 470 551 412  59 540  52 463 461  80  54  81 223  14 295 162 411 456
 561 497 165 501 507 117 385 541  47 529 491  53 433 153 452 435 140   6  72  51 588  99  11 515 476
 549 334 136 492 408 410 439 436  38 471 483 218 511 130 418 455 232 139  21 182  10 401 126 437 349
 447 419  55 429 398   3 477 314 425 387 375 125 438  86 402 516 407 161 454  41 441 156  29 353 487
 445 422 319 393 329 361 270 469  75  93 362 212 480  83 355 391 170 486 448 124 374 317 102 345 400
 432 155 395  30 453 332 376 449 310  39 397 251 457 201 458 415 399 383 108 152 113 188 381 520 431
 274 118 423 207 377 389 342 373 405 417 133  82 281 369 388 340 367 316 380 267 350 205 360 370 292
 301 291 333 371 443 315 440 305 246 309 339 346 354 219 378 358 365 368 344 312 278 330 145 307  28
 404 311 282 286 285 343 318 300 297 284 326 252 341 335 324 356 338 245 366 271 253 328 259 337 384
 386 577 468 325 382 336 372 323 293 247 173 299 240 266 159 221 279 351 302 256 238 428 321 306 277
 241 149 185 225 263 446 430 303 298 414 234 475 322 481 521 249 242 228 289 261 224 451 308 357 229
 258 227 466 280 421 276 396 186 352 290 215 576 260 464 127 608 197 196 517 518  98 327 248 190 132
 294 171 347 168 217 570  87 236 615 287 137 583 176 566 150 191 500 220 359 363 255 379 563 262 129
 226 233 275 288 283 175 167 591 121 193 273 589 484 485 254 107 392 581 144 211 237 546 575 206 189
 231 264 479 200 268 571 593 198 166 111 304 390 203 524 135  50 222 230 625 513 104 548 555 146 195
  97 214 406 208 183 216 512  61 426 148 545 434 199 489  89 180 187 495 164 493 530 605 496 239 209
 109 210 543 562 617 179 600 177 142 147 331 462 213 413 151  91 531 506 473 409 243 101 403  71 141
 603  78 508 557 100 174 526 112 613 420  73 313  84 572  33  35 586 494 122 612 465 116 499  94  36
 510 424 578 621 178 595  85  26 103 106  23 364  44 474 394  48 416 594 532 427 123 467 442 163  88
  74 623 509 320  60 559 556  92 482  34  77  46  25  79  45  24 622 538 598 502 614 134 553  40 619
  63  76  66 602  57 606  64 114  96  43  22 115  27 567  49  56 525 490 624 601 611 597 580 564 610

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.74961e+06us (= 4749.61ms, 4.74961s)
Wall-clock time (full program): 4.79862e+06us (= 4798.62ms, 4.79862s)
Satisfaction error: 0
Number of search iterations: 1009
Number of local moves: 421 (including on plateau: 161)
Number of local minimum: 81 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 301 101 622 576 551 440 509 545  82 580  66 477 131 349  70 162  79  33  40 463 404  81 426 116 621
 331 596 106 614 374  41 604 581  23 564 118  44 436  10  12 196  83  76 466 114 206 499 523 617 591
 402 609 193 619 188 587 216  60  92 128 151 540 478 248 620 623 115  78  88  87 526  75 442 536 124
 405 120 625 207 228 351 548 274 488 287 102 515 511 594  91 136  85 119 129 189 610 330 586 165 130
 373 199 395 153 337 528 571 539 108 322  54 613 593 577 181 158 242  22 133 173 618  98 590 176  72
 570  77 413  59 284 624 524 449 490 147 191 480 145 599  26 177 144 198 137 612 387 316 438 172 166
 566  69 425 143 283 518 611 508  97 332 214 598 324 578  36 149 218 113 294 243 448 152 497 204 205
 547 212 396 190 484 462 260 615 606 209 135 512 422 321 183 171 105 180 182 375 300  86 465 156 251
 572 388 428 185 285 297 266 534 608 187 233 350 213 532 174 354 184 280 261 360 293  95 504 169  73
 433 208 486 295 616 269 227 167 410 453 311 234 271 244 237 257 289 157 264 272 447 368 307 288 315
 304 168 489 229 312  94 401 302 258 179 398 270 201 603 584 279 231 250 256 175 492 161 521 298 370
 353 378 308 470 140 319 223 253 441 232 409 291 221 247 365 155 333 210 458 369 259 382 412 320 277
 252 336 380 160 429 340 430 245 439 178 407 203 377 263 138 326 338 306 292 391 313 325 299 393 265
  52 146 262 240 339 383 226 432 235 327 278 286 461 344 355 254 475 328 500 296 455 476 249 352  74
 520 531  93  89 397 361 267 281  84 366 282 318 345 141 329 323 464 494 376 358  49 363 192 417 385
   2 219 239 381 406 427 246 273 437 305 356 275 569  37 415 454  21 434 268 357 538 474 220  58 414
  67 503 224 421   5 555 416 483 420 457 411 348 479 390 310  11 290 359  56 334 100 164 303 384 335
 122 460 159 423 419 389  43 371 473 134 544 341   3   4 408 452 435 431 362 446 110 309   9 472 506
 450 276 126 392 517 195 148 343  34 117 541  99 516  45 443 525 530 502  16 400 200 588  90 386 346
 238 456 123 505 529  17  42  65 574 567 467 112   7 194 367 379 557 542 487  25 519 364  20  64 605
 109  46 150 444  30 225  53  68  80 558 552 142   6 481 554 535 498 575 510 543  19 601 211 342 493
 469 468 163   8 418  71 459  51 501  48 445 241 514 215 471 592 451 482 485 121  18  14  27 537 556
 202 491 255 568  15  63 424  39   1 513  35  62 560 217 553 495 546 550 583  24 372 579 139 507  32
  31 186 595  55 132  47  50 236 527 607 561 127  13 394 589 103 549 533 585 496 104 522 125  96 562
 154 582 170 399 107 222  61 111 317  28 565 347  29 197 314 559 563 573 597 602  38 403 230 600  57

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00511e+07us (= 10051.1ms, 10.0511s)
Satisfaction error: 2
Number of search iterations: 3302
Number of local moves: 1180 (including on plateau: 508)
Number of local minimum: 259 (including on plateau: 55)
Number of resets: 2
Number of restarts: 0

Problem in column 11: 66 118 151 102 54 191 214 135 233 311 398 409 407 278 282 356 411 544 541 467 552 445 35 561 565 => the sum is 7826 rather than 7825
Problem in column 14: 349 10 248 594 577 599 578 321 532 244 603 247 263 344 141 37 390 4 45 194 481 215 217 394 197 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 608 569 490 589  41 423 420  63  47 148  36 149  49 558 190 113 574  93  27 615 593 533  91 496 310
 140  72 610 606 517 555 107 431  22 141  79   9  38 502 158 434  65 416 475 582 102 547  70 617 530
 178  68 473  64 160 489 328 265 619 571 181  66 600 443 484 166  69  75 563 446 609  99 625  57 127
 607 156 511 392 155 575 613  90  51 297 330  54 480 557 417  87 138 152  62 129 176 624 120 545 507
  61 145 573 132 620 432 238 123 505 568  25  55 532 560 515 144 104 157  84 227 479 588 169 465 324
  74 137 570  78 548 476  94 174 422 598  48 222 534 601 621 233 591  80 562  23 230  76 234 510  89
 172  73 462 584 304 471 519 100 116 201 167 259 448 250 421 150 544 133 513 383 603 224 258 163 307
 199 243 546 189 101 542 274 597 146 154 173 413 494 143 512 290 581 540 214 153 165 292 373 323 168
 223 171 191 105 536 403 357 312 594 216 106 599 579 212 406 308 535 209 552 142 229 130 184 200 326
 204 254 151 247 280 618 585 387 198 301 134 394 440 213 352 281 210 564 501 279 180 228 221 348 256
 207 311 345 276 553 605 126 355 320 122 543 235 346 361 294 285 305 220 179 237 398 401 329 188 284
 264 300 260 255 369 397 470 293 278 206 622 275 319 404 386 246 236 298 186 498 185 321 273 245 239
 161 344 226 295 377 430 175 306 296 379 341 399 385 299  82 291 303 289 378 282 340 409 339 412 287
 327 371 257 309 195 103 359 360 384 450 318 187 240 266 219 262 286 390 426 391 365 331 335 313 381
 342 427 218  45 402   1 354 441 483 370 351 242 405 119  17 268 283 454 349 356 366 252 374 445 461
 518 325  46 481 437 241 353 444  42 112 125 418  14 464 334  33 414 322 474 362 415 368 147 380 556
 376 336 364  20 248  95 367 117 343 506   3 332 263 478 491 438 388 244 288 316 468 411  12 458 463
 111 429 393 452 261 215 194  32 350  56 372 338 196 267 217 529 302  83 428 521 251 467 436 492 433
 419 395  30 408 396 272  11 317  18 524 486 192  98 271 363 472 183 541 457 509 270  44 537 124 488
 497 531 108 514 315 253  28 400  97 522 612 451 128 164 162 455 528 389  13  67 439 118 453  15 565
 520 456  59 459  10  19 538 551 590 135 482 333 121  29 205 424 269 504 197  40 466 425 539   5 449
 375 572 193 337 487   2  81 577 493 347 602 578  86 499  37 586  21 477  16 516 202  71 592  52  26
 604 583 485 503 131 115  77   6 616 410 623 567 277  92 314 550 523 114 225  35  88 139  58 508 182
 595  31 211  50  24   8 596 525 587 109 566 611 576  39 469 231 170 554 249 580  96 495 442   4   7
  43 526  53 435 358  85 561 559 208 382 500 447 177  34 159 549 203 527 407 136 110 232 614 460  60

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0002e+07us (= 10002ms, 10.002s)
Wall-clock time (full program): 1.00523e+07us (= 10052.3ms, 10.0523s)
Satisfaction error: 2
Number of search iterations: 2743
Number of local moves: 944 (including on plateau: 431)
Number of local minimum: 234 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

Problem in row 10: 204 254 151 247 280 618 585 387 198 301 134 394 440 213 352 281 210 564 501 279 180 228 221 348 256 => the sum is 7826 rather than 7825
Problem in row 20: 497 531 108 514 315 253 28 400 97 522 612 451 128 164 162 455 528 389 13 67 439 118 453 15 565 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 403 474 606 320 488 619 622  58  32 486  49 491  26  97 124  47  31 602 502  56 531 482 313  25 342
 579 405  29 504  48 587 621 126  61 420  51  65  53 133  24  64  80 503 524 576 493 547  94 618 620
 426 154 372 389 609 607 617 485  43 142 132 595  92  50  28  59 121 614 107 535 146 610 612 139 141
 439 118  99 608 171 407 603  75  33 147  96 574  36 471  83 179 334 470 568 509 554 366 605 167 113
 447 135  40 478 624 324 506 368  98 442 195 553  89  88 100 157 175 542 224 592 577 616 170 162 123
 530 604 143 388 156 625 596 569 416 150  72 203 232 152 130  38 501 613  78 545 446 180 201 138 119
 560 102 225 584 210 423 459 172 243 507 165 168 177 227 164 365 376 492 455 155 457 615 200 221 103
 335 242 122 496 120 590 256 534 207 273 205 160  71 513 187 230 444 381 228 148 463 537 240 220 623
 580 127 186 106 128 330 285 266 424 591 217 226  86 510 296 204 599 406 551 241 505 289 169 229 274
 325 178 159 536 194 294 209 237 277 382 441 601 190 254 222 565 206 371 183 593 231 282 284 292 319
 248 262 300 521 386 275 287 469 219 260 557 191 355 286 344 349 202 456  21 498 309 223 236 318 253
 265 213 239 369 198 332 307 291 306 379 208 268 611 490 352 283 250 404 269 391 305 299 280 249 267
 373 279 270 244 429 259 251 314 234 297 298 271 215 315 288 370 363 367 326 417 350 255 361 328 351
 316 387 212 303 329 364 323 327 216 302 337 264 413 378 310 304 353 238 257 317 377  84 345 357 412
  16 321 311 396 235 359 322 393 356 258 272 246 341 358 438 182 346 252 383 312 398 276 295 338 421
 197 526 435 117 419 384 339  79 301  18 261 468 428 347 454  62 166 245 436 458 400 137 340 410 397
 374 395  52  46 375  11 418 199 129 293 196 343 402 414 333 433 394 247 484 290 401 348 448 392 408
 112 434 409  70 380 144 425   3 475 430 473 453 431 214 278 462  68 181 483   6 104 517 467 452 354
 116 385 479 140 527 422  14 411 390  57 336 464 449  15 427 489 193 158 233 466 151 108 477 437 481
 174 443 561  44 476 218 109 528 500 445 465  63 487 360 450 461 136  82  74  20 134  67 515 573 440
 184 520 533  91  19  90  39 399 555 125 564 451 511 480 544 331 308  60  55 362   2 532 497 546  27
 188 525 432 211  41  17  22 281 575 153 499 543 516 415 523 472 514  10 145 115  12   4 552 541 519
 173 538 540 101 589  77  95 529 570 494 582   9 556 192 578 539 512  93 495 111  85 176  81  37  73
 460  23 522 163 598  54  34 149 594 189 566  45 508 548 586 597 581  30 559 105 131 114  42  69 558
   5  35 549 600  76  13  66 563 571 585 588 110 550 518 562 583 572   8 185   7 263 161   1 567  87

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00506e+07us (= 10050.6ms, 10.0506s)
Satisfaction error: 2
Number of search iterations: 3174
Number of local moves: 1190 (including on plateau: 652)
Number of local minimum: 262 (including on plateau: 60)
Number of resets: 1
Number of restarts: 0

Problem in row 1: 403 474 606 320 488 619 622 58 32 486 49 491 26 97 124 47 31 602 502 56 531 482 313 25 342 => the sum is 7826 rather than 7825
Problem in row 16: 197 526 435 117 419 384 339 79 301 18 261 468 428 347 454 62 166 245 436 458 400 137 340 410 397 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 148  47  61 454 195 450 480  33 400  43 520  64 537 576 563  95 533 377 580  17 337 517 254 542   2
  54  10 239 567 169  30  97 485 309 322  18 532 521 225 589 587 156 622 221 425 600 421  45  13 568
   8  66 258 553 177 129  12 509 516 543 211 427 171 159 472 549 176 430 594  77 237 584 369 199 399
 497  99   3 566 609  48  50 506 523 545  98 323 586  56 231 234 111 429 500 126 189 604 295 105 492
   1 511 434 367  76 166  62 482 483 435 503 227 387   5 192 546 219 551 496 112 107 245 409 335 474
 133 479 588 529  32   4   6 585 437 513  81 436 488 527 200 544  31 278 349  58  15 447 555  59 451
 135 565 463 525 351  83 206 508 376  60 420  79 397 381 140 457 493 229 128 385  11 422 127 393 491
 438 531 452 243 284  89  67 453 465 502 326 404 432 103 139  92 445 160 419 259 558  22 530 302 110
 366 402 417 290 470 372 410 446   7 248  75  65 414 345 394 150 217 519 458 564  34 494  51 131 486
 299  20 617 327 364 386 423 418 433  49  42 371 448 378 388 625 289 300  21 332 257  28 484 389 137
 391 291 411 477 358 518 350 348 317 390 293 307 441 264  93 130 285 101 353 362 266  27 256 329 467
 357 469  25 306 456 106 304 571 261 356 440 276 408 338  90 233  73 253 415 382 230 330 559 161 426
 209 360 499 365 396 370 548 368 280 359 444 265 162 375 274 249 311 373 102 224 279 104 251 339 319
 220 596 443 308 173 428 439 113 242  91 255 464 342 260 570 316 331   9 207 240 305 346 336 181 610
 354 296 314 283 379 403 560 184 100 401 201 442 352 187 592 270 165 215 282 301 262 321 498 241 222
 273 556 374 247 250 554 246 536  84 613 238 481 310 244  55 196  70 275  94 268 462 267 303 577 252
 158 471 562 205 188  69 228 340 535 416 193 292 202 277 505 208 392 180 271 624 312 121 550 473  53
 459 123 197 272 194 478 298  35 145 344 510 157 226 572 263 328 455 602 142 141 557 163 170 599 395
 412 124 109 235 218 515 286 191 182 118 320 476 151 190 347 524 574 598 534 333 608 294 164 155 167
 175 125  80 214 315 361 595  72 154 539 380 119 384 552 512 120 579 223 541 623 561 212  87 288  14
 522 236  74 172 540 495 619 143 468 413  88 593 136 615 341 449 134 210 198 547 122 297 146 204  63
 582 147 178 203 612 514  38  57 334 232 383 153 183 504 287 213 313 489 466 216 398 528 174 507 114
 538 614 620  24 132 569 621 185 431 149 605 355  85 578  23  37 325 152  71 138  96 318 461 117 581
 606 601  44  41 269 407 475  78  19 115 591 501  36  68 526 186 573 168 343 611 616 116 144 583 108
 490  86 363  52 618 281 405 179 324  29 590  16  26  46  39 487 575  82  40 460 406 597 607 603 424

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.7683e+06us (= 7768.3ms, 7.7683s)
Wall-clock time (full program): 7.81903e+06us (= 7819.03ms, 7.81903s)
Satisfaction error: 0
Number of search iterations: 1933
Number of local moves: 694 (including on plateau: 252)
Number of local minimum: 159 (including on plateau: 30)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 342 221 614  98 145 492  81  77  61  83 616 557 622  58 613 618 552  44 494 615 101  87 457  91  86
 480 213 506 141  31 471 354  89  33 117  19 223 507 606 126 601 592  24 532 420 534 308 598 210  90
 166 305 625 175  29 423 105 185 178  73 113 214 582 112 360  43 171  63 581 525 579 589 608 508 513
  52  71 111 619 138  88 301 286  39 595 172 481 443  54 135 160 450 434 588 612 599 607 489 161 140
 153 121 293 585 623  50 219  76 427  55 283 352 531 566 364 393 561 222 596 556  22 188 318 144 127
 116 472 349  65  21 610 317  25 482 103 257 226 129 620 575  96 545 562 387 565 444  84 510  60 205
 163 564 224 168 169 529 609 102 122  37 232 445 617  53 611 314 373 602 394 344 181 310 395 149 118
 211 499 218 119 231 272 130 624 386 244 152 430 251 186 518 180 600 351 541 212 208 539 216 304 203
 133 402 264 580 164 242 296 254 603 435 267 571 240 215 115 266 604 527 348 193  64 378 238 197 229
  56 511 125 227 158 547 376 262 154 621  68 586 202 334 297 363 109 520 377 196 312 453 302 433 236
 265 475 325 233 306 298 192 330 276 201 249 207 243 279 500 368 366 535 234 336 277 567 137 337 289
 206 322 252 261 346 204 246 343 309  85 288 551 228 369 280 426 250 458 577 563 281 195 275 148 362
 321 328 323 413 292 345 355 307 311 295 333 194 176 424 338 327 332 388 340 247 271 316 245 263 341
 477 421 270 253 389 398 353  20 335 128 401 136 258 319 230 239 379 400 385 274 437 313 468 260 282
 408  32 268 347 414 255 493 432 396 358 375  72 515  34 100 390 371 157 200 372 485 182 225 484 459
  14 428 412 273 370 320  36 410 441 356 411 391 380 440 291  28 367 383 174  48 365 436 483 150 418
 464 284 544 339 382 331  51 374  15 533 488 303 397 422  93 326   5 220  46 495 538 151 447 290 287
 407 198 473 425 300  82 549  18 455 448 442  66 329 460 187 537 315   8 124 278 487  38 189 554 456
 405   4 324 469 399  45  79 449 452 467 439 461 505 593 237 350 184  94 142 403 446  16  99 406 357
 384 381 597 523 548   6 359 470 361 409  40 167 146 501 217 522  78 269 104 256 139 259 123 463 503
 550 235 568 241 605 114 560 491 462 479 517 143 120  17 110 542  97 431  59 147   7  10 392 512 417
 514 466  12 299 504 191 584 502 454 578 497 190 107  27 404  26  95 209 155   9  57 416 476 555 498
 496 199  75 451 590 465 572 576  92 415 546 159 156  13 165 132  47 569 108 106 294 419   3 583 594
 526 490  23 519  80 474 559 553 543 170  62 521  67 536 429  69 134 285 162  11 524 478   1  35 574
 516 183  30   2 591 573  49 570 438 540 558 179  74 587 530 509 248  70 177  42 173 486 131 528  41

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00015e+07us (= 10001.5ms, 10.0015s)
Wall-clock time (full program): 1.00513e+07us (= 10051.3ms, 10.0513s)
Satisfaction error: 2
Number of search iterations: 2619
Number of local moves: 905 (including on plateau: 331)
Number of local minimum: 233 (including on plateau: 47)
Number of resets: 2
Number of restarts: 0

Problem in row 15: 408 32 268 347 414 255 493 432 396 358 375 72 515 34 100 390 371 157 200 372 485 182 225 484 459 => the sum is 7824 rather than 7825
Problem in row 21: 550 235 568 241 605 114 560 491 462 479 517 143 120 17 110 542 97 431 59 147 7 10 392 512 417 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 275 524 561 109 168 591   6   7 118 576 606 579 126   5  26 212 588  79 542 559 584 553  47  37 347
 528 223 598 102  33 539  72 533  30 492 595 506 540 603  43  28 451  74 441 562 590  41  97   4 100
 522 504 346  34 123 445 526   3  63 426 594 387 534 592 490  82 264  50  42  15 538 465 272  65 443
 518 527  60   1 401 555 456 535  18 569 511 467 240  32 438  70  10 422 548 161 537 404  44  35 266
 544 444 369  87   2 516 550 510 250 481 423 258 105 473 515 159  48  22 216 572 339 568  66  31 277
 119 474 459 113 274   8 491 508 355 498 530 199  94 554 435 449  17  51 308 424 415 402 256 237 155
 408 395 416 177 253 546 248 455 429 375 477 179 107 468 131  64 189 439 321 512 365 437  89 213 132
 338 480 372 191 324 499 440 207 450 386 281   9 117 371 501 286 390 359  86 394 236 421 222 336 129
 541 484 326 106  75 436 446 462 215 411 344  88 104 497 378  23 111 115 532 361 341 502  49 393 485
 513 377 410 197 340 362 420 406 349 242 366  54 287 315 384 312 304 350  40 466 291 246 265 231 298
 419 381 268 148 254 418 337 183 301 329 320 295 181 400 283 392 391 175 334 360 328 370 167 472 319
 278 224 464 273 314 403 316 363 327  14 234  56 267 433 431 417 407 330 442 294 517 261 233 247 280
 293 354 432 364 317 182 414 203 279 302 220 305 351 208 152 288 323 475 309 398 343 284 228 374 427
 206 313 162 342 413 290 609 496 259 412 318 255 260 244 345 230 149 190 367 471 357 333 325 238 241
 356 187 297 618 140 292 221 368 251 174 201 270 385 116  68 232 235 269 257 556 447 352 563 353 617
 489 452 303 373 276 299 200 219 482 409  76 227 186 469 310 198 289 249 425 389  12 331 296 252 614
 210 218 593 434 300 307 141 335 211 585  99 571 188 153 166 458 577 245 332  91 229 262 428 478 214
 180 388 145 376 204 101 139 193 379 176 217 500 616 138 160 575 601 607 514 226  78 154 557 454 147
  46 282 144 461 263 380 573 196 519 178 243 578 470  38 171 567 306 170 624 205 173  98 430 574 136
 150 108  16 602 600 209 271 202 495 157 158 348 523 225 194 143 185 358 322 597 128 169 479 604 582
 124 121 125 581 612 135 311  69 587  90 151 503 564 114 507 615 552 453 146  25 192 156 476 520  96
  83  59 110 448 483  58  19 164 566 134  71 460 137 621 195 558 547 589 133 127  53 619 560 545 486
 610 184 622 596 505 112  55 130 239  57 122  84 382  11 494 488 405 620  52  27 487 172 463 509 399
  36  93  85 493 586  61 543 549 580  67  45 570 536 120 457 583 103 521 397  13 165  62 605 531  24
  39  29 142 599 565  81  21 529  73 285 623  77 525 625 551 396 383 613  95  20  80 163 608  92 611

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.00018e+06us (= 4000.18ms, 4.00018s)
Wall-clock time (full program): 4.04951e+06us (= 4049.51ms, 4.04951s)
Satisfaction error: 0
Number of search iterations: 771
Number of local moves: 509 (including on plateau: 130)
Number of local minimum: 30 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 121 550  36 583 621 450 326 127 324  55  83 447 622  82 432 463 530  86 615  66 136 597  90  25 358
  28 502  31 616 599 497 284  32 485  94  79 528 624 101 510  96 455 128 601 481 623 322  39  26  44
  14 612 580 549 478 582 527  93  13  16 118 603 189  88 521 507 177  78 611 602 613  49 164   3  38
 199 410  22 604 561 538 115 125 489 465  89 314 625 201 479 159 492 303  72 594  51 551 247 108  12
 175 449 134  75 367 618 154 114 560  95 608 573 137 174 589 595 546 135 321 282 591 130 221 120  62
  64 496 231  73 122 537 396 229 480 347 291 403 167  85 311 605 590 614  45 620 606 165 116  37 195
 139 508 197 610 337 491 536 204 490 381 192 585 109 211 484 514 525 129 163 187 198 181 184 113 157
 148 223 173 509 200 542 106 577 520 151 194 609 144 399 568 500 501 576 233 169  97 180 185 166 155
 304 141 210 147 171 519 261 286 438 587 149 467 369 207 562 264 619 503 156 290 224 214 188 418 131
 287 239 178 140 547 352 288 265 469 564 278 277 208 172 227 219 581 453 259 397 145 245 225 232 578
 235 295 243 254 260 414 296 473 263 275 270 212 240 268 252 325 205 600 299 316 271 293 234 593 440
 123 312 413 228 237 378 257 242 470 273 274 256 340 361 230 460 300 217 376 327 617 279 420 283 152
 335 302 348 297 364   1 272 267 292 356 415 323 309 357 375 215 301 281 351 262 419 294 244 540 305
 353 133 362 258 412 248  47 349 363 329 428 427 368   6 385 431 350 386 334 190 238 346 341 354 387
 402 328 380 308 138 266 400 338 143 333  61 374 360 429   4 359 355 306 365 320 379 393 330 318 436
 457 446 280 339 435 162  18 345 179 422 372 373 471 313 319  15 388 218 461 343  41 382 342 315 389
 441 443 439 421 344  20 226 377 423  99 269  92 384 398 102 406 153 251 307 430 409 535 448 391  17
 371 383 483 464 401 317 474 253 160 170 557  40 111 366 104 193  84  10 505 437 394 392 424 249 482
 417  63 533 390 434 196  35 370 168 191 515   2 332 499  77 475   9 411 255 472 426  69 459 462 565
 452 132 487 331  58 220 107 105 404 504 498  76 494 534  19 117 202 408 570  53  34 539 468 559 454
 592  87 512 477  52  71 516 563  30 150 513 213 476 405  56 126  70 444  33 161 285 416 523 566 488
 517 119 458  68  98  24 495 407   7 543 555 103  67 506 250  57  21 433 124 529 445 442 466 493 598
 554 425 532   8  23 186 569 556 336 276 289  54  48 511 182  80  91 552 526  27 456  43 395 548 558
 579   5 451  65  42  50 553 544 110 575 142 298 572 607 216 486 206 203  60  29  81 522 531 310 588
 518 222 112  11 524 146 567 584 209 574 586 176  59 545 571 158  74 100 183 241  46 246 541 596 236

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0003e+07us (= 10003ms, 10.003s)
Wall-clock time (full program): 1.00519e+07us (= 10051.9ms, 10.0519s)
Satisfaction error: 2
Number of search iterations: 2654
Number of local moves: 795 (including on plateau: 308)
Number of local minimum: 235 (including on plateau: 31)
Number of resets: 1
Number of restarts: 0

Problem in row 11: 235 295 243 254 260 414 296 473 263 275 270 212 240 268 252 325 205 600 299 316 271 293 234 593 440 => the sum is 7826 rather than 7825
Problem in row 18: 371 383 483 464 401 317 474 253 160 170 557 40 111 366 104 193 84 10 505 437 394 392 424 249 482 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  66 552  45 606 397 436 527  95  70 495 114 555 128 467  51 615  44 390  57 134 595 132 568 596  90
 330 528  76 514 502 604 610 361  30 230  47  42 109 614 101 556 445  88 564  49 581  18 573  63 190
 391 562 579 571 613 180 104 462 184 471 307 599  79 612  68  80 565 102  37 139 131  65 229 623  72
 164 500 133 594 512 536 491  41 398 499 110 373 112 616 142  81 590 165 106  29 119 622 477 175 240
 430 617  22 231 123 504 194  98 341 440 209 557 246 322 276 567 522  96 226  27 563 204 496 497  17
 516 200 192  87 551 608 125 618  74 407 118 584 267 279  84 183 107 550  34 624 120 113 602 621 161
 510 253  94 280 219 597  99  78 130 543 223 583 202 486 210 174 503 367 609 216  56 147 544 415 287
 346 145 162 117 241 155 250 173 605 437 141 580 607 191 168 143 492 319 189 372 484 211 417 487 393
 619 301 242 149 625 218 245 235 601 572 272 549  91 225 105 151 479 566 290 146 249 256 251 185 203
 577 212 376 259 611 262 285 148 270 329 197 291 480 233 359 238 140 560 188 224 337 178 474 354 243
 286 347 358 336 403 277 296 507 363 364 222 137 282 539 129  73 284 478 263 299 269 220 435 281 377
 360 214 199 306 302 160 288 351 304 620 265 533 273 382 247 331 327 461 264 255 332 374 261 316 100
 271 335 338 283 298 468 206 157 314 420 334 399 355 371 308 300 111 244 413 195 419 412 309 352 213
 275 182 353 122 411 356 310 378 248 323 312 537 172 135 344 268 409 232 333 295 441 320 385 305 379
  58 324 432 257 383 392 234 171 328 196  82 254 481 434 313 345 297 348 315 258 381 456 404 357 325
 127 394 375 401 124 317 414 294 421 311 339 207 416  54 405 321 193  83 498 410 442 494 228 380 177
 483 370 260   8  19 384 395 369  67 136 429 169 451  89 408 340 540 215 509 452 449 326 221 418 318
  69 239 505 520 406 387 343  61  64  60 402 116 448 289 450 431 424 237 465 396 274 493 126 163 457
 227 460 489 482  33 153 350 252 428  85 438 170 524 278 433 466 439 205  16 559 103 570  53 154 458
 217 454   4 366 181  25 349 425 386 167 476  52 400 426 547 469  50 365 423 389 453 535  28 150 488
 446  20 490 455 236 201  59 368 470 159 521 144 444  23 511 576 447 138   7 526   6 513  92 530 443
  38  62 388 303 186 459 603 475 561 121 553  24 587  35 422 574  26 198 501 545 472  32  12  55 593
 179  43 600   1  86  36 464 582 546  77 592 156 591 187 558  14 208 518 463 542  11  39 485 293 554
 292   3 575 506  21 108  15 541 529  97 534 166   5 362 588 519 152 473 523 586  13 578 115   9 515
 548 508 538  71 342   2 569 585  93 266 589  48  75 176 598  10  31 427 531 158 525 517  40  46 532

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00037e+07us (= 10003.7ms, 10.0037s)
Wall-clock time (full program): 1.00522e+07us (= 10052.2ms, 10.0522s)
Satisfaction error: 2
Number of search iterations: 2830
Number of local moves: 913 (including on plateau: 329)
Number of local minimum: 230 (including on plateau: 55)
Number of resets: 2
Number of restarts: 0

Problem in column 11: 114 47 307 110 209 118 223 141 272 197 222 265 334 312 82 339 429 402 438 476 521 553 592 534 589 => the sum is 7826 rather than 7825
Problem in column 19: 57 564 37 106 226 34 609 189 290 188 263 264 413 333 315 498 509 465 16 423 7 501 463 523 531 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 614 605 458 289 565  55 436 485  41  74 100  18  64  31 406 551  23  80 622 473  35 610 103 618 469
 108 471 254 538   7 224 521 397  43  38  70   8 135 587 481 345  72 564 623 457 105 620  20 624 513
  28 594 212 540 546 113 517 379  83  69  47  60  39 603 525 567 116 466  75 578 134 590 609 124 211
 146 602 484 529  27  52 568 552  36 173  46 101  81  94 408 556 121 276 621 454 520 601 115  96 566
 174 581 577 172 476 130 563 489 175 141 180  34  67  56 519 553 204 507  71 240 570 428 187 119 612
 163 542 579  90 239 215 516 537 419  58 129  48  33 159 506 232 114 539 181 625 547 451  66 221 616
 230 434 619 607 148 158 193 510 318 169 126 219 213 201 151 615 268 467 168 341 277 560 252 164 417
  89 611 585 166 198 199 145 617 475 264 189 214 229 196 143 355 102 591 206 595 256 608 157 270 365
 584 586 278 167 575 128 202 195 431 243 156 188 220 589 259 273 165 388 210 178 132 588 293 184 613
 263 574 427 170 282 275 216 509 354 295 300 470 227 287 258 284 323 505 161 244 136 279 209 233 544
 200 313 237 479 290 600 522 286 493 217 347 400 218 192 312 150 267 317 430 235 194 269 171 297 389
 326 238 314 250 504 260 190 266 185 281 344 155 364 247 384 255 361 376 261 319 491 380 308 474 292
 207 294 332 338 301 348 253 368 303 241 349 362 415 152 272 346 352 248 291 288 280 360 398 302 425
 402 183 154 374 245 325 418 334  93 223 394 246 321 387 371 403 381 304 305 296 299 311 339 446 271
 448 191 337 393 442 329 395   5 186 343 234 340 342 333 228 414 461  13 310 399 424 283 367 378 231
 336 177 351 335 328 401 413 443 285 350 373 405 322 366 392 142 423 117 433  11 330  73 396 372 251
 411 226  37 274 422 438 447 382 262 455 386 410 359 315  24  62 353  54 412 477 426  45 409 536 203
 331 122 138 363 445 452 391  85 309 390 404 453 490 236 139 407 320 179 358  53 385 242 444 432 257
 356 222  68 483 456 459   3 112 375 531 439 528 383 495  82 307 377 131 468 127 160  91 500 496 176
 440  42 369 111 429  16 437 144 306 518 465 557 533 435 147 441 249 463 488  15 140   9 462 503 106
 573  98 133  99 298 511  21  49 499 572 508 478 604 497  97 162 530 118 420 524 449  25  14 527  19
 514   6  78  12 421 534 327  79 580 606 599 464 545 548  63 120 569 208  32  84 482 153 472 205 123
  59  29 370 526  88 562  10 149 494 501 460 541 535 550 523  92 596 324  57 182 512   2 450 109 104
 598  44 357  22  17 549  95 137 487 558 597 555 532 265 576 107 486 110  61 543 416  50 582  30  51
 225  40  77 498  76 492  26 316 593 515 583 571 554   4 559  86 592 480 561  87 125 197 502  65   1

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00502e+07us (= 10050.2ms, 10.0502s)
Satisfaction error: 2
Number of search iterations: 2774
Number of local moves: 1067 (including on plateau: 377)
Number of local minimum: 212 (including on plateau: 47)
Number of resets: 1
Number of restarts: 0

Problem in row 15: 448 191 337 393 442 329 395 5 186 343 234 340 342 333 228 414 461 13 310 399 424 283 367 378 231 => the sum is 7826 rather than 7825
Problem in row 22: 514 6 78 12 421 534 327 79 580 606 599 464 545 548 63 120 569 208 32 84 482 153 472 205 123 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  53  20  45  71 576  56 590 308  37  23 599 509 548 542 508 568 586 534 583 222  36  68 116  34 593
 557 323  57 540 553 585 539  55 564  72 595 161 235 138 549 577 105 610 489   3  43 157 118  30 170
 103 579 563  18 163 581 598 117 264  26 535 510 523 565  46 494 257 292 171 100 210   6 495  83 526
  16 296  80   8 574 525 533  89 168 561  25 172 411 527 444 491 165 567 544 284  66   7 217 505 550
 498 470 376 492   2 478 475  61  41 538 471 477 592 513  14 572 106 587 154 198  15  75  87  99 434
 423 159 429  22   4   9 552  35  69 438 459 511 432 460 503 467 136 607 449 367 112 152 108 458 463
 500 537 474  84 483 473  11 396  67 378 450  12 487 497 461 515 181 178 130 120 186  91 359 334 421
 446 313 517 454 443 456 318 320 345 464 282  44 331 355 433 440  82  28 519   1  73 141 283 338 399
 448 393 428  24 339 397 520 485  31 361 415 431 386 482 360 319 237 472  92 231 256 291  29 122 276
 277 407 344 382 504 457 213 368 439 336 312 416 481 381 295  50  19 408  52 243 317 199 400 219 306
 246 353 309 394 114   5 329 346 436 146 173 351 392 302 420 377 299 356 342 328 288 388 476 144 512
 375 401 332 514 180 366 314 253 402 134 275 330 358 357 417 241 248 300  76 297 143 410 496 335 271
 316 327 285 362 223 387 370 305 453 425 371 263  98 286 469 206 175 349 365 348 341 273 347 290 191
 435 369 322 287 224 380 215 151 211 278 188 303 293 326 385 233 234 530 176 259 352 604 384 262 424
 608 230 609 228 413 279 195 247 227 255 252 242 304 244 405 573 260 126 200 147 372 390 270 545 204
 218 113 128 403 236 226 232 245 280 364 602 193 414 310 265 212 507  39 518 373 445 625 321 406 150
 202 412 174 214 409 205 254 197 281 149 145 164 119 220 307 269 624 426 516 566 468 301 311 559 333
 203 155 183 162 442 268 225 620 209 110 115 179 239 249  78 274 555 623 488 529 541 261 427 506 184
  90 466 272 562  95  60 430 169 251 132 177 582 148 374 153 221 589  81 616 490 452 528 543 240 104
 190 601 135 350 194 584 166 189 493  94 337 167 298 139 250  86 522 267 192 531 462 558 484 340 196
  47 182 107 524 451 229  85 591 571 501 238 613 201 158 187  59 422  42  97 379 363 597 502 570 109
 603 156 129 617 578 391 486 614 547 612 594 398  51  74  27  32 185  10 455 324 621  17  54 127 123
  13 137 447  88 479  77  48 619 556 208 124 258 325  40 343  96 588 111 315 521 532 596 611 560 133
 575 266 480 606 125 289  64 499 418 615  58 437  38 216  65  49 354 140 207 395 551 536  93 618 131
 383 160 600 419  21  62  63 546 465 605  33 102 121  70 441 404 389 142  79 569 580 554 294 101 622

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00501e+07us (= 10050.1ms, 10.0501s)
Satisfaction error: 2
Number of search iterations: 4259
Number of local moves: 1156 (including on plateau: 445)
Number of local minimum: 366 (including on plateau: 63)
Number of resets: 3
Number of restarts: 0

Problem in row 6: 423 159 429 22 4 9 552 35 69 438 459 511 432 460 503 467 136 607 449 367 112 152 108 458 463 => the sum is 7824 rather than 7825
Problem in row 11: 246 353 309 394 114 5 329 346 436 146 173 351 392 302 420 377 299 356 342 328 288 388 476 144 512 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 258 581 612 441   3 542 184 555  33 485  68 163  90 501 541 108 556  83 580  73  25 518 528 285  12
 115  28 616 624 511 565 470  52 543 137  27 139  41 617 465 594 125 172 551  57 487 123  22 620 124
 355 321  47 434 527 574 623  88 175 610 101  58  70 468 454 167 602  78 593  36 210  53 619 531  31
  82 357  50 484 369 613 447 313  34 600 325 144 234 577 621  79 504  42 493 599  59 282 217 165 135
 109 315 155 596 615 510 345  48  23 618  18  75 564 588 512 186 151  43 463 451 503  30 192 584 131
 199 189 114 466 526 337 483 111 104 421 106 280 293 221 452 235 608  86 579 432 122 586 333 401 141
 614 113 107 568  69 550 591  77 214 178 272 211 553 160 479 587 268 105 603 218 288  92 538 158 212
 157 233 266 517 533 413 358 499 153 119 246 116 238 198 601 559 260 284 625 177 152 110 287 482 242
 183 126 194 393 514 446 438 440 582 226 202 269 343 461 496 200 222  87 297 229 622 203 267 179 206
  97 134 243 419 456 352 560 162 204 197 595 391 132 232 583 121 523 185 420 562 168 249 237 224 380
 261 329 228 360 539 410 530 129 244 171 481 332 265 302 488 407 292 209 305 215 245 250 318 240 274
 365 341 187 278 385 367 304 322 219 291 429 309 294 295 326 236 350 216 271 317 256 389 366 349 363
 230 371 140 471 395 253 254 353 400 225 262 150 308 426 327 378 169 430 361 310 340 344 373 252 303
  60 439 362 375 316 311 159 191 379 444 372 480 342 387 319 347 403 146  46 383 323 270 392 331 248
 364 103 424 148 415 289 276 231 397 354 416 346 359 306 176 428  29 296 339 279 377 264 351 477 381
 435 128 423 174 412  94 255 450 328 433 356 227 404 399  17 336 368 443 193 138 427 405 307 338 335
 394  93 406  65 442 286  99 386 241 398 475 314 283 374 196 490 259 453 205 320 431 388 127 370 330
 476 408 436 118  71 213 273 290 376 459 299  11 491 348 120 422 409 520  84 190 411 532 263 133 472
 143 529 384  38 154  80  95 606 298 497 464 545  62 486  37  66 445 460 301  19 478 590 544  67 437
 156 469 507 220   9 130 147 334 498 382  10 534 462  61  14 173 521 489  13 251 540 546 467 474 418
 552 575 448  64   7 300 181  39 515 112 500 492 402 102 170 457 145 592  56 449   5 458 455 182 567
 519 414 576  26  54  21 201 417 508  81 524 554 509  72  49 547  44 598  51 548 570   4  40 425 473
 561 566 275 277 161  20  45 611 537 281 506 578  76   2  96 164 502 607   8 572 208 513   1 136 522
 571  74  16 180 257  32 312 585 247   6 166 558 494 207 223 142  55 597 239 495 390 535 557 324 563
 569 589 609  89  85 117 195 536 573 100 605 549 516  35  63 396  15 604 149 505 188  91  24  98 525

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00506e+07us (= 10050.6ms, 10.0506s)
Satisfaction error: 2
Number of search iterations: 2841
Number of local moves: 831 (including on plateau: 240)
Number of local minimum: 248 (including on plateau: 35)
Number of resets: 2
Number of restarts: 0

Problem in row 10: 97 134 243 419 456 352 560 162 204 197 595 391 132 232 583 121 523 185 420 562 168 249 237 224 380 => the sum is 7826 rather than 7825
Problem in row 11: 261 329 228 360 539 410 530 129 244 171 481 332 265 302 488 407 292 209 305 215 245 250 318 240 274 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  34 598  70 575 512  47 612 588 106  62  45 536  79  83 577 618 479 601  29  54  68  87 606 140 619
 549  92 365 364 542 103 414 605  56  74  78 400 258  14 539 513 388 518  58 118  64  57 501 620 535
 523 600  59 596 561  51 438  30 105  73 389 465   7 153 587 602 493 534 155 119 187 102 530  20 446
 454 180 305 621  75 150 349 614 113 142 263 550 157  98 597 617 624 360   4  71  49 141 568 115 608
 557 531 478 604 126  37 464 482   6 257 463 442 125 123 236 489 498 607 179 171   3 168 216 124 439
  82 152 315 590 239 520 551  72 130 301 474 525  66 404 457 538 373 288 284 222 185 164 110 218 565
 494 548 290  89  48  94 391 207 211 178 375 567 143 147 569 570 514 544 299 367  96 302 120 146 516
 503 174 610 194 181 230  97 488 237 267 558 403 121 184 622 151 358 462 293 333 188 221 190 241 519
 485 215 495 129 160 227 553 573 616 283 352 270 330 122 154 107 199 625 172 255 220 242 243 347 451
 240 205 264 223 259 331 231 280 322 623 321 304 275 225 408 420 195 359 327 615 253  46 256 609 234
 261 209 232 245 127 235 547 337 276 297 595 282 210 233 238 405 480 507 309 329 228 296 203 244 500
 248 319 510 273 262 265 603 252 326 166 363 323 310 229 271 254 412 311 499 249 189 344 334 163 350
 345 295 384 385 132 362 390 376 247 159 200 266 313 381 286 325 395 343 396 353 378 303 335 294 182
 423 432 316 369 287 183 217 251 285 272 128 342 466 176 379 356 324  21 346 422 291 436 361 402 340
 435 320  93 198 387 366  27 421 461 393 135 332 459 308 298 341 177  17 452 397 281 336 528 269 394
 318 354 197 467 460 413  53 317 450 483 214 448 419 443  39 213 165   5 368 399 357 374 372 348 149
 440 314 219 407 426 306 277 351 434 431   9   8 246 445 437 521 274  41 355 186 502 409 424 339  24
 156 410  44 338 515 392 138 444 371 473  76 380 377 468 312 161 208 173 250  91 455 382 411 508 292
 162  55 486 481 477 541 196 415 401 505 212  86 430 418   1  36 433  84 224 441 564 490 144 458  85
 427 416 192  69 425 537  81 429  13 328 201 191 398 386  40  63 117 417 511 574 484 492 545 470  19
  33 472 456  67  22 594 101  11 496 449 406 116 546 491 158  77 447 145 563 307 580 469  32 509 278
 383 268 193 428 554 527 170  15 543  16 487 202 504 585 100  99  12  65 571 591 560 204  95 522 131
 134 111 476  52 532 613 148 169 584 566 589 112 471 540  88 109 175 370 586  28 581 579 114  60  38
 137  31 279  35  10 611 260  80 583 475 592 108 556 576 206 104  43 139 572 555 529 599 562 133  50
   2 524 497  26 506  90 517  18 453 552 300 167 559 593 226 136  42 289  23 578 533 582  25 526  61

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.35333e+06us (= 3353.33ms, 3.35333s)
Wall-clock time (full program): 3.40505e+06us (= 3405.05ms, 3.40505s)
Satisfaction error: 0
Number of search iterations: 635
Number of local moves: 403 (including on plateau: 92)
Number of local minimum: 33 (including on plateau: 11)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 610  90  52  63  79  61 453 516 622 485 606   9 557 107  23 284 125 469 613  70 568 598 447 311   7
 223 494 523 322 171  22 446 540 289 245 601 558 103 269 594  40 429 461 154 460 130  48 196 502   5
  80  10 276 508 510 135 299 173 586 549 590 559  60 542  18 143  16   1 220 395 570 166 496 473 450
  24  32 117   2 504 138 180 615 250 364 564 499 417 519 565  13 405 597 112 239 501  12 462 541 153
  51 571  14 262  34 233  65 536 475 534 175 488 470  43 596 217 427 438  89 396   3 418 495 498 297
 376 554 126 256 426  59 443 484 525 548 575 506  31 491 361  68 449 478 128   6 224  58  49 493 111
 204  35 279 302 377 356  20 589 422 551 416 397  54 474 544 102 152 466  37 456 167 351 382 507 185
 106 535 374 439 411 505  36  72 428 457 359 301 451 118 325 308 338  62 178 468 455 142 131 394 432
 192 286 273 465 174 441 370 486  29 435 404 430 337 513 434 477  30  38 172 524 205 230 110 472 298
 378 253  99 420  57 303 345 164 445  21  33 410 412 503 572 399 463 425 242 365 287 324 113 492 300
  94 265 490 400 440 588 228 108 448 346  78 292  76 393 319 140 576 295 184 202 424 350 423 372 294
 347 257 316 207 391 270 354  42 277 421 413 227 406 553 369 380 248 195 243 342 134 263 481 362 327
 339 226 179 212 214 348 514 515 367   4 611 258 328 129 341 483   8 340 415 307 291 234 264 331 567
 237 402 375  50 218  64 604 398 336 274 511 232 368 385 254 314 617 333 247 320 349 271 238 219 209
 353 312 330 531 390 288 550 222 197 275 210 127 304 306 165 419 188 283 371 280 577 259 285 310 293
 255 366 373 603 208 169 168 236 357 599 189 278 309 268  56 522 221 332 317 241 313 211 281 334 619
 408 163 355 552 321 530 252 206 381 240 318 360 260 216 162 161 566 296 386 198 442 344 190 139 379
 409 609 407 160 464 199 547 582 587 358 213 123 124 518  77  84  82 387 452 115 235 584  87 155 267
 476  69 433 182 249 520 471 170 149  81 246  74 555 401 104 533 543 431 282 191 116 363 595 147 444
 560 244 529 150 146 585 581 251  93 133 183 136 600  15  86 176 563  88 545 614  53 569 384  44 497
 521 592 114 414 605 187 158 194 101 343 193 315 436 159 612 527 261 537 290  85 580 335  98  17 151
 607 144 517 500 272 621 591  19  91  83  46 539 231  71 132 482 181  66 583 556 200 480 538 119 156
 489 593 186 225 546 109  95  26  75 383 177 122 403 201 512 479 145 388 528 326 148 329 618 120 602
 389 623 509 561  45 562  28  73  92  55  47 574 392 105 467 458 305 323 578 215 624 266  25 352 157
  97 100 579  39 573 532  27 608 203  41  67  11 141 526 137 616 487  96 459 454 229 620 437 121 625

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0001e+07us (= 10001ms, 10.001s)
Wall-clock time (full program): 1.00495e+07us (= 10049.5ms, 10.0495s)
Satisfaction error: 1
Number of search iterations: 2828
Number of local moves: 957 (including on plateau: 419)
Number of local minimum: 254 (including on plateau: 68)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 610 494 276 2 34 59 20 72 29 21 78 227 328 385 165 522 566 387 282 614 580 480 618 352 625 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  34 591  62 559  55 612  60  11  84 557 469   5 138 619 285 572 362 541 382 420 569 600 144  87   7
  66  12  43 488 548 595  58 553 514 582 599 184 201 474 175 587 324  47 562   6 574 556  22   3  52
 551 570  53 578 565 590 190 394 119 511 504  25  41 543 213 586  18 536 564  30  48 510   1  54  31
 552  89 136  24 450 470  74 616  95 520 481  39 421 530 159 477 282 407 546 261 566  19  90 410 111
 534  37  49 487   8 550 202 568  46 105 525 535  35 533  68 579 515 178 493  17 622 571 225 154 189
 442  15 135 106 377  72 482 501  97 383 518 522 255 346  59 449 435 422 161 465  65 519 478 348 173
 472 170 145 413 461 430 198 499 130 516 475 503   9 353  56 476 440 521 258 172  10 441  42 393 242
 411 484 207 143 542 359 100 366 224  14 281 433 395 532 122 194 438 418 468 451 460 310 116 118 239
 456 444 188  80 446 412  16 479 137 452 309   2 229 370 406 427 467 424 473 500 223 133 344 209 199
 369 311 182  32 286  13  67 272 365 386 425 507 303 391 471 379 280 443 455 437   4 464 415 305 263
 304 312 235 220 307  23 295 457 486 163 259 385 352 402 270 336 345 381 417 447 485 308 266 306  64
 387 264 196 480 262 416 248 361 375 398 356 419 403 343 357 374  21 339 298  92 187 342 327 354 226
 288 212 399 277 372 237 337 297 388 335 332 179 400 323 319 296 380 315 364 340 408 228 268 171 360
 367 231 404 351 211 358 328 260 330 227 256 299 436 294 316 355 236 371 301 363 439 273 221 251 347
 317 331 341 246 150 321 401 490 423 206 576 155 233 313 396 195 593 131 269  82 293 265 278 197 623
 103 292 389 216 257 373 384 219 217 575 325 349 397 279 426 554 291 463 329 142 153 267 232 271 322
 234 230 392 205 110 249 432 287  83 537 114 283 610 181 592 123 624 238 214 529 140 193 318 445 462
 250 509 496 115 148 124 414 338 409 208 247 210 448  63 625 180 156 580 166 594 191 104 300 545 405
 192 134 505 561 243 240 434 112 453 128 176  61 492 149 547  71  98 174 577 544 302 121 502 428 581
 183 523 567 506 333 218 603 203 498 244 126 127 276 215 158 147 611  78  57 513  86 151 601 252 549
 275 186 598 152 274 177 588 167 241 157 132 531 563 254 253 113  88  73 204 517 326 290 526 602 538
 222  93 585 376 141  76 512  28 429 162 169 596 489  94 528 200  40 495 160 102 606 390 621 245 466
 108 608 284 431 597 350 540  33 618  50  70 558  45  79 165  38 555  69  27  44 497 524 378 573 584
 609 617 614 615  75  77 494 185 459 120  81 314 146 109 320  26 125  96  29 589 454 139 583 491 458
  99 560 620 164 607 483 368 129 605 289  20 604 508  36 539  91 101  85  51 168 117 107 527 613 334

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 6.71748e+06us (= 6717.48ms, 6.71748s)
Wall-clock time (full program): 6.76753e+06us (= 6767.53ms, 6.76753s)
Satisfaction error: 0
Number of search iterations: 1801
Number of local moves: 813 (including on plateau: 337)
Number of local minimum: 113 (including on plateau: 30)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 607 302  22 589 499 409 380 582  68 548  62  32 558 549  52  34 333 117 443  82  50 421 440 566  80
 524  65 539 483 600 194 521 616 407  77  33  55 525 487  53  47  90 105  97 124   7 613 368 617 578
 402  36 608 594 465 512 127 477  87 478 217  40 567 619  30 213 176 219 545 108 547 466  67  51 174
 577 576  46 624 445 537 382 476  89 517 125  75 120 134  96 115  92 396 136 563 332 588 591  72 121
 390 458 234 430 612 527 528 489  63 179 145  84 592 606  71 362 151 233 106  95 155 585 490 139 101
 316 427 119 468 493 620 496 164 241 159 162  45 142 508 182 218 223 109 546 603 170 457 590 160 207
 459 623 175 485 602 169 615 622 296 197 114 246 273 165 110 192 180  74 610 190 100 534 438 215 141
 611 184 178 391  78 604 398 452 211 173 263 187 554 183 133 177 181 137 605 208 238 544 511  98 526
 251 196 231 320 507 244 580 276 621 258 140 185 126 292 214 212 250 193 552 198 415 488 538 138 400
 236 216 209 484 284 274 252 413 149 261 437 419 614 228 249 291 275 247 201 426 245 425 444 229 317
 204 618 417 226 501 222 308 264 224 279 439 303 153 295 314 265 329 156 200 243 573 403 408 271 210
 298 586 232 267 301 355 364 260 225 294 327 148 262 319 300 375 257 270 297 395 288 346 268 387 404
 353 256 337 235 239 311 341 323 397 349 336 310 237 254 436 356 324 366 318 305 377 285 406 227 147
 253 335 376 277 312 455 220 321 344 399 280 278 259 432 269 266 343 473 357 315  42 189 304 359 367
 135 289 360 255 248 393 290 392 281 330 282 475 405 354 339 463  35 230 498 358 414 283  23 394 299
 384   1 385 373 199 386 361 313  20 363 412 309 351 338 428  58 448 479 340 345 471 161  64 494 342
 286 107 322 325  59 469 118 352 515 423 306 347 383 167 453 434 272 462 429 326 365 307 104 350 144
 146 128 369  88  38 348 168 163 416 505 492 482 381 503 529 599 433  19 371 449 389 195  26 431 157
  83  66 506 150 123 410  16 172 102 424 447 442 435 454 372 522 540 370  21 480 450 293 240 420 287
 122 510 460  57  12  61 203 158 572 491 422 509  86 374 464 379 520 571 152  27 472  39 103 530 532
 401 470 331 143 388   2 132  44 569 474 205 593 556 113 542 541  70 467  11 446  13  48 188 516 562
 129 441 456 378  60  25 111  79 564   6 533 570  54  18 504 536 596 514  43 543 581   8 411 584  81
 116  76 334  41 206  14 171 166 583  85 513 575  99 418 502 551 481 497 221 486 555   4 112 518 500
  91 328 550  73 461 154 186 242 202   3 568 519  37   5 574 595 625 598 191 495 559  49 131  28 561
 451 531  29  69  93 130 557   9 579 553 565 597  56  10 609  24 601 523 535  15  17  94 560  31 587

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00009e+07us (= 10000.9ms, 10.0009s)
Wall-clock time (full program): 1.00502e+07us (= 10050.2ms, 10.0502s)
Satisfaction error: 2
Number of search iterations: 2652
Number of local moves: 868 (including on plateau: 365)
Number of local minimum: 223 (including on plateau: 36)
Number of resets: 1
Number of restarts: 0

Problem in row 20: 122 510 460 57 12 61 203 158 572 491 422 509 86 374 464 379 520 571 152 27 472 39 103 530 532 => the sum is 7826 rather than 7825
Problem in row 23: 116 76 334 41 206 14 171 166 583 85 513 575 99 418 502 551 481 497 221 486 555 4 112 518 500 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 366 509 531  10  25 566  99 602 435 554 579 590 434 511  41 145 167 589  31 527 103  79  98  33 201
 584  86 423 581  15 557 486 553 147 556 582 521 318   5 250  23 483 231 426 164 129  81   9 502 113
 562 105 617   8 217 505  19 576 108 610 563 586  17 403   4  58 539 592  30 477  51  39 543 532  64
 530 520 552  13 118 389  27 188 568 542 550 384 120 504 209  32 588 122 466 493 142  89  26 616  37
 572 251  14 125 236 591  12 506 317 233 481 560 114 518  40 259 421  43 476 596  21 575  88 551 225
  18 228 395 487  70 567 442 383  66 453 208 604  95 422 270  82 480 424  28 499 497 451 119 391 146
 609 221 456 446 117 431   1 415 237 526 484  73  16 355 130 279 458 529 396 461 252  56 388 385 104
 546  67 500 479 475 397 347  44  77 273 398 436   2 460 380 182 401 136 352 441 452 297   6 516 161
 474 150 404 541  62 386 375  47  46 430 420 491 137 469 428 144 390 269 320 513 195 268 457 359  50
  11 202 307   3 514 411 373 450 333  74 433 338 478 358 365  35 315 399 468 206 394 408 447 329 174
 406  90 266 151 369 351 101 308 376 429   7 489 448 322 413 260 286 545 305 327 354 261 409 310 242
 328  94 402 346 440 405 427 425 324 418 372 367 416  61 100 392 370 274 262 470 239 341 330 170  52
 278 303 311 387 314 280 254 473 232 245 272 374 360 267 410 235 199 342 283 291 381 282 340 348 364
 344 321 319 512 371 287 379 298 290 213 368 210 350 265 246 295 393 302 349 299 258 171 275 357 353
 419 444 240 306 257 289 332 362 234 325 464 313 227 128 407 238 215 212 535 312 256 301 176 293 540
 172 271 292 417 276 173 326 200 414 462 337 334 585 177 336 412 263 189 400 222 229 356 304 296 382
 196 494 158  97 536 197 166 143 583 224 135 140 537  36 577 490 595 524 214 187 223 503 165 183 522
 601 485 226 191 525 249 163 248 107 159 218 207 204 309 194 471 138 605 323  38 603 247 523 193 598
 244 613  42 168 620 230 515 154 555 192 160 141 565 123 465 316 300 219 343  69 220 288 432 281 570
 181 459 190 625 152 184 243  87 501 115 109  80 507 149 544 508 102 438 205 621 564 198 180 277 606
  24 361 264 587 175  68 517 339 547 124 377 255 439 437  83 593 211 558 216  76 133 619 185 155 482
  75 445 157 345 578 131 612 335 134 162  57  92 449 571 472 574  91  59 597 178 454 121 599  49 488
  34 569 561  78 528  65 467 492 148 126 127  84 186 331 496 618 203  93 156 110 533 580 624  22 594
  72 253  45 559 285  54 623  85 548 139  71  96 443  29 510 611 169 111 106 116 608 600 607 622 463
 179 284 153 363 549  63 519 112 498 241  53  60 378 615 455 573  48  20 538 132 534 614 495  55 294

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00026e+07us (= 10002.6ms, 10.0026s)
Wall-clock time (full program): 1.00513e+07us (= 10051.3ms, 10.0513s)
Satisfaction error: 3
Number of search iterations: 2640
Number of local moves: 892 (including on plateau: 387)
Number of local minimum: 223 (including on plateau: 54)
Number of resets: 1
Number of restarts: 0

Problem in column 5: 25 15 217 118 236 70 117 475 62 514 369 440 314 371 257 276 536 525 620 152 175 578 528 285 549 => the sum is 7824 rather than 7825
Problem in column 6: 566 557 505 389 591 567 431 397 386 411 351 405 280 287 289 173 197 249 230 184 68 131 65 54 63 => the sum is 7826 rather than 7825
Problem in diagonal 0: 366 86 617 13 236 567 1 44 46 74 7 367 360 265 407 412 595 605 343 621 133 121 624 622 294 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  36 433 115 209   3 117 446 583 145 608  83 553 605  38  49 549   5 508 566 200 425 592 134 222 601
 570 210  21  87   6 527 220  57  93 559 164 497 542 166 155 515 196 514 599 147 140 610 370 558 302
 560  25 531 495 126 408  92 496  77 561  84 502 603 538  60 376  34 503 492  47 533 461 162  11  48
 573  41 149 387 193 525 621 540  31  15 133 510 472  37 234 537 124 476 590 440  75   9 511 190 412
 481 122 484 482 129 509  80 443  81 532  45 451 528 441 512 545 100 505 403  86   1 489  24 350   2
  79  54 469 161 218   4 199 490 189 504  58 516 506 384 523 447 400 360 409  19 435 458 137 323 483
 413 183  14 356  23 346  35 313  65 437  46 475 456 491 424 499 401 419 477  53 111 363 598 377 450
 406 186 439 309  40 526  62 414 112 473 358 385 315 530 438 326 252 226 178 110 297 519 107 362 455
 404 457  12  59 198 357 411 569  13 454 317 369 554 579 520  27  91 306 465 257  72 381 467 479   7
 480 351 103 321 349 281 143 415 118 486 453 420 352 308 150  20 249 460 494 139 521 392 445   8 367
 290 423  90 301 430 380 277 390 217 395 262 334 364 518 343 274 383 229 353 279 310  10 284 292 397
 416 327 247 379 340 396 405 452 243 271 373 254 324 338 382 246 235 318 305 336 348 268  96 295 231
 174 337 422 418 372 314 432 240 355 316 378 389 303 250 300 329 344 270 238 213 173 335 386 365 172
 287 557 368 307 197 427 286 261 175 407 319 429 141 347 359 106 311 242 574 293 188 431 221 267 325
 288 289 258 614 342 244 205 589 361 328 224 278 233 354 345 269 291 586 298 223 283 216 296 170 241
 320 567 182 179 225 228 543  44 619 332 513 285 123 232 280 391 607 322  89 459 282 266 206 294 237
 304 622 146 613 468  17 442 185 333 236 142 251 273 158 202 144 394 399 256 470 239 195 312 536 488
 260 487 615 192 547 148 410 550 464 113 276 212 255 156 259 245 552 159 219 463 264 152 168 448 211
 214 227 299 597 478 154 374 114 462 165 571 275 263 201 248 539 109 121 388 426 171  73 594 555 207
 177 466 617 128 580 500 434 203 624 135 596  71  99 194 534 136 176  67 108 575 541 272 341 169  82
 330 181 517 498 620 131 618 153 591  68 522 130 102 595  61  56 449 101  78 421 436 180 265 120 602
  69  95 604 371 191 184  66  94 616 151 563 138 127  85 577 428 551  64  42 578 544 339 564 208 576
  74 565 331 105 529 562 556 163 623  50 493  43  29 204 187 116 546  18 119 535 471  76 402 584 444
 588 581 417 160 609  33 215  16 625 125 366  28 230 611  98 157 501  52  63 582 393 132 568 587  88
  32  39 375  97 612 507 253  51 593 104 485  30  26  70 585 548 524 600  22 474 572 606 167  55 398

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00019e+07us (= 10001.9ms, 10.0019s)
Wall-clock time (full program): 1.00498e+07us (= 10049.8ms, 10.0498s)
Satisfaction error: 2
Number of search iterations: 3674
Number of local moves: 1153 (including on plateau: 570)
Number of local minimum: 340 (including on plateau: 75)
Number of resets: 2
Number of restarts: 0

Problem in column 11: 83 164 84 133 45 58 46 358 317 453 262 373 378 319 224 513 142 276 571 596 522 563 493 366 485 => the sum is 7824 rather than 7825
Problem in column 25: 601 302 48 412 2 483 450 455 7 367 397 231 172 325 241 237 488 211 207 82 602 576 444 88 398 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  14 533  81  54 320 496 583 170 131 509 325 601 493 573 537  45  70 527  67 513 301 336  12  52 482
   7  29 503  73   1 214 356 548 322   2 166 497 549 535 588 406 254 571 488 380   4 560 585 165  22
 599  53  20 440 472 582 595 108  59  61  36 504 473 502 263 506 570 468 250 451  27 552  11  76 147
 121 524 508  21 352 459 605 562  82 516   6 217 211 363 534 251 413 519  18 126 606  37 360 129 285
 105 540 576  34 561 477 564  42 194 461 520 429 458 530 617  79 430 106  86 456  72 224  13 134 117
 523 438 591 154 402  23 395 314  78 114 408  47 241  46 511 387 443 486 198 374 421 554  80 132 465
 141 553 462 587  17  28 195 469 353   3 529 565 446 388 434 100  58 558  57 201 536 447 550  97  51
 127 563 338 547 364 391 398  19  33 354 512 464 235 442 359   8  16 193 327 475 611 474 397 116  62
 238 262 163 412  99 460 384 483  38 294 340 174 369 392 484 399  10 514 517 173 253 436 423 133 375
 355 297 467 231 463 556 202 221 275 321 437  31 457 152 551 139 500 341  89 182 244 377 361 266 310
 302  15   5 507 290 409 347 261 545 197 295 313 109 403 379 580 426 407  84 265 396 315 257 237 481
 296 411 557 268 435 555 345 158 284 136 304 306 405  66 159 288 373 286 289 343  26 367 522 298 348
 271 242 432 269 372 260 274 309 350 349 365 281 234 264 135 417 176 393 287 575 227 331 318 422 272
 255 339 282 358 220  49 323 293 277 428 539 578 330 299 337 362 276 246 376 319 334 213 273 239 280
 248 420 245 186 216 252 532 531 346 404 307 326 328 187 596 199 448 219 418  39 229 312 210 401 226
 394 228 124 283 616 200 151 119 300 594 410 162 247 175 168 607 335 171 614 449 150 240 305 415 368
 476 204 188 324 371 153 208 586 455 259  98 196 378 390  63 351 621 191 444 510 267 137 181 385 389
 466 122 450 104 256 203 454 381 610 479 270 278 209 233 258 160 590 206 102 107 433 143 292 541 478
 592 180 161 157 190 172 357 485 612 232 111 344 316 366 177 419 593 424 370 279 218 184 183 491 212
 230 205 303 544 140 207 120 130 149 164 192 236 499 142 144 427 167 597 333 624 623 189 431 425 604
 414 249  35 546 538 489 138 156 308 494 128 439 498  85 223 383  48  25 600  83 602  32 125 618 569
 445  94 291 620  96 145 113 526 480 453 329 146  75 470 112 581 222 243 501  93 115 609 185 386 495
 572 317 622 542 441  56  74 521 471 332 619 543  55 567  65 118 179  24 169 101   9  44 608 598 178
  68 382 311 416 490 400  43 342 568 574  64  71  87 215  41  88 452  50 528  92 603 225 559 577 579
 566 625 110 148 103 589  69  91 505  95 515  77 123  40  90 525 155  60 613 615 518 487 584 492  30

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00008e+07us (= 10000.8ms, 10.0008s)
Wall-clock time (full program): 1.00497e+07us (= 10049.7ms, 10.0497s)
Satisfaction error: 1
Number of search iterations: 3528
Number of local moves: 1323 (including on plateau: 626)
Number of local minimum: 282 (including on plateau: 78)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 1: 482 165 11 37 72 374 57 193 10 139 379 66 234 578 307 594 455 381 357 207 538 620 622 382 566 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 623 111 560 593 431 606  91 330 198  41 512  51  28  90  17 474  47 487  55 590  65 594  34 581 616
 413 403 544 523 602 109 117 508  97 624 475 159  53 121  46  96  70 608  59 400 133 583 591 354 137
 565 365 361 485 529 368 355 168  45 149 271  11 570  66  43 101 256 527 183 231 209 545 323 535 564
 464 112 571 610 538 540 174 114 285  84 498 113 132  92 157 542  54 596 105 622 181 459  82 585 115
 401  58 587 374  72  98 150 255 387 299 488 158 167 164 110 166  86 494 605 609 595 190 249 490 573
 558 153 184 621 203 102 155 134 136  62 574 550 201 124 579 262 204 614 186 511  61 417  73 575 586
 531 194 547 187 315 139 225 221 145 283 468 245 135 163 625 265 123 501 619 568 182 345 212 445 142
 533 313 240 189 381 100 103  76 206  77 592 604 372 205 466 618 394 353 519 228 120 224 266 395 251
 440 376 478 237 160 257 197 176 598 193 484 553 263  68 252 620 607 410 178 141 107 318  57 447 208
 496 242 295 213 215 543 416 433 267 172 259 173 138 235 147 350 229 458 236 600 154 503 274 465 312
 223 254 320 272 219 253 463 275 597 276 438 116 195 185 546 332 310 409 426 216 247 290 307 446 210
 309 298 443 284 227 260 131 130 239 408 246 303 241 528 192 268 327 567 396 188 287 398 379 384 392
 282 279 202 294 244 304 180 334 317 359 316 243 421 363 230 461 393 296 329 297 378 306 264 321 412
 358 411 286 342 328 399 360 448  21 128 451 424 383 370 367 258 278 349 291 143 423 364 289  32 322
 337 326 333 373 467 366 308  44 470 422 273 281 369 301 356 425 324  64 390 427 336 220  69 196 348
 152 305 371 331 340 288 343 430 344 311 300 415 280 556 477 497  63 177 389  31 277 414 386 325  22
  25 483 436 346 504 382 584 480   2  37  79 441 473 439 455 169 406 222 357 388 362 191 335 214  15
  10 314 437 391 270 482 442  87 452 319 347  80 338 481 460  75 449  35 125  67 534 514 516  88 513
 171 517  81 397 486 404  42  71 351 375 161 532 380 302 144 510 462  39 472 175 407 233 469 200 444
  40 500 248 453 561   6 479 420 515 454 207  18 339 536 293  23 476 119  29 418 521   3 456 292 419
 261 566  38  33   4  12 352 548 127 549  85 505 402 617 526 377 509 140 551 428 493  56 405 146  95
 162 572  36   8 457 432 450 552 539 522 126 555 471 589  78  20 518 129 165  89 492 106 599 108  50
   7  52 151 156 211 495 559 554 582 578  99 489 557 601 502 613 179  19 234 217 434   1  24   5 506
 238   9  16  30  13 269 580 530 520 541  49 218 341 615 525 199 524  94 435 148 577 122 563 170 499
 226 612  60  83  48 611 569 507 385 562  27 588 576  14 232 104 537 118 491  93 250 429 603  26  74

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00029e+07us (= 10002.9ms, 10.0029s)
Wall-clock time (full program): 1.00516e+07us (= 10051.6ms, 10.0516s)
Satisfaction error: 2
Number of search iterations: 2764
Number of local moves: 1012 (including on plateau: 429)
Number of local minimum: 192 (including on plateau: 38)
Number of resets: 1
Number of restarts: 0

Problem in row 16: 152 305 371 331 340 288 343 430 344 311 300 415 280 556 477 497 63 177 389 31 277 414 386 325 22 => the sum is 7824 rather than 7825
Problem in row 18: 10 314 437 391 270 482 442 87 452 319 347 80 338 481 460 75 449 35 125 67 534 514 516 88 513 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  19 393 592  71 526 554 324 564 543 481 604  47 558  97 484  18   6  72  10 550  94 358 552 146 162
 600  39   2   8  45 593 553 567 590 235 588 544 549 100 531  64  65 135  53 589 114  52 535  83 591
 548 210 536  89  56 171 284 345 532 557 539 561 528  70 497  62  74 559 107 533 144 165   5  33 620
 404 215 377  68  13 595 477 562 556 517 427 470 419  30 519 361 198 131 140 513 179   1 581  38  34
 476   9 152 216 307 453  24 463 297 576 467 121 488 129 505 464 153 143 119 555  81  90 509 504 524
 480 468 510 175 398 594 522 503 551 342 428  73 501  12  60 139  16  29 132   4 214 159 469 486 560
 568 473 286 268 400 426 310 515 518 466 516 498 433 151 434  57  27  43  75 482  84 222 397 169   7
 387 479 405 122 490 429 445 303  36 352 437 134 492 415 565  11 157 325 174 410 471 170 418 195   3
 282 485 461 240 432 320 211 489 196 331 425 379 444 388 392 441 247  46 155  67 365 205 318 440  66
 375 494 109 226 424 430 452 192 353 133 218 234 313 137 319 343 270 431 360 401 451 230 448 460  22
 341  32 372  21 420 385 446 376 321 348 414 326 465 396 333 329 391 308 185 362 238  14 220 359 423
 435 442 217 281 408  61 336 413 317 349 116 395 374 436 274 263 416 315 267 381 197 302 378 316 136
 373 322 272 309 383 403 314 364 369 193 394 253 455 311 273 296 248 371 334 305 285 287 194 241 276
 298 328 252 350 178 340 266 190 363 262 380 338 251 244 384 304 339 357 514 219 354 454 356 224 280
 142 355 242 459 495 120 614 295 208 191 301 299 278 294 475 335 346 330 265 291 256 370 245 327 292
 212 181 586 521 154 259 254 290 580 491 351 382 249 264 223 110 402 483 283 231 246 409 188 199 277
 236 527 156 332 115 271 610 261 239 300 243 279 229 232 269 344 523 386 512  93 546 406 275 184 257
 228 124 207 506 200 213 255 611 187 587 180 128  37 438 201 289 529 525 617 390 260 421 288 177 227
 118 608 624 496 130 104 570  96 105 141 250 126  82 622 225 530 447 202 389 145 443 449 117 233 573
 189 204 166 478 209 619  86 161 113  99  88 167 221 237 176 458 439 534 585 367 500 450  92 621 566
 148 577 182 571 602 147 158  15 598 106 173 163 186 508 203 417 542 347 596 164 101 520  26 407 368
  91 412 366 399  55 172 112  63  28  51 103 507 111 563 293 456 540 615 474 127 613 306 462 583 323
 123  58 625 538 612  35  59  44  80  87 138 206 108 603  98 574 541 125 337 149 493 607 575 599 411
 584 312  49 472 150  77  41  95  69 545  25 579  23 547  50 582 422 511 537  40 597 606 160 183 569
 168  78  79 609 623  54 102  48  76  85  20 616  31 601  42 578 487 502 605 457 499 572  17 618 258

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 5.48346e+06us (= 5483.46ms, 5.48346s)
Wall-clock time (full program): 5.53262e+06us (= 5532.62ms, 5.53262s)
Satisfaction error: 0
Number of search iterations: 1394
Number of local moves: 657 (including on plateau: 255)
Number of local minimum: 100 (including on plateau: 40)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  49   1 568 543   7  37 282 516 392  63 133 605 557  48 408 507 464 503 262 468 574  80 140 584  34
 115 619  75 558 486  41 531 492 371  25  33 553 394 121 539  70 519  53 200 514 395 469 491   2 159
  84 211 328  92 250 242 537 547  96 150 397  59 106  68 488 154 505 602 538 546 233 566 367 153 506
 434 177 396 615 544 160  61 120 101 286 184  83 549 511 611  81 188  76 504 536 473  62 393 117 563
  38  44  82 162 497  99 163 484 597 110 622 244 178 157 582 565 450  64 517 545 552  35 297 149 592
 351 540 190 198 612 267 136 610 624 148 151 124 164 187 126 475 342 617 125 608 229 243 458 108 192
 107 236 123 144 161 559 621 512 316 199 254 245  88 141 375 523 377 118 302 401 403 284 620 138 578
 382 277 128 625 616 129 158 502 146 239 380 147 185 113 601 457 119 585  26 510 477 182 181 237 423
 555 296  67 541   6 197 291   4 183 168 532 139 587 186 191 303 591 420 145 554 515  97 580 355 322
 155 308 598 246 414 438 109 388 130 235 356 501 174 167 272 280 249 575 561 366 333 454  19 288 209
 166 279 156 257 234 226 265 535 607 221  93 230 548 278 353 496  43 494 208 449 258 300 330 343 456
 614 215 241 567 368 362 306 345 212 203 320 572 227 213 370 402 424 196 315  89 135 301 214 216 398
 171 285 255 462 299 329 309 341 466 318 326 180 295 487 134 269 482 363 443 189 298 270 350 264 240
 385  11 313 310 415 325 413 238 528 195 483 127 364 429 365 312 114 379 331 260 400 122 224 336 446
 372 445 349 348 132 410 283 332 273 358 103 346 274 294 361 481 268 271 360  73  24 437 321 524 386
 116 378 406 319 599 489  16 228 381 589 337 305 344 383 293 263 314 248 359  45 194 430 169 448 172
 266 479 261 404 426 562 334 152 384 461 463 518 327 207 206 422 287  22 369  98 193  10  91 465 418
 390 391 417  87 440 374 564 275 373 201 170 323 419 453 579 222  54 131 436  69 478 376  31 467 105
  78 455 439 111 409  72 317 276 444 476 581 490 577 520  79 219 175 425 339 165 210 416 292  28 232
 405 493 583  71  20 526 509 435 340 311  13   5 460 259 218 471  15 231 407 173 387 542 289 442 220
 421  58 513 432  39 399 499 304 447 550  51 451  66 586  60  32 256 324 570  65  18 472 571 498 143
 588 431 529 411  14 412 338 112 225 569 576 521 352 389  21  90 427  55 290 354 137  27 613 142 202
 603 495   8  23 252 534 560  17  86 590 307 485 525 441 281 428 459 251  85 102 100 508 104 551  30
 357 179 595 247  12  40  47   3   9 604 527 530  36 593 217 253 223 618  56 600 474 609  74 470 452
 623 522 205  52 573 596 176  57  94 556 433  42  29 594  95  50 480 204  77  46 335 533 606 500 347

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.10973e+06us (= 8109.73ms, 8.10973s)
Wall-clock time (full program): 8.15821e+06us (= 8158.21ms, 8.15821s)
Satisfaction error: 0
Number of search iterations: 2213
Number of local moves: 720 (including on plateau: 272)
Number of local minimum: 148 (including on plateau: 42)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 619 396  25 601 391 570 551  40 131 196 104  51  47 400 183 296 510 618 566 553 106 617  56  71 127
 466 621  95 594 565 287 140 453 211  53  70  89 491 547 145 119 583  23 578 114 246 456 564 182 133
 496 514 171  61 526 585 609 598  21  84  97 128  75 554 194 314 602  72 584 105 101 614 568  43 109
 122 480 600 591 513  22 437 607  60  77 181  85 612 461 623  49 597 162 567  50 191 486  32 152  68
  98 580 469 143 384  36 421 558 562 121  81 118 604 129 574  19 184 138 589 236 625 588 168 242 158
 237 153 209 167 543 457 108 107 596 549 424  63 103  96 418 499 134 155 608 622 166 207  87 605 512
 613 524  46  67 434 624 620 185 130 439 214  90  66 615 560 179 163 193 555  74 137 476 176 243 402
 311 467 198  62 405 587 389 501 240 189 429 178 606 226 175 218 493 146 470 235 110 595 413  88  94
 234 225 124 592 517 599 436 241 357 186 192 161 208 611 280 195 300 502 408 147 160 126 393 352 279
 290 462 403 380 433 102 247 251 292 338 378 164 187 221 281 556 503 254 344 150 603 188 409 190 199
 276 398 259 285 541 204 319 272 232 172 299 238 616 227 392 379 201 507 483 388 154 231 203 248 301
 354 365 407  86 350 261 273 325 253 210 262 610 202 385 289 302 295 412 286 266 442 283 239 386 282
 368 306 320 141 331 358 351 269 489 223 250 220 322 347 303 417 423 464 304 267 205 288 197 323 339
 420 115 256 336 177 330 497 326 373 345 310 270 229 244 332 478 173 364 149 410 341 264 324 294 468
 397 275 411 363  79  76 298 349 180 268  93 452 427 446 318  78 438 550 258 343 381 422 213 394 316
 371 230 387 375 257 156 245 346 328 265 307 372 428 329  80 116 401 472 293 355 315 348 356 327 366
 426  64 361 337 174 224 291 419  73 561 546 536 359  33 212  24 249 334 151 533 593  55 376 459 435
 252 139 416 367 233 135  69 335 309 552 460 521 228  35 415 284 544 321  14 573 406  58 370 297 492
 362 219 542 490  45 399 123  31  28 534 263 522 260  92 200 377 312 431  18 559 471 443 382 414 308
 333 148  39 215  37  91 545 455 454 515 369 525 465 360 305 395 136 500  42  44 430 113 353 481 475
 441  41 444 516 277 557  27  13 487 132 495 448 447  99  48 505 451  29 157 582   3 484 532  82 528
  16  12 520 449 340 488 170  26 463 482 563 445 506 142 206 548  59   7 112 479 477   5 450 586 274
   9 432  15  30  65 169 571 165 509 504 374 527 100 537 540 383  11 579  52 278 518  17 342 523 575
   1 255 531 569 125 498  34 494 508 440 535 538 117 473 530 519   6   2  20  38 485 144 111 271 581
 313 404 577   8  83  10  54 458 539 390 529 474 120 216 222 576  57 590 217 425 159 317 511 572   4

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00012e+07us (= 10001.2ms, 10.0012s)
Wall-clock time (full program): 1.00501e+07us (= 10050.1ms, 10.0501s)
Satisfaction error: 2
Number of search iterations: 3395
Number of local moves: 1201 (including on plateau: 451)
Number of local minimum: 286 (including on plateau: 53)
Number of resets: 2
Number of restarts: 0

Problem in column 8: 40 453 598 607 558 107 185 501 241 251 272 325 269 326 349 346 419 335 31 455 13 26 165 494 458 => the sum is 7824 rather than 7825
Problem in column 20: 553 114 105 50 236 622 74 235 147 150 388 266 267 410 343 355 533 573 559 44 582 479 278 38 425 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 261 141 600   4 143  24 374 354 516  41 356 404 566 466 490 136 142 573 567 470  94  88  97 331 587
 128  30  83 602  99 401  36 485 503  21 537 501 203 511 607  23  87 618 619 344 273  62 529 489  34
 416  55 565 610 241  33 226 572 412  59 582 211  76 491 574  50  32 624 579 133 194  71 622 348  49
  17 159 589 583  57 131  77 621 531 169 242 472 550 238 576  84 213 473 347 102 283 467 153 497 195
 393 235  70 475 605 115 167 478 559 113 547 476 514 322 556 124  51 177 513 146 623 193 161  90 122
 500 189 253  67 166 155 107 430 558 165 532 611 539 173 129 149 120 570 471 616 168 164 290 597 106
 295 197 243 181 368 132 614 620 557 541 263 598 528 504 233  47  73 482 336 206 219  38 179  82 289
 562 119 297 424 162  61 250 594 218 379 248 230 147 553 215 256  98 543 458 494 134 526 461 178 217
 546 157 286 615 152 186 249 200 377 231 247 333 625 585 258 245 183 234 376 338 270 544 121 192 275
 474  42 208 144 380 390 184 236 372 455 198 335 205  78 210 580 172 232 469 397 375 535 363 603 188
 442 185 140 352 432 204 271 358 255 381 272 436 285 212 277 278 349 403 481 434 214 394 294 125 351
 251 281 305 314 111 303 282 350 300 343 346 431 332 617 367 138 330 246 342 201 360 373 310 222 370
  66 413 357 269 112 405 292 293 480 280 244 287 262 306 312 324 284 340 353 419 385 590 296 190 266
 225 463 317 221 399 334 307 298 359 220 366 228 415 365 328 304 301 148 170 361 265 426 174 388 443
  85 227 279 428 327 427 355 288 371 437 257  12 414 311 362 308 418 369 274 139  48 433 325 410 521
  28 398 299 484 486 318 389 387 209 276 468  25 116  81 326 509 329 341 135 207 364 429 423 496 302
 182 498 396 502 268 448 425 395  13 191 488  74 422 150 254 515 439 175  93 392  72 321 319 339 454
  31 604  26 264 313 459 479  16  52 323 465 176 440  53 438 519 407 386 171 105 493 267 560 378 400
 109 592 575 406 444 495   7 315  58 449 464 114  68  86 457 309 522 196 126 382 383 384 391   6 487
 446 507 447 452 259   3 525  22 156 420  95 154 337 187 536 402 483 252  96   1 518 417  79 508 523
 548 593 421 104  14 596 409 101  64 520  27  91 158 137  75 411 477  35 160 563 291 456 450 591 533
 435 460 451 237 551 606 578  69  80 506  60 130 441  11  37 549 530 110 345 538 408  54  45  10 584
 564 540  89  63 552 568 545  40  56 542 462 320   8 199  44 554 609  43 127 103 555 151  65 534 492
 561 223   2  15 613 445 569 180 453 239  39 595 145 601 118 512 577 163 100 229 612 202 608   5  19
 260 517 527   9 571 586 108 123 316 524  20 581  29 588  46 499 599  92 117 505 224 240 510 216  18

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00498e+07us (= 10049.8ms, 10.0498s)
Satisfaction error: 2
Number of search iterations: 2658
Number of local moves: 1009 (including on plateau: 544)
Number of local minimum: 218 (including on plateau: 67)
Number of resets: 1
Number of restarts: 0

Problem in row 4: 17 159 589 583 57 131 77 621 531 169 242 472 550 238 576 84 213 473 347 102 283 467 153 497 195 => the sum is 7826 rather than 7825
Problem in row 8: 562 119 297 424 162 61 250 594 218 379 248 230 147 553 215 256 98 543 458 494 134 526 461 178 217 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 104 469 389 620 142  25  54 568 569 419  22 126 364 555 517 252 598 124  69 513  92 610  60 340 224
 592 595 530 141 139   4 406 602 563 561  11  79 608 452 100 527 523 147  49  44  53 572  78 347 102
  73  58 379 596 583  75 152 460 599 165 586  83 558 468 164 594 359  70  56  91  72 483 622 385  94
 122 167 391 612 106  50 148 606 411 605 135 429 584  76  33 604 488 451 163 143 140 597 129 501 134
 105 536 459  29 542  87 442  14  35 190  21 191 575 504  66 262 487 394 529 157 616 589 170 582 243
  77 219 465 372 431  27 234 579 412 580 573 123 367 510 101 373 546 430 118 240 171 109 159 516  93
 117 169 511 132 203 172 615 316 539 540 331 133 370  68 294 244 603 115 283 400 453  67 355 600 195
 131 196 570 526 263 255 271 544 151 162 160 211 214 485 179 560 434 571  57 336 150 498 113 562 226
 168  90 368 220 366 205 502 458 481 193 188 218 199 550 223 303 375 388 116 257 242 576 499 466 174
 327  96 588 182 181 249 108 201 310 232 270 228 543 256 334 204 376 250 551 267 380 261 467 339 625
 343 246 552 186 241 404 494 337 237 593 297 463 209 323 215 304 392 278 318 302  51 235 198 320 287
 285 253 403 324 268 210 578 245 175 221  74 325 423 273 290 399 408 269 206 360 398 275 490 496 177
 229 393 279 288 312 301 127 397 338 289 317 272 264 326 239 212 352 265 307 281 335 300 507 440 455
 414 216 309 365 332 233 254 292 402 293 351   8 222 613 371 260 362 225 291 357 230 128 521 407 369
 484 200 227 381 329 413 591 202 136 328 449 386 284  17 231  64 306 333 361 344 486 405 409  12 447
 416 345 286 280 319 506 238 138 144 178 387 444 410 354 438  41 180 348 533 311 342 308 426   5 448
 415 358  15   2 441 500  26 130 145 464 194 457 295  48 425 382 192 505 428 456 341 350 383 349 524
 478  43 378  59 475 277  24 315 313 512 258 443 330 587 491 476 208  16 557 187 377 185  45 282 509
 418 522  46 346 497 462 120 474 305  99 363 585  62 424 461 189 207 154   6 480 547  63 314 236 445
 435 493 110 161  89 577 296   9 437 384 471 532 401 119 421 114  95 259 482 535 450  61 197  80 617
 531 374 183 353  19 548 503 525  13 528 433 276 176  20 155 149  23 514 472 553 248 217 417 173 422
 432 623  52 609 492 541 477 121 356 213 107 495  98 184 321 274  36 266 251  71 427 396 299 146 538
 537 581  32 556 395 479 564 156 247   3 607 446 103   7 567 519 125 390 473  40  88 322 420 158  10
  84  34 137 454  42 614 554  97  37  55 619 298  81 520 624 489  38 518 590 534 621 153 111  82 439
 508 549 166  31 618 611  47  39 470  18 601 574  85  86 565  30 112 545 559 566 515  65 436   1  28

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 8.34389e+06us (= 8343.89ms, 8.34389s)
Wall-clock time (full program): 8.39278e+06us (= 8392.78ms, 8.39278s)
Satisfaction error: 0
Number of search iterations: 2281
Number of local moves: 878 (including on plateau: 416)
Number of local minimum: 168 (including on plateau: 49)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 548   7  73 597  89 436 134  35 551 562  18 552  38 549 594 599 441 148 372 543 537  15  59  60 268
 605   8  28 180  41 524 566 287 182 596  19 588  37 586 206 580 401  94 439 509 149 504 130   3 563
  22  47  21 403 142 502 568 514 532 254  98  10 120 557 603 564 114  78 581 115 559  67 246 500 608
 190 138 214 517  64 570 508  44 519  27 442 572 174 560 527  29  92 139 259 499 478 117 126 507 513
 464 484   2 195  31 542 556 445 390 483  62 590  46 539 197 531  49  32  99 512 243 422  14 444 453
 482 474 111 592  83 414 462 451 496  30 497 463 147 437 547   4  13  82  81  42 438 457   9 523 490
 528   1 219 398  40 155  39 486 487   6 447 446 470 402 435 319 146 160 103 460 476 485 183 409 525
 535 369 220 469 106 424 366  48 291  86 326 510 348 473 392 112 169 168  50 340 533 404 290 363 433
 530 427  90 361  56  84 503 501  72 166 454 394 452 406 411 397 227 370  74 410 136 477  77 307 443
 450 335 321 385 132 440 405 426 368 393 417 223 233 479 521 198 383 170  36 305  43 107 371 373 311
 432 461 141 413 240 407 357 332 314 318 421 302 382 415  12 309 396 258 238 193  11 288 386 379 420
 380 341 322 345 320 354 232 277 431 323 360 429 252 338 282 329 276 203 387 310  55 346 339 299 295
 266 364 283 281 344 391 271 334 351 553 358 330 241 173 374 222 347 306 249 297 188 333 456 228 285
 327 272 377 300 359 343 210 260 303 265 216 352 231 367 230 270 400 353 229 448 289 280 555 239 350
 269 399 466 245 242 316 313 267 328 186 544 237 613 212 205 408 278 181 211 325 304 133 225 620 298
 263 308 381 244 558 337 301 275 247 286 312 273 349 221 293 257 279 264 425 388 199 253 423 171 518
 208 191 365 616 494 284 375 294 395 226 153 217 471 224 196 362 416 583 262 235 177 218 480 248 135
 251 213 465 143 579 154  70 536 152 459 274 215 140 185 595 178 505 458 250 324 577 159 550 209 184
  34 118 472  68 587 378 625 356 207 522  24  95 131 145 604 179 455 355 617  58 331 601 492 167 204
 127 256 609 176 618 202  97 157 194 428 585 172 163 187 144 119 495 576 589 565 161 573 468  63 101
  80 384 598  16 449 234 488 389 200 430  85 124 611  87 189 602 571 624 419 102 578 164 110 162 129
  33 582 475 621 610 121 125 150 151 574 158  20 546  54  17  76 342 623 516 137 434 619 575  91 175
  66 584 418  51 545  52  71 292 109 412 520 541 489 108  23 615 156 511 612 123 317 296 255 606  53
 113 569 540  93 567  57 122 600 467  75 554  65 607  96 100 561 538 591 201  79 236 192 515 261  26
 622 493 614 116 529 104  61  69  88 165 481 105 534  25 128   5 336 498 526 506 376 315 491 593  45

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.52888e+06us (= 3528.88ms, 3.52888s)
Wall-clock time (full program): 3.5777e+06us (= 3577.7ms, 3.5777s)
Satisfaction error: 0
Number of search iterations: 638
Number of local moves: 499 (including on plateau: 126)
Number of local minimum: 32 (including on plateau: 16)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 142 316  64 375 512 625  72 619 467 334 184  57 579 344  53 107 541 501 111 468  25 118  36 583 592
 418 288  58 476 106 521 569 393 358 160 515 148 475  47 431  54 578 378  94 250 100  44 209 618 537
 123 561 458 615 534 523   4  65 549  27  10 200  30 178 485 497 401 114 264 328 429  97 387 450 496
 141 377  52 345 531 145 153 494 440 104 610   9 607 219 574 143 139 596 167 348  95 599  75 380 482
 157 603  60 577 433 191  96 125 152 251 488 171 593 213 442 284 614 124 207 414 225 571  63 438 333
 434 460 108 457 193 562 163  77 121 162 617 281 147 122 519 241 624 451 483 340 616 132  90  67 359
 220 385 266  87 312 146 310 192 552 172 622 408 559 427 484 210  70 343 416 246 290 582 169 187 170
 161 568 606 602 260 218 259  39 558 436  78 136 211 524 479 238 426 598 239 222 322 174 231 109 131
  20 379 280 604 229 168 445 179 493 369 556 164 506 256 453 364 544 236 215 216 252 155 233 349 159
 234 244 217  49 588 550 425 584 249 597 388 127 228 120 181 612 257 409 361  86 135 267 309 363 245
 137 352 499 273 285 311 173 283 415 247 547 243 186 188 396 539 240 324 357 223 278 321 212 509 287
 595  42 294 390 306 166 339 262 105 286 546 133 204 326 268 208 201 274 323 397 389 570 403 400 398
 319 367 346  73 300 329 203 337 511 190 292 331 265 258 405 301 590 270 362 330 205 194 412 299 336
 279 199  46 382 335 347 422 235   5 384 437 304 419 489 360 391 182 317 356 269 456 156 601 325 129
 471 242 353 452 432 237 372 272 295  19 113 303 355 533 371 413 305 492  45 365 315 253 297 314 206
 620 517 478 115 197 103 180 230 580 424 189 342  59 276 293 423 282 318 410  15 439 308 332 248 447
 566 175 542  32  41 404 503 254 289 392  68 411 406  91 338 255 374 449 224 448   1 383 462 263 454
  31  50 381 502 154 420 443  76 102 514  71 421  98 373 277 435 548   6 465 150 529 486 477 417 399
 463 376 320 232 500 165  84 395 110 487  13 522 480 428 185 307   7 572  29  85 518 516 554 126 351
 504 623 525 158 538 183 505 461 151 495  83 545  17 510  43 128 469 327 202  55 565   3 195 227 313
 540  99  11 581  16 198 474 473 543 446 298 444 464 459  35  89  34 402 354 587  80 513 528  88  69
  38 112 455   8 466 490 576 551  28 563 261 613 386 508  61 560 176  18 430 291 527  33 526  14 134
 585 221 296 214 472 470  66 608  24 140 481 573  51  79 275 370  81  40 536 609 441 557 138 368 130
 605  92 535  82  37 341 498 600 532 507  56 589 407 271  23 101  26 117 564 553   2 226 366 621  74
  22 177 575 144  48  12 491  21 196 119 302 350  93 586 394 555 116 149 611 530 591 567 520  62 594

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00604e+07us (= 10060.4ms, 10.0604s)
Satisfaction error: 2
Number of search iterations: 2680
Number of local moves: 894 (including on plateau: 375)
Number of local minimum: 234 (including on plateau: 47)
Number of resets: 2
Number of restarts: 0

Problem in row 6: 434 460 108 457 193 562 163 77 121 162 617 281 147 122 519 241 624 451 483 340 616 132 90 67 359 => the sum is 7826 rather than 7825
Problem in row 9: 20 379 280 604 229 168 445 179 493 369 556 164 506 256 453 364 544 236 215 216 252 155 233 349 159 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 206 594 561 535 615 307  28 499 317  82 622 398  81 144 580 452  27  17 616 492 100 150 261  42  99
  85 138 139 586  74 419  96 442  49  72  53 480  30 104 595 505 447  79 608 562 619 536 517 274 316
 573 460 625 598  68 582  56 479 123 121 484 489  54  97 552 196 132  33 571 469 101 178 248 114 422
  84 617 425 624 430 542  58 531 404  48 134 501  75 163 412 289  90 125 153 549 599 593  95 109 175
 180 275 609 504  83 620 199 611 190  73 225 471 119 487 270 136 149 126 296 486 606 164 279  60 607
 242 256 515 569 217 305 135 540 543 229 304 231  89 207 268 485 170  47 588 421 116 438 269 129 512
 112 406 167 420 208 513 613 253 219  21 188 623 202 218 288 258 265 113 354 526 451 568 128 108 603
 115 581 259 462  98 159 246 428 146 318 238 621 102 173 297 520 224 579 189 391 278 482 257 195 467
 245 194 461 534 230 285 250 464 472 133 186 213 362 239 252 319 271 312 192 541 183 584  78 264 560
 111 322 333 403 234 618 151 215 326 174 185 532 302 255 511 596 154 140 228 249 209 247 363 408 559
 233 236 294 387 171 590 340 385 417 251 597 474 106 204 383 321 216 272 291 263 468 276 205 137 308
 503 337 375 456 306 490 369 374 359 334 227 214 343 393 260 240 168 220 328 389 156 323 314 165 182
 382 201 286 280 254 222 342 277 463 370 324 232 266 332 327 392 338 262 367 388 179 418 226 372 325
 293 397 402 184 349 378  35 267 366 221 390 395 494 441 284 298 396 409 315 373  57 198 361  24 498
 360 400 124  25 292 311 429 394 443 273 407 295 283 386 148 436 458 350 130 368 522 203  46 413 329
 344  23 481 166 381  91 376 351   4 478 352  64 313 415  51 365 320 510 371 177 523 427 433 454 355
 401 435 172  67 353 384 357 155  36 310 358 488 556 524 446 495  19 473 440 212 181  94 379 449  41
  12 453  65  70 416 287 335 439 377 500 341 301 483 411 448 309 399 477 507  37 118   6 356 491 187
 455 423 142 152 339 223 424  34 347 380 437 210 426 516  86 550 300 465 145  32 364 336 551 475  13
 502 525 141  59 574  93 176 103  71 545 576 197 519  14  66  16 476 514 493  18 509 533 577 459  69
 431  61 193 147  29  38 587 120 470 612 405  26 346 434 537 122 529 566   2 200 547 191 444 544 244
 605 131 414  62 546 303 445  55  92 539  31 160 610 528 281  11 567 565 508  76  52  77 410 601 157
 564 107  39 348 578   5 585 105 557 614 161  80 527 600 282 127 604 570   9  40 563   3   1 466 290
 457  10 553 143 530  45 602  63 496 555 592 110 583 518  43  88 548 169   7 235  87 211 521 497 162
 330 243  50  44 450  15 591 241 538 572   8  20 554  22 158 299 558 432 117 331 237 589 506 575 345

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00472e+07us (= 10047.2ms, 10.0472s)
Satisfaction error: 2
Number of search iterations: 4144
Number of local moves: 1439 (including on plateau: 687)
Number of local minimum: 396 (including on plateau: 102)
Number of resets: 3
Number of restarts: 0

Problem in row 9: 245 194 461 534 230 285 250 464 472 133 186 213 362 239 252 319 271 312 192 541 183 584 78 264 560 => the sum is 7824 rather than 7825
Problem in row 22: 605 131 414 62 546 303 445 55 92 539 31 160 610 528 281 11 567 565 508 76 52 77 410 601 157 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 620 592  71  93  48 466  81  90  67 621 131 460  59 615  76 610 569  36  68 590  31 526 625  56 624
 549 619  73  53  85  92 407 540  78 599  41 547  49 117 605 565 527 472 144 473  34 254 267 133 502
 574 529 212 173 538 206 159 409  75 513  91 428 151  38 560 179 111 486 562 112  29 583 584 426  97
 531 412 464 618 548 174  99 105 106 257 135 371  50 467 101 301 544 479 501 228 172 377 156 489 140
 390 587  82  46 603 110 139  54 197  89 153 597 623 129 508 402 504 369 104 289 453 566 307 429  95
 534 188 536  55 122 616 141  45 102  86 186 270 154 152 184 517 545 311 577 622 604 493 160 488 137
 357 116 190 211 132 126 138 176 375 606 127 614 121  44  72 579 524 250 570 196 585 452 293 607 364
 503 236 367 272 546 157 171 427 182 286 383 297  69 266 178 543 168 273 241 498 203 598 268 406 287
 363 316 249 205 262  96 361 332 313 193  98 600 109 149 221 347 380 601 251 430 431 602 118 591 207
 315 567 177 302 550 358 248 227 283 234 306 471  47 256 142 418 194 356 298 124 507 537 292 480 136
 454 259 324 237  87 199 351 339 350 343 617 214 278 224 322 288 148 561 384 320 202 285 294 500 245
 505 318 368 187 447 354 219 175 265 303 310 304 321 213 230 191 123 608 435 225 359 258 296 400 411
 432 166 277 238 330 323 404 342 328 312 299 217 226 232 340 392 314 463 365 210 352 329 264 281 389
  58 280 334 353 417 327 373 309 244 348 382 366 325 291 242 397 233 119 386 376 183 440 477 260 305
 326 269 470 218 362 290 419 408 215 284 274 425 496 349 282 387 422 209  10 494 229 378  52 220 337
  60 381 295 573 338 442  79 240 433 222 398 413 393 246 275 385 255 355 523 243 253  70 370 247 336
 198  62 335 403 461 300 401 180 344 456 388 391 449 451 263  84 147  39 535 424 436  28 559 145 346
 252  77  40 445 514 515 481  22 414 405 443  20 512 482 372  21 420 200 345 107 331 165 455 231 556
 143 415 360 437 308 522  42 399 511 528 491  63 434 448 516 125 485   3 474 483 421  16  80  33  88
  43 423 497 542   5  65 438 446 379 539 557 146 509 444 594 164  30 223 396  18 506 155 499 192  15
 167  35 462 475  19 115 492 469 319 571 341 108 450 520  74 114 317 410  11 554 130 204 555 395 518
  26 169 551 476 441 510 580 530 458   1 612 201 439 586 484 333  51 161  12   2 495  24  37 113 533
 185  64  17 589 459 416 576 394 613   8 374  94 609 581 541 150 158   9 457   4 552 195  23 189 568
  32 575 478 134  83 521 468 595 611  14 588 181 465 519  61 276 103 239 163 271 261 128 216 279 564
 208 170 596 490 120 525 558 572 563   7 100  27 487   6 582  57 553 593  13 532  66 162 578 235  25

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.98947e+06us (= 3989.47ms, 3.98947s)
Wall-clock time (full program): 4.03833e+06us (= 4038.33ms, 4.03833s)
Satisfaction error: 0
Number of search iterations: 803
Number of local moves: 587 (including on plateau: 206)
Number of local minimum: 36 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  89 263 590  17 532 505 569  40  48 545 511  11 602 570  82  33  15 592 531 145  25 522 555 146 287
 278 246 346 150 107 485 527 125  21 549 599 574 566 536 568 134 181 600  39  80 591 448  49  12  14
 563 116 176  56 494 137 551  31 237 486 589 308 525 565  72 180 165 537 529  28 452 526   5 414  83
  10 112 300 351 415 235 579 129 349 535 503 161 417 588 445   7 392 559  37 471 480   4 560  98  88
 411 198  87   9  44 501 567  51 479 403 497 211 586 521 493  94  62 516 543 450  27 554 365 109  47
 524  36 244  29 430  50 513 500  68 408 520 311 473 183 506  16   3 553 472 140 580 439 498 328   1
 405 223 250 189 410 388  13 379  54 453 154  26 401 399 260 404 135 483 581 466 595 446 451 117 143
 470 201  97  32 305 224 389 541  46 523 370  59 530 434 426 514 468   8 139 152 245 431 557 423 241
 420  52  64 124 254 292 363  75 489 487 469 118 441 488 528 416  74 347 406 391 572 496 337  23  99
   6 220   2 283 562 387 507 373 102 362 338 542 334 233 364 264 380 394 133 424 281 361 332 428 213
 342 269  81 209 157 266 275 276 459 490 462 330 352 271 131 457 343 458 323 407 350 256 273 320 268
 440  43 261 190 409 383 369 325 385 221 454 315 188 302 412 348 279 316 288 212 277 366 421 327 294
 155 259 393 376 186 274 185 322 382 293 371 240 318 243 515 335 312 270 339 467 149 443 374 377 247
 100 310 550 400 355 397 179 217 252 234 267 519 126 587 291 372 384 321 290 319 301 282 187 225 360
 344 475 208 484 422 231 357 378 345  86 285 353 238 262 295 296 239 419 341 280 253 227 299 313 395
 304 463 390 354 340 359 216 163 314 512 324 601 127 286 257  65 205 258 289 309 232 381 307 251 518
 130 578 303 425 214 608 297 194 331 228 326 615 284 166 248 218 564 196 444 122 230 207 200 202 495
 164 464 499 438 597 547 367 492 178 115 199 298 356 168 265 138 396 195 132 329 229 255 136 413 455
 193 418 571 398 141  55 447 605 612 120 182 476  45 215  92 556 306 177 375  91 204 184 159 607 596
 368 242 585 491 147 594 121 619 552 249 103 333 169 219 173 192 573  58 272 482 206 153 101 437 386
 433 546 609 477 336 191 167 624 172 128  61 174  38 160  78 548 226 317 449 108 606 148 162 625 442
 358 603 436 617 197 435 151 618 561  93  69 429  20  84 114 613 538  30 158 175 110  57 222 517 620
 111 575 474 604 144  77  79  67 427  71  90 236 170  76 539 533 611  53 510 598 105  70 593 610 402
 623 481 203 540 504  85  18 104 502 210  60 544 456 113  95 614 465  96  34 621 142  35 616  42 622
 584 432 106 582 123 119  19 577 460  24  22  41  63 156 576 478 509  73 171 558 583 534  66 461 508

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00022e+07us (= 10002.2ms, 10.0022s)
Wall-clock time (full program): 1.00509e+07us (= 10050.9ms, 10.0509s)
Satisfaction error: 2
Number of search iterations: 2700
Number of local moves: 875 (including on plateau: 343)
Number of local minimum: 212 (including on plateau: 41)
Number of resets: 1
Number of restarts: 0

Problem in column 18: 592 600 537 559 516 553 483 8 347 394 458 316 270 321 419 258 196 195 177 58 317 30 53 96 73 => the sum is 7826 rather than 7825
Problem in column 25: 287 14 83 88 47 1 143 241 99 213 268 294 247 360 395 518 495 455 596 386 442 620 402 622 508 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 616  61 625 486 596  75  46  81 508 607 130  85 170  50 364  82 103  52 109 611 472 369 356 599 572
  70 618 544 400 606 469 197  88  58 149 539 111  92  38 601  77 100 577  59 623 593  98 123 551 444
 595  36 529 483 449 622  40 177 287 160 132 608 142  66 379  43 180 485 342 583 578  74 570 189  76
  78  72 401 347 391 548  27 107 157 614 178 609 624 108 581 235  84 534 102 524 248 576  60 118 502
 209 124 547 582 464 104 175 173 592 127 101  86 621  32 481 186 586  65  63 445 617 202 159 591 493
 192  53 151 590 470 619 416 171 613 174 265 228 558 112 388 121 211 398 148 450 598 201 155 106 437
 163 195 284 602 326 158 538 221 603 134 441 600 565 116 126  64 153 383 574 227 427 119 207 138 461
 466 331 188 491 467 256 386 185 193 223 253 507 311 259 589 115 172 612 176 216 532  94 144  91 568
 145 420 117 381 457 166 324 245 113 213 274 203 243 315 181 402 575 313 271 506 482 285 588 471 135
 183 446 120 363 480 128  97 615 476 317 169 230 319 232 262 332 448 384 374 392 382 191 336 205 344
 150 370 260 280 440 350 220 293 415 571 289 233 264 137 620 136 275 291 272 306 286 428 226 354 359
 238 156 269 312 290 257 194 250 378 309 373 543 346 325 277 295 304 266 241 458 410 225 343 406 360
 372 200 161 368 301 270 273 249 455 236 300 308 206 263 340 366 244 190 456 353 217 349 610 377 361
 303 389 246 432 281 292 327 318 337 425 252 348 412 297 358  25 208 339 278 288 418 345 310 276 321
 199 341 357 162 240 307 362 403 334 355  62 218 411 468 322 515 314 320 414 422 133 365  19 484 298
 329 242 463 122  99 219 460 296 380 196 328 279   8 399 371 247 477 394 434 351 210 393 521 439 168
 494 569 302 305 224 268 352 395  79 413 267 367 429 385  21 387 335  55 421 333 222 294 338 254 316
 424 479 143  39 214 447 510   3 545 489  69 523  33 526  95 517 436 282 451 152  34 487 503 376  48
 556 519 426 182 258 475 164 459 105  16 375 438 330 404 407 585 550  83 212  28  90 129 452 567  15
 473 584 527 239  93  11 511 594   5 417 522  71 408 516  18 579 509  35 431   7 147 553  54 492  29
  20 261 430 114  37 549 497 542 560 566 453  45  68 535  17 397 478 442 231  96  10 419 546 423  89
 500 557 409  14 165 141 454 390 204 518 433 555 435 597 215 564 283  24 514 140  80  12 405 167  49
 531  13   1 255 187  57 229 495   6   9 559  51 604 528 587 554  23 573 561  73 499 580 251 125 474
 488 299   2 131  56 541 525 562  26  67 563 537  47 512  41 536 237 530 552  87  30 504 505   4 443
  31 490 323 146 234 496 501 513 396 520 498  42 179 605 184 465 540 198 139 154 110 533  44  22 462

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00026e+07us (= 10002.6ms, 10.0026s)
Wall-clock time (full program): 1.00512e+07us (= 10051.2ms, 10.0512s)
Satisfaction error: 2
Number of search iterations: 2805
Number of local moves: 960 (including on plateau: 353)
Number of local minimum: 225 (including on plateau: 45)
Number of resets: 1
Number of restarts: 0

Problem in column 4: 486 400 483 347 582 590 602 491 381 363 280 312 368 432 162 122 305 39 182 239 114 14 255 131 146 => the sum is 7826 rather than 7825
Problem in column 25: 572 444 76 502 493 437 461 568 135 344 359 360 361 321 298 168 316 48 15 29 89 49 474 443 462 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  82 500 325  75 607  98 543 192 442 467 364 568  57 557 551 563 437  31   7  40 561 462 155 136   5
  16  22 592 279 552  30   4  41 593 583 352 522 383 614 606 134 530 122  11 164 590  12 480  27 566
  37 239 581  71 519  49 456 394 535 102 470 176 121 572 178   3 577 396 440  26 351 186 481 348 517
  39  78 477 597 588 360  46 207 611 275 101  84 599 123 521 485 331 484  51 460 602  48 524 113  21
 463 446 139  70 303  24 294  33 579 166 159 525 165 540 507 184 584 392 464 451  73 260 233 431 340
 528  36 526 441 575 391 549  94 473 466 285  58 114 624 534  13 515  32  23  15 447 253 181 116 536
 361  97 478 376 494  74 197  68 570 511 251   2 137 600 318 479 491  38   6 586 409 492 326 106 358
 505  77 585 518 542 277 429 147 126 465  47 490  64  85 359  14 532  28 413 434 458 541 115 125 449
 402 427 472 339 407 128 411 190 132 335  92 406 433 412 317 118 195 198 469 365 362  56 307 378 474
 343 109 333 255 353 216 298 278 418 379 258 558 386 342 316   1 312 247 388 432 419 292 142 377 373
 408 354 448 496 259 120 414 269 371 306 262 573 302 224 338 369 282 199 246 344 236 309  95 179 422
 510 327 322 257 226 308 349  89 268  59 345 330 265 596 439 286 208 363 191 234 576 270 341 329 337
 421 320 288 398 240 430 140 332 167 284 367 397   9 415 334 482 336 227 493 356 249 372 242 289 237
 158 425 300 117  44 390 235 357 212 457 404 502 266 499 200 323 350 328 252 154 206 243 487 296 620
 347 314 152 483 256 410 144 426 254 272 617  60 310 305 423 370 135 452 232 267 299 189 287 571 250
 274 385  83 399 143 311 175 203 622 609 366 313 516 319 157 281 228 453 153 471 220 231 230 382 301
 380 283 293 196 304 374 201 506 215 569 112  10 211 162 346 210 393 290 400 538 202 554 621 436  19
 107 214  87 489 445 537 187 450 163  88 498 171 188 173  79 560 148 619 146 424 222 416 548 550 315
 174 555 368 209  67 183 616 539 217  29 508 124 438 194 221 580 156 495 381 273 111 375 488 263 261
 151 355 161 138 141 512 172 594 403 603 529 591 475  34 149 229  52 574 601  90  93 185 213 459 321
 150 295  45 241 454 503 204 598 244 127 387 168 582  62 513 219  69 514 587  17 245 133 443 461 565
 608 497 104 553 145 544 523 562  63  76 324 291 527  54  42 545  96 238 297 271 160 559  65 578 103
 567 604 615 280  86 395 129 384  61 105  72 531 468 193 223 546 533  55 564 180 476 435  53 170 100
 182 248  43 131  50 605 589 444  66 401 486  99 389 108 119 218 205 595 501 623 177 547 264 625 110
 612 618   8 417  25 556 520 428  20  91 169 276 420  18  35 613 130 455 509 610  81 405 504  80 225

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00016e+07us (= 10001.6ms, 10.0016s)
Wall-clock time (full program): 1.00502e+07us (= 10050.2ms, 10.0502s)
Satisfaction error: 2
Number of search iterations: 3763
Number of local moves: 1258 (including on plateau: 616)
Number of local minimum: 329 (including on plateau: 70)
Number of resets: 2
Number of restarts: 0

Problem in row 18: 107 214 87 489 445 537 187 450 163 88 498 171 188 173 79 560 148 619 146 424 222 416 548 550 315 => the sum is 7824 rather than 7825
Problem in row 21: 150 295 45 241 454 503 204 598 244 127 387 168 582 62 513 219 69 514 587 17 245 133 443 461 565 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 216 161 167  15 495 347 510 591 138  58  57  93 543 550 459 593 553 408 554   1 521   4 598  13 180
  18  37 112   9 480 111 614 585 528 529 239  52 596  11 542 530 603 540  14 206 428 209 607 178  47
 104  71 231 503  10 176 535 560 146 110 402 504 604 514 566 609 283 578   3  87  17 157 499 482  74
  20 149 103  98 517  44 421 458  21 497 233   5 502 568 509 584 481 247  55 534 491  26 533 505 224
  78 278 119 158  82 484 605 496 441 440  32  86 546 547 447 488 512 352   6 556  38 469 438  77  50
  25 331  80  56 403 117 563 454 606 332 234  19 539 424 561 349 518 378 477  12 511  53 389 392   2
  16  75 129 462 427 524  22  27 466 118 411 431 513 153 525 579 473 548 436 181 430 395  34 422  28
 223 109 105 409 414  36 434 527 451 382 410 582 388 376 381 490  70 116 455  60 483 444 262   7 211
  95  69 165 446 468  48 250 463 418 433 341 453 448 339 461 308 249 358 383 183 337 195 124 515 276
 156 423 281 372  24 429 460 338 507 397 317 351 120 328 348 426 172 162 391 305 500 177 419 277 145
 205 405 270   8  29 148 327 323 215 452 364 442 406 373 390 399 470 356 420 425 415  61 273 432 217
 298 289 306 377 268 384 311 450 380 439 343 366 302 300 316 242 236 227 265  23 374 368 274 412 275
 416 435 353 375 346 370 336 293 207 400 354 292 194 357 326 303 169 350 310 229 280 269 191 371 299
 516 319 320 340 264 282 329 232 218 134 160 467 369 287 257 210 393 267 365 385 304 387 315 344 361
 401 284 565 237 362 333 345 443 359 230 285 263 295 367 279 150  81 363 225 394 253 334 286 254 437
 465 570 266 147 325 221 297 144 244 271 599 551 188 189 252 379 498  35 199 532 220 398 203 246 386
 413 479 245 168 143 240 222 261 360 258 494  54 154 307 321 159 213 493 255 472 137 608 301 594 474
 235 501 590 531 198 322 197 259 309 208 122 190 152 251 248 166 291 602 290 396 219 580 182 186 600
 487 601 449 179 296 214 312 200 187 569 619  90 123 102 101  97 202 272 597 523 192 552 201 184 476
 610 595 583 617 130 622  39 256  99 107 573 520 238 141 108 142 508 185  66 241 212 538 121 260 314
 558 193 564 228 589 417  65 173  62 163 492 135 226 586  51 204 170 174 164 171 541 313 611 489 486
 506 475 624 335 536 576 485  92 196 559 562 537  88  89  84 155 140  91 175 126 132 243 127 318 574
 572  67 324 623 139 445  63  73 612 478  45 294  72 571 114  59  41 100 588 618 113 407 621 330 456
 577 342 519 557 288 464  40  94 625 125  31 522  68  46 115 128  42 544 587 616 581  83  85 133 613
 615 567 355 575 592 471  43  33  30 136 106 526 151  49  64  76 457  79 545 549  96 555 131 404 620

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.38422e+06us (= 4384.22ms, 4.38422s)
Wall-clock time (full program): 4.43269e+06us (= 4432.69ms, 4.43269s)
Satisfaction error: 0
Number of search iterations: 1086
Number of local moves: 561 (including on plateau: 153)
Number of local minimum: 60 (including on plateau: 13)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 166  44 143 523 186 625 537  49 124 111  41 292 623 535  60 574 199 555 547  37 590 553  26  97 588
 593 622  90 592  58 561 475 184  62 160 597 107 572 130  22 162  28 463 444 121 581 610  52 508  31
 538 614 397 325  54 580 521 563  11 609  24  65  66 543 112 351  12 202 534 125 578 144 165 605  87
  55 603 220 385 258 434 343  38 595 570  39  42 384 621 388 371  51  46 554  14 536 261  64 386 567
 242  95 279 596 624 550 582 110 198 103 180 604 617 189 163 171 217 179 464 159 328 432  68 109 566
 559  75 136 486 108 601 372 138 598 101  85 161 151 194 113 268 420 135 524 619 507 415 364 512 183
 102 170 564 398  81 347 600 243  98 177 146 262 544 584  69  96 172 223 493 154 478 454 192 599 579
 277 288 206 440 188 174 571 618  43 149  74 608 187 158 379 234 185 613 477  30 355 442 503 549  77
  84 254 383 451 413 157 417 142 602 104 293 190 150 227 241 164 404 589 391 300 511 488 129 546 195
 259 236  76 502 305 312 421 274 528 173 155 139 334 369 362 178 338 323 287 284 408 606 402 310 244
 316 245 218 612 290 250 238 168 327 213 237 620 182 400 342 271 329 611 230 147 616 224 219 319 201
 318 131 607 353 235 382 225 266 304 289 315 169 240 175 594 265 339 137 423 196 499 422 377 283 281
 207 247 256 375 321 232 314 239 380 291 233 303 231 615 264 263 282 308 272 368 350 306 376 443 349
 307 441 395  91 449 322 228 453 313 222 367 425 416 360 356 390 210 252 346 437 216  88 309  99 333
 435 411 299 209 514 257 324 302 357 340 229 215 406 295  15 393 396 352  32 426 141 246 469 389 373
 251 409 317 133 494 117 526 374 273 365 381 278 439 298 433  35 363 348 200 394 204  83 345 275 490
 509 392  72 127 429 337  56 450 276 296 525 474 498 221 320 471   1 255 197 472 212 484 193 140 418
 132 118 577 267 248 495 105 326 496 445 335  57 286 436 473 332 516  21 341 448 249 226 467  59 370
 470 311   4   6 462  19   5 414 491 438 562 518 461 203 466 378 260 399 359 456 115  70 485  27 446
 480 410 500 181 366  33 119 407 468 106 522 387  47 344 517 330 558 336 152 539 126 301 487  86  23
 545 531 575  94 285 153 114 519  73 552 401 576  92 269 167 483 591  17 116 479  40 529 405 211   8
   9 505  18 361 424 513  50   7 412 465 568 354  79 532 489 541 297 510  93 497  16 403 458  48 176
 533 208 501 134 542  89  67 481 520 457 452 331  63  78 447 482 515 428  13 120  45  10 294 585 430
 358  34 427  61 455 214 156 569 148 506 504 100 551  20 573 540 586 253 145 476 122  25 419  53 530
  80 431 565 123  36  71 459 492 128 583 560 548 205  29 460  82 556 270 191 527   2   3 557 587 280

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.0003e+07us (= 10003ms, 10.003s)
Wall-clock time (full program): 1.00521e+07us (= 10052.1ms, 10.0521s)
Satisfaction error: 2
Number of search iterations: 2612
Number of local moves: 1045 (including on plateau: 457)
Number of local minimum: 198 (including on plateau: 47)
Number of resets: 1
Number of restarts: 0

Problem in column 8: 49 184 563 38 110 138 243 618 142 274 168 266 239 453 302 374 450 326 414 407 519 7 481 569 492 => the sum is 7826 rather than 7825
Problem in column 13: 623 572 66 384 617 151 544 187 150 334 182 240 231 416 406 439 498 286 461 47 92 79 63 551 205 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 594 533 250  36 457 519 359 567 602 272 532 496 117 605 350 136  63  23  30 176 559 246  22 252  29
 334  79  46  88  42 585 212 569 544  47 556  43  82 548 484 248 276   9 564 393 572 577 425 173 329
 198  41  70 409 478 196 423 373 589  60 534 150 490 616 506 540 100 303  13  28 456 608 161 281 202
 109  24 529   2 111 183  44 603 558 417 482 516  64 131 513 539 257 446 518 366 403 301 113 128 468
 177 473 568  17 101 489  65 596 501 595 410 511  80  45 491 493   4 485 258 316  93 466 107  53 431
 242  10 191 392 180  11 570 580 552 434 498  90 265 249  98 428 324 274 452 385 319 451 318  72 440
 112  66  14  78 270 364  15 618 520 382 448 474  59 433 517 551  12 578  33 405 481 455 463  35 442
 108 400 156 307  69 292 430 464  19 488 151 500  95 398 390 412 371 553 408 541  85 188 420 210 370
 118 536 105   3 160 157 515 480 343 362 152 486 115 327 535 165 492 458 341 579 620 379  74 155 168
   7 339 241 140  87 399 116 361 227 445 471 396 163 384  68 611 407 146 330 360 349 381 470 555 372
 411 310 388 256 383 356 453 325  51 322 185 333 414 148 332 288 402 550 436 234 312 194 419 201 122
 437 284 291 331 497 477 125 297 406 282 172  20 355 593 293 271 158 266 295   1 415 278 439 348 494
 542 286 231 380 599 203 394 353 225 358 209 193 314 304 615 228 308 222 369 215 462 376  50  38 351
 279 375 205 502 545 476 317 298 259   8 294  55 261 421 229 102 296 323 449 204 208 283 621 426 389
 447 267 363 221 391 328 438 164 368 404  16 236 601 309 287 342 444  77 337 143 522 336 345 207 232
 418 216 219 178 450 223 275 230 239 566 169 235 557 614 186 619 192  61 459 427 224 233 147 565 123
 475 213 254 526 179 195 487 190  89 264 416 137 587 206 315 299 610 211 326 352 153 114 243 597 387
 612 346 263 306 300 313 184  34 441  83 503 290 424 514 311  99 214 378  76 251 340 237 613 583 110
 584 537 547 469  27 199 598   5 269 175 357  97 367 245  75 127 571 512 247 347 302 154 220 554 240
 395 142 590 521 546 624 139 244 181 255 226 483 338 268 121 103 538 174 171 607  86  96 472 432  73
 435 574 218 562   6 132 560 187 167 200 189 413 543  91  37 138 467 549 289  54 344 126 465 504 575
 285 277 507 531 260 460 166  71 145 144 280 505 429  40 365 159  52 162 582 305 335 606 120 530 509
 401 377 563 581 588  81 197 129 135  58 238 461 454  18 104 273 609 354 623 479  26  31 422 499 124
  57 625 443 592 508 524 182  25 374 600 253 119 510  56 386  32 130 617  49 523  92 133 149 321 525
  48 495 573 397 591  39 561  62  21 604  84 586 141 262 217 622 528  94 170 134  67 576 527 106 320

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.89156e+06us (= 7891.56ms, 7.89156s)
Wall-clock time (full program): 7.94e+06us (= 7940ms, 7.94s)
Satisfaction error: 0
Number of search iterations: 2190
Number of local moves: 866 (including on plateau: 336)
Number of local minimum: 173 (including on plateau: 52)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  28 620 489 617 460 144 384 378  85   8 104 604 610 126  22 581 133 608 244 594 377 103 112 382  12
 305 602 603  34  49 599 584 601  96  40  17 596 597 122 501 361  26 573 145 583  15 140 574  42  20
  11 563  24 110 582 560 570 577 199  74  94 558 559  97 165 576 120 552 171 541 562 526   2   7  25
 114 549 529 198  52 546 540 539 147   1  43 555 550  53  78 543  90 538  72 547 522  23 326 545 125
 106 523 536 134 433 511 527 519  16 205   6 515 500 124 190 513  58 525 166 154  48 521 493 435  67
 111 504 475 164 267  13 512 488   4 508  83 494 497  87  29 454 156 496 463  51 474 462 495 447  91
 102 469 502 173 465 476  45 464  39 490 228 439 438  81 139 480  27 450  30 471 372 419 456 403 167
   9 445 431  68 230 458 492  77 150 183  57 442 430 397 415 470 282 398  76 453 426 408 416 418 194
 105 432 423 411  10 448 422   5 444 417 410 394 404 392 301 400 184 424 449 414  95  61 234 409 137
 201  38 108 123 429 402 142 298 206 387 406 421 390 385 306 224 425 389 399 420 363 358 412 373 220
 268  21 401 407  59 380 348 304 296 285 371 278 370 356 383 339 360 351 365 369 346 357 325 333 153
 381 336 314 354 340 129 250 359 235 318 260 292 375 335 376 366 328 353 367 331 345 319 161 347 254
 342 332 316 310 308 303 312 352 393 324 321 281 349 297 309 287 311 295 276 315 270 299 320 317 286
 386 338 322 245 223 334 290 368 264 362 323 350 294 259 284 337 203 273 263 289 251 302 542 266 457
 391 253 269 262 482 307 274 247 451 277 443 293 217 280 615 246 191 229 329 255 271 283 239 240 481
 405 200 256 455 510 214 226 258 288 413 241 189 330 248 553 612 242 238 197 236 225 207 364 213 505
 396 222 215 434 327 252 216 212 341 516 472 218 182 221 587 237 535 188 498 272 261 232 202 162 427
 436 210 179 514 175 169 195 619 595 219 265 174 170 503 446 143 437 257 567 231 157 176 180 185 623
 459 172 113 487 580 208 618 209 440 227 275 196 152 507 186 158 486 159 571 160 131 374 279 193 485
 565 146  71 568 192 622 115 151 524 132 588 148 121 585 300 187 611 177 579 379 178 149  79 141 517
 556 135 168 586 621 155 461 130 441 181 625  88 127 291 243 117 520 109 452  84 343 163  64 614 551
 548 128  65 388 116 468  98 466 613 532 575  99  63 518 249  92 564  86 537  93  89 233 561 100 544
 605  37 428 211 119  69  75  80 483 624 528  62  35 467 477  33 479 107 136  60 606 569 344 598 593
 600 506 557  41 592  55  82  70 590 572 499  66  19 616 138  56 491  32 355  50 589 534  36 101 578
 395  44  31 531 204   3  47  54 484 530 591  73  46 478 533  14 566  18 118 473 509 607 609 554 313

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00505e+07us (= 10050.5ms, 10.0505s)
Satisfaction error: 2
Number of search iterations: 3831
Number of local moves: 1313 (including on plateau: 602)
Number of local minimum: 299 (including on plateau: 80)
Number of resets: 2
Number of restarts: 0

Problem in column 9: 85 96 199 147 16 4 39 150 444 206 296 235 393 264 451 288 341 595 440 524 441 613 483 590 484 => the sum is 7824 rather than 7825
Problem in column 16: 581 361 576 543 513 454 480 470 400 224 339 366 287 337 246 612 237 143 158 187 117 92 33 56 14 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
   9 533  86 536  56  26 545  84 567 589 229 107 575  40 573 508   5 592 525 458 471 150 119 104 338
 557   6  67 562  55  89 407 599  19 489 127 143 560  46  48 499  39 587 576 481 509 501 232 341 286
 618 516  10 613 485 500 513 596  13  80  58  57 561  30   4 257  63 512   8 541 502 595  18 538 137
 569 505  23 523 125 577 602 438 531 208  68  12 469  27 439  33  64 169 415 535 193  20 308 564 408
 488 578 214 492   2  25 506 461 451 106  76  87 446  41 482  34  95 486 528  62 487 498  38 549 593
 462 520  92 603  21  15 566 522 422  90 226 112 588  79 435 420 117 495 240  36 455 524 149 510 126
 470 497 144 518 110 394   1 445 399  99 128  75 539 109 517 550 251 530  17 526 305 507 220 463  11
 441 479 184 367 474 540 353 401 349 132 287 384 134 292 374  93 433 233  45 473 503 304 185 362   3
 391  14  22 278 416 351 428 402 409 189 291 194 381 456 301 460 393 272 174 386 288 411 289 431 198
 342 519 188 361 556 472 238 306 427 298 192 364 373   7 383 333 375 417 310  24 392 571  82 221  74
 429 363 266 380 325 447 249 430 437 330 168 151 372 340 316 389 118 234 153 400 449 339  70 570 100
 440 359 200 261 331 442 450 267 281 315 247 390 277 313 264 412 191 434  65 250 334 318 323 403 258
 280 181 432 296 397 322 371 294 270 324 319 218 246 347 244 312 328 348 299 370 290 344 320 269 404
 282 182 379 268 405 443 235 410 395 265 171 368 254 225 332 239 355 360 275 436 343 398 284 358 163
 464 255 388 285 444 241 271 215 475 183 311 262 350 283  97 321 329 213 356 406 279 465 414 136 382
  73 327 579 242 161 352 357 256 376 581 452 337 243 252 206 565 385 496 205  85 114 196 544 167 274
 314 366 369  59 260 237 209 245 297 614 615 273 187 459 236 259 421 172 345 217 122 179 617 141 612
 113 129 354 203 160 199 227 619 295 162 514 448 223 543 224 263 326 552 396 276 201 148 418 207 625
 146 554 494 309 159 123 190 157 302 335 574 491 145 610 121 336 231 195 609 219 152 197 548 175 453
 135 170 582 101 413 590 124 186 155 454 467 534 228 542 211 156 419  78 307 551 248  52 468 230 424
 165 120 604 212 623 158 457 116 103  35 466 483 177 511 521 597 600  88 377  44 616  91 387 180  94
 365  60 425  32 253 102 154 133 140 423 504 558  47 555 605  83 553  51 572 293 138 607 583  43 546
 173  28 580 178 532  98 142 166  72 490 477 585 317 529 601 147 621 130 620 111 176  77 300  53 622
  49 493 559  31 547 606  66  61  29 608 378 568  37 598  69 478 586  42 303 108  54 131 346 594 484
  50  71 584 115 515 476 164  16 611 426 480 624  96 591 222  81 527 139 105 537 204 202 563 216 210

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.94546e+06us (= 3945.46ms, 3.94546s)
Wall-clock time (full program): 3.99445e+06us (= 3994.45ms, 3.99445s)
Satisfaction error: 0
Number of search iterations: 869
Number of local moves: 607 (including on plateau: 184)
Number of local minimum: 50 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 238  49  57 531 573 177   1 396 603 556 546 161 607 155  58 124  74 550 548  51 514 535 236  25 459
   3 272 578  97 523 100   2  99 613 448 532 136 586 549 592  23   9 551 420 471 482 552  27  20 140
 491 117  55 541 487 242 308 511 473 576 537   5 318 488 611 130 219  44 591  94  87  62  12 515 311
 461  47 585  14 577  88 564 504 545 429 582  10 557 492 422  13 138 478 477  95 189  45  64 419  30
 512  77 596 555   6  65 526  22 373 256 536  68 416 558 527  52 194  78 495 432  61 565 205 463 187
 435  33 561 560 139 452 483  54 223 390 486   7 430 499 404 257  48  37 386 132 485 412 234 513 165
 529  21 493 406 508  81 587  85 519 455 391 444 329 447 470  56  42 502  93 101 151 427  31 509 148
 433 216 379 440 457 255 567 173 490 480 365 171 407 401 474  46 183 109 169 359  73 309 252 421 196
 449  83 441 381 453 162 456 411 467 172 330 484 128 594 414 104 239 321 105 446 384 354  86 263  98
 469 202 424 431 428  35 362  71 417  91 337 358  84 410 501 198 232 292 369 364 367 342 284 400 357
 331 377 264 479 307 228 464 368 393 353 333 468 152 347  50 206 113 295 108 442 371 349 278 408 341
 383 380 409 315 200 186 224 426 348 336 343 403 351 299 372 323 375 273 346 287 141 286 280 222 317
 327 270 245 298 385 182 376 604 310 266 231 296 274 268 363 616 324 262 227 258 282 233 248 352 328
 246 559 620 210 366 418 319 340 300 397 294 240  59 291 382 265 374 229 235 276 217 290 312 260 326
 201 283 150 305 624 297 405 213 254 146 622 355 344 302 289 249 524 392 211 221 370 314 322 163 269
 250 275 184 133 285 398 303 190 174 569 304 306 387 159 199 517 481 244 193 436 209 361 443 320 505
 563 465 204 271  92 543 230  96 579 338 153 147 325 181 175 388 279 267 437 137 547 220 450 218 520
 288 609 208 259 142 500 237 281 207 168 164 167 590 460 316 494 574  38 203 521 188 261 575 160 215
 166 507 185 241 131 472 313 553 226 489 149 503 126 111 247 510 395 335 350 243 158 277 506 102 530
 170 516  34 118 293 605 106 595   8 225 144 584 332 112 180 608 593 143 402 621 156  66 598 154 462
 103 498 192 125 600 466 115 197  32  90  76 602 434  16 127 571 528 570 301 191 568 178 614 114 518
  89 399 212 394 121 438 135 538 176  19 116 157 179 581 145 496 389 497 123 119 345 618 525 539 475
   4 542 425  17  24 378  63 554  28  40 122 566  36  11 120 612 615 601 588 572 540  80 251 623 413
  67 589 214 107  75 606  69 415  26 454  72 562  18  15  53 445 544 583 195 533 580  70 458 599 476
 617 439 110 597  29 451 610 129  41  82  60 625 356  79 334 522 339 134 253 423 360 619 534  43  39

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00034e+07us (= 10003.4ms, 10.0034s)
Wall-clock time (full program): 1.00522e+07us (= 10052.2ms, 10.0522s)
Satisfaction error: 2
Number of search iterations: 2560
Number of local moves: 934 (including on plateau: 413)
Number of local minimum: 174 (including on plateau: 49)
Number of resets: 1
Number of restarts: 0

Problem in row 1: 238 49 57 531 573 177 1 396 603 556 546 161 607 155 58 124 74 550 548 51 514 535 236 25 459 => the sum is 7824 rather than 7825
Problem in row 21: 103 498 192 125 600 466 115 197 32 90 76 602 434 16 127 571 528 570 301 191 568 178 614 114 518 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  93 588 596   1 582 555 123  24 381  31 209 121 600  86  92 246 194 545 102 602 593 584 218 132 527
 577   6 469  60 542  72 326 215 597 512  57 553 583  45  88  41 137 513 556 560 595 609  74  23  15
  99 569   3 422  54 520 521  76 608 302 130 444  32 432 119 481  75 590 500 591 581 566  53  52   5
 528 428 489 557 564   2 450 103 599 210 280  11   4 122 154 535 254 201 142 169 515 530  43 452 483
 248  12 476 578   7 501 533 279 607 141 198 445  28 323 148 213 222 570 526 441  26 606  39 110 548
  10 543 386 378  16 419 249 374 418  13  51 486 392 125 140 518 195 544 565  25 499 562 328 135 454
 447 522 371 561 498   8  81  83 579 391 197 540 324   9 106 368  82 517  68 409 455 463 251  18 477
 470 472 403 467  14 234 478 462 436 490  49 335 410 118  50 369 107  38 414 440 439 364 128 212 426
 424 413 343 504 509  30 168 366  19 347 393 108 406 314  21 325 299 344 459 307 425 400  62 494 345
 474 479 384 420  65 124 576 322 360 394 147 519 319  71 370  33 196 373 346 507 353 407 129  90 367
 333 286 219 330 390 511  94 188 457 416 405 257 461 306 451 471 126 434 296 408 266 329 193 150  48
 404 273 427 435 349 278 284 389 385 285  37 464 337 180 341 305 138 262 547 290 354 220 398 363  80
 293 281 377 350 412 277 288 301 145 332 297 356 264 236 252 275 550 338 282 359 331 247 460 207 315
 362 411 401 375 292 311 523 276 237 255 232 379 179 342 348 291 395 155 146 260 321 312 313 465 244
 206 272 235 190 114 431 574 351 317 242 620 310 127 402 270 558 421 283 158 298 238 182 415 239 372
 316 308 397 231 227  97 456 259 320 551 383 245 109 300 287 224 613 204 303 267 165 269 563 514 217
 334 253 361 256 228 429 437 295 624 365 211 355 265 268 399 382 376 223 203 271 172 230 567 216 105
 151 294 261 184 229 250 153 438 226 162 573 164 225 541 496 289 340 611 134 136 539 241 430 601 157
 388  96 199 243 274 205 622 503 104 186 448 233 263 585 468 173 449 183 531  69 116 175 625 554 133
 221 191  67 177 621 623 258 532  44 617 492 149 159 525 485 171 396 166 170 524 176 112 339 552  58
 538 167  78 160 327 100 139 202  87 473 559 586 161 497 466 510 443  98 174 113 495 178 304 352 618
 144  61 615 240 534 192 181 458  66  64 453  77 571 546 537 214 587 163 604 115  29  20 442 318 594
 187 185 200  42 117 568 131 156  55  47 488 589 619 423 529 610 446 387 120 152  89 111 357 605 612
 508 614  22  84 358 516  95 598  91 506 380  40 482 480 592  34 475  27 143 433  17  35 603 484 208
  70 101  46 580 502 572  85 575  63 493 536  59 505 549 616 189 309  56 336  79  36  73 491 487 417

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.28538e+06us (= 3285.38ms, 3.28538s)
Wall-clock time (full program): 3.33377e+06us (= 3333.77ms, 3.33377s)
Satisfaction error: 0
Number of search iterations: 587
Number of local moves: 501 (including on plateau: 186)
Number of local minimum: 18 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 489 115  54 407  81  14 524 573 136 399 570 613 479  57 580  95 567 512  38 464  32  30  35 357 604
 475  11 621 515 146 395   9 235 144 116 303 161 558  73 618 455 212 433 275 169 137 590  19 611 544
 600  76 383 124 551 539 494  69  40 622 172 381 134  53 216 109 128 556  46 260 111 451 575 552 583
 528 153 607 480 122   2 468 548  45 476 460 447 123  74 555  48 380 606 497 345  93  97  13 578  80
 588 140  66  87  67  20 485  91 416 602 625 373 496 226 454  65 133 444  98 179 608 397 565 141 459
 158 559 236 463 110 612 501 174 163 508 587 255 248 127  37  55 113 545 154 576 264 177 521  88 594
 176 190 107 543 267 147 620 601 243 162 272 245 499 230 191 195 187 554 529 103 108 574 342 371 369
 209 102 183 557 241 347 553 507 280 157 525 478 246 148 200 274 615 333 270 160  94 436 417 119 374
 599  27 231 126 201 388 490 145 610 427 197 540 423 256 229 215  16  47 263 193 214 502 311 582 593
 337 605 232 143 298 142 181 151 319 289 424 390 173 301 366 535 120 530 577 324 237 564 258 118 211
 175 487 293 314 194 364 318 598 247  99 396 471 242 208 286 223 376 503 165  50 217 506 322 484 287
 355 210 276 368 365 325 351 308 305 273 465 302 404 516 282 437 269 117 412 400 296 300 106 130 253
 362 398 354 251 277  96 288 265 250 377 189 227 278 340 375 361 445 219 482 349 284 271 338 401 348
 290 385 159 409 259   7 224 363 262 419 279 356 328 222 317 431 316 579 297 519 352 156 295 310 291
 341 336 359 294 218 292 422 566 353 415   1 283 440 457 204 446 257 254   8 192 402 344 206 491 244
 334 389 434 406 281 335 379 430 391  60 168 392 343 313 589 339  26  90 533 413 495 249  89 180 167
  82  25 240 104 472 420 228 213   4 426 623 266 510 307 202 561 196  72 358 584 405 299 486 509 233
 450 285 505 394 442 403  24  22 386  49 198 312 439 531 171 306 408 268 596 469 350 132 101 572  12
 393 493 421 261 411 532  29 372 624  71  84 150  56 414 518 538 473  75 315 178 425 184 382  39 387
  51 435 326 367 443 619  42 238 595 456 428 152 370 384 466 186 542  10 470  61 483  36 585  18  62
  77 520 432 327 323 131 304 114 526 252  34 129  63 547 320 378 155 139 438 418 477 603 498 550  70
  92 536 105  83 534  59 220 537 591  68 125 481 458 517  52 330 166  86 609 569 586 332 452   3 234
 461 488 221  15 571 523 449 138 309 504 121 135  17 448  28 562 560 321  43 581 514 239 331  41 205
  21 360 453 346 410 592 199 467 112 513 546 207 492 614  58  64 597 203 188  44  78 185 429  31 616
 182 500 527 441 541 522  23 100 474  85  33  79   6 462 511 617 568 329 164 225 563 170 149 549   5

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00007e+07us (= 10000.7ms, 10.0007s)
Wall-clock time (full program): 1.00495e+07us (= 10049.5ms, 10.0495s)
Satisfaction error: 3
Number of search iterations: 2801
Number of local moves: 1074 (including on plateau: 404)
Number of local minimum: 265 (including on plateau: 43)
Number of resets: 2
Number of restarts: 0

Problem in column 6: 14 395 539 2 20 612 147 347 388 142 364 325 96 7 292 335 420 403 532 619 131 59 523 592 522 => the sum is 7826 rather than 7825
Problem in column 22: 30 590 451 97 397 177 574 436 502 564 506 300 271 156 344 249 299 132 184 36 603 332 239 185 170 => the sum is 7824 rather than 7825
Problem in diagonal 1: 604 611 575 97 608 576 529 333 16 535 286 516 278 356 1 60 4 22 29 619 323 83 221 360 182 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 621  17  73  59  50  28 586  35 545 575 169 550   9  81 521 173 582 148 470 166 538 583  65 589 592
 579  40 515 572 463   7 183 337 555   2 200 580 219 140 585  68 559   4 533  32  72 571  38 418 553
 270 558  33 554 156   6 595  75 565 540 240 581 522  52 556 128 503  86 360 481 136 543  21 167  97
 196 567   3 454 170 495 518  24 566 504  49 529 434 542 532 100 523  53 564  23  18   8 154 209 590
 291 358 508 472  61  84 502  93 262 489 111 520 439 431 568  27 494 277 228 127   1 445 530 429  78
 145 451 477 525 109 421 514 243 480 461  34 546 548  13 505 547 436 108 101  12  77 517  98  31 426
 153 456 415 466  57 496  14 563 499 539  55 483 379 453 457 221 126 135  25 430  19 432 424  54 474
 144 467 501 511 433 427 512  22 459 413  76 507 428  16 222 465  43  26 392  36 212 394 349 260 510
  70 448 395 460 363 288 487 113 151 420  69 350 400 437 406 326 368 159 130 435 117 373 338 253 469
 139 484 366 339 402 376 344 322 396  94 244 417 354 419 382   5 359 352 412 375 345 479 346  30  44
 227 342 455 378 315 401 355 348 336 312 246 324 325 381 150 318 265 214 328  11 410 440 362 241 341
 313 295 334 364 387 275 299 397  20 416  56 369 333 269 305 351 231 398 233 335 414 327 377 411 316
 304 384 303 245 266 357 306 330 332 290 301 289 252 298 329 189 340 320 356 347 390 272 319 399 307
 404 256 287 215 612 226 264 285 383 389 216 281 386 371 274 314 276 353 331 248 385 213 242 293 321
 569 393 235 308 309 283 294 168 286 217 475 187 255 292 409 229 251 310 531 302 273 311 223 458 257
 601 282 180 239 158 210 236 594 201 562 491 388 208 263 284 408 202 380 524 203 247 249 220 300 195
 519 250 297 258 597 178 199 157 610 211 317 138 232 224 207 599 444 361 237 462 119 146 218 577 268
 493 278 182 171 161 225 188 617 181 254 596 123 165 175 296 271 125 476 323 536 449 230 280 552 478
 259 261 206  96 516 143 604 192 391 160 600 163 162 603 425 279 193 438 578 194 407 204 141 446 164
 405 184 116 142 560 509  39 234  82 191 623 176 197 573  79 570 471 468  58 616 551 152 267 372 190
 374  47 613 114 625  89 104 591 118 343 535 147  95 179  92 238 103 534 155 464 607 129 588 574 367
 447  64 561 618 115 615  67 584 121  99 528  29 205  80  60 423 124 611 172 537 498  83 576 506 102
 177 174 106 137 513 544 120 527 198 122 485  15 186 602  10 587 112 614 110 442 606 526 622 105 185
  74 620  66  41  62 549  45 488  46 132 609  48 473 441 134 492 624 557 541 608 452 107 422  63 131
  51 149 598  87 365 593 450 486  42  90 500  85 619 490  37 497  71 443 133 403 482  91 605  88 370

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.50852e+06us (= 3508.52ms, 3.50852s)
Wall-clock time (full program): 3.55859e+06us (= 3558.59ms, 3.55859s)
Satisfaction error: 0
Number of search iterations: 875
Number of local moves: 476 (including on plateau: 158)
Number of local minimum: 46 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 262 584 582  65 566  54 235 249 299 521 140 524  49  36 625 622 153 621 216  69  30  89 413 579 242
 110 395 546  46 540  19 516 479   9 211  51 117 537 504 434 572  60 563  88 565 129 477 194 520 143
 378 409 599 103   8  79 583 618   4 131 301 511 561 451 125  58 296 169 558 539   7 534  44 424 335
  81 464 571  29 314 156 559 368  10 226  37  67 349 490 466 187 132 385 224 505 171 223 594 616 601
   3 359 471 614  15   6 448 219 116 444  80 104 462 480 493 606 412 536  39 519   1 507 205 556 130
 417 202 436 510  97 236 393  24 317 427 168 544 437 415 475  22 210 518 364 506 287 279  87 369  85
  99 557 489  55 269 102  25 270 114 487 396 465 470 554 564 311 164 432 472 350  16 494 181 100 389
 560 372  31 482 145 392 370 476 608 474  17  70 445 423 319 495  28 452 199 157 233 431 105 405 136
 419 406 460 380 312 414 463 329  75 447  33  13   5 457 497 294  11 528 615 348 204 503  40 363 209
  57  47 337 517 330 388 455 440 155  45 522 300 449 322 485 390 172 351 109 310 222 458 398 175 391
 456 513 284 422 384 218 418 481 215 454 325 382 328 324 336 399 274 316 231  41  21 386  74 220 323
 354 119 237 315 268 404 402 443 250 439 327 461 533   2 200 376 605  14 344 421 341 297  86 306 281
 295 271 345 318 346 283 326 425  95 610 357 438 203 256 469 353 159 339  61 509 381 206 243 255 282
  59 261 221 467 308 512 293 289 356 248 366 303 277 304 253 430 410 147 123 361 420 333 307 400 377
 272 342 334 251 191 302 514 115  20 225 426 313 230 332 597 331 162 446 543 321 401 276 411 273 197
 298 267 186 207 290 428  32 569 433 371 408 177 379 309 176  98 562 188 148 567 545 198 547 288 154
 285 292 241  48 135 227 212 151 468 264 573 551 217 158 291 246 429 113 538 254 496 141 552 435 508
 238 320 252 244 526 358 260 568 612 173  23 263 149 195 234  93 407 620 609 163 365 240 542 259 112
 338 343 239 581 124 416 362 192 531 229 442 142 183 593 245  63 498 180 258 184 577 228 525 174 178
 553 144  71 182 596 486  76 101 441  96 550 118 592 111 165 185 588  77 484 578 541  64 375 257 394
 214 139 189 589 586 196 127 152 355 613 500  94 595 208  12  56 591 126 585 213 549  83 478  27 548
 590 278 137 128 146 529  34 499 570 491 367 161 167  82 170 535 373 347 107  90 619 265 576 190 374
 602 603  42 587 555 515  73  84 575  53 286 604  18 120 133 532 134  50 492 150 501 280 305 179 352
 275  72 387 453 247 488 483 193 623 108 600 580 122 607  26 121 598 201  78  43 266 360 383  52 459
 611  66 138 232 527 617 166  91 574  38 530 523  68  92  35 450 397 106 340  62 502 473 160 403 624

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00023e+07us (= 10002.3ms, 10.0023s)
Wall-clock time (full program): 1.00478e+07us (= 10047.8ms, 10.0478s)
Satisfaction error: 2
Number of search iterations: 3227
Number of local moves: 957 (including on plateau: 371)
Number of local minimum: 275 (including on plateau: 33)
Number of resets: 2
Number of restarts: 0

Problem in column 1: 262 110 378 81 3 417 99 560 419 57 456 354 295 59 272 298 285 238 338 553 214 590 602 275 611 => the sum is 7826 rather than 7825
Problem in column 25: 242 143 335 601 130 85 389 136 209 391 323 281 282 377 197 154 508 112 178 394 548 374 352 459 624 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 298 119  68  82 570  53  91 565 550  40  45 618 516  15 598 596 571 408 606 574 452  43  25  39 283
 398  76 157  94 477  72 441 511 442 172 556 545 426  30 344 500 469 584 395 129  34 127  59 616 171
 624  54 208 105 537 205 622 541 228  90 533 621 151 150 497 503 385  38  99 608 179 122 112 542  71
 152  73  97 289 488 245  22 512 534 170 569  64  78 282 526 479 625  48 580 587  18 267  80 539 501
 591 166 158 145 563 131  92 417 575 107 262 619  27  35 517 393 610  67 577 615 284  50  96 215 513
 219 141 176 102 552 592  55 280 353  37 589  65 564 177 532 288 446 540 585 465 117 274 162  63 451
 315  12 313 118 266 432 299 530 466 147  49 231 255 327 128 453 536 126 450 174 612 605 269 108 604
 418 204 227 146 239 101  62 331 594 607  61 221 555 232 184 312 142 510 491 588 169 359 332 226 514
 155 195  81 192 468 566 106 599 623 207 121 212 278  88 209 535 270 133 354 291 559 576 614 116 277
 506 130 250 249 309 216 376 290 328 613 210 259 182 263 609 502 248 191 421 304 244 547 167 175 236
 486 225 242 214 243 493 165 217 410 164 567 326 156 279 399 379 251 198 573 220 275 316 320 370 337
 138 611 366 233 617 392 202 213 346 323 368 409 276 345 201 271 193 173 405 287 273 223 369 406 185
 339 401 260 258 241 120 261 268 319 311 375 373 148 272 374 529 190 361 308 397 222 206 495 358 440
 335 189 352 301  17 285 300 196 347 252 294 595 357 235 423 325 484 343 180 329 438 391 257 295 305
 113 458 447 109 367 380 428 411  83 527  20 292 306 420 460  86 199 381 238 324 307 388 362 333 386
 351 478 387 461 197 400 403 211 139  32 485 350 402 253 377 302 314 356 168 407  14 183 317 456 382
 371 330 389 342 334 378 200  75  69 429 480 413 321 414 286 137  77 341  60 435 492 490 384 419 159
  13 404 504 457 246  41 383 181 161 336 424 363 318 515 293 247  51 445 234 340 415 416 240 476 322
 134 394 430 522  95 265  29 136 218 348 561 433 474 507 160 132  36 436  84 154 508 472 487 355 455
  70 551 520 543  85   4 593 264 110 521  98 439 390 560   2   8 422  16 194  66 482 489 462 481 454
 135 463 603 525 498 444 518  47 124 582 149 114 496 449 229 203 459  11 303  79 434 349 467   1 143
  87 548 425 578  21 494 524 254 123 470 531  56  42 448   3 296 230 499  57 104 188 601 471 437 338
 396 562  19 620 186 558 528 431 372 538  26  58 115 579 100 310 464 557 224  23 475  24  93 427 140
 600 568 549 554  31 412 553  89 237 297 443 103 509 360 364   6 125 519  52  44 523 144 583   7 153
 581 473 597 586 178 546 572 256  74 505   9  46 483 590  10  33  28 544 187 281 111 163 602 365   5

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00029e+07us (= 10002.9ms, 10.0029s)
Wall-clock time (full program): 1.00517e+07us (= 10051.7ms, 10.0517s)
Satisfaction error: 2
Number of search iterations: 2674
Number of local moves: 887 (including on plateau: 370)
Number of local minimum: 217 (including on plateau: 40)
Number of resets: 1
Number of restarts: 0

Problem in row 13: 339 401 260 258 241 120 261 268 319 311 375 373 148 272 374 529 190 361 308 397 222 206 495 358 440 => the sum is 7826 rather than 7825
Problem in row 20: 70 551 520 543 85 4 593 264 110 521 98 439 390 560 2 8 422 16 194 66 482 489 462 481 454 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 609 624 421 137 271  44  25  64 201 378 268 145 132 140 614 621 365 476 387  81 232 597 306 449 238
 484 567 572  74  10  86  18 555 231  94 616  80 538  90 110 311  14 585  67 573 558 559 599  53 381
 332  99  77 554 234 481  84 509 322 103 217  48 587 473 498 159 224 596 107 113 562 438 491  60 457
 213  42 173 497 568 406  89 586 109 581 504  52 570 394 400 529 521  88 138 106 528 342  13  79 297
 605 338 622 114 136 618  41 610 129 118 582 111 124  47 204   7 122 588 583  45 601 524 167 330 459
 468 575 489  55 409  16 576 229 212 112 502 189 115  43 198 321 442 258 236 600 448 488  82 272 490
 506 219 170 593 606  78 334 199  97 160 196 169  54 165 566 464 131 186 540 171 592 404 291 393 541
 544 202 180 424 116 584 179 612 163 242 151 246 508 205 398 602 184 267 218 226 277 308 188 197 604
 185 273 288 589  61 266 194 613  69 399 208 221 157 525 501 580  72 117 102 127 412 492 519 252 603
 565 195 191 307 286 260 222  70 325 520 178 453 164 282 175 429 615 370 166 144 486 366 269 547 240
 183 407 161 369 223 239 281 154 316 276 611 595 263 135 303 577 285 499 323 141 360 376  17 341 390
 243 474 302 336  30 312 290 335 383 256 274 301 216 617 254 356 460 253 296 287 192 423 317 292 326
 309 283 349 379 299 279 237 220 328 128 386 403 623 275 257 315  91 354 300 348 430 324 598   5 305
 363  49 478 259 455 250 444 235 446 426 327  27 346 245 255 385 408 343 351 440 149 209 331 264 340
 187 278 550 594 320 228 463 233  39 304 174 318 362 415  51 251 447 402 294 462  87 249 313 428 375
 207 214  71 227 505 452 578 105 436 391 139 431  46 374 372  33 247 518 434 461 133 549 162 352 388
 147 401 298 142 225 475 551 333 353 270 419 355 337 244 119 150  15 425 467 413 456 295 392 420 123
  34 483 552 591 380 143 417 134 314  57 339 507 479 539 441 168 350 158 371 445 211 125 427 104  56
 120 546 437  93 357 470 344 364 472 517  37 153 471 361  58 522 172 530  75 368 466  96 523  92 181
 439 152 367  36 560   8 469 358 571 512 210 319 215 389 396 206 493 477 203 496 101  68 193 563  24
 230 513 418 395 148 405 443 531  20 561 377 557 465 503 265 177 384  31 494 373   9 182  28 284  32
 146 329 537 607 533 511 514  50 619 556   1 620  23 516  98  38 608  62 190 200 280 241  83 397  66
  63 527  76  40 450 345 495 126 545  12 482 625 480 411 579  59 176   2 432 454 121 130 574 548  73
 261   6  11   3 487 510 289 500 590 310  95 347 485   4 262 543 564 155 536 458  26  19 416 534 414
 382  29  35 410 156 359 248 100 535 542 532 553  65 433 451  22 435  85 515 293 108  21 526 569 422

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00013e+07us (= 10001.3ms, 10.0013s)
Wall-clock time (full program): 1.00503e+07us (= 10050.3ms, 10.0503s)
Satisfaction error: 3
Number of search iterations: 2759
Number of local moves: 1018 (including on plateau: 485)
Number of local minimum: 219 (including on plateau: 53)
Number of resets: 1
Number of restarts: 0

Problem in row 15: 187 278 550 594 320 228 463 233 39 304 174 318 362 415 51 251 447 402 294 462 87 249 313 428 375 => the sum is 7824 rather than 7825
Problem in row 25: 382 29 35 410 156 359 248 100 535 542 532 553 65 433 451 22 435 85 515 293 108 21 526 569 422 => the sum is 7826 rather than 7825
Problem in diagonal 1: 238 53 491 342 601 600 540 267 72 429 303 617 623 27 174 391 353 134 344 8 148 607 76 6 382 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 552  65 524 597  19  55 566  51  75 581  41  27  62 578  32 590 261 565 442 468 460 459 123 608  25
  31   3 620 622 133 231  46 602 502 453 405 522  23 406  22  80 612 296  83 587  59 122 504 606 255
  35 598 529 609  42  72  89 594 421 392 517 485  63 283  40  26 621 505 124  74 357  67 583 605  94
 189  28 521 572  30 452 109 395  88 498  45 381 355 567  90 118 604 510 507   2  53 595 579 451  86
 384 492 551 617 584 128 126 426 158  38 116 224 603 149 112 105 591 446 180 254 615 152 142 503 129
 120 159 592 145 564 586 445 127 138 540 212 556 227 515  98 161 497 611 513   8 185 174 131 389 132
 184 182 561 154 148 549 198 175  95 378 434 558 531 168 390 160 427 619 614 130 204 165 139 479 183
 222 195 487 125 156 263  10 618 199 548 217 536 110 150 342 178 616 625 544 394 186 170 577 210 147
 270 171 205 226 163 258 196 347 269 523  16 569 574 202 262 379 359 409 276 382 220 233 294 496 526
 219 214 108 245 260 295 265 211 239 490 291 244 593 313 234 596 197 480 267 509 251 181 225 443 455
 242 216 327 297 326 461 176 514 144 143 272 319 371 576 312 246 247 448 436 223 232 275 310 397 315
 290 213 215 320 282 308 253  82 339 439 386 547 274 345 306 369 259 241 264 464 299 280 301 428 321
 309 298 286 279 305 420 314 293 300 447 336 250 103 271 316 388 292 349 350 323 284 329 330 318 335
 430 307 256  43 277 166 287 482 399 352 407 344 343 303 340 285 376 252 240 425 393 257 229 273 358
 465 243 360 380 356 324 249 266 353 288 495 368 410 372  36 322 194  64 317 351 338 373 346 221 334
 408 367 365 375 404 332 433 111 398  14 462 383 117 177 396 278   9 206 471 568  93 475 400 164 419
 438 613 423 431 325 328 341 412  68  71 402  12 418  77 432 173 362 236 415  20 424 401 364 248 391
  79 366  50 563 417 387 435  96 440  76 403  13 441 374 470 385 527 169   7 146 546 414 494  39 488
 363 429 151 422 377 520 416 477  29 167 473  91 155 585 486 506 134 104  15 302 444 449 476 200  54
 370 499 207 512 472  66 570 469 413 281  37 218 113  99 466 106 115 107 311 528 331 489 457 135 454
 508 361  11  61  34 450 484 483 533 100 474 119 456 532 543 535 203 192 501 238  52 516  18 193 228
 545 537  92  87 607 141 550  49 525 179 463 157 187  47 458 539 153  70 162 553 538   5 289 268 624
  21 623 172  69 534 571 518  73 519 136 467 208 511  78 557 491  81  33  56 354 140 542 411  85 575
 562  58 188  17 437 348 559 235 599 137 121 201 481 610 555 209  84  97 500 478 580 101 102   6 560
 589 588  24  57 573 114 190 237 582 554 333 493 304  48 530 600   4 191 230  44 541 601   1  60 337

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00499e+07us (= 10049.9ms, 10.0499s)
Satisfaction error: 2
Number of search iterations: 3159
Number of local moves: 1104 (including on plateau: 538)
Number of local minimum: 274 (including on plateau: 56)
Number of resets: 2
Number of restarts: 0

Problem in row 1: 552 65 524 597 19 55 566 51 75 581 41 27 62 578 32 590 261 565 442 468 460 459 123 608 25 => the sum is 7826 rather than 7825
Problem in row 14: 430 307 256 43 277 166 287 482 399 352 407 344 343 303 340 285 376 252 240 425 393 257 229 273 358 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 426  52  44 116 537 546 447 436 534 103 573 543 611 549 576 128  51  62 106 213 256   7  47 281 581
  70 234 592   1 600 597 269 522 414  59 112 574 545 433 510  69  81 559  78 358 215 214 226 429  64
 503 544  22 304 547  49 553 206  68  33 536 540 567  31 437 169 229 454 110 555 585 176  92 488  27
 506 203 483 197 236 494 365 472 474 196 461 602 252 514 606  32  29  90  17  63 391  18 165 477 482
 320 456 458  35   5 161 524 351 496 397 591 424 371 460 572 192 316 434  88 104  24 187 285 292 282
 199 499 173 113 345  66 412 542  20 512 254 325 475 489 560 211 118 527 230  85 115 101 491 504 459
 121 466 467 430 138 533  15 439  12 500  67 550 446 539 493  42 186 293 526 416  45  41  96 453 511
  94 435 445 157 311 259 411  11 404 480 625 143 487 301 331  10  57 158 607 387 450 508 139 102 513
 134   4 444 381 428  28 312  86 618 360 298 180 417 181 317 457 530 470 233 309 529 240  98 376 395
  26 622 443  19 275 179 415 359  97 136 431 123 413 290 322 268 350 469 603 400 356 182 421 294 332
 297 498 409 341 283 476  53 410 338  83 337 339 405 393 155 406 373 310 108 353 221 610 473  30 124
 614 167 380 382 193 388 314 396 440 273 287 361 369 307 266 448 336 227 362 257 284 135  73 237 329
 296 335 462 299 209 464 202 402 313 349 216 162   6 372 346 408 289 288 427 306 355 399 419 323 178
 425 333 300 330 321 142 620 343 384 255 368 241 613 484 247 271 265  16  13 432 183 377  43 302 517
 188 479 189 270 582 235 225 455 438 379 305 348 251 201 239 204 578 324 100 490 249   8 616 130 342
 274 212 286 357 347 568 231 120 119 422 319 352 163 366 151 519 390 219 575 170 318 363 248 148 588
 383  89 223 423 385 557 291 258 561 160 340 242 146 232 378 149 403 250 442 246 308 449  79 262 569
 587 520 107 334  61 344 205 593 150 441 253 156 276 194 145 394 556 577 263 166 260 370 538 198 137
 277 386 303 589 127 208 523 154 604 244 129 238  80 267 261 516 485  38  39 617 563 392 570  56 159
 478 207 195 315 184 131   2  99 171 583 140 295 210  40 220 407 481 132 497 586 584 595 531 525 217
 222 554  93 280 278 327 125 609 328 153 172 541 147 114  91 492 486 168 596 264 619 389 551 152  74
 571 175 122 468 418 566 564  37  14 505 451 164 279  77 374 502 515  84 532 185 117 354 191 535  25
 105 218 565 605 133 243 598 326 367 528  72 245  46   3  48 398 463 452 552 177 144 501 420 558  58
 200  50 599 471 507 228  54   9 401 548  23  55 174 364 109 521 224 601 580  65  75 615 518 562 272
 509  87  21 608 375  36  95 190  60 126 465  82  76 624  71 612  34 623 141 621 579 594 495 111 590

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.0049e+07us (= 10049ms, 10.049s)
Satisfaction error: 1
Number of search iterations: 3742
Number of local moves: 1094 (including on plateau: 399)
Number of local minimum: 340 (including on plateau: 51)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 426 234 22 197 5 66 15 11 618 136 337 361 6 484 239 519 403 577 39 586 619 354 420 562 590 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  26  79 510  10 163 602 429 411  76 479 436 562  27  60 623 451  11 606 414 468 360 430  92 365 135
  33  78 183  96  95 396 607 544  88 615 409  57  45 601 586 520  77 610 591 457 358 139  23 598  19
 273  25 620 136  84 283 622 609  46 619 585 117  34  75  63 399 138 363 209 513 553 556 614  90 199
 142  17  51 611  24 604 389 533 159 572 405 475 113 105 123 476 167 188 539 608 459 312 174 177 402
  39 132 418 483  91 364 617  66 495 616 519 412 169 537 251  86  62 110 458 523 137 428 280 383 149
  80 107 129  93 612 624 538 328  37 322 587 573  74  56 229 128 152 127 589 168 554 621 282 190 625
 299 222  71 574 195 516 237 302 289 613 526 115 118 189 292 596 161  52 324 492 165 579 261 528 109
 121 162  73 250 175 593 434 248 220 568 581 509 214  13 225 569 154 200 287 157 564 482 196 233 597
 213 172 284 239 244 208 178 246 618 234 371 323 194 236 131 373 592 111 571 442 498 521 116 210 500
 184 256 293 595 263 176 309 143 193 403 240 466 205 375 173 346 241 185 318 271 578 594 226 575 217
 228 356 472 119 254 181 260 398 317 326 275 465 308 192 580 391 274 215 425 264 394 266 337 307 221
 380 390 464 242 368 325 351 600 348 224 316 341 376 290 265 223 315 179 218 201 257 338 327 276 211
 330 355 272 304 381 147 268 243 352 335 359 384 255 145 295 522 170 350 314 410 336 286 230 361 421
 372 277 320 258 303 252 180  44 550 306 232 202 469 424 249 310 423 400 332 146 382 343 347 419 285
 329 342 331 455 395 386 158 305 432 349 156  35 278 480 557 279 392 297 206 443 171 235 387  30 397
 450 385 262 300 357 311 155 319 407 238 487 106 417  64 448 563 379 370 298 445 130  20 437  61 416
 478 447 367 431 499  49 377 340  12  43 124 134 378 525 354 281 408 345 527 439  97 164 321 259 426
 334 474 454 535 393  68 150 339 467 422 114 415 470 374 313 144 420  21 353   7   5  98 502 518 435
 485 333 441 388 294  85 166 548 452   6 413 270 503 104 369 267 362 453 187 122 446 148 456 296 231
 488 603  83 247 462 112  41  59 404  82  22 540 599 501 511 151 584 497  69 366 245 153 547 427  32
 524 496 504 102 555 508  53  42 401  65 481   9 531 438 542 191 534 512 219 227  72 197 477  58  87
 486 489 583 344 530 126 491  47 570  54  16 141 506 444  14  50 490 493  31  36 182 216 552 473 461
 449 463   3 433 529 133 514  38 558  28  70 532 517 536 484 301 505 576  40 125 204 120  15 440 212
 494 560 582  29  18 186  94 566 253 203 100  99 460 515   8  48 545 561 198 406 577 291 559   2 471
 588 605  55 551 541 590 207 507  81 103   1 543 565 546 140 160 269   4 108  89 101 288  67 549 567

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00025e+07us (= 10002.5ms, 10.0025s)
Wall-clock time (full program): 1.00515e+07us (= 10051.5ms, 10.0515s)
Satisfaction error: 1
Number of search iterations: 2795
Number of local moves: 852 (including on plateau: 428)
Number of local minimum: 234 (including on plateau: 55)
Number of resets: 1
Number of restarts: 0

Problem in diagonal 1: 135 598 614 312 137 168 324 200 592 346 580 290 255 202 156 238 12 339 166 112 555 344 3 560 588 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 111 607 609 504 162 510 479  13 230 566  45  53 460 156  34  71  38 124 618 470 589 102 118 548 608
 436 610 613 218 105  75 542 624 605 393  90  39 577 593  32  24  31 190 614  50 570 319  25 346 104
 571 356 480 369 591 134 545 107 597 600  51 140 579 598  64 487  46  33 227  97 513 222  95 243  80
 402  82 496 447 484 555 461  61  63 520 387 120 465 416  96  84 558  74 199 208 534 412 103 395 203
 423 229 538 617 620 621 406  81 415 214 161 128 578 150 622  72  41  37 581 251 435 216  93 153 143
 580 443 450 509 167 521 582 131 317 616 195 155 528 121 146 133 110 170 106 341 526 159 177 553  89
 407 262 164 533 137 539 603 232  87 212 184  62 189  47 185 302 561  58 490 213 518 438 181 615 606
 422  23 228 619 148  66 601 623 535 280 277 250 594 193 123 192 200 562 273  86 399 138 157 612 224
 364 249 220 182 297 201 269 410 602 522 439 215 508 127 206 320 246 288  70 226 495 573 324 237 235
 354 180 169 625 166 339 491 295 314 563 263 290 221 254 247 408 268 344 233 299 516 210 174 259 343
 507 129 441 291 197 298 425 219 400 260 414 274 239 267 255 202 462 173 179 279 611 240 540 355 168
 398 194 278 404 248 331 272 585 454 286 321 211 160 256 245 361 482 310 257 385 332 209 285 186 375
 315 244 371 357 175 323 282 165 348 421 207 307 328 236 316 381 433 432 382 238 303 294 301 300 366
 293 442 122 448 368 372 281 376 377 337 271 373 411 231 275 172 437 284 241 390  28 413 204 327 352
 191 145 380 176 489 351 144 135 358 420 330 325 365 292 353 309 397 492 386 252 223 360 434  99 419
 313 405 308 403 183 342 350 384 205 326   4 347 485 363 270  19 401 511 283 464 234  78 318 459 370
  91 362 472 261 431 151 266 289 178 287 453 276 333 417 478 378  20 486  12 264 108 536 424 473 379
 139 499 258 147 367 418 109 359  15 430 537 532  18 531 503 444 396   3 349 427 142 305 440 112 345
 338 154 446 115 152 449   8 329 469  83 477 304 198 501 569 584 335 466  55 568  98  68 596  69 394
 311 389  65  76 524 458 253 265 429   2  21 564  73 426 488 471 409 451 322   9   1 505 560 149 604
 158  17  92 171  44  56  94 554 101 242 512 583  27 544 599 498 455 392 506 586  29 519 475 114 457
 196 374 556  57 456  79   5 500  60   6 547 590 132  26 515 474 428 527 388 445 336  49 514  35 530
  52 525  11 130 574 125 187 225  77 136 543 595 100 483 559 497 523 541 502 113 217 296 306 117 391
 119 565  16 126 552 468   7 312 567  36 546 575 116  48 557 476  85 383  59 576  14 572 452 588  10
 334 340  42  40 188  43 163 551  22  67 550 517 141 549  88 467 463 494 493 587  54 592 529 481  30

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00017e+07us (= 10001.7ms, 10.0017s)
Wall-clock time (full program): 1.00512e+07us (= 10051.2ms, 10.0512s)
Satisfaction error: 2
Number of search iterations: 2611
Number of local moves: 947 (including on plateau: 485)
Number of local minimum: 243 (including on plateau: 58)
Number of resets: 1
Number of restarts: 0

Problem in column 16: 71 24 487 84 72 133 302 192 320 408 202 361 381 172 309 19 378 444 584 471 498 474 497 476 467 => the sum is 7826 rather than 7825
Problem in column 20: 470 50 97 208 251 341 213 86 226 299 279 385 238 390 252 464 264 427 568 9 586 445 113 576 587 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
   6 565   7  11 161 156 580  34 496 569 540 264 469 597 557 147 504 591 192 101  24 604  75 573   2
  67 609   9  65 348 190  63  32 511 564  58 570 579 537 547 132 544 447 567  70   4 541 224 525  22
 588 548 165  16 144   8 292  26 512 519  48 584 241 571 539  30 556 575 133  39 481 524 125   1 560
 381 559  41 116 370 195 498 121 152 561  13 485  12 506 523 149 592 577  40 314 120 578 331  69 522
  73 474  79 602 183 422 124  64 110 574 123 433 476 449 202  20 462 555 143 455  84 500 108 596 514
  83 583 439 380 420  50  25 112  99 490 465 288 329 444 128 267 542 471  62  10 457 495 189 503 494
 594 473 385 533  31 333 170  71  74 414 466 409 386  91 155  57 456 448   5 249 235 432 458 357 543
 428 429 337 410 395  53  81 184  45 383 406 532 325 408 131 280 376 460 220  46 404 515  18 424 535
 472 374 139 491 364 102 109 402  51 236 356 437 536 467  33 454 114 341  23 398 283 349 446 310 538
 375 346 304 342   3 134 270 450 501  17 434 438 487 413  96 419 268 245 343 425 299 483  37 378 318
 412 232 246 475 361 360 141 464 320 388  60 157 351 416 330 468 287 350 274 275 427  43 127 369 492
 423 213 354 431 394 225 145 279 294 382 248 549 328 122 436  93 218 393 338 372 293 367 358 311 259
 296 309 396 339 326 307 336 392 253 285 347 181 234 233 335 359 308 332 611 238 216 271 277 368 276
 319 306 517 363 484 208 401 315 230 297  89 593 237 389 587 273 194 174 257 291 384 266 178 256 217
 334 327 391 226 417 243 397 159 379 353 316 352 321 295 527 227 426 441 251 240 247 301 191 180 284
 100 199 387 138 261 497 407 262 196 242 228 229 286 513 486 622 169 302 373 477 265 212 581 172 221
  44 289 173 371 415 340 576 459 254 430 250 142 107 252 463 255 215 324 608 618 300  80 442 179 239
 317 167 305 151 528 510 418 600 231 201 303 182 204 163 313 589  36 214 405 595 281 260 563 176 113
 263 282 529 209 516 534 322 400 272  92 118 206 211 177 440 499 312 162 619 344 526 137 298 207 150
 126 168 489 223 508 554 452 568 269 175 171 186 586 198 403 546 146 148 160 624 104 140 582 188 111
 203  90 205 164 615 421 222 411 598  98 480  49 599 158 219 531 166  61 502 617 553  56 552 136 119
  94  14 258  85 453 482 451 488 478 130 445 185 278 197  29 106 193  59 200 601 590 323 606 518 562
 605 135 558 620  21 435 520 603 377 345 623  87 129 115 244 362 103  27 390 290 585 117 365 154  15
 612  68 607 621  35 545 470 530 572  52 625 210  76  19  55 479  88  86 616  82 566 153 187 366 105
 610  66 505 443  72 521 355 399 551  28 613  77  38  95  47 461 550  42 493  54  97  78 507 509 614

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.23095e+06us (= 4230.95ms, 4.23095s)
Wall-clock time (full program): 4.27964e+06us (= 4279.64ms, 4.27964s)
Satisfaction error: 0
Number of search iterations: 876
Number of local moves: 520 (including on plateau: 211)
Number of local minimum: 55 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 450 619 612 495  99 553  87 609 614  50 132  51 625  66  35 621 438 457  54  82  46  38  80 290 622
 535 251  48 412  29 613 501   3 568 575  27  67 540 157 140 162  71 489 346 526 557 589   1 458 160
 570 393 607 468 172 141  97 491 464 597  33  70 466  65  94  16 545 587 260 182 135 127 569 604  72
 533 578 154 525 165 419  31  93 623 123 282 416  81 115  45  98 487 600 181 221 386 602 601 380  86
 254 404 159 513 427 617  59 205 581 128 166 197 153 222 366 177 598 580 174 541 310 147  69 520 258
 229 426  78 163 114 373 227 436 603 189 131 130 558 481 271  96 215 504 618 371 199 155 224 537 497
 119 509 109 538 169 524 507 561 356 306 101 610 134 218 385 353 246 136 219 107 194 522   4 624 274
 556 490 515 263 579 236 171 620 137 328 275 430 244 152 173 186 232 204 268 161 347 149 428 475 206
 235 503 223 483 594 283 151 531  79 551 447 592 231 265 143 250  24 434 407 396 118 145  20 456 264
 567 584 266  12 401 315 226 615 273 498  90 593 211 164 228  49 402 112 253 198 527 313 297 418 213
 292 295 195 212 187 309 616 126 308 340 382 303 448 398 324 523 220 270 175 196 348 248 435 414 261
 216 455 191 565 214 240 188  85 582 590 252 280 185 564 517 241 225  17 170 442 200 208 326 462 410
 255 183 304 281 505 201 327 413 307 256 320 378 331 234 302 243 363 451 284 415 117 319 406 358 272
 317   6 360 330 323 291 343 422 259  61 369 300 269 357 338 321 355 312 399 294 345 389 361 299 405
 351 289 463 473 207  75 362 318 337 411 387 262 287 167 544 379 230 249  40 444 352 383 359  91 365
  57  37 342 611 334 499 392  92 543 286 417 408 111 301 311 350 333 285 388 233 288 446 372  73 316
 329  15 488 133 377 424 510  19 431 421 432 467 479 116 110 445 100 217 210 293 502 239 368 277 423
 440 238 576  55 465 381 374 367 209 496 179  88 439 573 237 403  14 409 314  22 384 146 542 120 354
 605  28 139  34 492 472   8 482  89  21 375  56 470 425 577 506 349 278  83 390 477 452 441 156 420
  44 298 459  68 453 129 528 461 104 335 394 486  10 443 596  77 336   9 469  58 516 144 476 532 400
 305 150  84  64 276 508 344 142 124 184 572 574 595 539 494  95 279 103 608 397 168 190 519  74 437
  47 148 493 391 247  30 521  39  25 512 563 560  62 511 242 583 534 176 325 548 121 296 339  41 471
  36 203  13 105 245  32 518 193  76 454 530 180 484 480 341 546 113 588 586 562 474 500  18  63 485
 478 585 571 364 322   2 559  53  11   7 433 125 370 257 552 591 566  26 395 192 108 549 547  60 102
   5 138 376 267 429 158 178 449 122 106 536 202  42 555 460 514 550 332 599 554 606 529  23  43  52

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 7.99471e+06us (= 7994.71ms, 7.99471s)
Wall-clock time (full program): 8.04329e+06us (= 8043.29ms, 8.04329s)
Satisfaction error: 0
Number of search iterations: 2075
Number of local moves: 854 (including on plateau: 289)
Number of local minimum: 157 (including on plateau: 42)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 407  17 211 341 609  34 513 459 133  65 601 505 116  80 476  90 109 578 180 566 364 154  21 571 625
  89 559 103 560 621  92 525  58  51 128 565 483  84  54 485  30  75 488 474 400 591 490 106 619  95
  69 200 272 249 585 228 469 563 548  78  50 604 575  77 595  74  19  31 244 576 415 142 320 589 253
  85 147  48 552 456 605 580 173 201 183 518 136  23 153 144 355 178 517 504  88 424 497 598 555 105
 141  81 602 455 391 189 606 499 206 111 569 143  35 110 218 250  98 371 603 132 586 426 338 608  57
 624 422 220 574 537 620 204 120 114  68 157 261  25 399 281  87 166 414 498 596 610 242 162 238 186
 176 263 193 119 524 225 547 304  42 431 108 531 169 196 131 567  56 579 418 584 410 516 213 447  76
  64 295 205 618 539 541 129 622 121  70 308 167 113 564 124 149 195 257 532 361 535 226 251 616 223
 174 198 215 267 411 317 433 231 277 212 233 232 125 282 287 219 328 614 611 454 550 266 268 331 290
 305 100 623 123 487 237 300 279 314 312 260 570 130 217 216 227 207 558 615 332 269 182 274 197 491
 286 306 298 222 376 329 288 380 278 301 179 406 240 315 352 209 319 369 349 273 358 145 409 493 345
 264 333 357 309 460 471 138 335 236 258 346 316 246 353 252 303 243 322 573 194 374 271 156 313 402
 255 280 340 275 259 208 190 342 360 307 468 152 284 326 296 276 381 441 343 359 337 155 494 234 463
 318 367 265 229 214 292 421 235 482 321  16 339 385 587 445 256 348 297 311 356 453 442 137 161 148
 434 299 412 450 165 395 327 172 373 291 330 262 389 158 347 446  13 324 370 387  93 289 293 416 390
 363 396 366 529 112 323 170 492 420 344 467 270 495  37 140 452 354 151 283 365 107 336  46 404 403
 408 379 160  97 150 392 368 440 397 419 413 444 506 388 362 378 479 294 181 310  49  47 384 325  55
 423 457 436  59 221  91 383  45 101 540 417 507 545  82 458 393 398 163   6 472 159 522 386 210 351
 377 175 502 462 192 177 334 135 553 432 481 449 382 247 489 475 477 146   5  41 241  40 405  96 512
 401 607  94 435  24  11 185 254 551 464 509 554 302 514  18 496 594 122  33  83  63 568 437  79 427
 549 448 542  73 168 520  53  15 510 372 480  71 500 543   3 350 581 134 126  22 248 465 429 102 521
 557 478 394   4  67 425  28 536 428 590  39   8 599 501  66 544 583 239 187 191 230  72 523  52 484
 528 503 375 526 188 597 515  60   2 461 164 199 533 592 439 171 430 245  62  29 184 527  14  38 443
 519   7  20  12  43 473   1 546 534 556  86  99 538 438 613 562 577 127 202 451 139 224 561  27 470
   9 508 572 285  26  32 118 530 593 511  61 117 486 612 588 466 617  44 115 203  36 582 600 104  10

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00028e+07us (= 10002.8ms, 10.0028s)
Wall-clock time (full program): 1.00517e+07us (= 10051.7ms, 10.0517s)
Satisfaction error: 2
Number of search iterations: 3349
Number of local moves: 1128 (including on plateau: 457)
Number of local minimum: 276 (including on plateau: 62)
Number of resets: 2
Number of restarts: 0

Problem in column 6: 34 92 228 605 189 620 225 541 317 237 329 471 208 292 395 323 392 91 177 11 520 425 597 473 32 => the sum is 7824 rather than 7825
Problem in column 22: 154 490 142 497 426 242 516 226 266 182 145 271 155 442 289 336 47 522 40 568 465 72 527 224 582 => the sum is 7826 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
  31  55 559 622 615 410 144 609 136 167 586  48  22 578 585  29 589 465 311 317 149  46  62 137 553
 618 114 220 517  69 412 388 621 307  68  49 141  65 573 395  41 472  33 556 101 596 583 116 276 494
 584  52 231  44 140 570 181 419  87 103 579  57 329 489 617  61 469  38 525 113 625 372 604 502  34
 523 121 282 564 247 387 402 228 380 135 461  92 105 491 496  82 427 354  53  79 504 194 591 146 481
 423 346 594 163 597 417 195 444 176 203 260 128  97 188 165 174 435  99 488 425 605 319 241 543 100
 379 175 554 142  71 607 269 202 251 132 580 134 213 569 234 147 466 125 544 616 390 183 267 451 124
 198 133 565 353  73 400 561  76 624 190  98 226 454 434 212 151 192 143 558 180 560 348 225 581 290
 159 507 534 215 284 436 185  95 492 301 328 258  89 332 470 340 208 610 526 255 396 104  80 398 223
 505 602 424 107  85 542 154 304 112 511 468 230 166 257 266 271 540  90 519 287 196  96 248 552 293
 118 244 611 224 322 567 218 623 262 199 458 407 158 359 441 265 191 249 568 274 490 243 211 119   4
 587 316 384 356 217  60  75 292 242 155 545 308 150 264 437 206 280 343 438 339 414 509 261 563  84
 397  72 299 314 345 256 254 416 186 291 148 383 599 235 263 539 399 555 138 286 508 297 216 327 102
   9 373 205 239 168 298 405 219 518 160 406 598 294 310 210 357  24 420 236 381 477 474 377 361 306
 376 370 184 273 411 281 302 227 418 197 467 401 312 374 342  19 452 421 478 109 278 182 285 325 341
 252 456 179 253 259 200 391 145 277 408 320 240 344 493 126 313 386 360 324 432 108 464 347 335 413
  26 368 351 367 486 275 612 378  88 288  17 355 352 279 233 366 371 334 201 426 457  91 309 365 430
   8 296 129 455 459 532 433 487  66 499 229 363 245  36 333 289 471 337  78 533 238 431 524  28 326
 392 404 601 338 303  63 403  47 394 232 300 139 448 613  74 547 453  35 130  21 237 608 369 123 551
 447 475   2 462 514 501  42   6 521 323 409 382 538 189 449 484  67 527  40 375  94 483  12 162 321
 443 442 330  27 562  50 482  51 473 445 207 429 512 171 331 529 127 295  83 606 153   7 549  93 428
  23 350 122   1  39 152 439 270 161 515 336 450 593  58 595 620 498 283 173 204  37 485 358 497 566
 349 575 111 214 422 157 115 440 385 577 250 495 460 110  77 393  54 500 131 506  11 318 537  64 574
 364 446  13 513 535 177 106 476 187 557   5 522 571 222  56 530 209 389  32 520 117  70 362 246 600
  86  30 120 480  10  16 479 178 546 550 305 576 516 156   3 531  20 548 614 172 170 603 510 588  18
 528 503 221 582 592  59 590 572 536 619  14 463 193  45 415 541  25 272  81 268  15 315 164  43 169

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 9.17505e+06us (= 9175.05ms, 9.17505s)
Wall-clock time (full program): 9.2237e+06us (= 9223.7ms, 9.2237s)
Satisfaction error: 0
Number of search iterations: 2813
Number of local moves: 965 (including on plateau: 451)
Number of local minimum: 232 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 583 134 545  27 165 297 577 564 315  43  65  90 126  60 580 609 130 416  53 617 497  52 593 122 565
  95 319 595 624 334  82 430 606 526 306  64 119 621  37  61  67 431  89  28 568  94  24 582 614 509
 592 390 250 540 461 426 200 543 201 610  20 110 111 104 350 581 597  34 180 163 118  18 552  74 600
  54 598 459 573 291 123 607 475 447 550  15  97  78 188 572 225 152 100 101 490 242  88 611 190 499
  40 109 615 417 562 405 525 520 613 355 158  93 591 146 120  91 596 179  36 210 601  50 407 204 182
  75 440 551  92 137 620 512 563 566 599  98 144  84 145 162 559 307 127 136 625 166 108 336  83 590
 154 476 548  45 125 410 451 340 487 396 164 114 113 140 619  71 523 195 603 214 155 135 484 240 623
 193 555 216 502 211 370 176 296 254 519 229 171  69 183 156 395 464 433 198 157 618 212 622 328 298
 394  99 167 265 274 493 142 506 503 571 149 331 251 153 184 278 521 345 139 213 399 215 400 353 480
 344 330 197 569 289 481 196 488 206 272 233 224 243 228 234 186 604 248 203 389 173 187 473 584 244
 605 264 339 192 494 217 393 323 515 172 246 295 226 284 253 362 317 303 326 281 205 332 446 227 208
 352 247 286 133 236 380 261 388 230 218 351 455 343 385 313 337 305 189 448 371 423 288 333 321 232
 257 266 275 320 312 259 239 360 382 608 418 249 235 301 462 346 377 316 199 374 151 456 117 256 290
 376 398 375 221  72 402 268 219 267   6 258 424 384 270 460 381 348 432 283 287 300 467 276 324 327
 309 369 207 318  48 285 325 282 429 245 223 457 311 273 358 354 368 367 341 277 361 383 237 356 342
 359  42 454 292 392 168 419 260 293 106 495 434 262 408 401 294 115 413 496 107 443 314 241 231 386
 485 470 373  17 420 202 299  62 412   5 280 508 397 338 422 465  56 177 391 425 365 486 174 510  86
 378 387 453 438 472 147 138 271  63  23 507 436 539 530 489 414  85  14 329 335 421 363 143 409  41
 366   3 349  31 428 150  81 160 474 121 511 449 411 452 444 435  19 404 578  58 441 492 310 517 141
 252 238 178 304 529  26 263 131 220 322 463 535 308 616 379  77 357 450 458  11 471 567 169  32 469
 498  38  49 536  87 112 442  73 194  46 589 439 302 586 546 533  80 406 477 132  16 528  25 553 538
 527 468 129 372 437 588  47  10  79 105 576 482 505 347  59 534 191 518 579  44  30 557 175 445  21
   8 549  57 427   1 575 403 161  13 541 587 181 513 542   9 185 501 531 479 478 612 415  33  22   2
 500  76 103 558 544 116 209 128  70 532 570 522 547 524  68  39 279 602 170 483 159 574  35 269 148
  29 560  55  12 504 491 222  96  66 554 556 466 255 585 124   7 102 537 594 516 364 514  51 561   4

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 4.34578e+06us (= 4345.78ms, 4.34578s)
Wall-clock time (full program): 4.39468e+06us (= 4394.68ms, 4.39468s)
Satisfaction error: 0
Number of search iterations: 921
Number of local moves: 543 (including on plateau: 183)
Number of local minimum: 70 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 554 270  22 449 514 565  49 506  15  81 600 485  80   2 444 566 186  86  54 575  26 532  27 555 582
 469   7 507 488 209 588 172 132 607  11 166 596 552  23 365 599  69 267  51 523 214  52 573 525  60
 473 524  20 541  95 218 572 580 502 610 487 597  25  14  30 304 199  34 537 618  42   1  65 584 153
 426 619 543  89 106 539 503 508 512  12 556 617  68 562  63 545 103 194  43 498  17  18 601  16  67
 482 472 557  59   8 475 224  83 496 531 474 461  75   4  56 454  77 268  33 448 499 438 594 495  62
  96  38 538 303 456  41 399 168 486 455 450 501 236 522 116 510 126 446 375  28 117 553 513  37 315
 402 400 492   3 548 479 100  57 463  10 465 536   6   5 325 550 108 159   9 453 476 528 396 420 435
  19 263 398  97 409 457 155  21 460 223 500 515 294 353 276 397 280  76 401 504 424 466 415 390  32
  50 282 417  24 452 393 425  46  40 489 484 246 416 347  66 432 329 439  87 394 429 343 462 312 421
 122 149 245  98 497 364 414 440 483 358 213 234 370 133 335  31 226 386 374 256 383 413 437 445 419
 372 216 327 190 316 284  91 265 331 561 443  13 330 257 471 355 163 382 451 410 368 279 468 388  94
 306 391 302 229 264 235 255 266 369 349 442 376 259 169 344 351 227 314 395 274 340 427 286 362 293
 187 173 380 360 283 323 238 319 342 240 412 447 434 324 322 403 379 373 295 338 281 134 252 345 241
 334 298 275 441 428 273 321 111 237 288 197 363 332 251 534 418 361 208 389 297 290 271 202 328 378
 326 407 333 470 176 180 436 175 357 317 308 269 309 359 477 174 341 559 129 170 339 595 233 228 158
 292 406 287 301 181 367 211 201 242 305 141 198 311 558 165 623 307 348 135 299 300 253 164 605 625
 318 392 205 603 200 320 621 547 336 366 277 289 371 230 104 171 520 191 571 225 207 231  88 203 239
 569 624 196 272 581  48 296 551 262 291 260 167 113  61 219 150 592 577 604 188 212 138 193 250 411
 142 249 215 352 578 161 579 387  64 184 156 232 544 574 248 130 590 560 143 144 591 137 109 221 535
 178 356 123 585 354 613 162 529 285 210 261 206 567 313 517  79 481 157 121 145 189 583 125 177 509
  45  74 278 505 120 105 458 254 179 217  73 140 606 598 608 346 430 589 616 243 518  92 195 114 422
 146 107 244 620 222 185 350 570 385 542 192  99 564 549 493 119 511 112 423  85 310 622 128  93 154
 433 540 183 258 115  78 408 152 220 160  58 131 381 491 530  36 384 519 467 527 147 516 602  84 405
 563  90 124 151 586 490 182 431  82 611  71  72 118 533 102  53 377 101 546 136 494 148 587 609 568
 521 478 614 337 127  44 204 526  70 404 139  35 464 593 615  29 459 480 576  47 612  55 110  39 247

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 3.85996e+06us (= 3859.96ms, 3.85996s)
Wall-clock time (full program): 3.90916e+06us (= 3909.16ms, 3.90916s)
Satisfaction error: 0
Number of search iterations: 960
Number of local moves: 517 (including on plateau: 170)
Number of local minimum: 62 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 609 530 545 516 190 359 598 331  40  87 475 619 600 105 128  95 412  76 463 225  83  50  84  32 573
 484 208 505 591 281 384  56 143 168  47 418 211  49  24  13 593 507 554 460 574 136 500 214 264 441
  65  78 543 535 252 623 158 300 564  31 439  52 529 528 519 218  81 398 454 118 275  86  54 589 336
  33 160 525 605 378 624 170 414 587  91 480 617 547 114 216 137 369 145 385 188 382  63 175 328  92
 141 390 539 488 625 111 112 603 174 185 483 115 476 477 109 287 148  72 431 107 467 236 581 134 334
 154 235 121 487 455 570  36 387  82 103 347  88 533 579 285 294 135 110 551 621 234 291 207 402 518
 361 544 569 430 445 163 301 113 317 182 465  66 615  48 131 393 546 265 620 198 176  70 239 254 314
 306 172 320 261 263 140 309 395 578 201 576 157 345 199 232 491 566 421  94 181 191 246 622 251 308
 344 238 169 565 396 138  75 610 608 183 422  67 277 119 187 447 601  85 559 165 352 155 611 150 302
 335 292 205 249 226 295 177 613 189 597 162 410 521 323 133 616 224   4 612 293 116 171 258 266 538
 567 139 389 298 360 130 456 257 222 267 358 250 305 282 269 228 536 223 370 297 444 368 245 276 289
 270 401 338 213 588 342 193 206 377 371 348 349 296 327 351 221 240 419 120 288 147 392 548 124 356
 343 325 229 219  51 284 526 354 420 126 326 313 280 520 329 357 330 434 303 272 241 262 332 255 394
 166 215 279 350 443 372 248 299 101 286 339 362 527 180 312 404 316 429 161 307 278 468 178 432 373
 407 474 379  34 411 321 383 333 231 417 290 413 415 386   2 204 426 380 142 227 173 409 256 452 260
 367 400 315 561  21 322 406 337 117 446 273 428 318 108 435 217 440 253  77 438 164  58 381 568 375
 376 310 391  74  14 355  59 436   3 448 425 478  23   7 604 242  55 473 247 498 424 403 451 563 466
 502 353 494 364 461 399 433 146 405 459 104 340 132 197 514  93  97  99 324 464 195 366 283 499 102
 233 365 244 194  73 397 200  43 341 555 515 584  35 540 501  80   6 151 210 541 537 442 453 490  96
  22 470  17 159 524  20 423 346 511 311  30 462 196 388 374 144  18 586 575 186 557 469 457 458 122
   5 486 125 192 152 492 534  53 481 517  10  12  61 237 596 220 550 509 153 202 508 558 513 602  57
  38 504  60   1  29 271 212 416 408 532 209 607  15 496 523 542 506 479 243 493 497  62  71 100 510
 531  39 449   9  41  27 582 437 560 552  26 127  42 553 522 268 123 599 167 427 606 571  19  98 450
 594   8  64 274 556  68 583 184 304 512  46 592 485 503 495 562 577 179  79  44  28 580 230 149 129
 572 489  11 156 590 618 595  69  37 319 259 106 203 585  45 472  16 482  25 471 614 549 363  89  90

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00018e+07us (= 10001.8ms, 10.0018s)
Wall-clock time (full program): 1.00505e+07us (= 10050.5ms, 10.0505s)
Satisfaction error: 2
Number of search iterations: 2573
Number of local moves: 899 (including on plateau: 381)
Number of local minimum: 211 (including on plateau: 46)
Number of resets: 1
Number of restarts: 0

Problem in row 19: 233 365 244 194 73 397 200 43 341 555 515 584 35 540 501 80 6 151 210 541 537 442 453 490 96 => the sum is 7826 rather than 7825
Problem in row 22: 38 504 60 1 29 271 212 416 408 532 209 607 15 496 523 542 506 479 243 493 497 62 71 100 510 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 111 566 297 604 590 465  35 567 581  10 574 104  79 343   5 611 522  39 178  20 271  59 503 117 575
  30 585 185 596 127 228 527  54  53  27 597  14  68 437 190 512 520 496 210 543  45  64 564 560 593
 557 546 552 547 253 165 322 466 215  24 595 548 556 276  29 572 207  55 424 613 208  32  46   2  15
 559 176  36  26 537 591 551 390 305 198 529 334  23 526 523 524 576   1 112   8 139  11 244 490 416
 202 460 238 168 128 377 484  12  90 132 505 296 544 153 540 493 536 555 237 464  17 483 129 452 130
 399 413 110 476 515  81 370 417 277 216 514 446 368   3  85 478 480 389 504  44 189 133 221 473 223
 509 513 622 534 494 116  96 105 455 100 485 489  22 319 497 533 191 448   4  74  37 200 356 401 225
 341  33 169 553 451 415 479  48  86 214 163 517 362  16 409 475 462 600 507 436 209 154 113 382 231
  67  42  52 405 444 421 350 477 134 249 502 530 234 442 364 472 298 447  13 393  83 380 280 461 285
 498 412 323 392 373 394 541 224 381 184 440  43 367 426 313 398 403 326 361   7 288 579  19  61  72
 414 562 327 396  47 357 430 321 404 268  18 420 329 123 317 151 354 450 427 318 335 304 108 250 395
 388 328 290 256 375 306 397 372 365 274 336 346 293 610 320 282 266  89 439 406 265 289 196 281  56
 371 360 337 338 287 295 348 248 340 283 181 385 384 311 352 279  25 275 363 379 310 423 532  80 339
 301 262 315 324 188 291 345 402 299 538 213 218 387 284 251 308 233 260 347 263 558 292 316 366 264
 344 187 422 355 349 565 222 179 302 164 332 411 449 467 325 545 206  41 157 353 303 212 587 204 144
 199 286 342 180 161 294 241 470 177 333 270 312 459 247 501 183 307 101 118 226 309 516 519 563 511
 137 240 242 152 160 243 246 458 469 499 175 586 369 435 261 147 601 150 603 235 438 141 174 156 508
 136 236 272 258 577  63 429 232 220 608 606 140 278 121 257 124 201 492 419 149 217 407 463 486 434
 219 568 269 425 142 359  91 172 203 433 211 227  69 588 171  78 506 518 615 193 618  82 135 582 351
  94 167 254 115 482 625  28 607 230 376  38  71 170 583 205 331 120 623  58 621 599 491 400 106 431
 589 158 578  70 598 119 146 148 173 457 239 182 255 418 549 109  77  95 561 616 474 580 267 245 122
 229 125 468 259  93 487 197 619 330 612 143  73 592   9 539  84 195 114 192 138 374 481 573 378 521
  62  51 159 273 162 155  97 131 594 571  50 386 570 186 609  40  60 605 428 495 383 535 500 103 620
 445  21 510  66  98 314 443 252 525 471  34 145 166 453 126  31  88 554 441 531 542 569  92 550 358
 624 528 456  57 194  99 410 454 617 584  75 602 432  49  87  65 391 102 107 300 614 408 488  76   6

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00031e+07us (= 10003.1ms, 10.0031s)
Wall-clock time (full program): 1.00501e+07us (= 10050.1ms, 10.0501s)
Satisfaction error: 2
Number of search iterations: 3023
Number of local moves: 968 (including on plateau: 389)
Number of local minimum: 247 (including on plateau: 54)
Number of resets: 2
Number of restarts: 0

Problem in row 1: 111 566 297 604 590 465 35 567 581 10 574 104 79 343 5 611 522 39 178 20 271 59 503 117 575 => the sum is 7826 rather than 7825
Problem in row 6: 399 413 110 476 515 81 370 417 277 216 514 446 368 3 85 478 480 389 504 44 189 133 221 473 223 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 611 610 500 119  47 479 617 386 546 240 113 621  49 497  75 548  28  72  51  99  38 490  22 623 344
 100 292 528 586  35 460 598 466 577 422  63 561  33  70 619  43  40 150 167 110 581 124  68 608 524
  78 483 605  48  34 563 413 512 469  87  61 559 618 139 573  83  32  24 153 535  41 107 597 575 436
  71 547  91 616  27 455 584 428 590 418 569 596  60  50 163  26  55  98 195 537 102 256 172 513 606
 121 180  92 103 615 541 539 452 620 116 196 189 391 185 624 267 187  86  85 609 241 144 207 504 531
  66 165 481  94 268 603 463 488 157 218 137 204 536 594 506 565  81 382 169 250 112 128 216 495 447
 227  79 415 135 558 509 275 550 501 120 154 146 194  76  82 555 273 486 622 197  84 625 133 321 508
 193 184 251 174 158 515 562 607 427 560 257 219 595 147 178  53 200 602 118 328 186 156 198 381 576
 614 122 280 212 345 338 514 468 306 498 161 152 474 214 149 171 568 143 232 248 332 242 263 478 301
 390 261 291 262 366 302 458 266 476 354 282 326 225 234 182 125 361 181 271 255 604 245 164 613 331
 145 269 270 244 312 369 296 252 151 346 507 359 311 457 209 253 264 432 247 238 307 398 520 370 299
 281 274 349 503 279 350 129 339 126 323 177 330 202 383 235 233 322 246 552 356 294 298 414 424 406
 284 199 341 347 408 325 395 278 286 230 290 444 215 190 352 333 335 451 293 213 297 288 228 403 400
 314 365 313 453 337 316 516 329 159 211 217 223 308 319 429 372 310  14 430   9 387 396 492 243 363
 334 388 445 380 351 276 229 179 142 472 431 231 237 393 220 348 416 357 342 305 376 208 320 272 173
 389 265 285 318 205  17 168 433 426 368 417 309 148 449 379 201 362 300 324 491 340 425 315 136 355
 258 394  57 411 423 210 170  31 160  80 409 526 138 473 377 470 401 367 485 522 404 378 364 155 162
 371 464 405 399 384 392 114 226 397  97 192 353 530 434 289 412 188  65 327 529 467 402 105 117 166
 373 419 462 421 440 206 236 203 239 175 571 336 303 410 482 532 442 437 260 106 317 343  42  18  52
 304   7 471 450 517 283 132   8 420  30 375  36  95 461 435 554 540 459 582  20 456 407 465 249  69
 533 446 499 454 441  96 224 130  93 477 519 543 358   1  39  19 448 525 487 131  10 489 579  62 222
 521 542  56   4 108  64  25  90 104 593 553   2 601 566 439 538 443 191 494 567 545  13 475 115 176
 385 438  15  12 510  23  74  67  11 551 493   5 599 570  37 101 564 572 574 589 583 580 287  44 141
 502  58 277 523 534  45  73  59 183 295  89 549 109   3 612 505 484 585 254  54 587 556 591  77 221
 360 374  46 557 123  88  21 578 259 544 592   6 496 511 140 518 480 600 111 527 134 127 588  29  16

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00005e+07us (= 10000.5ms, 10.0005s)
Wall-clock time (full program): 1.00498e+07us (= 10049.8ms, 10.0498s)
Satisfaction error: 2
Number of search iterations: 2681
Number of local moves: 855 (including on plateau: 269)
Number of local minimum: 234 (including on plateau: 37)
Number of resets: 2
Number of restarts: 0

Problem in column 14: 497 70 139 50 185 594 76 147 214 234 457 383 190 319 393 449 473 434 410 461 1 566 570 3 511 => the sum is 7826 rather than 7825
Problem in column 17: 28 40 32 55 187 81 273 200 568 361 264 322 335 310 416 362 401 188 442 540 448 443 564 484 480 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 515  64 199 550 512 511 613 478 600  31 116  20  96 151 473 288  86 624 417 105  32  59 611 112 562
 103 574   3 428 185 456 491  69 567 272 146  67 180  52 438 589 132 597 157  29 113 458 498 620 601
 330  46 593 583 500 617 604 540 603  99  55 128  63 290 241 424  39 219 166 131 594 557 107 163 133
 210 110 148 539 516 612 197 580 440 203  58 260 292 102 481 514 152 625 618 189 101 121 232  79 446
 592  25  61 623  56 455  91 616 565  88 184  30 275 267 619 610 120  77 169 115 492  87 573 427 608
 459  21  82 519 431 410 615 596 545 426 423 138 153 386 173 245  34 581 109 518 194  90 400 123 154
 252 211 135 598 556 377 591  81 607 253 235 139  28 183 255 551 436 269 474 357 140 191 493 270 143
 402 313 160 453 496 549 380 528 334 218  94 149 534 277  85 435 155  53 126 223 467  95 195 535 569
 544 193 239 360 586 507 282 250 460 181 445 321 162 179 323 209 359 254 230 382 554 302 217 100 186
 172 606 182 205 196 588 207 437 315 337 300 309 124 188 582  83 537 206 259 228 297 316 289 320 542
 388 310 266 520 226  23 150 208 480 263 296 298 285 425 488 475 225 392 220 419 409 216 314 238 291
 276 479 322 278 477 251 147 325 339 338  76 343 201 125 526 367 273 243 281 521 576 311 231 286 233
 340 299 352 279 294 295 306 396 198 222 391 342 408 361 187 229 385 221 399 354 271 348 351 333 264
 258 246 390 293 283 383 536  37 145 336 379 265 372 346 234 345 240 317 397 328 371 329 307 332 356
 256 508  24 171 584  70 127 525 117 448  22 416 331 242 213 413 422 274 358 362 261 368 484 505 324
  42 349 558 161 393  72 394 470 366 304 432 504 373 389 141 257 305 414 487 214  47 204 129 485 335
 347 450 442  36 365 176 401 159   1 398 464 312 577 494  17 497 215 420 174 318 192 341 524  93 412
  50 472 499 106  48  44   9 376 406 468 375 614 212 370 471  12 532 224 168 449 605 451   7 530 327
 118 489 381 326  41  51 353 405 177 395 527 247   2 403  16  62 501 447 415 452 384 563 200 404 466
 134 439 369 167  89 522 378  80 244 407 434 374 418  49 355 178 570  60 523 130 364 506 262 465 308
 548 482 510 122 248 164 268 119 136 463 566 495 469 503  98  92  38 190 571 433  40 350  26 575 319
 344 533 441  13 237  45 430 476  73 363 538 429 568 595  15 457 509 454  27 444 111  11 560  84  68
 547 175 483 202  97 165 142   4  14 158 579 587 490 502 284 170 578  43 621   8 461 572 280 609  54
  57 287 543 227 108  71  35  65  75 599 553 486 590 387 546 249 421 602 156 585 513 517   6  33 114
 541 144 443  66 301 411  78   5  18 555 137 552 622 559 564  74 561  19 303 531 236 462 529 104  10

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00011e+07us (= 10001.1ms, 10.0011s)
Wall-clock time (full program): 1.00499e+07us (= 10049.9ms, 10.0499s)
Satisfaction error: 1
Number of search iterations: 3248
Number of local moves: 877 (including on plateau: 309)
Number of local minimum: 289 (including on plateau: 50)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 0: 515 574 593 539 56 410 591 528 460 337 296 343 408 346 213 257 215 224 415 130 40 11 280 33 10 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 133 215 562 602  54 485 503 617 540 366 537 621 121  76  64 351  37 287 109 235 115  84  53 608 450
  32 227 587 476 609 586  20 482 529 116 612 143  47 508 436 353  15  25 123 423 564  83  41 519 269
  44 125 622 185  42 527 108 451 525  81 127 502 230 299  86 146 102 469  75 614 427 265 615 560 598
  17 300 488 515 232 577  69  79 385 113 549 518 372  89 243 138  52 201 491 575 600 619  34 538  31
  11 603 594 405 543 580 233 542 610 112  85 150 237 153  33 203  46  68 458 275 620  61  80 522 601
 135 166 553 471 210 415 225  22 552 305 158 604 499 165 296 136 260 177 530 567  87 217 244 207 624
 226  90 592 172 183 544 568 337 535 202 513 151 264 169  67 124 618 104  13 107 431 573 550 274 418
 223 266   5 480 597 558 607  10 524  93 198 490  55 461  91  29 555 421 449 154 212 157 149 613 428
 248 234 119 584  24 447 117 599 470 505  57 167 128 281 484 220 410 192 590 417 514 134 142 381 361
 242 181 160 178  49 419 526 456 261 442 459 191 197  40 347 510 259 270 521 460 328 195 374 477 283
 386 114 432 193 541 159 358  62 517 162 363 229 382 307 317 214 280 332 164 240 396 579 297 355 446
 574 605 171 222 546   8 257 391 209 360 288  59 126 247 506 380 182 441 334 221 340 170 474 364 350
 440 352 250 462 335 129 289 314 180 174 318 327 263 445 245 416 349 345 434 208 389 344 376 179 262
 277 414 397 341 392 420 168 161 338 216 231 326 596 390 279 379 377 333 437 308 206 254 330 228  27
 311 438 329 384 325 324 581 282 249 239 276 321 290 292  78 375 388 331 306 298 241 186 342 238 401
 315 487 246 286 302 272 184 211 213 236  50 224 409  70  66 625 323 435 406 531 268 412 520 309 425
 444 370 320 301 253 111 367 139  72 493 378 371 429 194 464 400 570  97 559 452 132 359 312 173  65
 398 422 346 304 455 144 489 293 110 504 430 343  43 373 316 362  56  39 354  82 606 536 457 200 163
 554 394 118 120 278  77 152 336  58 496 498 547 284 454 472 402 523 190 106 426 205 557   2 387 189
 551 368 101  38 511 100 486  99  30 439  73 369 585 319 495 466 404 589 218 291  28 467 407 140 251
 561  18 348 175 252 148 478 365 141 516 303 448 588 395 497 147 295 548  12 204 383 399 105  16 483
 533 492  19 131   4  71 433 411  51 494 512  45 593 479 267 539 595 545 408  74  95  14 616  48 356
 572 403 310 273 294 122   6 255 623 563 219  88 413 507 578 463 339 322 569 187  23 393 256  21  26
 500   7  96 424 509 465  36 443  94 145  63  35  92 501 532 176 591 583 156 475 357 571 473 313 188
  98 534  60 103 285 137 565 468   9 453 528 556 582 611 566 271 199 481   3   1 258 196 576 155 130

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 1.00002e+07us (= 10000.2ms, 10.0002s)
Wall-clock time (full program): 1.00489e+07us (= 10048.9ms, 10.0489s)
Satisfaction error: 1
Number of search iterations: 3668
Number of local moves: 1171 (including on plateau: 497)
Number of local minimum: 294 (including on plateau: 52)
Number of resets: 2
Number of restarts: 0

Problem in diagonal 1: 450 519 615 619 620 567 13 421 410 510 317 247 263 326 276 236 72 293 152 100 252 131 310 7 98 => the sum is 7824 rather than 7825
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 126 local moves
Selected variables are frozen for: 0 local moves
63 variables are reset when 126 variables are frozen
Do a restart each time 625 resets are performed
############
Solution:
 600 101 106 116  33  54  34 616 550 554 544  64 622  19 321 397  37 370 561  27 465  43 586 596 409
 618 159 621 525  63 126  93  92  81  79 576 617 612  39 394 507  44 516 216  32 588  31  49 522 625
 218 100 233 591 190 563  58 111 357 483 487  68  77  53 526 430 183 533 136 152 395 157 574 547 603
 426 518 264 558  66 266  35 141 108 429 146  72  50 619  91 128  38 449 441  80 478 620 610 590 602
 452 119 135  82 473 587 228 607 486 118 579 212 324  59 585 570 145 538  90 235 314 161  47 178 501
 181  29 110 162 221 575 154 242  97 551 468 206 469 416 167 605 102 182 571 601 427 117 148 514 510
 569 151 172 188 204 584 464 243 376 572 276 158  99  57 509 163 179 512 528 291 359 226 253 256 436
 540 166 301 300 155 270 109 623 564 537 140 192 107  98 615 203 169 481 581 144 523  45 202 147 613
 325 224 306  78 149 336 241 624 213 355 127 275 268 405 120 567 609 535 455  84 415 352 170 211 381
 594 292 263 189 115 503 438  51 527 401 193 288 299 277 160 328 219 176 614 447 476 227 175 343 230
 248 209 608 142 466 198 184 171 315 290 302 185 287 344 303 335 267 298 384 295 566 246 345 406 431
 282 173 199 389 165 377 180 378 410 261 592 238 329 265 539 346 132 318 222 319 606 244 139 362 360
 258 364 402 393 137 369 411 327 304 375 278 281 237 350 390 205 342 340 197 367 339 200 338 349 272
 310 232 240 254 422 217 187 442 365 331 293 138 229 354 286 419 454 196 347 279 251 337 471 462 309
  86 234 351 474 548 311 247 467 250 358 273 215 453 356 458 388 372 191 373 269 257 366 326   7 195
 341 417 387 443 560  14 479 460  85 105 400 363 494 450 271 177 371  94  87 444 131 262 382 334 274
  18 456 313 505 123 297 565 316   3  46 408 294 231 519 495 368 285 451  65 434 103 488 531 259 252
  26 392 398 521 380 396 223 239 470  96 330 424 423 573  24  22 421   1 320 504 201 353 399 515 174
 312 496 407 446 418 284 332 323 461  69 463 361 374 498  71  74 517 125  25 414 236 541   6 448 124
 307 532 404 348 484 283 480  62 113 150 433 543 597 412 379 156 322 114  75 317 225 383 556  89  61
 333 599 529  55 386 134 472 428 385 493  16 499  40 129  76 437 553 425  67 557 133 403   8 500 168
 214 595 413  11 589 524 502 459 208 260 112 549  42 485 186  52 439  12 477 580 210 391 457  41  17
  21 577   5 492 545 305 520 245 491 289 104 497  28  20 475 249 511 440 207 508  23 534 489  56 194
 542 255  60  73 420 130 578 143 536 593 164 604 552 445  88 546 559 308 506  13   9 568   2  83  48
   4 435 598 490 513 122 611  15  70  30 121 482 582 583 296 153 555 220 280 432  95 530 562  10  36

SATISFACTION run
Permutation problem: true
Time budget: 1e+07us (= 10000ms, 10s)
Search time: 2.7494e+06us (= 2749.4ms, 2.7494s)
Wall-clock time (full program): 2.79903e+06us (= 2799.03ms, 2.79903s)
Satisfaction error: 0
Number of search iterations: 901
Number of local moves: 490 (including on plateau: 119)
Number of local minimum: 66 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0

