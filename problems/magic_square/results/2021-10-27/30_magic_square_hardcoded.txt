@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  48 143 110 427 774 860 217 859 787 640  85 425 852 857 422 364 692 165  36 177  18  57 393 833 793 803 858  28  23 769
 729 471 413  25 183 315 665 282 849  94 336 811 433 522 152 263 837 121 201 763 884 451 679  27 768 277 715   7 710 532
  26 349 574 147 367 776 895 373  21 650 540 828 739 778 812 304 734 878 246 212  46 399 434 127 887 222 550 156 193 252
 578 327 274 332   2 488 365 744  83 698 113 777 629 732 118 241 630 176 594 303 545 528 495 691 481 816  92 664 820 179
  62 339 861 496 191 257 321 693 844 843 103 420 461 669 380  68 688  61 853 202 791 146 102 424 423 890 789 533 275 330
 804 463 654 408 873  82 480 866 511 228 840 161 464 558 678 107 748 126 329 699  17 160 124 593 544 223 830 220  51 674
 742 501 667 395 642 746  52 722 168  72 405 554 414 233 754 109 595 764  37 502 446   6  45 854 439 666 737 649 445 154
 579 396 386 624 717 711 294  15 757  49 184 658 751 633 608 272 663 255 588 680 258  10  38 208 155 761 617 686 249 713
 586 656 128 144 562 653 598 683 750 517 199 271 626 657 652 268 384  11 615 174 718 889 106 334 561 320 410 795 151  97
 714 187 690 541 300 142 801 609 883 508 375  24 605 467  89 759 111 752 733 346 200 328 198 762 882  73 566 100 500 270
 620 681 673  20 129 731 677 672 587 845 450 298 455 572 171 290 531 342  65 254 675 164 190 529 592 676 504 549  43 530
 616 232 428  79 835 114 469 514 705 180 512  44 509 694 621 842 590 484 385 721  91 477 628 505 214 557 182 632 498 157
 780  99 133 564 112 215 306 506 210 333 526 808 876 599 525 601 392 229 372 295 758 782 636 706 453 419  53 499 374 354
 637 794 821 357 486 400  80 604 546 205 619 104 825 169  32 432 331 612 553 447 490 412 325 377 407 568 307 465 648 462
 452 459 542 483 701 779 527 708 822 314 145 281 326 267 507 379 668 226 716 438 391 382 602 870 337 172  13 122 641 245
 589 436 316 515 429 503 851 563 296 772 251 148 273 318 204 559 539 265 418 571 369 575 363 513 335 838  81 745 283 597
 567 697 881 347 140  86 518 362  98 893 417 831 441 487 534 635 138 371 170 435 703  54 149 289 723 284 610 415 456 784
 292 856  34 521 684  56 473 551  58 444 340 312 560 269 458 569 358 898 403 555 404 724 470  12 556 240 454 815 743 406
 651 153 101 466 687 891 196 345 449 297 726 280 285 603 287 591 317 376 520 194  75 618 659 869 818 293 894 299 348 227
 125 797 847  30 130 416 600   9 305 431 350 485 260 611 827 584 324 398 355 728 244 647 738 411 323 836  67 489 670 478
 135 397 117 867  42  88 695 516 278 378 388 788 119 360 740 805  95 671 286 218 871 510  55 291 576 242 781 577 839 790
 834 389 402 800  96 301 243 475  63 573 565 322 644 239 798 736 457 338 213 755 634 868 885 235  41 387  31 319 864   8
 162 313 494 519 361 250 279 493 353 646 356 771 259 115  39 702 211 308 783 806 492 430 655 368 440 256 707 872 538 537
 627 810 341 631 896 276 662   5 892 236 660 704 123 230 207 302 264 796  33 900 167 753 719 841 238 248  71 552 197 134
  64  35  66  76 863 309 865 163 643 206  74 712 141 216 786 105 819 886 770 741 409 460 880 120  90  22 623 875 874 622
 181 221 381 625 613 497 596 437 188 524 832 175  14  70 442 756 482 807 237 850 824 767 474 186 261 359 547 219 607 343
 401 606  78 899 185 823 491  19 150 855 709 383 582 225  59 159 253 472 813  93 581 116 897 848 231   1 829 535 583 639
 136 817 888 879  60 638 209 224 792 173 799 351 523  69 696 262  47 548 682 203 826 366 773 476 178 862 137  16 158 727
 749 580 645 877 720 266  50  77 139 443 814 310 131 760 725 685 370 394 700  87 585 747 189 132   4 661 108 448 344 775
  29 311 570 421 735 846  40 426 288 468 802 479 195 536 192 766 247 785 809 166   3 689 614  84 765 543 352 234 390 730

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.50222e+07us (= 15022.2ms, 15.0222s)
Wall-clock time (full program): 1.50553e+07us (= 15055.3ms, 15.0553s)
Satisfaction error: 0
Number of search iterations: 7186
Number of local moves: 1783 (including on plateau: 800)
Number of local minimum: 656 (including on plateau: 98)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 260 771  63  35 759 132 101 166 806  26  94 816 838  27 793 839 886 156  67 823 164 800 885 107 201 185 797 836 856 226
 862 181 831 781 869 782  40  64 837 716 246 878 291  98 715 323 881  12 880 802  73 842 211  62 689  90   1 317  18 123
 737 872 198 827 548   6 755  17  59 253 468 877 857   7 876 286 753 720 819 844 270 853 133  58 227 148 849  10   9 179
 812 847  31 100 668 829 276 126 860  28 238 843 832 495 651 157 835  15 776 746  46 787 642 373 392 285 637  11  36 141
 828 808 725 684  21 813  23 297 693 774  24 744  53  13 873 163 783  84 347 770  95 758 764 192  57 316 745 162 788 118
 780 757 778 727 401  20 343 262 767   5  47 796 627  19 761 643 733   8 739 669  93 750 640 349  88  48 635 196 644 190
 811  30 673 585 718 609  72 294 695 516 672 683 679 195 772 296 709 440 588 707  39 656  22  16 587 231 798  99 217 106
 738 686 586 625 172 647 632 446 561 682 331 594 568 144 721 324 136  69 803 653 143 791  71 243 114 113 752 241 203 726
 728 678 550 714 573 599 688 220  32 411 663 775 493   3 623 272 571 657 680 699 110  25 616 159 692 234 639 216 119  76
 406 621 612 606 558 667 735 283 560 153 598 584 574 638 690  89 404 613 580 581 389 661 551  66  81 170 756  82 151  56
 611  44 711 628 553 654 518 390 146 614  70 327   2 530 622 507 691 479 675 354 326 519 649 305 565 293 522 590 577  43
 499 538 497 520 636 332 579 214 631 569 257  65 524 589 724 213 300 515 575 602 335 527 346  97 490 319 428 555 513 526
  29  61 618 697  33 501 592 477 629 534 608 250 620 476 509 339 559 489 545 528 328 259 600 467 430 245 503 578 478 533
 674 597 583 544 531 549 465 337 400 403 535 488 506 537 438 496 104 466 543 475 341 487 572  85 351  14 582 330 491 591
 508 610 425 437 362 364 445 448 455 397 677 511 290 595   4 391 360 485 470 539 472 311 407 529 542 396 427 624 540 494
 225 517 492 617 444 393 457 502 419 471 398 345 521 340 433 532 441 336 450 418 547 370 459 482 463 633 394 512 461 443
 306 365 593 417 840 541 566 563 169 498 413 421 242 685 447 452 453 484 500 514 356 510 325 570 222 376 310 523 385 469
 371 456 358 233 369 372 480 473 379 355 280 357 434 352 454 740 423 850 338 601 619 402 399 429 676 854 235 458 308 460
 304 464 386 481 230 218 408 552 221 368 395 420 435 431 449 848 439 329 882 244 557 271 451 815 375 670 378 659 409 426
 366 307 363 416 282 281 367 380 374 824 769 302 348 432 301 807 289 436 483 350 645 334 232 747 861 562 112 712 359 474
 312 320 265 268 556 171 215 605 263 698 696 353 412 700 255 650 381 318 405 176 866 264 410 841 388 615 277 766 224 845
 274 344 278 858 333 182 342 287 891 315 817 208 894 303 273 442 194 295 202 309 662 298 322 713 361 762  91 723 722 820
 486 188 186 205 719 145 249 898 178 258 546 239 382 809 134 786 377 321 269 161 626 256 834 779 879 763 251 703 228 660
 634 266 749 207 229 292 897 681 150 124 863 116 167 267 174 732 415 313 154 189 708 279 871 892 804 773 204 607 567 191
 175 288 254 152 184 855 240 604 247 219 193 299 536 864 261 706 743 868 210 158 826 117 248 731 893 671 384 383 576 630
  55 168 785  60 888 137  80 765 197 883 603  75 109 704 314 525  83 646 237 199 648 139 734 784 128 896 889 687 387 710
  79 183 505 865 165  92 564 830 206 825 138 252 284 833  54 105 177 701  77 122 846 223 736 814 742 705 462 131 900 899
 121 160 147 140 180 852 790 818 173 125 142 554 641 895 111 760 108 810 135 130 792 209 155 655 424 694 212 887 821 874
 102 504  86  37  42 822 795 748 851 754 875 275 120 729  38  51  87 870  34  74 794 702 103 741 129 789 149 867 751 596
 422 884 187  49 652 658 801 768 666 717 859  68 236 805  45  41 200 730  52  78 799 115 127 414 664 665  96  50 777 890

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.955e+06us (= 5955ms, 5.955s)
Wall-clock time (full program): 5.98805e+06us (= 5988.05ms, 5.98805s)
Satisfaction error: 0
Number of search iterations: 2216
Number of local moves: 923 (including on plateau: 422)
Number of local minimum: 141 (including on plateau: 54)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  33 830 783 282  83 479  99 131 602 211  44  16 871 108 171 332 826 834 343 397 550 727 757  35 398 335 849 852 885 652
 692 883  78 328 514 109 377 522 165 647  53 107 112 690  42 573 163 542 858 380 138 769  92 169 876 717 520 681 891 827
 786 172 260 702 235 134  54 453 161 229 759 707 612 794 104 477 873 870  17  95 319 803 142 599 889 529  36 720 523 461
 613 140 114 877 567 394 767 103 177 828 855  86 755 438 338 102 127 658 640 668 632 691 120  66 457 616  60 697 154 775
  69 248 299 859 164 113 162 137 810 151 654 101 518 657 283 318 175  98 597 203 737 799 425 194 822 890 595 804 758 875
 136 181 160 867 201 628 236 249 115 771 480 128 882 749  48 821 168  59 736 770 894 836 123 199 324 730 126 471 675 752
 344 124 313 829 674 351 835 537 368 173 254 184 180 694 117 899 189 872 633 263 604 252 197 900 589 507  64 266 571 732
 714 287 790  77 284 793 223 331 435 366 300 279  74 350 371 886 594 800 153 458 887 116  18 158 698 884 630 334 402 823
 620 195 583 801 513 311 340 825 119 382 230  89 370 257 269 845 367 881 878 270 526  61 833 296 321 645 185 814 305 384
 534 554 251 322 336 700 188 504 242  34 206 587 357 728 329 202 776  50 817 393 517 701 777  51 864 689 415 760 373 258
 559 637 166 174  84 580 387 443 355 417 619 363 375 281 276  76 221 751 879 824 557 805 605 303 680 364 627 330 309 468
 178 275 294 642 144 152 218 850 365 747 451 419 369 456 214 896 807  58 556 409 538 643 677 432 308 374 600 420 797 226
 422 241 464 381 474 396 148 774 436 500 404 856 342 731 259 183 345 280 705 244 509 383 222 626 853 495 271 499 253 819
 413 610 301 341 712 327 492 895 255 516 552 386 498 376 566 298 555 593 569 167 406   8 581 278 863 216 290 412 629 410
 292 434 502 429  38 379 725 473 506 312 391 268 892 784   1  28 792 475 467 261 378 455 488 428 536 667 578 353 713 470
 447  47   2 549 809 688  19 568 623 288 191 854 635 622 448 703 528 240 354 472 844 893 307 485   5 487 317 408 577 105
  65  75 785 237 314 483 596 106 489 763 444 388  79  70 591 880 433 530 898 493 347 246 818  30 414 773 601 683 525 359
  96 510 582 535 531 590 646  72 611 352 897 551 155  49 634   6 564 190 150 442 670  46 649 584 411 579 609 585 673 546
 121 459 739 762 733 598 540 247 527 476 245 869  20 238 469 653 481  43 558 603 888 272 465  71 213 219 718 547 135 606
 297 449 660 424 220 478 423 208 541 719 445  52 450 401 735 515 617 494 372 820 224 686 399 742 186  27 631 539 496 265
 699 655 618 651 452 684 734  21 533  55 440 532 543 323 560 503 490 100  82 572 678  10 685 666 274 333 295   7 695 625
 405 505 608  87 545 687 553 454 748 302 662   3 650 339 802 838 484  80  88 659 192 708 672 676 146  24 407 118 511 562
 808 638  45 400 439 361 641 561 570 588 614 639 615 227 740  32 715 418  93 738 157 187 710 682 390 250 576  68 385 228
 761 664 724  62 170 764 861 815 679 780  26 813 149 796 795 782  39 243 141 663 225  22  29 696 239 389 644 159  94 291
 706 486 665 304 754 293 232 267 358 210 779 874 788 360 716 231 787 122 427 204 129 286 310 729 524 521 215 709  67 462
 756 862 519  73 441  90 574 395 421 832 772 661  63 491 848 125 212 624 497 766 348 840 837 193 205 575  41  15 416  23
 843 306 636  91 656 768 563 816 781 392 446 648 798 196 669 145 460 722 316  85  14 147 362 789 182  40 868 565 130  81
 346 466 320 289 866 285 806 501 337 512  57 865 745 778 544 723 110 847 256 217 111 746  37 857 693 200 264  97 508 132
 621 743 791 592 711 744 326 831 482 753 403 841 607 176 765  13  31 315 431 133 262 198 437 860  12 207 671 277   9 273
 139 839 463 548 851 156 750 426 704 209 842 349  11 356 811 430 586 726   4 846 234 179 741 721 143 233 812 325  56  25

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.21434e+07us (= 12143.4ms, 12.1434s)
Wall-clock time (full program): 1.21769e+07us (= 12176.9ms, 12.1769s)
Satisfaction error: 0
Number of search iterations: 5143
Number of local moves: 1476 (including on plateau: 684)
Number of local minimum: 432 (including on plateau: 89)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 247 564  48 877  18 726 797 607 374 430 131 320 689 514 227  23 106 790 829 413 179 866 892 748 766 135 350 640 107 102
 844 429 277 869 746 675  37 574   6  46 441 229 265 116 688 124 419 294 632 859 270 366 185 787 538  79 517 885 749 569
 194 293  99 884 678 515 888 598 895  36 823 182 878  78  70 834 784 633 146 831 380 685  73 172 338 893 448  94  68  25
 796 659 741  49 442 360 555 452 571 336 176  83 447 750  26 551 819 855 683 772  80 495 657 379  98 228 231 290 204 730
 653  82  63 862 363 842 215 622 643 835 181  93 887 811 706  66 871 432  45 211 259 702  57 306 645 457  59 307 446 794
  81 825 476 533  53 813 322 253 644 389 139 192 742 249  97 621 898 677 109 668 147 736 810 705 717 455 346 220 485 113
 166 343 524 122 771 337  17 697 315 553 767  38 623 558 826 415 496 602 450 695 189 327 459  41 734 662 561 152 744 331
 719 347 664 660 479 849 809 361 267 723 639  28 177 127 721 613 162 853 214  33 353 358 370 552 774 234  72 593 287 477
  91 372 820 291 652 197 437 203 222 156 814  56 756 586 786 591 369 686 486 532 480  60 534 669 650 266 235 392 289 837
 278 368 503 132 709 570 658 494 328 125 206 173 663 269 605 792 256 672 154 637 592 629  92 807 226 568  67 843 578 521
 795 352 219  65 651 134 466 752 490 385 520 399 798 580 158 261 824 202 475  22 781 126 800 670 297 565 128 484 716 400
 816 298 497 546 630  16  11 482 157 414 625 789 597 501 376  21 425 119 714 504 349 523 165 830 292 439 543 540 612 684
 641 510 624 487 577 557 682 371  13 377 245 778 680 715  61 563 191 137 579 471 114 562 302 616 422 283 238 509 539 671
 402 440 423 656 600 722 712 321 499 426 815 788 208 356 454 727 435 465  34 334 407 438 329  55 281 304 559 351 300 674
  24 611 549 573 575  12 308 646 512 841 599 581   8 332 812 601  30 508 594 518 648 401 221 528 305 323 461 405 701 288
 456 710 474 424 696  10 833 386  51 396 316 891 410 548 411 631 168 433 233 262 836 200 720 417 511 408 527 687   3 467
 280 335 339 473 673 443 572 589 436 595 735 493 603 112 314 609 542 397 427 468 276 761 444 169 136 365 776 318 522 313
 498 502 285 378 161 469 718 390 412 770  15 886 391 863 739 359 582 711 105 309 666 355  96 513 145  20 272 453 690 762
 243 325 464 375 763 779 773 713 463 344 617 273 159 170 536 483 747 590 758 647 460 143 620 381 333 110 160 755 284  47
 873 310 108 255 404 875 153 783 462 111 738 236 489 526 246 694 845 184 341 118 130 395 880 431 364 848 567 295 472 382
 707 275 100 354  84 874 420 217 213 760 362 793 187 271 759 507 541 500 554 383 654 535  31 588 312 330 544 481 434 745
 606 740 210 240  52 230 610 237 732 148 777 827 151 268 163 728  76 488 133 403 638 257 897 224 584 642 899 655 101 799
 258 693 806 196 324 251 530 250 529   4 260 120 193 195 804 550 851 556  58 782 803 583 531  35 805 757 303 665 769  54
   1 708 817 764 263 883 867 348 445 785 384 604 627 232 239 212  40 223 753  19 254 357  74 155 860 868 724 317 525 167
 409 889 699 144 839   2   9 614 703 864 780 634 199 808  50   7 180 248 619 857 178 373 840 387 299 175 566 264 198 681
 743 545 733 174 861 587   5 506 801 858 418 585 138 282 491 406 171 150 729  90 856 388 142 754 241 879  69 319 342 252
  39 393 394 896 129 242 117  62 691 667  14 881  95 894 326  32 596 164 838 854 470 852 345 547 398  89 872 850 140 628
 104 205 870 141  77  43 775 698 537 115 274 802  75 846 791 244 279 225 608 123 492 661 626 449 121 876 900  87 822 649
 704 183 618 679  27 286  29 186 676 725 516 340 765 207 201 731 768 635 737  64 692 296 458 149 818 367 700  88 828  42
 847 209  71 416 218 216 190 103 428 301 188 421 615 751 832 519  44  86 478 636 882  85 865 451 505 890 821 576 560 311

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.54883e+07us (= 15488.3ms, 15.4883s)
Wall-clock time (full program): 1.55212e+07us (= 15521.2ms, 15.5212s)
Satisfaction error: 0
Number of search iterations: 6755
Number of local moves: 1993 (including on plateau: 796)
Number of local minimum: 572 (including on plateau: 96)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  58 766 625 236 838 710 890 654  53  73  51 164  86 874  87 587 805 792  64 630 681 231 189  82 882 459 571  62 879 436
 821 691  92  40 259 500 190 285 897  29 751 765 107 168   6 857 797 657 270 883  99 592 356  85  88 626 764 474 503 863
 866 526 257  61 541 479 726 779 157 120 899 418 521 825  76 563 177 370 187 602 548 307 849 721  47 618 188 286 126 675
 214 266 852 360 507 687 595 171  74 620 648 482 839 583 782 420 104 700 125 820 230 856 129 186  18 235 891 159 154 808
 142 670 688 215 442 683 118 300 606 535 102 585 522  84 331 737 796 238 499 174 557 492 757 113 623 121 800 517 180 888
 170 608 714 153 876 105 217 538 176   7 878 198 119 719 478 829 590 106 271 280 532 870 788 493 887 794 634 232 152 101
 362 835 258 812 722 695 476 622 346 163 306 226  42  35 741 665 542 184  20 823 165 598 348 770 735 843 304 379 273 225
 135 213 784 881 636 791 448 155 783 264 798 556 510 496 156 807 582 287 640 578 212 100 705 202 160 576 345 281 253 181
 728 756 552 224 172 761 858 613 395  56 204 328 277 844 365 254 250 260 864 229 658 827 780 203 405 245 682 272 151 302
  93 303 811 900 840 580 248 366 324 763 740 134 263 573 353 209 568 192 351  80 601 450 255 692 211 855 223 256 389 892
 295 314 279 433 432 305  96 178 475 894 593 485 335 540 377 116 565 334 830 627 742 661 313 586 146 621 846 326 325 446
 477 547 831 364 553 772 819 342 415 274 185 162 410 736 147 814 197 111 361 406 832 460 158 349 508 437 649 516 299 384
 200 394 746 321  45 854 193 473 354 404 447 697 511 873 329 514 708 352 614 495 505 454 604 315 536 762 115 206 205 289
 868 523 531 745 451  39 633 494 458 148 268 393 233 465 469 559 466 127 413 408 378 861 709 471  81 412 777 350 453 332
 509 386 369 486 252 574 196 333 396 656 684 813 715 467 748 392 431 310 439  31 445 161 428 488 145 457 490 401 424 889
 463 678 529 327 291 693 409 403 339 528 298 421 596 363  89 207 294 464 533 167 567 221 787 609 884 338 489 572 452 504
 513 581 341 358 311 484 387 440 376 524 382 520 336 320 444 371   4 416 359 804 468 597 717 848 501 249 591 527  23 723
 368 546 545 880  75 799 817 537 383 293 130 519  94 706 419 140 685 716  55 380 646 222 589 435 530 671  49 558 337 391
 652 561 750 216 183  83 512 698 318 850  11 388 673 228 865 562 137 732 456 317 525  98 635 131 242 564 411 566 506 645
 577 575  28 123 518 141 607 612 744 470 570 169 644 149 771  33 655 628  34 810 619 498 637 323 534 429 199 694 549 175
 194 632 425 179 423 643 663 617 290 895 269 707 544 275 631  90  21 712 730  91  22 422 679 667 795 483  12 785 616   3
 367 629  27 806 672   2 554  57 219 312 803 605 610 208 775 246 588  78 417 461 680 774   9 462 859 755 374 390 112 664
 896 397 132 347 292 195 438 267 701 653 760 769 261 434 639 276  95 128 662 316 599 139 237 539 674 114 355 747 754 699
  46 584  65 837 677  15 443 480 284 487 650 218 642  37 227  13 426 711 847 739 696 833 641 319 560   8  70 733 676 551
 357  17 296 288 720 816  24 340 749 815 283 759 244 898 124 594 773 789 182 241 309 133 122 430 569 875 853  25 824  66
 809 265 173 555 515 398  26 781 877 234 704 240 611 278 282 718  38 776 481 767 239 455  71 262  69 441 729 860 758 103
 768  30 690 308 638  52 210  41 600  67  97 375 702  48 651 472 550 738 869 727 344 801 381 301 841 117 373 579 731 414
 399 144  59 686  77 136 247 885 822 802  54 647 893 615 603 659  79 402 703  72 251 220  36 862 734 243 372 818 886 109
 871  10 666 872  60  32 624 385 713 786 842  19 845  14 724 143 725 778 790 407  43 138 543 743  50   1  16 834 836   5
 297  68 400 502 497 491 851 669 191 793 108 753 330 660 826 668 867 427 449 150 322  44  63 828 201 166 343 110 689 752

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.62394e+07us (= 16239.4ms, 16.2394s)
Wall-clock time (full program): 1.62726e+07us (= 16272.6ms, 16.2726s)
Satisfaction error: 0
Number of search iterations: 7159
Number of local moves: 2123 (including on plateau: 1150)
Number of local minimum: 614 (including on plateau: 137)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 179 183 674  97 135 623 107 643 267 824 314 615 596 586 122  92 175 877  59 841 230  98 815 713 103 539 616 859 680 853
 172 860 869 761 538 702 269 106 729  20 244 399  58 627 878 412 831  64 825 243 668 597 651 369 359 352 375  36 389 112
 132 178 872 855 397 756 818 632 189 265 556 654 676 664 381 520 467 814  54 393 145 478 251 374 362 263  82 633 186 468
 331 220 802 881 219 256 864 685 417  94 559 590 649 734  42 888 525  35 639 258 356 703  93 180 156 882 776  47 521 113
 149 605   1 743 593 739 250 718 738  31 426 208 420 656 820 724   6 170 102 806 193 737 328 512 200 511 449 360 549 771
 153 173   5 849 354 889 379 692 224 852 184 347 792 700 715  25  12  63 436 640 731 315 216 495 762 838 497 257 777 143
 181 197 714 778 535 850 528 826  30  51 617 190  53 545 206 566 659 137 571 848 625 213 289 553 238 613 425 480 810 187
 610 207 727  88  46 899 235 891 212 827 115 274 365 660 506 704 698 287 128  27 358 811 701 576 293 785 131 653 209 492
 326 395  72 133 673 192 211 890 232  65 879  52 746 857 304 809 176 341 697 236 726 637 832 699 310 118 488 663 716  40
 462 444 705 283 421 348 691 768 447 166 382 677 581 429  96 883 582 147 255 245 541 448 874 807 350 808 214 241 160  60
 490 684 231 338 205 343 769 222 457 608 493 894 652 868 266 672 751 836 470 138 261 254 431 531 237 542 319 229 199 125
 169 242 437 337  10 574 693 867 548  62 373 875 781 322  49 591   9 291 398 753 880 465  41 696 558 770 121 116 707 780
 418 252 749 246 435 458 361 631 484 442 455 844 164 355 400 414 372 793  21 837 602 371 288 167 892 330 423 279 248 784
 710 477 763 228 440 329 335 481 349 411 422 325  70 424 641 569 863 451 111 491  57  44 618 642 307 295 775 829 612 446
 109 119 332 388 669 532 342 546 466 471 385 249 845 336 221 671 757 402 459 547 311 509 543 598 434 353 500 428 177 816
 405 657 460 529 154 396  34 281 240 828 487 568 796 413 485 357 386 898 427 223 483 502 622  86 306 391 893 394 514 300
 644 366 779 534 278 555 475 168 272 401 706 323 384   3 609 406 215 575 603 662 334 601 333 282 504 527 489 516 870 101
 445 759 884 533 621 473 552 380 320 561 346 345 297 273 498 606 454 259 540 260 298 247 740 203 843  89  87 523 519 560
 629 367  18 577 620 486 152  67 392 510 155 290 573 507  28 344 595 795 456 461 630 585 522 537 679 503 695 584 201 557
 292 678 276  14 567 165 646  91 564 139 856  77 592 526 711 275 735  71 873 301 563 626 645 127 544 432 550 482 202 895
 687  78 140  90 171 453 658 327 728 885 721 851 690  33 587 123 599 441 744 661 900 536 887 264 501  50  74  95 433 108
 496 430   2 524 754 390 562 204 158 271 607 277 110 823 578 313  75 773 648 117 580 161 588 866 572 499 517 822 148 650
 611 821 583   8 594 188 804   4 817 530 635 725 752 317 708  66 409 515  29 750 194 452  23 284 683 303 742 655  19 294
 766 624  11 628 732 570  24  48 803 438 129 302 494 410 812 376 469 805 670 270 285 104 174  22 865 638 712  61 513 760
 686 741 286  13 689  16 144 316 886 834 709 600 416 196 786 159 854 318 408 464 195 253 508 191 225 387 647 505 296 787
 847 745 833 819   7  39  80 134 476 619 100  85  26 163 794 305 340 789 720 830 403 634 717 579 162 407 280 474 472 636
 897 733 682 723 719 268 105 312 799 748 308 589  81  99 747 324 842 126 736  43 364 788 151 185 227 182  56 774 765 142
 839 321 450 783 666 226 797 604 114 801 218 351  37 377  76 368 439 383 554 136 681 233 239 419 479 675 798 871 210 370
 665  83 120  68 858  45 840 146 694 688 404 782  55 378 150 614  79 861 813 262 130 896  32 758 846 124 767  84 551 722
  15 876  38 667 415 755 790 835 463  73 730 157 764 234 299 339 141 198  69 772 791 217 363 800 518 309  17 565 862 443

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.47897e+07us (= 14789.7ms, 14.7897s)
Wall-clock time (full program): 1.48227e+07us (= 14822.7ms, 14.8227s)
Satisfaction error: 0
Number of search iterations: 6483
Number of local moves: 1813 (including on plateau: 901)
Number of local minimum: 543 (including on plateau: 103)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 875 130 428 670 279 886 629 842 768 574 846 140 141  46 139  58  78 890 116  73 848 864 544 754 128 142 687 773  61 106
  66 474 667 882 800  87 650 765 881 689 780  86  51 144  76  62  48 870  50 262 876 794 105 834 129 204 784 248 415 736
 135  91 805 720 638 122 808 264 803 631 823 546 206 764 184  21  81 254 690 137 691 708  80 838 543 186 835 181  45 685
 159 782 873 226 567  96 516 688 898 701 236  84 149 177  79 781  35 863 401 127 852 899 753 796 594 174 382 270 102 255
 324 132 581 883 423 173 859 195 826 827 257 158  68 160 190 849 138 217 119 227 760 600 115 845 529 851 853 271 866 219
 246 210 788 884 373 532 133 871 117 777 728 231 114 104  93 843 238 856 172 309 770 607 171 802 165 699 818 719  53  92
 111 203 191 596 550 792 900 790 897 562 207 185 766 156  89  28 211 888 263 166 624 891 168 893 874 380 322 292 318 202
 321 374 887 722 225 224 757 895 208 737 150 830 314 162 260 256 198 239 272  74 614 635 657 632 799 284 880 400 197 312
 366 297 839 697 718 167 779 145 435 833 393 323 250 350 468 294 146 331 370 319 496 877 205 731 889 326 361 252 199 659
  97 289 265 776 879 494 212 267 180 894 403 793 612 892 232 364 188 369 320 157 836 759 293 308 313 404 867 325 302 425
 275 758 362 713 653 213 432 143 372 742 419 304 444 413 399 317 405 344 389 484 436 536 274 447 476 417 644 798 571 335
 193 518 387 427 732 310 462 378 290 451 296 785 811 490 273 414 328 402 896 351 734 564 406 433 426 395 615 243 237 268
 443 714 576 452 244 241 303 498 483 801 281 446 885 291 422 469 269 440 235 530 604 598 355 276 812 360 412 394 528 153
 507 674 492 537 437 342 497 234 525 503 230 295 505 556 449 327 878 458 511 343 643 568 456 392 311 300 429 307 359 450
 467 356 531 363 386 488 486 408 679 333 397 347 298 338 499 822 549 379 453 473 485 277 648 288 521 383 480 315 575 491
  71 336 506 353 673 508 438 636 586 339 472 547 375 390 367 348 441 442 630 377 522 515 430 455 463 477 465 577 358 418
 487 439  95 299 493 482 583 592 152 332 396 357 251 475 622 559 668 542 301 479 514 553 610 552 431 715 124 461 481 470
 578 565 590 489 642 621 233 651 466 398 641 587 464 349 533 603 617  90 200 416 524 131  30 388 579 502 676 340  19 593
 345 147 512 410  38 534 572 411 229 391 286 683 548 501 554 510 613 557   7 684 341 278 588 526 215 711 595 704 445 580
 599 563 110 646 478 682 745 680 647 201  22  55 448 495 686 582 527 240  72 500 242 218 606 535 421 545  65 639 675 591
 597 457 385 352  70 371 626 656 504  41 513 566 706 655 555 354 585 744 424 471 187 121 747 662 170 749 247 103 560 337
 743 376 460 108 101  59 209 661  75 329 558 717 176 694 541 649 809 721 869 539  24 420 620 223  12 725  34 608 844 611
 660 434 698 283 120 570 551 125 618 126 637 538 196 519 520 723 640 695 671 710  26 178  57  17 164 625 134 748 761 771
 763 855  33 151 280 573  94  37 194 253 645 627 306 738 589 561 700 601 633 817  11 346 702 183 305 726 316 175 623 678
 813 287  18 161  56 693 155 584  54  32 605 381 602 220 727 681 810 509 783 829  40 189 804  67 285 774 148 663 821 724
 841 733   8 109 750 854  20 123 619 330  15 192 865 540 816 716 658  47 669 654 228  23 806 113 609  85  16 707 735 634
 825 767 569  77 245 840 258  99 791 163 692 739 454 652 820   2 769 136 807 664   1  88 705  83  13 772 221 459 795   9
  82 789  64 249 696 857  10 334  25 259 837 368 824 672 762 616 751 112 517 847 169 118 775  69 712 523 665   6 778  29
 860  36 752 182 815  27 214 261  14  44   4 819 828 741 709 703 407 216 814 628 365 100 756 266 872  39 409 797   5 832
 666 729  43  98 154 677 384 282 179 222 746 786 858 831 862   3 730  63 861 868  52  60  49 107 755  42  31 740 787 850

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.1471e+06us (= 4147.1ms, 4.1471s)
Wall-clock time (full program): 4.18011e+06us (= 4180.11ms, 4.18011s)
Satisfaction error: 0
Number of search iterations: 1227
Number of local moves: 854 (including on plateau: 356)
Number of local minimum: 46 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 119 861 531 891  53 799 558  25 556 690 318 366 445 637 221 850  16 134 202  75 805 560 655 125   4 628 782 285 827 497
 395 576 722 579  96 872 387 261 620 299 121 247 860 646  87 184 834  71 469 429 855 102 235 523 100 226 832 780 777 330
 843 535 666 155  78 835 893 554 706 705 303 794 632 695 189  63 819 768 228 355 810 750 109 131 204  92 111   2  80 410
 897 736 234  38 225 871 418 215 317 239 545 692 879 769 227 614  26 649 565 550 708 686 182 183 213 409 302  65 887 174
  52  58 223 731  97 761 671 609 739 869 530 898 600 259  54  67 567 153 543 503 745 126 163  86 258 657 820 684 870 122
 814 164 108 830 804 751 316 564  72 596 765 811 826  39 691 352 473 889 881  22 712  49  76 132 622 838  45 115  19 139
 166 116 697 716 894 195 846 796 858 755 250 743 253 662 816 593 214 192 148 725 511 329  60 831 137 149 268 175  46 374
 347 770 652 162 522 648 847 833 201 271 255 107  13 508 604 193 210 463 785 203 790 397 856 433 813 283 633 381  31 304
 274 281 509 338 707 630 643 240 673 681 105 578 536 784 140 406 430  64 641 123  48 714 599 857 534 434 845  61 333 307
 781 248 527 206 353 874 849 837 110 654 391 884 344 331 841 394 348 211  62 292 465 194 246 170 389 851 598 314 290 461
 371 251 350 400 428 405 446 623 242 491 890 376 286 279 645 363 456  85 581 138 440 205 519 792 322 867 787 797 300 380
 276 396 392 252 577 298 704 265 647 661 693 499 479 313 241 308 293 143 733 740 606 341 485 888 415  24 818 216  33 779
 370 325 236 795 273 356 399 305 263 375 275 327 379 378 900 498 422 669 694 334 385 702 510 262 208 802 683 721 238 431
 159 521 483 876 459 118 572 377 679 311 359 863 312 254 212 588 129 432 512 462  84 457 127 468 670 471 561 488 631 880
 398 296 540  55  43 478 812 629 601 404 319 220 532  56 449 335 533 310 320 200 788 726 589 506 486 460 384 753 507 786
 563 474  34 294 222  81 865 424 120 546 605 339 448  69 689 738 472 685 575 709 549 453 658 233 270 611 481 458 767  83
 340 324 402 342 442 492 562 326 230 864 574  21 501 665 364 544 724 886 815 480 362 489 187 842 476 688 124 291  17 141
 128 439 419 625 438 584  40 386 321 145 608 417 435 541 269 354 529 868 358 823 297  70 437 642 638 542 186 836 583 557
 467 559 373 455 393 452 411 464 636 517 403 136 518 607 336 165 699 892 496 284 537  77 490 361 728 454 277  94 696 538
 844 569 282 447 840 383 157 678 640  79   1 896 504 793 315 367 154 763 343 114 552 667 407 346 280  57 337 878 309 513
 749 602 682  35 747 444  90 185 568  12 730 158 553 616 177 610 372 168 401 592 420  95 701 135 639 618 260 729 801 626
 595 451 621 133 760 176  51 196 160 875 436 173 224 591 852  18 723 839  59 774  23 151 720 674 526 547  98 651 715 703
 423 727 539 711 746 217  93 209 717 231 475 169 748 617 443 528 555 306 332 582  47 619  10 421 758 612 369 635 570 106
 825 413   6 267 803 551 156 615 161 198  42 278 668  15 495 710 899 677 817   5   8 783 775 759 828  28  99 735 719 180
 112 351 181 650 484 470 656 249  73 493 586 142 207 190 502 734 766 412 150 659 732 548 778 718  27 450 516 477 349 853
 791  29 660 672   3 144 416 505 713 388 566 687 382 425 764 676  89 147 264 821 237 345 771 197 824 408 877 117   7 590
 171  66 301 494 854  20 199 752 680 515 741 232   9  32 520 466 597 737 754 272  37 653 613 664 172 866 179 571 500 848
 357 772 885 663 219 323  50 482 289 188 700 243  36 573 624 594 167  91 514 862 806 603 627 365 487  74 266 368 414 873
 244 829 675 525 809  30 256 798 822 245 295 859  11 288 744 441 191 287  44 580  88 742 800 757 789  41 390  82 426 427
 644 776 585 178 146 257 152 113 101 218 634 360 895 883 104 762 808 524 229 807  68 882 130  14 698 328 587 756 773 103

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.29223e+07us (= 12922.3ms, 12.9223s)
Wall-clock time (full program): 1.29554e+07us (= 12955.4ms, 12.9554s)
Satisfaction error: 0
Number of search iterations: 6245
Number of local moves: 1954 (including on plateau: 802)
Number of local minimum: 586 (including on plateau: 94)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  76  24 779 884 419 251 196 421 396 566 107 431 542 619 209 472   4  68 745 894 854 879  42 827 688 537   6 633 358 588
 106 220  26  88 531 454 141 335 881 409 312 574 527 718 834 802 736 880 443 899  11 104 418 217 243 808 746   5 858 189
 578 852 869 800 168 614 183 134 123 387 292 215 287 163 571  28 383 121 890 848 892  18 325 148 679 833 701 543 316 554
  61 563  66 771 785 536 208 640 873 579 260 781 584 817 395 669 274 327 216 521 154 788 612 240 652  55 796 131  92  69
 371 791 555 680 882 601 152 639  83  39 553 835 330  93 222 638  50 150 252 212 143 857 519 615 692 830 523 509 438 261
  91  87 655  89 263 310 135  46 845  99 528 324 749 725 741 410 161 759 544 482 583  56 775 769 545 651 818 122 391 762
 322  60 634 525 789 332 408   7 181  51  98 730 298 724 299 755 203 386 663 900 192 723 661 153  73 709 406 805 838 590
 164 198 657 686  84 170 146 681 855 716 738 151 201 778 302 840 267 446 111 160 229 836 524 803 269 696 678 744 195 190
 167 797 693  95   9 850 416 485  14 256 258 684  54 683 793 469 700 710 247 349 264 130 597 504 424 223 837 248 676 883
 320 874 624  94 125 259 199 763  86 276  90 589   1  62 853 246 414 293 774 780 898 514 868 344 644 703 616 363 145 698
 359 254 442 350 712 815 889 307 309 891 398 621 548  65 637 218 507 214 202 262  49 810 512 360 290 541 490 311 677 475
 646 451 721 224 596 794  23 466 604 323 488 180 362 321 717 877 315 570 828  34 373 497 719 433 233 228 169 561 518 244
 242 611 255 374 348 376 133 404 232 560 720 878 369 888 249 239 342 820 740 735 283 706 702 253  29 318 449 439 530 291
 345  64 565 285 365 422 415 608 375 402 434 872  79 301 448 377 825 502 664 732 576 336 459 806 117 236 707 300 171 727
 211 632 767 895 645 296 534 480 184 897 782 495 761   3  20 273 113 257 429 128 334 367 458 175 849 412 809 626 668  15
 397 329 436 468 500 351 752 368 628 306 832 279 210 591  59 401 417 338 479 331 648 659 370 389 610 557 617 487 440 266
 539 492 754 641 503 200 520 580 295 496 182 204 667 508 876 270 786 441 177 303 606 305 533 428 388 526  19 493 494 289
 747 499 594  21 272 585 484 538 355 481  96 552 137  53 476 337 856 464 691 392 864 822 361 690 308 457 385 158 282 558
 867 460 511 162 870  52 841 313 174  38 753   8 381 540 470 886 294 819 268 110 671 379 352 630 297 400 366 871 271 461
 463 427 286 498 120 658 770 551 896 682 102 748 165 743 623 811 206 426  48 364  17   2  45 581 844 281 471 456 465 766
 423 347  31 605 346 768  35 733 695 607 665 653 893 672 129 564 114 627 654 188 149  40  33 708 205 219 411 620 813 568
 319 792 776 474 587 674 455 784  70 764 729 238 226  82 378 176 865 824 567 116 241 569 230 179 592 382  25 598 314 489
 807 127 280 675 430 603 847 105 546  44 629 562 750 275 227 157 510 772 425 328 635 437 444  58 550 739 340 447 573 193
 863 450 207 757 142  81 384 115 829 798 194  32 522 826 393 372 159 100 556 777 625 445 535 491 860 103 138 516 609 636
 751 689 572 109 593 714 705 685 532 126  78  77 394 101 265 549 812 178 559 694 250 715 186 713 843  10 783 600 191  41
 647  72 213 304 147 399 613 483 875 166 859  71 656 420 666 185 795 631 124 662 799  47 231 816 341 851 140 517 353 432
 575 821 284 234 622 760 577  30  63 758 861 650 731  85 477 529 887  37 453 642 403  12 354 118  97 687 643 765 187 173
 787 435 119 407 660  74 839 862 699 235 726 277 704 670  22 486 356 673 513 112 728 618  43 462  13 317 172 225 734 547
 405 582  36 842 846 380 711 595 742 790 506 155 586 390 697 452 333 602 237 221 288 343 722 132 326  67  57 144 505 823
 866 515 108 478 156 136 804 357  75 773 245 649 801 599 467  27 831  80  16 339 756 501 885 473 814 139 197 278 413 737

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.90239e+07us (= 19023.9ms, 19.0239s)
Wall-clock time (full program): 1.90568e+07us (= 19056.8ms, 19.0568s)
Satisfaction error: 0
Number of search iterations: 9950
Number of local moves: 2720 (including on plateau: 1359)
Number of local minimum: 931 (including on plateau: 167)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 824 863 104 506  70 372 886 399 539 145 864 474 518  73 323 662 111 191 715 693 175 400 553 784 494 678  77 842 102  78
  79 100 551 411 495 710 416 386 635 485 846 229  89 502 110 890 108 531 760 787 856 138 428 581 663  18 667 109  95 840
 117 405 417 883 392 418 882 871 351  48 133 880 201 373  45 380 848 877 159 594 887 359 541 182  86 497 251 834 505  99
 442 197 894 700 234  20 611 835 730 147 149 719 823 772  83 540 123 523 708 559 431 285 698 804 128  58 562  50 228 462
 344 683 560 703 831 206  51 660 653 116 471 674 354 227 189 532 290 872 194 748 263  30 868 769 345 761 198 143 208 572
 695 302 293 371  75 483  36 614 876 275 686 659 238 512 329 240 673 878 252 211 192 738 446 745 557 387 444 632 187 489
 566 170 486 838 210 267 898 737 215  64 891 311 875 582 256 118 265 127 612 475 237 816 765 468 112 283 328 454 617 472
 796 291 711 526 325 573 773 408 885 692 203 590  26 584 239 165  42 776 424 491 803 178 647 603 484  71 186 272 699  52
 314 378 315 785 319 844 336 511 101  76 896 429 762 148 657 892 383 174 406 185 381 368 734 305 529 271 862 157 845 152
 533 593 705 546 702 361 266 171 181 727 241 725 602 722 665 224 199 236  81 360 897 357 709 859 294 204  29 544 697  85
 798 633 235 854 350 225 306 800 270 579 585 188  72 479 664 779 287 320  27 382 262 257 297 777 409 766 822  97 654 341
 589 220 445 865 651 113 246 615 307 799 643 120 352 425 554 222 226 726 375 482 436 391 832 200 853 139 367 349 681 292
 324 212 213 644 356 312 219 601 288 592 457 888 899 300 530 105 682 717 658 534 575 125  28 255 598 857 820 414 158 154
 376 327 783 600 648 321 464 613 570 618 404 205  57 728 407 364 268 781 790 369 718 264 166 299 334 732  49 448 538 274
  56 342 451 605 355 415  91 881 858 374 604 535 481 574 122 608 616 677  74 867 543 460 232 556 230  87 513 330 498 480
 634 273 217 564 452 527 861 461 791 466 103 115 326 507 390 477 763   9 180 473 161 571 729 490 435 758 609 536 430 207
 889 515 789 231 131 528  59 500 308 619 338 548 520 195 233 688 583  21 413 596 672 487 478 322 764 420 456 254 470 488
 751 509 379 303 588 855 388  14 537 640 410 296 140 129 599 742  53 900 739 802 545 595 591 397 137 421 286 412 114 243
 707 346 550 279 370 499 628 394 426 630 156   5 797 625 873 458 459 284  10 637 184 793 519 670  39 196 317 811 132 721
 510 652 347 249 496 552 814 146 385 395 172 332 282  69 714 679 827 645 587  82 190 696  65 441 626 493 280 455 884 450
  94 685 301 260 565 377 209 259 221 176 558  54 747 768 807 869 607 419 501 465 167 160 879 447 453 402 439 656 295 675
 522 569  67  88 689 661 214  96 586 829 248 193 895 731 706 770 610  98 684 151 310 492 183 126 136 841 866 597  43 514
  61 723 704  31 627 524 752   8 542 563 691  32 438 639 621 244 555 223 245 733 134 521  25 144 744 735 749 517 162 828
 331 333 433 339  35 107 870 432 525 622 646 778 348 701 818 389 393 316  23 712 649 177 253   7 860 396 780 629 547  66
 606 366 463   3 690 852 449 750 504 805 202 476 150 624 362 561 516  24 467 384  68 576 549 503  41 318 671 847  12 676
 168 743 567 121 849 353 153  13 163 815  33 269 398 365 687  90 741  47 642  62 179 666 443 756 650 775 843 580 836 508
 363 620 358 893 277 638 106  92  84 119 641 401 771 795 155  80 767 636 812  55 281 757  46 578 164 403 242 759 813 809
 713 669 124   1 810 427 833 792  22 786 434 720  40  17 247 218 746  93 313 335 736 680 337  63 782 724  11 276 716 850
 298 623 631 278 135 169 568  19 821   4 668 819 874   6 304 469  34 577 825 289 753 755 216  44 774  16 754 261 694 837
  15 173 422  38 788 806 130 437 141 309 142 851 440 343 826  60 740 817 839   2 830 423 258 340 794 808  37 250 655 801

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.36676e+07us (= 13667.6ms, 13.6676s)
Wall-clock time (full program): 1.37007e+07us (= 13700.7ms, 13.7007s)
Satisfaction error: 0
Number of search iterations: 6315
Number of local moves: 1626 (including on plateau: 627)
Number of local minimum: 567 (including on plateau: 85)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 279 541 548  83  32 882  47 764   9 208 607  93 748 886 273 584 601 131 215 439 624 149 682 195 511 873 860 832 710 109
 595 473 754  38 501 193 402 146 481 539 485 262 558 491 399 752 416 650 368 828 610 820 160 474 356 401 408  31 839  85
 758 221 200 875 258 234 223  76  94 518 702 625  82 621 352 765 247 778 137 565  18 788 730 741 812 865 785 233  73 139
 266 895 674 256 343 569 121 602 457 434 614 432 495 126 835 261 334 622 257 192 409 229 477 712 578 444 270 725 536 350
 175 497 700 135 834  56 316  74 295 435 114 781 773 112 736 676 214 118 782 658 597 448  86 889 180 810 685 312 538 489
 587 153 636 259 779 580 389 451 117 551  96 436  65 242 326 749 206 598 496 753 466 245 618 689  11 727 633 612 301 744
 532 267 683 811 134 733 122 842   5 364 226 573 639 799 238 697 251 197 864  35  97 662 391   1 375 701 692 583 378 623
 722 370 338 456 652 849 763 819  44 582 465 168 162 425 586 714  26 235 173  16 502 210 249 553 719 530 673 542 189 783
 132 201 638 667 680 176  59 115 437 846 148 630 394  84 543 213 791 510 484 711 651 694 217 648 158 480 550 155 822 681
 599 600 486 716 533 433 671 440 661 414 544 143   4 106  70   6 615 313 282 523 723 665 298 377 320 374 369 815 653 762
 724 756 611  88 840  64 856 441 345 767 666  39  51 283  15 554 182 102 446 357 877 801 740 537  75 157 646 556 299 640
 120 855 514 285  92  19 400 793 858 577 125 759 428 813 594 363 557 677 709 130 458 302 563 628 224  90 349 271 284 678
 529 107  53 272 847 672 647 693  14 845 809 751 757 250 506 119 292 517 571 499 179 196 817 396 755 482 264 421 105 150
 335 154 534 331 862 564  57 159 769 164 555 225 478 567 786 429 415 684  91 438 770 461 838 288 559 151 504 603 136 608
  29 314 746 525 442 853 629 771  66 576 133 255 634 170 212 713 669  79 572 626 186 807 371 657 546  30 729 609  95 471
 649 631  12 579 487 203 450 893 735 207 459 289 641 535  80 294 704 561 574 570 715 395 890 178 620 330 469  33  78 254
 795 581 879 407 479 372 323 269 866 447 787 332 183 635 252 246 804 305 892 167 575 619  25 147 228 191 216 522 833 138
 616 240 507 488 728 691 687 280 643 156 431 382 794 606 664 140 336 124 776 333 443  46 268 508 528 717 307 297 413 366
 205 462 128 887 430 199 404 209 303 353 452 732 104 604 509 315 888  48  24 296 688 852  45 500 476 798 483 591 825 705
 358 679 152 699 161 627 854 805 816  37 108 829 373 467 110 340 169 766 324   7 449 837 318 380 393  41 171 827 871 547
 127 388 322 549 290  27 236 560 187 796 857 686 381 515  43 718 836 503 870 747 291 248 874 241 859  40  60  89 814 361
 632 696 308 830 403 899 802 260 690  98 230   2 841 568  54 329 872 863 287  52  71 645 707 493  68 385 492 410 123 405
 142 613 789 784 418  81 417  67 774 739 524 617 286 172 379 359 278 826 592 521 317  50 185 593 464 777 637 328 281 505
 605 383 362 319 490 344 198 552 894  34 703 422 644 327 896 869 848 737  99 806 311 341  42 470 881  87 145  28 494 184
 423 304 738 823  10 419 750 204 342 790 111 745 101 670 420 219 760 562 831 346  22 885 475 360 891 818 190  55 231  20
 202 540  13 177 243 876 237 708 720 516 113 376 695 513 868 227 211 351 880 347 884 232 367 263 743  49 165 878 390 731
 309 588   3  77 354 545 900 455 843  58 883 654 387 821 898 427 194 277 355 527 384 141 663  72 306 780 265 337 824 188
 411 100 897 797 293 445 220 397 668 163 566 520 698  36 792 498 386 453 325 772 861  61 761 144 103 181 726 775 166 300
 851 321 116  63 310 398 660 426 129 659 406 734 463 365 276 218  21 460 222 800 275 274 589 850 768 867 348 519 472 655
 808 585 174 239 590 512 675 244 253 642 596  23 656 706 803 721 392 468  17 454  62 412  69 531   8 339 424 526 742 844

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.68877e+07us (= 26887.7ms, 26.8877s)
Wall-clock time (full program): 2.69205e+07us (= 26920.5ms, 26.9205s)
Satisfaction error: 0
Number of search iterations: 13644
Number of local moves: 3506 (including on plateau: 1898)
Number of local minimum: 1260 (including on plateau: 241)
Number of resets: 7
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 594 806 139  51  61  90  54 623  41 777  98 444 712 164 118 860 560  68 724 747 616 767  94 244 664 610 624 710 843 612
 358 455 749 509 820  35  44 695 473 867 103  62 774  46 201  53 861 751 448 748 722 810  92 589  76  29 524 617 126 878
 891 817 168  85 793  99 167 625 177 322 868 193 114 608 125 276 678 896 847 666 831 349  69 113 330 122 442 271 683 890
 280 882 760  80 743 332 116  22  38 144 770 302 627 899 691 132 873 180 248 787 152 580  74 130 373 859 897 757 134 653
  43 178 711 471 493 129  52 112 255 199 864 501 278  96 233 128 815 826 189 615 758  55 655 601 671 556 687 706 750 888
 771 783 824 727 186 323 872 414 142 192 296 476 720 121 669 124 547 301 279 726 840 260 184 161 282  31 681 544 693 346
 730 185 871 117 875 345 526 243 214 150 196 198 157 850 187 140 650 225 841 238 839 540 195 827 176 522 785 174 737 782
 800  67 738 846 762 200 191 378 707 277 182 269 205 898 206 723 391  23 853 291  72 312 619 497 240 609 208 879 759 313
 390 285 299 257 331 582 283 104 884 542 115 511 880 165 287 801 263 745 845 550 852 101 477 194 252 153 467 638 893 369
 436  10 297 230 215 136 851 223 692 753 108 351 854 179 169 211 311 474 303 690 626 514 885 236 402 261 628 805 889 776
 684  17 410 499 360 537 531 220 640 367 778 420 203 300 307 411 163 321 221 519 654 292 353 763 316 887 809 450 462 621
 729 614 318 273 319 384 354 886 583 566 395 611 849 272 265 281 173 371 398 357 579 145 315 409 478 543 417 734 535 362
 352 305 306 394 245 317 836 304 517 298 475 368 465 892 460 333 382 701  66 380 568 551 716 439 795  78 565 412 459 536
 466 416 415 799  86 881 237 324 249 308 558 721 592 676  49 427 705 855 250 431 452  83 739 231 528 447 335 405 340 510
 823 876 424 453 314 375 131 469 863   5 506 320  56 428 844 894 246 288  39 468 486 699 137 372 445 622 635 503 457 337
 822  58 585 454 407 496 406  87 202 217 365 495 392 348 268 374 438 545 856 563 484 421 811 490 286 336 698 668 508 435
 546 600 464 607 572 425 404 564 489 833 487 584   8 520 485 219 512 529 363 440 102 295 541 791 262 326 389 419 119 620
  93 561 869 539 413 158  59 266 259 472 480 575 835 408 700 500 883 309 877 401 204  79 426 446 461 812 430 576 377  47
 533 569 107 166 648 505 339 209 400 744 604 100 433 515 548 688 796 342 651 328 256 458 718 636 685 355 574 111 284 213
 207 383 381 110 813 629 521 680 761 449  57 494 646 656 463 660 553 341 765 632 253 289 366  24 513 593  33 399 258 586
 613 488 598 708 571 733 652  60 325   9 573 775 146  75 483 549 630 591 135 570 347 825 754 224 633 534  14  81 172 647
 523 470 504 702  42 649 637 842 900 275 667 590 502 677 293 792 675 216  95 123 105 141   6 661 658 294  71 578 639 188
 151 686 155 538 227 554 670  16 228 581 784  84 595 603 798 818 148 703 870 644 387 559   1 226 780 479 254 109 154 713
 181 376  15 557 645 732 659 786 229 764 704 736 290 210 527 741  34 599 525 234 159 797 717   2  11 694 587 364 133 507
 679  63  37 773 714 437 788 790 143 895 665  32   4 602 866 874  82 175 222  48 766 344 865 814 641 746  65 170  25 190
 241 728 618 689  28 242 456 361 672 597  89 802 429 857 663 532 120 696 138  45 606 643  77 682 343 631 555  91 735 149
 127 725 697 423 803 830 752 779 481 588 516 327  40 674 858 160 247  26 530 274 388 232 862 441 552  20 492 386  88 197
 370  27 498 403 218 837 562 821 338 264 397 740 443 393 828 781  19  36 634 334  70 756 451 715 807 605 251 329 491  97
  18 567 396 816 432 755 596 808 819 642 742 772 832 171 267  12 183 673 156 310 235 829 482 838   7  30 385 270 422  50
  64 518 162 239 379 768 769 804 794 418  73 662 434 212 657  21 577 709 147 356 106 789 834 719 848 731  13 359 350   3

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.18385e+07us (= 11838.5ms, 11.8385s)
Wall-clock time (full program): 1.18715e+07us (= 11871.5ms, 11.8715s)
Satisfaction error: 0
Number of search iterations: 5143
Number of local moves: 1799 (including on plateau: 884)
Number of local minimum: 425 (including on plateau: 115)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 596 859 262 729 566 891 873 718 806  84  43 860  36  89 534 730 858 828 255  81 799 692  73  92 762  28  74 113  97  87
 108 214 194 591 142 593 795 886  75 216  60 892  95 169 613 597 856 841  88 467 827 824 850 151 520 115 143 667  54 872
 112 781 405 103  83 587 564 469 832   8  82 810  29 714 635 523 738 432 869 138 771 733 105 642 303 610 200 883 217 137
 821 203 147 760 171 754 769 552  72  34 186 299 588 885 643 656 880 833 525 234 594  47  79 836 706 235 170 266  61 509
 131 895 215 863 896 406 804 486 130 275 245 794 197  57 649 634 732 178 243 120 672 831 129 812 874 785  96 195  45 126
 173 826 232 717 201 877 271 894  71 404 220 673 533 668 720 747 793 541 165 196 606 185 154 724 861 208 233 219 125 278
 429 898 176 710  94 301 878 743 136 193 174 780 888 144 807 862 227 180 254 258 611 889 662 581 736 236  22 155 260 231
 280 417 308 342 179 897 206 900 396 172 698 160 820 240 853 670 313 277 134 187 571 811 884 595 848 605 333 150  78 191
 279 890 141 344 259 755 230 746 879 380 250 248 734 272 796 722 256 293 210 100 565 688 694 723 819 307 265 184 297 189
 312 183 360 708 390 899 247 802 409 893 323 253 309 314 818 864 349 228 209 346 851 223 756 563 363 305 383 198 388 269
 482 273 697 218  91 331 651 749 175 306 696 290 456 286 815 865 381 377 267 838 473 149 270 572 268 336 317 159 887 840
 414 444 400 221 578 246 526 362 398 164 844 709 295 355 326 567 449 500 876 394 524 684 322 627 311 238 341 415 545 440
 495 357 695 202 441 424 546 399 284 707 702 478 652 365 498 222 366 480 327 282 777 459 384 870 439 274 352 492 335 211
 434 292 517 408 437 302 403 867 325 379 304 318 421 854 316 435 790 319 340 371 630 430 182 586 445 508 425 465 584 428
 457 488 423 413 324 448 375 395 356 338 391 537 466 487 601 663 576 463 477 436 471 505 461 397 472 479 528 373 348 367
 332 475  55 453 407 433 485 574 431 442 519 489 361 540 140 464 418 582 632 510 369 555 443 337 455 516 535 641 339 583
 570 522 603 579 483 481 568 393 386 330 244 416 389 527 550 549 385 354 251 532 321 569 626  68 633 474 387 450 501 374
 368 426 226 664 401 602 513 343 542 334 420 350 212 447 599 530 539  85 646 499 291 589 122 494 544 476 493 690 580 490
 660 419 285 402 458 687 598 181 538 536 514 135 132 604 347 559 654 600  14 592 328 577 585 320 506 653 608 462 511  50
 622 446 118 351 735 106 507 162 612 515 438 468 460 607 543  65 661 470 713  13 213 454 242 288 647 512 618 689 624 616
 452 529 497 561 700  80 156 241 665 640 484 619 556 562  56 107 631 636 554 329 378 382 645 412 124 123 680 774 679 263
 621  98 451 101 531 257 683 148 358 655 609 674 229 518 628   9 521 726 658 691 281  31 573 188 145 805 372 590 678 686
 669 758 682   2 558 111 704  58 748 715 676 638 224 427   1 310 547 158 701 657 199 637   5 167  23 623 741 560 491 725
 575 614 750  64 766 315 204  67 728 617 294 261 163 644 207  41 296 770 712 823  33 639 116 119 146 798 625 737 776 615
 745 699 629 153 837   7  90 392 797 759 551  40 675 648  27 114  38 677 739 829  17  30 620 298  69 830 553 104 764 784
 727 152 721 775  20 133  44 252 716 751 791 225 783 650  24 161  32 671 283 773   3 496 787 249  77   6 817 786 742 868
 849 128 768 410 842 503  39 117 765 778 376  19 353 681  76 192 102 139 693 882  62  86 789  49 666 814 740  48 788 761
 757 177 825 772 875 110  25  66 782 822 803 685 871  46 109  26  16  53  63 800 808 157 359 705 166  18 753 364 843 659
  10  15 881 731 237 557 719 289  51 276 744 205 809   4 345 127  99 703 816 370 411  70 763 548 300 846 866 847  21 855
  35  37 852 168 813 422  42 264  52 792 834 190 779 711 239 504  12 121 801 767  59  93 835 502 287 752 845 839 857  11

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.93989e+06us (= 2939.89ms, 2.93989s)
Wall-clock time (full program): 2.96915e+06us (= 2969.15ms, 2.96915s)
Satisfaction error: 0
Number of search iterations: 925
Number of local moves: 665 (including on plateau: 139)
Number of local minimum: 36 (including on plateau: 18)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 889 198 342 850 338 637 282 164 394 896 680  94 778 603 102 869 768  37  58 669 580 628  18 723 178 280 133 131 329 867
 151 839 246  52 894 347 602  74 393 870 657 158 123  67 884 459 593 655  72 598 124 770 162 288 266 601 148 725 872 825
 103 691   1 117 840 875 855 216 715 555 363 887 634 111 782 196 351 811 169 861  60 785 738 608  69 166  91 556 224  85
  68 668 740 847  17 793 838  90 291 698 890 206 818 324 752 732 510 185  84 399 568  99 384 605 167 481  39 883  28 311
 203 789 702 100  63 739  66  87  40 522 188 240 857 136 841 873 730 733 149 848 589 735 177 221 899  19 558 283 272 856
 235 734 477 200 424  76 832 805 215 779 165  42  79 129 541 724 234 827 287 512 566 619 676 671 688 854 255 398  93 378
 308 755 585 898 249 802 822 194 120 821  64  56 258 237 713 794  81 604 137 711 160 285 627 773 294 147 617  61 514 828
 243 415 781 652 401 118 766 813 241 879 171 186 209 262 548 245  11 343 860 900 488  50 592 750 212 407 226 414 583 749
 682 798 748 236  75 664 758  32 531 538 466 722 354 845 297 229  29 313 726 116 385 491 344 576 155 175 358 791 756 325
 310 163  48 269 445 741 225 422 496 388 213 547 443 299 609 685 767 260 581 625 814 533 307 886 410 270 524 636 355 244
 273 320 786 485 128 624   9 281 403 632 885 784 796 230 719 803 626 337 259 470 304 406 463 633 298 220  73 411 452 405
 417 425 667 293 731 716 190 214 849 498 613 494 448 427 199 684 339 439 513 367 253 292 456 851 254 490 467 109 451 369
 400 321 348 826 471 419 475 895 638 892 482 161 179 275 437 238 644 409 484  46 377 319 442 472 745 371 433 559 257 500
 208 323 836 505 227 571 383 373 218 610 197 629 434 868 569 386 379 233 817 228 426 381 525 649 469 112 511 700 543 205
 328 539 552 462 331 831 387 318 842 486 360 474 361 519 107 464 349 113 340 430 341 509 152 812 554 600 692 487 631 144
 121 274 560 880 710 397 106 413   7 248 465 640 265 296 550 565 635 562 549 506 327 534 501  97 706 824 455 366 597 359
 192 835 507 495 223 865 561 536 751 314  15 705 858 412 150 168 606 440 570 431  24 499 497 449 362 317 380 346 529 478
 590 127 402 391 528 110 645 263 586 432 653 315  30 517 516 492 643 395 673 295 305 322 420 251 567 591 666 764 508 518
 364 618 104  80 527 392 286 503  70 421 193 612 473 720 493 622 182 876 891 457 447 659 819  57 376 687 615 119 211 641
 579 267 146 277 761 326 683 523 674 429 545  25 204 658 461 268  78 587 544 460 279 138 696 142 744 834 441 489 458 799
 654 521 656 679  49 181 557 483 699 271 542 620 695   8 333 476 863 418 352  35  26 611 404 176 717 588 173 290 792 646
 614 537  95 623 709 302 256 594 446 335 697 729 686 607 183 382 530 662 217 191 416  22 651 108 829 334 672 170 553 365
 675 647 306 771 578 135 551 806  65  45 689 596 678 621 303 201  10 132 582 630 864 714  20 125 690 368 878 172 575  88
 844 573 232 650 648  16 357 599 703   4 708 584  41 753 737 261 546  44 278 154 350   5 877 239 577 122 866 207 859 681
 772 189 222 219 721 141 757 564 759  14 572 663 126 874 252 727 289 187 642 105 815 284 665 435 356 830 616 210  86 423
 660  83 438 694 454 330 174 774 765  77 790 540 808   2 428  36 693 231  53 881 742 783 264 247 532 436 843 526 139  92
 639  54 754  34 276 202 563 760 804  96  31 816 396 776 736 145   6 763 762 372 444 450 701 408  98 704  43 453 332 897
 853 195  23 846 300 180 479 893 504 184 159  13 375 661  27 134 746 795 670 777 852 833 130 250  55 801 809 888  21  62
 787 535 374  51 882 390   3 114 156 480 242 862 309 810  89 345 775 301 389 370 871  12 769 336 520 143 780 797 707 316
 353  82 837  33 515 595  47 712 140 101 820 115 800 468 157 312 502 823 807  71 718 747  38 677 728 743 153 574 788  59

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.15819e+07us (= 11581.9ms, 11.5819s)
Wall-clock time (full program): 1.16149e+07us (= 11614.9ms, 11.6149s)
Satisfaction error: 0
Number of search iterations: 5188
Number of local moves: 1610 (including on plateau: 771)
Number of local minimum: 462 (including on plateau: 103)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 533 180 893 877  96 110 851 128 781  72 816 724 804  68 867 102 634  48  56  36 747 878 773 112  86 892 121 731 147 352
 887 812 802 184 144 205 863 103 134 130 826 270  62 115  70 871 818 677  65 100 166 895 123 862 709  76 896 594 888 168
 890  75 139 481 136 162 873 629 109 857 643 723 328  23 169  58 712 694  24 599  46 879 672 660 881  45  50 876 214 868
 188 792 759 870 127 161 493 160 301 173 501 596 666 148 764 105 811 335  54 464 118 695 502 122 742 682 891 394  73 828
 656 676 829 522 889 642 839 222 142 681 768 834 211  15  61  20 531 790  57 553  95 884 844  38 117 885  71 172 186 285
 217 841 667 249 223 187 692 551  98 300 744 883 153 477 286 240 201 762 198 710 346 777 595 856 255  97 124 832 835 119
 780 158 824 621 228 578 882 687 279 221 831 726 630 717 192  99 399 350  55 570 155 589 779 830 167 170 225 308 275 190
 250 209 267 782 886 691 253 894 257 182 778 793 341 756 125 140 367 241  83 728 278 474 872 323 754 120 292 850 299 230
 875 303 203 265 294 324 693 795 880 688 541 827 213 550 338 343 840 869 199 698 242 559 290 325 133 321  77 238 244 348
 262 426 183 374 207 789 413 763 311 860 434 319 251 614 420 178 191 743 472 573 288 722 819 307 678 309 215 798 422 174
 431 284 675 333 297 897 740 379 264 200 720 289 237 356 163 227 852 368 236 900 397 669 730 179 899 358 377 385 243 430
 269 281 760 353 193 376 371 506 313 765 406 424 282 432 312 314 389 364 898 801 527 805 671 272 769 390 351 360 152 409
 447 462 519 707 359 499 344 736 259 837 485 295 425 504 291 468 239 732 369 843 252 508 407  89 421 315 475 419 232 577
 233 362 458 536 336 774 518 448 280 355 437 342 329 561 584 383 496 469 204 708 512 532 476 263 439 427 537 423 440 653
 393 563 487 489 471 507 450 498 558 361 449 363 480 441 357 417 564 398 304 463 492 429 457 466 494 505   7 557 605 490
 366 538 452 515 479  32 552 442 372 414 655 382 510 453 484 478 581 657 456 334 488 196 337 306 415 585 543 451 395 647
 277 603 246 661 455 549 404 465 500 509 378 416 411 444 438 326 400 486 530 412 332 229 579 529 454 593 459 547 513 370
 611 572 461 569 641 234 401 375 443 618 607 349 164 345 556 408 131 106 482  41 745 410  14 696 632 473 592 609 514 716
 649 433 273 542 588 331 520  22 645 483 597 210 528 194 535 526 436 545 525 107 384 405  88 626 582 587 625 460 574 495
 620 567  66 403 714  16 159 435 562 615  91 554 491 576 786 521 177 619 725 108 534 218 143 702 544 612 548 598 446 365
 648 670 235 503 715 283 302  44 636  92 604  93 658 601 568 631 575  21 739 261  12 189 624 560 651 571 616  84 650 679
 145 583 231  69 674 254 517 591   8 689 248 175 644 600 580 613 684 654 776 266 524 380 402 540 565  18 511  53 663 858
 685 729  35  67 673 470 185 623 662  17  63 113 718 224 546 586 126 640 734 387 590 165 418 566 195 753 721 617 555 652
 157 733 212 137 854 135 467 635 705 539  74 757 683 428 735 810 752 171 711 320 627 258 247  27 339   6 713 268 865 150
 276 746  87 646  42 622 293 330 606 638  49 340  29 271 686 787 785 138 784 318 602 114 202 388  13 523 866 770 823 741
 727  19 796 665 101 737 132 516 845 772 298 181 791 322 637 668 111  78 639 391 738  52 296 758 610  40 864  39 633  59
 116 794 386  11 861 775 129 206 799 327  43 659 771 853 445 766 256 260 767 381 855  79 149 817 220 803   9 156 788  34
  85  64  25 373 813 719   1 680 317 151  47  60 833 874 690 800  90 287 814 701 825  82 628  94 316 842 847 699   3 755
 838  30 748 706 822 608   2 305 700 208 354 154  26 849 750 821 141 703 751 245 815 392 104 396 219 820 859  81  31  37
   4  10 797   5 197 848 176 347 749 761  28 664 846 704  80 809 226 310 808 497 783  51 274 806 216 697  33 146 807 836

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.41742e+06us (= 3417.42ms, 3.41742s)
Wall-clock time (full program): 3.45077e+06us (= 3450.77ms, 3.45077s)
Satisfaction error: 0
Number of search iterations: 912
Number of local moves: 605 (including on plateau: 187)
Number of local minimum: 44 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 435 716  34 327 643 290 635 196 777  23 776 672  92 114 150  24 248 740 782 721 899 701 141 295 636 624 332 570 457 465
 749 630 123 203 683 213 374 644 665 597 103 860 886 861  47  77 786  78 667 384 188 692 263 898 501 303 153 609 160 118
 768  27 852 853 192 484 300 727 349 795 682 145  65 126 236 674 862 191 301  87 754 739 655 395 218  55 560 388 838 197
 680 658 625 292 796 261 890 401  67  79 823 599 302 211 130 656 569 385 571 134  88 314 357 283 836 392 851 243 380 642
 628 164 706 617 572 125 180 364 888 475 787 227 387 360  26 181  98 798 820 891 547 802 666 312 354 442 736 190 109  63
 298 824 170 518 647 791 712  17 136 276 340 844 151 448 896 317 493 634  38 835 766 474 648 195 750 567  29  39 119 543
 660  96  68 246 508 638 525 515 842 729  85 254 444 704 157 881 717 105 855 626 204 272 506 482 697 329  81 546 131 612
 731 178 762 415 818 331  95  18 876 723  28 361  58 394 743 420 268 864 212 257 184 767 220 827 500 117 678 815 319 536
 217 759 554 562 419 266 399 274 783 530 210 657 113 421 106 172 432 139 714 313 778 367 664 808 651 726  13 372 280 816
 760 819  72 156 850 858 149 282 618 470 652 404 531 430 316 425 175 487  66 649 481 251 670 307 194 574 440 100 629 700
 391 805 228 142 371  54 183 765  56 542 673 412 241 398 286 551 163 545 517 631 677 337 821 633 502 322 758 382 724 405
  40 849 397 324 579 199 310 711 462 176  75  51 112 182 780 732 376 832 771 275 495  71 250 883 447 639 291 839 854 513
 846 480 334 807 826 453 527 370 116 829  80 437 719 379  57 689 557 161 221  83 871 451 620 108 671 556 523 590  16 138
 494 751 279 741   5 339 695 688 461 216 433 270 578 575 580 573   3 362 702 128 887 377 489 598 491 265 438 589   1 507
 526 359 684 622  99 602 524 262 553 744 469 632  25 450 449 735 335 460 640 455 830 558 328 111 521 541  97 234 389 281
 509 365 413  48 544 115 528 646 840 775 147 344 841 452  22 436 386 696  74 287 520 535 229 663 363 258 828 463 785 403
 446  70 900 720 200 306 284 532 206 315 350 476 753 479 166 733 486 516 369  44 566 568 834 885 244 581 222 411 252 601
 318 496 549 260 121 882 393 653 226 713 577 240 877 803 615 325 799 285 522 485 107 249 237 201 409 219 722 763 326 143
 267 434 592 690 445 422 892 162  15 488 466 230 747 346 789 742 341 534  90 406 167 600 355 173  76 293 769 675 757 552
  35 400 490 368 423 668 174 619 669 352 514  82 390 366 843 269 408 308 264 833  45 623 338 459 761 837 593 699 259 426
 238 155 492 825 330 533 613 497 596 537 645 679 814 772 288 311 538 177 650 591 429 454 321 148 231 193 309  12 698 439
 165 418 223 381 676 804 198  84 477 467 102 627 202 606 424 607 730 870 239 608  42  31 373 587 794 278 323 584 811 784
 874 273 277  64 709 868 483 416 101 124 873 764 120 687 621 605 342   9 693 146 431 512 866 813 473 189 529 604   8  41
  46 756 715 582  49 225 414 708 806 540 869 681 550 718 788 245 505 504 378 519   6 770  73   4 320 539 187 208 299 511
 548 610 271 214 233 694 407 588  94 817 235 867 728  10 865  52 347 224 705 396  32 685 137 122   2 857 661 594 746 774
 110 478 611 781 207  21 289  50 637  19 468 186 472 428 427 358 595 779 402 410 745 797 800 752  62 880 641 179 773 158
 576  37 616 133 755 458 738 563 168 471 691 209 872 294 875 135 499 333 132 159 848 232 104 129 561 375 812 734 801 205
 305 456 822 585 256 686 498 662  93   7 464 348  69 351 879 659 863 356 809 417  36 144 503 555 614 603  59  14 654 748
 510 441 565 703 255 343 296 242 895 559  20 710 793 707  60  86 564 353 140 889  61  89 893 152 253 792 847 185 215 897
 345  11  91 336 304 586 810 859  43 127 878 247 583 443 894 845  30 790 171 856 831  53 154 737 383 169  33 884 725 297

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.9557e+07us (= 29557ms, 29.557s)
Wall-clock time (full program): 2.95901e+07us (= 29590.1ms, 29.5901s)
Satisfaction error: 0
Number of search iterations: 15798
Number of local moves: 4333 (including on plateau: 2739)
Number of local minimum: 1574 (including on plateau: 343)
Number of resets: 7
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 549 610 408 580 750 559 109 579  31 312 586  37  96  71 860 871  77 877  70 403 684  49 794 790 114  93 887 267 555 847
 294 671 287 807 702 229 121 720 124 626 806 873  36 254 169 152 123  46 820 810 760  74 407 781  58 570 838 837 409 111
 815 149 878 615 340  40  89 710 848 223 227 335 162 531 641 757 277  42  76 679 224 743 113 221 416 829 819  26 886 804
 161 272 285 849 192 305 562 652  88 875 749 766  84 401 530 900 681  85 567 625 253 217 132 785  78 155 327 896 220 823
 142 714 164 782  28 732 130 131 863 469 225 638  21  82  17 788 698 140 107 598 239 817 166 862 844 711 737 205 771 694
   6 884 182 898  94 857 177 783   7 112 602 653 183  10 752 740 666  25  59 828 136 153 105 759 709 761 775 554 240 805
 238 683 176 742 362 868 322 866 292 874 889 618 222 258 200 514 236 433 154 234 470 604 430 672 307  72 126 595 228 830
 784 747 106 895 600 274 246 797 235 647 364 299 390 230 827 462 232 424 388 617 326 349 770 157 148 250 599 429 204 719
  23 723 890 566   5 706 251 393 574 184 291  27 769 203  13 703 561 778  80 636 321 308 738 678 841 278 293 682 324 676
 831 400 382 776 273 423 882 270 480 302 431 366 377 190 623 654 249 605 202 834 174 233 318 494 442 314 850 505 243 392
 360 167 248 465 309 269 447 440 197 297 899 295 313 774 796 693 538 677 296 463 283 282 897 762 316 347 247 633 525 280
 668 675 880 185 601 558 727 596 456 310 425 437 708 241   9 298 306 365 845 279 187 536 687  35 450 264 214 670 181 722
 799 540 398 457 628 137 490 325 146 426 660 504 359 369 696 414 138 460 405 520 379 835 883  57 170 833 656  34 486 311
 493  95 517 428 147 818 535  15 255 789 691 186 748 867 455 461  12 168 839 384 532 765 103 521 739 361 417 464 208 502
 812 421 394 560 449 578 444 537 263 212 475 545 479 110 659 607  87 448 418 518 637 333 275 468 352 399 491 621 482 441
 386 501 351 572 543 348 171 685 523 289 515 415 143 356 519  38 556 716 375 591 635 631 495 734 667 368 389 300  83 620
 406 363 451 446 411 712 101 516 614 489 266 434 565 317 467 458  69 856 569 345 503 609 632 459  52 350 487 332 689 547
  73 286 488  66 353 175 661 172 594 512 372 539 500 692 319 419 588 573 329 622 346 508 589 634 608 664 376 330 650 477
 541 381 189 385 260 533 445 145 354 582 290 611 779 216 485 367 478 792 492 342 777 484 471 704 546 787 472 476  16 115
 528 144 557 374 571 725 524 645 334  67 701 215  47 592  43 331 506 552 876 303 786 885 584 383 522 619 100 276 527 198
 674  22 695 257 513 585 534 551 616 879 218 892 612 865  44 395 718 188 207  81 816  86 473 122 320 550 435 657 195 315
 245 581 108 301 343 576 358 438 669 432  68 639 665 893 800 193 707  45 590 141 116 337 178 427 728 629 454 587 756 511
 436 226 265 125 624 553 768   1 861 858 213 402 497 646 443 133 583 281 577 439 699 690 544 396 151 498 244  56 606 700
 811 563 753 288 872 507 481 529 724 568 410 809 219 642 344 271 673 387 499 252  14 452 261 117 357 767  91  79 648 127
 496 259 593  90 741  75 825 119 746 644 564 773 736 726 242 548 209 603 697 150 643 159 211 397 196 688 191 763  51 380
 744  97   4 139  98 735 824 210 754 336  29 663 721 869  99 158 575 630 891 341 422 453 627  19 729   2 855 640 801  50
  61 413 791 391 802 466 798 894 526 199 201  65 745 715 651 135 483 851 304 134 156 836 371 129 755 613  53 751  63 163
 662 713 420   8 843  20 842  18 404  62 649  64 870 355 268 173 772 717 888 859 832 764 128  11 680  33 370 104 821 165
 474 510 852 206 328  32  54  48 179 822  41 323 655 194 813 102 853 378 840 256 826 284 338 881 808 686 542 237 793 160
   3 705 803 262 733 120 597 730 758 118 658  92 814 846 731 780 864 373  55 231 339  39 795  60 412  24 180 509 854  30

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.17967e+07us (= 11796.7ms, 11.7967s)
Wall-clock time (full program): 1.18299e+07us (= 11829.9ms, 11.8299s)
Satisfaction error: 0
Number of search iterations: 4794
Number of local moves: 1293 (including on plateau: 439)
Number of local minimum: 408 (including on plateau: 64)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  28 776 897  59  94 886 177 558 297 791 513 587  91 239 578 396 832 699 668 394 225 683 148 470 756  38  56 698 146 735
 730 650 284 700 624 894 206 786 572 388 645 680 384 462 418  72 779 556 750   6 516 127 793  21 128 313  34 193 285 519
 342 156 762 804 211 890 598 233 592   7  77 368 210  20 610 726 678 862 731 111 312 896 481 443 783 743 322 136 318  93
 754 508 734 295 684 682  63 258 870 867   1 402 814  43  39 634  85 760 106 232 463  12 747 557 354 546 636  65 530 774
 165 163 732 453 733 604 254 400 473 767 780 419 448 538  71 119 135 789 806 159 231  84 796  96 376 642 784 467 853 178
 852  36 555 370 204 356 577 465 887 729 114 413 129 822 217 755 245 813 893 528 130 583 845 100 213 433 338 609 290  14
 878 621 514 154 247 770  69 869 242 196 723 265 104 681 603 326 201 257 690 271 246 209 679 809 798 524 504 250 310 505
 369 133 562 421 888 489 180 606 392 834  99 269 260 544   4 343 415 580 298 226 395 795 340 676 787 359 477 377 808 589
 223 145 593 348 252 861 799 221 773 790 167 230 273 542 152 361 367  48 184 811 228 704 781 688  98 875 719 898 160 224
 742 200 499 612 823 588 268 132 665 821 656   5 360 122 846 162 307 526 707 289 884 183 500 426 336 691  33 320 207 605
 293 358 263 460 267 412 857 324 350  87 736 858 763 515 488  44 654  25 205 373 879 816  66 696 498 406 595 332 331 564
 601 777 319 283 157 539  81 446 266  40 525 739 710 758 144 812 741 244  11 411 454   9 301 472 768 459 692 882 435 439
 815 635 323 110 391  61 865 560 844 327 131 423 355 714 571 848 404 554 339 581 330  13 766  78  58 543 108 891 643 234
 344 385 186 744 306 900 222 440 325 483 444 270 316 351 299 428 139 256 761 803 296 582 658 895 769 366 346 264 532 405
 502 817 778 416 198 335 836 275 107 383 639 727 503 399 501 202  41  64 531 569 199 179 286 371 833 802 461 291 420 850
 438 341 365 288  86 216 466 892 424 334 262 445 740 390  68 725 482 721  46 333 164 536 651 190 173 689 877 782 838 553
 872 102 586 510 625 441 548 529  88 176 452  90 474 427 899 535 374 251 447 552 314 407 874 475   3 617 457 534 469 387
 517 347 337 596 105 345  75 277 187 364 573 492 626 616 863 695 161 675 124 484 671 622 432 722 837  53 451  67 745 456
 170  76 579 746 379 236 219 701 512  89 644 856 551  45 720 648 561 353 150 585 308 637 565 841 123 506 497 607 118 493
 615 576 113 537 705 422 386 575 126 871 349 801 134 362 321  54 859 147 748 728 208 667 115 653 455 117 591 240 380 660
  73 835 468 712 494  55 613 533 618 280 628 197 507 279 868 826 227 142 442  16 847 706 192 143 511 693 550 294 125 641
 608 112 631  57 238 191 523 235 661  17 757 305 401  95 389 600 304 174 584 311 619 664 657 521 818 249 849 669 567 709
 274 449 480 403 195 378  52 800 121 885 137 189 566 718 153 302 889 212 303 702 753 630  62 640 417 854  82 476 655 738
 218 471 545 666 851 272 614 715 203 765 434 881 181 864 703 749 599 520 276  23 717 158  31  74  42  29 570 549 620 175
 672 785 713  37 752 673 646 214 329 309 140 827 860 169 638 810 632 398  15 109 623 662   2 495  27 486 751 194 255 292
 182 775  79 687 602 241 820 237 429 103 300  35 629 772 807 547  47 149 652 830 172 410 633 437 647 436  32 464 771 590
  92 797 352 425 663 101 491 215 611 487 716 357 229 479 694 243 375 825 876 541 568 831 397  10 883  22 261 151 414 409
 697 686  80 278 458 155 649 166 659 450 408 282 805 880 522 185 685 281 120 843 866 171  97 759  60   8 829 496 824 116
 430 372 168 670 559 381 597 490  50 627 788 563 574 287  70 317 478 840 315 839 873 509  26 708 253 188 393 527 138 485
  19 431  18 674 724 141 764 363 842 248 677 540 518 382 259  51 819 794 737 855  24  30 594  49 711 828 220 792 328  83

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.97593e+07us (= 19759.3ms, 19.7593s)
Wall-clock time (full program): 1.97924e+07us (= 19792.4ms, 19.7924s)
Satisfaction error: 0
Number of search iterations: 9495
Number of local moves: 2321 (including on plateau: 1147)
Number of local minimum: 840 (including on plateau: 143)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  24 495  88 314 722 452 576 740  69 649 700 752 419 376 428  53 758 176 852 500 267  61 719 330 370 417 837 144 542 685
 410 598 747 539 408 186 603 844 677 332 219 636 750 185 789 250 776 819 361 359  97 453 210 647 234 873  23 224 257   9
 611 423 876 299 723 651 809  90 549 506 374 471  81 656 170  59 150  87 889 498  11 708 355 154 578 595 124 585 619 814
 516 596 753 618 571 729  26 763 163 179 712 322 882 286 529 583 100 214 497 454 316 481  60 364 169 363 804 659  20 786
  29  54 159 607 829 802 191  84 834 412 508 538  89 808 356 470 347 445 552 249 540 230 135 841 874 743 817 748   6 218
 792 130 813 388 866 467 663  63 248 548 667 111 720 328 300 687 297 630 117 688 446  78 386 830 164 863 365 671   8 181
 664 310 262 767 854 177 318 631 188 118  40 821 872  93 554  21 202 482 193 559  43 828 326 395 536 229 832 594 840 766
 899 801 350 499 139 341 255 302 727 564 847 121 152  41 606 215 290  82 448 478 730 175 441 352 279 879 390 717 883 512
 288 103 357 137 156 621 353 633 203 119  44 479 707 859 653 742 303 572 199 588 628 888 580 641 147 582 737 504 320 372
 337 890  71 769  55 525 764 553 833 168 521 126 561 640 698 284 151 502  86 466 650 795 431 378 307 165 669 195 192 733
 897 608 892  96 384  94 721 411 870 206  99 485 254 435 305 197 532 131 402 491 861 806 371 472 565 133 140 425 887 345
 555 686 296 420  79 771 468 281 253 319 848 703 570 875 196 666 228 670 546 483 198  33 699 113 831 295 217 839 216 161
 331 282 477 401 287 796  62 878 275 475 675 157 574 613 309 880 807 524 238 129 665 321 560 460 102 293 269 845 116 714
 563 490 397 820 746  47 543  37 415 799 680 432 323 200 673 413 779 566 496  52  56 528 311 579  74 615 660 584 381 256
 336 681 474 535 259 634 716 108 149 851 451 815 158 437 209 387 616 358 869 597 734 643 184 315 637 243 409  68 304 338
 505 520 251 770 684 343 110 793  19 530  65 629 379 242 768 342 736 713 212 620 547 298 232 366 494 871  12 838  17 609
 511 895 725 761 690  42 862 760 414 739 569 247 252 456 462 143 510 270 416 263 443 513 104 480 171 324 537  15 213 728
 155 294 893 648  92 590 236 672 406 447 556 668   5 638 476 772 534 362 339 120 503 473 380 172 531 329 461 682 183 898
 225 842 843 791 591  76 187 788 822 285 125 306 434 258 399 439 211 836  14 136 450 501 601 389 240 674 557 558 865  72
 488 846 274 612 430  57 635 523 798 182  31 644 614 308  95 241 726 333 369 541 602 205 735  85 755  49 625 375 745 592
 112 885 695  27  28 457  25 710 487 433 744 368 627 261 221 268 418   3 509 527 587 438 773 645 894 676 134 486 812 265
 810  39 208 114 658 458 280  73 900 105 346 142 864 405 702 891 178 835 106 857 784 886 551 277 705  46  50 271 683 291
 600 146 222   1 422 313 514 424 622 465 394 207 407 655 639 292 180 823 818 797 724 455  75 785 360 775 519 223  16 642
 896  34 334 272  67 777 484 245 868 518 816 856 141 661 244 327 568 115 654 778 189  70 884 781 123  66 749 489 377 132
 704 127 593 449 383  22 589 662 860 757 550  77  30 774 706 398 429 575 227 122 693 426 782 335 709  64  45 317 689 421
 109 853 235 678 805 624 173 264 148 391 610 239 741 301  91 794 581 246 696 459 759 273 393 697 367 738 623  83 340 204
   2 231 260 160 400 787 469  80 382 790 354 825 679 404 289 599 604 440  98 101 493 507 800 632 349 855 403 344 827 351
 858 174 107  18 201 605 783 190   7 657  10  35 756 167 577 826 765 464 762 803 145 718 533  36 646  48 617 691 754 562
  51  38 348 867 162 526 385 517   4 220 266 811 442 780 194 732 586 850 849 233 226 711 278 312 731 436 463 283 522 692
 237 444 515 138 824 545 715 396 325 751 694 492  32 373 877 544 153 392 701 567 128  13 626 652 573 276 427  58 881 166

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.52696e+07us (= 35269.6ms, 35.2696s)
Wall-clock time (full program): 3.53024e+07us (= 35302.4ms, 35.3024s)
Satisfaction error: 0
Number of search iterations: 19392
Number of local moves: 4648 (including on plateau: 2488)
Number of local minimum: 1850 (including on plateau: 281)
Number of resets: 10
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
   4 766 706 742 559 806 321 841 589 162 244  17 126 596  48 636 710 848 273 617  49 876 137 509 332 512 836 444 202   7
 490 459 720 498 383 677 226 819 827 117 318 382 552 604 286  81 207 768 705 670  89 488 511   9 453 737  24 862  64 489
 772 492   3  18 225 147  10 655 870 891 805 872 726 590 380 822  72 209 666 527  52 789 832  56 887 369 142  53 544  39
 319 565 879  41  29  99 104 256 416 700 749 811 557 148 573 857 600 776 674 155 662 729 508 228 829  59 161 856 110  65
 457 428 327 738 402 135 795 834  46 545 158 352 658 755 222 105  61 475 409 759 799 171 177 568 643 615 201 770 340 570
 863 609 867 401 198 123 773 272 558 262 462 687 883 210 241 523 100 279 584 397 877 431 641 150 430 471 314  37 612 260
 665 328 619 838  34 646 895 792 231 156 120 174 237 562 230 277 479 176 458 291 513 572 623 240 861 718 592 644 257 287
 537 536 860 419 408 242 220 357 208 865 569 167 364 796 160 531 212 183 434 113 869 252 178 495 667 685 890 785 300 213
 310 141  33 714 690 694 818 309 365  97 597 858 854 519 586 276 713 608  30 236 491 476 598 715 186 762  16 197 356 270
 442 259 250 761 560 298 138 304 894 460 517  12 724 465 448 577 151 254 849 166 299 575 697 787 561 335 744 341 463 184
 316  28 734 248 708 290 283 214 847 593 747 333 349 411  94 378  92 731 296 736 778 211 757 337 376 278 793 779 271 507
 446 681 195  23 579 846 807 253 437 377 398 405  78 808 633 305 639  80 684 451 585 625 264 112  40 750 251 435 885 443
 368 353 620 521 134 445 745 175 543 129 707 499 696 730 533 361 367 308 816  26 614 417  19 898 181 716 351 421 384 438
 182 664 478 474  38 851 312 672 520 740  22 842 370 506 255 395 723  42  20 695 375 381 106 852 820 725  83 128 668 576
 505 582 284 502 514 429 360 642 571 452 472 627 606 336 578 524 379 412 481  63 258 386 289 756 629 331 556 247 371 373
 711 532 763  67 200 510 345   2 497 821 701 372 399 426 673 501 496 203 359 355 187 143 733 548 101 790 294 394 743 649
 602 191 704 414 461 363 374  60 130 339 899 268 306 814  13 447 534 165 423 550 580 263 771 366 234 607 616 839 824 358
 470 297 526 760 388 436 765 504 610 900 206 140  95  25 420 551 853 163 581  36 522 391 843 243 676 661 595 493  62 303
 669 746 108 587 889 634  32 525 362 455 307 334 484 880 855 591 387 804 683 613 116 233 144 631 193 109  35 192 624 293
 245  76 145 440 650 754 657 454 325 826 864 480 469  43 689 563 418 301 652 494 564 159 403 348 671 267 354  11 653 540
 500 638 473  84 786  87 485 647 626 139  91 574 675 204 588 516 800 315 539 693 780 216  86 875 837  55 180 456 157 413
 528  96 131 188  77 114 152 830 648 281 350 121 194  70 859 825 637 660 215 567 630 893   8 679 529 295 817 503 896 722
  74 313 322 407 769 115 774 802 515  71 739   1 601 246 682 775  88 302 618 219  51 535 482 803 288  44 566 844 815 654
 752 583 433 415 274 659 189 119 269 767  21 678 385 651 172  58 389 884  14 622 812 553 224 196 483 702 611   6 882 712
 686 232  79 703 621 850 400 518 835 221 229 741 709 758 266 217 450 801 239 791 393  57 396 127 338 179 549 111 133 886
 663 467 390 323 292 344 542 449  66 813 717 797 249  45 285 173 691 784 422 326 432 699 782 132 261  90 764 164 748 605
 317 692 136 439 628 547 154 170 168 392 122 680 466   5 866 487  68 735  98 878 125 871 645 897  31 719 477 833 275 594
  75 656 892 873 486 282 218 427  93  47 425 227 410 265 599 794 727 788 810 632 404  82 777  50 330 320 107 831 190 698
 342 781 235 530 845 554 823 464 103 828 874 311 169 238 441 146 751 118 468  54 185 888 329 881 102  73 868 199 280 635
 205 324 603 347 688 538 798 149 346  69  85 753 124 809 840 223 721 343  15 783 424 153 555  27 546 541 728 640 406 732

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.35305e+07us (= 23530.5ms, 23.5305s)
Wall-clock time (full program): 2.35631e+07us (= 23563.1ms, 23.5631s)
Satisfaction error: 0
Number of search iterations: 10958
Number of local moves: 2747 (including on plateau: 1158)
Number of local minimum: 1011 (including on plateau: 163)
Number of resets: 6
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 284 145 497 527 127 122 826 784 173 739 817 307   3 839 836 884  38 220 900 267 504 820 808 131  49  18  39 223 899 689
 802 720 108 813  70 760 691 142 730 840  65 640 862 859 331 747 293 801 793   8  48 848  16 675  51 126  25 109 140 402
 367 729 135 292 823 129 783 413 208 712  14 532 794 765 834 814  64 158 247  94 898 853 769 799  91  82 168 104  71 773
 602 427  52 179  60 136 797 850 837 858  95 287  31 484 758 865 319 465 736 296 744 397 219 779 123 151 490 723 113 642
 682 496  32 559 601 628 563 761  80 856 152  83 534 810 324 362  33 780 657 317 683 700 716 725  21 125   6 631 210 388
 887 749  77 742 735  27 857  37  58 510 454  22 625 767  73 696  87  98 665  12 748 639 672 697 404 167 271 791 764 184
 827 160 751 718 685 353  11 671  54 268  42 453 715 596 737 717 212 766 419 383 547 719 634 812 348 372  97 215 128 105
 776 643  36 762 254 673 680 211 587 800  81 195 731 615 619 387 302 155 309 269 701 556   2 734  23 245 250 622 604 693
  19 664 681 539 626 699 599 644 722 181  57  43 520 274 755 299 336 115 600 357 538  10 653 662 258 694 264 633 483 590
 663 501 650 743 468 178 359 570  40 692 613 118 551 426 120   9 439 668 648  85 187 636 595 459 854 688  63 475 498 519
 237 641 464 239 656 163 655 147 896 576 535 430 567 610 632  20 394 485  90 759 410 512 499 870 226 545 270 236 645 106
 676 591 787 557 579 139 235 506 403 435 312 346 436 616 885 314 589 361 185 478  99 775 500 868 322 352 294 577  55 243
 349 581 533 666 330 301 605 400 524 586 738 583 263 511 548 414 695  35 318 205 515 565 608 191 194 566 297 492 360 542
 278 491 620 543 876 623 417 272 788 592 705 516 159 513   4 649 531  74 463 487 450 429  13  75  62 690 323 752 574 546
 421 393 423 444 480 449 502 627 745 582 549 325 390 409 156 216 411 503 495 550 395 391 476 321 441 536 448 425 472 540
 481 477 445 457 523 714 456 588 418 467 458 479 338 488 376  93 803 355 428 585 781 473 103 285 522 462 415 200 530 315
 447 825 621 241 460 446 575 821  68 311 443 603 366 537 708 281 407 432 332 518 265 358 389  17 416 396 562 874 354 442
 486 466 569 493 328 893  28 327 304 424 437 609 732 564 341 598 611 571 406 392 207 227 373 229 852 652 624 209 310 253
 422 440 819 368 365 280 381 505 401  66 842 863 277 384 345 607 795 371 789  69 474 339 275 244 674 379 777 261 305 398
 343 183 251 778  79 461 201 303 526 295 871 658 259 329 283 710 529 452 298 670 225 809 399 514 507 405 578 378 375 846
 881 364 288 420 240 282 386 380 313 553 217 768 249 279 580 509 431 257 806 593 170 482 289 573 618 721 897 377 326 266
  76 320  44 180 202 290 171 344 494 231 866 704 342 291 843 726 824 199 815 805 273 891 172 308 798 260 584 276 306 880
 230 335 855 347 256 572 121 385 434 246 198 630 451 204 214 192 786 889 552 711 162 248 882 222 679 792 703 206 847 166
  53 213 150 369 867 433 438 112 232 790 763 807 175 350 228 724 525 886 193 651 146 143 617 888 892 351 541 612 197 169
   1 340 669 218  89 864 356 252 190 286 845 822 337  41 528 647 838 684  47 110 753 182 774   7 782 844 382 646 804 177
 470 203 740 176 894 835 157 707 877  29 890 242 816  56 521 370 667 262 300 878 174 132 469 119 709  34 818 107 165 698
 757 233 873 872 196 555 702 100 785 186 141 659 111 124 661 363 234 455 154 756 148  72 137 517 860 561 796 333 606 568
 713 558 161  78 594 489 471 374 144 117 706 138 879  88  59 114 829 654 224 741 746 188  92  50 883 841 875 316 833 560
  96 597 412 149 221 687  84 728 635 153 101 638 133 660  86 164 238 678 544 832 895 116 614  67  45 727 830 861 770 754
 189  30 772  46 831 334 408 554 849 134 508  15 869  26 130  24 255 686 102 637 629   5 750 677 811 733 828 851 771  61

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 8.31245e+06us (= 8312.45ms, 8.31245s)
Wall-clock time (full program): 8.34559e+06us (= 8345.59ms, 8.34559s)
Satisfaction error: 0
Number of search iterations: 3520
Number of local moves: 1496 (including on plateau: 716)
Number of local minimum: 254 (including on plateau: 79)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  40 672 393 474 869 837  89 183 606 128 518  86 750 210 264 743 324 734 796 141 565 733 753 110 383 578 272 756 222 286
 581 668 139   2 509 543 843 691 809 632 683 609  11 200  23 201 812 715 323  45  49 627 758  38 884 670  96 559  87 708
 254 864 885 770 815 126 633 256 707 437  66 694 719 680 137 106 767 817 167 467 896 454 170 184  93 199 651  42 451   8
  15 395 233 781  71 853 224 805 151 855 411 584 279 193 819 165 376 747 686 792 142 260 710 251 179  61  41 811 774 851
 791  97 130 526 744  20 396 403 464  47 181 684 836 275 525 846 481 337 813 764 426 873 259  37 788 169  59 604 333 607
 334 814  55 717 681 161 512 688 134  14  51  81 478 832 685  12 528 513 143  30 553 731 521 718 897 133 568 739 450 742
 697 421 597 636  46 362 803 234 364 331 453 381 112 802 404 663   6 459 623   9 798 624 599 121 295 801 789 100 140 845
 647 880 336  58 529 187 787 466 351 290 522 495 274 654 202 326 348 878 703  99 265 737 665 545 122 441 261  83 892 472
 227 443 751 198 504 230 530 601 353 363 854 711 173 101 524 419 511 124 508 863 236 826  26 178 488 876 136 595 870 296
 713 245 397 268 706 263 266 646 499 357 427 773 550 638 539 409 164 698 592 506 579 116 127 735 192 824 297 596 303  90
 677  67 888 206 794 399 655 314 371 452  18 890 462 316 327  28 322 477 859 865 302 350 714 533 288 414 372 355 726  74
 489 379 280  91 412 446 575 658 479 585 246  27 583 549 483 455 486 761 283 240 152 211 807 765 862 270 248 871 377 445
 614  22 418 571 762 696 131 895 352 653  21 611 648 666 157 858 328 228 120 535 447 562 149 736 174 458 212 440 759 292
  88 398 105 158 190 825 144  98 594 349 827 835 732 643 406 537 391 321  65 538 844 786 243 195 867 312 572 784 253 415
 822 408 370 456 673  95 429 776 640 818 220 189 616 502 516 313 457 176 625 687 182 346  68 368 490 695 494  16 226 842
 104 163 159 831 171 496 540 425 619 358 690 482 605 341 460 629 278  50 407 465 519 299 587 637 344 493 287 806 848 422
 564 329 360 339 542   4 359 285 872 590 887 671 586 889 423 678 242 294 229 704 413 194   1 546 439 269 166 563 475 602
 501 449 532 114 435 306 891 273 795 262 436 188 218 471 369 797 505 343 544 769 375 135 416 118 757 582 424 557 821 132
 760 510 480  17 523 828 570 567 534 620 615 410 469 662 847 221  84 216 729 712 886 109  57 679 231 487  43 153 239 257
 768 591 561 281 172 652  80 556 311 237 748 207 102 576 390 667 593 498  82 850 335 555 213 833 305 754 430 484 461 223
 552 238 378 716 431 574 203 724 531 777 235 185 476  79 554 785 664 405 548  78 345 204 727 448 217 752 541 315 444 389
 766 628 840 386 125 558 755 730  34 208 527  85 649 117 551 746 829 258  25 197 392 301 547 255 180 463 778 631 598 356
  13 722 860 384 749 394 676  29  33 320 682 115 641 674 894  31 875 108 244 893 186 517 160 433 656  36 473 660 810 247
 277  92 622 366 612 868 428 310 626 763   5  94 621 276 515 820 252 196 830 113 309 866 520 374 692  62 497 417 215 877
 573 723 150 675  10 630 107 111 782  64 291 701 645 250 882 361  53 657 148 689 382 129 709 856 580 492 816 282 420 347
  73 608 779 740 380 491 325 168 385 569 823 699 373  24 852  56 650 284 577 387 438  54 214 617 317 191 725 388 635 693
  63 145 470 898  76 738 146  52 720 721   3 503 219 780  77 600 610 485 849 147  75 267 879 514 881 401 900 367 154 775
 298 138  48 841 588 745 468 793 332 293 834 783  19 300 209 365 432 304 536 225 883 728 644 589 205 319 808 162 318 308
 340 899 799 177 241 119 289 771  35 804 402 342 103 156 232  44 705 790 123 271 741 861 603 772 639 700 857 307  39 354
 874 507 500 838 155  69 661   7  32 618 839 400 566 659 249 634 442 642 338 434 800  60 669 330  70 613 702  72 175 560

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.19326e+07us (= 21932.6ms, 21.9326s)
Wall-clock time (full program): 2.19655e+07us (= 21965.5ms, 21.9655s)
Satisfaction error: 0
Number of search iterations: 11670
Number of local moves: 2703 (including on plateau: 1277)
Number of local minimum: 1078 (including on plateau: 151)
Number of resets: 6
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 512 140 785 784 691 107 882 865  54 580 807  78 207  90 237 124 892 189 900  59 187 781 495 893 144  34 161 782 156 899
 172 113 886 121 717 740 876 864  37 866 275  73 194 151 673 737 731 675 168 645 167 660 743  60 837 203  50 855 200  26
  35 896 136 692 798 492 842 508  84 797 818  69  41  68 534  81 214 558  97 709 891 851 195  47  92 756 127 894 755 438
 877 747 769 524 727  93 875 566 698 792 658 233  25  45 601 887 889 644 224  89 273 218 711 118 173  77 197  40 581 164
 216 141 232 847 799 695 728 154  51 655 883  71 175 120 810 620 724 567 788 564 102 243 649 122  88 868  95 861 536 111
 316 116 205 748 739 897 447 159 137 832 880 166 150 162 858 196 771 759 337 617 126 712 192 125 831 132 239 241 826 599
 199 898 227 867 708 547 885 110 138 703 562 146 143 368 657 888 895 613 603 250 222 323 661 228 117  64 230 213 827 223
 198 402 249 794 229 870 291 859 382 285 733 327  82 160 884 176 763 862 878 468 185 388 881  65 286 155 206 177 834 446
 234 201 293 704 248 584 699 391 541 303 683 257 302 186 845 204 282 754 776 805 191 803 329 149 212 253 295 609 789 593
 263 363 359 404 393 651 688 226 211 873 333 115 274 290 686 442 296 749 846 707 292 260 305 820 341 287 220 338 679 804
 298 396 318 255 640 871 665 475 262 752 546 315 366 372 696 281 556 320 306 819 432 340 278 289 277 373 344 526 397 750
 399 268 444 288 313 778 271 272 879 464 326 852 380 297 802 317 418 671 440 796 419 602 342 371 334 370 354 379 375 294
 409 225 312 221 413 729 452 308 406 595 690 252 325 349 347 560 258 208 473 713 483 389 269 477 466 493 332 874 643 844
 549 890 434 319 219 427 431 353 311 433 766 352 528 857 417 351 484 422 336 398 485 310 307 497 559 405 482 343 469 381
 596 330 462 457 506 426 445 400 502 627 335 266 411 449 460 321 505 299 410 710 496 403 428 331 387 540 328 378 453 854
 385 510 461 355 463 606 429 383 616 240 501 424 346 525  19 533 490 503 339 570 348 548 455 425 554 423 515 443 569 537
 478 487 474 350 454 279 465 394 392 345 407 650 573 499 472 486  46 416 489 516 439 550 589 635 451 386 395 437 441 520
 529 535 612 552  33 148 555 634 530 300 193 583 488 561 641 594 578 235 539 479 470 215 553 467 471 544 481 435 322 238
 436 568 415 450 577 276 209 604 563 309 314 622 519 672  70 576 656 108 514 304 676 637  14 666 361 504 509 572 632 182
 507 592 588 324 791 267 494 498 523  23 420 621 538 582 180 667 261 654 531   9 521 565 663 700 513 518 522 184 217  42
 574 557 608 511 579 114 165 545 619 610 101 598 730 587 210 677 591 105 758  74  29 694  98 642 718 721 600 414  55 231
 680 647 693 639 618 358 246 638   7  10 390 607 762 551 190  13 500  99  53 377 633 459 532 517 726 630 611 625 256 448
 767 764 742  79   1  52 585  76 689  11 356 668 629 623  66  48 142  80 664 103 806 653 571 636 682 753 706 674 527 362
 745 301 813 188  49  85 134 736 646 590 456 821 586 254 202 687  83 183 746 100 811 725 597  44 684 626 779 768  20  56
 670 614 575 376  21 734 364 283 631   2 480 367 701 648 245 615 129 163 259 374 780  36 770 543  38 777 702 722 181 715
 723 678 795 542 153 130  91 624 856 732  18 848 757 716 139 628 178  94 145 251 817  39  72 825 835   6 765 605  32 421
 850 662  87 775   8 242  31 652 824 152 104 685 809 822 408 669 741 735  43 476   3 264 169 384 816 705 801  63 123 412
 872  61 458  86 170 119 112  17 814 128 109 773 793 841  62 179  24 270 430 401 681 760 761 815 751 839 783  28 659 719
   4 133  16 106 720 369  27 774 828 491 236 833 812 830 244 800 171 744 365 360 697  75  96 838 714 808 863  30 174 357
  22 280  67 157 738 829 131 147 284  15 135 843 869 840 860 158 247 836  58 772 853  12 790 786  57 265 823   5 787 849

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.79955e+06us (= 3799.55ms, 3.79955s)
Wall-clock time (full program): 3.83277e+06us (= 3832.77ms, 3.83277s)
Satisfaction error: 0
Number of search iterations: 1027
Number of local moves: 696 (including on plateau: 195)
Number of local minimum: 48 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 708 855 497 665 175 601 836 430 614 843 718 219 848 869 151 413   3  84  94 731  67 168 335 398 763 651  87 328 357   7
 239 122 787  96  83 191  50  42 799 709 868 437 746 185 825 850 723 729 343 747 133 798  72 249 421 649  82 229 871 440
 481 263 637 520 111 892  39 273 527 852 165 493 351 765 839 445 332 377 774 715 808 524 112 160 813  36 270  62 211 668
 714 764 753  98 277 606 632 244 834 728 759 840 617  16 196 574  44 344 106 669 581 261 544 431  78 176   8 636 857 128
 811 146 395  88  29 228 362 817 310 711 859 597 274  33 667 499 699  85 534 744 593 670 392  32 372   2 873  86 837 770
 161 570 635 184 801 823 576  63 704 821 613 323  61 465 147 340  34 804 776 579 275 423 713 155  56 156 129 782 720 626
 303 727   4  99 648 200 381 629 750 736 783 442  58 786 757 690 299 223 660 653 190 891  20 213 164 639  69 615 148 738
 681 205 354 203 571 721 677 179 645 591 333  55 241 683 137 540 134 717 846 818 218  51 805 222 672 194 295 647 325 755
 870 420 550 198 132  91 847 331  24 587 880 605 366 422 107 373 240 561  52 625 259 656 707  93 516 622 701 694 719 267
 572 621 598 523 304 157 756 741 819 139 232 716 349 549 575 242  74 220  57 119 761 580 268 365 890 537 103 745 197 706
 751 775  64 488 307 404 282 640 538 466 102 384 472 560 567 452 126 792 554 449 633 592 522  37  38 643 816 513  92 456
 562   1 734 609 607 573 187 306 327 447 578 849 243 475  19 284 881 262 661 403 547 618 616 762 152 376 484 586  14 352
 401 444 117 553 391 418 517  27 474 498 897  28 410 543 135 564 671 405 594 705 216 508 479 153 900 822 477 521  95 552
 503 419 482 563 374 557 360 641  90 411 329 399 388 158 531 439 478 642 555 125 526 509  73 624 356 491 842 406 507 737
 565 796 830 569 393 288  53 735 658 298 283 434 582 490 130 425 450 248 659 309 426  31 441 428 258 702 619 502 506 407
 369 330 448 872 495 207 453 519 469 414 883 235 380 674 604 533 311 400  23 473 695 101 542 794 149 245 375 496 424 602
 733 536 416 710 630 131 471 291 348  21 435 297 688 899 500 754 501 383 505 486 644 336 514 446 280 138 294 113 673 342
 353 225 109 443 511 208 460 305 468 250 387 568 436 409 264 338 361 896 835 301 455 797 894 408 785 265 367 272 730 415
 371 463 169 140 781 358 638 368 334 525 551 874 290 359 402 676 749 255 860 254 370 345 539 316 795 278 470 210 292 483
 485 778 845 476 308 385   9 689 286 809  26 545 433 895 427 824 685  65 492  18  40 324 412 535 863  22 163 634 512 530
 312 227 773 788 772 313 458 337 141  60 379 378 417 231 382 256 780 558 566 600 628 684 319 691 174 154 314 844 585 394
 192 462 687 752 457 697 201   6 831 269  47 363 596 202 652 302 438 893 725 266 432 858 350 518 115 556 712 260  10 666
 237 238 487 322 680  54 577 743 279 654 769 851 480 209 296 646 429 722 172 247 124 142 878 861 251 726 820 183 224 214
 123 221 108 888 884 193 742 199 464 136 144 276 768 887 700  68 882 678 118 631 364 318 784 803 170 724 346 180 611 105
 620 548 341 252 766 355 315  30 810 204 451 317 386 603 559 515 584 257 885 459 814 771  70 162 246 217 389 541 889 159
 675 686 546 732 320 853  59 800 226 461  48 289 293  66 287 195 696 285 171 623 664 657 127 650 454 510 595 879 627  41
 182 236 590 827 867 748 110 777 120  25 206 865 583  35 862  45 281 767  46 326 215 166 339 529 347 760 854 528 489 790
  71  79  17   5 610 740 833 612 599  75  97 693 875 177 300  77 779 234 655 143 467 212 703 876 793 829 828 898 189  49
  80 532 397 679  81 682 832 877  15 608 104  43 186 692 758 662 188 396  76 116 866 271  89 815 838 807 812 114  13 886
 390 826 145 173 150 841 802 864  12 167 589 100 698 178 739 494 663 233 121 181 504 253 856 789 806 588 321  11 791 230

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.68945e+07us (= 16894.5ms, 16.8945s)
Wall-clock time (full program): 1.69274e+07us (= 16927.4ms, 16.9274s)
Satisfaction error: 0
Number of search iterations: 7807
Number of local moves: 2137 (including on plateau: 1110)
Number of local minimum: 688 (including on plateau: 139)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 445 828 667 112 384 368 814 352 125 257 822 224 609 754 847 546 255 234 249 392 208 380 408 882  60 345 458 627 259 604
 137 621 339 704 124 663 770 169 180 849 113   7 853 420  31 574 421 751 679 497 638  42 718 188 379 897 132 411 383 825
 588 373 385 792 698 725 479 235 844 105 419 622 222 530 265 349 342 540 238 148 711 658 506  64 639  35 199 673 462 669
 221 795   5 457 840 476 768 369 175  22 362 186 258 867 435 616  40 355 873 879 202 724 387 681 717 161 561  11 741 331
 455  13 662  53 848 498 774 692 712  83 162 372 319 709 567 798 592 242   1 624  96 809 207  33 343 354 833 807 404 453
 413 854 410 182 184 659 241 401 590 120 118 286 275 312 700  95 600 205 801 729 485 446 796 838 891 720 215 245 374 330
 761 742 823  76  59 194 302 150 782 575  41 203 836 804 111 315 422 680 195 268 240 346 824 623 597 731 565 154 884 212
 791 274 334 377 868 304 106 643 452 168 332 633 313 629 464 280 469 348 529 773 159 869 147 562 519  85  84 723 564 716
 896  17 471 697 107  46 671 743 470 512  43 518 900 196 246  55 802  36 856 618 800 433 211 859 610 577 685  10 316 114
 210 829 397 364 772 898 520  51 647 749 727 830 266 477 690 109 308 225 424 117 495 730 270 357 386 781 568  19  69 230
 273 323   3 324 399 394 514 594 158 525 837 559 142  72 375 547 253 581 294 434 732 554 128 251 664 874 311 821 759 820
 133 771 521 763 398 706 395 486 545 570  48  27 219 473 620 430 703 417 489 284 571 746 676 396 131 216 705 388 227 461
 248 174 656  57 322 740 625 817  89 649 378 508 262 300 689 272 640 839 277 263 426 454 670 130  86 617 783 418 233 893
 305 726 439 314 321 460 279 665 789 813 101 301 423  78 129 827 572 428 463 370 179 256 630 816 579 177 634 365 523 553
 531 500 651 878  98 281 260  63 468 543 642 478 100  61 886 156 126 412 465 548 653 336 480 239 347 403 484 877 794 755
 691 889 491 544 595 760 358 296 153 197 136 329 666 707 170 287 209 247 406 646 831 569 699 442 363 785 141 436 190 282
 613  73 599 431 449 775 710  25 402 269 650 492  58  34 645 863 738 293 788 351  66 299 558 687 359 502 551  68 526 641
 603  14 121 283 503 493 450 758  70 541  94 393 160 325 769 593 851 539 845 459 612 361 654 517 371 172 628 356 899  81
 166 307 780 637 416 415 400 756 602 516 443 875 206 139 252 542 607 482  12  21 777  23 611 702 447 549 591 405 797  39
 338  15 871 888 778  32 764 721 157 285 688 103 895 865 451 289 584 644 152 327 267 819 501  56 134 123 536 511   6 715
 189 660 507 220 504 808 753 276 861 389 701 340 102 381 747 695 382 635 165 601  50 333 578   9 560  93 862 586 250 278
 745 229 309  62 739 192 181 151 496 596 648 733 353  26 366 524 145 843 414 674  74  97 786 391 805 887 719   4 894 432
 605 766 776 846 231 116 201 228 892 693 367 264 298 864  65 191 290 668 163 509 655 636 441 890 218 297  88 686 425 146
 852 472 615 734  79 337 115 881 474 832 335 765 858 360 135 475  45 291 787 217 407  87 185 598 490 494 127 652 528 288
 488 757 318 866 429 573 320 183 752 198 532 537 672 108 427 784 200 119 619 563 326  92 550 533 860 735  80 589 167 138
  18  44 261 744 608 566 271 344 178 505 850 527 812 341  52 467 803 876 834 835 883 722 223 310  82 614 204  67 444  30
 390 736  71 243  90 737 870 606 328 815 810 811 806 855 303 437 682  54 728 171 173 122  20 143 448 466  16 750 140 694
 535 661 678 350 244  75   2 515  38 155 842 552 857 708 714 534 583 684   8 456 885 144 226 522 826  99 696 214 213 499
 295  24 306  77 587  37 438 713 576 748 793 557 626 582 585 818 675 292 104 110 677 556 193 767  91 409 376 762 254 487
 580  28  49 440 841 187 164 632 510 236 481 483 149 538 779  47 176 555 657 631 237 872 232  29 513 317 683 880 790 799

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.80782e+07us (= 28078.2ms, 28.0782s)
Wall-clock time (full program): 2.81114e+07us (= 28111.4ms, 28.1114s)
Satisfaction error: 0
Number of search iterations: 14750
Number of local moves: 3353 (including on plateau: 1684)
Number of local minimum: 1380 (including on plateau: 213)
Number of resets: 8
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  13 660 276 605 803 700 757 462 183 351 625 788 110  28 263 846 735 820  38 262 892 252  10 759  25 822 163 794 149 324
 717 850 279 633 884 793 729 683 166 816 770 406  98  95 167   9 310 767 298 449 313 781  68   1 615 247 552 354 612  53
  66 814 849 861  74 853 797 785  59 695 540 791 593 603 303 855  44 714  51 749  37 752 244 647  43 268  31  16 120 261
 573 229 353  12 818 623  40 270 197 317  48 328 675 867 585 724 874 703 466  15 192 727 741  81 709 392 493 434 858 171
 403 255 430 744  93 233 784 230 135 740 242 665 447  94 697 813 728 762 397 153 139 766 658 291 305 743 621   8 705 234
   2 778 668 590 506  22 352 104 830 618 319  60 113 678 604 685 189 361 208 643  49 594 341 661 768  36 549 801 649 737
 755 733 181 826 111  41 875 765 201 198 824 119 256 560 655 636 808 446 127 859 126 327 570 528 676  61  30  35 509 677
 148 608 243 589 461 190  19 562 690 825 469 405 227 715 225 407 458 502 312 463  29 732  45 889 659 179 290 827 663 684
 584 775 162 578 634 501 210 123 694 374  92  57 103 877 753 780 718  71 155 746 485  75 629 819 571  89 809  20 533 498
 795  70 187 561 472 359 656 193 246 745 637 720 537 441 323 419 840 739 176 258  33 221 542   3 635 508 835 160 597 607
 343 173 350 566 545 574 622   7  87 404 651 807 689 811 567  65 887 161 322 669 576 248 480 451 836  64 309 157 232 862
 116 627 666 524 174 626 553 546 267 610 275 130 199 467 378 845 377 293 132 586 342 471 393 587 580 624 304 693 598 532
 670  62  18 595 632 504 516 619 245 375 496 512 481 639 385 582 568 455 479 495 539 602 529 109 863 437   4   5 551 548
 519 500 490  23 611 478 418 520 423 526  27 738 517 376 761 431 565 459 473 511 541 443 223 522 487 411 505 391 108 518
 559 544 336 410 583 839 363  32 810 425 704 426 344  79 389 137 563 596 357  34 412 646 817 445 422 588 285 435 521 414
 758 514 106 507 476  42 134 515 489 101 282 326 774 789 662 399 415 381 628 484 452 575 311 433 371 900 465 457 345 424
 708 854  84 453 710 307 667  78 557 805 754 477 792 386 125 456 121 497 535  50 383 491 654  14 235 114 474 202 650 882
 796 427 294 395 331 380 318 409 482 387 786 384 432 238 438 579 315 366 806 335 664 329 707 302 420 833 428 348 442 144
 783 838 439 413 278 396 365 698 169 829 373 454 356 239 483 893 292 379 337  63 486 370 725 164 226 719 673 644  76 355
 494 300 499 362 572 213 731 440 346 308 779 555 283 488 416 536 260 274 742 734 382 699 400 217 368 464 369 776 436  72
 475 642 609 280 118 747 131 871 680 398 367 332 523 269 306 251 254 347 534 178  11 870 638 289 640 674 657 581 266 577
 142 288 687  52 259 641 204 847 333 143 686 876 277 338  47 156 513 448 617 648 751  91 218 856 177 843 402 600 848 527
 325 240 679 606 272 284 334 360 837 860  21 773  17 273 881 321 340 297 713 206 898 231 896 265 812 800  82 394 358 140
 372 320 601 868 330 364 872 614 401 188 253 209 712  86 891  85 158 296 224 894 503 550 772 180 653 652 388 711  69 299
 771 184 763 200 203 888 100 873 124 556 883 191 241 295  26 165 228 831 468 129 756 287 264 844 249 543 828 823  96 706
 219 237 799 152 554 722 105 688 821 547 146 281 769 429 215 145 613 236 878 460 865 222 205 787 186 864  67 408 723 172
 150  83 852 748 842 257 832 168 721 151 185 196 510 138 154  90 531 631 591 726 841 730 417 702 645 122 616 390 349 147
 207  58 750  88 314 671 159 592 558 128 195 599 790 701 804 620 492 525 880  99 421   6 271 815 182 102 630 890 117 851
 802  54 301  80  73  97 736 175 869  39 866 696 886 682 115 444 212 112 672 857 716 211 692 538  24 339 777 470 450 530
 250 798 564 194 782 170 136 286 895  56 220 214 764 834 897 141 107  46 899 760 681 216  55 316 133  77 879 691 885 569

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 9.90596e+06us (= 9905.96ms, 9.90596s)
Wall-clock time (full program): 9.93515e+06us (= 9935.15ms, 9.93515s)
Satisfaction error: 0
Number of search iterations: 5273
Number of local moves: 1540 (including on plateau: 751)
Number of local minimum: 450 (including on plateau: 87)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 896 737 900  32 684 727 851 158 714 238  96 716 759  59 115 677 691  33  98 242 395 740 884 127 750 135  52 132 797  80
 133 284 899  82 868 181 874 215 687 680 113 734 829  60 157 686 831  50  89 872 248 120 871 502 876  65 434  73 888 114
 226 696 858  43 635 212 887  84 825 606 104 806 886 603 202 515 689 102 182 723 852 108 856 519 746  31  64 288  70  97
 151 756 862 512 763  39 860 679 589 864 177 780 894  87 140 139 738 136 155  36 765  66 652 100 772 601 857  77  94 174
 253 521 627 162 692 142 713 138 623 656 294 779  83 220 122 844 207  71 109 581 835 119 867 877 786 853 149 751 277 164
 280 833 496 189 697 891 741 514 597 644 112 775 814 617  99 147 795 233 194 193 678 224 671 468 613 211 216 169 218 186
 117 676 707 232 682 131 897 818 823 840 322 146 544 880 185 708 130 163 285 303 308 199 273 885 801 118 201 827 180 134
 176 685 170 200 748 205 560 898 892 841 145 266 784 757 159 787 225 227 275 141 789 247 296 404 893 607 217 391 309 221
 152 869 175 331 839 634 499 591 571 792 306 553 522 755 351 286 314 153 256 422 318 859 358 620 637 305 402 167 282 196
 300 700 431 144 855 289 506 622 762 821 267 380 612 527 254 782 259 330 269 392 776 388 353 624 357 265 302 338 274 336
 281 703 251 258 895 236 557 658 711 298 890 863 670 769 390 804 206 316 156 311 279 290 428 479 582 172 328 335  92 307
 444 283 799 370 651 484 367 854 192 451 321 432 704 650 219 530 239 319 398 287 297 383 293 767 563 372 313 337 366 830
 793 317 472 419 505 240 454 849 343 377 406 325 204 567 384 469 340 408 540 364 828 389 371 278 537 412 485 889 304 246
 445 510 483 861 662 471 332 411 439 528 263 413 333 409 478 347 320 369 262 426 334 709 346 452 630 490 433 543 415 401
 456 443 381 327 595 403 394 397 424 441 387 399 520 482 486 365 455 480 487 407 356 494 481 435 781 453 326 577 425 458
 363 475 310 534 450 359 461 562 418 459 421 573 474 400 586 374 416 473 376 209 657 462 566 493 386 449 447 584 423 355
 420 539 437 594 448 362 208 436 497 531 393 498 438 382 523 559 464 576 578 291 629 524 442  68 230 565 348 604 465 466
 476 541 430 429 360 640 628  28 470 503 598 551 414 245 533 477 379 500 373  45 410 605 649  95 276 596 654 446 546 618
 417 600 555 579 223 645 243 260 361 250 508 187 198 440 491 583 587 550 460 516 614 570 463  69 179 688 710 488 580 501
 509 234 536 535 378 609 191 517 137 542 667 608  37 427 495 126 575 592 564 106  54 616 668 323 255 556 705 611 673 669
 590 235  91 642 299 569 626 561 214 694 529 718 257 150 532 548 197 661 396 724   8 698 602 329 341 631 552 125 504 492
 572 103 513 659 173 545  20 178 160  88 636 507 324 301 588 345 124 690 615 798 633  63 736 777 213 518 717 663 610 646
 850 128  51 585  81 489 599 554  72 161 538  47 342 295 549  57 664 695 683 547 203 639 210 665 270 655 715 681 760 730
 770  85 638 731 101 774 261 252 105 171 747  26 148  49 745  79 648 808 820 511 721 764 593 168  75 574 653  41 785 672
 732  56 241 558   5   4 720 349 190  90 728  19   2 249 819 121 666 701 625 873  61 712 107 467 375 846 824 693 865 817
 735  44 385 733   6 807  12   7 244 352 739 111 749 339 743 272 766 725 883 568  35 816   1 753  23  25 742 619 621 660
  38 350 641 354  67 805  17 791 110 237 368 143 744 826 796 647  24 643 815 878  76 726 268 773  78 778  29 761   3 729
 834 165  18 783  86 812  14 229 405 183 758 632 154 315 699 195 675 837 843  34  21 706  62  74 271 722 802 457 848 881
 794 719 116 866  40  22  10 674 752  48 803 344  46 813 800 292 768 838 847 870 525  15  55 702  53 811  16  58   9 809
 312 228  42 771  27 788  13 231 188 129 879 184  30 842 875 754 123 836 882 845 810 264  93 222 166  11 822 790 832 526

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.38787e+06us (= 4387.87ms, 4.38787s)
Wall-clock time (full program): 4.42097e+06us (= 4420.97ms, 4.42097s)
Satisfaction error: 0
Number of search iterations: 1269
Number of local moves: 799 (including on plateau: 273)
Number of local minimum: 73 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 353 535 435 817 296 791 811 832  13 179 702  24 445  21 375 900   9 325 785 580 825   8 155 824 743  20 572  12 237 891
 147 525 720 514 472 879 601 821 157 187 342 774 889 265 128 183 815  82 256 628 894 140 114 178 781 131  43 742 727 380
 386  68 201 261 858 683 544 417 133   5 782 721 807 639 703 334  10 462 654 862 263 451 778 414 559 243   3 369 701 204
 799 822 310  22  64 185  53 285 899 295 159 562 893 609 407 884 725  27 122 118  70 698 314 104 596 619 563 892 648 771
 660 449 867 225 245 156 605 788 233 712  74 759 643 767 316 835 708  18 352  40 768 124 108  67 390 760 336 859 475 176
 280   2   7 773 515 300 814 615 287 355 172 704 739 318 793 641 748 247 661 259 689 344  16 839 146 795  96 740 232 388
 533 556  93 169 744 741 754 586  72 551 391 242 801 595 360 700 751 177 142 145 149 144 897  61 623 536 313 236 794 659
 678 384 406 262 581 552 240  62 649 100 733 696 682  30 603 655 576 647 728 848 532 634 195 248 492   6 681 125 116 374
 304 620 168 687  90 113 584 710 869 345 268 675 637 737 697 827   4  38 164 188 555  11 453 855  26 685  81 750 564 810
 443 238 829 777 126 550 489  98  33 692 547 674  15 627 545 208 359 546 226 372 291 170 876 872 631 302 888 107 863 121
 293 670 276  29 679 591 633 476  91 611 578 735 481 653 738 566 613 676  97 294 182 203 298 493 561 587  83 497 617 214
 266 393 356 644 330 368 465 370 528 616 112 856 148 543 668 257 736 505 516 849 749 803 590 422 105 412 666  55  99  88
 138 474 534 120 677 524 106 508 267 583 592 437  54 602 520 691 299 523 886 277 411 607 585 527 512 326 249 134 695 657
 569 526 311  42 688 199 289 517 614 780 230 571 426 669 382 432 459 403 491 193 694 167 538 625 558 252 431 531 434 494
 212 496 347 786 483 410 537 570 579 333 460 482 338 335 401 518  41 413 589 392 705 560 254 541 606 329 385 597 395 421
 506 549 464 495 530 441 664 480 864 282 485 194 875 761 461  17 502 478 163 341 402 573 288 420 418 324 219 427 463 429
 896 425   1 446 717 397 378 454 501 881 129 346 521 110 239 383 755 424 621 635 444 211 608 399 350 158 604 373 510 599
 499 152 275 746 269 577  94 865 337 800 440 656 358 306 871 567  92 626 286 500 331 468 101 301 711 292 205 873 479 438
 457 765 663 251  60  50 789 323 264 317 283 722 498 568 458 471 376 610 753 812 416 174 456 305 136 640 699 405 364 430
 250 715 473  52 419 258 184 253 667 809  36 588 371 805 504 270 762 321 102 442 396 119 861 734  59 870 365 115 837 878
 327 315 557 229 389 303 783 662 724 191 180 162 784 522 354 363 361 709 231 764 439 680  76 539  77 636 652 377 714 415
 486 484 802 796 209 260 658 196 844 274 487 281  85 161 215 387 151 278 618 139  78 488 624 503 775 826 770 540 328 772
 798 529 593 297 752 192 307 841 642 216 234 319 455 816 511 366 322 638 787 197 490  56  34 852 594 244 513 290 207 423
 684 394  69 398 466 883 747 241 731 213 408 171 348  75 189 246 221 836 843 846 519 842 574 632 190 228 868  35 111 507
 198 173 745 845 103 448 217 409 175 693 847 279 127 351 154 206 723 673 509 362 312 650 819 224 467 769 651 400 340 646
 730 690 707 763 320 776 272  32 686 713 834  45  44 308 117 469 797 284 309 629  65 853 343 141 840 877  84 367 357  63
 600 109 831 548  19  51 123 186  14 792 851 218 166 271 452 332 671 349 828 339 820 890 719 447 210 450 542 860 273 554
 135 756 885  57 806 729  23 130 726  87 428 150 612 181 838 706 404 766  89 850 880 857 227 160 379 813 381  25 200 235
 830 622 553 598 790 672  86 757 779  95 898  39 202  47  46  73  48 630 132 565  66 716 732 143 758 220 718 895 582 223
  58  79  37 866 818 436 665  31 137 808 833 433  71 823 470  28 477 804 575  49  80 874 882 645 222 165 854 887 153 255

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.33513e+07us (= 13351.3ms, 13.3513s)
Wall-clock time (full program): 1.3384e+07us (= 13384ms, 13.384s)
Satisfaction error: 0
Number of search iterations: 6741
Number of local moves: 2093 (including on plateau: 994)
Number of local minimum: 612 (including on plateau: 130)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  99 265  64 502   9 595 599 619 885 162 649  56 870 873 878  30 105 864 824 801  89 216 774  63 100 807 679 154  41 843
  29 900 761 226 129 842 768 220  61  86 186 164 159 671 794  47  35 861 713  69 876  72  65 703 854 829 811 561 146 877
 446 122  80 500  77 606 841 899 895  62 729 201 859 524 641 160 141 871 799 808  16 211 653  76 221 672 182 639  68 516
 135 882 274 834 101 242 875 104 840  73 815  79 892 806 622 128  85  84 711 755 139 144 426 150 151 831 433 817 219 868
 236 598  78 802 898 495 235 881  57 197 448 511 736 770 856  20  60 107 847 832 658 705 102 207 190 441 363 280 116 789
 418  90 245 775 317 883 803 857 145 175 650 442 149 697 845 205 196 192 115 571 260 559 310 202 351 860 777 704  38 684
 541 108  26 669 745 668 249 341 286 161 783 800 210 891 677 252 256 386 750 771 212 320 813 670  75 723 206 266 345 315
 575 232 238 547 823 240 241 717 283 172 748 821 195 589 782 213 330 292 179 893 174 133 886  74 217 779 120 865 267 890
 590  88 416 587 657 643 307 148 897 269 566 222 349 820 609 346 246  98 117 405 218 378 648 215 357 692 838 826 136 827
 397 393 157 718 531 698 380 355 359 323 791 301 229 574 373 701 312 233 377 339 805 421 682 203 404 690 290 848 289 342
 153 239 171 818 707 810 313 176 411 319 852 131 475 884 318 360 244 392 329 712 193 400 762 276 763 434 370 839 365 299
 537 125 408 367 390 337 693 311 354 620 618 477 888 381 584 255 450 529 459 257 512 420 308 371 414 656 384 451 452 507
 786 505 194 402 851 796 273 173 180 248 797 204 743 443 536 343 268 303 321 567 110 491 844 368 503 591 586 306 395 388
 483 427 271 730 334 258 474 570 326 521 554 410 463 455 382 417 556 362 432 409 545 430 565 471 482 592 456 250 487 403
 546 356 375 528 508 488 314 304 185 513 447 472 517 327 466 247 498 509 458 272 254 460 632 465 630 540 425 581 846 352
 344 647 542 387 399 275 449 468 325 462 481 572 479 501 440 406 437 454 350 520 361 431 457 338 294 364 582 862 522 366
 374 376 253 398 297 539 610 476 419 394 552 347 499 489 383 412 614 585 578 651 332 504   4 596 492 486 438 535 429 453
 515 580 675 665 666 262 379 527 464 407  21 667 445 302 234 480 305 617 548 469 396 564 494  55 557 439 555 353 473 401
 112 769 534   3 510 225 519  50 525 605  93 124 532 436 538 496 685 461 636 576 560 490  96 691 681 340 663 588 415 562
 209 624 616 113 523 526 444 635 485 533 348 103 550 493 553 573 741 530 640 200 626 518  46 662  54 227 652  11 686 594
 664 543 484 261 223 612 629 470 680 300 270 699 608 126 611 660 389 597 627 435  12 514 264 734 551 423   2   8 613 506
 760 623 716 577 208  39 695 659 625 602 316 674 642 109 142 558 563 715 568 583 633  32 287 727 628  59  71  83 478 143
 134  24 615 295 600 569 676  44 720 644 230 335 744 167 291 634 467 607 544 333 731 637 687  92 655 140 828 422 645   5
 724 646 694  91 604 137 165 784  36 696   1 739 114 118 228 728 740 603 709 119 735 661 579 336 814 282 284 178 772 198
 725 719 673 237 152  18 127 678 756 746 328 758   7 424 106 776 792 809  13 638 721 752  48 767  49  82 621 169 790  34
 243 785 601 259 231 199 428 156 689 889 296 733 593  15 184 764 753 837  17  23 726 708 277 759 819  33 189 324 804 181
 369 688 874 631 549 322 754 757 722 887  81 749  95  19 187 816 795  25  27  58 251 706 147 732 812 170  42 293 863  94
 738 714 765 278 224 288  67 825  22 747 331 285 372 391  52 773 788 263  66  10 654  70 166 766 872 158 793 830 849 358
 780 168 835 177 867 858  53 123 700 833 121 737  87   6 163 836 866 298  51 130 822 781 751 850 497  43  97 191 111 683
 853 279 880 138 385  45 155 188 183 869 413 702  14 214  40 879 798  31 710 309 894 787 742 896  28 132 778 281 855  37

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.34127e+06us (= 4341.27ms, 4.34127s)
Wall-clock time (full program): 4.37455e+06us (= 4374.55ms, 4.37455s)
Satisfaction error: 0
Number of search iterations: 1219
Number of local moves: 605 (including on plateau: 226)
Number of local minimum: 71 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 498 161 843  67  35  94 871 102 655 491 724 567 122 840 816  66 398 105 457 681  53 821 890 589 734 129 664  77 169 796
 434 128 703 869 846  47 393 886 223  14 396 829 449 407 866  56 878  15 151 542 145 267 583 134 230 742 636 452 525 669
 768 424 551 251  70 887 793 660 645  83  73 826  30 460 729 520 894  59  44 639 101 746 370 116 270 422 531 522 875 156
 834 184 688 899  87 103 791 419 630 280  96 158 110 148 363 687 897 864  86 401 632 874 175 191 112 608 885 167 250 896
 838 221 698  57 880 517 713 693 482 399 194 787 229  45 773 486 521 269  90 733 174 794  81 159 222 118 739 754 139 710
 206 261 858 133 186 507 625 844 845  64 294 210 100 233 673 313 891 232 198 888 271 893  49 152 856 362 635 648 356 732
 218 609 883  95 160 372 853 614 637 131  76 277 861 895 243 368 767 115 142 873 310 757 217 867 193 445 123 841 249 324
 709 247  55 389 376  13 862 868 612 106 881 547 312 397  68 477 560 237 467 744 599 150 837 501 273 306 784 720 173 245
 382 215 857 146 333 279 699 546 512 265 331 211 330 459 136 762 798 347 425 706  75 701 143 295 494 264 761 879 423 741
 438 771 766 309 320 357 188 833 481 297 647 165 258 616 275 807 311 197 377 723 492 618 329 108 338 504 740 470 196 584
 790  18 224 707 283 400 668 831 770 256 892 506 227 337 828 307 293 298 314 600 683 317 234 189 373   8 473 817 451 421
 359 290 439 825 301 394 775 360 468 208 162 386 495 228 182 745 130 263 877 384 555 349 516 876 432 728 611 577 348 252
 342 758 553 371 431 503 677 289 545 621 361 814 417 383 318 731 254 865  10 379 346 366 380 429 321 272 387 502 450 440
 610 607 183 343 305 354   1 824 497 461 219 268 374 300 765 797 689 458 414 626 549 339 418 737 325 510 435 604 469  34
 144 462 281 404 870 296 633 409 580 195 358 181 385 390 278 472 782 276 641 352 859 364 303 444 433 405 802 496 573 447
 478 381 319 511 623 442 345 402 420 465 562 820 412 332 596 558 344 466 378 408 426 454 485 369 274 350 571 353 535 436
 471 513 236 642 736 527 308 239 437 509 499 322 559 149 860 225 336 602 663 538 505 493   9 490 514  48 541 172 884 488
 515 518 190 403 413 355 291 154 326 564 533 316 328 667 566 180 617 622 676 446 882 365 593 898 534 519 266  84 410 284
 523 544 427 127 474 561 216 367 285 416 557 242 613 334  40 476 153 554 479 205 848 590 411 582 697 453 464 700 524 653
 595 463 657 776 539 487 392 448 323 603  29 483 718 226 640  62 286 299 587 872  82 508 711 120 489 157  71 721 756 415
 615 529 594 674 563 684 480  28 715 406 575 455 235 606 661 651  25 335 104 341   7 627 543 540 714 675 441 240 428  24
  92 634 178 682 658 574 500 117  21 662 565 815 556 579 705 598 842 528 822  91  19 155 586 666 716 147  79 137 135 656
 805 430 202 792 650 619 187  16  27 803 685  63 763 808 107 168 550 670 537 395 809  80  23 686 818 351 201 327 702 241
 722 569 166 548 743 601  39  85 282 735 777 578 835 124 727 592 164 704 570  60 302 591 207  12 526 795 659  11 789   2
  22 654 220 830 649  89  51 388 854 695 643 730 764 238 111 248 185 678 680  50 209 690 652 750 113 813 163 119 536 691
 126 624 204 800 170 597  38 823   6 628 696 638 804 692 213 199 244 759 712 231 576  88 753 839 605 171 214 179 629 257
 292 717  58  20 852 631 572 581 121 812 259 304 672 827  36 836  43 749 484  31 585 315 778 646 788 810  54  17 620   5
   4 780 532 212  42 751 177 375 783 832  98 192  33 769 109  97 114 725 855 176 811  93 786  99 863 755 125 900 708 719
  41 132 747 568  69 726  37 253 287 665 781  26 772 738 779 246  74 694 819 138 760  78 774 588 255 847 200 889 141 391
 644 671 203  65 851 748 340  61  46 849 552 799 752 288  52 785 475 530 456 262 850  32 679 443   3 801 260 140  72 806

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 7.12716e+06us (= 7127.16ms, 7.12716s)
Wall-clock time (full program): 7.16022e+06us (= 7160.22ms, 7.16022s)
Satisfaction error: 0
Number of search iterations: 2507
Number of local moves: 858 (including on plateau: 225)
Number of local minimum: 189 (including on plateau: 28)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 251 518 346 775 643 559 166 335 392  14 850 724 205 604  64 882 452 867 476 755 793 113 388 255 203  30 614 329 885  27
 735 453 713 102 535 741 708 410 744 833 883  79 167  93 101 820 119  68  96 732 177 704 483 837 838  19 832 176  16 301
  18 646 445 759 608 222 108   6 110 464 352  58 550 792 721 201 767 468 766 182 658 815 339 384 798 835  26 262 438 717
 282 404 396 866 631 419 543 141 794 826 630  15 355 361 435 788 300  32 774 786 377 816 191 416 563 125 362  63 800  24
 865 877 337 114 725 123 784 111 696 743 828 609  90  56  69 183 822 751 691 256 740  61 847 769  29  40 682 547  45  25
 611 694 356  82 257 112  43 673 244 830 653  76 620 745 779  85 782 455 736 765  83 138 171 753 591 290 770 221 763 137
 676 709 199 603 208 568 225  31 855 742 241 700  77 729 701 617 487 684 239 374 394 441 318  78 665 147 697 122 781 207
 486 728 292 502 309  21 322 321 726 407 140 512   4 447 702 900 117 718 330 637 645  35 841 799 654 332 602 331 618  37
 678 333 206 647 155 640 391 232 873 698 314  38  47 699 657 878 179 285 393  28 612 715 188 695 606 231 672 258 615 552
 635 667  53 516 320 644 629 284 819   9 367 628 687 527 506 359 641 586 593 470  12 126 467 533 651  39 555 169 387 636
 642 596 342 261 656 106 875 287 627 703 385 619 693  59 528 610 150 508 431  62 578 548  41 213 180 272 580 662 633 668
 557 868 731  91 795 325 432 175 456 892 204   2 600 482 514 706 575 507 159 369 546 585  42 762 539 517 227 187 599  71
 534 196 288 414 370 406 576 776 135 479  55 259 305 626 488 511 230 712 525 592 551 463 584 202 605 809 567 624 133 500
 485 558 132 494  60 536 571 118 149 549 849 671 566 492 218 448 529 437 504 570 560 200 711 422 458 412 537 497 328 454
 541 522 421 787 401 158 659 674 542 279 597 466 105 341   1 663 515  57  95 398 364 490 496 413 425 473 544 897 334 857
 345 459 748 669 622 386 423 363 796 124 489 474 439 616 433 343 402 418 400 293 444 276 376 461 426 417 157 660 484 572
 365 237 379 278 509 357 411 565 519 295 399 595 217 589 598 478 746 317 338 848 310 252 190 632 587 884 389 354 495 382
 319 350 524 553 652 323 714 523 380 789 526 436 554  11 408 429 681 574 861 316 383 395  81 142 371  97 791 307 424 601
 240   7 501 521 358 839 540 716 280 324 772 773 194 344 229 465 778 498  10 405 680 790 499 613 277 348 174 351 303 686
 192  67 462   8 127 872 733 165 223 313 451 720 862 403 785 347 661 270 634 827 520 253 824 260 440 308 869 353 561   5
 302 249 503 368 734 269  88 650 375 777 761 242 607  36 752 430 723 267 304 842 156 312 299 210 530 577 326 688 274 864
 130  94 286  50 296 888  17 727 532 311 131 477 818 283 870 164 747 327 707 271 315 621 675 263 505 852 233 856 805 264
 103 840 803 625 289 372 420 808 185 209 373 238 281 336 689 153 173 739 889 144 843 457 493  66 220 390 449 863 170 895
 215 236 469 216 738 768 154 690 178 254 579 275 247 128  70 831 594 306 298 184 817 860 683 655 510 871 471 623 235 360
 825 228 757 758 802 666 266 294 823 193  87 136 638 243 109 134 172 297 513 491 224 450 427 834 896 705 148 730 197 472
 107 146 460 829 250 581 211 886 685  44 129 771 692 836 115 268   3 754 481 844 810 737  23 846 168 378  65 750 212 434
 880  20 428 858 564 899 814 812 160  98  52 879 821 381  89 590 163 152 214 443 186 783 583 291  73 854 246  51 409 722
 139 195 234 664 161 366 442 670  75 853 189 710 639 898 894  86 145 219 162 340 649 876 887 582  84 531 100 890 273 562
 801 811 845  92 475 151 446 181 120 415 480 764 756 813 116  74 719 893 248 245  54  99 780  80 226 881  33 573 538 806
 556 807 859  13 265 198 804 891  22  48 749 569 679 545 874  72 143 349 648  46  34 104 588  49 397 851 797 121 760 677

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.35533e+07us (= 13553.3ms, 13.5533s)
Wall-clock time (full program): 1.35864e+07us (= 13586.4ms, 13.5864s)
Satisfaction error: 0
Number of search iterations: 5669
Number of local moves: 1970 (including on plateau: 1058)
Number of local minimum: 487 (including on plateau: 127)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 771 886   1 865 816 866 713 810 852  52 369 662 850 516 191  48 298  53 326  86 705 574  87 752 124  36 362 125 710   9
 460 899 549 829 166  84 749 462 137 215 870 890 809 765 163  89 148 128 807 517  91 812 120 140  65 577 117 175 893 789
 830 575 649 855 189 720 588 842 808 216 185 900  45 815 223  75 196 151 514 118  90 648 108 159 554  98 507 426 753 678
 425 762 596 538 872  29 408 454 823 164  62 731 393 512 274  49 150  31 293 715 681 764 134 431 240 859 875 711 225 314
 783 730 888 200 432 265 894 754 450  94 331 700 130 844 718 156 168 239 275 531 158 595  85 500 370 769 357 781 211 107
 688 484 630 767 264 845 256 727 236 111  74 758 795 873 170 247 260 404 451 152 882 519 696 327 218 316 548 250  72 495
 442 490 766 637  41 121  40 188 219 153 843 840 254 520 529 176 627 828 133 896 232 858 248 446 555 714 569  57 862 231
 353 174 685 471 501 193 138 563 601  56  82 884 272 826 856 198 267 615 698 414 412 755 619 217  81 139 723 206 691 825
 321 581 291 792 340 309 262 837 817  35 770 300 673 887 204 552 155 339 233 721 671 452 149 288 253 210 540 418 252 863
 329 868 892 650 259 283 136 179 157 889 820 172 419 307 221 271  67 295  64 628 834 709 413 441 363 833 819 242 358 597
 195 537 897 498 268 294 251 553 786 394 386 726 455 847 385 400 367 347 433 708 317 629 438 306 197 319 869 182 351 180
 387 407 336 701 879 883 346 664  63 534 190 315 524 461 361 161 330 402 669 478 424 695 411 401 423 487 399 429 325 430
 230 831 305 543 354 371 417 201 324 375 493 474 719 290 203 292 257 469 848 654 313 614 360 704 477 304 794 249 717 333
 415 167 470 573 341 209 642 449 591 322 551 378 377 686 338 568 380 895 405 605 365 867 368 388 397 311 420 266 439 332
 802 238 496 372 436 421 570 494 818 860 464 635 508  79 123 356 437 459 593 479 381 282 606  18 546 511 503 199 492 337
 849 391 389 572 202 583 447 392 284 578 576 457 499 661 303 308 440 547 334 611 467 497 521 409  76 536 458 320 434 374
 366 486 647 171 328 587 480 556 263 604 349 624  30 473 173 510 775 395 422 350 390 533 289 269 541 448 602 797 582 475
 550  77 345 181 229 557 565 465 246 513 463 483   3  25 571 603 841 777 352 610 756 652 545 559  83 403 277 428 558 798
 115 154  16 286 659 472 846 488 456  97 716 616 525 560 427 509 594 396  71 220 542 379 476 579 674 638 132 585 656 631
 612 234  68 342 646 416 607 527  61 625 567 235 444 639 518 712 589 505 644 532 621  47 613 599 376 586 147 186  95 722
  51 744 184  60 633 675 689  28 530 800 632 526 703  69 620 640 506 261 580 680 160 299 861 584 544  44 212 608 504  88
  13 302 466 344 663 643 776 561 651 634  22 103 679 127 665 732 105 287 515 318 658 192 310 707 539 592 222 725 667 297
 453 481  27 243 693 690 891 273 382 668 748  96 780 106 359 617 241 598  26 881 208  92 281 373 838 733 213 803 697  24
 278 491 383 296 684 655 835 255 323 660 653  46  66 702 676 683 623 522 821 141 641  19 677   4 854  73 187 398 129 740
 618  38 279  80 600  23 435 787 109 747 666 112  37 104 657 626 804 734 763 832 801  34 566 739  59 760   8 757  12 728
 194 562 590 205 245 622 280 759 878 564 738 110 885 207 857 796 839 672 146 224  20 126 301 135 699   7 237 694 162 761
 645  32 535 355 335  54 119  15 364 814  93 485  39  99 743 791 746 805 784  17 113 244 822 670 836 468 227 772 682 811
 489 348   2 100 636 851  55  14 871 736 214 114 729 143 737 724 778 692 183  78 799  42 741 687 874 751 502 406 169  50
 706 101 790 165  11   6  70 102 410 827 276 122 131 144 768 853 745 285 523 142 750 528 806 898 779 258 876 443 774 226
 145 445 343 824 793 788  10 116   5 178 312  21 742 228 482 773 782 384 609 177  33  58 864 785 880 735 813 877  43 270

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 7.11633e+06us (= 7116.33ms, 7.11633s)
Wall-clock time (full program): 7.1493e+06us (= 7149.3ms, 7.1493s)
Satisfaction error: 0
Number of search iterations: 2464
Number of local moves: 1045 (including on plateau: 419)
Number of local minimum: 186 (including on plateau: 55)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 488 854  63 453  32  58 478 740 573 725 146 413 843 808 836 648 252 124 669 830 210 820  21 197 438 270  11 841 580  94
 487 543 835 177 546 825 226 469 785 683 643 321 304 473 784 597 254 832 834 185  30 805  41 296 869  36 168  82 183 202
 308 220 109 842 129 192 571 141 882 685 113 112 379 110 418 895 822 239 629 481 789 828  96 174 262 637 747 781 879  45
 697 813 306  42 162 585 565  54 807 851 502  34  77 733 787 886  99 149 212 716 792  85 167 852 460  51 516 404 850 261
 374 788 797 622 769 810 863 127 363 698 840 120 423 108 644  47 240 689  97 178  61 451  66 748 373 204  71 656 455 833
 691 148 849 603 137 482 104 410 757 655 519 214 642 140  19 555 194 563 293 826 721 726 119 703 163 572 175 715  37 783
 860  59 156 762  31 582 352 780 441 244 324 723 524 682 105 666 803  22 217 447 705 579 329  55 103  95 779 678 758 654
 117 257 639 631 688 738 189  46  65  44 819 739 883 679 184  50 569 303 775 557 706 613 875 692 209  43 106 627 169 503
   2 662 729 799 430 604  64 187 309 218 456 673  33  15 873   8  76 680 635 583 522 247 527 768 459 672 358 612 610 704
 224 818 395 763 443  35 158 287 350 179 576 755 711 615 318 707 190 900 205  86 766 630 131 476 284 295 827 434 525 432
   4 258 753 471 547   5 593 638 584 724  28 588 802  24 274 360 589 776 518 899 658 606 558 234 327   9  23 578 249 838
 844 419 538 718 165 298 495 341 553 371 416 415  29  13 268 764 531 621 552 592 508 340 253 361 325 771 356 401 497 760
 540 674 299 491 652 893 539 868 107 560  20 454 114 264 278 542 837 139 236 609  78 812 193 417 620 773 180 427 671 228
 536 596 675 494 243 323 690 206 464 800 534 670 425 279 255 492 433 231 795 440  12 509 461 320 650   3 344 465 734 436
 541 326 485 467 366 484 347 458  39 709 444 406 647 463 829  68 749 486 564 385 798 134 717 480  60 313 357 624 362 407
 348 397 232 533 200 887 173 256 375 474 537 403 439 756 151 897 483   7 408 545 791 445 625 297 428 510 663 431 806  18
 489 551 437 479 770 442 412  25 381 265 847 710 388 364 343 337 888 470 500 590  91 145 196 521 506 848 617 338 233 332
 496 157 452 291 751 222 378 681 386 346 111 238 517 693 449 468 138 618 435 330 472 392 880 377 623 312 382 599 498 823
 251 367 645 512 182 568 429 530  89 743 664 846  80 520 676 714 475 282  27 501 554 215 736 411 466 490 556  49 702 235
 499 532 376  53 744  75 782 354 152 577 605  72 566 667 874 153 272  98 611 387 796 626 316 694 548 821 735 135 150 245
 147 824 405 396 426 872 601 241 333 186 384 334 759 514 653 118 659 632 801 336 636 701 369 365 515 281 586 100 331  10
  17 285 614 774 665 260 867 380 891 292 559 288 219   6 353 450 319 305 121  93 143 383 877 712 230 815 885 273 687 752
 896 355 286 159 317 294 570 477 686 345 101 125 890 602 359 301 102 414 777 339 237 866 737 311 746 562 394 300 259 708
 250 390 166  62 322 731 742 831  84 398 504 201 535 641 713  92 400 276 649 266 213 342 811 619 608 424 861 409 462 513
 684 778 144 122 853 133 246 857 881 328 511 898 160 283 208  88 700 391 172 271 457 161 865  70 816 894 290 754 128 372
 567 170 229  56 203 544 399 839 263  83 845 154 884 696 421 227 765 889 728 575 422 116 876  81 750 574 368 199 523  69
 126  48 307 793 280 720 598 814 505  73 660 349 164 607 275 878 616 858  16 171 587  87 855 646 719 526 277 225  74 661
 634 633 594  67 786 310 242 581 302 402 155 732 549 864  38 794 198 528 695 351  57 211 207 181 448 591 871 640 132 722
 730 370 493  79 859 529 790 269 892 727 651 767 136  26 389 446  90 745 221 289 142  40 191 595 315 314 677 188 856 699
 668 223 507 804 817  14  52 628 216 130   1 761 393 870 741 267 772 248 123 657 561 600 420 862 195 809 335 550 115 176

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.59326e+07us (= 15932.6ms, 15.9326s)
Wall-clock time (full program): 1.59656e+07us (= 15965.6ms, 15.9656s)
Satisfaction error: 0
Number of search iterations: 6832
Number of local moves: 1836 (including on plateau: 853)
Number of local minimum: 562 (including on plateau: 111)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 539 292 127 887 132 807 137 867 778 246  45 498 432 732 239 727 856 839 855 782  13  28 316 829 824  31 568   1  21  67
 774 151 201 275 101 835 317 513 823 188 743 868 728 221 800 838 673 349 409  22 521  89 242  96 301 348 882 148 801 258
 370  80 876 616  87 893 540 318 494  66 677 511 428 213  52 755 597 775 888  57 849 663  93 330 232 210 776 538  76 455
 705 797 709  25  48 207  32 235 193 264 717 656  12 293 803 769 761 198  64 679 557  44 332 799 610 880 169 375 831 751
 102 763 192 514 483  26 200 290 125 112 449 804 340 196 810 780 792  65 707 364 259 772 173 644 869 329 690 489 852 324
 830 615 120 813 218 110 692  34 588 549 117  75 678 768 320 633 531 153 777 109 695 130 643 670 899 146 646 115 637 204
 665 710 632 105  46 321 636 682 436 577 639 784 697 669 750 779  68  39 696  14 674 326 214 123 685 226 181 336 404 401
 609  88 233 564 562 689 711   9 172 762 308 534  84  59 735 766 702 587 666  61 641 667  83 826 701 191 576  19 284 626
 270 858 812  97 671 676 507  20 197  49 154 721 781  33 821 261 847 860 635 734 122 147 620 544 504 175  35 500 746 118
 445 450 203 236 163 517 614 600 453 704 628 190  54 652  18 535 757 523 334 834 158 619 537 752 552 634 642 167 529  15
   8 664 742 502 119 815 410 363 749 269 355 583 861 556  51 683 149 312  23 451  10 569 506 881 581 771 454 131 865  82
  11 871 185 567  36 668 530   3 625  50 622 111 648 442 864 631 503 896 505 187 659 382 533 675 126 419 802 174 248 542
 730 524 457 601 844 547 155 605  98 337 211 688  43 421 594 327 347  37 598 725 452 488 684 566 426  95 520 361 431 603
 611 464 586 657 510  99 459 480 441 472 590 430  92 463 422 255 439 388 311 512 739 585 565 518 383  47 602 580 613 202
 837 437 106 398 773 390 376 406 508 458 240 288 492 650 716 273 578 606 389 140 496 485 478 346 558  85 484 415 528 579
 854 548 414 393 354 397 491 753 286 215 555 527 499 323 170 515 811 466 543   2 465 469 438 372 263 328 424 561 237 842
 476 416 278 448 460 731 350 862 591 651 405 402 462 371 279  73 380 319 403 623 384 408 554 385 395 694 592 297 386 440
 114 661 806 250 341 343 392 344 486 714 345 875 516   7 244 859 413 482 729 306 573 381 394 362 272 607 256 277 338 828
 365 294 183 342 840 374 339 427 712 612 866 315 307 359 479  78 225 621 571 809 467 525 722 368 295 574 351 310 314 471
 575 356 366 325 107 756 456 150 595 841 331  77 740 898 629 257 216 360  60 168  74 254 790 333 268 726 788 791 706 522
 890 443 223 680 251 708 287 396 133 497 584 229 309 182 252 283 435 176 551 845 733 407 883 357 872 267 417 770 206 249
 234 434 281 653 377 222 553 228 378 658 608 313 379 128 276 638 241 162 429 820 850 794 833 322 285 816 302 447 367 487
 335  38 687 470 891 253 532 662 550  91 805 444 900 825 143 423   4 481 141 672 157 758 655 205 194 737  94 724 373 271
  42 282 501 446 736 164 884 686 563 630  69  41 247 819 545  55 212 243 541 593 300 104 836 624 546 857 433 786  90 640
 713 352 145 159 369 474 785 177 681 817 156 647 718 703 808 231 227 129 461 238  27 879 166 245 645 139 745 387 693 599
 303 189 878  72 892 305 144 822 699 715 700 298 765 262   5 186 719 877 411 560 136 853  70  79 103 412  53 895 759 353
  17  29 793 495 475 161 477 754 160 572 116 789 649 889  24 280 798 843  86 795 886 291 230 425 289 698 274 741 121 358
 195 171 897 199 885 654 848 767 519  81 559 179 178 738 596 299  63 723  62 296 691 660  30 399 208 783 220 873 124 618
 100 818 744 894 874 260 152 589 217 748 617 582 418 627 224 142   6 219 180 851 391 604 135  40 420 526 468 814 108 747
 796 720 138 832 870 113 509 473 265 570 304  56  58  16 846 184 165 787 490 266 536 134 760 400 209 764  71 493 827 863

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.05241e+07us (= 10524.1ms, 10.5241s)
Wall-clock time (full program): 1.05572e+07us (= 10557.2ms, 10.5572s)
Satisfaction error: 0
Number of search iterations: 4951
Number of local moves: 1637 (including on plateau: 730)
Number of local minimum: 427 (including on plateau: 92)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 151 265 881  61  22  49 224 863 899 777 204 135 879 893 101 734  10 884 213  80 470 793 819  63 336 882 854  79 890   4
  37 509 848  44 161 830 869  28 798 870 209 126 823 804 289 441 141 862  77  78 327 841 536 168 227 834 774  81 878   5
 205   9 140 153 228 840 810  20 451 806 212 198 815 855 347  58 842 707 147 146 174 847 794 440 836 824 785  16 808   2
 310 245 783   1  39 838 733  57   8 843 187  19 723 864  64 683 853 169 181 114 541 751 839 160 796 868  31 371 760 684
 250 465 767  62 404 811 749 131 647 667  98 127 700 753  99 693  21 284 149 118 203 856 731 259 717  46 822 414 709 763
  71 238 740 270 164  50 789 786 778 771 148  24 725 809  29 122  26 643  91 739 432 750 801  52  11 720 716 422 851 747
  84  76 661  86  12 758   6 650 656  35 299 780 671 742 272  38 697 803 143 120 163 585 759 663 665 757 703 178 743 710
  92  83 601 129  59 668 745 105 468 352 712 658 721 574 172  23 590 738  55 689 395 681 657 271 639 652 636 261 492 597
  27 157 708 199  72 646 837 283   7 770 627 706 696 591 102 736 631  36 115 480 363 670 602 516 784 587 685 134  97 651
 125  32 713 175 330 649 467 719 655  88 640 715 580 629 106 136 464 538 522 566  51 605 610 137 592 595 634 292 586 564
 568 188 677 433 385 638 474 573 628 530 387  18 632 493 375 687 618  60 588 503 107 575 596  34 600 247 483 208 607 603
 506 463 690 599 251 626 562 405 409 386  41 542 551 505 691 520  15 553 641 484 515 549 190 380 535   3 280 620 502 501
 368 452 500 507 318 594 593 621 383 512 521 673 543 342 482  87 453 344 384 561  65 450 635 539 369 571 435 150 576 487
 343 560 373 372 323 485 517 237 466 460 534 556 446 545 311 511 552 550 510 444 393 166 138 529 582 612 477 389 608 526
 496 540 407 211 518 513 431 403 230 609 478 570 295 399 417 499 581 358 378 461 447 524 420 613 331 494 490 423 491 488
 349 472 430 462 514 356 427 563 297 604 623 416 426 411 439 498 454 324 437 303 776 398 366 519 418 479 442 443 445 424
 473 523 525 533 565 357 351 554 897 410 376 471 390 232 346 266 572 350 726 328 791 362 367 475 428 242 508 268 334 495
 321 314 345 253 664 578 273 436 394 340 243 302 429 396 400 532 449 876 419 370 832 486 527 365 476 353 364 802 555 421
 438 755 469 735 528 258 456 341 584 301 262 434 281 279 680 397 455 559 659 392 722 379 361 285 425 320 335 705 308 412
 617 800 337 895 531 325 104 360 619 359 401 231 333 459 766 781 276 678 296 221 741 286 382 829 332 402 235 457 338 124
 779 558 246 598 797 406 319 291 898 567 293 316 278 391 728 306 277 833 348 257 606 388 179 727 315 322 317 772 184 219
 732 875 481 756 614 304 215 171 255 557 826 307 275 274 644 654 294 225 825 210 704 413 354 579 458 244 290 625 162 192
 818 799 218 744 769 159 182 872 448 339 817 240 415 408 813 269 569 497 226 309 714 130 889 196 170 326 223 611 236 109
 648 504 300 820 729 267 886 537 133 142 821 180 305 260 282 860 248 206 768 746 846  74 229 816 217 381 241 589 216 264
 679 624 110 615 660 189 145 173 123 686 852 792 116  33 754 672 152 239 873 775  90 287 288 724 891 165 845 666 197 100
 782 675 195 865 892 202 234 158 298 220 254 814 312 103 761 674 883 249 737 752 653 167  17 191  68 548  48 867 263 633
 894 622  89 544 748 156 117 788 200 177 831 698  40 176 702 546 222 377 827 896 630  69  53 812 183 194 355 616  73 880
 849 642  66 699 828 108 201 805 128 207 313 861  47  13 877 682 859 329 787 835 694 193 214 730 144  70 233 887  75 139
 645 885  94 850 807 762 111 874  96  85 669 888  25  30 790 256 764 132 692 773  56 186  95 866 113  82 155 374 489 871
 858 185 121 844 583  93 688 711 662  45 637 718  43 252 676 154 547 112 701 765  14  54  67 577 857 695 119 795  42 900

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.25404e+06us (= 5254.04ms, 5.25404s)
Wall-clock time (full program): 5.28684e+06us (= 5286.84ms, 5.28684s)
Satisfaction error: 0
Number of search iterations: 1977
Number of local moves: 786 (including on plateau: 303)
Number of local minimum: 149 (including on plateau: 39)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 432 149 605 211 533 400 792 856 610 300 569  47 613 327 554 522 241 201 585 601 745 505 254 392 200 190 277 722 563 519
 272 867  34 208 443 512 297 182 859 893 205 846 660  27 578 592  20  79  60 850  72 543 159 784 820 641 646 451 532 383
  17 447 261 194 231 456 535 113 649 708  66 619 731 771 866 283 536 336 502 318 798 284 226 755 663   9 442 892 603 204
 332 651 872 510 668 774 264 172 441   5 687 653 186 238 440 701 247 322 740 127 457 118 861 718 183 181 795 489 153 530
 813 234 303  37 299 448 317 873 340 724 557  91 762 770 422 139 424 177 346 834 228 889 652  52 370 881 783 219 412 119
 772 397 276 480 325 747 196 345 556 736 566 693 728   4 138 207 268 751 359 617 506 348 824 187 520 189 622 364 699  95
 764 285 428  74 286 611 631 615 426 537 882 643 815 114 523 865 117 295 363 481 154 144  57 151 787 427 841 120 661 418
 404 544  77 551 329   7 259 310 494 540 455 837 558 220 657 602 439 176 278 372 525 888 409 293 378 590 648 727 282 666
 280 160 484 273  58  33 809 550 898 572 870 832 501 794 333 860 690 289  80 778  83 899 179   3  61 223 415 588 818 102
 184 356 791 328  22 209 351 810  28 287 805 900 741 626 275 864 474 583 423  63 171 173 897 808 198 891 224  98 166 769
 145 164 868 491 347  70 461 239 217 817  41 343 236 777 330 252 337 304 213 886 612 712 716 714  99 436 561 445 829 853
 398 800 323 542 618 803 360 216 342 862 417 232  73 678 697 549 843 739 136 382 531 257 704  76 279 296 838  97 221 206
 425 627 776 819 507 560 654   8 262 460  23 679 158  96 707 152 388 806 710 265 655 659 319  48 263 633 316 616 344 580
 664 730 863 568 773 836 479 553 249 133 765 128 369 396 528  16  12 493 414 606 518 377 685 498 464 444 465  59  75 355
 785 108 420 695 683 361 688 452 752 458 248   6 671 476 175 165 527 672 869 623 315 696 852 385 260  65 116 589 358  45
 488 124  18 193 720  36 147 799 788 681 450 174 156 492 565 896 599 677 235 780 106 326 453 796 539 499 350 640 596 192
 548 470 702 597 674 593 830 890 463  35 827  50 339 307 680 570  86 576  14 487 384 381 786 141 717 167 122  42 312 725
 155 143  32 191 130 608 431 709  51 689 587 775  87  31 555 368 756 692 849 471 517 331  49 871 387 857 469 586 503 635
 500 826 828 251  84 529 600 567  71 111 879 395  64 753 645 632 574 883 694 157  29 742 437 103 163 749 545 509  90 105
 642 629 305 573   1 222 584  62 691 375 884 552  81 541 291 760 511 434 821  13 349 405 229 711 169 591 290 676 380 743
 402 667 131 895 403 197 338 726 546 123 115 515 449 390 744  11 761 878 620 109 822 258 644 594 789 150 230 421 462 125
 413 168 435 855 604 831 245 483 132 406  85  39 734 185 354  53 628 121 269 842 767 581  88 472 410 793 225 670 823 804
 324 656 311  89 673 335 876 281 757  25 362 246 401 294 366 161 497 877 214 486 129  55 371 833 733 816 840 735 729  43
 782 526 256 341 577 237  30 473 621 180  10 658 496 825 134 477 754 148 353 386 485 854 851 639 365 376 242 391 373 675
 227 880 524 301 430 104 759 178  15 894 135  78 215 766 170 713 407 609 848 723 625 454  54 188 790 446 682 107 379 814
 416 243 313 514 575 203 244 582 212 433 306 686 801 564 334 255 429 475 844 288 750 636 302 598 700 146  68 763 137 698
 715 595 737 807 669 516 665 885 218 142  26 292  69 308 684 411 521 233  56 438 706 482  93 579 781 738 466  92 202 389
  40 270 887 811 459 719 490  67 571 705 875 393 352 504 250 637 394  82 547 110 126 100 309 538 758 858 467  94 624 478
 614   2 298 845 559 746 162  24 508 638 399 847 839 634 408 662 768 240 199 321 703 374 253 314  19 195 210 534 468 732
 562 797 357 271 835 812  21 495 748  46 419 266 630 607 112 140 267 367 874 101 647  44 802 274 650  38 320 779 721 513

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.96846e+07us (= 39684.6ms, 39.6846s)
Wall-clock time (full program): 3.97176e+07us (= 39717.6ms, 39.7176s)
Satisfaction error: 0
Number of search iterations: 22648
Number of local moves: 5703 (including on plateau: 2903)
Number of local minimum: 2070 (including on plateau: 382)
Number of resets: 12
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 111 274 348 493 390 105 181 779 369 142  63 405 337 883 548 600 731 394 186 837 228 717 614 813 486 143 699 362 833 444
 319 589 503  87 211 789 714 137 772  57 250 463 843 601 522 887 474 670 221 654  88 243 393 288 847 328 562 592 189 222
 832   2 602  34 823 455 878 467 841 247 315 340 454 555 254  79 800 472 626 336 371 801 408  58  68  31 422 450 617 877
 150 537 793  48 151 884 814 488 606 791 728 900 652 230  41 499 623  67 727 535 350 192 329 101 359 553 875 378 108   6
   1 223 558 396 135 357 682 679 630 372 178 700 736 172 264 144 719 313 803 346 647 566 693  62 795 299 242 646 708 449
 689 410 415 852 202 664 651 270 207 477 638 259 332 278 533 740  35 724 762  15 796 351 138  74 241 649 345 618 598 552
 754 749 139  73 252  84 879 132 443 572 376 599 280 674 705 198 401 279 141 783 862 386 810  65 858 516  83 565 568 289
 860  30 235 113 639 325 165 792 644 399 277 751 121 808  18 392 297  89 867 848 675 518 249 373 159 881 377 588 353 672
  85 322 418 845 515 603 122 811 398 324 633 495 850 217 200 320 194 710 817 524 523 171 771 838 269 498 290  10 541 201
 262 468 777 492 786  93 175 458 729 660 169 849  75 106 737 157 738 404 604   9 866 778 342 637  43 462  12 343 863 421
 162 764  38 629 487 748 302 631 680 760 160 339 365 413 547  96 506 246 732   7 238 720 870 590 166 164 725 431 134 865
 773 414 321 636 330 681 367 770 412 820 723 212 407 229 206 698 381  33 402 840 805 656  55  51 570 896 216 521  61  29
 148 453  42 822 513 128 755 208 545 846 818 293 595 605 494 804 500  46  53 473  16 191 658 564 389 338 596 713 593 316
 704 489 158 828 416 379 678 298 213 665  47  37 888 239 642 662 868 556 347 400  11 482 112 380 621 479 573  13 528 802
 152 745 684  76 361 341 195 432 309 834 775 641 326  60 571 310 807 586 295 368 196 531 517 721 768 677 220 180 257 580
 209  69 173 395 527 305 483 284  77 437 663 899 893 891 897 107  52 696 426 480 554 314 271 895 214  44 763 253 510 734
 655 661 815 856 767 591 375  39 451 273 349 136  82 118 790 669  32 385 550 424 761 653 232 563 470 559 355  72 806  26
 690   8 344 557 333 335 438 428 204 183 584 640 456 514  23 561 798 730  25 842 237 490 540 501 691 594 292 695 577 205
 686 688 575 701  98 272 457 534 576 100 671 859 251  22 536 334  27 419 331 711 318 659 844 317  28 478 156 744 512 611
 645 532 434 363 435 520 465 485 742 287 382  71 155 188 286 505 445 460 707 733 267 174 892 853 703  54 530 391 766  45
 358 509 383 231 757 687 417 411 627 709 102 430 218 543 469 184 197 542 781 831 712 131 255  66 384 260 619 765 153 784
 871  86 657 607 439 163 481 551 307 193 830 886 750 628 882 447 388 632 119  40 409  20 420 177 154 110 624 739 869  36
  92 236 225 615 179 296 753 560  17 519 360 210 276 873   3 538 706 785 245  24 787 145 406 824 746 752 352 692 448 851
  97 759 668 109 436 170  91 582 741 125 609 266 612 140 574 608 425 697 508 578 374 694 718 234 747 782 354 182 323 312
 226 304 429 735 261 248 176 149  14 620 504 114 549 716 809 894 610 525 864 199 466 722  50 275 874 441 821 613 303   4
 285 442 685 123 446 788 715 475 433 366 240 569 648  59 476 120 643 104 471 825 769 854 300 190 673 283 233 774 129 397
 780 756  94 496 676 587 616 258  95 827 861 244  19 579  70 794 130 857 256 311 187  90 502 826 116 539 797 497   5 650
 816 829 812 203 185 839 219 743 702 268 224 167 835 758 529 133 227 124 423  81 115 625 356 819 546 263 836  80 161 597
 327 876 683 301 880 511 168 370  64 215 622 459 461 526 308 146 635 583 127  21 403  56 306 634 452 898 265 491 855 872
 776 291 507 799 885 567 103 294 667 427 364 282  49 890 581 889 126 387  99 440 484 585 464 726  78 544 281 117 147 666

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.60118e+07us (= 36011.8ms, 36.0118s)
Wall-clock time (full program): 3.60452e+07us (= 36045.2ms, 36.0452s)
Satisfaction error: 0
Number of search iterations: 19241
Number of local moves: 4679 (including on plateau: 2421)
Number of local minimum: 1736 (including on plateau: 282)
Number of resets: 10
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  10 563 724 822 233 103 804 539 722 585 875 224 169 560 384 515 835 564 810 256 237 153 472 263 521  52 157  66 783 514
 288 658 653 198 310 533 359 896 576 612 662 313 643 232 445 181  91 552 827 615 853 395 789 247 115  71 654  79 522 146
 575 818 289 551 821 469 100 124 261 334 811 591 175 447 105 805  33 262 737 697 803 670 392 101 829  88 438 389 492 308
 287 572  20 859 534  61 781 349 122 213 868 674 399 246 701 385   7 573 441 855 895 277 320 741 249 788 610  70 345 273
 255 114 843 484  58 133  93 541 808 570  83 186 650 782 374 339 371  73 876  50   9 862 411 753 681 369 498 660 705 884
 769 394 121 206 693  74 187 451 671 597  60 156 757 505 802 626 841 881   3 207   1 348 669 155 891 676 839 171 604 160
 512 152 173 158 574 852 790 245 370 537 204 443 553 801 351 212 123 390 324 327 599 677 850 890 558 127 136 814 248 525
 202 191 800 565 668 756 210 682 216 354 461 343 812 326 795 833 420 413 111 141 259 425 751 398 448 286  92 879 500 178
 709 328 331 734 487 197 431 315 878 243 773 131 433 278 454 774 242 690 235 586 619 707 355 680 166  75 442 387 506 329
 752 493 532 854  44 381 489 792 281 382 268 528 503  78 303 630 832 620 322 297 217 135 618 182 386 732  77 562 568 657
 330 581 128 434 882 350 566 523 344 772 459 844 275 739 364 314 727 280 880 496 294  90 137 272 494 467 694 179 295 305
 463 231 372 177 679 458 465 462 378 428  22 673 368 283 538 894 621 106  56 748 486 548 649 686 633 254 356  64 571 846
 637 530 180  80 419  95 270 284 440 335 199 244 735 460 377 779 889 495  32 885 556 644 550 547 162 776 138 518 439 820
 234 375 764  28  43 825 144 410 744 848 645 373 401 172 590  62 893 300 471 793  54 140 549 159 775 603 513 219 488 900
 215 301 762 347 524 391 872 695 193 847 362 400 474 285 897 194 188  97 342 577 688 405 165 555  85 634 423 526 444 627
  68 716 628 729 497  87 675 414 726 519 252 477 510 544 529 125 408 208 321 557 871 502 290 274 480 317 396 527 639 229
 338 282 161 379 785 309 490 167 464 794 531 600 536 721 622  36 132 507  46 422 520 720  99 873 837 892  94 485 561 112
  55 799 130 269 516 265 689 455 714 142 453 296 302 449 258 838 129 683 427 139 747 504 798 260 307 828 869 450   8 736
 842 402 403  39 596 569 508 746 266 589 765  84 361 647 517 376 766 509 731  14 332 357 306 687 108  69 723 366 119 718
 470 578 250 602 107 225 760 700 542 185  98 874 511 851 624 170 771 543   5 319  40 483 478 704  35 858 404 201 636 491
 567 325 479 830  81 432 824 412 222 609 713 164  23 149 595 831 251 667 406  29 397 184 360 482 353 393 614 661 699 763
 738 728 241 691 323 711 352  11  67 276 797 499 861 641 292  15 417 415 888 740 346  21  34 337 475 642 629 546 719  63
 336  65 279 435 316 778 367  82 592 607 299 580 104 715 784 227  38 767 856 648 706 816 365 429 583 652 363 380 163 183
 755 304 545 189 230 806 582 318 749 702 200 877 867 646  49 145 655  31 745  12  86 703 228 388 666 236  13 710 298 780
 840 663 857 190 168 220 196 883 684 211 554 588 150 253 109 481  57  59 886 625 113 333 120 860 341 617 116 768 750 823
 476 271 866 238 456 761  53 899 240 759 712 457 407  16   2 638 143 777 826 656 214  26 623 421 758 436 613 466 209  96
 340 864 540 813 593 698 257 110 424 176  17  51 430 787 754 147 692 659 815 635 730 849 312 205  76 584 696 148  41  72
 437 865 192 887 608 473 579  37  19 154 678 559 809 195  30 819 791 725  27 311 836 598 616  42 807  47 587 665   4 118
 383 134 834 126 606 640 264 203 651 117 605 870   6 468  25 672 409 223  45 267 786 717 708 293 102 898 535 817 426 685
 632 218 418 601 664 863 358 770 151  18  89 416 291 239 845 452 743 446  24 611 221 226 501 631 594  48 796 742 733 174

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.72984e+07us (= 27298.4ms, 27.2984s)
Wall-clock time (full program): 2.73313e+07us (= 27331.3ms, 27.3313s)
Satisfaction error: 0
Number of search iterations: 14241
Number of local moves: 3818 (including on plateau: 2023)
Number of local minimum: 1313 (including on plateau: 263)
Number of resets: 7
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 608  77 799 583 201 484 680  58 615 849  64 449  86 114 897 863 749  48  30 785 499 764 893 697 139 890 202  93 103 196
  70 494 726 128 836 841 162 107 664 181  41 156 884  81 866 685  65 142 774 782  75 109 794 347 882 789  78 763 249 744
 131 626 876 150 203 714 327 737 609 788  21 800 212 130 688 762 784 138 887 850 279  62 148 225 879  87  35 370 808 189
 810  26  99 900  83 187  61 475 640 735 605 872 105 221 502 745 700  37 825 889 555 121 818 183 896 176 350 526 258 115
 171 205 844 742 886 855 471 180 511 725  76 112 199 126 843 222 200 219  91 634 627 125 798 206 779 895 223 616 695 239
 104 173 750  90 210 149 501 445 339 543 108 820 102 190 888 860 603 111 894 706  80 777 892  97 868 885  92 143 217 878
 123 234 807 151 161 188 838 165 596 619 283 269 191 208 840 898 247 306 300 632 241 195 852 883 243 874 192 899 835 245
 320 294  73 168 172 376 594 880 790 740 265 160 224 184 620 891 832 304 198 760 312 802 727 275 364 757 153 368 604 308
 574 292 309 704 177 174 491 270 709 519  88 318 328 324 393 561 780 675 407 567 775 877 274 260 340 282 141 809 811 286
 392 256 216 383 110 291 337 435 656 881 394 362 293 119 263 535 311 738 389 796 816 829 558 586 197 455 391 382 839 305
 396 129 252 851 289 380 637 366 756 338 871 530 434 365 359 299 864 284 169 420 325 834 645 194 301 298 503 778 346 302
 857 416 379 207 287 374 842 332 826 433 466 319 378 226 211 290 285 566 418 538 193 846 400 506 479 439 520 607 523 352
 702 458 276 554 134 421 754 307 837 371 310 233 497 524 412 386 277 357 345 495 795 873 257 465 422 136 358 559 444 556
 355 333 456 353 413 425 481 401 404 361 427 429 631 516 493 297 410 638 331 515 507 827 415 272 399 431 360 662 562 411
 354 406 570 457 373 443 504 529 517 402 542 296 316 549 395 496 388 344 472 653 440 454 432 387 453 321 536 414 625 447
 343 348 553 417 375 483 546 671 521 518 508 489 159 459 424 470 244 551 367 469 545 271 451 450 539 334 651 303 588 468
 384 522 540 576 580 313 512   4 246 460 476 398 595 423 442 582 513   1 624 336 250 462 621 585 408 579 547 486 403 647
 342 610 552 500 487 341 154 514 255 635 452 446 488 658 492 532 477 589 390 385 474 498 356 652 703 531  67 436   9 490
 473 731 618 644 534 573 248   3 106 251 684 363 692 668 590 463 639 537 482 315 157 464 467  69 665 441 581 230 563 264
  66  16 830 214 670 600 237 739 167 557   8 606 541 705 405 351  29 329 587 480 641 426 577 613 571 666 682 163 326 713
 622 178 707 204 773 438 232 560 323 137 548 650 660 657 528  39  34 597 505 229  32 643 369 648 568 261 661 278 698 736
 687 716 485 525 448 527  11 711  96 569 733 533 550 654 166 591 623 772 722  60  18  54 659  74 565 564 824 314 228  36
 266 617  23 636 601 806 254   5  28  95 377 696 751 770 281 186 612 578 746 101 758 288 147 629 724 691 683 182 236 748
 409 861 419 712 743 693 349 793 116  17 686 755 667 669 146  84 259  82 630 132 599 231 122 478  94 672 592 598 335 572
 776 732 509 720 723  19  72 593 155 673 823  68 853 701 133  20 584 655 694 218 461  51 140 690  40 575 803 295  10 729
 759 544  31 510 628 792 674 814  55  22 681 689 847 859  25 602  27 854 209  85 381 238  47 633  43  42 767 280 678 699
 856 752  79 765 718  33 679 715 124 220 642 741 862 761  57 213 753 649  53 227 428 397 372 728 677  13 158 317 437  89
 786 828 614 267   7 813 812 747 253  50 710   2  71 781 215 273 611 766 721 262 646 322  98 801 179  38 831  44 100 867
 734 819 117 164 845  14 268 717 804 118 805 719 875  56 170 175 430 783 135 145 791  12  59 769  52 330 858 730 152 869
  45 822   6 240 848 768 787 242 797 708 821 235  24 817 771 144 185 865 120  49 815 663 127 113  46  63 676 870 833  15

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.25724e+06us (= 3257.24ms, 3.25724s)
Wall-clock time (full program): 3.28639e+06us (= 3286.39ms, 3.28639s)
Satisfaction error: 0
Number of search iterations: 1116
Number of local moves: 776 (including on plateau: 226)
Number of local minimum: 53 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 860  57 828 890 747 121 837  51 280 183  43 871 813 115 875   8 203  44 307 666 302 838 850 298  63 148 879 519 804  15
 818 320 810 847 742  19 854  23 739 251  83 862  71 247 846  88 195  31 858 287 118 784 629 135 153 799 835 194  18 859
 869  30 771 730  28 102 733  14 714 244 849 238   4 107 803  32 127  37 867 514 788 844 789 255 156 191 883 794 197 805
 718 795 201 559  11  17 878 800 139 258 780 746  42 763 777  78  87 103 374 408 737 668  38  81 175 796 798 310 696 682
 616 204 753 697  12 683 759  59 802 170 786 355  53 174 634 791 755  72 430 108 291 751 748 220  66  54 834 190 744 704
 648 732 562 681 754 225 705 726  33  20  62 196 699  34 684 749   1 750 686 297 611 734 235  61 295 767 571 215   7 775
 693 692 752 179 649 633 141 821 116 227 138 346 700 181 695 725  56 670 715 126  49 656 410  25 158 643 642 358 640 679
 660 729 597 623 635 707 808 167 159   5 687 628 590  94 745 554  92 435 347 349 824 265 819 242  16 149 738 136  74 641
 601 606 636 676 672 741 713 620   9 151 740 278 625  75 647 596 710 701 199  26 547 106 322 104 209 556 428 409 162 650
 661 689 654 690 599 219 639 501 300  40 584 163 570 722 646 574 511 627 114 234 100 645 481 109 189 581 418  65 580 610
 604 567 598  22 680 671 637 621 541 277   6  93 573 694 548 505 542 609 208 401 119 592 180 125 526 626 253 459 653 585
 404 544 487 589 614 624 535 552 572 561 512   2 499 147 593 468 545 658 685 128   3 448 578 464 236 515 303 221 521 507
 678 513 549 452 546 587 438 229 398 550 538 608 497 503 595 536 553 652 368  52 439 528  96 467 152 520  84 492 449 446
 314 313 665 482 555 517 432 434 366 543 477 433 361 565 455 472 389 557 576 134 447 411 387 485 454 502 443 494 440 412
 484 451 529 462 453 582 516 558 348 480 376 437 359 397 510 531 564 352 509 336 316 384 491 483 424 421 470 469 478 345
 569 422 523 474 400 540 490 508 391 460 441 394 458 461 537 493 423 450 419 294 367 371 527 413 332 444 524 530 372 488
 426 373 331 351 568 445 463 500 560 405 381 851 887 415 317 325 416 848 417 473 475 442 340 380 377 382 338 333 334 362
 375 518 252 261 328 525 396 319 326 457 243 312 399 308 615 425 471 764 870 711 329 363 644 388 586 290 812 390 539 299
 344 284 211 383 239 343 496 402 288 522 379 456 385 431 360 395 504 245 897 814 354 286 766 768 465 407 594 787 406 304
 228 311 350 817 250 436 392 403 256 337 369 790 414 264 274 212 356 339 669 735 841 330 268 709 876 364 613 631 254 427
 378 283 232 335 324 273 285 301 276 760 267 778 393 315 226 246 296 321 702 691 898 193 756 872 724 370 622 853 323 222
 262 353 281 216 282 486 365 187 892 868 341 761 318 874 207 357 272 248 495 579 240 743 533 765 706 269 306 717 420 172
 173 292 166 271 327 769 249 822 703 873 184 566 155 289  89 177 781 168 617 842 877 137 218 807 758 826 217 612 241 309
 146 882 198 293 233 143 101 895 342 720 260 591 213 865 214 257 884 200 165 659 857 823 605 894 839  90 161 677 263  45
 132 888 259 205 192 498  76 169 811 829 279 816 164 831 275 131 776 178 632 663 479 145 305 830 719 237 171 806 899 120
 105 186 266 223 773 123 224  73 577 607 551 122 698 731 130 815 779 772  70 630 603 657 154 563 673 880  69 782 600  79
 111 836  60  24  86 785  41 881 728 793 840  97 182 721 133 832 583 866 112 429 688 206 188 588 727 210 140 712 774 142
  85  80 845 129  95 762 231 856 185 618 675 619 757 792  29 864 833 820 124 716 160 117 202 674 852 176 270  39 855  55
  77 466  82 797 825 889  13 534 863 651 861  48 809 664  46 386 144 900  47 638 150  21 113 708 886 770  35  91 110 891
 476  99  67 157 896  50  68 489 801 655 783  58 827 736  10 893 667  98  36 575 506  27 843 602 723 532  64 230 662 885

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.80456e+06us (= 5804.56ms, 5.80456s)
Wall-clock time (full program): 5.83749e+06us (= 5837.49ms, 5.83749s)
Satisfaction error: 0
Number of search iterations: 1976
Number of local moves: 694 (including on plateau: 267)
Number of local minimum: 139 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
   6 121   3  44 806 217  76 169 776 846 828 819 654 182 224 858  89 836 791 165  67 179 790  55 745 808 784 868 257 452
 826 173 807 110  75 107   1  56 202 719 835 408 810 222 270 651 256 876 829 101 262 295 799 775 859  29 754 860 446 102
 751 209  14 252 283 185 238 723  13 816 748 802 678 144 386 250 353 832 746  31 615 123 861 737 103 223 822  18 725 834
 630 228 738 212 690  52 319 240 208 698 843 752 342  81 227 316 276 566 818 668 318  70 729 736 686 229  11 703 341 788
 850 231 823  15  97 116 481 717  83 743 149 711  27 108 174 772 171 730 827 742 113  64 805 640 796 128 837 695 177 693
 635  17 735  77 768 258 190 618 278 612 653 622  74 206 148 299 137 762 747 854  95   5 662 681  38 322 716 855 702 749
 647 598 795   7 324 129 426  47 410 588 599 753  86 689 130 395   2 812 705 727  50  63  24 392 677 627 636 720 733 724
 694 718 699 181 696 151 375 478 557  35 671 650  57  68 156 540  26 547 831 682 180 629 401 320 646 657 486 731  69 584
 785 115 592  48 777 236 611 610  78 704 667 576 305 567   9  10 126 632 741 787  43 350 596 674 587 356 722 574  30 607
 648 184 663 198 645 333 590 570  20 211 609 580 577 569  88  80 639 606 438 684   8 670 321 470 600 304 625 559 507 519
 687 586 728 476 779 233  58 565  34 642 432 543 533 585  53 380 623 601 669  66  23 523 501   4 537 474 502 582 494 602
 685 597 442 204 715 189  22 624 207 700 521 331 302 504 564 300 480 466 439 613 517 265 589 491 515 152 428 530 575 548
 709 666 524 329 487 361 146 352 417 659 406 508 337 581 336 200 419 445 424 541 313 619 497 665 680 159 427 388 550 370
 608 605 490 457 572 364  46 455 616 371 633 456 461 161 513 147 433 538 549 340 518 655 510 603 435 145 498 488 448 400
 658 500 450 460 459 369 634 462 384 489 594 454 307 485 358 308 483 335 560 496 447 545 330 376 449 359 397 479 389 499
 372 345 493 527 339 464 402 385 366 351 443 416 579 298 503 505 535 529 413 422 430 306 867 471 544 514 420 382 465 429
 441 421 583 675 393 414 563 451 373 363 552 512 289 314 378 418 856 434 423 440 431 394 286 708 463 436 296 453 411 344
 281 528 404 468 365 893 348 368 381 332 734 437 895 326 531 571 506 604 328 403 396 626 355 310 360 383 334 284 292 472
 367 239 259 377 294 511 879 492 315 477 347 830 312 444 853 542 327 261 210 556 801 191 325 551 398 539 301 354 758 405
 495 244 273 783 323 591 412 317 407 232 869 526 266 311 841 900 241 553 555 282 757 164 679 106 409 425 362 172 773 247
 391 357 167 475 469 573 660 264 707 851 287 288 532 293 595 739 188 415 343 267 899 346 303 782 268 713 484 215 245 399
 142 875 263 815 877 732 789 255 845 234 249 141 199 349 578 641 890 246 254 279 844 813 221 309  94 882 133 280 225  61
 214 803 205 673 166 697 726 218 774 390 170 117 863 251 691 593 672 374  91 122 631 760 780 260 275 740 226 197 763  73
 195  62 140 714 186 870 866 656 692 237 187 196 897 878 534 750 536  39 178 175 701 840 338 277 248 520 194 291 883 235
 213 778 274 798 243 554 614 794 892 272 111  54 219 849 891 617 649  16  51 297 884 847 220 192 793 509 242 271 155 216
 269 825  99 809 153 817 643 143 814 183 120 118 203 873 710 516 839 119 158 230 644 804 157 874 160 770 112 862 290 201
 139  45 109 885  92 872 458 786 811 473  33 797 865 759 833 285 721 125 124 135 638 712 154 792 150 387 848  98 253 136
  65 764 888 761 568 706 546 852 621  96 127  42 889 824 755  71 661 163 131 620 562 132 168 138  41 134 688 522 100 880
  84 881 765 864 105 857 871  82 767 104  79  36 781 838 628 379 744  32  93 896 676 842  85 114  72 820  37  25 898  60
  28 800  90 821 769 664 525 766 467  87  19  40 176 756 558 482 637  21  49 894 652 683 162  12 887 771 193  59 561 886

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.95993e+06us (= 2959.93ms, 2.95993s)
Wall-clock time (full program): 2.99302e+06us (= 2993.02ms, 2.99302s)
Satisfaction error: 0
Number of search iterations: 693
Number of local moves: 588 (including on plateau: 117)
Number of local minimum: 18 (including on plateau: 12)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 865 258 120  58 850 802 555   6 826 113 342 617 110 125 182 667 851 279 866 300 312 130 810 118 821 355   4 681 792 700
   9 836 694 573 733 230 319   8 115 583 106 227 636 253 713 742 159 275 322 395 114 833 811 848 839  76 411 722 153 780
 743 408   1 840 831 354 719 479 217 796 738 456  85 178 309  39 763 830 328 814 621 255  21 287 870 459  48 531 436  59
 662  70 728  46 382 769 859 703  71  84 746 877 645 317  94 829 467 356 795 853 271 132  33 590 894  22  13 304  99 804
   7 163 723 170 633 785 558 841 277 205 794 822  65 203 765 736 745 172  44 259 192 741 798 166 764  30 565 638 173 481
 893 803 261 169 124  79 347 366 654 136 302 587 752 179 152 748 876 102 711 666 111 105 705 699 857 683 263 175 627 383
 817 291 425 680 123 475 721 883 108 299 651  42 112 682 797 778 216 471 783 554  31 281 677 884 842 185  17  61 495 134
 465 628 582 421 140 805 561 423 164 295 603 710  55  32 716 832 659 270 820 548 249 750  40 579  16 151 260 809 712 220
 624 306 611  86 729 109 754 446 386   2 724 600 165 771 512 760 131 248 588 706  29 779 477 671 675 534  87  78 210 717
 581  91 346 433 762  62 664 634 545 658 686 462 204 542 313 293 440 225  56 597 849 709 782 678 117 535 626 101  10 514
 460  81 292 791 501 285 661 643 320 336 348 374 630 177 715 599 852 490 688  27 740 194 827  43 434 385 502 326 288 506
 448 768 653 674  80 854 619 679 156 834 637 266 427 198 176 487  35 410 412 414 444 625 511 491 257 596 174 549 494 147
 652 772 756 377 631 507  89 759 158 197 492 655 232 668 560 361 860 415 335 452 238 183 325 340 363 526 439 200 505 468
 731 402 562 432 206 272 576 240 687 368 314 509 226 454 406 384 891 445  25 572 570 455  83 470 537 843 486  23 775 571
 399 589 233 503 396 594 353 632 338 593 598 435 426 499 160  20 592 337 812 298 235 727 640 536 223 521 586 404 476 360
 575 420  28 704  93 556 310  92 684 378 828 472 234 896 488 585 327 524 725 380 489 515 365 394 642 352 525 351 214 369
  50 316 344 500  72 553 559 398 647 201 777 557 457 879 449 504 254 601 422 660 533 282 212 372 392 323 650 294 735 522
 103 280 339 858 256 359 508  11 321  36 318 758 447 357 898 332 767 246 846 835 161 228 837 493 122 825 265 429 838 442
 430 389 657 563  88 343 364 242 714 544 391 154 787 856 168 685 483 639   3 334 496 696 629 413 409 286 527 129 199 897
 211 107 290 574 641 381 137 543 615 539 443 517 569 673 418 229 428 419 774 744  19 604 247 252 697 451 438 808 458 289
 303 431 239 482 473 823 523 222 268 864 221 331 656 269 274 622 333 616 148 880 690 869 184 273 551 437 349 362 498 324
 747 646 311 405 450 121 208 788  69 734 262 387 689  95 602 138 155 568 276  14 751 847 397 753  54 578 887 882 510 191
 485 881 720  18 367 241  97 157 718 793 162 209 890 610 577 284  57 345 393  38 245 373 547 871 538 195 755 789 790 370
 141 648 466 737 761 595 607 133 566 376 145 613 670 770 341 296 219 862 250 215 888 416 698 407 139 218 403 530 358  47
 126 899 307 484 620 567 243 104 267 702 816 244 695 119 606 801 264 329 251 167 691  49 278 379 213 584 855 497 889 469
 135 739 519 315 886  63 171 885 614 665 149 478 540 464 224 146 707 819  41 128 895 726 237  24 180 861 441 546 388 529
 608 305 189 143 207 800 116 528 784 520 308  96 730 461 649  53 190 618 844 283 591  52 701 872  67 867 900 474 188 371
 807 609 781 550 623  15 453 127 757 417 187 818 605 564  26 400  45 644 181  98 732 330 541 144 868  64 786 150 892 301
 202 193 806  66 845 424 813 874 776 612 390 100 196 708 350  75 676 663 401 766 513  77  68   5  60 749 480 873  82 672
 236 186 532 863  12 692  51 669 693 635  37 142 580 516 875  90  73 297 375 518 815 552  34 463  74 824 773 799 231 878

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.51788e+07us (= 15178.8ms, 15.1788s)
Wall-clock time (full program): 1.52121e+07us (= 15212.1ms, 15.2121s)
Satisfaction error: 0
Number of search iterations: 6858
Number of local moves: 1943 (including on plateau: 1070)
Number of local minimum: 630 (including on plateau: 133)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 609 572 560  58 662 868 705 747 124 478  72 654 238 763  14 834 235  78  17 821 861  42 708 805  52  51 216 776 890   5
 873 479 831 688 825 588 166 828 859 746 846 755 721 839  43 894 149  82 138 171 122  89  99 883  57 260  76 228  71 109
 642 849 127  93 717 412 128 788 590 615 112 816 182 698  77 857 562 156 115  62 822  74 871 789 375 607 900 222 174  83
 704 230 823 879 881 739 744 797  85 696 714 791 740 133 175 801 210 276  34 118 887 218 155 812 316   6 158 188  98 107
 848 750 285 647 888 574 241  45 263 718 145 775 676 891 190 833  69 169  49  63 864 467 599 195 208 867 760 180 106 150
 660 429 185  87 808 219 157 486 400 829 200 756 745 878 172 874 832 162 110 196 404  27 611 865 473 554 725 202 272 197
 845 245 209 462 895 167 889 733 192 766 838 882 368 710 198 100 727 102 135 613 269 179 183 893 191  60 737 521 267 139
 858 206 356  18 251 880 502 594 311 732 302  40 774 443 561 369 227 203 630 565 268 697 683 159 702 589 896 142 336 221
 303 328 178 168  11 819 480 626 853 783 657 320 256 605 603 518 160 265 643 295 793 661 851 264 524 625 334 225 253 114
 289 870  73 242 595  79 313 634 261 280 798 475 323 769 308 223 365 275 309 474 640 610 875 163 361 493 897 277 417 827
 637 395 319 231 581 301 380 512 364 468 762 644 325 391 281 355 414 555 298 456 700 344 694 466 450 695 435 304 419 339
 377 103 401 252 529 617 340 519 898 884 428 681 259 841 307 422 249 258 448 385 446 432 885 274 318 876 240 389 246 211
 388 506 465 382 464 515 312 409 402 892 173 147 406 293 470 247 420 753 342 257 441 358 322 743 421 843 537 423 690 494
 376 288 292 872 469 262  64 372 459 523 620 315 405 501 413 444 810 731 491 299 496 314 556 343 283 455 461 693 341 567
 379 540 373 795 403 513 433 271 397 487 516 886 509 371 310 514 447 490 434 387 394 213 286 510 535 547 384 296 457 438
 531  75 396 332 847 410 136 703 367 645 520  96 460 546 580 526 374 796 564 381 522 608 426 184  92 636 550 390 407 415
 445 525 511 573 333 689 164 297 741 499 481 476 472 126 495 233 528 571 324 338 552 583 539 363  39 507 321 649 678 463
 569 349 442 452 449 585 558 563 424 351 370 477 498 505 489 545 497 430 317 738 418 207 141 437 383 809 530 290 204 488
  19 440 548 451 244 570 675 736 287 229 538 199 458 398 534 194 408 439 492 220 453 674 598 591 392 273 734 593 577 551
 606 544 658 614 237 532 411 279 706 483  68 653 224  22 648 568 542 592 627  41 350 566 557 616 500  35   7 720 601 508
 586 357 353 559 177 596 484 282 584 352 527 193 629 123 541 682 132 236 668 687  91 670  53 659 692 431 101 730 684 656
 578  81 669 576  24 633 751 266 673  84 189 348 602 113 234  95 631 641 517 709 781  56  61 543 582 622 553 618 635 650
 105 665 604  31 824  10 667 612 752  25 749  47  29  32 899 482 597 621 677 638 294 701  50  59 646 125 399 651 765 759
 153 600 623 587  80 300 170  15 713  16 632 345 724 226 666 217 748 707 726 729 386 778 346 326 619 248 347 761   8 719
 214 680 579 787  48 549 767 305 119 116  44 151 792  65 830 154 672 790 757 773  37 772 306 818 764 362  55 176 779 254
 335 436 140 777 416   2  21  54 699  88 723 146 291 686 814 104 485 770 711 664 137 454 754 181 803 161 327 715 784 837
 536 679 624  70 255 205 691  66 768  67 232  97 850 354 758 337 782 186 735 663 243 771 148 121 785 250 108 655 794 685
   1  13 671 855 152 639 504 131   9  94 165 813 215 331 815 134  12 866 575 652 712 786 799 212 278   4 856 628 716 877
  26 854 842 117 330 239 800  38 187  36 728 393 201 359 270  90 806 844 780 836  86 804 329 111 863 722 129 840  20 835
  23 427 378 860 120   3 862 807  28 533 366 144 143 503 820 869 425 471 852 284  46 360  30 130 811 802 742  33 826 817

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 7.42389e+06us (= 7423.89ms, 7.42389s)
Wall-clock time (full program): 7.457e+06us (= 7457ms, 7.457s)
Satisfaction error: 0
Number of search iterations: 2633
Number of local moves: 847 (including on plateau: 215)
Number of local minimum: 213 (including on plateau: 24)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 132 120 537 876 839 859  13 874 685 109 496  53 125 784 844 119 877  42 557 518  75 634 237 134 655 865 489 803 123  41
 646 106 893  23 284 843 694 183 690 414 117  94  67  87 879 719  68  50 714 440 656 736 848 264  37 731 892 422 875  43
 845 833 732  32 823 423 788  55 756  79 704  28 885  80 243  83  35  59 674 819 551 886 164 898 226 777  54 867  91  25
 349 837 787 754 722  61 577 111 602 647 431  89 365 464 716 130 167  97 507 454 766 675  72 715  90 669 547 203 841  70
 664 124 832 165 825 101 662 413 850  86 680 215 747 143 835 280 146  49 810 205 516 838 302 225 263 433 796 870 255 185
 860 604 673 172 751 887 558  51 858 162 277 233 180 330 709 501 253 640 520 204  58 355 193 336 734 868 750 191 307 300
 528 761 622 291 797 207 884 321 442 239 745  45  78 229 824 153 773 491  39 281 585 362 245 828 524 816 706 246 337 116
 150 227 695 137 830 771 632 792 727 257  46 340 184 279 807 881 311 288 800  14 799 483 126  64 447 593 781 220 238 596
 888 443 900 209 568 366 429 312 872 345 618 293 266 720 271 248 262  95 691  69 847 561 509 849 182 590 573 159 110 270
 608   6 826 360 591 235 668 427 498 303 470 166  18 760 757 350 241 295 361 457 216 478 586 359 763 728 815 883 256  34
 712 406 268 223 461 344 400 395 417 332 614 444 471 636 294 224 196 895 678 880 733 322 477 399 285 692 600 219 169 329
 599 319 408 313 811 487 156 368 199  44 607 808 864 689 550 331 500 249 530 267 379 515 174 663 250 616 441 401 325 652
 798 353 252 214 543 459 697 469 374 882 404 467 407 729 438 346 265 306 521 448 114 503 197 278 485 601 894 318 455 298
 320 396 373 275 592 648 739 502 211 372 403 418 402 236 296 276 789 453 853 316 425 555 144 389 133 629 386 452 779 753
 476 567 707 446 314 525 473 564 510 244 527 420  98 512 535 676  31 541 463 328 343 565 391 411 540 308 481 603 480 436
 658  29 434 861 371 392 862 154 465 435  16 282 387 513 176 553 742 617 315 335 584 301 598 370 326 580 514 462 378 805
 871 375 450 492 178 630 495  57 488 571 770 482 504 177   5 424 746 546 529 449 342 231 397 559 873 421 341 566 522  24
 364 549 309 764 186 286 639 410 376 377 269 552 486  62 633 660 430 451  93 782 439 274 666 701 304 351 334 517 670 581
 347 578 475 611  56 195 494 290 523 579 258 627 468 217 855 416 310 743   9 582 136 626 542 574 583 289 437 688 659 348
 228 649 852 687 127 479 382 623 499 240 157 899 531 138 484 702 394 576  85 189  71 597 556 534 609 171 200 621 681 554
 149 526 588 615 493 651 878 744 595 536 822 679 107 242 613 532 560   8 173 806  36 569 206 642 605 194 152  30 202 562
 724 445  40 412 358 708 188 667 381 698   1 705 785 292 102 505 625 497  47 148 703  20 735 460 711 208 352 827 369 802
 161 432  21 762 409 299 210 548 261 654 398 891 631 474  96 222 466 775 857 686 563  52 671 575 380 103 190 456 628 644
 212 869 145 624 385 594 259 619 201 749 234  38 610 587 508 538 544 620 801 327 181 415 142  10 545 155 570 606 717 710
 115 793 113 700 283 650 151 713 168 672  26 653 638 388 140 198 641 890 287 768 141 426 657 738 519 357  84 254 612 740
  11 776  17  48 356 723   2 665  27 645 817 218 804 834  82 856 778 737 230 683 297 104 684 637 635  77 175  92 812 693
 305 820 105   4 324 367 128 783 139 721 405 896 572 794  99 863 696 323 158  19 677 112 758 384 774 147 511  33 769 829
 338  63 363 813 135 131 108 333 213 842 741 897 767 889 272 661  12 643  65 730 831 273 851 187 118 163 221 339 726 790
  74   3  22 846  88 121 170 718 428 809 682 765 232 390 192 821 791 814 755 772 752 589 854 251 160  66 129 419   7 795
 383 506  76 786  15  73 179 354  60 472 780 818 836 840 260 247 866 725 393 539 699 458 533  81 759 317 100 748 122 490

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 8.26079e+06us (= 8260.79ms, 8.26079s)
Wall-clock time (full program): 8.29387e+06us (= 8293.87ms, 8.29387s)
Satisfaction error: 0
Number of search iterations: 2919
Number of local moves: 1096 (including on plateau: 378)
Number of local minimum: 219 (including on plateau: 44)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 176 895 882 484 222 608 165 494 763 132 413 290  75 479 241 247 217 219  44 314 657 839 846 886 556 326 772 781 100 392
 683  88 697  77 300 191  25 360 750 578 740  24 116 216 890 852 249 325 373 862  89 307 322 425 756 771 281 742 562 864
 482 101 385 363 624   3 323 200 749 691  82 594  36 820 285 678 779 365 806 305 369 125 641 103 783 634 689 891 145 464
  39 517 153 547 602 785 873 298 189 635 660 807  50 653 118  90 210 117 317 812 427 814 237 197 732 580 519 423 474 640
 173 515  61 383 896 623 395 201 743  55 774 858 682 485 115 688 505 429 141 175 569 842 220 792 169  65  73 874 134 880
 205 628 139 590 593 899 278 409 702 481 844 665 286 313 211 377 243 875 428 192 656 262 405 155 573 259 830  54  70 893
 813 270 497 869 745 887 347 244 127 855 271 826 136 310 719 701 629 150 221 430 733 709 335 236 121 230 160 552 226 166
  38  92 362 292   4 581 276 588 605  48 758 321 213 687 124 788 543 841 209 790 184 302 894 434 303 312 489 833 818 786
 398 393 301 203 612 258 248 346 451  85 662 269 371 319 592 564 625 805 168 462 456 836 516 224 327 795 453 748 306 722
 731 540 674 811 154 415 294 411 741 532 351 570 288 777 798  34 156 837 212 308   5 810 446 394 359 508 291 238 277 553
 295 186 340 868 358 669 766 257  15 255  26 534 126 311 331 659 280 404 782 673 677  11 568 877 636 533 539 367 504 668
 332 265 334 390 526 352 272 825 315 655 557 898 711  99 215 699 857 231 690 239 631 151 506 483 513 420 412 293 507 137
 370 528 410 563 182 551 867 537 637 338 591 348 161  13 614 467 648  60 449 195 718  83 611 703 144 148 780 574 549 676
 337 460 324 355 426 544 490 387 386 143 442 353 585 900 692 437 548 407 686 522 122 433 796 185 672 260 343 318 171 791
 188 368 879   7 822 803 457 621 651 252 866 595 435 511 164 565 206 441 510 381 163 493  41  58 476 455 860 424 350 473
 401  66 275 378 603 723   1 824 828 681 223 529 566 406 850 266 345 878 546 799 738 245  10 471 261 138 541 388 282 253
 418 808 604 465 650 827 647  32 329 710 344 459 458 729 366  69 254 199  19 739 761 708 149 242 755 228  31 542 775 198
 525 764 863 865 760 177 372  72 107 218 376 737 897 447 622 167 468 147  67 521  78 596 357 600 531 577 472 194 639 299
 881 232  98  43  71 384 571 159 417 757 572 133 607 469 832  86 328 870 559 399 667 642 106 586 264 454 620 809 883  16
 561 606   9 728 475  37 320 452 501 584 646 174 645 587 140 354 765 330  76 375 131 754 349 680 250 251 545 876 871 443
 619 670 470 487 391 227 801 279 333 438  18 436 396 190  53 102 654 845 685 576 892   2 342 821 432 727 658 128 502 341
 183  68 773  14 440 309 695 610 235 714  33 734 885  59 769 698 509 613 618 397  17  52 583 713 495 450 664  46 643 496
 626 693 753 142 466 170 400 445 389 716 530 859 597 554 361 478 735  93 463 439 661 789 356 725 296  79 233 179  20 268
 815 704 480 416  49  45  35 514 550 152 491 287 598 558 649 225 707 273 770 615 536  62 696 752 762 567  12 575 599  21
 240 751 684 644 853 402 520 797 109 617 817  97 767 518 112 113 110 889 421  29 172  96 582 589 431 196 555 193 579 632
 652 500 609 675  27 130 627 746 105 679  81 477 793 403 214 736 289  87 747  57 274 422 162 208 712 829 111 601 778 784
 847 202 503 374 108 380 843 851 461 720 246 119 848 498 157 666 663 408 888  47 204 181 794  64 499 512 114 180 854 284
 263 488  91 207 840   8 234 730 560 715 283  95 146 414 721 535  56 630 819 759 726 768 616 379 158 872 700 492  23 187
 776 256 823 444 538 856 524  22 638  28 724 304 336 267 744 339 802  30 419 316 838 297 800   6  63 633 694  80 834  84
 448 861  42 831 178 671 849 804 129  51  94 123 705 523 816 835 135 717 382 787 364 884 229 527 486 706  74 120  40 104

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.14493e+07us (= 21449.3ms, 21.4493s)
Wall-clock time (full program): 2.14821e+07us (= 21482.1ms, 21.4821s)
Satisfaction error: 0
Number of search iterations: 10579
Number of local moves: 2950 (including on plateau: 1615)
Number of local minimum: 954 (including on plateau: 185)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 520 438 588 191 776 648 887 173 816 301 869 775 193 781 518  20 575 234 464 310 489 874   1 188 380 151  16 710  87 542
 450 863 111 644 130 877 108 179 440 164 269 592  99 659 535 356 742 674  58  72 433 357 737 752 510 789 650 556 566 143
 883 307 318 405  48 141 721 139 192 810 197 614  93 820 718 334 391 140 302 597 362 656 854  98 793  80 633 668 860 341
 829 279 840 826 178 847 150  38 577 185 107 808 258 734 215 305 763 196 122 806 116 841 771 640  88 399 194 259 579 565
  71  42 311 562 881  82 235 584 667 683 879 802 216 231 866  59 792 453 201 195 282 642 898 733  64  76 817 886 103 202
  61 246 885  52 707 892 289 587 524 790 517 557 105 663 329 254 571 570 397 166 861 374 369 276 725 631  75 412 552  78
  28 295 586 275 165 522 477 580 120 654 509 402 664 899 744 686 537 791 214 244 804 174 746 846 680 144 300  63 142 224
 321 198 815 240 205 386 378 242 152 555 343 834 222 474 421 751 327  56 711 314 865 409  24 287 422 594 858 850 713 548
 609 163 888 381 249  91  74 316 155 643 572 333  89 461 645 499 794 264 634 317 187 769 853 757 243 719 823 709 124 154
   5 428 766 844 241 183 770 728 780 493 119 540 760 221 762 884 623 184 172 210 403 387 168 530 470 186 521 218 504 415
  96 233 176 319 281 712 426 697 681 567 897 505 434 627 692 855 382 673  37 675 335 377 753  12 624 230 288 274 351 306
 894 799 396  85 625 476 270 750 367 620 601 267 427 113 827 331 393 610 309 630 785 145 526 761  10 871 190 127 106 204
 407 425 256 651 284 805 424 315 177 851  90 758 867 340 773 765 272 417 370 291 352 582 125 544 239 589 266 554 389 337
 303 550 685 451  27 262 448 304 418 368 149 541 629 237 538  30 595 543 616 545 395 500 872 845 364  68  97 740 699 696
 479 445 533 492 401 458 322 413  53 735  70 779 893 539  26 727  33 739 812 455 447 583 676 394 384 211 170 248 462 536
 366 410 873 336 456 212 454 200 626 360 363 431 568 292 564  32 400 818 599 481 768 159  35 720  92 558 549 519 689 585
 774 501 350 619 388 778 268  51 339 346 666 348 444 767 232 835 171 286 590 560  55 353   3 441 486 338 622 437 635 832
  46 788 347 563 600 559 435 574 293 512  50  49 443 573 525  25 465  44 612 137 593 529 864 219 490 598 621 715 655 591
 724 508 265 323 717 308 358 878 498  66 838 206 223 764 494 104 483 528 772 404 371 419 398 694 730 507 372 420  15 128
 798 112 344 608 647 255 688 783 628 511 503 296 217   9 355  17 220 702  84 646 376 547 513 227 890 290 126 449 852 822
 807 313 260 480 439 100 777 468 678 297 487  94 379 576 657 375  31 515 175 606   4 523 285 708 460 532 693 637 527 632
  95 607  23 342 891 467  47 299  22 896 117 502 862 324 208 228 830 755 759 618 416 484 277 138 703 436 722 613  13 821
 516 471 320 496 796 843 207 257 653 361 110 167 263 652  81 411 748 857 658   8 672 349   7 786 463 662 561 345 156 639
 312 638 182 459 669  14 819 354 472 161 803 741 373 123  21 466 665 392 131 745 839 531 226  19 229 671 870 478 706 406
 849 738 701 603 252 714 836 278 569 383 469  79 705 114 280 756 238 118 800 682 430  57 385 615 482 147  36 452 534 213
 649 328 359 283 497 491 677 726 495 133 475 169 203 134  86 691 115  67 723 457 787 875 602 153 485 837 209 330 747 732
 326 795 889 617 251 611 670 473 825  73 514  69 488 180 782 813  45 842 157   2 294 661 189 716  40 429 743  60 636 325
 432 604 158 442 868 146 181 828  77 247 687 876 704  83 332 446 695 408 679 797 423  62 390  18 895 784  39 553 596  65
 859 109 261 102 698  54 271 660 365 551 414 245 880 900 129 731  41 605 811 736 250 253 833 162 801 298 700 101  11 684
   6 882  29 824 148 581 848 641 856 199 831 136 814 225 160 729 578  34 546 809 121  43 135 236 273 690 754 132 506 749

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.80956e+07us (= 18095.6ms, 18.0956s)
Wall-clock time (full program): 1.81287e+07us (= 18128.7ms, 18.1287s)
Satisfaction error: 0
Number of search iterations: 7977
Number of local moves: 2170 (including on plateau: 1112)
Number of local minimum: 695 (including on plateau: 136)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 886 859 196 875 116 781 131 440  71 768 782 560 678 868 205 445 677  88 477  46 709 148 817  23 101 819  98  43  54 754
  77 891  90 857 191 112 159  51 861 822 718 107 669 460 713 894 884 102  56  64 716 152 625 161 540 657 811  96 879 100
 172 259 128 696  45  49  95 228 708 840 880 586 613 863 729 612 760 160 821  27 828 631 808  74 144 554 170 805 175  55
  63 138 843 557 236 104 279 129 179 900 892 545 881 227 710 217 255 851 877 292 714 528 690 245 106 786 820 230  99 122
 897 212 567 841 301 136 401 126 200 214 747 185 594 883 701 551 182 882 730  58 846 237 847 762 151 489 219 187 168 201
  84 199 833 797  72 878 233 893 195 177 823 399 670  69 536 721 842 181 206 290 830  93 596 188 753 683 755 256 211  52
 114 139 215 672 434  28 889 156 103 202 268 213 835 354 885 637 766 869 824 178 844 164 814 860 130 698 585 252 218 169
 890 344 229 899 333 275 246 221 240 826 694 779 703 535 876 896 433 711 234 147 384 272 552 155 751 162 135 123 220 250
 324 165 284 523 171 332 320 285 777 289 854 749 783 512 739 741 406 184 249 418 644 850 715 149 609 223 314 328 334 244
 319 322 146 599 363 243 241 257 207 757 649 343 810 392 568 834 898 317 408 293 705 321 589 558 695 887 295 158 224 117
 203 204 865 646 364 288 338 278 287 271 379 306 416 374 815 855 323 308 650 600 577 845 759 260 347 795 315 198 396 253
 447 349 895 668 419 362 277 395 282 225 615 874 291 457 430 387 487 616 785 335 544 358 622 186 192 299 134 398 373 813
 448 264 325 635 601 403 235 486 888 318 163 871 641 281 432 429 372 582 263 339 414 375 565 498 443 428 484 388 378 566
 424 276 369 534 435 692 176 365 493 787 357 303 407 386 390 409 852 389 397 480 316 327 469 604 542 463 422 663 483 305
 381 394 475 626 286 467 304 607 521 725 376 370 411 417 653 350 242 510 496 461 438 441 538 402 300 421 563 497 569 274
 505 442 413 470 412 267 444 355 400 478 459 628 385 517 359 439 311 543 490 546 500 503 431 254 345 648 473 576 571 351
 476 294 482 371 588 380 518 481 548 471 266 584 366  33 495 454 352 511 639 451 549 405 360 504 341 466 664 645 356 465
 456 415 564  40 561 691 662 658 559 513 368  29 462 425 410 382 508 547 520 638 533 529 525 573 427  35 329 391 455 310
 680 251 553 342 550 555 592 570 507 583 474  10 539 699 591 105 197 449 261 479 587  87   5 492 280 666 642 593 667 509
 532 426 660 330 458 636 602 575 580 501 491 717 269 485 377 120 367 527 383   7 194 733 270 494 238 627 453 464 468 531
 780 541 796 309 524 629 742 675 774  94 488  76   6 450   9  34 262 514 634 265  89 579 506 651 704  47 499 578 686 574
 684 581 530 127 731 700 744 618 515 621 610 166 273 623 353 298  73 124 404 765  62  59 307 724 113  83 681 608 562 776
 472 598  42 111 654 697 679 173 767 361 239 689 248 632  50 436  22 712 674 673  68 590 247 502 336 137 619 643 656 788
 640 726 624 337 789 707   4 769 693 687 313  44  91 839 232  32  24 665 516 778  78 420  79  25 606 119 688 801 617 572
 825 838 772  82 682  18 605 727 258 597 115 661 611 141 125  14 794  75 108 791  48 633  13 728 556 145 526 519 676 832
 853 812 231  60   3 630 746 738 719 210 154 655 109 121 537 180 133 193 614 873  67 702  41 647 790 522  37 620 770 748
  21 856  30 340 736 773 836 745  38 153 118 346  61 763 110  70 758 866 189 756  80 603 209 734 803  31 150 735 862 743
 793 848 312 140 831 771 870 652  85  20 132 723 393  36 283 750 722 226 216 740  97 297 222 804 761 142  17  11 792 829
  12   8 326  16 827 737 331  53 296  39  65 807 143 671 183 800 167 732 302 867 348 784  86 452 659 798 799 837 595 775
  57 864 720  15 802 174 816 809 764  66  26 190 157   2  19 423 446  81  92 858 706 849 208 806 752 685 818 872   1 437

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.51183e+06us (= 4511.83ms, 4.51183s)
Wall-clock time (full program): 4.54481e+06us (= 4544.81ms, 4.54481s)
Satisfaction error: 0
Number of search iterations: 1526
Number of local moves: 953 (including on plateau: 430)
Number of local minimum: 77 (including on plateau: 47)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 115  81 751 878 893  65  73  75 723 109 265 614  37 872 856 756 827 297 706 133 198 769 515 886  47  71  59 186 768 890
 865 719 529 126 522 246 119 165 852  49 182 131 120 875 800  76  88 712 700 780 562 822 845 178 752 163  53  61 832 591
 107 141 850 180 879 135 566 174 846 201 765 101 158 779  95 177 118 430 717 551 578 876 590 138 803 194 894 544 831  97
 128 233 861 136 808 117  50 787 662  74 335 587 171 820 772 106  55 799 601 504 236 847 254 185 543 762 885  93 496 608
 738 208 176  78 854 149 740 129 480 159 199 596 322 727 225 228 179 344 744 558 833 579 892 863 219 895 256  43 243 859
 170 783 774 116 788 883 123 273 782 205 305 209  98 801 162  79 342 483 887 140 237 851 193 238 891 794 100 207 763 838
 364 387 271 104 621 897 786 134 696 260 221 299 363 278 743 250 137 526 688 823 183 288 332 844 683 692  82 215 824 524
 142 197 888 169 213 748 814 862 307 200 309 812 166 528 321 125 253 565 841 776  85 247 557 206 898 785 226 222 730 323
 286 113 329 240 866 130 150 320 784 391 711 426 394 701 175 223 840 724 819 817  83 758 319 287 275 352 267 161 821 753
 274 188 461 290 556  94 796  90 615 896 482 407 369 327 212 263 882 659 611 804 839 347 251 373 354 857 164 346 355 353
 362 349 281 559 252 357 818 869 499 365 605 789 324 647 491 244 304 726 849 725 242 248 472 282 241 230 449 537 203 196
 292 235 167 259 326 409 889 433 548 229 410 899 417 415 411 173 877 835 408 302 471 312 291 358 638 442 381 311 477 900
 368 367 296 339 277 298 884 463 389 328 470 293 398 401 425 264 617 348 542 685 239 245 637 626 506 337 595 606 867 405
 441 414 435 399 497 484 848 402 569 541 377 588 427 501 386 350 276 316 498 511 533 455 493 380 421 465 261 308 454 485
 412 280 383 675 573 519 722 438 514 440 416 157 376 395 334 340 517 670 599 476 540 404 432 315 444 535 443 366 457 343
 492 619 413 313 388 331 356 512 317 549 505 406 473 603 584 428 459 490 602 318 359 539 374 306 530 451 489 469 294 546
 618 370 554 623 419 576 593 390 447 437 151 627 684 513 592 624 600 172  45 270 382 520 525 580 488  51 422 400 450 392
 503 715 655 431 453 534 436 445 532 295 555 732 538   1 531 456 552  87 268 478 378 487 646 495 507 629 448 474 220  34
 508 698 742 527 518 550 204 672 279 649 155  77 575 635 563 500 481 121 475 570 439 124  89 571 192 547 664 385 338 667
 195 661 703 594 622 460 510 523  62 651 139 628  29 446 689 560 640 122 361 108 466 464  60 718  44 509 648 680 678 545
 630 686 613 746 620 420 330 577 572 707 589  67 616 650 434 486 462 144 168 351  22 154  69 634 609  96 766 581 652  64
 553 643 709 632  14 754 458 371 211 610  16  57 673 303 690 625 663 393 143  40 697 516 671 574 561 105 642 568  26 597
 564 694   3 657 202 710 396   6 582 585 336  48 479 633 494 870 669 283 152 429 720 631 102 262 216 705 773 653  25 636
  91 645   8 731 210 666  28 741 379 775  52 679 693 231 641 745 735  84 257 598 695 721 793  72 132 468 728 691 191  35
 716  66  23 855 760  58 227 567  99 607 868 502 778 255 714 699 681 289 111  33 733 612 729 797  13 147 214 654 375 333
 816 864 770 604  21 184 418 639 232 676 737 764 873 114 660 790 341 127  70 314 759  92 677 806  11  54 153 749  10 190
 767 586 658   7  56 815 269 795 103 761 880 674 704   2 403 834  46 665 284  38 360 384   9 791 750 218  24 713 452 467
 668 734   5 810  32 285 424 644 156 829 739 345 702   4  17 583 325 858 181 310 781  27  30 656 757 397 813 708 423 272
 809  68 189 682 234 798 187 802 258 792 860 777 871  39  80 825 300 372 146 807  12  86 826  63 160 736 805 747 148  36
 521 771  18 755  41 843 301 217  20 145 881 224 687  19  15 836 249 874  42 266 853 110 842  31 830 828 811 837 112 536

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.53507e+06us (= 3535.07ms, 3.53507s)
Wall-clock time (full program): 3.56834e+06us (= 3568.34ms, 3.56834s)
Satisfaction error: 0
Number of search iterations: 1046
Number of local moves: 640 (including on plateau: 182)
Number of local minimum: 59 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 768 813  67  12 320 351 132 848 787  68  55 285 866 211 116 264  50 711 172 733  98 738 777 796 859 372  58 736 626 826
 870 657  39 234  75 725 759 835 249 243  46 890 838 348  40 721 720 849 192 180 134 763 225 855  99 772 175 868  35  79
 740  11 106  20  26 199 744 755 754 239   5 702 843 195  24 410 825 794 640 273 230 698 771 840 786 325 360  63 857 280
 321 645 690 115 126 757 814  77 874  43 222 819 793 131  86 379  18 830 722 688 242  34 743 785 824 365  53 339 706 274
 781 806  60 367 710  42 797 327 779  36 159 746 685   9  30 378  27 837 118 170 219 723 792 770 807  14 457 497 739 633
 699  52  87 127 718   7 842  10 799  45 272 761 776  48 719 586 413 728  51 128 130 858 732 704  64 708 731 117 873 730
 627  74 783 189 260 663   2 672 522 109 521 760 692 157 686 790 767 528 649 165  21  93 553 214 689 724 153 136 762 554
 612 638 735 592 691 769 559 574 734 298 196 643 668 208 547  72  38 667 146  15 112 620  28 155 634 606 104 556 615 683
 703 598 585 611 662 597 623 558  19 108 541 774 653 171 616 160 103 295 609 636 235  59 442 124 542 709 301 271 569 641
 700  22 707 205 669 656 715 670 701 412   4 502 630 340 674 140 217 507 618 532 375 386  16  54 671 782 144 204 714 548
 565   1 591 696 602 644 549 654 576 334 486 590 681 102 337 288 163 588 678 293 258 664 622  78 438 639 322  88 632 356
 628 566 551 578 449 446 567 516 563 246 550 383 332 206 583 506 275 512 510   3 324 342 737 579 471 215 705 555 552  65
 562 341 631 596 651 434 629 317 425 269 589 525  96 514 607 462 385 451 676   6 238 568 465  95 445 765  57 527 534 655
 564 376 463 297 369 535 223 515 546 268 492 501 368 267 537 544 637 511 335 624 570 517 539 587 453  17 473 469 468 450
 426 520 399 580 430  90 480 584 523 409 519 454 561 599 277 347 608 614 524   8 538 494 504 352 384 508 533 470 422 358
 262 336 416 593 572 432 490 543 431 605 329 428 479 466 472 495 505 408 485 526 357 481 415 503 388 475 419 359 401 444
 392 447 381 247 390 500 460 557 488 581 362 424 363 443 483 571 498 456 366 477 439 418 441 278 405 834 595 346 382 491
 420 650 371 764 286 287 493 188 396 474 400 478 496 440 467 726 414 513 292 316 661 435 380 421 377 820 353 499 305 393
 876 402 308 306 406 257 289 312 291 658 745 863 423 694 261 680 350 411 398 464 300 417 370 224 304 241 778 803 436 248
 452 309 389 397 302 221 476 279 319 635 780 281 391 437 427 829 560 354 227 518 800 200 364 344 194 864 880 752 216 318
 355 403 252 259 303 900 361 290 296 575 343 244 458 882 326 816 536 310 323 374 604 138  97 621 373 805 892 861 169 349
 149 448 404 459 245 266 330 256 877 775 229 407 113 881 168 831 331 345 795 713 684 893 282 283 231 173 896 582 276 193
 263 314 179 613 240 801 162 665 110 865 139 198 228 872 209 660 860 482 766 387 862 255 875 313 197  71 673 284 120 852
 143 666 123 184 315 220 867 151 679 839 845 186 190 642 394 210 712  82 433 841 789  94 484 530 891 265 540 294 333 573
 212 833 254 201 311 791 202 164  13 693 610 299 182 823 191 677 395 251 853 815 697 218 232 213 899 137 811 601  91 846
 107 603 850 817 749 174  29 307 133 808 773  92 114 809 741 183 233 167 156 461 695 756  84 659 594 429 338 747  80 827
  56 832 529 898  62 810 178 185 203 727 869  41 236 675 879 328 897 111 270 748 886 619 147 545 181 100 489 729 166 119
 141 871 788 844 828  70  23 158  76 682 812 148 125 487 884 226 885  37 577 821 652 253 600 617 142 122 161 509 822 154
  89 250 889 878 894  69  73 750 145 687 804  25  85 742 883 187 237  61 176 847 717 646 751 895 129 625 177 152 531 121
  32  31 888 836 854 802 647 798 207 784 818  66 150 716 851  49 856 105 758 753 648 135  47  81  44  33 887 101  83 455

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.98051e+06us (= 5980.51ms, 5.98051s)
Wall-clock time (full program): 6.01364e+06us (= 6013.64ms, 6.01364s)
Satisfaction error: 0
Number of search iterations: 2028
Number of local moves: 945 (including on plateau: 446)
Number of local minimum: 134 (including on plateau: 66)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 293 883  76 710 875 139 737 853 670 151 107 161 836  38  73 794 121  62 120  48 819 834  99 781 178 371  25 886 898 877
 872 678 128 811 841 894 279 769 862 718  82  39 187 267  68 812  80 142  69 104 796 197 516 765  22 746 193 539 176 863
 629  89 848 889 307 213 885 549 860 611  63  67 768 184 723 617 146  98  33 111 760 776 105 528 258 686 899 483 125 205
 759 879 136 893 525 133 608 741 843 189  94  65 173 123 428 250 799  34  87 212 827  95 220 696 100 850 900 831 156 869
 766 117 887 715 755 191 147 882 680 865  19 163 243 421 439 639 129 158 449 435 897 196 183 590 825 828  71 544 106 175
 790 835 866 507 285 606 115 677 816 669  92 228 206 109 504 605 663 113 154 598 726 110 262 713 676 216 130 888 232 124
 148 141 190 736 852 137 892 708 824 837 338 344 179 230 433 787 134 867 209 656 701 284 260 498 208 237 332 840 274 239
 674 359 261 257 667 312 188 890 751 345 224 571 801 457 779 170 265 380 248 729 688 315 861 856 367 294 165 259 171 211
 582 215 199 774 487 116 249 653 164 895 207 186 352 270 644 842 881 245 246 132 595 807 282 854 762 695  42 554 390 195
 870 301 227 699 817 275 327 650 732 880 276 402 355 496 740 379 286 236 425 526 745 278 225 649 172 217 234 326 416 354
 520 412 306 244 609 269 330 734 519 162 463  58 414 364 838 200 896 353 365 815 646 849 192 692 271 683 166 398 518 229
 369 185 323 325 810 308 351 622 552 477 233 859 368 426 592 204 634 418 802 847 548 299 373 560 318 335 342 372 350 313
 287 434 397 311 618 362 484 537 400 543 268 316 417 844 619 542 478 377 466 557 624 395 465 640 383 334 462 331 341 283
 281 470 513 429 602 366 404 493 471 346 538 336 370 420 672 456 697 399 343 891 662 393 361 681 349 324 329 391 231 297
 396 445 386 375 388 403  43 363 452 401 389 479 348 586 565 474 579 447 523 461 510   7 406 573 491 604 547 540 773 561
 610 440 509 481 436 468 423 387 339 473 551 427 588 545 476 485 378  57 415 314 458 408 581 357 522 441 502 541 431 472
 499 553 490 623 409 384 347 322 437 488 651 482 521 251 222 576 511 444 413 376 317 451 446 300 506 633 340 583 394 546
 637 501 531   9 256 658 535 358 500 356 822 530 169 194 182 382 593 627 160 266 459 422 661 138 514 702 512 575 555 711
 295 494 577 603 238 687 679 291 587 492 630 467 515 374 168 460 566 569   8 320  90 641 411 272 655 562 558  70 529 707
 652 532 438 563 450 254 625 303 252 550 475 585  17 296 489 636 559 643 761 210  36 698 570 181  51 620 613 122 675 659
 635 823 505 615 153 638 564 119 567  60 464 705 763 578  40 240 527 621 601  37   1 424 448  49 749  29 495 657 754 654
 152 731 517  28 277 597 497 127 298 668 419 607 690 381 263  30 665 789 767 143 145 469 628 360 480  81 612 764 714 616
  75 818 648 155 144 589 742 455 247 666 689 791 149  54 202  79 735 591 503 534 410 685  18  13 724  93 756 782 568 600
 255 536 572  59 337 664  61 226 112  12 833 626 757 855 177 135 584 785 614 719 167  91 772 486 174 533 814  84 753 722
 201  74  66 580 288  15 783 242  26 524 647 599 673 743 405 788 108 632 868 443 273 806 775 223 140 671 809 101 703 309
  23 684 706  27  52 725 574 305 221 253 645 682 820 748 777  86  41 157 727 454  88 693 792 180 712  10 738  77 721 797
 304 805 631 118 280 709 758  78 150  21 871 453 778 874 642 159 442 873 858 720  24   4 784 264 432 744   5  72 660   2
 131   6  50 319 328 878  11  47  55 430 800 857 241 851 392 780 594 752 733 739 385 839 218 310 826 219 750 126 813  35
 302  44 804  64 333 717  56 114  45 198 830 700 771 691 407 694 103 770 716 829  16 846 803  14 864  53 884 747   3  97
 508  31 728 596  96 808 821  20  83 235 795 730  46 845 556 214 321 876 832 289 102 203 798 292 786 704 290  32  85 793

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.9842e+06us (= 2984.2ms, 2.9842s)
Wall-clock time (full program): 3.01745e+06us (= 3017.45ms, 3.01745s)
Satisfaction error: 0
Number of search iterations: 678
Number of local moves: 561 (including on plateau: 62)
Number of local minimum: 24 (including on plateau: 17)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 420 825 439 140 291 877  58  63  26 850 848  23  87 223 195  51 167  79 880 824 218 734 237 790 776 859 836 888 810   1
 294 312  32 149 804 281 122  20  27 784 837 735 187 239 844 184 262 856 720 832  49 205 179 697  28 817 798 788 548 885
 192 679  59  47  65 805  61 762  24  12 707 872  94 139  97 240 241 231 708 822  38 828 751 876 452 795 688 767 632 831
 135 759  42 745 752 873 278 683  33   5 857 829 290 460 142 755  50 852 709 277 114  46 477 712 156 833 274   7 500 870
  60   3 327 243 680 779 124 740  15 630 645 780 224 365 703 147 110 793 691 771  17 756 207 170 509   9 754 710 772 781
 283   6 118 213 233 739 115 774 197 813 624 690 225  93 321 198 685 746 884 778 162 309  91 732 229 631 782 706 363 775
 230 637 295 201 693 715 607 727 266 737 654 743 305 288 137 123 713 763 785 534   8 619 126  11  37 466 721 541 269 564
 252 600  80  92  43 450 573  82 656 698 725 669  74 284 251  64 729 696 769 667 681 568  10 678 259 719 642 589 403 512
 303 646 249 236 744 613 640 634 125 677 547 655  36 210  62  16 451 554 702 753 583 106 609 724   2 587 636 520 300 595
  75 676 529 406  71 244 628 552 705   4 504 700 177 134 615 220 658 485 701 625 128 749 202 551 335 617 537 662 374 651
 323 668 188 524 598 542 580 593 664 622  18 525  90 189  76  41 578 499 468 653 461 546 689 661 171 671 608 612 104 553
 101 620 319 246 584 530 398 489 519 566 616 105 340 426 164 301 588 722 670 569 287 590 592 682 150 488 517 565 130 641
 427 510 443 505 585 486 652 522 425 386 543 758 556 117 351 479 496  13 292 523 508 381 423 516 193 606 599 507 154 559
 242 614 356 490 368 487 626 455 648 549 571 538 329  25 503 659 494 476 453 596 483 576 603 446 388 456 459  57  77 491
 515 343 441 497 293 364 518 506 561 317 467 475 396 482 395 409 413 431 407 557 432 383 369 579 539 442 570 458 454 502
 433 545 540 428 457 498 346 469 375 353 514 270 478 470 618 330 444 473 377 360 463 480 345 424 764 397 373 437 650 404
 464 448 521 445 318 711 355 875 550 302 394 786 610 472 434 372 417 341 362 527 471 421 272 380 839 182  67 533 238 408
 399 296 791 338 349 531 359 367 414 492 415 449 560 726 253 392 419 322 440 325 405 429 393 400 391 484 861 366 773 376
 352 334 328 663 216 384 390 536 770 379 465 370 382 474 385 777 416 311 695 310 501 219 898 387 563 314 357 297 827 215
 629 410 438 738 326 402 186 361 217 250 339 462 601 741 348 597 354 264 298 886 812 789 350 401 602 430 226 436 286 336
 674 257 639 747 228 575 320 324 422 212 304 211 843 808 847 846 255 307 412 145 358 447 247 582 562 232 378 263 816 254
 761 389 638 344 803 108 807 221 760 267 234 273 823 635 853 867 200 289 169 172 633 268 891 306 411 160 148 342 435 308
 611 699 728 280 180 199 161 834 256 132 175 333 864 865 347 821 757 331 261 206 787 174 768 235 714 222 874 248 285 168
 889 119 511 742 574 103 555 315 673 265 143 245 842 572 316 723 818 841 258 112 586 208 594 845 513 165  96 194 591 107
 806 138 528 871 176 892 862 203 214 897 621 159 666 644 854 371 811 282  73 279 313 185 275 181 535  72 337 299 869 102
 766  55 716 672 878 155 687  84 887  48 204 271 863 526 643 799  85 116  81 196 868 855 860 141 660 849  39 173 209 129
 730 190 883 260 558  19 748 692 802 686 120 146 675 704 495 765 157 881  70  30 796 121 882 111 819  68 100  22 567 418
 605 830 800 647  88  78 783 332 820 665 166 152 604 581 731 718 814 127  54  99 838 493 131 183 227 826  29 895  66 133
 794 893 736 809 694  44 136 109 649 896  95 113 717 890 684 627  98 276  40  53 858 879 144  69 899  83 153 544 481  52
 750  14 801 797 866  31 840 191 815  21 163 178 577 733 851 623 835 158  86  34 657 151 900  45 792  35  56  89 532 894

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.94242e+06us (= 3942.42ms, 3.94242s)
Wall-clock time (full program): 3.97535e+06us (= 3975.35ms, 3.97535s)
Satisfaction error: 0
Number of search iterations: 1187
Number of local moves: 689 (including on plateau: 231)
Number of local minimum: 65 (including on plateau: 34)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  47 621 150 120 874 768 685 590 810 448  78 481 831 129  72 334 787 548 149 819 122 418 290 430 746 769  70 632 370 327
 732   1 167 857 146 269 432 697 862 229 140 848 257 118 317  87 890 407 384 266 586  99 794 854 262 550 816 581 806  61
 287  55 723 366 491 606 657 711 709 209 249 208 285 865 198  69 655 493 618  92 113 867 413 535 758  45  54 886 533 765
 281 274 501 855 439 506 676 124 260 571 239 217 123 212 251 815  52 652 164 433 566 572 852  68  59 660 695 641 880 877
 838 580  85 648 814 805 631 107 777 798 126 722 104 114 887 812 322 888 889 134 308 615 276  40  43 411  58 594  77  12
 195 331 707 151 896  65 693 132 786 315 135 400 283 885 441 745 258 240 846  73 560 892 199 136 275 844 218 295 809 710
 177 115 677 593 216 633 263 584 671 205 380 165 770 866 179 207 834 792 528 756 232 201 324 539 320 529  98 706 703 252
 103  16 898 804 763 166 785 230 563 649 670 106 242 383 247 299 193 355  62  84 774 830 608 171 377 294 878 840 897 228
 109  71 183 555 607 666 357 371 153 521 393 200 751 423 489 495 730 226 482 264 668 858 628 853 119 801 121 771 127 523
 311 192 335 422 713 227 486 184 349 273 537 515 849 425 445  46 282 793 233 644 870 338 398 278 392 791 720 344 807 316
 369 438 540  50 585 155 784 286 841 667 143 702 306 829 175 354 569 634 291 379 421 823 879 381  80 372 499  44 700 219
 408 237 234 524 736  49 741 339 578 351 708 742 519 352 405 461 833  32 900 573 483 130 459  82 856 159 435 243 743 203
 337 518 899  97  30 484 270 494  74 353 336 367 744 190 417 616 686 602 689 727 178 390 598 429 271 526 455 527 412 799
 817 589 453 368 415 163 465 625 231 245 772 694 359 449 350 386 859 664 108 330 559 558 333  27 497 255 456 627 452 409
 265 850 446 460 500 470 112 762 457 401 347 356 254 516 436 492 475 375  93 778 476 797 480 312 427 687 395 424 362 310
 683 325 876 197 672 253 388 442 466 342 394 522 530 474 737 609 463 587 189 468 490 319 462 651 364 111  14 645 399 443
 599 630  86 512  22   4 256 761 871 168 469 748 186 699 373 551 479 502 321 873 210 378 202 861 358 419  67 402 891 617
 734 302 307 513 498 557 624 760 851 650 102 376  41 543 246 549  37 508 385 396 458   5 614 137 845 414 472 478 431 682
 626 638 221 642 144 629 389  60  79 225 504  38 684  20 534 678 894 552 646 680 538 213 139 662 145 487 869 622 553 404
 564  57 284  10  94 579 397 547 328 747  66 595 717  24 663 872  53 525 726 554 236 750 789  75 643 613 565   9 715 718
 182 601 365 169 340 345  29 863 313  95 507 656 220 729 536 701 485 561 803 222 875 753 363 882 679  56 592  48 185 360
 542 640 223 248 773 541  34 531 148 690 893 582 194 611  90 304 610 314 577 128 451  51 546 836 698 754 576 298  36 596
   2 813 191 187 574 681 235  89 605 303 447  64 556 583 665 620 211  83 503 764 279 883 477 735 847 759 597 180 176 406
 510 496 517 788 289 811 382 206 261 780 653  96 654 828 471 434 172 603 326 329 635 332 731 450 843  81  23 410  17 387
 821 818 532 214  25 309 343 174 776 520 575 696 305 505 639 659 361 244 161 714 567 712  18   8 868 318 740 170 250 473
 600 767 133 619  76 832 296 658 238 781 895 125 544 779 705 188 426 162 391 341 301  91 152 884 467 511 514 403 196 440
 795 837 300 131  15 839 604 749  21 704 692 725 661 101 588 783 348 752 822 728 154 160 292  26 156  88 802 346 138 158
 733 612 775 800 724 259 374  13 110 796 637 277 293 444 835 297 420 241 141 688 116 173 647 755 157  28 766 464 224 716
 842 416 826 790 323 739 454 669 288  42 860 864 691 204 488  19  31 117 820 267 570  35   7 591 181 674 142 738   3 824
   6 675 881 825 721 105 673 757  39 437 568 428 562 215 636  33 100  63 268  11 719 272 545 827 782 509 808 147 623 280

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.17466e+07us (= 11746.6ms, 11.7466s)
Wall-clock time (full program): 1.17753e+07us (= 11775.3ms, 11.7753s)
Satisfaction error: 0
Number of search iterations: 6390
Number of local moves: 1794 (including on plateau: 795)
Number of local minimum: 557 (including on plateau: 112)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 733 785 836 240 749 632 378 625 705 379  24 803   3 330 190 141 689 235  93 706 131  81 554 879 142 450 273 505 604 620
 606 561 850 280 746 350 184 526 318 506 673 155 551 215 811 241 653 189 150 331  56 636 119 841 684 160 411 873 713 126
 109 813 407 740 329 172  40  26 418 193 820 586 635 365 743 546 436 169 121  45 833 693 677 862 645 129 430 647 675 211
 156 143 753 473 479 464 810 863  33 594 717 445 652 777 482 612 484 207 592 423 237 593 595 197 466  55 358 388 212 255
 791 263 149 524 889 327 426 502  54 528 691 325 110 599 859 161 372 660 556 871 105 205 107 650 607 285 283 744 608 264
 514 353 213 553 170 176 468  64 413 834 886 824 637 153 582 724  42 545 646 779 108 828 738 715  59 158 633  98 265 337
 587 571 338 382 288  53 289 843 757  16 373 360 296 295 374 548 868 490 166 742 851 664 328 404 116 343 839 437 712 185
 144 277 848 631 522 702 132 347 376 125  46 228 707 552 765 257 489 137 754 511 610 564 752  19 462 452 122 874 790 320
 726 117 162 471 543 539 617 165 622 690 747 157 572 771 231 508 394 463 432 317 201 352 140 366 892 734 538 494   7 547
 643 114 507 695 364 180 221 600 272 800 101 719 267 602 268 704  36 270 823 396 590 756 651 540 106 665 398 469 513 245
 500 575 286 560 574 247 152 260 634  75 666 569 611 541 102  60 762 883 562 773 899 136 472  70 306 827  37 313 487 576
  67 421 723 844 900 890 772 326 584 718 428 242 274 624 854 321 173  84  94 324 842 111  74 446  18 123 616 578 669 375
 380 412  97  77  21 640 701 755 420 481 776 385 615 357 784 417 342 419  72   8  78 750 688 467 492 799 840 415 537 290
 227 523   9 453 808 853 199 410 739 825 676 470 198 218 661 778 858 251 316 830 370 475 577 204 685 186  10 597  14  95
 596 768 377 362 439 301 266 819 202 192 298 311 458 103 455 591 559 614 344 679 130 391 309 589 503 737 210 397 780 735
 531  29 386 234 517 700 208 229 627 348 395 821 888 262  62 770  23 884 297 389 491 367 474 244 340 261 670 838 381 849
 846 699 276 454 448 406  86 120 302 542 402 195 447 300 721 532 322 252 869  90 544 797 530 486 832 671 168 238 146 794
 521 456 759 786 246 766 214 334 284 403  58 361 225  80 115 683 654 191 876  82 293 480 789 181 626 804 535 224 761 728
 896   6 727 520 580 674 605 269 860 497 182 147 857 409 527 363 183 319 401 566 601 275 493 648 422  68 736 148 495  41
 194  39 745 788  57 672 885  79 174 281 720 127 613 341 138  88 529 408 299 697 729  69 731  25 865 864 563 748 175 872
  48 730 798 256 223 217 291 533 308 501 444 534 118 822 128 549 817 774 764 449 609 682 135 188 657 696 424  12  13 795
 709 782 139 226 588 259 629 882 767 177 567 431 429 368 220 459 332 570 806 294 414  51  27 440 639 359 649 333 659 310
 509 465 518 847  34 812 814 793 568 687 619 159 399 856 278 801 178 216 154 433 239  43 558  35 875 387 710 435  44  49
 200 818 282 133 895 425 525 392  52  85  76 898 390 339 163 496 485 893 305 583 891 134 698 336 662 618 346 356 852 187
 315  38 393 457  50 681 555 894 371  66 233 711 384 722 400 250 179 668 536 171 877 835 355 775 230 100 686 307 598 678
 644 603 287 304 628 203  71 383 621 519 802 292 680 758 642 209 630 870 880   4 151 769 732 787 206  99 451 258   1  31
 104 866 510 405 656 781 809 438 694 741 249 253 460 369  17 461   5 667  32  61 867  28  89 829  63 565 515 477 623 881
 716 434 112 488 323  91 837 751 831 351 243 703 655 692 581 279 557 124 498 641  73 516  15  20 708 714 314   2 349 897
 416  47 861 236  22  83 476 222 164 878 573 805 113 441 579 303 826 248 232 816 145 442 796 760 196 763 658 725 354 335
  87 807 167  96 427 219 855  65 345 483  30 499 271 254 783 663 638 815 845 504 550 792 312 512  11 443  92 585 478 887

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.38947e+07us (= 33894.7ms, 33.8947s)
Wall-clock time (full program): 3.39277e+07us (= 33927.7ms, 33.9277s)
Satisfaction error: 0
Number of search iterations: 19232
Number of local moves: 4661 (including on plateau: 2470)
Number of local minimum: 1795 (including on plateau: 312)
Number of resets: 10
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 220  66 308 700 412 170 593 497  97 799  41 361 771 653 794  44 871 434 554 208 753 603  53 259  64 860  36 733 782 779
 790 800 694  65 506 660 167 798 869 893  75 448 131 775 116 783 231 857 165 316 158 200 824  29 151 777   4 202 879 152
 699 839  12  50 207 370  30 351 416 814 646 499 714   3 846 583 731 821 715  33 723 285 801   5  52 828  17 518 891  16
 745 248  20  49 135 219 192 827  74   7 470 353 726 204 796 709 647 817 716 236 751 264 829 261 458 849 550 432 601 330
 171 452 196 558 536 756  22 329   9  23 186 720 795 613 498 752 807  82 757 360 657 741 519 864  47  26 806 695 233 305
 168 107 739 206 706 755 352 141 858 298 409 500 485  59 566 561 661 686 744 197 688 713 337 617 117   8 697  28 245 867
 813  35 195 262 746 727 322 666 680 825 730 612 149 608 747 677 703 401 620 119  89 188 122  56 606 530  39 684 449 115
 294 633 426 483 616 761  19 123  40 766 678 242 848 808 863 176 750 765  46  48 263  45 237 900 655 154 637 664 551  24
 614  11  58 671 365 628 582 134 887 681 348 598 705  13 674 513 585 310 865 102 772  83 690  72 546 698 597 128 265 320
  25   1 312 580 594 837 571 124 691 624 157 786 702 187 584 406 820 190 630 100  99 163 577 621 246 581 718 638 132 819
 565 668 148 760 835 557 249 260 539 553 104 570 472  95 662 324 589  60 528 103 596  51 450 632 504 641 591 658 288 463
 477 230 516 478 407 578 615 383 462 468 525 476 482 396 381 350 469 687 461 496 439 743 136 722 552 325 133 610 113 405
 240 872  15 560 692 724 573 490 306 586  18 106 292 538 619 569 252 749 587 604  31 256 685 639 675 393 740 108 279 317
 307 842 512 602 118 515 386 595 343   6 609 509  98 268 397 611 474 719 520 634 271 767 403 574 564 142 413 543  37 736
 762 781 387 793 424 652 531 563 304 389 212 309 623 280 161 526 455 297 495 313 356 410 438 232 465 362 487 395 384 729
 442 404 544 402 366 475 769 457 445 299 418 648 341 363 444 435 390 385 451 894 425 537 211 600 392 527 373 380 371 327
 277 436 764 510 270 507 318 892 431 291 471 545 339 654 711 651 296 375 567 419 712 191 315 284  85 738 399 274 378 415
 508 367 489 599 293 109 523 792 377 408 467 456 861 283 342 693 414 314 491 355 737 459 682 464 541 209 788 364  61  69
 460 663 346 640 763 440 225 701 447 868 834 810 286 502  78 533 481 575  90 884 669 443 275 250 210 253 400 193 153  43
 898 667 802 321 340 227 636 287 311 466 883 160 222 379 479 295 221 511 301 689 446 696 243 529 505 172 319 607 417 486
 818 125 748 272 484 357 626 394 874 281 588 547 213 335 183 388 278 333 199 877 840 177 815 328  77 345 290 217 721 785
 354 338 836 178 273 282 349 182  27 605 398 832 493 645 358 778 189 254 524 856 735 627 420   2 890  21 114 257 812 886
 759 376 492 323 382 369 269 878 241 159 843 423 302 838 179 169 228  38  73 453 562  94 855 421 234 665 844 629 768 649
 332 847 670 823 631 239 859 635 201 454 556 258 224  80 129 422 427  55 247 568 732 334 137 888 126 773 255 758 555 300
 218 880 791 238  91 150 673 146 198 805 776 226  81 804 368 540 205 372 127 784 139 501 276 542 899 488 162 728 590 717
 480 895 572 181 347 105 235 244 185 130 548 180 215 428  10  42 214 742 875 845 174 797 826 885 850  14 854 359 430 853
  68  86 710 559 532 830 789  62 897  71 156 138  96 707 112 592 267 534 780 831  54 873 535 833 622  79 433 203 517 549
  34 643 173 787 803 143 870  57 656  67 503 289 889 672 391  76 194 841 184 344 166 642  87  32 650 734 579 576 659 774
 155 110 336 725 521  70 676 625 754 816 429 473 876 514 175 216 522  88 111 229 147 770 326 266 851 644 866 251 809 164
 822  93 704 140 120 303 494 882 896  63 437 441  84 811 852 101 144 223  92 618 331 862 411 708 881 679 374 683 145 121

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 9.89535e+06us (= 9895.35ms, 9.89535s)
Wall-clock time (full program): 9.92829e+06us (= 9928.29ms, 9.92829s)
Satisfaction error: 0
Number of search iterations: 4668
Number of local moves: 1385 (including on plateau: 619)
Number of local minimum: 395 (including on plateau: 71)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 846 163 175 882  92 550  14 612 728 855 607 158 833 888 817 108  88   7  78 843 768 312 116 161 234 468 875 535 534 168
 803 899 522 366  66 693 852 729  48 656 845 771 493 260 712  81 257  45 208 524 625 674 714  98 376 222  26 304 555  91
 542 413 195  52 212 874  61 737 651  82 515 400 872 573 440 150 115 265 877 111  87 745 485 489 797 297 342 832 564 740
 686 404 409 721 464 339 164 546 881 830 372 775 392 262 140 237 754 457 138 204 154 306 641 676 519 114 226 806 388 510
 516 179   2 702 229 539 127  49 449 235 840 788 645 369 856 157 577 431 857   8 488 410 824 141 739 867 670 199 238 384
 695 802 507 280  99 194 129 880 401 122  60 471  24 231 650 300 184 673 665 606 264 211 799 296 487 713 726 545 821 680
 198  65 169 761 134 708 900 190 663 131 863 709 302 147 595 386 439 724 502 325 259  29 732 271 659 281 615  85 844 829
 891 749 217 636 227  55 233 898 669 268 276  77 394 755 725 225  23 585 373 593  13 160 789 219 792 841 232 266 520 814
  79 385 809 609 368 551 307  95 794 119 402 313 424 850 274 477 746  31 252 523 692 604 627 540 574   9 757 337 553 414
 791 622 397 738 381 189 896 811 261 412 798 239 332 216  32 246 323  70 866 396 839 250 273 357 583 192 764 460 275 506
 383 351 218 897 247   5 240 253 705 100 597 588 310 389 429 823 847 710  25 105 715 837  41 889 812   4 624 353 282 736
 561 347 210 871 800 808 826 448 142 691 533 350 441 277 858 214 630   3 508 419 270 318 649 301 290 446 586  62 162 494
 284 648 447 365 571 308 730 644 316 838 182  68 244 679 123 543 303 570 472 862 492  86 241 765 405 327 657 860  34 451
 329 895 293 527 444 813 580 562 796 616 500 599 202 294 815 660  27  44 352 475 456   6 326  35 443 390 591 420 415 610
  12 156 425 320 473 773 177  74 379 831 557 596 781 361  16 864 854  10 432 173 623  40 442 690 467 498 767 835 868  21
 544 598 662 328 242 490 418  76 455 403 356 230 430 355 484 267 538 654 335 480 292 769 433 478 427 421 395 517 559 879
 834 101 529 807 166 374 120 428 505   1 783 338 255 672 706 518 466 213 393 181 486 152 828 849 345 621 315 566 859 104
 340 547 667 272 331  39 298 452 734 611 528 614  47 317 469 434 360 483  72 774 572 885 620 497 305 637 565 438 422 185
 291 178 560 322 753 499 112 652 279 633 309 793  33 567 626 687 790 236 126 890 223 286 221 530 285 853 146 682 287 666
 698 752 370  59 684 548 367 495 406 481 133 776 125 526  28 382 635 619 870 153 416 531 215 589 770 552  17 283 435 600
 482 653 254 378 751 655 209  84 556  71  46 558 541 203 628 521 642 699 278 496  80 321 220 756 592 675 503 299 851 513
 445 563 717 474 399 269 818 742 640 375 143 697 465 602 643 584 631 256 664  73 671 423 258 658 514 118 391  75  90 117
 201 735 594 180 701  19 780 450 784 509 172  18 617 159 346 825 206 719 876 703 349 878 537  43 436 148  97 766  54 613
 417 777 576 408 458 869 894 200 343 103 454 191  51 668  64 601 618 536 707 605 288 694 582 248 205 689 151 470 581  67
 362  69 733 186 836 106 805 149  93 646 525 243 822 587 759 661 459 782 634  57 722 700  89  96  20 763 228 354 137 892
 314 113 578 629 608 330 554 512  15 688 747 334 683 727 731 744  56 718 371 380 511 207 842 696 136  53 109 504 501 124
 319 295 758 463 348 263 785 795 171 861 251 590 377  42 167 110 704 884 364 887 128 893 289 816 196 407 685 358 121 188
 197 638  37  63 801 750 130  83 461 344 387 883 873 886  50 579  38 711 411 491 716 786 426  22 723 778 341 741 139  30
 144  94 681  36 810 336 170 762 132 176 632 155 720 479 145 678 743 848 333 603 568 639 245 760 249 772 437 165 779 224
 311 324 804 183 820 569 819 107  58 827 102 193 787 174 187 453 462 532 476 575 748 363  11 549 135 359 677 398 647 865

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.89262e+07us (= 18926.2ms, 18.9262s)
Wall-clock time (full program): 1.89599e+07us (= 18959.9ms, 18.9599s)
Satisfaction error: 0
Number of search iterations: 9077
Number of local moves: 2406 (including on plateau: 1063)
Number of local minimum: 773 (including on plateau: 145)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  77  85 260 836 804 106  60 555 727 277  21 894 261 826 788  65 375 517 848  79 249 130 710 456 900 779 777 330 339 384
 685 799 472 156 356 488 416 355 306 860  64 642 845 863 325  13 450  38 856 291 862 877 446  25 842  45 762 102  91 183
 158 521 190 726 756 146 854 694 829 155  72 524   5 264 880 144 674 858  23 724 336 820 448 528 781  76  30 773 213 313
 434 476 776  33 774 577 331 219 270 775 120 236 171 712  84 154 621 471 300 739 796 655 761 733 892 281 136 386 385 217
 466 288 207 846  71 652 649  80 824 157  27 391 114 789 867 152 301 797 550 806 811 769 622 266 692 194 100 509 310 208
 322 647 383 702  75  17 303 109 767 791 335 668 419  68  26 890 315  69 679 256 753 782 421 841 706 143 855  29 425 719
 807 177 671  40 749 805  34 254 603 495 544  67 575 596 654 101 186 723  28 293 698 665 505  18 458 859 175 312 790 633
 888   9 541 319 683 519  93 107 126 549 184  41 104 436 717 294 576 431 497 522 585 224 743 895 547 672 630  74 624 885
 695 715 587 838 597 407 149  37  22 588 422  43 200 542 795 718 220 689 538 520 591 268 265 713 202 684 532 323 525  90
 608 376 240 574 125   3 210 245  11 570 843 589 810 800 703 747 166 579 636 666  89 348  44 643 225 827 673 263 629 273
 205 559  59 650 169 638 392 182 212 259 583  49 365 768 640 635 581 511 343 432 333 501 625 247 350 818 594 230 763 822
 206 802 492 302 772 620 453 377 548 123 477 410 185  52 341 231 560 545 174 648 353 662 535 595 659 582 701 610 445  55
 646 404 676  78 606 551 269 198 801 460 483 250 660 765 258 530 408 584 145 388 510  20 513 546 426  61 358 741 678 502
  12 405 523 147 619 851 599 369  42 381 896 282 124 379 611 463 813 586 557 786 533  35 571 680 403 357 137 467 840  47
   1 160 374 516 607   8 883 714 414   2 744 602 817  36  53 757 359 284 229 690 601 725 569  57 433 396 475 539 623 847
 514  50 681 593  19  82 498 172 398 553 512 402 821 380 534 473 241 503 614 326 370 526 833 443 342 876 161 705 697 196
 361 165 271 493 424 420 711 793 417 441 455 578 119 481 468 699 837 500 442 543 128  15 832 853 327 429  99   4 720 490
 540 347 529 491 390 387 508 872  54 295 189 897 487 251 527 118 454 397  39 360 809 731 478 561 592 368 881 382 470 111
 320 882 428 444 233 338 691 645 816 494 243 162 103 221 394 798 708 465 878 344 329  14 372 464 440 435 427 318 670 439
 246 687 275 641 746 393 267 299 794 362 634 730 482 682 371 879 783 447 308 675  81 289 127 191 354 237 345 363 209 618
 163 803 628 415 352 197 248 728 567 346 364 469 627 337 201 262 658 738 274 378 884 722 754 286 457 316 228 279 298 536
 823 644 515 449 764 181 609 752 222 729 834 138 506  86 292 218 413 334 296 598 195 409  24 227 399 886 828 868  98 178
 192 891 150 552 211 792 558 430 309 297 626 852 835 290 278 406 193  51 758 151 280 748 700 167 255 226 873 311 412 721
 600 307 140 462 556 400 751 849 351 686 242 590 605 864  83 750 244 176  88 257 204 180  92 887 304 893 139 815 349 651
 865 755 234 537 131 661 214  58 438 367 814 340 504 484 223 232 283 187 875 173 740 507  97 479 276 819 844 565 117 696
 518 760 215 168 825 489  32 317 129 328 857 153 677 401 135 770 452 272 616 285 474 637 766 170 617 808 459 564 141 480
 613 563 423 568 395 663 734 735 656 105 314 759 203 709 573 784 121 132  16 554 332 253  31 235  66 179 869 850 411 669
 874  87 870 133 108 812 742 889 639 667 216 580 631 148 252  96 732 778 899 188 418 496 122 373  94  62 199 531  48 831
 389  95 839 664 486 451 653 745 657 632 707 716 572 239 612 898   6 737 704  63   7 437  10 615 366 134 113 485 324 159
 287  56 866 142 112 861 604 736 566 771 693 461 688  46 830 238 785 116 305 780 164  70 499 321 110  73 115 787 871 562

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.55858e+07us (= 15585.8ms, 15.5858s)
Wall-clock time (full program): 1.56185e+07us (= 15618.5ms, 15.6185s)
Satisfaction error: 0
Number of search iterations: 6944
Number of local moves: 1955 (including on plateau: 988)
Number of local minimum: 625 (including on plateau: 130)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 329 807 739 480 155  53 294 236 111 303 167  67 828 871 246 760 286 788 812 163 346 117 190 424 776 777 854 868 444 224
 820  11 676 104 159 124 160 723 103 826 100  39 429 688  69 725  22 817 730 785 656 604 732 752 144 179 102 686 805 745
 814 827  46 211 150 317 698 595 816 741  34  73 835  74 719 804  63 350 830 127  57 125 314 838 744 899 822 470   8 114
 757 809 110 340 291  60 221 402 787 794 142 199 834 140  72 861 784  95 831 495 824 612  25 209 458 694  13 797  26 833
 737 781 216 693  16  62  64 278 779 811  33  61 748 451 449 819 743 249 641 115 106 844  66 780 802 313 147 631 381 699
 754 735 617  91  84 453 336 722 728 658 122   4 769 192 765 638 121  14 408 304 755 200 836 756  21 709 645 193  92 793
 673 789  93 505 164 729  31 691 621 703 714 138 712  37  68 654 832   6 582 186 562  17 697  65 680 420 821  75 608 642
 790 663 218 108 798 318  85  24 715 692 214 670 718 169 261 796 475 151 687 392 135 446 567  15 574 555 774  32 720 753
   2 704 203  38  18 627  30 624 105 623 622 463 580 851 395 518 523 113 650 348 247 898 590 601 742 335  71 869 552 573
 653 575  59 210 614 636  76 320 452   1 545 607 306 579 439 166 648 556 651 234 829 241 606 593 640 491 679 116 461 532
  55 548 561 378 842 672 290 512 597 619 892 664 707 426 235 357 665 187 583 293 536 403  47  12 490 568 427 683 230  36
 553 412 474 792 717   5 466 330 682 467 288 282 550 145 605 559 655 176 269 610 587 280 630 405 456 173 706 208 526 507
 522 447 524 397 534 538 415 333 685 440 222 633  42 384   9 442 643  83 477 502 154 283 516 393 554 576 433 849 874 611
 528 431 473 632 332 497 398 107 547 481 504 662 401 239 101 598 237 581 520 496 394 185 498 501 527 594 531 120 860 540
 500 443 515 352 565 432 454 476 678 386 484 387 508 521 488 578 231 510 441 639 396 371 419 537 312 416 434 506 437  99
 369 430 472 483 878 404 383 240 596 353 600 482 410 618 602  10 569 750 514 315 377 338 295 307 478 457 389 468 589 339
 459 390 271 519 328 435 400 628 423 438 418 411 380 570 668 355 513 469 334 647 178 492 571 464 391 485 487 646 422 323
 349 347  45 301 657 471 337 891 341 407 359 425 351 856 701 316 276 370 354 708 563 539  28 275 486 421 375 768 549 649
 362 360 867 503 345 243 376 382 414 634 270 257 268 689 724 325 284 733 847 711 815 525 374 245 409 322 372 223 363 273
 493 479 298 196 766 462 749 541 213 227 886 358 344 311 661 174 292 326 388 801 727 287 255 778 690 308 319 220 299 667
 603 198 366 746 494 256 591 897 233 853 279 321 277 546 460 762 436 841 773 297 736  56 181 428   3 417 175 450 588 252
 265 368 895 810 700 225 877 517 266 365 684 533 327 564 660 302 356 620 158 609 207 865 364 202 219 455 310 331 244 217
 156 123 343 846 130 880 379 445 119 289 629 324 342 883 626 659 373 799 263 837 535 577 889 152 281 126 251 197 900 162
 171 165 843 813 177 859 823 215 285 132 848 825 184 613  51 705 242 783 188 262 758 592 770 872 157 128 134  96 153 671
 250 226 713 738 786 884 870 136 131 260 272 855 180 625 850 143 509 759  58 696 148 761 511  89 806  97 644  79 300 139
 296 195 675 772 887 367 775 681 149 616 879 584  19 361 731  78 716 599 191 248 652 585  20 465 238 894 206  50 201 385
  27 254 751  86 873 747 635 109 133  49 740 695 413 543 406 259 170 399  88 674 161 852 862 137 763  52 893 771 791 182
  70 845 189 172 544 782 542 168 721 305 795 866 204 267 881  43 840 808  81 232 194  44 764 529  40 876  54 839 205 615
 448  41 586 669 258  87 875 726 857   7 499 863 666 212 264  80 129  94  48 229 734 558 800 888 557 637 896 702  23  82
 710 112 677 530 253 890 885 566 228  35 274 767 183  90 309  29 882 489 118 560 146 818  98 803  77 141 551 572 864 858

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 8.50736e+06us (= 8507.36ms, 8.50736s)
Wall-clock time (full program): 8.54046e+06us (= 8540.46ms, 8.54046s)
Satisfaction error: 0
Number of search iterations: 3038
Number of local moves: 1184 (including on plateau: 513)
Number of local minimum: 224 (including on plateau: 46)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 885 621 843 753 346 758 535  80 772  25  62  50 671 706 853  37 175 581 619 828 777  88 141 635  76 569 857  47 101  24
  65 355 879 110 100 553 899  81 728  66 722 561 820 149 479  82 898 787 115 803 576 651 503 719  84 701 173  58 678 120
 122 785 878 140  60 626 897 199 731 620 555 145 849 832  85 147  87 872 143 875 124 125 158 244 863 883 372  38 166 894
 138 900 207 873 198 864 896 667 831 153 720 242 703 181 130  59 268 733 123 880 614 193 656 871 136 775 111 262  40  91
 168 583 594  98  57 579  83  95 829  94 519 191 558 735 566 161 258 770 176 868 841 300 827 748 163 862 186 891 148 567
 155 782 205 184 890 869 209 599 792 227 397  86 597 741 842 217 103 876  78 270 892 157 277 895 786 151 858 108 197  75
 220 573  48 233 135 818 893 208 754 172 816 127 740 705 418 666 180 709 188 796 747 150 192 884 302 886 162 223 195 375
 210 640 215 241 365 802 212 882 860 320 313 231 595 838 538 214 307 318 245 238 805 240 804 888 870 321 332 374 107 190
 297 343 334 390 707 887 234 225 877 296 767 239 825 793 243 203 265 837 408 293 204 812 795 309 171 206 350 221 185 799
 248 357 382 232 323 822 422 299 322 811 744 327 697 269 716 717 364 325 464 311 768 330 729 480 285 301 340 279 414 437
 305 845 159 183 341 789 428 623 638 427 881 385 273 189 690 835 202 447 354 780 448 174 889 393 219 256 267 429 304 362
 453 319 411 463 303 743 283 600 424 384 507 235 407 477 755 844 366 383 836 730 259 264 586 249 369 336 443 379 395 312
 381 371 263 483 338 734 387 467 308 361 867 410 514 499 691 261 509 851 550 337 481 353 286 465 284 328 417 339 546 434
 520 349 250 498 373 396 380 315 398 211 548 378 547 502 846 368 452 506 476 399 271 394 392 439 859 497 438 505 563 445
 426 478 423 409 440 454 442 874 359 360 431 525 314 641 292 559 401 281 470 358 370 459 415 552 254 866 272 551 492 347
 527 531 344 560 485 402 275 342 508 493 187 528 400 516 460 432 469 468 510 405 412 458 490 486 584 545 495 451 436 316
 430 537 533 420 421   6 513 524 351 607 178 602 536 456  44 425 391 475 403 652 517 444 450 461 500 692 534 655 345 413
 433  54 455 446 634  49 457 484 466 521 291 363 257 523  99 441 603 386 474 577 572 657 377 615 631 473 530 649 472 526
 501 570 562 639 280  32 628 590 494 557 134  21 213 608   3 471 611 389  13 589 618 605 449 329 593 515 575 642 662 622
 585 137  12 419 504  10 489 230 565 660 295 554 487 587 146 482 580 367 604 229 702 592  79 228 685 630 806 612 539 700
 574 128 543 540 654 406 578 298 164  69  23 512  64 704 625 661 819 529 693 333  97 556 624 511 435  55 616 549 518 637
 645 177 532 646 156  45 750 610 348 736 627 653  36 170 154 114 544 462 609 541 682  72 132 288 723 564 522 694 571 712
 696 274 688 683 848  14 732  26  20 659 669 788 644  61 376 118 496 131 763 588  19 686  22   5 582 801 665 718 680  63
 673 226 591 664 568 152 648 672  18 643 196 821 310 113 356 761 808 352 756  42 598 636 727  11 773  39  53 632   8 668
 745 104 746 738 606 289  46 675  96 613 711 601 194 658 290 760 676  89 416 201  70 778 116 126  15  33 757 797 752 817
 813 260 751 790  27 542  28  16 119 765  17 856 237  34 335 781 815   4 647  43 306 784 629 106 698 117 617 800 807 771
 713 714 739   2 850 182  35 679 218 791 266 699 251 142 491 721 776 278 834  68 247 317 404 726 139 684   7 687 826  29
 823   9   1 109 847 331 129 695 165 737 724 759 633 216 861 840  31  52 710  73 102 742  93  77 488 133 783 824 766 762
  56 663 674 715 794  67 725 650 160 749 236 852  92 224 276 324 839  90  74 287 144 689 677 105 779 255 798  71 769 681
 708 830 253 854 865 294 282 810 200 388 112 774  51 246 855 814 222 167 764 121 252 809 596 670 169  41 179  30 833 326

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 6.49312e+06us (= 6493.12ms, 6.49312s)
Wall-clock time (full program): 6.52603e+06us (= 6526.03ms, 6.52603s)
Satisfaction error: 0
Number of search iterations: 2177
Number of local moves: 794 (including on plateau: 316)
Number of local minimum: 149 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  23  57 378   9  41 867 485 456 359 876 550 289  14 639 826 206 760 479  68 423 608   1 853 720  73 837 419 738 646 815
 366 274 712 573 628 486  10 594 444 579 750 220 650  64   4 596 517 157 779 369  98 484 821 546 787 296 567 204 622 318
 790 186 580 813 526 146 734 595  89  79 264 677 820 896  39 187 388 320 304 335 822 730 702 277 759 111 724 143  15 464
  56 196 849 675 680 785 365 880 576 783 453 480 462 113 521 263 827  83 279 173 878 294 250 852  76 424  54 361 604 223
 343 522 762 336 380 660 552 285 861 451 178 152 195 688 266 358 192 241 441 163 328 686 900 723 271 177 689 311 699 705
 556 599  63   8 839 437 450 268 137 755 563  47 636  97 695 609 100 252 782 401 831 647 136 483 225 858 314 722 708 297
  33 348 393 591 851  80 392 168 306 324 700 351 214 868  45 772 524 537 147 818  96 883 817  34 120 742 631 332 763 635
 673 145 670 106   5 232 717 211 756 886 434 387 429 648 167 103  27 713 806 732  37 718 807 240 217 140 643 303 697 866
 617 667 575 875 674 654 664 148 893 212 515 409  59 652 302 427 751 665 104 786 258  52 121  40 174 235  29 627 487 843
 500 403  87 570 400 376 683 687 799 349  48 138 498 551  46 796 475 557 122 338 691 133 657 624 109 819 668 228 582 581
 362 373 139 290 585 347 848 523 119 372 307  74 640 127 737 149 727 586 597 743 287 283 529 618 440 621 758 812 520   2
 544 510 117 881 492 102 554 207 329 547 873 508 256 533 231 832 663 565 471 183 653 236 545 701 442 108 234 200 356 642
 428 741 262 375  31 509 514 857  51 598 116 854  38 189 587 275 478 612 694 488 402 308 345 725 342 295 193 804 749 655
 503 847 339  65 199 414 679 641 682 357 394 125 458 615 396 504 684 793 330 151 490 452 249 662 482 512 389 251   7 845
 288 477 159 257 735 789 625 888 265 433 123 739 300  30 825 882  25 144 326 669 153 170 577 432 501 564 227 872 472 568
 835  75 707 316 449 856 331 540 404 312 830 572 862 325  22 461  85 833 491 438 415 398 370 703 773  55 230  44 284 499
 474 493 301 219  19 874 126  71 399 706 286 753 528 470 726 327 811  86 496 242 895 350 406 171 729 353 363 736 543 562
 379 775 368 466 768 611 352 270  17 180 863 716 574 305 181 420 692 184 531 519 731 752 616 439 454 355 160 237 346 254
 405 238 704 191  53 860 709 310  42 383 313 770 855 630 620 578 548 661 898 218 614 395 261  28 354 248 198 194 645 592
 244 593  94 761 446 374 298 671 834 549 253 715 600 340 844  99 777 226 518 371 769  81  21 571 846 239 408 134 391 448
  26 337 425 780 435 154 384 771 659 559 202 810 299 606 465 803 259 417 333 463 216 495 267 282 678 309 745 798 245 293
 421 413  77 323 155 166 644 698  11 115 613 870 629 229 164 416 322 824 890 418 334 892 431 656 481  32 897 210 430 754
 150 532 823 203 747 158 292 185 397 561 233 744 711 638 740 497 280 169 511 243 377 808 513 539 894 411 269 190 445 255
 457 774 536 506 809 626 507 887 721 315 553 175  24 784 215 278 467 530 649 260 224 607 182 142 410 367 634 494 110 272
 156 201 176 879 681 719 422 685 690  82 623 273 666 569 885 188  67 602 710 505 132 131 197  92  90 767 632 778  88 829
 828 788 757 319  49 135 112 129 797 222  62 317 588 541 841 672 385 583 246 209 733  43 468 746 610 884 814  70 489  78
 459 840 566 179 865  84 291 107 637 542 141  20  18  36 619 390 764 781 502 676 516 795 105 469 805 794 838 455 130  91
 869 162 447 728 696 535   3 165 651 791 693 128 538 603 473 412 436   6 205 589 172 765 161 281 776 748  66 601 714 101
 871 899 889 877  69  93 247 558 114 584 816 360 118 124 590 555 426 382 213 800 221 891 801  61 276 364 341 864  95  16
 859  50 560 344 208 386 525  60 476  13 766 842 836 605 443 460  58 527  72 792 534  35 407 658 321 850 381 802 633  12

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.5419e+07us (= 25419ms, 25.419s)
Wall-clock time (full program): 2.54521e+07us (= 25452.1ms, 25.4521s)
Satisfaction error: 0
Number of search iterations: 12219
Number of local moves: 2881 (including on plateau: 1286)
Number of local minimum: 1136 (including on plateau: 145)
Number of resets: 6
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 874  73  55 855 866 896 359 626  50  17 136 494 128  41 869 247 416  70 714 109 757  89 836 259 858 160 894 787  98 882
 127  15  61 701  76 890 877 809 356 863 781 320 242 745 592   8 811 768 561 660  80 431 175 623 622 155  46  22 358 740
 170  37 571 656 204 899 688 885 176  74 510 646  59 765 235  86 774 887 857 520   7 186 502 114 830  87 854 209 183 844
  43 197 495 659 837 755 814 130  93  81 148 546 694 161 400  84 624 880 756 705  42 165 568 458 692 172 374 697 685 560
 741  49 786 816 849 103 616  64 158 486 152 832 112 683 865 102 709  44 771 294 153  23 883 250 208 177 728 892 750 219
 185 730  79  62 245 412 850 278  38 168 335 859 339 886 667 839 555  96 871 677 282 147 222 666 590 251 722 639 206 619
 119 727 340 777 167 707 449 240 166 808 735 236 198 773 888  78 599 132 793 788 194 164 651  45 764 258 570 861 104 184
 270 113 287 792 308 689 711 873  57 829 193 822 262 313 295  65 847 286 862 214 345 124 769 884 252 532 652 273 327 269
   4 309 267 260 248 713 550 876 298 463 228 820 833 317 823  27 889 229 492 490 658 864 268 803 484 129 188 312 402 271
 752 207 575 466 241 481 593 579 805 569 784 703 330 595 101 353  12 224 523 504 893 255 289 234 281 381 553 380 462 390
 352 277 275 383 280 826 605 414 332 318 442 853 135 265 310 220 867 467 731 860 319 283 797 541 263 354 544 472 456 274
 173 284 290 304 299 647 872 719 355 870 218 818 244 195 341 645 439 266 879 475 749 690 301 210 411 325 212 433 455 396
 357 366 141 311 367 815 558 364 363 444 712 238 529 306 430 452 403 700 565 276 376 842 344 535 420 395 485 898 138 385
 348 305 368 405 453 611 525 409 333 421 190 451 436 552 548 292 419 522 633 891 256 407 426 878 375 539 422 537 302 261
 316 724 386 373 253 488 257 447 471 428 123 435 489 446 423 754 372 328 460 763 398 526 497 338 508 404 399 531 461 717
 377 554 589 334 454 322 545 506 394 640 473 574 681 479 418 369 429 440 543 415 448 437  58 465 120 360 387 521 738 445
 547 585 518 391  31 370 331 491  94 469 347 680 632 425 511 775 424 607 162 514 477 609 612 441 540 527 297 417 163 528
 427 361 501 478 572 300 293 507 606 180 770 408  60 684 107 868 389 315 143 563 443 542 496 576 519 675 145 379 580 628
 614 272 181  88 668 856 233 662 634 337 468  91 482 655 378 562 710 503 393 336 549 875 223 140 464 249 149 517 649 577
 450 591 635  40 343 365 384 538 221 457 895 230 648 566 742 498 321 459 288 476 534 307  10 613 596 676 151 800 470 211
 564 615 708 654 556 227 285 687 682 137 663  68 533  83 661 584  85 499 200 530 342 524  72  75 670 630 346 621 657 557
 480 631 650  52 674 154 144  95 827 192 802  77 720 134  19 644 900 594 182 106 759 718 169 303 618 831 254 513 587 686
 638 699 673 748 588 226 146 133 691 698 604 237 746 329 500 785 203 679  25  20 672 608 174 388  56 824 231 202 239 753
 653 636 734 737 601 264 438 150 704 371 196  53 813 664 515 487 314 794 291  47 761 279 671  34 118 597 157  66 789 581
 747 817 702 215 582  16  71 627 819 693 696 225 715 131  30 758 159   5  29 600 610 578 744  82   6 551 897  92 602 716
 629 743 171 725 509 115 406 205 778 669 191 246 603 583 187 586 201 834  11 516 706 434  39 643 767 117 810 122 848 121
 474 642 838   1 841 125 413  63 807 782 324  18 821  99 350 625 105 751   9  13   2 723 790 840 733 760 598  14 828 126
 881 721   3 410 567  36 189 780 736  21 729 362  33 179 178 846  26 845 351 505 766 739 493 678  69 812 116 637 772  35
 806 392 835  90 726  51 100 326 776 232 559 382 799 665 349 852 296 243 323 432 401 804 795 779 108 762 483  54  67  28
 397 843 801 732 110 156 213  32 695 798 111 791 199 796 783  24 217  48  97 216 536 142 641 620 573 825 851 617 139 512

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 7.54642e+06us (= 7546.42ms, 7.54642s)
Wall-clock time (full program): 7.57956e+06us (= 7579.56ms, 7.57956s)
Satisfaction error: 0
Number of search iterations: 3180
Number of local moves: 1214 (including on plateau: 569)
Number of local minimum: 224 (including on plateau: 63)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 749   8 864 192 854 188  22  86  10 201 865 814 720 155 115 731 878 861 846 862 237 339  19 221  36 394 392 748 259 849
   5  33 706 139 788 839   9 355 540 137 853 729 876 123 106 857 859 842 866 352 830 207  85  51  60 732  37 780   6 713
 746  21 709 293 590 282  26 167  75  96 875 833 828 275  41 808 693 856 206 794 648 734 223  50 328  58 797 700  44 719
 803 753 799  80 791 104 772 144 469  23 581 672 482 234  54 703 769  76 823 715 793 541 124  38 166 418  62  35 754 737
 724 763 870 360  13 777 656 126   2 244 102 795 782 295  12 750 669 821 116 770 838 333 125 257 335  14 773 779  53 361
 747 760 832  18 786  20  48  81 826  43 680 804 587  29 442 631 662 640 708 694 723  16 173 349  27 453 712 663 105 256
 650  25 649 281 735 743  52 416 796  47 572  78 702 199 435 699 420 761 560 742 365 710 128  24 181 243 227 722 698 655
 625 657 620 145 740 675 705  61 768 232 659 716 730 267 615 701 578 571 153  15  87 728 397 108  40 165 384 654  45 674
 558 668 584  46 717 684 726 133 607 800 178  69 289 117 215 537 441 516 671 697 652  65 258 570 522 172 100 636 623 664
 704 568 647 322 608 707 613  95 642 218 622 611 646 118 225 695 528 506 427 552  28 592 208 393 174 310 148 434 579 595
 370 626 767 498 531 621 515 347 725 679   4  59 692 519 497 556 569 605 549   1 539 501 229 372 543 107 169 673 641  11
 776 505 521 561 596 574 718  91 464 599 721 185 495 446  17 467 359 597 170 633 563 426 222 312 459 325 195 555 451 512
 536 665 653 400 443 500 651 379 609 554 594  64  56 644 634 645 454 429 407 508 545  73 120 458 492 417 150 567 488 380
 395 520 466 409 473 233 544 444 565 529 550 462 530 386 391 280 573 527 439 535 255 399 612 356 483 364 502 273 526 494
 424   7 348 532 503 510 588 406 292 624 477 437 421 358 509 583 200 357 496 438 577 635 468 553 448 368 431 564 450 511
 514 582 436 283 332 580 616 517 601 445 524 449 268 410 789 401 321 461 471 412 546 287 465 387 319 414 324 385 586 390
 388 413 430 525 485 504 456 688 316 523 398 363 486 346 470 404 815 463 353 338 374 377 425 311 562 460 557 589 351 345
 415 547 297 764 383 493 472 538 860 396 253 337 835 403 274 228 593 263 299 220 329 378 727 617 341 478 819 277 376 303
 752 300 307 433 241 336 375 627 867 320 373 817 313 484 327 294  77 371 575 447 491 736 534 350 309 639 487 205 265 863
 122 518 367 787 270 366 285 837 389 603 852 288 251 284 774 666 248 326 452 886 194 811 670 291 262 499 323 402 240 252
 119 296 315 369 342 411  84 757 331 855 354 247 507 475 428 314 618 602 302 317 848 249 685 630 306 683 751 408 171 741
 278 141 112 810 231 138 226 474 628 479 422 344 419 851 230 236 381 481 298 193 213 895 783 643 873 881 676  93 301 785
 290 239  34 682 305 877 250 440 176 261 272 606  72 661 455 131 191  63 897 216 872 334 805 781 869 696 758 140 888 254
 147 260 196 766 246 304 816 884 203 180 566 629 343 871 807 271 182 152 658 168 245 330 784 559 660 604 489 183 801 211
 136 204 184 831 187 880 308 619 101 879 235 210 189 813 638 286 269  99 242 149 197 827 841 843 900 423 576 209 689 551
 264  32 276 632 266 190 163 744 279 806 164 598 219 820 686 382 834  39 186 778 177 457 678 844 745 885 513  49 585 224
 156 868 146 111 790 614 850 894 179 825 127 142 476 890 771  67  94 198 892  89  74 214 548 677 762 157 891 151 792  70
 158 845 161 681  82 162 711 733 217 610 103 202  42 667 889  83 121 159   3 840 687 175 480 759 738 591 818 883 755 160
  66 893 110 809  55  90 896 533 154 765 134 318 129 600 822  79  31 802 238  97 490 714 887 882 739 874 340 690 135 143
 898 798 109 756 132 113 362 899 824 542 405 637 130 775 847  30  88  71 212  57  98 432 812 829 836 691 114  68 858  92

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.67258e+06us (= 3672.58ms, 3.67258s)
Wall-clock time (full program): 3.70579e+06us (= 3705.79ms, 3.70579s)
Satisfaction error: 0
Number of search iterations: 1079
Number of local moves: 726 (including on plateau: 222)
Number of local minimum: 47 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  95 275 137  76 100 761  83 721 177 549 338 123 688 898 486 240 587 539 478 626 589 290  63 884 128 837 820 775 344 808
  68 893 868 161  46 752 654 601  24 672 780 118 662 101 899  36  58 665 117 220 690  41 149 147 827 503 849 307 860 747
 151 881 864  91 182 834 664  48  19 221 830 693 805 896 179  21  73 744  33 754 847 588 760 818   9 125 146 505  29 705
  71 342 897 895 238 764 648  96  67 636 279 191 874 308 224 115 207 891 215 276 850 173 548  98 119 826 391 742 709 825
 885 164 524 488 886 323 804  85 168 319 250 865 894  77 882 427  87 358 277 351 858 736  66 206 132 172 135 859 415 822
 252 127 522 697 374 407 802 666 303 504 714 787 140 794  62 193 498 792 622 745 232 166 237 649 236 230 116 862 267 519
 211 807 395 203 287 765 880 306 186 650  64 213 576 176  86 704 254 679 658 815 848 694  59 305 779 202 231 718 189 575
 212 292 843 756 170 726 145 879 357 832 216 521 890  80 833 354 331 695 283 160 445 789 876 159 256 218 269 380 473  75
 180 888 566 647 263 900 249 195 335 767 844 877 553 187 153 294 245 565 266  40 759 572 205 255 422 329 162 507 634 656
 470 373 348 841 514 727 469  27 274 350 861 356 676  70 214 181 334 381 731 284 326 766 517 337 483 352 309 481 621 842
 438 126 735 740 340 784 114 476 359 730 711 235 148 836 291 318  15 408 414 875  10 771 325 466 464 197 372 869 627 321
 677 678 482 304 432 178 499 201 495 286 301 889 509 396 327 526 330 285 288 365 800 811 449 264 361 453 243 428 616 642
 384 322 737 360 450 261 506 887 452 532 371 528 543 333 454 324 496 577 383 768 347 439 223 226 311 455 399 508 429 510
 421 259 733 370 167 686 299 472 320 368 463 251 484 645 272 461 852 416  23 719 430 394 198 316 853 389 448 388 873 545
 446   7 598  84 846 456 516 783 397 417 302 289 418 423 460 809 262 346 683 474 376 400 451 386 403 258 410 479 458 878
 385 390 465 405 367 434 600 447 497 345 480 571 273 555 668 475 568 419 378 631 282 437 542 398 349 363 489 490 392 420
 412 537 171 618 698 406 433 375 426 362 253 431 402 169 442 531 563 366 883 343 209 247 536 533 317 623 669 570 554 436
 425 574  74 567 523 314 530 468 547 278 857 241   1 582 491 564 520 534 339 411 199 617 515 556 513 660 377 467 190 581
 585 280 244 225 544 444 613 753 546 121 644 341 459 379 487 527 222 682 107 635 602  82 560 538 441 597 501 673 248 435
 550 462 174 133 579 313  28 594 592 130   2 561 641 746 599 605 663 569 183 583 540 595 608 657 758 557 763   6 188 136
  65 674 219 471 512 332 646  43 643 310 573 603 558 586 610 511 281 637 734 200 440   8 652 707 591 619 892 154 184  60
 706 143 401  17 413 134 667 208 628 710 150 798 675 659 738 494 625  38 578 651 152   5 584 696 703 552 856 156 239 139
 611 788 336 477 670 409  30 774 801 295 640 204  93 404 535 257 739 596 502  99 102 300  56 590 620 604 750 632 355 246
 713 797 129 369 722 122 296 684 562 157 633 559 297 728 661 716 624 551 770 158  52  47  81 525 681 105 781 109 723 163
 680  72 609 701 112 382  11 748 782 612  89 655 108 708 700 120 828  22 315 260 196 829 796 772  57 790 639 194 457 271
 814 687 500 229 529  25 580  90 755 312 732 393  79 838 741 720 816 233 724  39 778 614 691 104 812  55 492  12  18 103
 872 689  44 863 265  20 685  26 729 328 387 353 629  35  34 630 541 144 786 671 831 364 793  53 871 192  16 757 810  97
 835 717  32  69 845 111 155 854 866 424 141  78 217  88 795 813 799 228 749 485  94 165 840 725  13 762 210 175 712 518
 870  37  51 819 803 653 785 293 593 606   3 777 110 773 131 806 855  49 227  54 493 751 268 702 821 791   4  42  50 298
  31 234 817 839 638  92 124 715 615 692 607  14 113  45  61 743 242 106 769 823 138 824 867 443 185 699 776 270 851 142

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 7.42579e+06us (= 7425.79ms, 7.42579s)
Wall-clock time (full program): 7.45878e+06us (= 7458.78ms, 7.45878s)
Satisfaction error: 0
Number of search iterations: 2784
Number of local moves: 966 (including on plateau: 347)
Number of local minimum: 217 (including on plateau: 43)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  51 756 851 285  69 854  25  81 843 208 839 234 873 885 864  98 821 868   9 814  11 403  19 117   8 705 882 637 199 206
  17   4 845 863  97 893 780 256 825 812 841  62 737 828 289  67 806 177 173 732 830 172  55  44   5 855 819 196 231 204
  31 833 723  13 111 766 831 259  72 556 795 782 306 717 850 243 807 129  16 804 773 151  79 108  36 861 847 501 465  50
 490 823 731  61 176 865 456  63 568 869 462  43 809 880 720 203 829 109 183 860  68 368 669 339 769 760  14  53 144 131
  20 785 752 796 784 786  49 120 230 738   2 844 628 684 412 148 798  75 104 726 178 310  41 677 777 275 751 291 719  15
 376   3 805 813 666 734 645  10 305 707 765 138 219 761 816  85 618 758   6 721  34 167 832  40 274 623 659 676 116 143
 150 770 713 810  29 657  54 271 689 735 755  12 654 722 267 246 725 123 629 479 692  64 110 128 778 626 791 261 318 257
 174 714 494 670 681 609 636 382  46 743 706 679 608 617 191  45 793  39 708 763  48 106 141 298 600 768 622  78 338 218
 170   1 599 140 687 596 680 225  82 649 757 664 671 583 165 632 635 686 643 545 741 359 112 244 200 683 588 631  56  91
 147 698 515 661 192 187 702   7 644 668 619 610 561 286 101 598 709 662 499 700 405 102 555 262 548 594 601 247 119 316
  23  18 538 182 630 557 559 294 571 582 611 607 739 509 137 414 581 595 711  71 602 592 647 227 651 625 652  87 146 357
  30 524 612 416 587 589 558 157 544 529 554 653 590 614 540 258 466 388 302 519 487 510 624 513 127 523 525 228 478  70
 428 471 660  22 567 641 418 496 410 603 535 663  80 593 534 508 383 576 400 430 438 436  84 420 502 562 287 546 586 236
 185 591 488 406 484 512 604 573 198 364 252 115 393 482 469 564 492 505 597 574 498 537 572 195 334 532 500 613 577 309
 355 543 536 372 493 369 431 333 517 433 514 489 539 495 565 526 455 454 444  24 448 346 516 507 528 475 480 468 453 407
 518 392 570 321 426 349 429 451 415 463 560 378 457 551 363 467 446 437 336 542 606 527 367 377 464 531 460 441 351 520
 690 553 409 288 371 473 353 673 569 268 506 423 575 522 432 477 450 452 485 241 390 461 345 381 563 503 313 396 401 552
 447 439 365 458 317 361 449 712 370 481 292 424 840 366 728 337 330 434 276 350 497 856 348 459 413 374 284 399 379 730
 790 329 342 229 290 332 384 646 210 387 435 866 373 470 858 358 354 223 486 408 324 787 222 521 442 308 340 397 783 621
 878 380 238 347 201 242 304 894 341 211 852 411 326 311 445 319 417 216 189 443 419 799 402 699 312 394 296 792 859 578
 695 362 352 360 385 224 269 691 875 879 273 530 391 239 323 301 375 325 343 404 440 802 605 718 253 249 272 696 245 639
 772 322 264 212 386 179 260 888 491 421 279 820 389 299 678 781 263 693 281 395 295 656 640 580 184 153 248 255 815 616
 688 307 175 265 327 303 171 638 314  66 240 190 328 251 886 283 156 827 877 356 124 704 846 566 159 871 207 633 867 890
 744 278 335 857 232 344 803 826 853 161 214 166 331 193 674 764 315 250 476 235 835 180 472 474 197 158 280 277 749 842
 715 547 133 194 838 511 237 169 168 221 226 254 716 293 121 724  99 876 818 188 789 682 849 767 483 103 145 270 800 579
 762 665 217 703 541 209  74 887 163 297 220 620 107 155  93 740 130 149 215 300 152 672 694 774 710 233 811 883 585 754
 701 897  42 549 884  83 181 655 837 136 105 132  32  77 533 817 139 771 801  60 750 213 634 584 776  26 427 736 162 775
 733 164 100 667 898 113 729 759  92 134  95 746 122  47 282 874  33 627 822 205  96 747 892 808 788  73 154 425 648 642
 836 160  21 685 266  89 794 320 615 135 125 834  27  28 114 742  38 202 824 550 697 748 745 891 881  37 142 675 422 872
 899 186  90 870 900  88 650 779 658  59  86 126  94  57  65 896  52 889 862  76 848  58 398 797 753  35 118 727 504 895

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.8541e+06us (= 3854.1ms, 3.8541s)
Wall-clock time (full program): 3.88753e+06us (= 3887.53ms, 3.88753s)
Satisfaction error: 0
Number of search iterations: 1181
Number of local moves: 706 (including on plateau: 198)
Number of local minimum: 68 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 476 216 675 542 149 622 258  83 826 294 647 623  75 575 547 697  49 349 301 516 608 144 555 864  57 833 523 177 363 871
 870 718 370 799 707 850 468 104 146 778 291 281 520 710  98  48 546 824 319 784 369  63 164 184 311 174 722  81 797 419
 759  65 155 109 141  71 854 425 750 423 228 872 740 527 891 698 498 113 731 420 712 178  72 388 609  66 551 897 393 179
 134 794 565 865 309 129 880 709 660  99 262 860 212  93   9 312 454 447 641 377 403 853 269 271   6 839 773  61 636 593
 238 788 729 491 747 690 713 272 736  62 400  82 599  47 188 662  44 705 265  64 631  74 576 355 855 539  73 728 331 831
 879 558 807 473 343 877 801 399 485 206 560  79 335 514 497 166 163 505 680   5 766 239 145 328 210 819 621 745 119 191
 603 340 777 351 815 103  38 754 733 214 224 682 701 187 133 427 267 158 837 143 412 314 776 845 213 569 426 848 209 416
 390 544 524 283 469 892 321 846 117 828 337  92 466 757 397 610 706 260 225 100 743 266 226 124  60 694  54 896 882 406
 142 866 658 563 208 814 821 669 245 196 818 356 771 780 501 159 383 634 233 215 643 130 725 292 541  32 232 361  70 457
 817 338 816 275 186 830 407 169 849 630 183 632 533 327  10 691 475 595 123 255 812 574 116 439 679 202 285 470 405 392
 767 477 306 711 898 522 277 122 517 876  27 348  77 496 670 671 410 310  21 446  23 720 769  86  36 708 753 752 304 415
 772  16 336 589 207 492 486 249 154 715 681  42 408 455 152 515 107 530 600 135 843 719 861 764  31 748  45 673 463 727
  15 808 616 462 244  40 434 692 429 700 421 465 737 724 234 482 570   1 413 358 792  53 535 240 205 649 878 286 333 699
 302 115 742 165  84 138  20 389 384 577 373 887 852  17 890 543 140 859 428 432 274 894 221 139 598  58 741 900 786 567
 688 445 645 704 299 125 648 417 760 437 813  69 614  78 512  37 431 686 481 873 295 810 495 148 317 480 667 334  89 118
   7 293 300 278 899 362  96 749  18 254 809 689 774 781 483 303 884 395 511 585 394 128 553 136 350 231 746 433 490 584
 652 418 102 326 360 573  33 387 562 268 559 561 181 796 596 642 775 696 422 883  88 359 147 519 677 227 270 471 385 580
 583 430  76   2 217 504 382 588 549 717 323   8 101 401 672 829 761 200 354 791 411 509 162 521 756 537 594 218 835 484
 602 339 474 668 783 651  94 540  11 211 316 380 726 863 344 290 241 372 443 554 506 467 789   4 550 105 822 112 503 755
 782 730 320 440 604 666 591 456 259 685  24 529 435 798 185  29 578 229 451 674 168 508 721 840 619 195 282 252 289 176
 197 765 308 488 280 414  34 716 874 391 637 305 171 172 889 510 656 460 586 193 453 768 150 620 820 513 352  35 638 120
 493 618 132 851 204 779 633  67 494 528 601 459 199 626 650 257 787 160   3 263 806 127 664 793 182 734 590 402  56 357
 762  90  22 461 683 219 478 795 279 606 230 657 190  14 770  12 273 702 869 329  50 499 472 223 868 597 220 611 858 676
 581 341  39 438 886  46 441 284 714 885 564 566 526 121 203 738  80 735 654 489 790 256 703 487  13 287 693  68 534 353
 452 189 639 324 386 330 612 170 409  19 548 137 458 180 888 538 663 572  91 628 374 592 785 579 646 895 131 375 659 246
 242 424 298 624 732 322 518 856 288 723 644 613 347 507 479 276 345 248 247 695 192 545 442 502 804 687 110 250 157 398
  52 881 404 175 114 368 823 436  97 307 655 832 106 365 198 857 847 237 378 802  85 800 381 751 665 744 194  55 811  95
  59 615 640 568 108 444 325 342 366  51 450 313 371 531 318 763 153 605 739 264 173 552 151 867 678 167 500 893 684 825
  43 253 379 464 617 296 653 587 222 805 629 571 841 758 236 627 367 396 625 607 448 536  87 364 332 161 556 297 201 557
 156  41 661  26 836 346 376 243 582  30 261 525 449 315 875 126 862 532 844 635 251 838 803 842 827  25 111 834 235  28

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.65865e+07us (= 26586.5ms, 26.5865s)
Wall-clock time (full program): 2.66194e+07us (= 26619.4ms, 26.6194s)
Satisfaction error: 0
Number of search iterations: 13756
Number of local moves: 3483 (including on plateau: 1707)
Number of local minimum: 1276 (including on plateau: 208)
Number of resets: 7
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 326 848 609 725 585 111 297 817 815 736 899 898  37  98 541  65  85 330 571 255  97 872 106 792 153  83 690  99 110 865
 782 870 868  67 788  26  75 774 567 802 861  81  33 282 439  96 855 515  49 759 116 857 219 893  76  22 653 645 404  41
 840 727 387  62 795 121  59 738 820 885 850 535 240 877 626  92 112 812  70 409 108 781  91 881  68  43 838 356 220  72
 615 841 506 386 504 206 159 849 747 864 135  66  25 777 105 195 897 794  30 708 628 858 170 729 139 196 862 430  54  40
 169 791 642 199 323 175 168 776 888 771 252 118 104 117 757 260 833 676 246 808 102 832  88 879  39 875 186 187 866 388
 428 704 689 236 760 675 338 276 878 780 129 321 510 218 823 222 181 478 124 706 173 662 154 890 886 344 174  90 234 432
 633 859 824 200 696 198 415 891 839 731 324 214 197 894 261 329 109 804 211 658 307 221  29 821 304 322 294 616 152 162
 652 847 816 245 740 114 230 764 655 256 273 194 346 268 728 431 587 835 373 227 249 138 896 800 301 161 237 242 176 734
 882 600 809 281 513 328 209 863 613 228 469 235 167 900 682 203 201 603 332 818 213 291 317 766 413 207 337 327 302 406
 844 226 671 278 718 347 749 586 634 720 158 280 285 244 778 355 398 827 141 441 353 308 318 701 300 306 238 351 325 635
 438 575 846 622 683 345 215 264 668 216 711 561 362 212 637 313 320 416 247 851 348 241 497 702 275 254 751 217 458 270
 836 874 568 394 694 314 266 271 272 292 189 742 263 279 876 305 284 641 750 319 296 258 340 660 385 365 505 423 253 601
 396 290 591 401 806 389 298 229 262 429 581 343 814 274 842 378 437 464 426 364 354 309 692 743 299 376 265 383 393 687
 410 381 380 488 529 315 479 595 391 443 486 657 456 350 454 482 334 481 522 531 336 408 363 543 303 536 446 445 397 574
 243 457 422 418 414 333 514 316 550 433 498 424 377 442 516 366 335 608 521 390 527 549 560 582 434 352 473 570 466 425
 477 526 499 358 493  18 562 483 551 556 436 530 251 392 349 403 495 517 528 487 468 518 461 382 501 465 427 492 420 470
 566 451 295 225  12 620 636 405 399 512 467 411 537 485 395 640 552 524 564 480 379 563 548 190 584 475 375 565 455 205
 131 503 460 448 489 370 123 555 452 707 673 474 471 372 476 463 604 191 496 223 686 534 440 188 583 283 502 453 654 511
 507 494 277 599 542 384 450 598 400 472   3 341 545 444 133 679 578 459  32 490 572 547 573   7 435 644 509 491 651 659
 532 544 286 447 359 559 798 164 407 643  19 621 569 678 145 663 520 361 519 184 417 580 618 233 421 612 594  60 650 312
 596 412 462 670  45 681 533 606 593 132 714  61 685 557 134 730 579 484 538 103  94 623 525 179 674 779  48  23 638 617
 614 143 239 592  53 546 680 371 171 419 647 576 733 646  93 625 630 289 739 128 698 127 508  46 540 602 744  36 691 589
 140  87 180 666 208 761 684 672  77 553   9 753 649  56 248 624 726 148 554  57 784 627 310 149 607 632 539 677 748 590
  51 177 204 611 142 709  21 101 157 667 819 873 717  71 331 716 605 231 558 737 755  80 721 257 854 773  64 648 705 160
 119  35 224 796 144 735 695 115  52 150 269 639 664 311 402 610 357 100 619 136 588 700 669 125 732 793 697 688 722 629
 130 185 193 500  82 843 715  69 137  13 845 693 719 789 202 783 767 151 369 120 703 724 746  95 523  10 741 710 699 259
 210  38  63   4 342 805 762  47 113  11 834 871 787 232 828 860 723 250 887 577 786  42 756  24 829 597 449 769   5  14
 368   1 339 895 367 810 831  79 192   8   6  17 811 763 374 745 155 183 790 631 797 147 765  86 288 799  16 770 826 656
 287  27 146 822 661 785 665 163 126  55 107 830 801 712  73  15 172 178 825 752 768  74 182 122 856 837 803 883  34 754
 293   2  20 880  28 892 889  78  89  31 852 156 360 775 267 867  84 165 884 166 813  44 853  50 713 772  58 869 807 758

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.16729e+06us (= 5167.29ms, 5.16729s)
Wall-clock time (full program): 5.19999e+06us (= 5199.99ms, 5.19999s)
Satisfaction error: 0
Number of search iterations: 1634
Number of local moves: 765 (including on plateau: 272)
Number of local minimum: 109 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 337  10  26 779 110 729 285  80 152 879 859 748 852 197 853  39 189 192 807 760  38 162 136 795 148 794 717 830 214 798
 855 260 751 774  30 157   8 208 187 849 321 759 711 146 740  20  78 765 100 749   2 204  28 862 826 636 773 839  23 854
 815 271 309  24 414 237 882  86  59 827 793 264 781 231 801 483 105 201 132 706  67 622 122 860 735 836 784   9 164 895
 819 766 791 306  87 124 817 120 724 750 709 154 543 788 764 771 103  65  83 211  49 334  94 682 687 664  45 802  64 599
 752 206 778 723  44  88 754  50   5 851 666 716 272 227 848 728 163 739 800 283 344  90  48 733 804 113  41 864 147 638
 699 129 725 813 221 125 381 726 209 359 697 131 310 548 770 620 797  34 681 769  62 167 160 737  55   7 761 785 341 696
 704 700 757 814 397 692 346 684  69 647 741 627 249  56 871 609 228 114  51 176 161  54 252  22 653 457 683 867 139 695
 643 736 790 690 336 657 707  25  29 602 742  18 188 203 462 823 743 174 605 135  40  53  74 613 843 671 730 654 240 289
 571 628 529 640 340 219 549 694 183 553 614 193 133 165 659 645 586 649 492  72 155 374  47 626 607 526 621 561 615 269
 530  76 486 642 196   1 565 655 674 598 658 186  95 223 630 758 357 459 546 635 236 284 328 705 436 522 555 536 727 216
 569 612 610 578 158 143 420 763 567 533 708  16 409 182 574 623 601 660 512  32 363 233 222 537 524 556 469 579 487 275
 662 629 449 608  71 503 496 568 540 371 570  61  36 184 631 619 734 606 450 618 173 230 485 719 563  70 545 551 650 123
 454 639 677 494 349 501 611 474 604 518 415 375 580  57 516 453 351 145 504 511 394 171 404 440 566  97 600 593 576 446
 582 544 502 468 491 535 345 633 520 559 506 541 112 331 448 508 403 412 562 476 534 311  92 355 467 495 603 519 369 292
 356 368 557 528 428 478 480 370 343 185 333 539 509 443 514 387 458 392 552 558 500 367 488 482 442 455 587 560 265 591
 581 466 291 498 473 354 393 287 497 490 434 361 435 433 401 484 460 378 505 350 702 517 493 421 398 592 303 583 464 471
 382 339 432 332 515 441 868 481 386 395 477 425 547 426 383 554 248 479 408 376 732 463 572 406 293 525 465 437 416 312
 380 456 890 427 405 305 314 258 866 423 362 365 648 266 402 461 445 400 290 424 429 475 701 347 342 900 319 251 301 663
 388 396 348 308 550 300 672 451 377 419 288 588 656 835 390 499 270 373 703 452 590 680 651 281 364 389 239 134 329 595
 280 399 413 317 617 762 320 410 315  93 828 366 833 834 411 215 295 307 267 805 575 676 641 250 447 418 323 322 244 532
 298 257 360 235 634 745 326 261 246 896 391 715 646 803 179 202 199 299 294 439 820 625 686 384 422 296 268 238 841 510
 358 318 327 180 898 232 313 353 693 335 385 438 665 670 274 379 217 282 352 782 768 811 679 276 302 262 316 111 731 808
 256 213 324 810 888 169 829 887 325 338 177 241 675 838 255 127 198 247 200 229 430 632 673 254 106 899 212 431 846 806
 278 273 195 225 513 756 775 263 865 194 168 842 685 667 234 286 821 564 170 243 624 875 787 190 178 226 224 104 818 472
 372 880  81 218 417 881  35 407 772 330 304 594 172 718 150 207 253 585 159 747 816 507 796  84 883 297  82 863 767 138
 220 783  96  75 885 738 822 809 698 210 126 825  66 538  68  46 780 891 181 597 713 542 792 116 191 869 279 151 149 259
 137 109 108 877 832 786   4 710 722  73 128 584 596 678 130 141 886 776 669 577 746 661 712 242 142 277 840 205 153  14
 117 847 874  42 720 573  27 824 245 118  21 523 527 721   3 115 878 884 870 668 744 845 789 102  58 489 175  12 644  60
  19 589  33  77 652 753 119  85 812  89  79 521 444 637  91 837 892 755 714  98 858 689 691 873 889 166  99  17 894  43
 101 616   6  13 844 531  52 893 831  31  15 799 140 470  63 876 777 688 856  37 850 861 872 121 144  11 857 107 897 156

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.17726e+06us (= 4177.26ms, 4.17726s)
Wall-clock time (full program): 4.2104e+06us (= 4210.4ms, 4.2104s)
Satisfaction error: 0
Number of search iterations: 1274
Number of local moves: 627 (including on plateau: 173)
Number of local minimum: 69 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 672 130 871 803  48 788 693  81 621  63  28 601  57 882  72  98 728  79  36  78 859 853 872 856 873  31 879 765  76  22
 121   6 106  97  24 724  56 865  95 769  39 649  74 886 223 248 895  88  60 551 874 880 623 149 764 742 467 885 855 700
 741 573 103  82  68 779  47  38 867 329  30 679 646 883 187 839 428 161 818 835 499 673 840  94 101  90 207 889 145 844
 663 825 590 841 584 670 335 123 127 412  32 734 163 896 109 132 899 165  40 610 828 713 780 152 170  52 845 861  84  80
 704 175 875 126 768 800 613 177 148 608 168 752 650  37 136 154 834 214 131 638 799 189 862  91 770 881 159 860 107  89
 837 809 588 831 897 850 632 530 196 737  71 864 212 172 173 179 162 112 146 729 637 321 555 180 596 185 195 721 160 238
 230 281 691 118 604 829 654 315 233 753 157 894 702 156 888 278 314 215 137 690 203 232 785 508 253 290 283 789 240 793
 257 274 628 258 686 511 577 846 898 836 251 778 733 135 169 213 271 227 339 851 340 193 892 202 239 204 188 739 197 583
 863 120 776 367 689 194 820 235 893 748 319 712 353 311 432 190 111 262 318 815 306 309 537 259 535 249 297 591 293 611
 229 254 857 210 660 736 786 186 276 830 242 843 234 301 556 324 368 740 273 226 842 191 648 381 403 331 222 295 277 794
 296 246 814 312 710 745 876 669 270 682 667 567 370 263 288 336 206 350 250 310 410 498 624 305 722 225 299 518 291 396
 334 304 816 330 493 562 674 279 393 363 268 352 372 337 706 384 345 792 371 801 444 416 557 365 425 375 261 385 359 652
 354 900 356 294 743 373 474 414 386 405 636 547 265 382 449 509 452 316 887 392 292 464 566 422 424 397 407 338 349 322
 308 404 395 402 866 420 320 360 401 383 496 471 379 463 433 457 362 391 435 478 358 445 784 450 421 415 443 327 868 380
 485 431 351 387 480 541 437 378 490 506 512 406 569 411 394 413 430 448 369 521 447 376 459 434 442 489 488 438 440 543
 328 423 472 527 533 510 494 441 479 453 439 460 377 427 224 570 639 343 484 462 426 366 466 399 408 486 469 417 502 491
 546 529 483 487 419 513 501 389 455  18 606 539 492 517 481 519 473 400 558 504 436  64  26 528 522 603 456 388 523 540
 470 507 477 303 247 534 333 553 429 560 341 348 515 615 451 468 454 544 461 458 575 554 300 176 357 497 581 260 602 545
 100 525 578 565 374 552 241 516 622  87 221 317 559 695 286 514 681 505 647 465 500 576 216 495  62 563 664 582 520 287
 550 607  35 503 125 155 364 532 634 205 346 289 585 548 564 355 579 653 323   4 587 568 302 475 609 629 640 571 617 561
  43 620 174 572 151 284 243 599 531 592 687 116 134 696 595 619 633 597 524 108 133 627 446 600 665 678 574 272 655 347
  41 612 183 659 199 390 476  27 184 598 688 150 751 536 228 701 662 759 643 200 616 144 244 580 658 645 685 326 661 269
 677 750 166 703 198 139 124 282 680 631 723 115  59 593 694  42 586 675 666 143 698 730  17 718  49 630 727  69 705 526
  86 738 635 614 255 209   1 732   8 285 791  67  73 644 811 746 726 683  29 245 626 711 219   2 361 651 605 589 697 676
 231 790 280 717 538   7 138 625 708  53 756 122 167 725 684 804  58 767 618 142 275 668 542 642  16 656 758  21 755 252
 671 716 342 731 344 332 594 771 744 218 719 236 757 113 749 699  61 192 772  51  99 787  19 782 114  20 128 325 709 720
 201 747 237 797 854 182 409 217 714 220 805 266 783  66 549 641  77 807 762 267  12 849  83 763 766 715 657  14  11  44
 761  75  54 117 806 158 775 774 817 147 796 181 798  25 848 482 810 313 813 398  46   3  70 827  92 812 781  10 824 102
 826  34 418 707  33  13 819 692 211 264 823 153 795 777 298 754  93 833 832 735 208  50  96 802 821 104 105 141 822 256
 890 110 164  55 119  15   9 869   5 760 858 307 891  23 838 847 178 884 773 808 140  65  85 878 877 870  45 129 171 852

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.13907e+06us (= 5139.07ms, 5.13907s)
Wall-clock time (full program): 5.17254e+06us (= 5172.54ms, 5.17254s)
Satisfaction error: 0
Number of search iterations: 1582
Number of local moves: 817 (including on plateau: 288)
Number of local minimum: 112 (including on plateau: 45)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  55 131 849 810 269  85 328 846 843 848 827 501 753 814 413 325 837 800  69  80 154 831 754  96 381 120  75  66 358 197
  29   2 727 875 774 159 137 780 869 775 805 218 876 749 806 160 404 833 117  78 128 776  58 778 815 384  74  31 259  39
 750 859 756 594  98 624  38 715 779 219 762  93 318 546 289  21 785 717 736  32  70 802 685  25 595 692 115 162 449 189
 793 119 288  14  33   4 513 755 257 801 580 716 680 781  94 868 782 316 697 305 620 792 732  95 578 660  11 494   8 129
  87 222 655 742  23 230 169 822 818 796 670 706 857 726  64 376 599 840 147 714  15 194 663 121 664 432 245 725 107  86
 592 225 708 787 124 770 280 428 529  81 590 390 567 622 591 151 686 799 157 538   1 700 125 329 881 744 132 820   7 161
 733 282 535 427 603  65   6 813  43 531 695 790 764 661   5  92 659 584 640 746 490 678 596   9 451 420 109 577 272 239
 600 167 763 752 612 304  71  54 642 232  67 643 728 747 268 127 718 657 516 707 174 656 819 672 665  17  90 281 412 354
 635 213 581 691  12 740 265 495  36  37 696 683 550 646 135 300 721 713 118 255 673 111 777 146 480 841 654 684 403 224
 462  52 748 693  77 675 568 548 503  49 515 461 563 648 184 144 489 455 536 730 250 671 694  61 647 551 821 164 339 217
 394 158 371 554  73 597 644 608 604  89  57 123 585 252 106 878 669 402 306  79 892 735 874 153 347 688 629 666 333 649
  44  68 377 610 667 564 522 309 393 499 284 460 396 456 586 621 220 438 527 556 319 380 362 419 705 552 411 559 856 355
 485  10 523 835 628 464 509 579  20 187 607 565 619 528 514 493 481 588 506 450 517 422 469 519 163 498 500 476 155 205
 470 375 277 582  62 521 492   3 520 310 392 486 543 421 677  88 611 651 650 353 574 468 474 508 573 710 542 544 179 459
 457 571 525 397 382 771 350  60 401 540 560 398 170 627 452 739 436 609  27 877 440 143 512 504 575 533 385 387 240 447
 601 343 483 434 589 344  63 133 473 570 429 606 526 497 437 712 324 415 631 453 418 416 505 583 338 539 332 307 518 496
 242 633 690 373 488 340 193 378 426 400 443 417 623 795 372 558 772 278 388 773 466 231 446  47 407 445 322 433 625 511
 797 839 386 326 256 243 867 738 363 156 435 210 561 479 361 832 298 816 251 408 477 341 237 122 463 365 208 889 555 236
 246 617 342 356 379 898 321 424 507 699 368 221 367 335 442 299 482 369  99 682 491 894 510 406 292 235 641 241 720 632
 337 845 431 294 613 331 768 262 430 484 723 811 273 293 320 534 312 203 410 441 383 233 553 425 301 389 662 247 593 614
 576 532 209 370 297 254 303 290 759 896 458  13 346 227 618 142 190 291 751 183 653 399 287 789 630 204 884 547 791 626
 238 687 348 152 860 562 487 145 900 602 317 201 334 198 639 260 211 263 165 615 638 847 180 890 302 248 465 253 722 786
  35 824  91 336 825 249 861 475 345 364 261 191 274 188 853 794 171 181 366 226 467 271 865 899 351 634 176 836 701 405
 616 605 279 130 636 264 349 266 275 703 545 200 359 172 676 196 308 448 175 258 679 199 229 829 873 598 855 286 637 870
 296 757 101 202 689 530 880 872 357 719 148 168  42 139 745 674  45  50 741 105 863 185 502 587 524  24 729 887 100 854
 804 866 734 313 765 858 743 140 285  97 724 212  28  84  46 879 177 195 891 114 214 681 228 830 141 311 737 182 758 478
 104 541 134  53 704 471 395 244  76 557 206 885 295 234 784 173 569 192 788 828 658 267 138 709  40 766 895 216 731 862
 883 834 537 374 360 698 844 112 207 391 102 454  18 149 761 888 414 116 812 150 769  34 103 809 166  41 276 760 808 645
 871 315  16  30 850  83 652 423 783 444 136 851 186 178 711 327 126 270 826 886 215  48  82 803  59 852 838 223 549 882
 283 823  51 409 767 817 897 798  72 439 113 842 314 323 566 864  19  26 472 893 807 110  56 352 108  22 702 572 330 668

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 9.8678e+06us (= 9867.8ms, 9.8678s)
Wall-clock time (full program): 9.90094e+06us (= 9900.94ms, 9.90094s)
Satisfaction error: 0
Number of search iterations: 3755
Number of local moves: 1310 (including on plateau: 493)
Number of local minimum: 308 (including on plateau: 64)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 801 175 539 225 278 831  58 104 314 127 538 784 806 850  30 112 851 771 819  57 606 223 821 367 846 871  26  21 662   2
 167 523  48 246 289  66 639 758 864 895 873 243 841 390 169 310 109 785 485 409 386 449  94 122 878 593  74 661 675 474
  28 340 326 257 834  52 133 701 255 280 808 670  25 765 579 843 596 825 835 689 458 522 479 111  65  92 792 610  78 467
  98 844   3 159 201 680 345 883 764 148  41 486 136 315 419 711 812 705 598 849 395 769 550 230 354 256   5 725 799 235
 184 707  34 138  37  97 501 493 605 800 828 324 714 124 712 625 777 827  96 863 128  76 722 204  71   8 763 789 848 420
  43 838 732  44 770  36  47  51 690 134 309 583 669 192 621  11 776 548 716 259 874 492 624  10  16 807 857 832  53 881
 399 595 115 300 697 656 218 355 525 805 445 650 633  99 721  95 723 660 146 495 528 178 329  79  63 816 683  75 738 694
 465 569  20 407 729  64 774  42 186 231 546 739 671 782   6 299 744 297 700 207 658 234 698 802 240 657 369 696  82 601
 768 580 840 757 686 623 292 435 250 214 803 630 468 836 333 488  68 180 506  50  33 798 575 277 620  27 241 476 568  93
 222 545 556 209 882 635 275 415  60  84 471 704 592  62 269 664 643 524 254 132 473 239 475 304 210 866 869 642 673 566
 219 659 434 544  54 634 260 290 462 561 861 652 514 137 342 417 322 177 773 293 251 152 810 826 431 563 307 266 457 847
 695 685 516  73  72 611 647 344  80 747 161 794  18 822 641 667 346 236 464 403  23 216 460 211 730 172 719 795 678 489
 602 387 448 735 298 441 666  19 724 143 553 653  29 411 555 360 348 742 560 308 513  24 381 589 559 672 249 145 622 779
 194 600 818 466 564 408 577 174 649 543 312 424 121 442 731 447 305 400 183 459 363 588 405 859 469 261 702  83 498 470
 571 157 437 537 833 179 617 549 510 497 526 547 594 107 373 327 221 751 428 872 520 325 502 402 162 533   7 505 499 427
 534 717 149 487 202 867 394 820 665 388  67 618 783 416 450 584 426 412 684 220  17 508  45 372 515 377 509 262 706 321
 530 166  85 597 573 477 232 375 521 397 444 760 406 862 557 504 540 350 737 228 341 334 472 542 535 453 270 430 741  56
 392 811 391 728 648 511 463 674 446  31 380 761 302 356 607  70 554 481 382 242 456 628 517 682 385 357 432 125 688  15
 519 306 156 343 285 531  86 414 507 440 165 353 190 637 140 708 587 253 336 896 654 532 756 365 423 286 746 809 379 713
 562 282 786 894 404 265 582 227 727 258 454  35 439 632 317 271 839 645 279 461 383 780 248 410 527 267 718 352 139 332
 877 154 552 781 608 328 274 500 335 655 627 191 206 743 351  55 421 890 703 252 480 570 401 720 120 320 296 676 185 244
 817 272 368 199 900 268 237 529 338 888 585 295 837 572 860 281  39 151 245 413 791 358 331 436 898 384 503 173 217 330
 455 287 691 117  61 188 438 359 422 323 884 126 551 198 876 679 294 366  40 205 897 578 891 490 567 855 339 135 829 374
 141  90 752 614 364 103 558 215 189 804 893 276 651  22 349 845 640 181 612 740 603 616 283 663 813 576 224 182  32 484
 389 163 491 565 150 710 629 619 303 753 396 496 370 451 709 536 187 512 762 842 110 755 158  14 337 677 160 371 155 745
 361 197 631 613 887 852 615 482 176 494 144 233  88 823 311 425 195 171 226 879 858 715 108 398 750 790 347 101 212 433
 854 273 853 518 736 599 626 889 796 142 105 102 393 263 247 638  38  89 200 681 748 687 208 830 229  81 196 778 452 264
 699 772 123 609 113 284 693 376 291 749  49 114 590 301 153 362   1 193 418 734  12 478 766 886 646 378 870 880 119 856
 170 692 797 586 147 793 885 636  46 541 116  69 865 130 483 868 238  77   9 318 788 591 288 733 892 429 574 106 644   4
 759 129 824 767 213 726 754 787 815 443 131 203  13 775 604 313 875 316 319  59 168 100 118 581 164  91 668 814  87 899

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.46124e+07us (= 14612.4ms, 14.6124s)
Wall-clock time (full program): 1.4645e+07us (= 14645ms, 14.645s)
Satisfaction error: 0
Number of search iterations: 6277
Number of local moves: 1913 (including on plateau: 797)
Number of local minimum: 597 (including on plateau: 88)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 687   5 482 310 317 137 527 431 519 517 760 130 140 611 101 113 767 192 804  33 831 882 774 728 456 386 786 114 762 213
 353 821  52 464 229 670 462 212 747 705 775  78 499 837 286 173 206 497 424 183 276 675 143 521 662 582 444 811 618 110
 412 841 798 396 487 761 661 556   8 855 698 512 745 778 771  77 295 339 722 299  56 361 419 489 256 209  11  17 271 415
 202 678 571 614 772 723 449 561 127 654 552 862  29 187 509 565 569 119 347 501 704 281 155 421 684 411 389 200 168 511
 699  21 263 680 656 261 111 191 403 233 547  28 250 333 133 753 799 671 408 820 828 268 639 763 388 254 315 601 759 440
 619 717 679 691 362 370 298 523 702  84  88 719 727 737 694 239  16 293 284 615  45  37 526 539 562 534 348 716 616 135
 549 247 158 795 660 788  70 397  81 297 485 545 651 319 505 807 853 441  38 893 338 186 854 576 387 185 378 635 177 220
 655 889 880 109 222 138 401  35 558 354 316 150 815 794 883 228 414 342 309 863 847 488 438 777  86 231 132 164 843 154
 510 875 208  57 290 237 392 630  32 663 292 890 617  18 887 318 337 251 448 873 891 554 600 504  27 633 382  22 325 752
 255 682 327 644 257 178 866 404 107 900 275 467 832  71 259  39 350 285 394 610 525 460 219 483 244 877 884 888 530 203
 634 646 151  47 848 365 604 197 784 818 126 638 584 363 170 823  30 690 234 242 174 865 709 491 104 188 802 288 291 609
  40 839 572 591 340 596 307 686 620 514  91 825 689 650 515 147   2 201 720 493 430 395 102 739 305 724   6 266 304 806
 529 797 898  67 895 240 563 894  73 892 128 112  92  97 597 782 580 428 145  96 472  87 770 413 166 302 718 796 423 463
 516  59 265 369 442 269 730 437 602 469 367 568 407 334 674 194 393 461 819 697  83 352 578 500  49 425 817 245 585 809
 351 468  62 555 134 426   4 457 793 383 868 391  14 376 765 851 672 822 372 326 273 277 736 345 296 148 834 476 787 253
 605  80 710 711 125 321 533 434  74 537 336 475 120 840 232 400 473 274 781 172 838 557 553 131 785 494 246 503 629 546
 432 300  64 566 368 836 588 287  24 260 844 204  12 876 458 692  26 454  10 707 559 659 813 470 595 282 812 726   1 590
 681 520 453 380 224 371 223 480 738 506 579 416 142 742  54 665 721 850 502 824 136  34  36  60 685 874 179 567 507 366
 406 162 402 225 835 846 211 122 311 673 409 735 652 593 451 280 676  51 270 640 218 343 381 181 384 768 328 445 658 859
 548 235 100 478 897 481 210 628 583  65 163 215 314 357 479 693 484 885 872 283 725 433 141 861 744 278  25 195 313 830
  76 535 683 118 258  75 522 751 608 879 399 116 695 196 417 184 450 647 312 731 732 857 139  95 729 279 447  44 758 783
 643 495 589 754 443  31 668 198 864 152 570 801 712 289 144 622  98 550 498 496  72  90 207 272 631 816 323 789 190 508
 657 459 790 189  41 541 124 803 587 332 474 636 301 856 805 645 322 356 827  20 306 167  69 551 773  46 598 878  13 349
 560 540 359 715  85 860  99  53  89 262 103 746 764 341 355 344 577 574 814 624 161 714 536 544 236 455 573 418 524 490
 607  19 358 696 800 858 757  23 405 688 743  63 324   9 241 160   7 792 129 375 779 603 625 226 733 708 641 612   3 531
 165 849 706 791  48 159 439 740 842  55 701 252 648  43 749  61 750 227 420 435 756 669 518 870 267 373 108 294 427 153
 248 149 621  66 755 117 808 896  50 214 264 632 230 171 146 886 871 180 471 486 664 217 329 543 833 649 826 115 642 436
 320  68 390 157 810 385 599 780 626  93 303 243 829 249 156 193 734 613 331  15 422 899 465 205 592 330 528 769 869 542
 374 398 221 748 238 623 776  42 713 379 606 637 106 867 627 881 666 538 594 105 175 364 564  94 410 308 169 586 346 360
 182 121 703 532 677 852 513 667 845  82 653 429 575 581 452 700 377 492 216  58 199 741 477 123 446 766 466 335 176  79

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.93305e+07us (= 29330.5ms, 29.3305s)
Wall-clock time (full program): 2.9363e+07us (= 29363ms, 29.363s)
Satisfaction error: 0
Number of search iterations: 15591
Number of local moves: 3611 (including on plateau: 1616)
Number of local minimum: 1509 (including on plateau: 200)
Number of resets: 8
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 326 640 289  45 687 534 822 646 749 647 484 422 752  89  10 414 770 631 682 176 741 625   9 756   1 265 408 543 325  27
  34 841 226  66 718 309  85 557 651 751 556 225 220 204 306 246 840  41 811 679 709  46 827 235 728 563 148 564 895 434
 137 697 839 489 458  39 686 816 634  60 805 762 367 201 804  97 553 145 813 427 842 322 696 104 361  67 502  59 547 186
 232 292 519 517 437 769 495 574 632 120 677 745  57 630 446 180 633 759 439 119 470 373 580 115 333 359 773 870 183 187
 299 453 552 258   3 444 313 411  83 819  22   8 295 490 181 869 250 649 748 789 199 160 463 278 837 865 754 665 694 664
 108 154  93 858 375 861 442 867 281 418 724  19 820 650 689 726 212 140 421 209 515 431 229 818 545 794 320 419 172 205
 499 217 312 394 425 678  61 492 496 143 195 802 449 366 877 774 130 636 150 847 455 392 513 128  13 287 855 825 298 806
 347 477 873 720 657 828 197 158 283 900  14 683  56 790  84 765 722 230 166  80 661  48 559 834 208 791 254  25 864 241
 862 189 692 481 555 713 317 507 141 497 269 786 146 595 624 732 240 844 494 381 400 660 196 244 248 478 219 221 247 537
 379 652 415 164  15 782 153 384 448 898 760 614 349 608 301 228 340 243 406 505 801 423  35 716 581 339 236 715 370 655
 747 393  33 371 663 264 202 684 267 276 584 330 571 447 764 812 643  43 704 426 482 510 316 428 590 114 223 850 193 585
 210 429 420 460 653 354 279 548 341 532 690 561 291 486 589 106 369 672 268 880 607 467 699 362  71 376 407 487 619 282
 344 136 308 821 171 101 859  50 266 852  75  24 508 562 126 413 331 569 868 550 385 826 604 323 701 274 795 610 609 454
 352 351 397 380 629 405 374 776 530 218 514 620 797 156 600 605 311 520 474 736 621 177 645 280 433 200 615 315 260 224
 546 835 471 897 410  86 491 251 695 390  64 656 382 436 892 345 163 485 222  42 272 152 328 237 360 887 750 746 832 192
 399 594 573 623 617 570 568 576 329 493 432 416 815 342 445 304 443 823 102 346 188 488 412 464 654  99 357 567  98 378
 509 112 170 131  52 109  87 469 122 127 578 541 401 803 245 238 884 890 310  82 876 579 327 588 398 849 606 848 831 753
 666 658 504 763 511 539 577  62  51 178 528  94 707 896 214 742 506 597 252 616 565 549  74 483 838  47 300  23 525 450
 781 582 286 324 872 290 203 461 206  38 456 355 787 503 451 307 780 162 138 536 184 207 743 335 601 807 706 480 466 468
 175 599 591 602 263 521 598 231 424 603 740 738  30 435 592 693 386 107 179  63 157 836 262 667 717 438 389 165 639 675
 766 144 123 894 793 215 641 334 638 845 242 441 135 587 618 273 558 893 723  44 161 670 275 500 116 857 211  58 635 125
 733 239 843 372 121 169 814 628  31 691 336 285 523 227 856 878  78 303 363 711 159 719 475 417 544 698  81 409 596 216
 874 261 739 642 673 501 257  37 612 518  90 288 779 626 734 284 700 234 889 768  18  55 110 808 833  73 129 668 147 168
 671 134 293 302 627 613  72 368 875 139 669 757 810 846 270 391 560 462 644 155   2 772 473 213  28 185 388 404 809 583
 705 792 775  11 348 194 885 479 611 190 676 174 358  32  16  21  17 402 593 255 575 586 714 685 851 377 403 396 540 854
   6 725  36 783  95  29 622 721 886 730 111 777 551   4  40 337  70 881 318 853 338   7 459 883 256 830 712 824 100 531
 891 522 659 866 888 817 321  76 535 319 387 498 465 182 735 133 105  68 253 829 191 542 708 529 271 566 476 332  92 259
 863 314 784 113 440 364 674 702 572 249 796 731 117 516  88 353 767 457  79 356 871 788 472  53  69 198 167  54 648 860
  49 305  20  26  65 729 662 526 761 524 744  12 296 703 800 512 383 538 554 173 343 710 785 233 899  77 798 277 132 879
   5 778 680 142 294 688 758 124 365 350 297 151 681 103 118 737 771  91 452 882 727 395 527 799 430 755 533  96 149 637

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.30068e+07us (= 23006.8ms, 23.0068s)
Wall-clock time (full program): 2.30399e+07us (= 23039.9ms, 23.0399s)
Satisfaction error: 0
Number of search iterations: 10617
Number of local moves: 2552 (including on plateau: 1173)
Number of local minimum: 927 (including on plateau: 137)
Number of resets: 5
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 275 598 349 339 152 682 596 468 572 388 581 605 593 250 364 285 151 419 123 402 816 645 609 380 155 891 778 797  65 187
 338 897 180 746 185 110 219 415 209 358 732 739 546 640 459 544 890 608 551 547 590 194 320 167 733  78 496 243 304 477
 699 287 728 302 399 848 542  43 288 263 525 164 372 717 475 549 435 458 118 694 227 469 565 357 346 879 588 146 566 466
 689 674 764 794  94 726 712 148 756  14 330 395 444 568  66 783 268   4 378 875 461  48 633 161 411 656  98 616 396 553
 313  19 798 503 478 650 217 298 418 830 211 309 791 174 172  34 862 829 505 386 169 394 425 359 238 655 691 329 883 575
  11 231 379  85 872 498 774 344 788 705 497 652  96 160 861 580 273  99 817 409 414 406 658 866 421 199 336 494 440 150
 653 144 228 564  91 312 571 731 799 127 467 535 366 383 306 582  29 819 621 577 666 424 342 485 552 261   7 754 471 648
 264  67 516 768 222 618 449 509 777  38 131 741 439 482 300 141  72 701 260 197 775 423 636 668 838 661  58 499 874 391
 517 822 747 680 821 776 607 550 105 784 448 405 823 166 122 567 748 508 375 370  30 332 175 256 202 269 559 356   8 387
 787 188 667 539 695 501 252 422  93 681  56 613 540 488 737  24 869 662 727 368 676 365 801 472  27  31 460  60 576 138
 880 253 266 735 271 790 353 104 706  71 846 457 615 623 259 140 657 181 730 521  62 384 438 688 860 229 431 591 286  88
 514 480 149 307  77 145 432 412 486 602 844 352 850 408 527 561 413 218  28 744 601 698 530 538 502 675 401 106 702 213
 554 192 734 818 716 491 142 807  75 305 876 725 278 276 168 686 894 108 363 113 643 470 126 584 456 132 719  97 761 206
 718 416 804  52 810 128 147 595 109 849 190 762 629 270 196 843 455 786 420 704 293 232 604 443 277 283 373  57 205 865
 751 528 522  37  32 186 324 214 464 513 536 297 328 573 529 878 841 381 354 294 833 103 355 772 208 224 870 176 836 556
  26 873 292 215 792 723 319  49 195  16  87 523  21 669 133 738 279 343 766 291 322 634 392 692 642 684 809 683 430 877
 708 345 729 236 308  76 258 863 397 545  36 337 814 450 340 377 612 251 770 780 664 182 569 476 163 639  18 531 201 840
 599 614  68 755   9 262 483 326 853 837 507 407   2 742 826  10 143   5 162 611 454 815 624 736 316 606 245 369 637 492
 519 157 173 184 446 280 835 515 331 314 673 855 696 541 820   6 806 644 117 481  92 495 115 886 763  35 183  69 627 857
 204 317  17 493 558 795 750  83 400 724 451  22  25 296 687  40 832 824 767  47 900 851  13 265 244 628 385 802 203 892
 382 452  39 893  74  46 170 803 315 813 463 393  44 156 707 831  42 881 465 310   1 511 740  63 560 437 649 785 631 859
  45 617  90 889 760 626 533 827 242 752 793 154 284 898 333 715 660 632  73 597  41 137 745  81 670  70 159 563 272 257
 442 700 679  54 759 557 896 808 282 135 367  79 520 207 484 295 120 524 585 805 249 811 254 111 318 713 758  95 198 710
 189 888  80 248 659 510 672 506 782 341  86 825 100 600 749 589  20  33 834 651 390  61 225 500 428 526 828 867  82 246
 193 398 543 134 534 474 685 882 765 487 153 179 630 722 703 303 114 433 301 473 720 678 638 887 453 690  55 125 112  51
 124 220 586 490 714 721 130 429 171  15 504 299 537 221 216 121 311 139 583 427 771 647 578 622 884 654 348 847 871 335
 635 362 579 410 441 281 753 404 240 646 885 389 417 895 325 856 226 620 223 178 200 321 136 769 789 671 327 234  64 239
 555 864 255 697 845 237 351 119 852 800  84 230 603 592 868 757 165 212 274 129 233 361  12 158 899 436 512 858 347 210
 290 665 781 447 434 116 102 323 711 191 360 462 709 289 548 677 489 619 693  89 479 854 594  23  53 177 562 779 625 374
 641 247 773 101 267 350 241 518 334 371 796 610 403  59 235   3 839 574 532 445 743 570 663  50 107 426 812 587 842 376

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.48087e+07us (= 54808.7ms, 54.8087s)
Wall-clock time (full program): 5.48416e+07us (= 54841.6ms, 54.8416s)
Satisfaction error: 0
Number of search iterations: 33164
Number of local moves: 7403 (including on plateau: 3820)
Number of local minimum: 3225 (including on plateau: 491)
Number of resets: 18
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 895 457 628 528 885  76 361 223 591 255 890  51 857 841 213 209 691 212 858 381 114 815 876 294 163 449  96 338  97 171
 167  71 108 526 889  24 401 566 524 836 710 805 292 732 403 734 864 228  39 123 360  62 323 420 667  59 716 327 781 758
 548 319 283 673 603 620 718 751 371  26 203 606 138 124 843 282 647  56 545 475 578 221 845 662 648 686  85 346 285 328
 181 150 767  17 778 547  65 425 785 700 527 268 542 261  47 162 717 554 745 277 560 748 312 187 190 653 607 809 481 453
 201 468 153 594 469 116 358 251 389 582 729 856 325 556 217 538 747 254 741 722 445 784 638 130 200 151 788 250 617 246
 595 132 465 493 687 874 506 466 754 654 100 189 802 826 378 666 602 695 712  87 196 518 511 195  22 833 104 265 133  55
 886 231 146 583 563 860 605 363 619 168 316 798 593 828 128 331  27 645  72 149 866  83 540 310 707 435 727 121 197 618
  58 887 317  35 182 115 376 280 178 347 440  91 396 237 478 544  90 681 829 853 537 753 692 882 670 185 622 533 407 820
 252 586 379 640 211 390 584 510  81 626 609 340 844 414 867 311 161 822 496  86  94 873 430 868 315 631 659 388  32  16
 847 296 706 199 577 531 350 877 395 899 431 442 245 661 621 486 297 884 461 225  53 321 656 650 467   4 110 125 302 397
 386 587 674  82 514 451 863 402 774 575  12  34 814 679 850 657 513  37 534 154  84  23 744 172 611 561 724  98 106 800
 498 113 636 701 804 702 738 233  50 173 314  93   3 303  18 433 339 585  64 790 831 503 452 740 362 291 779 775 709 483
  36 374 427 443 773 208 230 799 888 366 137  52 553 515 127 891 672 796  78 485 437 142 120 870 634 600 131 264 869 598
 755  48 269 429 119 258 581 644 111 574 329 300 704 677 746 109 509 599 188 684 883 733  14 356 522 812  20 227 504 811
 355 604 259 392 489 555  40 849 698  74 678 536 438 399 152  77 135 428 643 881 126 872 723 500 519 416 455  60 341 821
 423 412 304 832 349 359 765 118 589 759 569 696 249  43 408 683 665   1 743 164 336 846 508 288 757 708  92 763  67  19
 333 165 671 499 564 488 262 422 470 878 417 241 680 409 157 474 893 284 343 612 558  57 158 852 487 434 668 320 382 337
 215 720 101 238 663 721 610 279 839 616 576 502 735 472 521 573 391 202 385 342 143 373 239 551 112 441 393 769 375 418
 837 766 652  44 426 794 439 184 214 257 491 541 364 473 234 771 322 777 144 345 613  70 495 365 639 270 413 880 198 497
 383 726 719 597 236 505 567 424   9 156  29 830 658 685 160 370 387 838 725 660 380  38  61 354 415 596 789 477 494 247
 147  54  49 770 235 646 633 786 559 501 871 447 690 107 298 861   7 697 240 309 699 742 655 367  30 369 693  63 590 400
 377 572 676 532 253  10 520 625 854 865 275 801  45 180 226 224 840 159 539 242 898 335 324 875  80 318 218 592 752 308
 145 299 102 792 274 549 136 827  46 675 780 689 243 222 900 155 736 256 330 492 664 530   5  15 783 421 896 608 797 148
 688 825 479 642 266  31 432 682 216 166 353 750  88 134 762 207  89 651 411 357 557 273 419 808  42 372 823 842 714 436
 879 795 192 286 761 444 117 293 220 552 141 352 848  13 859 210 305 183 546 260 348 731 405 632 764 615 289 813 471 191
 301 232 713 614 271 490 244 516 456  68 278 630  73 517 570 248 169 623 637 290 737 807 404 512 398 446 295 588 601 787
 739 810 894 454 306 791 351 179 394 186 817 313 193 782 287 334 459 728   8 768 571 326 281 229 448 482 263 344 129 649
 458 460 529   6 105  33 406 450 855 535  95  28   2 580 703 806 507 550 565 730 177 174 749 206 627 818  21 892 824 624
 170 715 523 669  69 476 793  25 410 139 579 462 834 140 480 272 635  11 562 816  41 543 368 103 711 384 835 463 484 803
 760 641 694 205 194 851 464  66 176 307 819 772 267 705 862 897  99  79 332 756 629 219 568 122 525  75 204 175 776 276

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.48577e+07us (= 24857.7ms, 24.8577s)
Wall-clock time (full program): 2.48909e+07us (= 24890.9ms, 24.8909s)
Satisfaction error: 0
Number of search iterations: 13310
Number of local moves: 3736 (including on plateau: 1961)
Number of local minimum: 1195 (including on plateau: 217)
Number of resets: 6
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 898  79 289 732 123 842 824 627 192 814 319 131  38 813 195 531 725 799 829 890  82  41  92 583 592 785 117  14 101 418
 770  52 556  13 879 696  10 133 861 881  60  68 634 570 134  47 828 111 854 144 561 139 436 656 675 729 119 216 792 891
  93 779 771  80 876 374 658 888 889 800  91 194 105 142 252 605 773 756  78 170 694 176   1  51 723 691 895  75 137 698
 704 214 168 701 110 114 866  17 532 505 805 186 887 264 193 393 795 284 623 715 777 690 245  69 630 151 859 163 182 673
  89 277 187  98 893  74 283 442 754 228 646 653 476 364 155 877 536 727 853 343 867 179 748 338 613 584  39 167 261 764
  71 494 692  57 612 862 894 852  15 798  94 141 440 154 897 819 544 219 697  90 165 569 124  49 896 753 348 776 253 140
  11  58 759 843 575 640 664 227  36 735 243 115 160 398 355 684 832 628 885 273 474   9 649 463 625 809 311  34 210 810
 175 549 728 471 342 772 848 512 270 624 846 307 439 356 199 746 635 156 136 767 883 164 138 345 518 489 280 180 212 428
 882  62 787 221  86 845  22 588 145 739 108 185 169 375 315   4 721 102  81 424 783 860 873 700 872 661 265 817 224 599
 275 693 604 181 294 201 880 234 884 768 837 797 373 314 382 173 543 685 864 213 851 184 303  76 158 287 349 196 769 147
 825 626 379 774  31 855 290 386 171 239   2   6 395 246 390 402 659 282 508 515 871 525 560 524 651 663 295 358 385 702
 297 467 389 334 316 286 547 886 594 740 530 836 383 236 346 826 581 331 272 371 244 712 362 388 125 317 413 600 426 360
 841 495 667 288 354 132 499 306 425 304 291 610 571 302 340 435 457 816 135 678 251 329 200 491 875 566 833 381 333 310
 367 100 780 352 597 430 502 459 305 517 563 443 534 232 326 807 501 618 478 416 438 510 473 222 572 411 420 469 159 514
 279 500 419 485 301 230 838 198 427 128 587 372 450 647 339 347 553 573 203 434 743 567 417 593 496 611 699 122 377 580
 415 470 407 444 621 448 456 509 574 480 258 707 493 579 498 644  85 152 452 869 472 545 405 513 529 353 586 466  37  48
  53 285 523 324 486 451 482 551 477 462 660 520 433 312 710 614 323 568 899 240 578 220  28 226 550 757 322 464 576 421
 724 552 351 655 274 503 672 622 209 454 394 548 116 189 432  54 103 368 410 332 447 488 487 392 565 429 751 662 458 874
 229 380  20 682 437 559 734 293 321 506 636 162 562 533 695 475 248 361 538 492 601 542 679 849 609 330  43 107 650 242
 507   8 577 620 637 166 555 666 441 401 527 453 259 511 449 313  56 642 681 840 519 708 665 431  66 121 564 516 504 112
 541 617  63 522 422 645  95  55 408 325 465 445 497 406 744 359 709 558 689 363 218 812 557 607  61 365 384 808 528 247
 336 680 268 460 758 104 269 596 455 188 537 868 423 706 741 149 396 619 357  27  77  32 671 900 337 387 409 256 631 878
 582 344 633 714 598 260  87 643 761 215 404 765 327  84 629 399 535  59 657 414 223 231 638 602 106 412 540 677 668 308
  25 760 755 143 461 806  40 281 863 266 632 791 589 835 815  88 446 204 130 648 318 369 350  44 177 250 713 823 639 254
 731 820 378 718 484 341  16 688 526 237 892 683 238 717  97 804  35  18  33 789 217 271 669 745  19  83 676 747 652 191
 174 670  24 366  21  73 490 738 616   7   3 803 654 716 674 292  23 585  30 790  26 796 608 705 750 328 687 858 802 206
 711 733 309 595 376 591 468 205 546 126 794 249 370 686 726  72 255 737  29 539 235 784 335 703 197 120 202 778 641 403
 211 856 146 719 752 190 118 720 801  70 788 233 831 844 781 298  99  64 606  46  65 590 827 241 183 391 818 320 811  96
 865 113 736 157 749 762 109 148  12 172 207 397 830 857 481 483 257 730 300 129  42 603 822 742 278 521 400 615 276 722
 834 782 150 766  50 263 299  45   5 786 296 847 839 127 225 775 262 763 208 554 793 870 153 267  67 161 178 850 821 479

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.10085e+07us (= 11008.5ms, 11.0085s)
Wall-clock time (full program): 1.10416e+07us (= 11041.6ms, 11.0416s)
Satisfaction error: 0
Number of search iterations: 4735
Number of local moves: 1563 (including on plateau: 571)
Number of local minimum: 379 (including on plateau: 78)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 176  53 523 579 536 573 340 772 244 134 696 105 518 389 803 321  45 630 747   5 144  88 648 758 110 816 786 538 688 750
  62 388   2  15 173 780 760 777 594 782 280 550 481 393 352 345 744 850 898 288 530 669 599  60 495 620 395 108  56 469
 338 729 868 510 156 845 498 421 277 274 757 313 217 271 600 873 346  95 154 297  68 759 897 226 714 216  98 781 252 665
 185 402 715 501 746 695 622  38 672 283 188 766  16 718 485 520 273 809 214 213 376  14 153 770 808 735 499 286 390 423
  79 854 382 307 798 885 162 441 306 578 710 186 881 640 605 546 230 195 819  26 400  78  82 853 490 900 232 167 392 291
  90 828   9 552 731  30 459 218 740 488  54 732 502   8 826 708 269 887 667  20 739 783 115 453  24 702  67 724 882 208
 294 505 810 329 418 838 220 133 246 812 228 468 160 818 890 662 487 888 351  76 320 175 470 577 742 222 384 705 107 180
 713 439 344 776 237 869 196 791 412 525 790  40 476 257  41 429 158 174 371 657 146 726 891 147 765  87 844 242 589 383
 457 651 561 360 876 723 355 139 535 177  11 737   1  65 663 597 221 673 666 559 628 725 631 361 451 603  94  33 635 327
 660 315 181 295 333  58 187 632 799 899 549 456 837 354 604 529 528 452 328 365  49  72 738 611 322 337 763 258 601 403
 254 379 264 541 595 615 544 172 583 419  63 275 341 880 802 164 787 575 479 614 682  57  32 830 784 106 235 223 862 358
 566 249 517  44 500 574 557 336 534 149 567 179 728 447 183 381 199 464 401 370 654 801 537 733 638 362  59 627 437 722
 270 709 405 788 832 194  71 649  34 720 543 426 267 643 701  31 570 754 539 755  74 140 542  96 656 168 474 287 749 428
 137 815 203 335 260 871 843 117 350 670 331 883 679 513 212 509 454  92 478 768 608 150 296 406 132 157 285 884 558 519
 886 262 148 166  21 433 835 555 293 369 533 475 650 461 617 691 118 685 779 664 229 700 446 408 661 324 215  12 407 472
 806 473 125  35 339 449 618 813   6 568 831  77 191 683  66 417 394 580 585 398 851 443 251 128 198 677 463 330 863 857
 448 404 848 569 860  55 332 377  23 796 658 756 642  17 378  91 877 367 460 318 598 655  29 207 847 159 771 276 143 554
 325 435 820 593 410  85 356  46 833 372 483 778 364 775 152 486 427 119 413 671  86 774 625 343 145 359 703 841 104 592
 348 114  25 586 219   4 233 565 373 129 526 814 564 527 707 245 504 374  50 689 584 846 817  37 629 396 482 761 511 856
 793 795 225 540 612 507 272 386 769 590 349 438 171 206 301 514 547 253 155 893 858 121 512 319 308 712 109 822 399  39
 762 503 633  48 278 290 548 659 686  52  64 562 734 465 347 551 866 303 151 681 305 247 259 842 326 874 521 279 282 397
 466  83 415 261 202 524 581 431 736 694 497 289 870 311 717 626  47 227 636 334 800 852 201 591 122 829 142 462 496  73
 653 639 240 711 687  22 416  51 789 353 878 805 366 100 684  89 493 248 741  10 135 205 563 450 730 610 697 103 811 236
 807 281 699 824   7 411 266 823  75 646 531  36 506 698 211 239 471 743 442 752 692  42 675 231 821 116 748 234 387 101
  19  28 616 508 896 169 645 609 690 596 298 210 764 161 706 634 613 111 182 827 263 794 184 892  97 621 458 302 299 323
 300 238 840 872  69 895 602 113 792 200 436 310 284 576 317 553 644 489 241 250 480 560 484 141 309  84 455 467 836 678
 624 797 849 256 647   3 102 434  13 515 704 170 607 588 268 165 265 178 532 440 875 680 839 385  43 745 834 357  18 582
 516 676 855 619 522 130 445 753 432  99 342 292 163 693  61  93 674 120 124 209 606 867 572 804 314 131 727 716 193 767
 587 391  81 136 363 861 879 773 424 556 375 668 409 414  27 785 623 864 492 477 190 112 123 204 197 422 751 825 138 368
 894  80 312 859 192 127 571 491 255  70 243 719 126 444 189 721 641 316 420 889 545 380 304 652 637 425 224 865 430 494

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.96943e+07us (= 29694.3ms, 29.6943s)
Wall-clock time (full program): 2.97274e+07us (= 29727.4ms, 29.7274s)
Satisfaction error: 0
Number of search iterations: 15470
Number of local moves: 4129 (including on plateau: 2131)
Number of local minimum: 1458 (including on plateau: 254)
Number of resets: 8
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 896 895 602 205 203 685 826 157 301 870 586 877 792 117 690 663  75 123 742 688 701 808  46  57  99 119 501   5  12 174
 557 265 754 419 175 333 462 765 777 731  56 378  14 309 619 242 127 262 616 862 171 849 727   3 708 816 506  28 855 129
 151  69 809 167 703 693 793 108  25   6  32  77 634 496 494 237  84 698 733 422 704 724 775  73 681 810 510 342 720 745
 714 594 610 770 188 702 489  29 165  67 628 144 554 518 532 822 401 154 247 882 272 478 580 440 227 613 776 310 146 463
  81 820 185 782 204 240 415 614  82 851 866 261 796 617 143 545 569 609 821 311 163 646 321 367 779  86 696  79 290 276
 128 832 313 191 861 875 287 684 884 495 444  20 102 124 687 828 652 199 241 405 268  87 178 135 876 601 730 461 588 339
 842  58 266 699 212 807  40  90 229 145 630 207 817 122 190 715 186 757 845 142 836 599 753 399 553 211 760 608 576 221
 878 751 200  48 429 766 347 615 206  68 137 427 543 795 491 184 394 412 216  89 752 453 441 558 249 850 736 338 328 814
 879 644 196 250 830 837 166 426 678 360 125 682 253 340 350 864 527 600 812  26 337 198 443 379 458 115 718 683 243  96
 189 763 330 257 482 363 591 359 624  70 254 550 281 442 299 737 676 428 508 768 559 871 334 283 590 436 801 106 498  66
 215 480 279 780 213 315 384 739  27 376 487 176 418 181 831 621 423 327 357 457 256 827 288 522 406 784 513 848 388 597
 332 329 297 740 269 585 476 356 431 425 302 881 697 344 278 732 858 219 665 362 238 744 446 236 635 164 565 374 258 277
 445 872 395 407 456 689 673 746 263 488 726 414   7 335 373 411 853 567 120 349 233   8 511 502 654 280 761 368 273 336
 112 648 396 148 790 544 541  30 824 455 778 562 758 380 133 438  33 317 352 598 267 668 316 404 326 486 595 343 873 400
 705 381 275 409 549  94 622 735 670 572 692 104 528 159 195 577 620 500 568 547 312 640  34 843 246 477 355 292 523 291
 421 228 651 633 887 101 520  50 512 483 533  95 434 537  38 307 719 485 834 172 286 773 525 397 138 306 284 860 893 413
 318 471 493 466  13 416 402 659  36 517 880 499 131 387 507 669 323 526 503 383 468 305 563 883 886 546 524 479 245  17
 835  43 497 841 260 539 587 439 856 647 825  93 623 209 158  72 252 139 308 566 370  55 531 382 686 348 218 612 802 722
 464 579 490 303 764 535 667 459 638  37  18 898 505 235 121 829 351  15 460 570 749  59 293 657 521 386 372 721  91 728
 555 863 435  11 743  39 467 671 748 666  42 637  49  53 514 179 840 868 575 641 452 153 639 534 542 504 126 390  64 515
 560 214 222 100 592  62  51 244 890 897 208 625 408 481 604 217 530 341 529 649 147 804 725 655  74 583 285 519 869 430
  21 322 631 709 248 109 403 578 194 626 574 230  45 220 833 838  60 410 606 118 424 806 433 432 797 819 448 447 538 596
 255  71 375 107 662 734 854 210 799  16 677   2 571 564 794 324 271  92 193 713 899 274 900 750 201 470 136 509 552 540
 469  83 589 717 789 169  76 345 180 484 711 889 582 844 304 451 454 767 177 182 791 223 785 173 741 251 264  22 398 605
  78 894 551 320 160 354 358 389 187 645 105 729 710 759 618  98 516 473 270 716 805  61 161 788 183 259 331 603 694 700
 747 134 298 756 472 300 650 653 116 536 738 680 852 561 141 111 803 361 296 449 661 629 294 679  41  24  52 769 295 417
 114  44   1 874 113  19  31 636 774 192 155 786 755 772 723 170 672 839 465 156 642 168 224 581 823 656 110 857 365 798
 225 607 811 371 707 584 706 391 573 556 226 691 611 859 162  47   9 815  85 664  97 319 282 593 130 632 385 474 103 800
 892 197 781 377 149 712 627 643 152 865 420 813  35 888 847 234 346 450 140 548 289  54 492 787  63  65 132 393 885 239
 437 364 783 658 392 314   4 695 674 369 660  88  10 867 846 353 891 762 231  80 366 232 475  23 202 818 325 675 150 771

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.86254e+07us (= 18625.4ms, 18.6254s)
Wall-clock time (full program): 1.86583e+07us (= 18658.3ms, 18.6583s)
Satisfaction error: 0
Number of search iterations: 9001
Number of local moves: 2518 (including on plateau: 1340)
Number of local minimum: 769 (including on plateau: 132)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
   6  11 203 359 796 292 553 717 602 257  78 431 688 328 791 571 300 610 356 787 193 879 447 666 493 167 750  46 512 626
 755  96 776 654 778 608 672   5 255 168 225  80 789 377 673 433 269 480 183 496 881 769 412 505  44  55  86 798 691 502
 556 445 880 226 721 744 560 664 282 782 253 254 866 177 329  16 415 781 779 851 365 427 307 342 189  98 166 552 187 301
 598  67 361 604 835 266 751 822 820 106  83 489 533 402 364  69 429 113 188 763 827 550 704 131 267 518 132 311 745 667
 547 633 160 366 536 886 585 699 671 737 227 333  33 171 299 606 743 224  97 656 153 786 348 149 234 346 868 463 440 519
 692 645 318 434  35 549 752 597 486 275  25 767 687 278  95 584 428 398 409 888 465 837 727 305 194 578 435 128 401 103
 831 504 503  10 180 476  27 417 803  59 773 378  85 561 497 679 858 747 389 276 775 138 735 718 637 337 675  63 112 272
 809 609 668 223 251 309 174 759 570 157 451 222 115 470 265 757 538 387 815 477 524 840 509 352 410 577 159 315 114 689
 728 715 260 643 341 376 201 587   8 527 700 603 669 196 302 279 661 125 441 642 126 797 890 297 164 515 874 262 555  31
 819 681 242 363 484 889 230 695  30 369 469  75 176 790  39 207 472 510 849 590 856 334 456 124 324 289 777 647 304 425
 206 893 684 448 238 104 548  38 632 579 771 554 862 586 766 544 332 458 249 281 658 344 169 580 847 678   7 145 248  66
 105 814 639 652 491 205 599  58 420 546 494 200 362 209 836 871 532 501 147 121 846 284  72 492 173 322 710 857 572 385
 452 876 576 135 400 622  40 442 343 650 271 500 529 507 290 258 854 734 592 239 513 195 712 241 665 310 419  26 350 774
   9 198  52 899 807 460 566 701 618 894 308 392 247 450 506 730 799 698 517  64 338 139  47 316 270 457  79 499 844 611
 339  71 468 825 638 563 485 614 709 455 843 102 146 245   2 320 697 111  84 683 568 539  87 644 259 531 396 829 478 784
  34 148 629 373  90 581 261 793 212   4 641 808 355 761 418 885 202 850 175 865 127 220 607 861 848  48 741 471 158 349
 414  28 646 542 804 740 748 399  51 479 351 416 263 565 853  62   1  73 764  68  50 601 811 541 559 615 613 215 756 487
 393 628  49 801 101 616 325 298 335 473 449 582 411 733 720 703 191 828 432 312  29 354 374 841 326 631 397 161 386 636
 246 732 481 283 380 213 864 729 280 839 867 875 564 130 690 273  15 141 108 353 483  22 676 381 367 640  99 863 634 287
 726 551 845 395 605 686 535 123 498 523 508 746 371 540 306  36 370 331 286 623  81 802 217 391 891  20 454 749 197 109
 221 294 635 406 143 122  17 593 575  23 884 898 738 770 589 165 444 252 852 142 897 558  65 882 219 345 657 134 674 321
 805 495  70 758 719  32  91 655 384 511 403 423 842  14 204 794 243 659 474 228 303  43 530 296 682 723 543 653 244 694
 438 437 772  56 421 313 520 482 892 521 129 184 693 573 181 768 182  92 439  24 430 754 407 214 627 878  41 810 625 612
 490 118 670 155 461 567 708 323 179 680 466 110 526 818 426 136 357 662 826 443 896 229 295 534  54 133 711 340 368 834
 464 859 185 422 178  61 869 162  37 152 462 736 702 832 372 240 216  18 317 347 545 293 537  19 900 446 760 780 873 731
 360 390 785 211 424 594 685 237 649  60 648  45 264 795 557 516 150 619 830 405 388 235 596  53 860 624  77  88 617 753
 574 762 236 706 583 358 630 218 725 475 522  12 190  74 140 600 812 525 330 172 722 100 379 714 620 651 156 716 192 621
 199 713   3 707 186  57  21 170 591 824 806 528 151 742 783 817 887 274 595 268 163 588 792 277 327 696 375 677 256  42
 467  13 383 154 436 413 382 233 739 821 291 877 250 107 562 137 724 800 120 663  82  93 319 833 855 883 870  94 838  76
 232  89 336 705 453 813 116 285 119 569 117 895 408 314 660 459 394 514 872 788 231 765 288 816 210 404 488 823 144 208

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.62405e+07us (= 36240.5ms, 36.2405s)
Wall-clock time (full program): 3.62734e+07us (= 36273.4ms, 36.2734s)
Satisfaction error: 0
Number of search iterations: 20631
Number of local moves: 4755 (including on plateau: 2730)
Number of local minimum: 1902 (including on plateau: 324)
Number of resets: 10
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 518 835 229 758 742 112 595 890  95 871 794 891  42 688  67 741  47  84  71  41 858 105 459 700 784 879  72 140 154 253
 766 744 899 857 751  18 847 202  87 413  25 107  88 767  83 102 148 780  36  43 782  81 893 769 161 845 144 814 467 796
 101 115 897 888 100 147 872 204 224 789 779  89 132 725  73 670 152 823  94 188 698 329 486 681 745  50  99 895 660 810
 113 121 135 836 747 136 731  92 127 803 705 875  60 662 142 805 111 853 119 196 734 158 311 759 214 179 898 323 728 842
 197 189 139 887 333 192 850 405 679 770 608 806 212 833 176 852 246  98 138 129 788 226 861 797 118 280  48 232 763 663
 170 186 160 696  69 896 217 548 289 884 837 674 134 716  74 868 284 123 181 614 876 233 400 628 798 182 249 125 603 801
 241 114 273 715 209 175 811 817 122 832 692 701 252 863 145 774 206 218 219 166 900 230 397 537 812 174 260 235 736 689
  65 168 222 754 223 165 163 883 270 540 869 886 269 844 205 288 131 210 237 183 831 126 808 878 894 693 213 353 885 259
 244 239 240 635 326 427 149 308 880 640 790 629 325 256 331 830 146 507 785 330 600 587 602 748 263 302 268 293 632 203
 155 316 291 685 513 267 455 352 324 778 659 669 339 318 248 739 262 336 786 351 645 190 623 793 340 292 321 245 838 385
 231 287 668 697 882 290 276 367 264 434 531 667 261 496 320 342 338 361 824 457 599 366 593 722 350 307 357 278 707 243
 347 420 760 820 208 277 251 605 702 596 676 626 312 359 327 322 298 275 783 368 310 250 358 618 562 388 490 597 309 301
 404 491 564 594 440 343 402 348 271 396 304 643 482 749 337 506 354 549 274 349 362 401 272 691 476 428 406 525 775 379
 390 403 500 526 376 497 470 363 393 530 431 453 541 344 360 295 584 461 415 494 460 384 447 493 492 478 570 409 484 472
 451 399 498 495 433 371 417 841 410 426 533 394 473 510 438 418 425 474 391 439 374 430 423 469 319 464 536 535 317 412
 419 485 466 555 117 414 375 581 442 522 499 458 421 445 508 373 314 392 528 465 432 446 452 612 411 424 524 441 515 479
 398 477 517 380 516 450 481 503 463 444 573 514 483 521 504 381 471 335 378 567 505 544 207 193 255 462 502 532 523 436
 422 443 429 225 454 554 489 456 178 558 437 365 511 598 519 575 559 306 563 382 487 617  13 106 574 590 449 546 539 571
   6 578 568  53 553 576 509 247 592 551 346 543 588 300 604 607 355 572 315 369 613 677 480 227 610 642 416 448   9 561
 527 545 475  32 641 565 512 589 560 294 556 313 644 520 682 601 550 585 656 177  31  27 120 283 621 675 534 435 199 566
 639 729 407 296 201 665  59 254 673 356 286 372 408 583 633 215 579 580 650 653 137 622 328 220 711 672 303 591  56 637
 557 648 661  75 625 586 671 198 108  14  82 216 630 577 624 211 634 678 699 538 334 103 332 345 695 627 657 649  86 655
 720 694  77 104 611 690 652 265 636 236 395 143 606 180 638 619 646 721 647 686 191 712 815 151   8  16 658 730 242  26
 684 821 706 187  34 708  79 713 389  62  55  64 609 184 651   3 664 816 714 616 266 762 654 116 704 719 723 488 153 171
 752 620 804 279  90   2 735 771 683  66 133  97 631   7 791  45 889 768 297 615  30 765 194 569  38 733 802 582 341 386
 726 746 703 173  28 843 809  15 547  17  46 258 800  21 750 724 757 732 718 687  23 822 717  96 110   1 666 542 282 156
 781  37 364 128 846 755 468 867 743 164 221 172 825  80 777 169 892  20 529 828 281 881 819 124 710 787  10  19 167  51
 753 829  58  40 818 740 109  24 776  91 159 552 851 162 799  76 865 792 370 862 141 848 377  78 501 839 680  12 228  85
 874  29 756  93 856 795  22 772 761 238 299 305 709  57 854 130 738  61 285 873  70 727  11  68  54 383 834 764 257 840
 864 807  49  52 773 859  39  35 827 200 195  33 877 150 855 234 870   5 813 849 157 866  63  44 185   4 826 737 860 387

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.72902e+06us (= 5729.02ms, 5.72902s)
Wall-clock time (full program): 5.76175e+06us (= 5761.75ms, 5.76175s)
Satisfaction error: 0
Number of search iterations: 2117
Number of local moves: 1065 (including on plateau: 437)
Number of local minimum: 130 (including on plateau: 47)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  92 101 841 612 109 823 824  62 856 193  69 492 834 789 491  77 801 690 149  56  10 871 840 118 199 808 227 361 257 863
 124 206 185 892 869  50 315 154 664 213 533 136 792 235 586  21 805 880 737 887 787 872 268  60  47 335 433 882  28 519
 867  86  19 845  75 822 825 139 347 751 720 100 721 297 262  20 701 142 187 782 256 899 813 170  55 806 189   8 784 827
 842  18 298 819  42  80 774  61 745 292 266 289 843 666  44 346 649 595 773  14 783 718 860 439 384  22  11 627 778 437
 719  27 749 156  83 731 746 269 873 799 140  95 652 359 549 680 712 748 121  98 750 875 568   5 264  36 175 694  45 797
 739  17 164 759 785 163 741 190 781  57 518 233 344  31 393 273 828 675 681  65 331 489 786  48 307 780 134 747 696 760
 816 105 243 715 790 838  76 205 642  81 707  51 754 288 727 603 791 639 230  34 641 635 265 115 211 620 222 771   9 691
 688 661 624 357 611 670 564 329   4 428   7  63 636 777 162 565 667 650 129 625 181 766  58 622  43 644 761 521  24 678
 738 656 621 570 388 647 699 295 552 103 702   1 365 126  53 757 703 576  13 602 102 188 458 554 267 551 581 655 629 363
 555 161 355 379 619 634 343 236 613 550 596 461 633 569 304 589 578 728  88 130  32  16 580 708  25 628 574 592 410 829
 559 646  37 616 111 662 208 325 705 583 617 179 340 536 333 532 503 497 659 590 409 541 386 157 413 546 563 138 593 531
 529  78 556 465 591 615 618 275 445 483 543 499 133 327 394 582 399 477 464 155 382 522 498 545 351 579 125 537 467 881
 709 540 493 456 561 145 538 216 663 608 517 143 303 280 150 626 505 158 562 879 183 567 734 604 276 440 424 397 254 584
 481 814 453 609 601 442 141 436 487 514 598 524 406 131 364 459 419 495 468 476  12 623 857 274 422 449 127 530 474 429
 527 407 480 462 475 311 337 736 500 494 516 469 490 378 895 539 369 284  46 398 511 113 807 454 427 405 455 247 560 423
 239 452 431 501 371 630 515 466 484 219 506 367 451 606 473 389 478 383 372 414 418 470 415 420 447 496 403 376 425 898
 366 341 250 441 512 535 488 558 178 317 229 392 313 486 390 302 520 482 448 485 693 370 334 387 645 306 326 833 864 724
 402 362 526 323 438 417 510 460 342 548 244 336 426 638 571 411 472 896 434 594 687 248 339 328 528 457 400 605 294 279
 360 430 683 309 631 324 416 542 435 301  85 858 600 821  30 270 446 299 350 293 686 290 444 744 695 296 868 255 508 246
   6 710 758 377 421  38 374 358 314 322 768 657 716 755 752 318 277 224 689 525 763 203 237 316 607 381 818 228 345 258
 261 893 850 310 234 177 217 717 148 614 391 836 648 793 660 278 282 404 854 308 547 354 291 385 637 312 368 272 242 232
 330 305 698 241 572 240 198 373 884 851 253 725 599 176 753 348 396 194 283 271 504 352 252 706 831 260 643 711 401 165
 147 862 742   2 223 534 214 800 320 195 803 847 286 732 713 166 259 221 839 795 651 197 557  71 810 349 682 172 173 153
 186 412 285 225 356 167 886 679 210 769 767 815 502 802 796 196 245 146 281 897 192 117 200 849 866 218 859 319 201  72
 202 722 191 184 169 888 128 684 300 610 380 804 220 671 743 658 152 209 853 544 119  87 231 772 865 588 597 160 700  84
 212 889 740  79 479 463 726 723  93 204 665 471 159 692 215 809  74 182 846 332  97 640 251 820 395 553 735 263 573 135
 844 776  41 890 830 673  54 669  96 762  49 577 168 207 653 180  67  70 509  94 672 894 108 775 812  90 137 883 876  59
 837 353 321  29 733 171  73 835 114 123 432 676  33 107 249 885 174 587 685 794 575  68 106 764 861 677 756 632 826  39
 112 900   3 877 704 287 729 832  23 714 226 654  66  89 770 848 144 874  91 855 730 408 120 507 375 779  52  64 566 116
  26 585 878  15 132 338 238 891 697 817 668 765  82 151  40 788  99 110 674 523 811 122 852 798 450 104 870  35 513 443

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 7.41925e+06us (= 7419.25ms, 7.41925s)
Wall-clock time (full program): 7.45258e+06us (= 7452.58ms, 7.45258s)
Satisfaction error: 0
Number of search iterations: 2657
Number of local moves: 1122 (including on plateau: 454)
Number of local minimum: 188 (including on plateau: 49)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 597  61  32 337 807  86 442 406 169 766 196 811 525 579 821 461 882 338  30  51 138 266  33 531 831 699 899 537 386 798
 843 736 260  92 512 732 278 539 692   8 168 227 635 760 672 125 527 599 331 649 410  25 306 771 884 203 637  56   1 837
 252  16 561 898 544 479 302 826 436 412 219 839 134 820 661 759 173  98 250 583 723 242 387 190 149 718 339 840 192 473
 780 849 655 873 551 876 166 445  39 207 151 758  44 263 767  29 275 371 139 845 734  49 342 305 593  70 865 753 355 366
 507 673 641  11 155 881 495 794 686 232 632 135 809  65 762 591 801 577  91 127 602 836  59 751 123  13 253 465 681  67
 852 193 222 662 754 685 234 120 746 546 885 542 182  76 549 574 185  62 795 775  80 238  28 171 458 235 886 874   6 900
 496 835 503 233 301 625 683 229 142 462 115 678 691 731 834  40 717 643 241 659 110 693 724 312 180 220  69 529 419 401
 735 186 670 620 841 501 774 346 474 174 225 556 847 256 547 165 319 535 281 810 720 469   9 285  71  89 600 144 610 656
 687 866 189 389 240  52 889 330 747 644 895  19 198 830 388 818 646 365 426 805 289 403 334  42 676 194  85 393 431 245
 143 317 880 738 318 282 478 297 257 209 204 181 822 870 513 705 291 205 246  31 611  94 737 679 298 536 888 399 864 422
 359 598 622 595 308 325 658 341 212 434 626 827 392 133 311  35 300 362 352 848 671 663 642 689 800 402  38 157 594 221
 555 159 435  68  90 467 293 218 890 360 647 226 481 697 208 897 524 669 812  66   4 100 696 757 216 480 892 364 768 476
 475 287 877   7 396 433  27 614 343 333 777 267 609 650 177 803 511 378 575 769 369 179 483 398 440 716  88 224 784 526
 413 316 332 802 425 456 861 432 270 825 618 783 627  12 363 314 184 351  77 415 585 394 616 373 299 748 340 310 814 160
 586 294 400 140 349 380 569 452 491 328 530 324 543 855 466 379 258 682 477 448 596 853 743 136 878 532 191  81 150 404
 552 455 345 315   3 428 228 381 708  14  50 856 447 781 489 117 470 239 384 487 772 570 706 854 497  20 486 785 582 494
 515 254 896 375 119 268 376 430 838  36 514 615 773  21 557 104 509 832 782  74 680 154 875 464 163 506 713 437 112 523
 484 382 788 695 624 114 161 427 789 568 248  58  79 274 132 863 608 105 869 418 851 745 459 534  55 368 444 156 581 636
 162 862 563 500 304 633 517 499 264 554 519  60 739 276 377 833 576 712 409 146 309 516 321 111 273 815 729 223 502 211
 344 558 451   2 715 367 450 172 562 548 147 763 601 520 588 118 566 533 350 521 176 711 460 640 550 372 108  83 722 817
 280  53 424  22 703 677 122 292  43 698 893 215 214 740 107 891 385 725 522 106 630 675 764 284 629 730 395  48 707 541
 202 645 116 719 684 414 770 247  95 844 103 573 564  34 702 787 145  75 439  78 137 397 578 638 604 872 175 741 652 485
  96 468 322 704 518 206 326 857 383 295 423 619 690 639 347  24 628 288  23 799 283 353 540 446 858 498 816 744 249  73
 244 391 129 733 565 883 390 243 621 813 121 271 405 153 279 323 665 457 792 612 664 796 158 408 231 727 188 634 131 488
 200 361 528 327 109 504 806 187 710 728 152  10  99 463 356 303 648 786 846 141 449 492 797 714 617 850  45 590 290 407
  93 871 357 296 860 790 167 824 765 262 417 374 453 867  18 894 613 313 651 130 490 370 259 124  97 272 587 236 493 572
 195 605  84 545  57  26 354 752 429 438 842 701 508 819 666 164 197 411 113 571 778 654 237 756 421 441 623 606  17 505
 674 286 755 779 471  82 749 553 416 750 584 653  72  47 170 700  54 879 726 335  46 660 336 761 251 420  64 560 667  15
 307 217 201 329 603  87 592 454  37 828 791 102 269 101 510 694 320 482 829 868  41 688 631 265 580 210 859 804 148 668
 887 721 277 709 589 776 358 808 261 199 823 472  63 183 178   5 538 443 657 348 567 230 255 126 793 559 213 742 607 128

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.38716e+07us (= 23871.6ms, 23.8716s)
Wall-clock time (full program): 2.39045e+07us (= 23904.5ms, 23.9045s)
Satisfaction error: 0
Number of search iterations: 12002
Number of local moves: 3065 (including on plateau: 1453)
Number of local minimum: 1060 (including on plateau: 188)
Number of resets: 6
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 829 246 776 834 541 595 143 119 356 660 546 427  42 742 103 598 132 897 327 203 577 478 130 467  18 361 868 895 224 381
 517 715 869   1 657 168 270 318 352 402 279 825 889 823 844 505 611 245 149 139 180 769 778 165 366 301 158 600 179 441
 413 372 160  78 382 313 806 886 358 832 655 792 877 281 790  48 280 408  99 617 220 153 164 841  69 793 102 619 885 222
 722 648 176  83 857  31   6 713 548  67 873 797  71 124 157  23 782 645 204 481 473 791 634  89 679 860 422 253 876 430
 809 499 781 415 100  14 178 656 798  65 191 676 881  81 448 785 845  84 136 817  50 216 697 750 538 215 492 194 673 431
 811 387 563 783 111 780 184 307 672 259 495 630 583 698 816 580 128 229 316 631 524 812  28 884 206 745  41   7 295  10
 596 186 362 115 183 494 363 840 744 821 805 488 161 241 212 762 765 342 507 862 170 123 321 824 375 276 887 197 117 376
 758 221 334 192 155 425 859 134 556 312 207 623 297  92 163 122 393 565 705 333 608 883  29 424 621 597 822 518 760 807
 643 736 591 511 680 756 535 730  24 335 738 285 112  38 284 101 708 187 771  91 133 258 539 626 653 240 800 156 768 486
 691 827 294 332 304 107 898 890 239 879  25 374 196 533 896  32 396  27 703  98 227 838 401 732 400 271 339 749 670 147
  46 113  54 299 261 287 870 126 171 337 831 796 810 531 723 453 252 247 528 794 421  12 552 802 602 550 202 658 351 836
 615 368 815 490 503 682 148 581 144 661 775 391 248 839 570 593  34 582 574 205 345 121 369 564 211 296 525 560 601 105
 151 545  94 447 509 604 899 439 757 418 498 302 340 727 378 357  88 900  49 257 469 379 766 317 242 311 350 751 616 555
 772   4 398 395 181 404 440 282 414 799  79 735  52 892  30 689 377 864 274 397 474 417 519 795 348 288 856 466 559 315
 167 472 423 547 724 668 739 554 236  58 561 476 463 710 588 272 512   9 489 603 405 443 188 700 506 386 432 491 543 150
 209 371 228 557 267 365 712  70 420 470 373 385 774 529 411 521 233 461 569 388 484 389 719 579 522 585 409 380 500 635
 435 292 410 355 344 403 477 575 118 169  11 190 632 419 433 493 752  86 576 683 468 540 786 346 520 298 833 642 534 695
 605 193 620 639 324  62 412 515 709 871 851 199 326 502 562 866 145 504 542  95 814 120 208 173 232 483 718 263 310 652
 275 622 549 828  97 675 434  33 637 460 578   5 849 888 644 651 610 308 587 720 455 633 131 254 306  19  26 446 465 330
  21 568 544 638 572 437 219 777 479 853 109 364 250 230 182 685 429 532 551 174 300 813 636 526 354 872 646 390  55 309
 640 754  45 516 450 624 138 159 291 594 510 152 787 589  68 451 553 536 584 716 606 278 438 116 693 485 436 235 217 854
 763 573 590 641  51 671 628 567 599  61 108 314 726  60   2 678 717 667 338 662 650  63 687 114 875 514 303 428 449  16
 331 213 266 741 265 325 454 725 665  85 737 323 612 666 256 243  37 471 613 264  82 649 858  56 759 893 702 874 127 223
  17 456 855 305 664 444 277 497 218 110 618 731 225 283  53 773 740 647 154 714 530 586 863  43 320 734 336 475 238 609
  39 843  93  47 852 753 558 141 681 894 231 177  15 445 688 416 129 341 704  13 835 699 269 706 625 669 251 501 293 607
 198 537 319 406 808 480 755 659 627  73   8  77 663 747 803 686 674 146 764 349 746 426 677  80 370   3  20 201 846 367
 290 707 592 711 743 137  90 701 162 249 761 629 452 273 458  59 842 508 880 571 820  44  35 721 185 125 104 347 482 837
 210 513 172 496 848 189 614  66 360  76 260 566 748  64 729 262 861 779 322 733 142 399 527 442 847  87 694 487 255 767
  75 462 850 654 200 804 234 166 788 826 728 690 394 140 359  22 106 891 286 135 784 353 329 343 878 457 684 268 383 226
 867  72 692 459 882 818 175 289 392 819  74  96  40 328 865 789 384 407 214 770 523 830 237  36 195 801  57 464 244 696

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.78666e+07us (= 17866.6ms, 17.8666s)
Wall-clock time (full program): 1.7899e+07us (= 17899ms, 17.899s)
Satisfaction error: 0
Number of search iterations: 8194
Number of local moves: 2350 (including on plateau: 1045)
Number of local minimum: 762 (including on plateau: 123)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 113 862 852  90 777 642 173 789 783 751 561 426 103  60 892  35  68  33 863 741  58  87  56  44 708 870 847  51 748 432
 633  49 134 722 622 856  50 864 762 689 121  98 629  65 146  38  36  41 840 855  48 815 116 106 857 773 875  71 893 711
 578 833 256  82 589 750  83 596 829 778 168 666 125  66  42 111 119 109 636 175  45  89 707 695 880 859 889 820  63 877
 699  72  55 834 533 638 849 799 635 745 419 422 141  75  97 841 123  93 782 754 162 126 127 133 851 781 819  78 100 732
 667 812 150 681 896 900 780 798 758 739 200 178 136 128 137 716  92 107 756 832 265 131 114 117 881 145 190 255 124 830
 690 606 161 643 705 738 197 494 846 873 112 192 586 186  95 601 208 169 639 775 181 556 172 205 231 898 202 147 861 546
 583 155 167 252 878 649 890 263 585 826 198 242 184 138 201 237 228 203 697 143 206 736 194 899 668 614 713 274 866 626
 845  94 129 825 885 868 247 879 212 680 297 243 122 179 218 292 268 224 488 305 822 891 854 157 310 824 261 327 185 584
 696 241 293 602 790 791 246 232 895 472 222 217 108 278 236 233 270 220 269 871 702 897 342 239 742 858 318 211 298 726
 760 313 264 572 757 551 808 320 207 882 316 152 339 279 266 749 340 371 694 729 661 289 336 360 260 276 287 307 267 803
 776 306 347 813 653 692 284 272 210 251 888 346 370 324 296 333 326 376 355 362 720 379 740 425 409 456 290 365 309 842
 887 234 380 766 457 654 353 334 368 352 277 724 366 302 361 581 433 285 608 312 850 294 363 387 427 328 401 408 486 537
 767 367 349 728 618 535 343 341 225 441 372 385 301 428 364 319 325 719 480 403 787 369 894 329 377 395 398 410 350 396
 466 411 405 449 400 475 317 374 447 442 354 595 446 876 414 378 448 388 504 358 338 345 886 499 435 478 384 404 402 397
 459 416 492 356 418 477 420 469 496 421 406 389 521 424 262 479 455 471 357 431 771 392 498 637 485 303 467 452 462 429
 383 482 413 443 375 559 283 575 394 536 436 304 528 412 464   6 474 440 493 516 470 515 437 553 503 599 630 495 407 390
 530 491 344 257 543 529 444 391 177 532  52 542 451 460 381 330 522 524 607 450 508 438 523 399 497 613 511 439 520 510
 393 517 514 526 415 300 571 505 506 473 149 484 183 461 549 550 351 558 574 540 582 545 501 527  17 648  12 463 554 547
 120 519 573 557 282 273 594  22 507 541 562  57 564 619 548 348 698 481 204 593 219 221 518 590 682 598 502 624 683 216
 148 658 652 176  40 286 259 591 646 552  80 568 500 531 634 254 483 679 373  39 563 579 512 445 567 597 603 555 610 335
 188  70 544 156  88   3 580 609 664  76 686 566 615 687 513 314 569 600 577 605 151 672 382 693 570 588 620 534 509  86
 193 611 676  81 240 140 703 640 453 271 565 616   1 644 576 688 665 623 191 632 288 280 539 685 199 189 723 675 691  37
 132 671 645 651 490 196 560 230 468 249 759 423 788 731 538 659 604 281 248 154 322 662  21  24 660 244 733 734 592  46
 337 701 709 625 250 215 525  19  99   4 706 670 612 669 721 656 647 735 628 712 454 627 159  16 258 110 678 104 730 139
  61 715 743 417 164 386 764 617  74  79 587 677 765 727 663 700 807 763  28  64 458  29 657 797 650  43  67 714  54 245
  96  31 710 359   8 227 828  32  25 101 804  53 704 772 768 631 844 823 213 434 621  73 718 860 105  10 774 801 837 253
 299 717 818   2 308   7  84 674 115 130 838 786 795 489 752 848 779 769 135 226 655 827 195 725  23 171 163 744 166 275
 311 806 839 223 238   5 187 102 165  15 843 794 796 817 809 821 755 816  62  47 487 641 805 872 158 170  26 430 331 144
 229   9  91 295  69 160 209  11 811 291 753 835 867 874 802 737 793 853 180 142 800 836 684 883  20  59 118 792 235  77
 476 746 810 332  27  13 884 673 153 323 784 865 869 814 770  30 785 761  34 315 321 174 465 214  85  18  14 831 182 747

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.97589e+06us (= 3975.89ms, 3.97589s)
Wall-clock time (full program): 4.0088e+06us (= 4008.8ms, 4.0088s)
Satisfaction error: 0
Number of search iterations: 1006
Number of local moves: 716 (including on plateau: 215)
Number of local minimum: 40 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 685 875 258 804 618 603  45 792 124  46 723 852 585  60  32  74 811  89 169  30  99 793 857 133 680 436 150 369 854 869
 212 896 743 138 693 855  83 876 119  75 844 106 170 872  77 192 216 166  57 284  59 509 886  85 858 868 898 129 655 894
 195 241 560 148 636 155 118 879 254 816 579 900 128  97  42 678 848  56  66 888  54 805 698 201 772 112  61 739 899 890
 165 117 172 832 667 829  34 690 646 427 642 649 149 874 210 191 323 856 137  76 223 243 837 230 783 626 859 162 768  98
 167 111 225 623 674 799 142 787  72  71 827 587 260 538  95 756 200 815 328  27 850 813 828  44 801 434 590 113 752 186
 567 270 824 398 491 683  96 622 168 126 714 864 289 795 159 822  14 825 178 177 838 610 702 140 572 305 235 121 634 276
 877 175 144 238 188 386 594 174 180 220 835 141 107 313 843 280 267 692 182 880 870 744 300 887 500 249 884 293 853 219
 800 309 233  80 582 803 263  33 217 342 510 247 331 272 686 283 261 703 311 866 525 701 729 265 599 303 611 706 652 292
 352 306 215 653 608 851 669   9 580 266 771 290 275 286 123 779 338 807 337 679 878 203 304 644 778 404 379 291 377  63
 575 423 430 253 232 643 229 257 464 501 362 450 227 302 454 734 511 629 390  37 836 354 288 865 671 339 252 842 684 281
 796  39 892 333 183 577 789 268 231 416 633 759 782  62 163 733 403 867 246 881 760 612 371 103  69 327 278 422 194 326
 340 282 397 308 297 418 566 483 381 317 176 607 661 320 345 456 762 862 834 234 181 568 218 846 581 324 414 448 616 273
 747 415 329 206 732 214 400 863 408 455 277 322 676 433 236 396 393 226 378 738 237 368 745 421 451 222 871 493 520 343
 505 429 554 365 402 262 392 312 374 370 468 539 410 551 638 391 384 256 469 443 496 428 435 860 548 269 521 447 641 356
 583 486 221 728 285 405 533 449 506 431 387 264 380 318 504 522 346 532 613 409 574 596 513 359 480 537 529 809  86 130
 540 467 604 239 553 664 361 417 503 459 650 432 189 310 490 242 518  48 695 531 477 355 441 476 547 399 514 425 484 485
 453 565 763 367 294 446 495 407 439 465 440 444 205  17 475 411 492 597 474 808 746 530 389 360 420 383 497 351 325 457
 151 769 348 471 109 656 885 213 437 385  93 534 494 499 462 535 716 621 628 202 593 363 458 699 382   7 463 376 335 631
 516 840 544 873  16  88 250 452 466 663 401 279 711 645 472 561 274 614 173  90 536 442 512 705 336 298 543 488 156 571
 438 589 461 562 116 546 749 199 750 341 502 754 564 556 498 259 301 366 424  15 487 394 481 555 373 741  38 528 197 731
 316 545 578 358 720 161 196 742 883  49 541  12 526 600 658 557  58  52 697 635 364 296 609 388 550 722   2 725 315 660
 682 640 193 648 115 552 721 712  35 615  55 592 184 657 672  67 814 209 715 145 412 563 559 770   6 606 785 696  22  73
 570 489  87 624 101 357 861 110 588 549  92 670 651 347 666  65 781 344 573 601 122 542  21 780 204 790 372 691 208 659
 523 727 132 774 160 508 395 630 665 755 125 146 794  40 620 507 619 179 897 895 349 426 187  50  51 598 584 105 248 826
 135  20 765 147 806 244 639  53 748 637 314 605  78 737 798 164 736 406 726 802 524 152 100 295 517 647 153 700 114 753
 445 845 104 681 158  47 784  82 889 764 157 190 694 677  36 717 654 413 817 127 131 627  10 758 595 332 673 319 307 482
  26  64 751  11 704  19 810 419 120 687  84 240 719 777 819 707 586 299 891 841 207 134 171 478  28 847   4 708 788 576
 224 823 776 228 839  23 251 740 775 791 527  79 766 830 710 833 773 108 625 730 617  18 519 185 139   1   3  31  81 470
 675  70 882 668 718 713 353  24 662 709 154 893 724 689 735 143  91  29 287 350 334 321 102 558  13 820 761 515 479  43
 255 688 330 757 818   8 812 821 831 767 632  68 786  41 797 460  25 849 198  94 136   5 245 375 211 569 591 473 271 602

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.0435e+07us (= 10435ms, 10.435s)
Wall-clock time (full program): 1.04679e+07us (= 10467.9ms, 10.4679s)
Satisfaction error: 0
Number of search iterations: 4070
Number of local moves: 1370 (including on plateau: 533)
Number of local minimum: 313 (including on plateau: 69)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  23 608 528 642 723 617 752 497 367 513  47 243 747 137 361 780 298 358  86 769  34 196 724 759 678 504 428 273 691 132
 529 242  63 626 398 679 718 161 323  75 328 480 264 169 639 515 738 299 688 587 486 170 355  97 818  94 742 526 896 810
 820 126 448 195  89 274 878 560 594 833 431 252 899  81 783  84 570 717 534 300 381  85  60 475 412 750 139 368 607 770
 837  61 276 185 835 765 307 283 519 795 867 663 199 319 469 500  96 676 870  24 771  73 493 801 506  55 369  44 825  32
 232 874 400 883 879 533 465 190 172 119 318 436 459 282 434 474  99 156 256 327 840 194 869 201 729 636 224 897 523 414
 204 635 637 133 799 155 488 234 103 808 797 577 848 569 743 379 532 535 235 499 634  45 364  18 581 668 277 681 124 213
  76 269 656 365 687 374 455 463 200 334 655 859  79 618 366 589 697 430 447 177 150 792 487 257 621 892 314 450  48 708
 710 582 832 502 632 116 152 719 130 272 166 214 545 893 798 189 726 181 511 304 629 579 900 520 203 138 225 693 184 270
 735 844 452 125 118 768 895 375 672 175 470 325 144 426 111 267 129 562 802 259 707 863  83  22 603 107 853 265 583 775
 396 586 209 552 143 380 429 658 284 807 222 481 578 682 145 305 468 207 834 784 384 604  53 187 518 219 117 842 615 826
 686 180   8 333 338 538 249 444 793 376 806 223 461 352 362 326 275 748 614 421 584   9 873 819 397 877 420  72 789 142
 179  71 210 164 385 135 245 745 565 330 476 343 442 387 593 665 473 490 628 559 794 685 568 749  62 602 253 644 440 633
 262 336 153 860 675 598 739 346 776  35 554 347 285 241 371 651 856 477 258 123 530 425 516  33 348 228 684 393 785 630
 546 836 337 435 549 120  56 647 548 357 238 662 294 822 302 689 409 508 216 800 494 885 248 191  37 698 131 335 816 309
 370 382 563 868 281 110  43 244 609 466 419 456 423 353 709 340 344 415 704 638 231 670 886 408 239 483 805 389 417 250
 590 790 495 821 543 674 585  41 311 105 424 823 134 654 482 671 141 377 843 121 597 310 661 756 237 289 592  74 148 226
 378  25 453 760 154 702   1  67 566 320 104 850 507 183 652 522 445 391 601 846 741 537 555 613 193 711 492 791  65 290
 596 422 324 100 737 168 485 561 467  14 864 114 266 767  20 402 736 754 865 699 438 830 229 351 386  88 657 212 777 186
 286  42 696 525 574  78 625 875 540 884 640 829 606 677 437 268 147 572   2  17 345 449  66 666 612 211 755 301 623 167
 251 460 624 165 390 496 890 882 498 786 653 102 127 350 866 512 622 176 342 296 557 764 217 399 406 198 174 317 541 454
 458 255 781 733  70 112 220 157 151 595  77 766 778 413 605 872 411 462 339 115 230 388 293  98 280 871 881 889 354 861
 279 404  57 236 451 828 796 725 182 649 645 254 576 650  38 149 303 247 315 163 446 575 544 849 857  50 550 705 732 260
 312 720 573 713 162 631  93 227 619 746 410 218 641 263 101 439 728 817 774 703 441 113 122 690 159 472 478 539 542  69
 553 261 763 206 551 772 721 394 503 839 363 395 356 854 757 313 278  80 158  16 322 827 700   3 160 215 558 627 146 824
 341 862 291  21 753 108 308  92   4 727 841 804 567 664 722 405 332 773  90 891 128 271  64 680 683 443 106  46 660 838
 813 894 521  13  19 761  15 457 531 501 360  91  59  95   5 514 695 197  40 471 491 427 779 847 524 855 831 851  49 809
 845 556 731 479  26 484 547 692 306 464 432  87 694 329  12 205  51 758 815 852 173 620 208 887 898 373 714  31  58 188
 667 762 788 580 359 221 591 715 701  29 178  11 814 646 509 527 643 712 192 858  39  52 811 287 571 202  54   6 331 659
 246  27 616 407 803 536 349 416 669 321 297 876 716 611 383 233 673 372 316 109 517 489 751 564 505 706  82 744  10 171
 295 403  30 888 392 782 418 648 812 240 433 734   7  28 740 730 600  68 140 787 401 588  36 288 292 880 610 510 136 599

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.99449e+07us (= 39944.9ms, 39.9449s)
Wall-clock time (full program): 3.99779e+07us (= 39977.9ms, 39.9779s)
Satisfaction error: 0
Number of search iterations: 23200
Number of local moves: 5459 (including on plateau: 2900)
Number of local minimum: 2196 (including on plateau: 321)
Number of resets: 12
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  18 830  57 427 203 783  96 146 864  79  36 333 842 809 819 752  52 844 849 218 188 145   2 768 868 788 722 223 751   3
 108 764 379  93   6 761 876 852  29 799  73 747 813 879 840 838  72 829 224 122 182 233 134 267 846  77 192 687 777  16
 350   1 210 713 762  90  33 138 863 718   9  94 888 875 797 881 244 870 274 207 247  61  35 672 255 866 704 124 834 700
 791  34 103  87  23 828 708  49 811 341  27 682 818 770 774 804 364 865 366   8 795  39 309 754 693 857  14 314 160 327
 268 753 172 717 140 775 538 794 769  25 148   7 845 744 860 817 344 701  62 732 579  17 296  56 796 808  67  19 547 119
 374 720  88  99 792 104 878 433 604 614 129 773 742 697 822 771 149 347 716 169  13 329  26 659  48 707 798 164 522 228
  76  22  84 594 637 638 281 359 856  46  50 589 853 776 690 731 147 790 619 278 746  24 115 239 749 784 648 111 694 289
 139 571 261 706 723 495 624  43 730  41 300 598 654 570 709 729  58 675 597 126 629  75 424 221 683 681 800 367 121 165
 487 625 288 641 575  20 649 663  10 645  80 705 358 552 657 621 612 669  86 187 595 699 340  15 544 599 661 143 588 201
 560 616 234 715 591 711 606 179 652  91 435 695 676 627 680 573  74 609 116 136  65 217 348 352 577 569 558 513 550 190
 216 553 525 545 531 511 608 162 668 666 602  54 583 498 559 481 174 555 151  89 691 334 213 491 580 532 464 620 622 237
 610 584 312 563 643 586 561 131 566 284 382 157 477 486 564 590 459 617 189 554 528 478 254 512 360 601 665 283 232 287
 515 623 475 383  68 539 618 650 576 392 536 501 541 413 516 457 386 109 453 484 714 227 371  12 520 549 480 527 503 377
 451   4 342 582 465 514 505 442 330 530 286  11 507  63 496 354 565 562 603 656 521 567 298 596 670 494 537 474 635 455
 463 508  28 408 476 369 452 432 673 443 414 502 534 548 517 490 376 578 572 467  85 523 391 384 593 454 460 396 479 500
 353 422 568 418 276 466 423 546 551 471 262 470 497 219 434 642 631 313 468 473 461 393 556 406 485 412 445 526 482 446
 833 259 462 426 403 581 431 390 458 345 510 489 450 504 343 402 755 229 306 529 394 305 488 448 380 363 370 404 786 472
 814 542 440 397 388 436 401 331 339 419 664 336 447 493 308 415 803 826 303 220 177 328 696 304 469 375 385 410 405 644
 430 357 615 362 272 428 260 429 519 373 719 855 361 892 275 372 399 407 198 420 323 574 626 686 381 411 417 540 277 337
 437 302 441 318 378 324 821 678 249 398 400 273 243 310 351 321 365 335 807 349 613 438 639 772 230 322 356 421 885 739
 748 293 758 368 235 193 253 425 315 506 655 509 141 294 325 171 346 211 781 782 816 835 662 301 251 264 338 815 319 605
 557 252 710 316 175 166 355 734 256 836 785 824 263 285 173 269 660 231 225 332 202 585 740 900 279 222 387 884 280 632
 745 265 674 757 248 270 158 653 416 204 738 250 307 154 106 257 851 266 282 802 167 861 890 850 245 168 226 692 292 721
 880 241 787 156 150 185 895 688 132 858 724 271 123  69 215 183 533 242 756 733 117 524 736 889 101 317 195 841 246 728
 299 291 600 113 191 883 297 444 326 206 750 184  45 200 144  78 839 197 743 882 869 886 667 163 887 110 118 793 677 633
 214 483 806 112 801 290 155 867 640 698 894 543 240 209 180 135 712  81 159 636 872 778 587 409  40 893 161 194  55 671
 873  98 896 727 810 133  66 725 186 320 848 170 102  38 176 130 726 120 685 862 114 689 759 137 805  37 832 518 153 780
 628 891 456 127 823 837  60 142  53 877 634 854  64 449  82 105 395 152 760 767 898 827 651 311  83 125 205 258 236 765
  97 874 847 825 831 107 779 178  42 679 684 196  70  21  44  51 658 238 535 592 702 789 763 646  92 100 871 607 208 389
 181 737 897 820 899 492 128 812  32 611 741 843  31  71  59  95 766  47 630 703 212 735 499 295   5  30 439 647 199 859

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.14077e+06us (= 4140.77ms, 4.14077s)
Wall-clock time (full program): 4.17371e+06us (= 4173.71ms, 4.17371s)
Satisfaction error: 0
Number of search iterations: 1351
Number of local moves: 670 (including on plateau: 178)
Number of local minimum: 85 (including on plateau: 25)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 105  14 205 598 126 582 883 226 287 483  98 621 262 238 857 544 327 743 619 747 299 375 334 351 830 390 654 175 653 889
 323 818 664 577   5 560 514 559 833 148 791 143 167 195 429 765 549  53 398  96 258 760 727 248 807 736 149 708 494  41
 884 223 667 210 878 842 476 222 243 190 420  72 407 182 724 228 372 524  45 758 599 246 858 819  97 575 454 360 104 836
 571 773 311  90 865 337  67 861 121 572 475 645 580  25 473 814 142 820 297 618 730  80 665  38 252 787 170 342 690 304
 860 257 399 179 318 899 235 431  71 784 187 602 250 839 588 609  78 300 900 129 651  84  86 362 280 752 804 769 305 507
 350 162 849 325 137 593 354 101 628 610 783 605 751 119 212 739 824 850 822 219 419 176   3 487  29 292 496 437 795 348
  19  76 166 663 873 832 118 636 489 731 800 763 135 872 729 185 409 423 523 221  28 509 809 623 331   2 512 283 733  22
 546 366 425 762 414 164 146 774  23 707 726 130 759 349 127 380 322 259 868 236 134 831 234 615 408 155 444 691 677 843
 116 871 511 777 168 326 485 128 371 224  81 449 697 896 723 218 534 333 282 202 416 391 608 595 495 376 642 680 439 481
  13 648  91 688 328 837 874 826 626 890 463 269  77 270 251 441 583  65 851 652 879  87  54 244 829 197 374 291 710 107
 172 886 673 204  73 122   8 313 482  59 581 569 555 735 306 216 678 767 355 888 503 600 866 625 700 158 528  70 177 646
 245 160 895 521 395 267 718 535 286 548 877 803 542 479 893 332 253 365 536 312 378 426 573 232 369 633 428 314  83 117
 834 352 450 411 685 578 150  15 780  18 728 231 317 761 298 432 309 480 793 766 647 493 734  12 392   7 606 504 389 343
 412  30 590 622 689 308 722 533 230 461 401 658 357 284  33 550 138 169 579 320 732 817 701 180 499  94 808 319 781 498
 676 617 486 502 173 530 748 295 144 211 132  57 456 141  39  20 864 827 184 859  49 627 821 156 501 709 810 561 435 885
 778 329 448 279 293 191 163 338 584 147 545 552 434 894 527 455 520 208 106 424  47 396 672 445 281 870 620 576 790 603
 330 562 294 518  31 361  79 703 611 635 694 725  69  68 346 776 447 655  88 522 159 786 188 881 698 358 798  40 519 574
  10 265 662 321 840 100 744 525 847 794 340 154 802 852 341   6 289 882 368 260 854 108 477 629 491 274  75 844  95 266
 563 471 458 692 702 838 656 417 206 513 310 686 465 214 855  17 845 876 484 547 145  11 103 459 157 353 174 510 738  50
 585 554 254 614 670 302 385 339 124 490 196 813 632 474  44 705 566 594 203 452 263 570 247 841 110 757 446 377  46 862
 403 140 488 152 529  92 451  74 537 687  82 616 397 716 782 695  35 543 650 564 288 742 161 853 133 347 719 770 597 272
 556 779 666 239 413 225 532 453 131   1 601 657 198 785 587 797 433 553  89 125 237 307 186 880 750 869  52 630 344 440
 400 538 856 848 278  55 669 891 661  99  43 505 612 713 466 379 875 199 233 367 815 356 641  42 402 462 109  63 755 183
 112 303 165 264 897  51 892 799 565 102 404 469 771   4 178 825 373 792 828 898 335 209 271 277 753 567 421 217 215 558
 721 806 301 551 596 737 592 171 706 201 151 359 290 393 867  27 796 261 394 296 846 754 285 227 516 604 383 113 114 457
 720 711  34 153  16 415  93 591 500 430 442 613 634 120 540 745 213  56 139 746 568 242 381 740 517 638 422 637 624 835
 136 659 749 315 756 679 115 111 644 671 640  32 682 805  85 276 255  48 683 240 468 816 675 674 649 443 364 256 273 316
 772 887  37 715 741 207 643 823 539 681 181  62 684  36  64 470 436 418 241 336 764 557  24 696 712  60 193 508 324 704
 714  58 492  26 220 717 811 194 660 789 531 268 123 541 788 464 249 386 497 370 478 775 693   9  21 668 472 607 427 467
 589 200 229 699 406 768 192 631 586 639 812 387 410 515 363 405 801  66 460 345 526 384 438 275 506 382 388 863 189  61

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.68647e+07us (= 36864.7ms, 36.8647s)
Wall-clock time (full program): 3.68977e+07us (= 36897.7ms, 36.8977s)
Satisfaction error: 0
Number of search iterations: 20666
Number of local moves: 4885 (including on plateau: 2439)
Number of local minimum: 1946 (including on plateau: 320)
Number of resets: 11
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 899 153  74 669 666 872 303 770 328 774 615 855  68  73  46 735  42  25 880 852 111  32 248 836 347 409  98 811  37 887
 195 864  82 185 866 842  97 831 856 750 529 520 256  81 143 881 545 573 729 595 436 170 891  89 259 166  99 743 147  95
 838 896 442 619 514 873 117 660 846 122 287  57 121  96 186 632 107 177 345 403  94 744 315 602 540 889  83 900 149 861
 878 100 826  79 626 572 527 724 508 504 749 847 414 580 194 220 128 215   2  28 850  47 888 165 858 413 467 265 109 732
 600 655  85 808 886 819 246 766  41 115 898 583 210 275 586 216 124 119  48 767 253  56 860 751 617 340 178 701  75 837
 536 440 173 377 624 745 159 834 698 292 800 678 189  51  86 844 105 162 815 201 553 190 848 164 885 715 110 200 853 188
 895 207 198 784 753 810 862 163 351 130 833 284 126 132 569 470 785 336 160  30 150 482 890 570 754 418 175 870 148 180
 813 212 155 823 502 219 239 616 648 167 349 285  10 234 465 863 301 532 788 820 144 790 696 218 759 647 258 267 417 278
 638 252 151 314 493 283 543 671 883 331 733 272 360 276 127 670 138 288 472 228 737 739 710  33 196 236 756 882 481 622
 446 805 461 104 358 326 620 687 713 718 551 247 560 538   8 374 224 372 182 305 865  50 636 324 722 765 294 752 263 245
 588 191 238 884 707 365 429 563 356 341 206 281 262 139 261 777 803 550 473 720 237 874 443 423 249 787 317 781  91 179
 544 251 235 255 795 408 344 531 574 771 334 798 348 343 869 380  64 333 468 131 313 726 631 320 383 300 233 821 682 330
 183 657 783 273 517 827 176 589 295 359 419 430 367 794 230 335 395 552 354 362 474 308 353 454 438 727 312  16 714 822
  84 614 523 260 697 485 511 564 510 421 407 299 375 381 539 309 268 404 484 464 565 346 599 379 388 824 537 269 491 518
 479 455  52 559 214 603 422 875 476 243 434 426 393 323 549 134 466 322 806 841 271 604 402 522 501 480 405  49 633 576
 613 302 352 397 181 587 601 363 535 521 435 387 534 420 108 606 449 656 490 651 444 457 469 471 274 411 495 373 486 447
 270 445 686 525 598 389 298 399 437 692  58 355 433 688 385 370 441 500 452 406 129 548 338 768 621 541 462 487 503 291
 289 746 593 498 184 412 325 204 492 337 158 425 293 561 566 773 547  29 516 581 775 664 400 524 432 241 424 528 542 456
 209 477  60 679 106 629 342 364 140 499 546 135 193 451 463 641 577 594  34 431 690 427 478 683 605 554 893 496 512 607
  72 450 533 556 222 172 386  45 494 618 634 390 876 675 755 483 579 748  39  26 804 415 401 394 439 114 653 240 663 639
 329 665 703 659 306 567 368 161 519  40 526 568 628 789 488 515 674 555 507 578  12 592 318 760  55 558 136 205 658  76
 562  36 738 892 146 642 459 156 254 505  71 673 611 652 684 709 625 497 585  80 416  22 244 695 357 608 812  20  88 676
 818  90 297  67 699  62 646 229 304 392  35 428 640 609 719 582 286 644   7 396 672 680 489 668 116 627 691 137 791 694
 225 689 763  59 211 475 649 369  15 667  65 610 630 448 778 378 840 801 677 319 339 277 168  21 712 133 226 590 731 650
  70 835 513 366 361  13 458 125 506 596 203 859 557 279 871  43 786 849 721 662 223  18  66 716 851 332 894 227 509   6
 266 187 764 327 280  19 637 202 725   3  63 171 769 758 597 197 723 321 780 736 741 717 257 681 242 282 747  87 575 661
 296 704 654 460 199  92 705  93  77 817 734 802 814 757 825  23 208 761 685 120 391 591  38  11 453 145 371 250 868 571
 645 728 708 103  69 290 839  78 772 221 879 311 845 612 867  17 799 792 213 154 897 584 123 316 192 157 828 310 152  14
 231 382 830 232  24   5 809 829 118 762 700 530 857 623 141  31 793 102  61 796 816 635 142 740 169 643 779 384 350   1
   4  27 843 702 711 112 398  54  44 807 264   9 776 877 410 307 693 706 742 832 113 730 174 217 101  53 782 854 797 376

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 7.73638e+06us (= 7736.38ms, 7.73638s)
Wall-clock time (full program): 7.76935e+06us (= 7769.35ms, 7.76935s)
Satisfaction error: 0
Number of search iterations: 2990
Number of local moves: 1348 (including on plateau: 557)
Number of local minimum: 207 (including on plateau: 71)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  60 839 899 811 875  30 641 662 552 774  57 278 881  18  44 730 898  91  52  28 756  59 646 232 770 675 897  32  99 129
  23 100  29 706 833  38 805 635 594 885  51 798 874  13  90 611 894  93 328 114 786  80 807 658 787 873 895  21  24  70
 205 783 596 870  89  49 877 618  82 676 753 144 886  55  43 724 196  85 494 495 761 667 619 637 882 810 177  97  50  95
  87 773  88 900 616 137 731 741 112 854 262 195 712  66  67 823 131 545 771 132 838 104 713 547 802 855 111 108 223 471
 684 846  61 758 466 122 483 778 110 872 692 657 884 105  77 687 121 754 561 149 424 178 153 703 469 861 152  84 173 451
 738 135  74 896 181 487 856 183 154 890 791 867 759 158 150 853 179 143 788 140 862 138 161 841 775 163 219 176 172 586
 796 253 275 199 141 170 521 816 210 880 240 878 645 212 156 672 258 593 722 164 710 192 840 629 263 801 238 167 252 622
 241 237 526 746 227 215 640 891 234 668 607 782 711 197 203 649 200 229 655 204 844 213 860 762 699 208 236 216 235 180
 268 272 548 287 265 267 266 777 505 700 690 809 301 260 221 211 313 285 613 305 576 889 863 831 231 293 281 257 429 702
 346 246 626 339 209 363 289 740 242 460 797 377 249 298 348 726 256 222 632 504 871 314 817 888 300 370 224 304 310 848
 309 292 732 198 296 306 332 835 297 321 893 384 350 323 311 736 312 320 834 836 358 271 319 716 334 340 318 355 493 794
 239 369 749 349 325 295 785 367 341 329 279 892 398 307 356 324 389 737 799 371 333 342 365 865 456 395 303 335 366 755
 368 439 581 410 402 381 387 375 374 430 642 317 725 418 436 849 404 416 659 393 465 372 426 691 344 315 446 406 245 399
 474 423 696 394 408 463 357 330 401 405 577 437 427 409 462 391 412 420 497 440 382 396 448 457 388 475 454 488 376 828
 400 443 431 327 458 485 354 514 415 378 480 411 442 887 385 693 428 453 379 433 403 345 392 476 407 455 450 531 477 383
 537 432 425 449 461 472 435 351 441 498 444 337 464 419 492 499 489 422 299 445 414 520 470 438 397 510 486 523 361 585
 565 491 524 413 166 532 417 513 502 386 468 509 569 482 541 490  53 511 148 481 500 501 467 326 452 527 563 421 550 447
 473 535 244 516 478 169 503 556 522 507 479 536 248 533 564 484 539  69 338 291 496 597 506 582 459 515 573 542 554 107
 583 610 353 568 604 434 201 628 544 282 390  27 518 543 546 508 572 214 157 534 530 519 615 145 551 553 549 512 592 133
 557 602 174 634 590 599 574 560 264 606  36 579 601 559 575 540 591 558  33 109 280 528 587 277 538 562 625 567  83 127
 650 525 254 190 612 617 206  64 588 316 274 580 139 571 529   7 630 598 230 639 228 636 600 286 648 709 589 661 631 308
 614 669 343 595  35 621 720 202  65 217 609 362 665 627 677  40 653 605 269 570 644 101 106  75 664 660 679 643 651 134
  72 683 259 623  34 682 578   8 673 603 142 633 218 656 695 124 689 688 165 701  79 674 126  42 670 681 743 707 620 247
 678 751 360 160 742 727  96 103 686   4  31 654 128 671 767 207 638 120 220 697 151 750  54 336 715 717 734 685 663 270
 704  20 714  58 735 822 694 250 680   5 723 116 226 769 739  46 818 347 125 705 189 666 273 302 193  41 764 719 708 364
 284 728 744  98 745 820   6 290 721 146 555 225 187 733 718 288 766 748 117 331 147 789 283   3  39   2 804 790 800 608
 123  78 772 812 159 819 380  62 784 168 188  71 185 826 876 233 780 763 359 829  10 760  37 182  63 119 824 842 827 584
 729 747  26 130 781 757 194 175 814  17 186 255  92 852 776  25 821 832 858 843 276 752 184  45  48   1  22 808 845 624
 883 113 765  11 779 830  16 118 815 136 857 162  12 850 879  94  76 859 847 768  47 294 261 352  56  14  73 866 869 813
 825  81 647  68 803 806 171 373 793 102 322 243  19 698 792 251   9 795 566 864 155 868 517 191 115  15  86 652 837 851

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.42689e+06us (= 3426.89ms, 3.42689s)
Wall-clock time (full program): 3.45968e+06us (= 3459.68ms, 3.45968s)
Satisfaction error: 0
Number of search iterations: 919
Number of local moves: 585 (including on plateau: 181)
Number of local minimum: 42 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
   1 350 790  71 884 715 796 731  61 104 826 195 417 127 603  29 304 113 641 811 218 227 805 155  76 744 821 756 255 889
 873 110 853  34 846 753 627 573   4   6 855  63 176 687 172 870 768  75 108 364 240  35 111 833  50 736 876 868 335 614
 229 224 750 183 743 269 829  86   3 701 741 281  56 208  87 879 897 795 470 766 209  19 721 814  41 775 854 685 116  84
 781 134 223 372 869 842 772 196  22  13 546 839 382  73 247  38 106 705  24 102 301 291 872 888 751 830 489 851 275 681
 616  12 832 367 900 191  28 755 408 716 249 746  27 109 396 787 336 747  23 534 168  65 735 684  90 677 760 119 545 893
 749 690 132 164 708  45 480 666 319  20 698 284 624 192  15 620 783 107 231 650 541 340 661 198 567 785 718 758  98 672
 710 135 409 211 257 740 250  66  46 707 598 840 381 691 268 762  88 639 347 635 185  77 586   8 355 719 713 759 769 564
 676 187 739  48 572 729 860   2 581 602 662 894 613  44 392 485 274 647 140 118 816  80 193 621 473 804  93 651  18 501
 784 146 789 264 693 515 634 139   9 670 617 585 523 362 157 704 764  39 112  51 518  78 582 550 774 813 686 481 235 241
 645 130 725 303 600 655 644 173 297  40 310 865 626 317 503 565 859 220 798 674 471 487 711 557  91 239 531  30  11 438
 540 608 359 389 622 415 551 535 321 522 631 575 632  17 482 511 587 479 612   5 806 609 597 256 234 606 180  97 122 615
 637 539 516 353 144 494 526 436 383 552 497 433 403 510 279 658 453 667 219 467 663 463 571 378 124 588 425 508 160 469
 395 351 679 344  96 397 488 121 604 506 451 563 498 633 583 337 299 286 464 891 346 476 448 459 271 466 568 491 316 688
 490 605 169 442 447 282 561 443 499 547 514 456 465 492 430 594 457 379 384 429 374 401 399 483 151 589 263 527 849 394
 529 530 405 553 643 296 402 260 461 313 619 675 709 517 142 226 348 668 460 329 338 495 341 420 439 834 386 352 486 339
 559 434  89 259 611 484 371 373 566 549 562 625 363 380 391 468 293 376 356 334 558 446 424 580 500 454 441 689 543 437
 414 763 243 324 595 314  62 579 629 404 149 477 406 680 654 387 532 123 521 277 452 610 722 520 584 228 421 419 524 502
 390 143 449 780 342 385 412 542 726 357 537 656 819 306  59 377 852 618 533 733 423 505 242 706  31 253 292 276 525 246
 307 333 407 375 272 388 178 519 669 458  16 875 512 186 878 365 699 129 638 444 607 455 413 472 695 416 283 305 428 793
 366 871  92 590 358 440 771  54 792 496 683 131 289 727 330 343 450 290 767 697 308 426 126 786 544 258 509 300 427 294
 261 630 194 857 431 738 368 737 361 326 640 222 748 278 411 349 400 809 788 435 331 320 232 101 596 298 210 345 777 322
 702 734  32 742 238 432 175 659 599 236 197 266 576 844 730 262  95 370 694 847 354 895 244 273 591 133 323 170 822 280
  58 646 474 861 201 493 295 712 807 360 265  85 325 179 880 309 245 696  68 248  82 856 866 398 671 177 462 799 836 161
 237 593 886 578 225 206 393 657 648 328 167 205 332 184 892 536 147  67 570 418 728 882 181 887 817 369 302 221 700 159
 150 797 287 765 214 548 189 837 732 828 200 778 128 724 883 154  52 779 815 825  57 803  49 100 554  74 174 215 574 230
 117 818 560 754 664  70 653 513 285 138 152 103 252 863 808 703 720 773 528 422 898 831 207  83 163 233 327 202 555 120
 827 843 824 158 251  47 538  72 810 885 213 141  14 874 673 162  60 137 823 478 190 642 569 115 862  53 556 850 649 199
  55 136 217 757  25 628 311 475 312 838 845 270 682 717 636  64 601 507 212  10 896 794 156 899 752  81 148 577 820  94
 410 858 203 776  21 890 315 881 770 445  42 288 877 812 318 171 182 652 665 254 745 105 714 166 867  79  26  69 153 761
   7 165 188 841  43 114  36 723 791 848  33  99 660 782 216 800 864 623 504 267 692 802  37 125 801 204 678 145 592 835

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 6.43653e+06us (= 6436.53ms, 6.43653s)
Wall-clock time (full program): 6.46909e+06us (= 6469.09ms, 6.46909s)
Satisfaction error: 0
Number of search iterations: 2266
Number of local moves: 945 (including on plateau: 323)
Number of local minimum: 192 (including on plateau: 42)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 161 342 698 174 791 308 377 108 382 780 721 882 715 170 500 805 128 779  94  43  71 244  66 329 884 526 490 748 367 832
 687 818  92  51 845  53 594 254  34   4  19  70 802 592 857 505  75 731 702 816 680 770 351 737  38  93 888 335 809 213
 739 848  39 642 744 201 313 547 383 729   9 786   6 655 814  28 836  23 806 829 701  27 833 454  77 840 415  30 111  50
 766 363 274 402 139 182 414 346 512 761  16 623 192 183 782 896 273 794 471 830 412 246 817 542 154 689 508 464 256 208
 618 834 165  81  99 448 419 198 564 506 432 341 663 785 638 784 189 708 711 465 131  44 493 895 184  57 767 755 257 284
 886 482 267  37 145 305  31 218 376 455 873  29 745 899  15 700 389 852 897 831 736 654  91 504 581 522 746 138   7 104
 758  68 203 177 220 356 686 565 375 478 247 753 391 109 430 684 742 656 813 152 778  48 730 480 187  12 712 709 762 234
 209 752  49  83  22 751 664 599 318 632 228 555 801 617 703 297 134 722 441 693 637 349  85  26 560  20 883 692 112 881
 724 481 651 146 738 586 590 125  14 764 221 643 713 502 548 584 309 535  18 568 634  78 510 649 360 306 566  80 694 178
 602 514 652 150 768 754 658 238  33  56 666 529 641 640 835 453 132 668 264 407   3 769  11 675 210 615  32 740 523 277
 598 151 688 172 647 206 544 336 456 576 250 612 670 569 261 628 874 858 285 231  90 558 661 552 237 211 405  63 539 587
 589 644 828 732 777 674 583 339  47 212 423 475 609  87 646 532 105 409 422 468  69 431 573 439 497 685 118 533 281 288
  10 682 540 102 204 445 408 314 562 657 519 515 575  21 499 551 528  60 385 398 340 473 790 726 527 808 472 716 636  52
 387 416 563 460 570 142 438 463 516 394 741 554 404 898  25   5 662 567 353 488 842 176 393 781 320 110 601  13 798 435
  42 366 372 629 678 479 443 328 750 530 625 446 249 292 820 352 253 420 120 421 429 880 582 447 765  95 503 467 354 378
 295 426 158 815 665 319 413 248 892 538 483  84 424 559 144 489 164 459 476 433 487 878 550 549 347  35 588 461 517 619
 334 524 357 800 616 449 410 556 317 425 593 507 607 875 486 380 397 355 233 392 771 147 359 436 226 571 462  65 495 370
 395 286 326 156  86 797 291 427 624 825 338 720 631  46 141 401 734 330 574 498 283 350 545 311 511 371 633 879 434 572
 240 222 521 362 622 396 333 871 699 417 457 466 278 255 531 812 795 344 299 173 735 580 348 296 117  88 315 859 696 388
 302 691 379 591 323 293 796 614 837 270 860 577 252 332 361 114 321 373 364 167 458 406 191 437 604 620 728 442 202 610
 224 200 723 595 557 400 331 492 823 849 243 337 188 190 166 390 773 553 126 137 513 839 759 683 650 316 386 653 239 180
 374 611 280 648 325 301 411 597 725 872 452 856 186 322 260 113 251 440 236 217 810 866 727 241 242 608 269 268 312 695
 706 276 606 807 630 303 282 474 384  45 520 215 162 343 258 287 846 365 659 263 153 266 851 262 639 501 271 600 868 673
 772 310 819 143  61 485 854 865 861   2 136 106 169 757 403 205 803 279 679 289 541 155   1 890 197 850 245 578 272 788
 123 822 717 645  17 870 864 887 219 543 672  76 867 157 207 107 704  55 525 789  98 304 103 116 477 826 546  59 227 893
 774 100 783 792 368 804 216 853 324 275 719 603 345 760 265  79 195 115 381 327 193 733  41   8 613 877 171 561 635 605
 235 185 626 756  24 776 119 179 135 294 793 225 232  58 509 855 399 579 681 358  89 671 428 534 775 900 290 148 821 841
 747  64 133 677 223 889 160 669 518  40 621 705  82 259 491 298 140 163 710 714 894 450 763 149 862 484 175 536 718 181
  97 199 537 891 787 470 124 743 159 418 194 129  72 876 690 596 697 127 130 307 863 627 494 300 847  36 229 869 122 885
 121 838 469 799 824  73 749  62 676 168 444  96 844 707 230 585 667 196 660 811  74 496 369  67 827 843 101  54 451 214

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 9.99092e+06us (= 9990.92ms, 9.99092s)
Wall-clock time (full program): 1.00235e+07us (= 10023.5ms, 10.0235s)
Satisfaction error: 0
Number of search iterations: 4712
Number of local moves: 1385 (including on plateau: 520)
Number of local minimum: 407 (including on plateau: 74)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 132 781 676  42 817   1 720 320 294 219 201 877 821 283 528 766 719 293 593 185 243 769 155 590 530 338 433  67 853 269
 506 458 791 229 226 102 787 516 816 239 864 462 341 428 141  35 365 207 237 732 860 110 767 133 823 171  46 894 829 400
 881  60 852 716 892 128 285 681 758 808 408 339  81 552 303 101 113 784 502 253 258 790  72 412 218 230 146 833 834 225
  52 723 483  18 364 862 419 760 346 510 599 473 577 103 287 107 789 125 416 249 848 607 200 342 745 867 803 221 123 497
 762 592  76  84 884 830 709 753 261 235 145 875  77 773 827 111 649 739 418 714 144 858  48 252  21 356 876 168  15 263
 204 796 161 786 749 698 304 761 431 379 806 731 310  30  13 559 360 198 566 675 206 836 602   4 336 743 299 315 402 255
 435  85 216 126 662  87  74 807 542 616 652 657 824 196 163 268 605 344 162 669 783 555 898   5 406 368 885 349 205 871
 887 331 236 279 318 673 637 297 398 874 183 160 214 305  71 886  70 270 655 648 604 192 707 832 633 184 888 863 138  82
 238 515 188 854 744 210 580 835 891 451 890 429  40 683 343 247 538 661 535 469 711   2 381 401 500  33 129 385 127 505
 316 547 456 849 882 167 471 397 643 116 378 403 551 179 150 750 465 813 511 674 900 387  99 638 181  43 277 571 490 211
 869 234 222 452 354 122 663 539 897 404 119  37 819 873 780 217 333 660 612 109 430 687 626 742 274  50 245 323 357 466
  97 878  64 596 413 232 757  59  53 770 632 529   8 550 522 792 576 650 804 533   9 391 756  49 244 705 369 203 570 704
 180 213 176 746 635 694 480 351 708  24 558 843 187 546 603 352 561 736 634 177 526 440 600 845 376  91 470  51 690  22
 411 622 624 548  55 775 479 594 432 189 388 583 644 831 718 752  36  14 441  39 768 197  93 317 157 619 668 329 591 601
 866 380 474 448 340  25 793 549 273 755  69 335 501 514 730 370 524  11 220 164 659 540 467 484 645 735 531 289 193 631
  17  45 623 366 615 459 423 134 509 765 276 504 844 457 319 353 209 389 896 670 523 838 572 405  75 492 517 267 754 199
 427  32 870 170 839 738 124  31 507 436 135 446 729 347 696 345 684 472  34 301 495 250 383 486 759 820 363 296 893 407
 703  29 532 686  61 468 169 485 298  79 233 442 256 281 678 165 447 815 575 883 175 481 476 850 120 800 801 424 777 326
 512 449 579 541 208 534 309 425 202 706 426 295 362  38 328 609 691 666 651 257 496 455  41 399 627 851 367 493 606 392
 278 307 191 636 868 798 499 262 105 737 574 104 569 639 306 290 251 724 450 434  90 374 584 463 788 147 568 382 409 688
 751 840 321 491 417 527 140 332 115 488  58 679 727 373 437 588 359 587 740 286  78 394 361 640 610 565 564 642 151 254
 291 334 195 194 415 460 223 764 537 280 671 248 131 778 818 692 166 702  10 322 410 680 563 611 629 478  73 311 717 812
 121 776 799 805  68 646 454 259 772 152 498 271 782 224 621 536 503  62 371 227 573 246 240 231 421 712 578 725 288 554
 656 857 585 422 272 114 667 748 355 710 814 543 158 487 312 482  92 130 100 598 242 396 825 173 614 264  96 713 582 508
 182 556 595  12  80 654 525 139 300 693 685 350 372 682 608 156 453 562  28 810 880 828 327  47  89 841 174 847 314 726
 701 265 228  65 153 899 618 212 494 794 861 108 443 154 377 728 879  57 567 324 689  86 186 665 865 837 142 375  44 699
  88 260 774 826 143 106 477 544 337 117 384 658 779 733  16 313  56 438 771 613 390 308 697 581 802 178 190 520 859 557
 822 647 118 386 275 856 292 741  94 895  26 586   6 519 358 597 464 445 172 395 439 625 763 628 136   3 630 855  27 715
 617 414 521 722  66 348 325  83 672  20 589 282 641 809 842 553 747 284 149 560  63  95 241 846 872 330 653 797 159 215
 513 489 889 420 700 302 112 137 475  54 393 266 721 148 620 795 811 677 695 545  23  98 785 444  19 664 734   7 518 461

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.76825e+07us (= 27682.5ms, 27.6825s)
Wall-clock time (full program): 2.77159e+07us (= 27715.9ms, 27.7159s)
Satisfaction error: 0
Number of search iterations: 14682
Number of local moves: 3480 (including on plateau: 1867)
Number of local minimum: 1325 (including on plateau: 237)
Number of resets: 7
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 635  95 129 757 784 659  65 768 776 663  62 700 753 165 678 714 556 749 669 488 528 425  43 530  57 100   5 370 396 196
 622 329 103 218 814 803 306  90 404 800 653 336  16 381 219 140 767 380 303 676 679 258 438 809 147 468 515 499 852 490
 311  19 333 848 186 845 692 735 275  58 385 352 772 133 810 279 378 733 855 320 529 374 862 756  63 447 261 270  38 596
 900 321 557 360 799 307 674 671 168  69 302  44 356  81 720 560 357 431 434 788 182 684 227 856 125 155 804 846 549 188
 388 744 137 221 578 817 825 149  83 353 782 615 193 397 503 643 171 631 317 191 511 369  42 563  85 459 699 805 481 763
 688  66 245 228 618 209 475  54 627 797 832 836 706 265 498  40 606 239 157 875 899 872  74 882   9 264 520 585 164 185
 497 379 672 644 461  51 547 668 190 796 104 808 340 778 401 286 158 541 640 487 201 710 212 588 122 138 290 682 811 313
 870 298 250 762 259  24 395 826 348 331 590 372 564 813 634 444 626 151 421 697 568 723 108 420 283 581 455 392  64 246
 779 822 603 883  12 253 291 555 274 658 214 686 339 398  59 477 390 612 885 223 677 355 725 154 637 440 187 341 299 287
 118 178 235  84 696 868 111 344 721 647 233 232 349 897 766 163  61 769 876 880 850 625 840 326 346 210 358  20 443 269
 364 146 551 460 824 638 423 251 248 687 553 860  22 619 483 754 222   6 764 289  53 759 325 471 680  99 474 506 244 740
 211 276 786 263 694  15 237 726 773 512 847  37 594 166 533 399 717 427 894 394 838 617 362  34 256 278 561 442 216 410
 765 424 745 655 448 338 518 327 689 621 473 539 747 292 330 501 260 208 729 419 417 571 354  71 504 257 266 160 496 391
 195 565 428 815 365 508  67 491 514 482 243 616 328 148  89 252  79 476 580 202 891 284 406 802 509 884 359 480 866 591
 467  46 707  39 758 225 869 234 167 435 413 864 831 351 716  10 505 142   4 695 470 819 548 683 522 464 102 323 704 402
  75 895 314 241 485 881 527 350 409 454 465 300 375 628 890 377 550 711 376 569 361 224  49  52 790 730 657  14 280 486
 285 389 574 463 525 449 572 844 117 128 229 519 691 184 592 536 119 558 110 170 532 282 851 305 818 206 633 492 693 649
  13 324 507 517 152 319 183 502 713 281 570 172 479 833 662 632 807 205 837  77  48 451 841 217 521 322 414 888 859 169
 194 743 272 583 135 462 345 156 566 739 254 575 552 316 255 780 609 363  88 192 293 537 642 535 664 546 384 567 785 383
 595 783 422   2 215 144 602 124  32 853 630 312  27 861 403  35 545 708 510 598 347 207 582 854 526 874  82 827 472 343
 441 629 746 681  36 416 466 761 366 806 130   1 613 262 238 648 174 296  30 484 742 718 271 367 495 593 554 540 734 277
 175   3  21 136 105 816 750   7  94 332 727 432 775 587 386 623 812 450 600 597 858 267 771 584 153 577 523 288 493 573
 107 801 429 109 445  91 513 652 226 115 334 500  26 835 793 608  96 794 199 639 273 405 489 373 842 665 559 240 654 703
 309 220 610 789 538 134  92 295 690 834 650 371  33 748 310 751 562 660   8 132 798 242 728  56 236 705 426 774 213 601
 712 787 741 543 736  25 342 737 605 161 667 337  29  86  87 308 821  80 641 123 150  72 886 203 828 656 849  11 400 892
 877 452 646 297 731 542 247 301 430 180 666 829 586  50  70 673 724 607 415  97 106 159  45  78 304 820 752 887 121 823
 863 738 177 795  68 516 268 722 777 181 387 120 624 412  98 131 670  60 889 599 101 145 702 896 792 189 456 709  23 407
 524 675 620  93 162 457 701 113 791 249 755 589 871 544 604 614 437 651 139 857 176 770 173  28 436 315 531 368  41 231
 200 636  76 453 760 873 878 197 781 179  47 418 893 839 458 843  17 469  18 112 382 393 204 611 867 579 141  73 685 433
 335 732 879 576 126 830 534 865 661 114 318 143  31 446 230 294 719 408 127 645  55 198 715 411 898 494 698 116 439 478

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.21527e+07us (= 22152.7ms, 22.1527s)
Wall-clock time (full program): 2.21854e+07us (= 22185.4ms, 22.1854s)
Satisfaction error: 0
Number of search iterations: 11003
Number of local moves: 2793 (including on plateau: 1521)
Number of local minimum: 1025 (including on plateau: 182)
Number of resets: 5
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 542 871 168 883 810 736 769 828 894 422 458 111  24  42 807  63  61  84 868 395 102 127 533 363 729 723 394  88 406 214
 880 340 843 893 898  58  29 539 711  54  98  64  25 885 563  91  69 115 710 881 100  71 129 755 144 279 808 877 852 754
 860 405 149 825 581  32 524 746 543 124 585  94 105 147 462 784  57 132 793 187 203 278 571 518 680 621 118 787 791 813
 633 679 809  31 701 198  22 634 765 189 771 329 205  89 764 496 119 629 109 207 121 104 625 576 749 706 540 631 839 245
 414 823 805 153 811  79 269 178 725 138  80 824  81 174 870 834 431  70 854 534 697 152 137 274 656 611 227 647 720 247
 283 338 737 246 861 615 161 570 897 150 116 130 155 145 770 268 197 180 171 748 741 225 112 837 899 449 264 796 721 733
 709 220 700 166 869 173 591 136 891 183 240 515 182 209 383 758 188 222 847 234 537 158  96 457 800 850 420 716 826 239
 795 233 658 221 814 377 260 500 797  73 191  68 360 131 690 689 216 275 300 483 353 727 538 874 895 604 237 753 110 293
 743 594 272 179 682 298 297 213 851 255 398 232 309 120 674 506 373 170 273 241 190 806 251 773 588 858 299 655 777 638
 339 263 199 218 584 287 325 403 744 572 848 266 364 224 350 306 284 332 367 343 450 892 361 707 671 412 258 822 890 434
 342 262 238 320 676 301 492 316 536 411 900 444 407 290 636 767 872 337  74 684 388 308 375 387 745 418 156 417 694 322
 436 265 663 355 490 645 314 371 140 318 392 463 333 369 335 855 486 359 832 261 415 582 280 889 448 347 319 460 714 379
 370 326  97 556 865 759 485 291 302 323 432 344 873 385  75 882 289   6 605 362 886 348 285 386 778 408 424 555 440 378
 380 838 396 451 141 475 430 384 313  72 529 358 859 498 429 696 236 507 230 328 491 381 827  62 648 452 425 391 853 435
 477 857 409 404 390 439 401 535 402 704 454 464 446 497 622 473 520 389 516 368 400 480  11 374 410 416 352 442 354 509
 151 345 443 397 413 661 493 466 447 503 427 393 831 577 423 356 433 376 523 502 438 426  60 487 551  45 467 640 875 366
 616 437 550 242 514 557 250 603 531 568 428 495 461 596 164 468 641 476 336 788 445  26 307 780 474 453 162 312 330 505
 511 501 489 528 176 223 592 586 469 526 686 315 819 321 517 113 553 549 639 558 589 372 456 334  52  13 692 465 288 583
 478 365 346 530 779 277   7 575 552 545 561  37 455 522 818 479 548 248 303 659 508 627 652 499 331 580 617 215 296 106
 598 541 614 510 282 546 579 554 649 254   4 484 559 573 494 574 602 512 619 567 544 472 270 637  78 521 578   5 286   9
 595 624 626 564 244 228 612 532 560 610 565 664 781 632 519 135 169 646 195 653 143 672 139  39 128  47 628 504 259 802
 327 357 488 481 249 735 681  76  87 562 783 587 600 654 295 192 590 593 695 276 597  65 513 527   1 650 739 160 253 702
 399 547 441 421 211 763 712  82 157 635  67 699 673 752 175  95 821 688 235 662 718 607 844  23  50 643 608 177  44 566
 167 642 815 687  16 747   3   8  46 683 281 776 691 665 677 623  66 726  36 667 669 801 419 267  40 675 698 606 114 204
  41 482  43 708 163  34 685 678  77 620 703 836 756 181 208  21 717 730 134 117 693 713 728 252 760 630 668 210  85 842
 154 775 196 670  10 133 845 599  48 613 101 740 108 761 165 122 833 742 829 830 294 525 768 724 217  27 785  30  99 772
 311 103 200 782  18 732 715 751 142 856 757 471 864 766 202 310 722 835 470 609  56 820 750 226 271 123  53 305  38 257
 146 382 762 817 193 841 794  12 206 786 243 840 863 790 229  90 660 862  33 184 651 789 812 194 186 125 351 231 126 317
  20  83 304 185  59 792 719 731  19 878 601 738 219 644  51 666 866 846  35  28 292 256 867  93 212 657 887 569 349 849
 798  17  55  92  15 774 459 618  14 888 816 734 107 876 148 803 896 879 884 159 804 705 799 201 324 172 341  49  86   2

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 8.22302e+06us (= 8223.02ms, 8.22302s)
Wall-clock time (full program): 8.25566e+06us (= 8255.66ms, 8.25566s)
Satisfaction error: 0
Number of search iterations: 2930
Number of local moves: 1130 (including on plateau: 472)
Number of local minimum: 226 (including on plateau: 62)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 749  22 854 248 484 218 729 276 122 578  18 608 102 592 401 685 668 485  51 113 762 875 254 851 855 593 148 120 848 206
 841 316 764 827 410  36 867 865 245 671  86 455 143 877 803 735 520 239 752  57 105 814 150 145 286 657  23 457 173 196
 811 793 766 686 285 124 176 115 177 881 244 772 300 819 817 667 225 412 208  95 127 872 125 137 887 162 325 413 868 226
 874 727 438 863  67 230 212  79 156 351 104 265 195 702 193 801 622 262 151  29 713 888 645 149 589 586 897 445 717 565
 227 279 364 705 576 160 659 425 116 704 642   5 862 568 628 768 614 350 326  42 852 605 217 588  59  49 470 706 878  71
 853 139 597 661  77  28 873   4   2 202 207 806 740 833 306 609 633 141  33 238 613 399 543 275 796 776 378 876  46 831
 899 146 242 126 871 107 560 426  93 282 204  14 526 892 763 724 884 369 312 288 249 739 529 709 110 386 336 643 829 257
 247 318 157 128  54 411 376 637 136  63 161 745 691 215 879 726 864 340 596 309 205 895 220 144 825 393 808 733 894 345
 284  76 200 780 167 197 736 109 866 786 274 799 211 383 396 790 611 198 595 186 818 792 361  47 188 635 291 715 243 781
 813 516 219 498 266 358 216 778 305 329 268 662 190 388 692 850 203 580 382 297 338 830 334 699 372 518 362 663 380 209
 844 610 201 775 287 812 213 365 366 555 861 820  72 802 290 405 229 646 292 367  44 746 180 474 478  45 460 521 436 319
  11 251 434 553 273 444 807 889 311 356 467 805 214 860 604 678 283 443 428 359 839 415 256 332 330 477 224 822 261  89
 133 407 469 689 234 373 327 554 118 395 289 360 719 263 837 429 310 250 335 606 893 307 347 189 344 859 504 804 900 271
 714 701 476 556 896 391 519 718 462 409 381 315 584 301 328  31 533 408 303 431 385 522 341 587 322 566  69 337 454 475
 577 569 559 507 294 349 532  99 456 539 531 422 493 725 414 446 712 298 481 435 545 352 222 241 471 466 317 461 579 423
 483 389 480 732 482 440 572 472 313 304 129 517 652 537 308  55 508 630 530 551 688 441 625 357 184 272 479 437 452 496
 501 676 515 734  53 439 187  73 765 404 525 549 570 147 269 492 602 615 574 331 489 486 540 235 451 450 419 181 594 649
 449 387 684  64 890 698 838 468 835 505 693 371  50 370 687  88 682 448 538 384 106 260 346 514 406 264  48 296 612 534
 473 828 503 138 891 591 374 511 774  81 491 836 575 343 100 547 886 293  92 497  41 277 651  52 599 221 463 179 681 527
 459 585 582 233 640 603 567 453 159 403 600  13 708 631 523 253 494   6 535 546 154 281 563 650 696  80 512 524 430 632
 170 618 742  10  62 561 621 601 777 694 418 627 562 653 158 433 117 536 716 619 175 121 629 458 416 571 509 363  68 510
  94 488 720 368 809 767 770 723  39 683 636 598 639 169 771 130 464 302 447 590   8 135 495 675 616 123 424  74   3 755
 647 707 557 168 490 656 759 791 754 259 506 558 108  75 192 258  58 140 665 758 420 171  66 826 782   7 607 390 499 641
 432  85 666 153 502  17 155 690 785 679 677  78 670 132  25 228 737 773 810 730 787 172  60  82 240 728 465 832 581 544
  20 674 119 354 194 898  35 513 753 761 583  26 703 299 421 550  98 869 246 840 644 166 710 655 163 798 648 131  24 620
  90  61 101 270 823 794 626  37 573 182 721 199 743 185 695 541 255 174 779 673 722 333 821 741 400 731 769  84 278 114
  12 379 165 883 847 757  83 111 638 210 654 700 548 183 223 252 236 882 355 880 321  97 843 797 658  16 680 348   9 748
 624 528  19 142 314 784  65 672 815 487 500 320 134 237 398 267 191 760 857 856 756  96 750 669  56 783 738 295  27 375
 152 623 178 634 392 870  40 664 788  15 845  38 417 231  70  34 164 842 846 711 339   1 834 442 849 751 789 323  91 542
  32 617 744  30 885 402  21 397 816 747 800 232 394 103 324  43 112 824 280 697 377 427 858 795  87 552 353 342 660 564

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.31213e+07us (= 13121.3ms, 13.1213s)
Wall-clock time (full program): 1.31538e+07us (= 13153.8ms, 13.1538s)
Satisfaction error: 0
Number of search iterations: 5554
Number of local moves: 1322 (including on plateau: 574)
Number of local minimum: 507 (including on plateau: 71)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 292 660 254  90 264 127 756 828 522 717 296 156 634 877 327 259 798   6 136 755 885 608 167 480 336 216 342 326 543 858
 206 458 393 412 684 729 226 708 722 470 433 445 294 340 392 271 224 754  62 669   2 683 157 611 479 284 141 845 895 526
 804 214 855  58 699 779 576 573  19 788 338 243 642 619 187 349 715 794 457  29 179 422 868 126 835 161 778 325  75   8
  79 549  32 584 322 177 406 223 727 618   4  22 866 215 849 829 418 476 591 686 529 592 512 190 687 524 478 534 286 510
 105 140 843 763 410 465 155 201  26 563 235 561 209 154 847 865 149  84 348 801 585 705  73 703 823 800 681 545 491 185
 175 469 723 106 222 329 174 416 637 369  43 540 582 265 542 413 676 170 714 587 900 857 566 498 219 288 298 556 761 420
 886 883 350 862 238 359 878 781 853  95  41 386 443 125 168  76 610 674 318 655 557 402 159 626 315 331  56 400 500 488
 438 898 307 765 119 567 841 128 442 380 484 304 247 649 597 682 503 138 645 290 595 176 276 282 436 789 324 227 427 559
 280 390 664 385 743 109 891 199 293 871 248 114 635 272 305 694 575 700 234 605 644 548 165 198 580 357 279 880 337 320
  17 706 824  16 816 472 361 471 277 691 749 103 791 617 538 675 145 253 414 162  63  24 399 358 719 821 766 831 424  12
 830  71 739 893 757 646 579 783 839 116 211 181  37 774 541 704 696  33  97  93  64  47 897 482 239 860 144 376 146 640
 627 365  83 124 602  36 659 784 403 208 355 533 527 389 246 448 594 555  52 856 667  91 564 310 409 848 437 677 752 314
 679 720 806  20  68 817 577 431  15  59 814 396 825 767 317 844 123 519 516 200 285 811  99 560  10 731 530 374 335 267
 394  78 733 764 231 163 419 195 834 653 147 558 550 228 506 452 504 692 698 425 461 184 360 690 251 309 571 890 509  66
 182 446 395 449 375 620  46 435 786  55 780 869 625 260 169   1 283 854 899 782 428   7 263 316 447 539 879 371 531 423
 588 129 405 249 836 701 261 873 502 598 568 808 101 631 889 334 256 252 220  44 415 805 197 100 391 270 819 347  86 840
 863 269 212 622 872 565 636 107   5  70 884 740 876 467 117 158 505 746  51 417 678 319 346 815 718  49 115 308 768 217
 191 333 432 652 630 312 586 489 407 508 245 629 353 552 497 441 730 673 745 852 554 193 623 760 258 178 143  31 268 250
 121  13  40 131 274 603 120  48 738 724 892 589 523 364 813 689   3 408   9 875 453 748 776 382 475 352 725 759 173 695
  25 777 454 112 666 356 113 368 616 716 758 401  42 537 656 518 713 192 590 130  38 377 734 301 741 166 809 439 710 460
 300 896 474  94  80 367 612 196 775 421 535 172 499 345 194 450 544 551 762 483 486 152 662 661 297 343 255 463 711 735
 888 638 771  57 574 812 108 702 133 795  89 328 221 278 429  34  74 792 650  45 481 773 658  98 772 487 546 289 134 859
 799 379  54 827 513 570 680 693 384 122 797 850 273 244 485 306  65 275 303  35 613 281 628 572 311 751 614  28 709 354
 881 363 153 643 102 726 362 707  21 341 204 665 366 462 514 455  14 721 753 787 434 654 477 493 624 110 494  23  92 874
 846 569 205 851 520  50 370 188 351 750 599 837  61 736 596 323  69 236 210 381 578 833 426  67 742 747 344 807  81 142
 473 496  87 822 118 404 495 230 150  60 770 464 444 887 583 663 732 803 225 372 302 313 339 456 242 266 218 820 688 593
 867 388 712 864 581 321 639 241 894 882 440 232 237  85 511  53 870 213 609 466 459 330 501 606  30 562 151 132 111 528
 164  96 842 203 547  88 621 468 233 139 648 202 744 332  27 832 600 387 685  82 790 189 633 373 861 668 490 607 793 171
 411 615 536 295 160 604  77 532 240 135 651 515 796 647 148 398 670 186 737 430 183 553 810 632  39 697 262 287 451 818
 104 507 137 802 492 641 291 517 671 601 257 672  72 397 525 299 657 378 785 521 207 838 180 769 229  11 826  18 728 383

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.85973e+07us (= 58597.3ms, 58.5973s)
Wall-clock time (full program): 5.86298e+07us (= 58629.8ms, 58.6298s)
Satisfaction error: 0
Number of search iterations: 33491
Number of local moves: 7502 (including on plateau: 3867)
Number of local minimum: 3182 (including on plateau: 457)
Number of resets: 18
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 871  16 853 333 232 734 847 833  54 843 808 660 621 760 197 137 812  39 837 506 252  49 279 186  55   3 878  36 739  45
 776 390 218 325  32 777 774  25 180 869 783 671 206 665 844 236 793 123 789  84 707  20 416  93 798 715 876 162  82  86
 819 816 827 727 202 868 294 813  43 854 874 261 258 126 107  13 387 161 800 379  68 193   4 136 656 865 867  22 364 711
 720 736 795  58 406 685 850 170 425 807 475 145 102 858 150 153 792  31 781 143 710 629  38  24  15 571 817 105 643 681
 757 729 723 430 265 788 829 645  34 845 759 463  28 565   5   6 744 192 754 687 144 603 469  47 790  48 174 108  74 810
  33 787 702 216 633  12 667  51 750 722 758 219 349 855 738 158 719 116 799 195 198 740 267 237 495 791 784 125  98 301
 737 725 755 157 190 780   9 641 653 747 568   8  30 714 775   1 616 599 635 159 593 673 277  27 730 661  44 231  88 692
 688 746 836 114 436 718 501 778 551  21 700 255 160 435 468 604 651 208 680 119 655 610 268 272 138 828 669 238  72  96
 764 704  29 402 172 625 175 540  14 564 410  10 536 709 578 477 615 550 520  87 765 284 328 340 547 762 634 341 280 753
 542 557 705 163 552 412 494 617 632 455 683   2 600 312 689 544 668 483 524 103  18 444  78 139 541 659 509 298 559 533
 589 620 642 113 127 782 508 497 563 666  11  17 368 663 613 556 583 694 470 249 167 609 264 131 612 516 539 451 305 590
 638 499 785  63 245 627 111 623 570 647 606 257 534 417 525 662 464 421 187 247 299 658 130 523 446 484 487 308 537 515
  26 591 441 229 201 462 586 652 577 269 437   7 263 594 370 585 598 695 448 584 505 618 526 498 614 502 473 503 624  37
 637 654 329 519 510 404 478 528 493 479 372 592 450 337 443 574 132 646 512 215 360 399 545 367 543 449 429 271 395 453
 630 626 461 380 353 573 343 418 324 500 471 459 622 291 188 456 439 474 233 677 572 596 513 327 440 398 434 527 376 414
 409 408 580 452 529 358 485 400 480 288 389 344 447 482 741 438 562 361 342 405 386 511 546 472 460 517 504 385 369 465
 424 413 397 492 335 276 377 467 415 575 696 433 530 670 394 427 338 491 490 297 336 579 457 426 549 518 466 639 306 302
 442 607 350 597 423 371 351 214 445 664 354 531 605 318 458 391 834 352 290 357 644 304 802 481 401 381 281 587 321 359
 322 203 260 422 393 420 222 303 262 378 345 862 273 334 396 407 365 227 838 875 300 657 815 859 521 496 223 608 347 582
 151 383 293 886 392 296 821 375 323 205 724 786 486 283 355 307 220 239 631 900 316 388 818 649 339 207 230 601 555 356
 366 266 432 857 648 177 226 259 240 595 242 766 185 278 431 419 171 244 292 756 890 581 716 882 122 403 373 548 326 824
 311 348 286 522 721 314 217 428 454 209 332 690 749 184 168 803 346 309 100 863 317 809 735 554 374 363 295 731 708 275
 330 211 846 697 726 270 310 287 770 235 331 706 250 248 253 285 155 384 246 507 872 200 898 411 315 241 178 751 772 830
 152 189 154 693 831  73 851 204 256 320 179 672 773 165 225 801 254 679  70 532 199 213 675 889 883 228 282 576 691 806
 101  83  75 888 289 561 558 893 619 221 362 698 804 149 135 811 319 640  61 251 488 887 686 752  65  76 181 860 826 176
 169  69 243 682 884 120 566  52 761 115 210 676 848  91 124 891 146 839  56 732  92  77 514 842 861 825 567 822 535 106
 194  99 173 560 852 182 196 147 771  81  50 274 191 183 699 733 538 849 142 742 166 164 794 866 841  97 896 602 797 636
  62  59 212 684 569 121  60 133 897  71 476 728 628 879 895 832 129 881  42 769 877  95 234 588 148  23 141 489 894 899
  35 864  94 109 814  79 768 717 892  46  53 712 840  80 678 134  85 885 880 713 856  90 313 796 104 748 156 767  89 118
 820 117  19 745 553 650  41 805  67 224  57 611 779 870 873 674  40 703  66 382 763 835 110 701 112 140 128 823 743  64

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.85797e+06us (= 3857.97ms, 3.85797s)
Wall-clock time (full program): 3.8908e+06us (= 3890.8ms, 3.8908s)
Satisfaction error: 0
Number of search iterations: 1107
Number of local moves: 785 (including on plateau: 253)
Number of local minimum: 50 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  24 170 439 660 896 809 784 390  62  81 116  94 537 114  26 426 126 599  91  90 539 698 664 834 845 578 804 736 850 433
 372 464 146 409 895 258 632 603 525 658 608  84 631 178 102 135 858 728 878 551 722 663 650  74  83 318 609  92  72 517
 777 489 246 684 786 328  97 760 234 575 758 634 629 587 392 883 543 699 731  68 156 174 177 707 468  76  71 139 343 304
 709 521 298 231 805 742 818 529  45 870 882 195 330  44 350 814 261   7 832 211 715 496 383  85 151 382 329 778 531 171
 117 652  56 305 559 157 198 414 545 862 894 214 283  47  53 799 362 844 825 237 286 423 866 547 642 897 487 188  10 746
 360   5 815 289  66 877 247 619 771 647 276  57 670 621 319   3 732 240 741 780 757 394  48 510 133 107 737 817 108 769
 605 472 333 594 148 548 580 588 856 749 428  39 557 462 458 812 826  27  79 762  32 325 671 395 625 200 203 576 172 393
 118 807 759 242 364 770 202 723 179 864 566 182  54 482 332 250 321 616 185 404 281 630 789 598  89 405 657 499 806 341
 442 105 206 278 159 714 147 708 788 638 122 377 445 682 860  38 504 365 522 443 356 596 572 473 294 470 738 835 345 293
 775 119 612 432 369 553 645 586 831   1 334 868 361 479  29 199  36 161 208 766  13 558 795 552 249 269 637 569 847 662
 284 833  16 810 513 506 694 476 889 585  93 378 125 349 779 475 251 581 353 710 158 798 232 256 435 446 661  33 460 336
 123 824 196 686 680 507 381  95 838 449 520 811 595 324 100 160 326 138 801 593 570 466 425  99 417 315 802 403 564 307
 721 523 821  52 626  22 785 134   2 143 218 384  23 606 735 441 359 734 747 268 519 444 273 654 376 787 266 187 874 791
 803 481 532 438 713 337  50 463  15 323 346 257 830 150 173 890 727  17 411 308 639 406 893 236 885 597 471  51 371 702
 155 669 461 755 127 265  49 191  31 398 863 865 451 285 678 730  58 667 418 176 884 478 115 221 573 624 230 792 891 415
 836 272 763 287 342 410 887 113 436 111 490 224 437 223 617 297 711 765 424  75 387 542 124 140 459 656 397 514 820 756
 688 347  78 816 189 314 396 508 649 144 222 854 592 568 254 400 429 167 717 668 783 474 704 837 524  35 533 440  21 164
  20  55 501 288 526 259 601 685  14 618 729 419 505 823 422 582 644 851 238 554 183 367 131 633 888 725 275 375 540  64
 781 768 227 871 391 340 456 502 600 277 370 794 205 535 448 876 110 408 296 219  12 388 829 154 263 743  80 672 354 546
 430 641 528  77 216 614 142 244 772  11 101 407 841 351 412 192 872 488 465 720 611 800 132 589 291 753 666 235 622 292
 299 849 494 317 857 193 751 486 270 120 271 574 640 335 260 241 511 493 610 591   9  59 767 577 561 636 302 861  25 556
 455 604 773 480 215 754 109 190 233 306 648 331 627 467 692 447 880  61 226  82 873 477 248 495 485 665   8 399 782 503
 303 255 565 620 899 366 653 104 401 204 687 402 555 181 563 450 560  87  40 209 579 689 900 571 484 180 338 344 434 892
 541 300 724 165 137 651 538 210 745 852  98 454 197 793 695 301 761 701 867 431 848 239 121 166  69 264 207 491 853  96
 162 416 130 839 262 677 840 311 635 790 676 602 220 739 310  41 659 194 153 843 267 274 184 886 716 380 536  30 697  46
 700  18 453 229 549 252 615 842 290 312 774 679 168 607 764 613  28 879   4 567 498   6 497 776 719 500 452 457  42 225
 696 352 339  43 583 322 112 752 175 348 483 584 421  34 646 718 212 712 675  60 674 427 217 673 813 169 703 705 512 355
 509 706 869  65 145  70 515 797 389 690  73 827 213 822 363 379 103 316 368 740 744 358 693 413 643 527 374  37  86 681
 691 280 750 898 245 748 309 106 562 516 590 796 492 808 828 628 201 420 141 530  63 623  88 136 149 683  67 534 320 313
  19 518 385 655 253 152 282 386 733 373 279 129 881 819 855 295 544 550 469 859 357 243 327 228 186 128 875 726 163 846

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.72166e+07us (= 27216.6ms, 27.2166s)
Wall-clock time (full program): 2.72491e+07us (= 27249.1ms, 27.2491s)
Satisfaction error: 0
Number of search iterations: 14736
Number of local moves: 3948 (including on plateau: 2081)
Number of local minimum: 1356 (including on plateau: 262)
Number of resets: 7
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 282  90 364 816 102 846  22 815 817 807  29 402 153 854 747  64 129 430   7 839  28 455   5 810  34 708 795 806 799 460
 860 104 254 751 113 809 146 845 260 229 754 303 125 767  89 192 206   4 793 780 840 842  94 771  51 111 800 887   6 729
 862 302 677  26 112 792 844 171 110 830  85 743 757 813  16 286 163 256 380 783 748 784  10 103 106 725 773  14 425 819
 712   9 399  43  39 697 226  82 709 825 680 613 140 843 658 305  69 179 763 808 363 797 200 859  15 719 139  46 742 836
 749 224 277 865 275 177 775  49 684 811  36 765  53 779 105 213 317 653 761 833 249 116 127 652 205  38 760 841 294 832
 745 730 136 746 148  11 740  71  33 686 308 736   8 824  75 247 269 132 756 637  50 827   1 638 802 720 794 755 120 770
 642   3 689 776  42 796  27 715 162 622  84 741 459 627  57  95 170 199 735 611 610 752 128  17 349 718 668 766 592 663
 685   2 217 698 409 790  18 597 768 781  24  87 641 586 655  76 142 121 703 632 297 733 278 630 227 556 728 788 194 452
 662  91 450 676 211 567 759 328  48 628  62 233 657 609 589 212 135  20 625 461 721  92 646 647 339 714 701 660 413 559
 696 510 173 490 270 683  19 353 661  96 722 263 558 593 488 607 238 232 591 640  30 665 527 706 168 517 616 562 207 634
 469 144 166 600 267 447 673 169 521 547 631 573 541 585 675 445 486  31 656  25 695 594  79 584 516 570 542 596  93 595
 494 599  66 477  60 539 566 180 633 601 314 535 520 370 690 323 606 533 560 618  12 514 451 569 341 555 503 465 271 550
 531 557  21 565 532 651 654 356 524 581 415 561 191 448 623 475 474 257 564 342 485 244 512 571 379 670 536 397  32 367
 548 518 124 505 495 369 404 285 626 574 529 188 525 482 679 436 498 515 392 572 537 664 442 422 340 500 429 489  37 391
 449 519 313 479 204 504 509 443 466 496 472 411 484 464 292 507 568 454 400 410 523 388 508 543 462 476 398 431 416 526
 471 493 534 432 549 480 355 458 424 437 420 401 423 681 329 438 405 334 492 326 446 378 331 553 376 332 440 491 439 847
 421 389 693 319 470 428 201 501 338 478 316 636 412 395 481 365 274 878 453 473 354 393 390 487 357 511 426 444 857 375
 239 283 744 468 608 366 383 605 373 266 215 812 758 344 336 394 312 258 351 372 868 284 433 408 602 456 343 499 814 321
 374 335 672 724 530 150 237 644 187 327 230 895 434 540 333 649 377 858 803 346 307 242 348 337 417 386 309 396 778 350
 262 881 888 234 598 371 497 666 522 240 823 427 368 198 299 406 235 264 175 882 387 300 583 243 624 298 885 149 579 231
 358 851 457 418 620 359 218 513 289 879 738 315 362 280 281 614 772 764 183 245 643 196 385 118 552 295 407 320 723 360
 318 288 545 236 612 310 855 287 820 629 241 551 172 216 154 891 821 435 279 253 225 897 774 259 580 293 296 381 750 147
 382 873 506  77 603 221 861  59 255 159 872 222 403 330 876 777 705 578 114 126 869 682 896 167 667 131 311 176 345 272
 152 863 688 185 894 186 804 181 324 156 822 306 538 347 252 787 856 850 174 251 202 210 528 889 694 276 208 246 590  56
 273 588 483 301 713 874 290 900 898 197 886 615 852  68  86 648 848 727 203 261 220 130 837  97 463 157  67  73 659 101
 161 467 853 107 880 117 291 325 304 195 639 209 829  55 702 268 884 782  61  58 831 805 834 223 711 890 265 145 502 122
 352 700 178 870 716  83 737 691 899 190 219 361 189 248 818 619 604 687 158 707 250 164 877 184 838 193  99  41 710 133
 151 875 893  81 828 108 650 769 141  40 785 563 546  54 674 692 645 798 419 100 155 160 883 214 849  65 123 762 414  78
 143 441 384 228 826 669 119 726 554  74 587  13 739  63 621 867 732 704 866  44 699  70 544 791 734 182 109 801 138  47
  72 786 671 322 789 115 635 731 165 134 577  35 678  52 835 617 575 582  98  80 871 137 864  23 717 753  45  88 576 892

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.97658e+06us (= 4976.58ms, 4.97658s)
Wall-clock time (full program): 5.00936e+06us (= 5009.36ms, 5.00936s)
Satisfaction error: 0
Number of search iterations: 1561
Number of local moves: 630 (including on plateau: 192)
Number of local minimum: 108 (including on plateau: 22)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 505 832 821  75 239 705 819  39 877 382  52 371  41 661  33  59 863 584 165 362 734 871 393 265 585 453  82 317 516 814
 618 614  22 889 668 412  12 876 466   6 600 128 119 623  90 386  48 721 813 627 839 823 312 612 122   8 664  99 433 865
 104 766 131 520 502 192  86 151 447 795 868  89 482 717 118 480 762 153 672 808 805 108 129 488 620 825 827 313 189 368
 753 793 592 885 237  50 673 383 646 296  25 166  11 110 135 528  43 489 277 850 121 530 710 830 843 787 861 102 132 657
 134 642 276  84 497 750 314 316 846 446 545 116 333 891 297 186   5 686 465 890 636 607 366 800 886 777 170  37 514   3
 205 812 784 763 626 655 193 420  16 178 818 544 650 864 381 173 782 824 159 625 535 275  91 862 326 162 287  93  81 331
 188 775 731 631 350 892 295  60 696 158 624 261 210 130 109  42 895  18  24 667 428 291 749 737 722 137 229 858 878 730
 769 900 669 557 226 377 518 881 421 426 304 330 230 573 142 172 536  94 375 455 328 785 388 581 499 272 306 873 228 300
 619 221 197 662 194 707 599 703 680  58 504 526 182 307 736 288 495 298 335 867 155  83 546 196 236 691 896 268 571 695
 257  77 708 874 806 234 887  27 370 756 649 274 308 587 510  49 714 273 246 496 112 309 208 727 360 180 154 578 897 888
 422  62  80 361 537 285 389 325 632 551 872 419 408 352 459 214 658 656 538 467 209 424  55 354 733 799 440 319 692 803
 376 474 643 355 345 548 698 582 588 779 346 289 449  97 609 396   7 117 732 847   2 329 598 583 801 500 125 663 414 223
 267 384 240 336 187 407 423 281 550 494  69 395 601 218 774 833 324  15 327 652 752 472 879 591 367 507 524 851 410 385
 365 351 778 468 570 473 233 358  21 183 788 141 251  61 503 452   9 411 529 634 498 443 402 469 611 817 811 654 884 347
 334 533 470 894 638 387 771 745 852 249 704 269 483 442 475 553 425 332 478 150 451  14 340 700 547 206 138 168 364 403
 615  26 199 149 523 235 511 848 589 765 169 726 694 693 435  10 430 574 644 338 146 405 853 211 437 519 380 493 797 101
 659 711 781 786 253 543 252 842 401  57 461 541 471 432 759 729  38 292 282 379 648 606 305 506 143 438 417 485  66 232
 113  47 616 515 829 256 568 521 302 255 311 770 690  30 757 531 123 542 476 374 735 391 685 222 742 341 492 635 343 303
 163 525 579 293 720 448 339 490 882 409  23 457 739 100 225 441 464 517 431 136 284 594 203  64 747 486 794 602 838 522
 831 597 126 481 301 560  92 633  72 190 175 549 264 552 320 665 321 725 562 357 318 399 565 164 849 593 828 501 216 709
 804 359 458  70 460 337 527 512 260 596 176 610 595 751 427 167 617 608 415 220 152 802 436 760  53 748  88 856 456 195
 416 238 259  28 697 491 373 859  74 820 406 776 174 271 605 689 398 133 754 212 875 177 463 103 651 746  20 556 572 679
 675 161 860 363 213 243 683 404 207 809  36 837 171 674 764 715 554 740 677 217 773 563  85  46 219 418 231 454  63 660
 184 263 702 899 816 719 299 348 688 247 559 580 701  31 487 898 854 323 356  95 479  29 681 250  51  79 796  56 755 290
 115  32 841 280 144 558 254 145 204 532 791 628 564 444 590 840 613 645 513 114 866 678 484 870 270 278 718  68 245 191
 712 477 120 202 279 157 639 127 744 835 604 561 647 201 792 666 670 728 107 555 445 713 629 248 124  34 671 241 215 372
 767 621  54 392 682 706 845 342 294 105 569 390 844 369 699 783 653 353 262 160   4 684 227  87 450 310 738 509 576  40
 880 344 640 394 283 397 586  71 242 577 780 822 637 761  76 855 641 741 743 106 566  45 508 179 181  13 140 790 439  78
  35 834  73 198 676 413 539 826  19 789 540 883 768 758 315 148 349 200 322 139 434 258 622 286 244 857 687 266 575 462
 630  44  65 111  17 378  98 400 429 772 147  67 798 815 893 567 224 723 836 716 185 807 603 724  96 534   1 810 156 869

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.08946e+07us (= 20894.6ms, 20.8946s)
Wall-clock time (full program): 2.09274e+07us (= 20927.4ms, 20.9274s)
Satisfaction error: 0
Number of search iterations: 9865
Number of local moves: 2965 (including on plateau: 1382)
Number of local minimum: 954 (including on plateau: 198)
Number of resets: 5
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 810 151   2 849 852 247 691 737 128  68  95 740 206 423 769 802  38 856 848   4  83  53 833 321 828 299 819   3 233 727
 775  17  39 844 866  27  45  42 329 772 293 829 183 814 809 839 200 805 784 472 341  32 875 426   8 140 808 217  81 803
 218 763  58 789 806 154 144 781  90 246 185 565 343 843 746 830 229 783   9  23 742  21 834 757 724  52 758  35 191 796
  47 745 799 117 702 296 148 385 105 837  98 741 179 676 735 836  72 749 823  92  25  40  14 873 710 240 812 793  65 761
 762 636  10 770  18  26 133  29 123 780 712 751 716 381 766 786  85 854 698 122 877 281  33 853  22 266  16 752 630 627
 714 664 773 756 672 542  43 732  51 797  55 689  50   6 675 663  49 722 785 455 670 227 764 166 115 187 295 241 186 771
  20 765 228 679 653 102  12 767 158 708 632 681 205 160 782 693  93 800 750 616  34 312 594   7 695  11 821 286 603 648
 674 318 436 692 660 152 609 686 107 656 164 792 244 253 753 654 429 730 709 382  62  87  60 131 728 701 774 192 101 579
 601 760 245 703 619 283 136  48   5 567 118 697 629 162 605 597 560 519 473 596 626 374 696 531 645 274 555  94 173 624
 733 736 835 667 860 235 169  19 269  13 132 734 141 369 647 564 562 637 592 625 662 112 539 617 620  73 570 157  76 550
 489 642 669 485 471  75 711  61 315 720  69 548 146  36 583 593 591 569 680 533 511 271 500 635 685  56 615  96 587 573
 622 459 644   1 486 265 610 558 606 523  82 337 538 623  24 707 412 571 390 655 580 327 666 563 643  88  30 545 261 699
 553 515 600 668 355 262 537 678 572 652 487 346 324 649 504 513 126 547 529 556 510 466 113  37  28 568 521 395 544 360
 684 621 474 575 463 331 397 517 525 599 490 526 493 388 651  15 405 401 392 379 396 535 291 514 576 612 129 389 428 319
 527 399 384 457 534 391 440 557 431 551 516 482 425 543 420 424 120 584 418 477 367 559 532 326 394 365 303 581 478 530
 442 524 340 400 611 536 380 498 393 406 322 334 427 475 480 481 372 304 467 528 354 503 451 505 554 446 604 383 494 501
 441 332 276 450 437 453 449 280 413 491 407 497 411 566 338 336 608 409 362 787 454 465 447 363 328 867 502 508 452 386
 178 417 496 419 323 659 415 434 445 430 682 469 495 881 462 433 267 448 320 376 422 646 512 443 458 444 378 357 404 402
 230 310 790 239 416 509 456 811 631 438 410 507 479 876 470 349 313 308 484 335 256 464 325 421 347 435 403 713 520 270
 272 414 822 203 377 618 356 292 549 172 899 359 779 731 231  91 898 300 181 344 289 561 350 861 342 351 348 700 552 273
 364 371 285 375 361 506 236 842 368 890 883 492 640 704 339 358 219 149 155 287 813 657 214 202 352 398 277 706 804 268
 832 825 370 251 243 650 882 147 665 259 483 263 863 582 353 333 282 220 249 224 213 744 307 142 279 794 212 801 738 309
 639 210 254 163 204 595 311 889 499 242 846 252 585 461 221 366 673 201 174 729 330 541 488 223 301 755 820 540 705 298
 831 225 633 135 103 690 891 153 818 216 798 156 255 574 198 305 850  31 306 237 892 602 175 838 194 872 317 638 294 288
 168 373 209 297 145 874 671 677 855 188 260 193 880 180 345 275 778 184  80 238 226 776 290 900 868 827 211 658 759 130
 196 119 885 165  84 851 791 840 862 264 468 110 607 460  46 189 864 302 190 234 788 614 888 777 207 897  74 222 387 134
 116  78 159 171 847 841 518 432 725  79 578 208 748 109 176 257 815  41 865 721 108 894 628 150 715 598 439 807 588 104
  99 111  59 215 137 824 688 114 895 546 719  57 522 161  86  63 879 250 694 845 589 886 100 641 278 586 743 884 717 127
  70 199 871 859 143 726 768 195 687  89 739 106 754 197 177  66 857 170  64 826 661 747 138 167 613 590 284 683 887 182
 408 816 870 121  67 795 878 314 896 316 893  54 248 232 124  97 869  71  44 817 634 718 858 125 258 723  77 139 577 476

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.80025e+06us (= 4800.25ms, 4.80025s)
Wall-clock time (full program): 4.833e+06us (= 4833ms, 4.833s)
Satisfaction error: 0
Number of search iterations: 1601
Number of local moves: 803 (including on plateau: 183)
Number of local minimum: 110 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

