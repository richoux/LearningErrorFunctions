@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 659 251 874 419 522 117 827 561 106 282 890 114 147 625 109 352 621 863 138  66 839 583 511 616 842 132 833  41  69 506
 516  72 594 344 788 887 565 695 774  26  93 181 888 441 869 150  36 113 280 153 781 750 800 617 733 104 798 144 180 143
 808 343 849 304 578 123 789 235 796 875  31 296 137 845 357 155 483 401 777 724 882 193 342 227 708 152  33 647 231 194
 897 301 878 707 696 604  73 211  98 829 148  83 105  49 360 824 214 306 853 141 885 393 203 223 792 222 899 716 717  88
 517 120 884 447 590 261 258 769 858 417  22  90 167 131   7 269  46 172 815 766 879 811  58 861 776 892 128 614  28 862
 234 330 834 520 729 460 880 598 288 865  13 492 136 242  15 742 732 778 762  50 273 760 322 230 184 313 446 814 190 283
 101 589 703 872 656 126 475 287 490 786 300 202 806 541 158 881 673 151 634 229 886 505 245 804 848 166 218   6 140  37
 468 675 684 149 247 196 122 660 664 228 174 657 156 277  60 500 701 336 697 363 340 900 840 205 743 756 855 220 118 524
 388 108 663 867 738 254 252 526 651 308 646 461 319 240 127 891 838 532 514 272 348 513 165 199 754 145 168 596 676 356
 178 387 175 576 290 548 292 385 731 799 846 819 877 383 219 232 821 129 642 628 498 265 318 423 580 275 298 757  99  45
 260 257 146 407 820 801 327 462 680 457 445 644  34 204 734 362 688 256 307 173 394 859 334 100 558 450 361 751 785 459
 262 161 831 605  70 709 325 353 554 553 784 883 396 116 736 857 597 346 239 182 177  95 294  24 652 399 195 876 866 378
 291 355 677 434 466 453 365 284 873 741 276 405 484  79 630 497  61 770 412 723 469 404 560 289 649   4 739 538 236 351
 391 337 454 212 326 207 679 226 528 698 293 299 406 366 493 164 852 847  91 267 471 797 569 310 643 335 392 895 515 452
 551 693 263 403 213 271 563 480 711 112 440   5 613 555 311 714 479 354 472 570 502 328 794 525 537 585 593 400  42 436
 176 550 481 494 507 332 418 488 185 564 375 542 154 860 438 448 623 390 422 600 416 641  77 451 810 527 413 432 384 317
 429 478 369 489 455 443 519 700 359 473 456 631 491 439 889 398 397 160 431 467 540 107 523 338 339 209 250 562 595 579
 376 430 374 244 543  62 389 633 817 414 557 377 503 380 509 425 349 809 192 364 508 518 601 189 191 632 535 545 572 477
 582 584 316  97 386 482 315 303 722 640 573 382 577 591 243 373  68 719 619 606 487 368 539 636 371 552 566 249  23 546
 665 410 329 281 110 504 409 622 370 803 534 179 674 571 427 547 670 544 197 437 531   9 586 521  12 654 607  80 620 612
 495 626 321 588 661 111 372 893 221 102 426 345 347 650 297 864  56 850 686 323   1 610 611 745  16 615 669  11 470 533
 715 648 206 133 162 637 603 687 381  48 678 592 638 668 694 186  25 567 268 672 536  21 549 510  54 681 568 188 735 465
 602 712  18 134 449 704 499 264 442 121 763  65 608 639 530 822 699  86 870 645 428  35 828 818 103  81  71  44 753 682
  76 721 367 830 415 667  64 689 216  94 463 666 278 575 691  27 187 512 793 139 706 775 237   2 314 746 795 274 609 587
 898 718 163 826  59 266 790  51  85 395 658 618 476  96 559 341 350 581 302  84 130  92 627 692 424 771 759 823 171 710
 787 740  52 270  55 702 705 309 200 324 805 749 556 210 832  82  38 655 421 624 135 653 379 813 125  53 115 780 772 574
  89 496  75 402 159 726 683 444 119 755 690 501 752 420 295 408 635  57 124 768 157 458 851 170 215 720  47 728 844 727
  43 529 662 758 320 837  10 198 224 241 217 747 816 825 333 142 435 843  19 871  39  78  40 255 208 782 599 713 896 835
 836  87 259 671 761 169 764  17 305 279 433 725 201 812 802 629 411  30 464 841 248 246 474 868   3 783 312  63 285 737
 225 807  14  32 744 856 183 485  67 286 486 765 773 685 791 233 730 358  74 767  29 748 238 854 331 779 253   8 894  20

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.30813e+07us (= 13081.3ms, 13.0813s)
Wall-clock time (full program): 1.31145e+07us (= 13114.5ms, 13.1145s)
Satisfaction error: 0
Number of search iterations: 4060
Number of local moves: 1129 (including on plateau: 355)
Number of local minimum: 355 (including on plateau: 49)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 364   4  96  84 797 131 880 802  60  38 325 795 103 827 868 140 863 283 257 860 126 509 618 857 833 145 467 898 266 219
 763 316  41 147 221 781  78 384 743 876  48 256 244 784 369 497 773 543 873 569 869 136 820 146 801  19  51 331 247 789
   2  61 285 336  36 229  80 695 666 842 703 262 201 899 750 596 692 480  39 771 100 612 854 349 892 157  34 457 535 900
 814 803 197 258  57  62 849  24 324 731 361 208  50 785 861 793 300 652 433 757 118 765 816 281 736  87 192  22 794 385
 477 776 343 250 598 251 843 170 715  88 704 308 213 807 713   7  10 705  17 894  40 521 605 522 727 879 161 567   5 599
 753 184 205 380 746  16  54 313 544 707  53 675 260 710 799 464 813 687 317 144  44 775 556 539  30 413 629  71 756 878
  63 688 550 261 677 865   1 232 211 691 755  56 209 572 231 468 670 264  20 265 864 805 665 712 298 187 122 853 622 638
 483 132  15  35 288 601 270 228 133 823 148 635 166 655 783 511 609 573 516 745 669 259 151 742 617 191 570 683 696 588
  70 686 204 223 698 540 679  68 123 749 141 455 586 186 431 681 554 560 465 641 613  23 603 662 489  97 199 531 839 719
  92 180 152  55  11 721 438 406 326 382 585 552 818 645 714 624 697 222 271  58 347 649  81 660 700 579 769 512 633 636
 571 661 189 443 610 792 456 418  21  77 485 487 684   3 402 534 702 559 563 798  37  89 607 639 739 555 498   9 323 564
 175 510 299  59 546 615 602 143 519 517 711 716 513 356 890 503 508 162 506 507   8 492 332 150 625 840 395 528 240 548
 628 646 647 761 446  47 606 484 587  14 600 190 164 167 466 530 659 553 748 428  45 620  65 391 584 616 342 728 582 171
 451 491 812 307 420 407 725 682 374 441 215 732 460 373 475 482 533 432 289 425 779 780 545 415 542  49 181 169 280 249
 493 706 401 632 338 216 476 505 253 458 562 549  42 804 768 346 520 514 358  46 738 454 268 515  43 473 726 397 461 453
 383 574 352 245 362 206 730 481 796 112 440 663 474 846 576 408 403 834  83 766 581 637  25 426 386  28 305  12 787 594
 634 427 200 532 378 444 135 452 502 381 883 319 357 882 593 389 353  82 329 815 429 496 128 287 472 881 523 263 479 470
 887 139 589 499 396 368 400 442 871 276 850 822 490  64  74 518 360 862 412 434  66 874 642 242 410 106 462 302 366 292
  90 463 608 568 447 311 437 328 558 888 836 153 841 113 424 235 314 630 744 439 459 653 379 411 233 469 575 449 105 355
 566 275 806 495 430 735 597 393 752 561 138 277 414 286 304 678 330 241  31 557 350 394 279 837 877 658 404 238 334 278
 758 321 699 831 246 565  18 388 626  26 365 500 604 371  72 337 524 848 654 230 811 158 717 315 351 293 790 747 252  98
 680 718 227 651 104 335 529 390 778 409 248 478 333 448 212 590 203 859 354 322 471 435 107 759 194 826 536 764 318 237
  99 737 770 595 825 708 174 580 310 214 225 421 817 109 701 348 210 301 762 117 889  95 828 284 202 656 870 154 296 218
   6 217 734 372 179 291 501 689 163 760 667 852 791 685 178 226 142 134 436 269 614 339 640 884 320 577 488 367 159 835
  13 690 657 866 177 370 551 668 239  73 845 224 644 183  91 674 376 294 729 130 623 309 198 255 295 788 893 671 267 722
 829 120 844 724 875 767 847 327 377 363 172 709 851 121  76 108 236 195 897 422 207 344 341 631 176 272 723 234 611 116
 824 297 676 830 547 592 578 583 855 243 526 137 392 303 102 445  29 494 810 149 819 182 193 129 168 832 119 772 733 156
 891 375 359 886 821 273 290 741 345 867 185 885 809  94  79 188 306  85 398 165 155 537 538 254 196 664 621 693 782  33
 115 423 720 774 591 525 274 872 643  52 672  75 673 405  27 808 740 340 450 619 858  69 114 111 160 282 777 694 527 125
 541 895 838 416 648 751 417 627 101 856  67 124 312  32 486 387  86 127 754 173 786 504 800 110 419 896  93 399 220 650

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.64987e+07us (= 16498.7ms, 16.4987s)
Wall-clock time (full program): 1.65317e+07us (= 16531.7ms, 16.5317s)
Satisfaction error: 0
Number of search iterations: 5743
Number of local moves: 1554 (including on plateau: 548)
Number of local minimum: 482 (including on plateau: 68)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 596 855 858 122 246 864 861  63  89 106 897  49 319 813 130 276 205 566  53 805 188 833 862 136  77 840 681 159 784 182
 723 900 695  51  71 417 865  42 733 227 809 423 591 886 132 664 651  95 128 508  72 351 593 139 292 260 894 710 550  43
  93 556 518 541 293 755 742 175 824  86 694 314 773  65 138 874  40  23 817 648 237 595 403 302 108 111 668 776 674 672
  88 143 204 883  10 147 789 103 697 383 368 811 200 743 125 666 639 148  54 655 414 713 129 877 191 475 444 885 638 893
 161 590 501 133 190 337 300 162 753 539 158 275 848  62 233 621 830 822  70 847 334 656 898 157 176 207 895 794 832 134
 331  64  79 405 393 396 747 739 670 192 891 370  58 362 235 819 637 602 309 236 174 863 661  76 307 562 685 401 605 646
 684 224  35 163 780 119 792 548 609 340 199 752 380 810 181 144 871 121 818 282  45 544 325 137 786 219 802 756 884 165
 221 184 443 318 250 597 812 189 669 696 290 173 782 248  39 623 875 546 203 647 313 686 432 261 243 278 636 766 881 214
 344 115 281 311 829 286  50  41 878 116 736 803 866 765 400 634 545 177 516 241 834 779 348 391 279 549 324 211 770  96
 202 708 600 288 339 217 329 361 869 876 145 872 335 197 410 387 450 385 729 316 520 488 870 658 399  18 274 327 395 551
 272 317 264 663 255  78 715 303 310 242 882 732 844 447 675 297 734 769 702 540 345 232 635 392 254 427 238 187   2 762
 649 153 735 372 123 291 439 887 530 330 699 252 601 467 412 377 285 366 731 312 287 553 567 514 852 101 433 195 358 644
 643 524 437 787 263 473  33  69 500 421 468 226 476 537 502 440 369 218 619 783 899 490 438 896 273 164 210 249 727 381
 363 356 411 499 308 579 398 220 112 774 355 504 402 744 555 519 495 498 216 389 449 448 588 376 496 359 160 559 880 503
 436 481 603 413 419 823 349 259 507 434 416 460 390 510 484 408 472 357 179 350 482 576 338 382 492 592 256 528 777 342
 522 585 667 386 146 489 455 536 650  14 352 577 360 611   1 323 453 561 746 431 346 465 529 607 353 483 426  26 837 578
 270 478 321 435 469 846 494 407 532 506 470 584 425 333 480 409 457 652 526 404 569 373 253 573 140 487 632 280 168 542
 571 298 767  85 570 599 750 464  97 322 452 354 535 606 854 486 442 764 493 706 474 315 269 228 491 471 117 879  31  25
 574 662 622 563 497  46 234 299  37 618 156 625 304 589 598 430 268 653 150 509 640 196 586 454 772 538 724 572  82 517
 624 657 446 525 659 627 505 512 301 328 806  66 683 890 547 247  11  73 428 223 523 245 581 201 701 725 717 169  16 479
 565 154 521 533 604 267 583 704  60 266 615 277 626 240 688 306 867 594 580 194 209 284 167 645 654 613 388 616 229 466
 320 698  61 851 680 558 155 628 726 105 289 135 564 642 305 568 262 582 873 102 768 152 868 888 665 170 206 587  92  15
 711 771 171 721 841   5 420 397  12 798 557 445 212  13 215  98 459 614 633 741 722 110   3 258 705 778 560 703  83 759
 418 462 707 712 534 687 709 730  59 294 343 515 673  94 620 100  91 800 180 422 714 198 239  67 889 827 208  68 367 788
 554 720 142 271 682 804  24 679 801 671 758 692 716 341 693 114 745 617 131  34 374 244 461 120  47 213 677 113 326 751
 737 257 785 608 763 761 109 660 149 738  38 283  75 178 749 347 371 456 775  36 251 166  56 845 757 748 630 265 231 691
 796 760 797 185 853 820 379 839   6 690  29 552  80 172 815 429  74  32 754  21 795 477  52 856 860  17   8 728  27 612
 126 719 225  30 296  19 365 843 700 740 118 458  48 678 850 892 610 814   9 463 781 629 543 689  84 816 364 406   7 193
 527  20  44 835 857 230  90 849 631 838 141 451 127  57 808 186 124 511 718 828 332  55 793 531 336 791 107  87 821 790
 394 104 575 826 295 378  22 807   4 825 384 485 222 415 641 831 183  99 375 842 424 799  28 859 836 676 151 513 441  81

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.16897e+07us (= 11689.7ms, 11.6897s)
Wall-clock time (full program): 1.1723e+07us (= 11723ms, 11.723s)
Satisfaction error: 0
Number of search iterations: 3971
Number of local moves: 1272 (including on plateau: 437)
Number of local minimum: 351 (including on plateau: 61)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
   5 114 829 838 277 814 734 840 889 118 762 794 245 800 208  75  36  86 869 122 822 821 812 361 665 162 268  82  37  30
 724 870 811 247  28 808 696 757 845 699  62 856 100 853  80 206  25 851 639 287 737 830 174  73 173  35  51 623 363  12
 782 714 146 673  63 836 766  22 689 229  19 813 749 823 116 155 825  99 864 826 727 842 846  10  40  42 258 479  58   4
   8 192 867 332  83 449 382 754 544 686 787 866 841 705 397 141 798  76 837 554 698 606 806  38  64 101  17  56  46 784
 617 175 780 809  18 857 158 709 687 190 758 880 299 847 356 117 789 732 719 791 652 711   6 139  67  41 316 257  27  11
 761 163 740 674  59 272 769 269 738 212 366 510 132 680  94  89 797  61 765  31 521 641 668 540 374 169 756 695 248 721
 807 123 713 728  43 726   9 832 584 700 861 574  26 702  87 124 376 595 751 144 666 532 768 676 103  47 191  13 311 703
 750 733 653 200 375 511 651  16 596  96 736 635  71 771 221 707 649 722 792  93 634 487   1 644 657 210  65  85 199 555
 483 640  34 638 251 542 678 745 104 218 296 534 730 723 220  72 517 692 683 536 701  97 688 684 636 177 157  53 255 731
 729  32 672 552 706 549 546 564 563  29 545 525 663 661 594 625 646 669 599 143  69 246 747 499 295 109   2  68 263 605
 664 145 618 443 642  15 587 591 459 113 589 394  48 624 615 643 475 654 580 408 579 568 507 578 225 396 136 550 107 562
 681  88 560 614 600 694 660 501 395 205 607 362  77 537 202 491 478 629  33 604 493 148 627 551 463 424 488 592 129 582
 805 353 569 415 406 512 502 585 535 398 486 581 630 590 631 509 575 214 444  24 448 203 460 438 254 404 270 553 298 423
 337 467 547 279 476   7 645 503 470 583 556 504 452 409 531 577 515   3 567 179 576 588 484 616 115 347 508 667 345 662
 524 500 455 496 385 610 392 621 358 461 471 450 457 608 412 241 360 572 541 441 327 339 473 472 286 445 612 371 418 417
 465 420 324 558 490 439 437 456 426 480 454 462 414 622 325 403 514 529 573 458 393 482 495 352 416 231 343 586 561 407
 469 466 447 464 485 400 308 335 304 453 321 528 468 303 481 432 377 388 474 433 539 774 620 276 519 571 429 434 566 451
 378 422 435 419 399 370 677 477 336 390 271 421 260 307 350 265 368 817 319 389 391 602 565 326 513 892 506 442 803 405
 440 601 306 310 720 384 285 317 230 224 373 888 494 207 369 682 427 346 498 497 436 854 184 259 338 697 858 282 626 383
 290 776 273 801 411 413 240 302 331 715 882 261 340 168 818 322 249 365 195 884 402 431 387 344 333 522 795 329 526 410
 381 833 147 775 430 198 348 401 386 891 744 318 323 253 739 372 288 313 266 320 166 355 354 133 446 895 859 735 659 187
 237 804 760 262 773 334 305 342 873 875 359 161 293 226 215 879 815 328 171 349 280  20 238 364 312 748 710 597 658 227
 181 281 300 314 252 655 186 843 379 883 156 267 718  14 824 341 294 239 197 380 121 557 855 647 637 802 670 598 650 274
 222 297 165 110 284 256 894 127 292 315 232 291 897 244 783 835 112 428 309 777 126 367  81 725 887 874 611 860 609 505
 167 788 189 675 781 816 180 213 283 235 357 142 570 289 820 648 228 217  60 770 301 275 209 140 772 796 533 679 548 834
 278 746 201 234 877  57 149  70 219 885 135 111 896  66 243 865 671 264 250 848 523 330 603 138 881 632 793 613 839  98
 151 425 188 164 898  45 185 194  95 160 170  55 742 134 790 755 233 862 182 741 886 628 102 849 704 518 890 827 868  74
 120 690 527 223 759  92 150 242 708 764 152 153 633 154 530 520 193 872 159 516 178 108 172 844 799 685 559 543 753 717
 183 538 131  52 828  44 785 196 176 819 137  54 204  90 752 593 779 236  49 619  84  50 492 900 763 693 786 767 852 863
 876 119 128 216 716 810 211 691  21 489 871 125 743 105 712 831 106 656 130 351  39  23  91 899 778 850  78  79 893 878

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.22405e+06us (= 5224.05ms, 5.22405s)
Wall-clock time (full program): 5.2571e+06us (= 5257.1ms, 5.2571s)
Satisfaction error: 0
Number of search iterations: 1461
Number of local moves: 984 (including on plateau: 399)
Number of local minimum: 72 (including on plateau: 35)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 530 780 889  24  65 892 799 142 210 739 151 174 899  70  83 893 116 711  52 699 168 199 618 782 882  71 843 684 117 233
 838 900 538 102  92  53 803 103 725 265 218  97 846  81 844 878 109 809  72  86  57  77 716 804 839 113 693 205 752 800
 791 587 841  40  80 624 722  76 718 313 122  87  78 724 877 818 132 808 157 154 101 166 674 751 598  98 580 897 250 651
 741 293 603  90 779  50 628 150 785 161 404 149 886 252 858 712 159 188  82 277 160 110 787 567 861 273 873 589 829 219
 123 156 565  41 615 126 641 590 864 665 214 128 240 748 247 856 104 315 682 299 376  75 291 832 270 898 537 767 812 438
 243 153 888 244 263 221 824 143 774 131 349 169  94 887 540 875 144 837 445 275 165 266 863 847 896  60 789 162 198 770
 242 386 753 230 259 281 720 190 586 880 427 177 392 700 696 343 238 867 280 605 472 213 849 579 256 223 500 236 147 788
 197 411 783 179 334  96 755 866 794 148 207 323 635 623 673 228 189 185 326 583 339 253 707 625 232 775 301 806 496 446
 353 184 764 352 258 260 763 303 515 366 307 305 375 822 288 320 175 284 367 325 597 756 801 773 685 209 694 650 249 415
 377 237 282 191 254 202 594 261 241 859 345 176 292 648 735 206 317 865 408 557 828 246 879 570 276 368 737 158 511 895
 239 407 495 217 340 163 746 262 871 152 721 302 397 876 617 391 181 677 395 304 379 450 666 661 306  89 796 772 308 335
 216 298 329 318 444 894 526 380 733 267 401 548 357 659 393 546 461 346 488 478 387 399 257 532 296 272 542 360 891 497
 517 403 483 338 439 289 525 529 795 378 251 385 420 702 319 127 434 613 255 314 312 390 668 621 285 358 890 418 701 356
 419 336 371 347 436 322 831 300 374 528 421 453 432 622 330 593 647 626 248 561 826 332 396 627 457 324 437 416 278 225
 541 309 610 512 400 406 487 448 388 539 372 433 412 577 365 502 321 381 328 482 405 410 341 608 485 468 414 452 792 327
 466 458 459 596 501 481 555 520 425 125 454 584 350 423 337 449 559 369 269 573 409 383 344 489 455 442 498 563 463 516
 490 510 422 469  61 601 443 224 513 440 417 370 486 588 569 467 662  68 361 543 477 428 384 518 508 591 514 491 465 435
  48 424 145 441 600 451 146 534   9 655 527 426 493 462 471 585 447 456 678 646 504 475 556 430 382 602 389 373 413 747
 604 429 630 657 509 574 342 576  66 474  19  17 398 521  55 599 638 568 187 470 744 558 611 115 671 533 196 706 554 494
 644 639 765 738 464 676 311 535 108 679 505 675 480 124 519 633 460 524 692 245  56 479  95 201 560 571 363  67 208 499
 686 698  13 612  49 649 394 687 506  22 654 354 562 155 231   5 771 681 695 172 547 551 355 220 709 680 290 359 566 642
 643 754  91 592 860 606 141 609  33 631 683 672 544 235 595 507 348 582 331 195 652 522 194 183 523 778  99 133 691  88
 670 715 121 545 714 572 111 173 564  84 552 810 663 167 503 531 473 222 688  30 708 731  38  47 768 805 274 120 484 632
 656 705 759 730 830 814 271 749 193  63 581 669 476  44 653 660 553  27 200 840 607 664  69 333 226  31 295  46  45 726
 710 620 114 784 645  51 118 703 203 769 634 835 743 536 287 212 874 182 872 766 294 667 140 180 170 736 297  21 279  73
 802 798 138 855   8 816  37 852 171 640 868 807 811 234   1  35 853 704 825  28 362 819 136 100  25  14 402 723 619  32
  58 869 129 750 760 713  43 629 636 742 797 842  11 268 130   3 689 316 717 575 817 729 283  64  26 781  54 734 215 135
  34  20 264 885 845 854 112 310  12 815 351 836 727  79 637  36 740  15 762 848 719 857 229 164 690 821  93 105 616  39
 614   7 137 813 728 776  85 881 211 192 777 862   6 549 658 431 870  62 833 758 286 578 204 186 119 834 107 757  16 178
  23  29 134 823 883   2  42 790 492 793 786 850  10 139   4  74 851 227 820 827 761 732 364 106  59 697  18 745 550 884

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.59533e+06us (= 3595.33ms, 3.59533s)
Wall-clock time (full program): 3.62836e+06us (= 3628.36ms, 3.62836s)
Satisfaction error: 0
Number of search iterations: 818
Number of local moves: 622 (including on plateau: 112)
Number of local minimum: 17 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 809  59  97 119  80 143 730 131  46 743 139 174 591 757 600 601 524 781  50 567 215 834 108 722 869 577 744 763 846  96
 815 895 246 468 885 120 563 121 116 492 586 185 611 617 248 897 844 455 587  77  78 493 269 327 300 818 724  74  36 568
 881  30 566   6 153 875 864 103 760 189  51 311 163  85 800 833 531 650  61 712 173 884 770 200 678 775   9   2 803 597
 572 175 244 170 789 777 221 412 261 104 148 677 731 896 813 330  42 690 549 890  49 380  55  54 665 145 887 888 819  82
 230 172 377 406 214 197 784 182 192 667 296 735 442 898 432 899 748 830  43 564 206 824 467 621  29 157 158 237 622 886
 268 102  89 742 146 679 732 154 670 759 553 176 802  95 247 798 693 252 147 692 473  76 613 491 472 799 297 225 447 826
 309 223 717 234 865 160 142 776 106 702 159 191 286 685 861 319 822 132  60 847 136 231 318 782 608 788 845 186 379 646
 249 250 373   1 113 793 509 749 570 257 429 274 259 291 835 716 762 873 134 392   3 236 265 497 539 836 739 348 550 673
 127 178 578 652  17 828  13  68 441 771 167 253 278 123 769  23 867 764 894 329 404 523 639 414 783 603 883 232 513 381
 422 474 110 349 241 795 320 267 768 779 519 388 262  24 126   7 449 522 569 400 837 734 637 419 855 594 337 194 773 344
 355 201 418 649 203 703 410 547 386 450 211  47 310  64 856 216 532 272 289 772 258 351 746 284 688 623 421 893 729 631
 446 536 135 696 168 741 184 273 393 264 141 333 280 266 711 707 282 294 796 681 500 385 871 347 565 691 436 640 413 340
 226 371 456 198 352 839 368 751 420 397 356 408 689 676 307 616 430 634 625 515 357 301 694 111 548 324 672   5 293 576
 461 870 117 152 507  35 821 525 424 342 445 477 372 585 361 619 535 448 588 433 315 807 827 364 415 114 302 190 537 527
 331 464 443 255 384 438 396 542 399 328 452 495 575 816 651 359 335 607 475 435 458 459 728 434 395 354 508 275 574 150
 323 326 451 511 745 308 562 444 512 288 825 398 218 633 383 462 480 345 426 510 439 489 322 334 466  81 460 714 401 659
 558 227 528 403 504 305 647 193 518 312 738 417 858 485 366 363 479 801 365 187 831 661 220 478 454 287  37 498 133 662
  56 520 490 481 581 233 686 476 582 595 161 336 332 674 554  33 204 488 635 620 814 465 790  48 369 423 279 644 440 506
 632 866 505 517 437 579 718 521 747 228 660  57 654 343  70 663 645  52  90 598 484 556 362  14 551  69 514 530 367 486
 526 614 378 224 543 402 559 453 580 593  28 592 557 469 239 636 573 181 235 604 552 496   4 533 210 416 624 719 346 629
  67 664 487 382 766 584 208 589 209 283 860 494 245 129 428 697 242 219 879 695 609  45 217 848 243 684 880 540 260  62
 709 561 615 555 657 516 529  94 140 560 715 699 758 658 156 669 843  98 256 100 765 370  20  73 471 254  44 653 387 590
 675 655 701 710 862 596 605 405 733 205 740 787 602 546 188  21 179 457 721  84 281 750 122 409  18 115 325 698 317   8
 668 687 627 427 630 118  22 791  86 338 538 841 780 544  92  41 137 306 727 375 754 321 374 501 105 545 212 720 502 706
 503 723 618 680 606 277 842 350 737 109  39 671 583 810  88 755 612 162 101 251 389 353 534 638 854  79 298 599 171  83
 648 832 656 704 806  25 164 774 482 761 229  63 165 900 823 149  26  93 376 183 778 177 299 804  72 263 700 683 155 725
  75  53 817 708 853 341 124 295 792 128 767 713 130  66 358 470 276 643 238 571 641 785 829 857 394 626 195 207 271 292
 411 850 705 891 360 753 314 851 107 313 877 726  87 270 199 425  58  99 874 222 812 463 112 852 610 303  27  31 285 628
 304 872 166 794  10 339 407 840 541 666 878 786 682  91 752  11 125 499 849  40  15  34 483 863 151 882 642 391 390  12
 859  65 805 431  38  16  71 838 797 892 808 811 213  19 202 180 240 868 876 169 889  32 820 196 138 290 316 736 756 144

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.5483e+07us (= 15483ms, 15.483s)
Wall-clock time (full program): 1.55159e+07us (= 15515.9ms, 15.5159s)
Satisfaction error: 0
Number of search iterations: 5400
Number of local moves: 1601 (including on plateau: 801)
Number of local minimum: 493 (including on plateau: 102)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  89 627 224 687 487 497  31 281 336 399 453 418 896 160 731  92 424 629 720  43 797 306 197 528 588 877 329 566 205 898
 900 345 143 296 348 376 890 895 884 503  94 109 277 747 184  64 551 294 446 888 228 852  98 138  74 599 885 757 555  95
 115 204 472 327  77 774 203 748 101 706   1 589 892 489 881 595 211 606 357 549 231 846 397 844 843 167  75   6 767 442
 532 780 847   7 638 756 181 880 212 237 131 613 395  26 190 238 474 648 142 812 628 257 146 564 682 514 227 636 897 225
 411 591 387 430 323 396 695 537 422 226 631 874 103 658 652 525 441 222 358 421 691 416 862 133  81 829 316 429 189 266
 118 556 248 635 245 265 278 439 698 166 480 795 139 839 235 781 410  15 738 436 518 293 804 856 815  52 274 545 388 454
 481 838 728  44 632 247 236 339 899 821  35 354  73 390 458 694 347 216 217  48 701 860 793 716 100 140 822 114 868 304
 168 592 496 837 891 292 612 307  40 408 787 341 425 174 661 607 560  53 470 674 455 805 783 392 492  23 194 284  91 601
 723 539 276 779 412 724 751 308 405 145 209 662 615   8 802 820 352 741 808 371 208   5  42 285 688 580 191 850 137  79
 320 321 883 671 309 644 134 230 243 319 456 575 630 259 409 509 810 333 246 206 876 431 313 338 858 746 280 772 283 111
 314 676 438 835 104 440 739 540 170 872 667 295 523 249 193 180 593  86 252 755 330   2 786 818 570 641 565 179 645  58
 254 515  85 163 576 526   3 244 823 875 534  87 273 552 475  59 733 581 669  33 725 256 420 826  93 782 572 527 668 586
 432 598 176 200 382 298 232 745  69 705 263  84 842 262 445 112 476 894 719 867 463 819 531 159 337 553 584 547 158 563
 369  78 692  11 413 544 482 303 711 693 511 423 889 322 370 806 609 596 766 359  70 510 697 196   9 268 384 717 391 326
 832 344 449 127 467 681 727 264 364 365 770 154 602 106 866 479 704 282 882  38  45 443  68 486 433 464 286 851  63 873
 289 366 498 735 833 569 865 460 290 287 427 261  82 643 684  60 437 355 604 123 685 836  12 214 288 255 343 647 659 708
 465 311 749 462 107 363 447 769 814  56 171  14 373 241 234 494 664 765 558 272 699 663 183 672 794  61 834 199 459 622
 182 406 450 825 297 666 535  24  25 223 125 310 634 491 529 312 554 679 250 857 608 150 762 361 712 653 215 415 448 817
 417 522 499 279 269 583  90 763 626 151 871  30 155 533 878 656 864 700  57 477 574 402 229 434  66 784 473 466 108 559
 513 778 175 530 451 356 649 102 623 419  37 605 350 426 548 854 334 485 353 776 360 407 585 315 502 124 340 129 853 536
 831 740 807 490 750 621 483 824 172  97 495 610 152 614 132 386 153 811 346  17 587 141 113 646 157 116 678 501 792 253
 251 233 187 597 517 538 828 393 840 550 594 633 893 752 136  41 121 325 383 651 546 119 845 219 331  18 568 616  80 710
 737 654 768 239 521  50 722  49 680 469 686 796 381 579 267 870 561 305 859 270  46 512  62 730 260 186 394 195  96 571
 637  34 135 732  83  10   4 640  19 625 507 830 110 696  54 642 372 542 611 562 869 221 178 742 849 861 385 764 543 258
 758 493 401  32 702 349 342 478 791 271 169 452 603 707 729 760 126 524  99  67 788 690 703 332 675 202 520 291 162 299
 435 173 887 374 689 210 505 389 600 624 816 655 677 379 156 275 213 803 130 504 144 665 673 185 240 813 619  47 428 207
 726  13 468 557 367 777  28 362  16  22 709 827 148 639 218 773  76 414 149 736  36 444 721 488 715 798 879  51 573 785
 718 848  29 683 578 122 404 117 335 863 713 541 147 400 519 201 789 192 377 242 161 300 567  65 500 582 508 744 799 471
 378  39 128 754 457 753 759 351 657 801 318 198 461 403 165 302 484 398 188 620  71  55 577 317 743 800 670 164 886 618
 120 301 790 177 590  88 660 734 650 617 855 380 775 771 714 328  72  21 761 841 375 809 368 516  20  27 105 506 324 220

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.36331e+07us (= 33633.1ms, 33.6331s)
Wall-clock time (full program): 3.36658e+07us (= 33665.8ms, 33.6658s)
Satisfaction error: 0
Number of search iterations: 13738
Number of local moves: 3280 (including on plateau: 1780)
Number of local minimum: 1262 (including on plateau: 195)
Number of resets: 7
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 331  89 119 108  16 703 779 398  34 259 813   7 793 369  71 303 776 864 553 819 799 635 390 828 778 589 843  58  26 365
 283 852 771 129 696 222 575 112   8 217  69 785 179 750 242 127 157 849 134  83 666 161 766 181 705 494 801 810 899 792
 113 333 853  23 193 831 410 677 311 697 660 221  32 789  57 267 837 519 133 800 533 863 469 807 699  21 162 304  66 835
  19  14  82  13 763 466 583 351 760 447 757 652 661 798 803  27 638 706  29 704 348   5 585 139 708 752 428 770  11 496
 868 205 118 124 633  80 650 761 177 756  92 485 749   3 604 453 720 562  87 131 183 603 815 232 753 169 682 736 362 722
 201 265 145 890 226   9 762 356 737 711 178   4 632 869 844 130 610 875 198 111 554 748 249 467  61 268 636 709 871 199
  33 104 306 846 505  50 857 404  91 643 286 664 698 694 631 100  73 728 649 225 586 355 644 207 648 339 786 547 143 673
 426 151 288 721 141 630   2 156 430 559 692 618 662 581 865 128 456 637 114  45 734 599  18 634 743 687 605 594  65 534
 320  10 419 716 295  62 319 670 296 500 451 591 628 321 578 531 774 612 275 654  37  85 658 588 596 243 674 484 515 613
  97 851 101 327 236 468 549 675 729 166 754 582 238 417 459 809 405 175 569 315  41 795 301 555 427  78 572 579 621 624
 122  31 334 611 502 887 116 563 657 560 592 532 136 597 574 142 614 478 293   1 545 620 584 719 568  67 651 656 148 615
 445 377 250 538 465 684  74 472  86  51 316 642   6 511 659 488 713 622 491 751 557 233 548 626 462 480 556 103 483 826
 149 535 244 529 322 593 507 383 524 403 442 432 832 497 115 454 357 246 816 550 683  15 224 436 571 818 458 509 373 498
 277 671 508 281 279 473 470 558 487 439 629 258 551 476 623 727 435 455 375 827 381  48 516 290 541 371 176 567 408 418
 402 889  59 489 438 847 423 412 460 886 120 493 746 313 486 768 780 471 264 492 385 461 329 210 425  79 744  28  72 544
 730 255 227 384 406 504 359 372 477 724 765 386 184 537 448 223 540 580 836 110 600 434 287 499 416 501 433 413 441 444
 446 685 189 407 392 380 566 374 370 693 399 475 536 424 421 387 382 542 140 414 289 688 646 820 397 842 106 378 389 338
 552 627 590 464 867 172 503 607 203 740 341 125 324 617 208 305 363  98 213 850 263 214 364 325 415 861 310 769 805 420
 510 360 745 602 273 546 391 368 361 302 521 146 619 336 625 282 490 340 838  90 676 284 707 691 266 314 376 647 598 211
 686 866 561 514 811 342 300 576 317 155 194 733 132  64 121 280 352 495 482 307  42 883 271 276 806 137 892 680 895 345
 437 347 606 260  88 884  52 794 573 738 639 343 185 230 349 718 841 400 731 196 872 880 206 170 297 808  56 228 237 350
 796 216 163 251 742 309 202 823 900 335 253 147 773 318 291 513 312 328 702 772 747 248 261 165  40 522 337 257 898 894
 701 845 783 235  84 215 358 700 804 409 174 481 429 126 272 690 234 525 608 755 396 252 855 274 187 209 323 669 668 254
 829 787 681 285 192 577 791 367 173 256 231 678 822 452 723 219 144 474 152 570 725 204 190 564 247 732 449 153 739 109
 735 463 877 891 876 717 790 858 394 775 191  47 332  43 824 812 159 154 695 220  77 218 353 160 200 679  99 240 616  20
 715 326 885  76 587 164 848 168 517 138 354 834 197 346 171 640 655 195 882 839 188 781 764 401  93  53 758 167 443 330
 881 298 527 893 539 523 479 344 292 777  96 518 672 440  70 714 395  36  30 512 308 860 229 784 879 506 388 212  68 245
 239 897 366 888 825  17  12  75 821  38 830 294 595 182 870 854  63 422 641 565  94 817 105 833 186 609  35 379 856 107
 299 896 878 158 712 710 262 117 667 102 874 741  22 726 457 759  60  81 797  25 663 431 528 393 123 767 135 814 269  49
 873 270 840 862 411 450 526  24 859  39 802 601 150 689  54 665 180  46 788 782 543  95 653 241 278 520  44  55 530 645

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.79329e+07us (= 17932.9ms, 17.9329s)
Wall-clock time (full program): 1.79659e+07us (= 17965.9ms, 17.9659s)
Satisfaction error: 0
Number of search iterations: 5960
Number of local moves: 1986 (including on plateau: 905)
Number of local minimum: 480 (including on plateau: 100)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
   2 786 329 163  19 844   5 739  65 248 673  86 860 785 128 862 809 731 657 168 215 793 133  18 773 840 118 820 161 685
 824 694 264 343 638 845  80  22 802 614 716 633 848 789  64 640 147 774 837 138  20 805  37  48 838 738 176  21   1 119
 842 833  71 130  31 815 174  35  45 770 214 160 853 682 665 726 767 645 272 181  49 788 155 139 641 741 342 806 803 140
 868 801  87 856 751 875  77 100  57 316 360 764 795 672  10 865 763   4 627 298  79 771 178  75 132 653  59 668 871  83
 768 807 644 617  67 834 382 244 725  72 790  90 756 781  58  60 847 737 858 112 213 167 336 183 698   7  46 648 870  98
 814 821 432 180 677  50 121 733 707 267 102  81 729 623 718 715 300  53 708 625 173 702  47  99  12 850 586 732 700 158
 691 689  15  84 746 721 288 652 629   6 697 157 762 719 635 227 185 701 755  78 235 125  88  28 703 664 670 748 613 204
 859 417 745 616 331  96 605 320 327 631 720 549 618 712 221 345 103   8 611 604  16 437 296  63 857 734 124 658 649 243
 579 690 518 228 722 681 293 568  91  93  34 615 760 596 692 476   3 603 566 150 226 590 259 169 680 539 574 663 624 233
  76 556  32 674 559 758 496 564 541 159 230 693 728 439 409 241  92 791 576 495 465 600 212 188 595 660 569 532  14 571
 642 497 542 671 583 597 669 714 328 546  17 109 423 632 373 196  11 570 507 120 421 637  13 339 743 290 656 554 508 607
 606 628 593 608 667 505 540 592 626 580 533  55 304 577 711  33 142 547  27 387 386 519 114 208 506 538 504 494 433 552
 567 512  41 561 492 522 634 662 565 572 337 661  25 516 488 591 474  73 510 410 295 548 144 490 610 348 491 453 284 639
 346 704 416 555 365 489 655 621 514 481 216 435 364 341 562 589 501 404 452 438 224 705 207 340 396 545 461 414 528 247
 349 377 553 379 529 462 484 335 466 575 676 482 460 598 425 374 513 338 393 451 357 412 463 521 486 309 391 359 557 441
 420 401 184 455 543 350 620 454 479 457 434 430 468 354 678 622 367 407 630 525 390 314 523 448 447 472 424 418 352 449
 558 584 358 473 317 389 747 385 526 258 384 322 355 524 612 427 478 370 445 406 383 419 599 772 442 274 444 242 502 520
 498 408 458 392 324 403 273 211 362 446 636 371 499 380 493 740 398 535 378 428 531 459 450 646 426 443 413 477 581 456
 254 198 874 399 353 436 503 530 440 375 388 891 356 249 302 650 594 278 888 311 582 471 706 536  38 312 299 325 659 318
 867 154 246 277 470 351 330 236 332 276 890 262 310 487 321 727 799 260 515 899 601 291 813 750 372 395 344 261 411 268
 107 431 819 305 467 153 286 480 294 898 827 376 323 191 265 415 585 422 192 776 783 303 882 679 400 347 744 202 297 266
 469 217 257 836 199  85 175 135 900 485 366 881 397 307 222 730 394 232 534 753 587 897 537 886  68 369 292 285 197 823
 195 156 810 220 405 250 402 742 270 761 717 884 179 363 361 723 863 334 251 775 511 245 381 818 326 129 271 229 231 713
 116 275 282 787 306 687 573 675 710 822 256 134 182 319 696 368 643 146 238 688 666 255 872 252 237 279 894 269 189 699
 165 187 283 205 301 544 152 800 203 782 794  89  30 122 752 101 647 832 145 263 825 210 849 792 864 779 816 172 223 588
 234 308 757  82 475 117 826 170  94 209 253 817 281 218 780 206 137 177 149 609 769 162 812 754 869 896 735 333 527 759
  26  56 835 797 892 287 811 551 560 695  52 186  97 190 127 104 724 831  39 684 883 111 843 885 108  54 889  24 861 313
 105  66 500 777 110 193 839 893 876 171 683 619 200  29 796 143 136 483 131 429 895  74 841 686 166 126 164 877 798 709
 151  43 804 651 289  70 873 113 866 749 240 829  44  95 828  69 315 765 563 736 855  51 846 852  42  36 878  23   9 830
 517 219 766 194 887 106 602 239 115 201 280 854 509 225 123 550 778 464  61 578 880 654 879 851  40 148 141 808  62 784

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.83972e+06us (= 4839.72ms, 4.83972s)
Wall-clock time (full program): 4.87304e+06us (= 4873.04ms, 4.87304s)
Satisfaction error: 0
Number of search iterations: 1104
Number of local moves: 688 (including on plateau: 218)
Number of local minimum: 56 (including on plateau: 23)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 844  15   1 829 806  95 830 521 654 791 819 223  53 821 813 266   5 810 814 165 182  31   8 836  24 289 856 245  26 843
 706  47 720 834  18 122 736 672 230 689 820 815   6  30 799  55 802 783  22  48 175   9 781 785 721 120 817 110 838 205
 748 775  37 846 283 277 107 137  36 764 808  65   7 728 826 445 825 833 818 104 519   2 701 792 118  91 841  28 835 119
 762 811 774  11 715  44  14 147 261 769 751 350 786  34 858 746  56 443  51 117 169 641 302 307 749 671 333 755 761 327
 823 716 752 745 328  57 733 482 206 295 341 711 828  20  43 778 816 741  87 270  74  94  73 737 788  12 773 171 822 199
 673 767 710 723 705 213 740 103 151 647 794 410 635 688 779 734 703 718  88 114 134   3 237 227 356 712  21  25 667  38
 787 693  77 704 224 586 756 158 194 768 523 687 698 722 713 101 644 144 176 332  23 238 645  41 795  59 677 656 655  39
 789 638 246 707 683 152 415  10 298 556 627 253 725 793 498 296 782 727  78 600 138 618  81 102 601 666 675   4 628 129
 724 669 243 699 622  62 619 174 280 690 607 650 665 602 513 109 680 719  64  29 156 259 250 153 681 742 559 573 633  89
 634 558 575 739 697  17 682 272  54  27 543  82 630 696 560 108 700 150 649 430 294 565 286 485 564 554 535 591 616 222
 590 637  35 530 609 517 551 267 596 678 487 292 547  16 542 684 579 273 623  19 632 527 578  84 516 584  13 562 550 397
 582 577 234 732 546 624 552 288 497 509 537  50 448 598 374 597  72 440 154 615 574 518 217  92 608 490 492 545 580 373
 583 479 207 639 660 512 532 311 614 553 555 287 106 561 541  63 534 354 646 538 572 506 229 142 380 436 417 483 504 571
 522 528 493 508 471 105  45 348 489 423 661 592 414 452 514 544 347 459 470 603 451 488 379 563 500 587 568 358 446 187
 357 478 399 486 524 520 462 515 469 502 408 438 424 548 450 481 437 468 401 529 457 260 188 581 507 455 503 360 442 466
 396 453 428 372 501 474 403 531 376 862 427 475 435 431 432 368 458 439 491 549 400 429 325 413 383 426 533 416 499 390
 349 496 419 465 382 395 473 611 369 351 613 484 381 331 854 359 870 265 433 363 334 472 274 411 511 456 409 398 526 461
 362 441 412 346 540 434 735 694 318 220 418 709 444 326 200 317 342 797 494 375 312 467 617 566 407 405 657 240 495 425
 316 297 621 387 324 867 378 480 643 323 377 766 330 454 394 284 366 463 344 248 404 391 659 477 831 338 388 406 402 557
 256 365 320 197 262 464 322 790 759 420 809 686 340 335 133 866 367 353 364 314 900 386 765 812 198 249 190 384 315 594
 329 225 679 131 837 355 389 886 803 798 215 279 345 393 337 853 269 336 343 772 847 276 460 392 189 168 304 321 282 702
 221 352 569 300 244 588 184 612 861 140 235 855 310 313 257 800 370 196 210 876 730 738 525 760 203 305 306 309 258 888
 421 241 691 293 796 505 149 361 744 179  85 726 301 201 264 308 319 648 873 539 299 884 840 881 163 212 128 629 172 663
 145 271 747 160 371 754 892 651 652 251 254 653 209 177 178 599 385 771 859 753 875 211 476 278 281 100  61 852  60 589
  93 116 268 247 123 890 159 642 662 290 132 606 893 275 148 285 202 510 714 891 604 864 303 610 845 447 146 776  66 708
  98 157 242 218 860 849 887 658 750 126 231 232 162 857 155 576 173 216 664 832 636 252 183 449 161 877 139 848 226 801
 214 143 595  68 111 422 180 731 625 668 167 784 895 170 192 186 141  76 898 685 567 758 824 536 770 780 181 208  90 850
  80  97 889 113 115 897 219 757 805 136  71 193 593 880 255 185 233 121 620 228 729 899 842 777  46 804 239 894 124 674
  42 605 263 291  33 879 135  75  52  32  70  83 865 191 807 896 874 166 204 695 743 851 640 127  49 717 883 692 885 670
  69 868 869 195 125 839 236 631  67  58 130  79  40 872  86 626 164  96 863 882 585 878 827  99 570 763 871 676 112 339

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.36164e+06us (= 4361.64ms, 4.36164s)
Wall-clock time (full program): 4.39449e+06us (= 4394.49ms, 4.39449s)
Satisfaction error: 0
Number of search iterations: 1134
Number of local moves: 761 (including on plateau: 181)
Number of local minimum: 48 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  33  79 169 814 697  78 290 756 287  27 190 741 768 843  89 423 545 850 750 724  59 674 891 882  76 492 104 762  29 393
 154  81 718 698 693 785 599 856 748 134 140  88 788 816  92 103 720 178 142 600  32 638 565 857  80  36 614 144 800 616
  42  55 789 694 618  58 841 728 849 115 158 572 729 887  86 453 148  50 153 896 881 177 730 838  91 117 867 171  46 676
  98 348 184 221 717 615 842 895 787  90 135 872 701 782 112 570 885  95 461 250  68  65 738 281 851 131 883 187 108 543
 203 119 863 783 147 172 888 716 670 124 714 722 244 823 276 239 778 200 225 819 306 833 680 127 208 421 107 111 105 892
 234 217 894 767 761 220 786 703 869 224 157 151 871 279 188 548 143 249 261 836 192 759 473 150 467 263 810 264 235 544
  97 209 804 622 268  48 607 206 617 784 128 369 702 793 401 846 578 152 215 374 227 180 755 792 289 230 271 900 191 860
 211 228 370 742 766 403 137 528 889 258 141 687 633 818  73 675 890 164 255 692  60 267 771 293 380 324 798 101 288 673
 299 315 222 684 163 202 840 853 884 199 205 314 636 174 262 864 323 734 256 861 383 335 751 270 382 660 355 214 136 739
 274 296 223 689 269 110 899 319 360 898 212 877 441 526 285 632 275 139 433 377 336 400 780 482 712 727 165 216 297 866
 378 257 406 662 316 185 480 391 365 280 758 322 764 254 435 757 454 512 310 875 294 295 465 496 407 653 747 226 339 432
 376 266 474 663 463 358 897 375 329 395 345 812 413 145 334 656 283 337 859 364 452 167 691 273 302 822 286 427 284 667
 385 425 372 598 354 259 277 408 568 379 351 359 690 450 332 414 437 865 317 601 434 521 708 305 430 553 422 412 532 357
 384 464 438 644 292 410 457 494 705 397 439 282 240 666 436 381 498 368 460 566 207 416 424 387 447 893 516 346 459 399
 524 349 497 560 300 404 405 420 505 417 367 710 661 511 444 341 489 484 353 552 415 402 558 312 301 536 390 547 350 411
 344 386 476 456 446 555 309 445 507 522 651 514 466 603 531 530 470  25 504 326 442 366 451 760 535 340 471  16 443 625
 331 513 468 236 594 429 363 538 648 307 537 347 428 520 362 539 241 493 529 485 478 311 320 551 664  40 549 581 655 458
 613 449 308 265  85 506 418 440 647 534 592 542 574 342 665 490  51 557 477 238 550 527  63 303 563 491 590 479 561 595
 801 597 481 488 571 586 483 500  30 487 518 116 523 495 588 186 510 567 247 503 533  24 146 606 562 195 509 624 721 318
 540 580 640 179 121 637 120 248 608 612  77 610 646 596 499 106 591 218 605 392 508 579 472 546 639 556 515 619 327 129
 593 681 626 352 125 501 519 621  82  14 486 113 272 642 321 159 231 745 773 330 645 688  99 654 671 677 573 577 502 243
 652 620 589 260 631 668 584 431 175 709 455  15 198 585 525  84 725 803  52 569 749 161 373 643 627 194  22 576 672 168
 796 658 657 313  62 685  96  19  38 704 699 649 213 361 629 328 575 795 475 325 765   3  10 774 100 635 686 609 707 149
 746 634 602 333  26 564  39 219 138 587 719 554 173  45 876 389  21 683 844  43 623 679 426 740 650 245 338 604 743 232
 706 659 160 170 874  35 156 182  20 744 723 611 396 242 696 559 711 736 832 133 583 678 123 715 246 109 669 806   4 237
 630 682 122  94 628 769 102  75  53 737 304  69  64  57 827 469 808 835 753 388 825 204 409   5 848 394 726 770 794  74
 582 731 695 201  71 713  66  44  93 820 830 253  17  54 829 298 181 815 839   6 824 791 210 462 233 772 132 831 779 343
 837 858  31 118 776 811 735 176  61 880 775 641  70   9 754 252 114 799 278 189 828 802 371   1 852 419  72  47 797 162
 790 886 196 126 834 879  87 700 732 356 854 155  28 130 763 826 817  11  12 183   7 752  49   8 868 813  37 541 878 197
 862 873  41  83 847 870 193 229 251 781 855 448 166  67 805 398  23  56 845  18 809 821  13   2  34 777 291 807 733 517

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.95306e+06us (= 5953.06ms, 5.95306s)
Wall-clock time (full program): 5.98608e+06us (= 5986.08ms, 5.98608s)
Satisfaction error: 0
Number of search iterations: 1710
Number of local moves: 772 (including on plateau: 268)
Number of local minimum: 118 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 414 224 699 114 848 736  89 820 161 566 192  70 685 834 251 144 768 893 858 668  12 331 754 731  97 836 170  90 457   3
 694 598 179 143 855 788 867 152 683 419 787 101 877 883 211  24 119  39 826 311 127 775 271 762   5  17 816 370 128 688
 189 223 880 167 362 796 766 841 755 811  65 106 784 530 193 715 605 463 885 245 194 847 309  18  10 350 238  74 312 782
 102 371 421  44  85  92 821 104 654 751 863 116 732 869 246 203 693  83 879 733 891 674 710 140   6 274 215 218 720 805
 108 298 230 115   2 793 807 779 726 506 868 113 150 743  26  29  31 207 870 228 678 824 819 318 390 292 681 304 852 728
 142 310 404  20  56  30 829 581 672  57 781 110 642 744  87 795 770 785 559 729 178 776 639 769  22  69 397 277 615 670
 182 235 148  66 682 778  40 804 606 517  25 837 771  35 584 184 341 226 897  37 734 717 758  32 737 278 692 176 644 752
 186 258 149 188 222 558 482 539 759 643 748 266 745 673 227 700 565 125 640  42 652 614 531 206 721   9 665  99 601 702
 361 190 129 208 850 631 705 698 123 623 680 154 626 409  38 656 413 163 691 634 521 567 573 661   1 133 636 157 663 621
 281  71 452 272 255 415 512 633 553 662 603  54 789 535  46 659 650  75 583 671 777 339 547  72 646 641 580  59 529 554
 201  78 376 356 249 509  21 548 687 669 501 437 756 898 622 635 632 451 599 195 109 520 677 568 322 159 456 561 593 130
 338 126 625 825 851 427 555 592 538 579 572 107 121 410 111 430 648 484 447 234 196 438 557 624 701 706 467 401 389  16
 276 854  43 283 590 515 549 684 773 254 818 490 386 576 483 618 469 243  86 516  77 637 611 187 412  23 340 487 638 597
 295 165 552 508 498 462 435 502 453  73 519 454 541 697 468 532 608 607 464 461  14 436 649 527 303 264 472 497 526 533
 275 444 481 560 658 372 525 214 545 398 489 628 569 602 400 327 496 455 329 499 480 513  98 536 446 466 345 486 474 405
 718 459 449 493 290 429 423 479 406 385 534 306 695 416 571 325 550 491 450 348 503 257 488 492 505 260 394 431 377 591
 473 574 174 627 367 112 315 308 543 242 420 809 500 595 749 417 378 313 660 411 458 817 333 375 323 465 460 270 471 556
 577 857 328 494 382 511   8 426 832 810 374  33 122 432 368 373 564  67 485 730  58 476 353 388   4 799 874 760 899 131
 518 740 357 507 319 445 347 369 396 424 282 675 504 366 666 300 146 320 229 657 425 352 326 379 399 690 831 887 252 407
 686 475 294 724 302  88 514 859 284 336 383 844 209 422 719 287 337 865 346 860 363 477 248 418 273 620 233 510 307 232
 523 645 478 679  50 288 265 198 332 822 433 408 305 293 830 180 764 250 285 651 563 360 600 335 790 613 244 757 220 354
 703 616 828 537 443 286 434 221 849 321 355 380 241 296 794 317  53 827 156 428 334 594 570 402 524 582 364 588 173 299
 746 617 391 738 316 137 166 562 291 667 202 838 183 314 739 609 205 470 268 889 343 324 344 630 301 587 403 878 145 212
 763 791 160 833 236 358 894 707  28 780 448 664 610 330 783 395 240 267 247  19 204 124 359 263 735 655  82 546 151 843
 727 709 689 840 164 619 147 158  79 237 168 813 219 175 442 747 365 704 172 742 871 191 231 814 881 495  96 586 279 155
 797 839 708 845 812 105 253 349 225 387 217 713   7  64 239 439 711 696  48 259 596 213 199 801 723 896 210 802 185 177
 351 712 884 551 856 440 864 197 384 262 141 585 393 181 846 297 800 441  62 381 612  51  60 342 888 542 528 765  84  15
 269 544 604 842 162 886  68  52 118  91 117 792  81  27 589 522 171 876 153 629 873 135  80 256 803 741 835 578 823 798
 725 100 653  36 892 815 676  76  47 120  55 722 261 132 540 774 289 862 280 169 806  95 772 716 761 200 216 808 872  45
 895 392 750 900 861  94 138  63  13 103 875 890  11  34 647 882 134 767  61 139 866  41  49 753 786 853 575  93 136 714

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 9.40523e+06us (= 9405.23ms, 9.40523s)
Wall-clock time (full program): 9.43794e+06us (= 9437.94ms, 9.43794s)
Satisfaction error: 0
Number of search iterations: 2769
Number of local moves: 960 (including on plateau: 343)
Number of local minimum: 226 (including on plateau: 32)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 892 585 794 684 174 660 354 790 190 166  94  87 246 890 870  74  54 236 551 884 225 375 112  99 610 396 413 648 886 476
 818 546 522 747  55 622 574 581   8 763  48  53 627 565 294 664  93  52 808  70 620 881 202 524 120 839 227 678 623 291
 567 181 424 196 803 257  83 605 384 765 782 815 150 802 130   3 756 757  57 367 694 143 550 601 539 290  96 381 542 795
 845 442 159 537 888 743  68 817 151 101 122 297 425 731 221 773 278 466 313 513 826 156 254 705 512 263 841  90 887  91
 452 825 518 249 262 832 235 325 318 126 588 553 308 324 292  95 572 457 209 735 129 849 431 775 217 658 604 267 674 636
 859 144 245 459 462 403 237  79 137 618 251 426 853 729 406 155 233 626 771 428 178 212 740 536 473 323 762 482 842 446
 644 873  11  77 348 856  37 875 778 288 287 631 564 219 764 264 243 162 898 711 248 265 709 250 364 532  26 511 368 712
 134 662 835 434 781 197 503   4  49  61 316 596 822 255 736  39 824 752  41 472 710  14 766 501 465 401 363 455 445 882
 879  21 749 732 827 268 411 216 410 686 241 436 505 330 285 169 717 628 117 193 893 167 876 538  47 646 172 273 899 184
 359 858 239 207 667 724 632 414 577 409  51 470 861 689 385 161 382 480 146 624 863 353 329 652 681 376 337 199 252 138
 483 468 358 833   6 613 342 341 779 885 464 760 597 864 590 423 152 840  28 139 788 230 690 187  44 303 679 391  16 222
 194 206 430 214 201 298 813  27 819 224 299 282  25 336 801 547 226  36 558 787 672 722 733 820 625 441 804 448 871  56
 149 317  43 589 373 300 586 583 417 270 811 422 121  13 867 310 460 576 883 450 374 479 198 761 400 850 607  19 475 812
 629 713 540 854 386 834 242 397  20 204 750 768 260 671 321 210 208 432 810 191  97 633 289 335 280 642  89 591 557 562
 703 105 488 701 456 145 334 866 467 776 714 484 435 175 857 560 561 510 284 279 606 584  66 533 328 127 125 361 165 720
 389 493 602  98 688 188 798 797 405 723 352   2 814 147 124 621 463 113  63 593 351 491 789  23 639 741 594 286 549 579
 555  80 640 168 418 502 497 394 500 277 261 388 398 171 276 852 331 213 140 612 492 333 877 647 253 487 844 774 444 691
  45 716 399 438  59 369 611 719 868 347 554 115 544 110 806 807 116 453 829 600 769  30 148 783 458 366 580 535 306  35
 141 499 402 275 383 443 173 107  71 587 608 571 380 777  38 661 296 528 421 753 283 575 900 635 598 304 106 865 891 244
 164 189 182 707 269 416 295 529 379 495 447 163 349  86 545 339 697 232 843 519 478 692 702 526 869 595 494 559 360 395
 669 860 745  69 637 158 836 307 517 830 234 772 393 128 552 531 828 293 312 256 668 220  73 142 742 449  33 730  24 507
 784  88 663 805 615 659  75 725 200 439 630 109 515 486 680 530 326  92 767 102 508 848 415  18 748 471 675 433  67  42
 683 706 563 650 195 309 634 404 780 344 603 412 114 666 211 654 699 582 332 461 176 734 104 320 657 215 682  58  40 527
 108  17 786 322 878 192 677 419 345  31 548 370 698 123 177 796 218 490 862 357 136 205 420 315 543 793 737 896 356 700
 274 498 847 509 408 616 514 343 573 372 665 823 272 727  62  50 638 880 111 160  29 451 534 238 770  34 474 894  64 685
 100 231 599 346 118 759 496 240 895 302 721 154 800 185 327 541 889 821  65  15 695 799 525 103 653 673 746   9 427 281
 180 651  22   1 704 271 609  81 792 378 390 838 656 570 758 489 726 641 259 365 362 831  84 614  82 696 407  32 311 715
   7 477  76 643 670 319 578 521 429 754 258 340 485 440 157 791 846 872 897 676 183 437 203 718 133 131  12 592 350 520
 305 693 153 186 738 392 516 301 506 645 617 855 179 687 851 837 454 223 874 816 377  78 228  60  10 338 247 314 469 566
 504 371 481 785  46 170 755 708 751 649 809 523 119 619 132 569 229  72 266 387  85 728 568 556 655 135 739 744 355   5

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.34195e+07us (= 33419.5ms, 33.4195s)
Wall-clock time (full program): 3.34536e+07us (= 33453.6ms, 33.4536s)
Satisfaction error: 0
Number of search iterations: 11782
Number of local moves: 3421 (including on plateau: 1543)
Number of local minimum: 1109 (including on plateau: 182)
Number of resets: 6
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 512  60 492 590  63  57 747 777 165 163 207 659  95 144 752  64 410 757 665 240 790 497 185 612 730 816 152 467 803 844
 750 559 794 258 251 160 578 562 278 615 707 381 135 864  86 505 614  56 103 768 823 105 574 184 825 859  84 838  71 128
 450 766  19 728  81 175 242 420 227 132 606 786 843   8 818 866 831 218 479 862 336 455 229 130  51 826 802 552 452 125
 806  77 124   1 532 546 657 398 781  69 775 480 769  38 773 895  30 167 427 789 520 196 674 535 739 176 878  54 106 503
 652 197 131 156 876 891 791 638 191 310 817  89 232 745 716 199  68 205 349 599 189 248 805 646 395 108 523 561 871 317
 292 732 375 872 548 671  25 625  99 319 703 393 861 519  90 118 404 446 369 640 653 688 853 724  48 475  20   9  61 883
 447 246 570 557 589 236 230 272 849 725 119 774 585 433 283 426 384 668 367 198 213 868 294 174 154 729 900 298 733 194
   3  88 481 607 772 851 264 575 162 860 448 305 565 286 267 600 554 712 538 238 422 863 678 352  46 233 555 814 239 137
  87  79 516 451 302 899 841 377 890 508 291 104 334 325 428 650 472 670 588 142 812 636 531 442  16 605  14 832 558 115
 710 464 257 681 360 273 735  98  32  10 870 348 314 677 622 261 321 852 770 413  18 569 289 228 342 510 553 651 856 431
 820 358 522 811 643 896   4 493 858  39   7 695 399 392 417 485 177  66 551 889 173 285  93 297 829  35 617 815 469 380
 898  17 633 713 287 547 279 438 577 116 808 454 407 799 470 324  36  74 676 421  52 894 596 564 411 127 642 311 418 526
 201 647 630  11 502 354 518 243 397 255  65  12 356 658 649 188 626 830 629 882 536  26 168 765 760 203 892  40 701 771
 787 161  73 539 641 846 482 631 576 263 268 330 304 437 704 496 591 458 237 187 696 225 133 793 549 326 226 708 155 693
 727 350 440  92 445 424 534 389 456 517 400 457 601 288 837 845 780 613 313 338 204  75 798 645 306 373 351  82 507 328
 680 415 378  34 329  15 762 560 828  27 374 405 541 706  28 293 821 323 873 171 563 513 429 755 666 473 234 409 412 498
 648 453 763 101 391 406 143 245 748 362 357 672 430 597 296 434 146 801 810 698 436 753 182 121 315 435 444 276 720 332
  22 836 364 583 471 463 459 542  59 408 339 211 897 486 147 490 140  45 740 253 494 122 813 443 337 572 788 887 270 834
 388 223 662 300 742 683 664 151 200 848 566 869 221 193 881 439 265 624 190 528 736 423 206 280 299 387 584 212 275 476
 219 759 224 635 216 195 441 623 491 886  13 166 308 514  78 656 530 880 256 363 386 529 164 499 875 797 509 616 465 222
 153 274 344 888 521 595 689 114 610  50 691 692 126 567 123 718 111 593 416 202 394 571 819 685 627 340  97 758 145 602
 215 833 327 343 271  94 120 331 102 795 488 738 700 715 618 711 468 110 335 620 661 639   6 586 785 489 699 134 180 402
 822 726 749 594 322 855 515 663 637 365 628 192 511 370 527 743 169 697  23 316 573 307 783 277 150 383  85  43 361 129
 483 157 608 609 244 655 449 254 249 737 809 138  47 669 214 644 865 719 694 347 654 341 141   2 611 346  21 355 709 744
 403 754 345 761 702  42 159 501 419 581 543 366  72  41 181 544 767 540 804 149 592 675 679 301 525 796 385 252 303 333
 170 751 682 466 784 396 580 487 460 756 368 734 235 660 432 247 867 262 107  76  24 500  33 885 376 474 619 295 603 186
 504 722 884 117 136 113 835 353 582 842 723 266 210 112 827  70 477 290 178 309 550  58 537  62 824 220 807 779 604 524
 208 776 621 100 717  96 533 379 425 854 259 506 893 877  53 231 158 461 731 148 209  80 741 847 139 800 484 874  31 284
 414 401 478 545 686 241  67 598 462 382 183 579 667 390 359 318 746 109  37 879 556 684 587 632 217 282 179 281 764 792
  44 634  29 372  91 840 172 778 705 721  83 714 857   5 839  55 687 269 260 850 250 690 495  49 568 320 371 312 673 782

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.62042e+07us (= 36204.2ms, 36.2042s)
Wall-clock time (full program): 3.62372e+07us (= 36237.2ms, 36.2372s)
Satisfaction error: 0
Number of search iterations: 13621
Number of local moves: 3648 (including on plateau: 2007)
Number of local minimum: 1211 (including on plateau: 208)
Number of resets: 6
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
   3 858  11  42 577 781 123 810  56 362 321 884 747 713 145 148 789  19  74 786  89 865 823 821 657 733  88 696 234 260
 855 332  30  83 714 228 229 522  13 797  94 874 730 780 187 893 220 799  49 820 356 800  27 598  79 683 152 630 838 103
 312 625 554 143 769 224  64 803   1 125 352 787 848 798 392 281 831 223 113 693 763 214 411 859   2 752 624 718 213  21
 505 189  23 169 741 582 419 736  54 749 628 738 434 631 109  47 886  39 111 847  87 754 762 701 593 121  29 870 252 709
  34 251 611 788 330 645   5 880 607 690 198 751 106 435  43 140 814 208 270 710 807 117 756 824 162 320  76 404 715 818
 622  78 278 648 410 297  17 699 484 246  82  26 772 816  44 261  58 845 785 856 221 804 670 674 673  98 151 676 828 396
 619  96 271 616  59 685 230 133 202 549 256 284 418 663 689 761 746 236 135 766 703 666 118 716 394 345 440 734 201 784
 546 262 100 590 682 331 476 771 154 753 211 725 757 779 147 438 482 114 580 629 697 708  22 195 129 167 218 499 695 658
 122  41 456 731 142 652 748 226 479 768 292 726 702 385 805  86 542 168 596 760 664   4 544 597 108 164 258 599 594 556
 650  67 304 493 170 592 537 819 300 888 173 559 604 637 571 185 567  32 719 655 156 518 341 587  12  60 354 679 691 595
  51 257 588 707 183 529 857  25 380 388 338 647 415 610 531 191 899 190 286 397 532 802 569 247 643 470 175 672 255 681
 626 834 585 395 110 523 543 402 414 130 161 449 500 285 382 601 570 887 249 412 558 576 552 618 501 244 374 557 453  24
 503 583 589 524 219 351  36 875 436 186 621 430 128 463 660 371  65 842 517 232 620  84 399 688 541 613 268 509 309 853
 644 401 477 515 614 498 521 409 383 387 526 535 400 507 279 369 405 455 603 665 428 659 212   9 646  45 379 519 444 581
 153 488 560 365 146 406 336 563 538 443 846   7 442 545 492 480 566 851 520 398 315 340 514 424 432 512 502 612 408 311
 457 777 466 584 390 386 138 573  15 439 491 465 469 510 642 892 527  31 489 238 188 357 568 452 231 310 474 694 825 437
 547 277 403 366 723 303 534 367 506 811 307 377 373  46 862 508 131 265 462 348 692 458 633  77 446 468 301 540 868 516
 422 416 490 459 450 801 384 421 602 243 483 273  99 615 539 871 426 495 487 445 423 639 287 372 337 485 548 288 360 355
 885 496 363 448 742 253 651  14 194 460 325 796 254 346 215 661 833 844 704 342  62 323 461 237 368 700 879  18 317 324
 159 850 451 275 417 561 393 316 743 680 441 318 333 299 381 717 179 732 370 293 204 349 431 832  95 852 564 364 282 634
 433 513 739 295 565 389 623 350 662 900 240 555 471 525 319 116 334 407 511 327 678 322 272  73 668 572 550 259 687 160
 872 698 276 375 486 216 359 283 289 329 376 267 308 199 339 575 778 866 684 132 306 447 305 473 735 876 347 210 783 326
 206 711 724 222 192 313 706 837 675  66 773 126 849  61 883 269 205 353 873  70 809 429  93 112 551 841 686 420 196 264
 241 233 897   8 654 266 378 263 638 149 579 358 791 302 165 898 574 758 203 166 150 158 806 882 790 391 636 296 245 640
 829 605  33 721 217 467 586 177 827 290 242 171 641 344 755 172 178  90 712 782 835 649 591 728 472 250 740 235 124  52
  85 794 795 776 774 314 722 182 608 180 770  55 107 475 562 627 248 530 127 328 101 197 745 163 891 671 764  68 836  20
 207 737 227 427   6 298 497 115 775 200 808 727 454 464 750 291  10 843 553 181 822 817  75 193  71 425 600 533 528 881
 793 606 494 767 632  91 813 578 815 361 860 504  97  16 869 635 413 894  81  80  28 141 102 176 720 155 896 144 137 617
 653 335 890 744 792 864 861  72 839  69 854  63 174  57 478 895 120 274 840 104 343 134 759 139 705 536 677  37 157  50
 481 105 830 239 609 669 729 294 826 877 867  38  92 209 280 136 119 225 812  53 878 184 667  48 863 656 765  35  40 889

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.39889e+07us (= 13988.9ms, 13.9889s)
Wall-clock time (full program): 1.4022e+07us (= 14022ms, 14.022s)
Satisfaction error: 0
Number of search iterations: 4721
Number of local moves: 1494 (including on plateau: 622)
Number of local minimum: 411 (including on plateau: 74)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 722 864 866 744 770  98 668  70 836  81 739 765 121  52 117 797  60 897 118 674 115  55 839  54 844 102 746  39 130 532
 597 888 863 772  84 700 659 614 717  97 870 561 549  66  43 871 203  59 106  77 112 592 798  44 869  49 886  37 657  75
 627 557 749 177  48 187 753 205 835 838 741 779 634 595 164 818  92  47 190  91 481  74 724 180 842  90 762 898 194 143
 738 804 124 354 176 170 644 806 846 374 156 457 899 162 155 667 234 160 223  69 284  58 692 771 540 677 894 820 316 245
 855 800 829 151  89 202 537 150 732 169 877 872 153 183 236 780 128 152 159 195 258 309 767 885 759 856 673  51 188 520
 832 147 184 817 212 166 600 217 736 884 873 510 840  78 628 196 224 109 198 883 415 126 476 110 890 253 853  36 814 208
 712 830 810 216 100 254 811 647 710 435 638 889 632 311 137 352 129 270 260  88 764 259 783 880 615 193 272 163 174 181
 558 881 214 606 331 319 313 887 601 413 755 646 289 821 266 172 209 220 265 868 568 197 896 125 315 620 573 282 222  83
 752 320 182 655 192 326 774 860 701 745 317 616 895 133 285 191 228 255 273 264 803 858 384 173 261 518 664 246 340 304
 785 604 213 344 247 215 505 363 879 892 293 669 833 348 175 341 297 361 299 179 900 279 697 310 387 302 322 466 136 874
 768 292 178 107 306 226 808 478 730 702 695 882 370 404 402 204 241 417 491 144 848 447 389 395 365 728 493 338 308 359
 379 237 333 665 401 499 721 334 548 484 248 769 329 271 349 328 420 275 867 823 707 427 635 360 501 507 372 158  82 486
 400 314 378 268 242 416 467 318 448 653 380 542 382 263 472 392 428 474 431 502 637 891 516 283 418 709 422 383 487 599
 423 390 336 854 398 523 301 364 529 813 414 371 622 619 321 441 541 442 432 500 339 381 515 412 274 409 578 267 426 280
 257 494 443 519 521 497 458 276 399 323 424 366 503 630 281 470 397 498 488 353 517 465 584 430 421 469 335 567 480 650
 405 433 453 408 345 356 475 347 511 546 358 552 444 403 526 527 343 456 434 439 566 325 377 464 729 342 536 506 396 513
 411 508 489 103 437 522 662 298 369 278 544 330 623 244 587 410 436 543 538 440 535 461 386 684 346 589 211 446 590 495
 463 385 560 553 550 586 482 559 468 189 689 351 269 547 452 394 490 391 451 621 555 337 629 473 575 240 210 570 438  38
 485 533 608 643 530 539 134  67 312  45 525  33 716 564 524 455 545 576 252 551 161 572 579 611 504 582 200 605 639 425
 375 483 512 651 624 583 250 454 256 350 167 332 688  63 758 610 607 307 459 563 233 556 101 479  12 565 733 618 750 376
  95 449 509 406 748 613 135 725  73   6 656 239 580 676 652 367 554 666 388 598  72 581 585 609 720 142 146 683 704 138
 531 685 617 626 781 577 290 591 462 303 373 393 603 528 574 658 641  19 727  68 207  21  28 571 588 514 221  25 648 645
  53 663 696 122 633 569 123  32 243 661 690 262 105 675 682   2 631 737 636 477 148 596   3 778 602 295 681 757 734 229
 116  17 723 108 714 671  24 368  57 324 219  61  13 687 698 640 789 705 786 845 680 534 357 132 171 743  96 654 718 865
 186 445  29  50 706  40 294 816 231 719 141 232 154 699 776 837 788 826  76 694 286 594 120 703  85  41 795 819 625 708
 149  14 740  64  46 670 119 649  22 742  71 287 362 238 140 791 713 851 562 612 407 660 157 747 642 593  86 763 843 775
 291 227  10  18 824 711 679  62 127 460 218 251 114 766 686 790 726 850 849 735 288 754  30 787 165 492 277  31 419 878
 450 111 847 861 822 672 429 756  23 113  99  56  11 857 761   1 825 225 893  34  15 782 296 751  26 300 230 760 715 794
  65   9  16 777 831 793 199 471  94 185 139 355 678 805 809   8 784 852 802 801 773 496 145  79   7 796 168 693  93 792
  35 131   4 876 807 815 201 731  20 691 206  87 104 827 859   5 812 875 862 327 841 828  27 235  42 799  80 834 249 305

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.9836e+06us (= 3983.6ms, 3.9836s)
Wall-clock time (full program): 4.01703e+06us (= 4017.03ms, 4.01703s)
Satisfaction error: 0
Number of search iterations: 816
Number of local moves: 667 (including on plateau: 179)
Number of local minimum: 33 (including on plateau: 14)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 824  13  18 775 777 748 842 129  15 191 294 678 875 852 840 157 204 483   2 140 110 868 806 258 877  46 843 348 468  34
 837 862  76 794 130 167 865 303 103 390 106 323 850 809 587 340 271 734  45 315 139 797 825 297 836  67 758  81   4 804
 841 853 244 858 849  10 854  38 699   7  72  60 864 816 107 331 207 310   9 508  63 827 718  59 856  22 832  20 789 792
 756 782 112  24 672  98  31 848 138 246 773 238  35 866 573 337 239 714  36 764 251 839 585 108 767 695  25 339 813 811
 778 807 158 738  11  28 749 761 215 147 362 386 861 815 771  90 113 174 703  77 327 719 785  19 658 198 696 213 357 799
 729 780 290 681 555   6 630 667 170 162 308 624 711 740 747  68 111 484 766 142  48 680 652  50   5 702 820 363 175 649
 725 727 218 706 768 287  33 646 105 179 602 633 759 721 564 180 697 176 275  80 223 668 674  14 722 155 707 197 295 779
 784 663 241 609 629  65 665  30 700   1 742  83  32 713 812 237  55 673 744 391 277 623  12 619 641 684 769 208 199 614
 546 637  41 693 660  89 687 640 233 114  26 735 656 730 260 202 314 635 570 610 169  16 689 595 671 644 628 184 243 598
 636 572 321  17 571 558 613 499 332  40 677 104 645 686 765 201 548 616 501 168  37 675 267 715 537 670 621 214  92 617
 539 655 190 657 528 627 615 606 464  58 317 588 503 631 427 381 522 669   8  21 309 592 569 603 419 534 708 145 380 250
 544 626  23 594 567 625 263 526 651 182 552 647 579 500 515 550  95 489 502 607 566 490 530 463 476 123  62 608  29 531
 565 235 266 590 545 562 118 622 514 192 580 581 465 541 582 521 560 247 509  47 578 229 519 491 576  52 506 482 643 597
   3 561 523 498 532 589 600 471 475 505  91 563 477  27 527 456 441 496 478 449 328 436 450 535 512 510 493 518 414 557
 330 445 446 525 423 415 443 467 265 559 455 486 495 345 457 556 487 385 461 447 504 494 432 428 485 376 536 372 524 472
 454 453 568 382 371 466 480 437 458 638 401 413 513 444 394 551 442 452 497 431 577 398 361 516 529 396 388 356 360 389
 387 409 422 511 412 424 479 439 416 731 549 352 354 451 355 554 474 408 397 425 717 520 410 553 430 367 481 335 384 369
 256 377 601 210 329 470 533 405 350 402 683 392 417 349 347 712 542 883 311 429 420 306 359 418 307 403 462 690 704 448
 325 438 488 407 353 255 426 343 393 547 252 834 282 365 200 885 434 383 814 373 517 326 341 268 460 400 279 882 879 366
 411 257 701 296 399 421 433 261 286 593 808 273 379 334 716 705 810 378 249 788 507 236 234 333 320 324 253 873 772 165
 227 240 863 404 304 209 272 280 285 791 900 762 188 262 574 860 878 881 302 298 358 151 301 305 375 440 143 611 819 232
 318 212 741 222 276 344 160 178 726 612 884 395 351 293 278 817 753 368 216 757 887 620 312 774 148 230 134 634 605 270
 248 194 760 141 289 206 242 891 319 798 869 173 299 322 342 632 662 770 291 374 826 245 821 300 189 543 205 679 666 219
  56 137 492 144 288 838 880 364 823 818  97 135 228 264 737 828 217 292 659 805 661 281 221 874 269 728 166 406 676 131
 231 225 691 133 185 897 177  94 692 847 159 855 284 121 336 575 872 845 187 857 752 604 154 338 124 793 259 754 313 161
 183 226 787 125 896 851 193 694 642 596 122 736  74 149 127 648 274 211 886 724 538  57 172 871 171 346 844 618 688  66
  96  93 653 870 181 895 116 876 698 650 153 682 220 152 283 739 743 186 710 316 586 254 136 473  87 755 469 591  69 783
 101  64 892  85 164 733 132  71 803 893 835 150 119 120 109 195 750  61 889 802 800  75 370 899 790 846 196 888 459 224
  39 890 795 709  88 801 781 829 822 830 126  51 898  44  84 128  49  42 639 786 776 435 732 685 115 599  86  73 540  43
 746  82 894 117 763 831 203 100 723 796 720 583 102  53  99  79 751  70 859 584 664  54  78 654 163 867 146 833 156 745

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.26745e+06us (= 4267.45ms, 4.26745s)
Wall-clock time (full program): 4.30065e+06us (= 4300.65ms, 4.30065s)
Satisfaction error: 0
Number of search iterations: 1051
Number of local moves: 821 (including on plateau: 234)
Number of local minimum: 34 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 818 315  62 196 494 843 716 868 713  84 585 109 118 211 647 887 559 590 240 888   7 839 894 878 225 101 112 133 147 236
 291 550 549  37 780  88  53 296 785 855 850 350 155  92 382 598 649  40 396 132 680 815 820 442 201 900  85 728 886  30
  47 889  93 626 803 526 832 122 384 882 667  83 776 204 735 298 167 119 170 823 563 198 663 465 222 340  81 841 139 757
 651 157 425 451 683 146 108 129 470 844  25 516 655 358 638 121 812  65 890  35 775 824  87 717 779 194 870 115 209 766
 221 151  70 648 755 120 116 762 418 744 674 564  42 176 822  71 816 219 740 893 872  32 845 743 332 558 177 250 174 510
 247 172  94 117 160 175 100 783 769 720 731 462 152 352 771 884 582 193 330 788 741 134 836 619 885 631  95 144 156 692
 354  43  99 159 288 171 614 150 761 432 491 819  44 594 746 136 770 678 592 420 371 258 636 777 581 867 245 610 180 629
  96 813 322 140 278 869 138 487 372 833 593 368 266 325 502 857 308 286 267 737 259 301 854 428 452 891 254 239 712 268
 190 131 128  23 826 784 362 518 305 466 383 811  74 388 837 745 684 895 227 241 864 805 586 580 520 539 277 142 166  18
 284 304 356 880 709 611 282 173 577 681 790 309 217 113 711 148 341 654 671 842 482 311 114   2  80 799 447 738  24 865
 408 252 443 244 444 800 310 768 689 287 392 290  10 275 141 361 751 618 471  15 856 446 448 753 521 622 702 220 395 583
 331  90 360 892 603 621 188 249 795 251 400 852 370 338 265 163 468 409 283 877 271 321 441 458 339 588 866 457 342 627
 859 269 873 243 646  75 729 289 391 246 810 323 883 394 346 760 369 125 186 235 302 230 874 312 756 566 276 200 467 481
  21 434 599 436 608 473 326 270 690 853 313 314 393 374 337 477 416 402 336 514 633 643 353 429 357 628 660 519  98 609
 578 601 483 419 469 328 454 493 377 344 390 224 561 685 584 635 722 363 228 426 488 333 127 497 398 137 547 386 464 774
 496 107 606 543 379 688 421 406 262 456 513 489 533 486 503 376 528 495 665 587 359 640  34 557 544 445 320 124 556 397
 499 476 207 569 439 835  59  50 573 385 607 650 162 478 786 407 297 455 449 387 334 847 524 427 280 435 415 378 567 538
 405 574 754 714 238 463 480 509 515 653 242 329 437 602 501 490 191 540 257 623 345 879 484 381 226 189  69 541 536 348
 511 794 600  54 364 545 534 433   8 553 829  12 575 656 504 123 613 401 205 507  39 825 365 472  14 505 430 571 645 828
 210 641 404 565 179 178 522 875  79 576 168  86 691 620  77 570 616 529 705 759 461 500 730 111 736  76 506 604 700  41
 410 724 871 531 253 438 896 767  19 281 525 727 666 562  45  73 661 793 673  61 303 537 535 263 181 316 523 634 145 102
   1 568 707 881  38 450 366 572   4 260 183 579 687 863 212 821 605 675 589 659 765  60   6  11 657  52 752 658 422 412
 747 642 413 431 423 668 718 475 597 272 215 479 615 750 237 424 548  51 708 229 165 672 307 335 459 274 696  55 715 195
 701 285 662 676 485 343 440  66 324  36 417 624 899 817 231 319  29 453 733 349  26 679 698 652  97 126 474 796 778 300
 644 704 677 723 682  20 719 808 403  17 292 695 551 389  72 862  27 187 595 233 234 255 256 508  89 498 373 512 748 742
 792 797 460 554  67 317 216 203 530  31 664 801 294 739 670 546  58 846 734  91 527 202   5 213 492 411 802 758 552 143
 625 532 169 161 197 110 798 849 273 669  28 617 898 232 184 414 106 199 710 293 827  78  33 686 721 897 279 834 848 248
 773 164 560 860 809 380 861 355  13  46  68 706 764 591 206  56 214 804 103 632 375  48 105 318 791 185 840 223 858 807
 763 699 772  16  49 612 851   3 630 694 153 192 295 693 814  63 261 555 208  57 327 781 130 399 831 596 639 299 782 351
 542 637 697 726 367 838 306 787 789  64 517 135 732 158   9 830 347 876 154 182 264  22 725  82 749 149 703 806 104 218

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.29106e+07us (= 12910.6ms, 12.9106s)
Wall-clock time (full program): 1.29441e+07us (= 12944.1ms, 12.9441s)
Satisfaction error: 0
Number of search iterations: 4065
Number of local moves: 1505 (including on plateau: 621)
Number of local minimum: 357 (including on plateau: 76)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 291  78 162 836 897  36  30  75 864  14 826 773 717 845  33 874 885 871 649 146   6 105  71 846 323 848 705 136 167 406
  39 418 143 655 820 878 212  94  90 850 814  24  51 835 144 841 853 822 354 104  25 141 843 857 132 892 821   9 517 237
   3 710 391 100 863 859  20 128 168 308 883  53 700 838   8 851 870 613 207 203 283 411  67 588 889 810 787 479 205 220
  93 794  72 522 807  88  31 134 364 256 666 629 877 884 243 762 828 804 844   4 786  76 115 692  13 784 344 715  48 240
  17 750 453 763 110 696 278 370  54 632 698 149 735 833 733 685 865 854 657 264 842  96  97 173 180 470 758  80 116 107
  26 603  21 816 257 297  62 719 172 498 875 542 772 751 235 663 881 579 779 138  34 133 704 255 519 796 661 650  16  61
 251  52 713 623 559 482 413 210 159 269 714 711 778 534 583 510 708 817  55  18 783  95 605 106 550 670 734 135  57 621
 242 827  65 658 697 693 379 341  60 194 716 731 813 530 746 536 712 723 686   1 683  85  43 580  11 469 775 142 327  50
 265 386 230 668 586 633  70 171  74 188 471 585 748 755 781 673 501 529 647 509 648 445 403  27 578 721 567 495   5 156
  79 740 126 774  84 677  64 458 611  22 518 582 674 619 568 600 577 513 253 433 248  86 691 451 595 644 114 607 596 511
 326 659 706 682 554 473 334 316 615 166 502 330 465 584 456 565 462 540 221 399 434   7 701 223 154 491 620 679 261 590
 358 539 285 630 654 637 179 526 532 189 457  29 591 325 662 576 487 494 545 460 594 362 300 499 382 485 720 490  69 459
 303 614 678 504 553 703 338 566  37 597 531 556 103 547 452 652 608 408 645 687 340 337 276  87 289 454 395 640  91 524
 481 497 428 346 483 440 508 410 512 484  32 361 287 612 533 404 527 634 409 514 461 427 396 393 549 392 435 602 551 407
 438 367 472 631 651 401 349 282 538 305 387 405 520 570 415 446 523 369 388 572 488 360 426 442 507 489 385 380 560 449
 493 626 375 528 464 558 486 466 430 616 503 366 353 475 537 480 270 625 402 250 343 439 355 412 592 301 477 463 436 394
 643 244 398 322 357 718 345 447 371 335 342 571 516 376 450 448 348 356 390 444 593 476 443 880 505 309 535 455 610 288
 587 581 296 417 273 333 879 359 384 675 294 332 500 313 304 506 241 799 834 247 365 801 431 437 424 419 198 416 429 441
 563 324 284 317 225 830 759 421 307 739 329 383 209 347 606 262 293 336 546 414 660 564 400 420 886 467 260 254 829 281
 609 374 672 432 231 604 618 236 351 695 170 279 378 397 368 381 226 299 312 653 599 548 350 617 122 555 646 286 699 808
 562 372 676 157 331 319 557 743 315 785 165 598 314 292 318 311 274 151 798 574 468 766 290 856 186 425 263 737 738 174
 742 238 192 272 155 178 684 624 894 642 302 422 187 176 233 228 320 119 882 373 541 893 667 722 389 767 120 777 561 215
 761 169 831 298 749 202 709 747 741 575 199 363 339 153 259 245  10 275 140 800 158 760 589 669 377 182 213 266 867 869
 795 191 837 227 184 271 478 757 671 665 328 823 109 181 258 195 196 211 185 788 204 680 824 627 780 129 280 150 702 789
 818 641 771  56 161 201 690 768 876 601 112 177 664  82 147 145 102 295 635 622 206 745 819 197 754 214 121 193 811 891
 899 321 689 130 352 152 770 208 246 216 573 862 544 232 753  68 310 277  59 756 849 765 724 234 190  89 164 628 729 726
 832  23 252 888 515  83 790 792 727 873 268 803  12   2 898 229 239  44 636 730 249 552 806 118 744 101 423 218 543 125
 681 840 732  99 638 127 812 769 825 267  49 183 219 163 797 200 108  19 175 852 656 736  98 474 306  35  63 890 815 887
 793  45 707  47  81  46 805 809 725 782 776 855 123 222 148  40 131  28  58 688 896 860 113 137 728  66 839 752 521 694
 525 492 858 117 224 900 866 569 802  77  15  38 217  42 847 139 160 111 124 872  73 764 868 496 861  41  92 791 639 895

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.01877e+06us (= 5018.77ms, 5.01877s)
Wall-clock time (full program): 5.05202e+06us (= 5052.02ms, 5.05202s)
Satisfaction error: 0
Number of search iterations: 1366
Number of local moves: 698 (including on plateau: 215)
Number of local minimum: 75 (including on plateau: 29)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 209 829   4  52   9 864 769  19 278  59 752   6 824 158 159 817 854 797 716 868 185 879  14 174  85 832 852 830 311 310
 844 770 762 765 823   1 113 873 151  77  62 223  61 268  71 233 875 814 686 751 721 866  73 110  49   8 694 720 857 194
 157 860 336 846 822 454  44 856 117 112 133 129 115  42 303 745 878 691 638 859 776 881  63 725 143 787 766  22 182  33
 120 713 372 753 757 747 755 389 107 434  94 360 156 240  18 135 763 574 778 628  31 662  39 187  15 682 793 750 663 800
 469   5 369 148  10 809 217 872  68 373 767  34  51 774 160 272 883 283 485 734 772 690  11 703 596  25 732 764 704 735
  95 640 218 858 456 687 789 726  45  27 490  23 121 742 150 710 786 644 327 835 700 560 145  29   3 840 685 842  81 261
 106 777 288 723 675 671 363 693  55  43 670 271 408 728 126 736 611  89 569 801 761 692 132  41  97 722 618 715 317  17
 265  32 307 652 702 749 562 847 493 340 689 102 590 167 297  20 598 203 164 536 655 538 161 788 586 626 681 495  67 603
 214 629 175 674 760 625 551 139 234 397 554 184 630  26 242  46 708 226 659 440 512 274 294 653 513 667 855 552 591 491
  40 579 124 874 677 651 520 533 587 142 739  87 699 100 259 128 528  80 122 593  64 564 305 688 576 683 578 558 730 707
 205 108 170 595 396 526 550  48 169 316 712 604 492  86 252 756 412 698 168 567 479 499 473 503 616 669 511 660 661 614
 572 246 489 666 178 540 658  82 484 103 619 371 455  13 196 504 602 592 189 535 624 471 186 548 701 608 672 559 413 639
 438   7 289 530 470 634 367 459 534 134 744 589 162 237 451 582 527 171 542 519 370 645 250 684 460 427 508 543 622 620
 606 531 352 566 577 420 482 588 381 364 532 544 400 448 354 418 345 177 457 439 465 546 298 472 547 417 355 509 384 541
 555 443 435 463 351 416 382 570 549 476 362 657 563 453 545 419 510 487 521 409 496 475 525 480 378 387 321 267 270 350
 423 505 599 516 486 390 379 442 394 515 325 623 339 498 501 353 436 497 537 299 444 411 432 494 506 347 461 422 561 380
 441 376 462 388 584 477 445 483 466 458 481 403 337 573 421 805 405 709 407 833 301 467 539 309 277 374 331 286 333 344
 368 424 507 399 610 853 426 433 401 635 398 201 392 524 428 415 425 849 279 474 517 127 553 312 348 230 404 383 330 870
 748 334 771 280 266 356 335 429 328 627 249 643 342 783 621 197 437 313 896 302 346 361 665 581 332 147 449 319 738 320
 276 518 841 377 262 247 523 254 343 565 898 366 386 326 452 260 273 821 585 502 395 323 601 514 291 300 213 899 580 324
 795 341 706 204 607 225 402 391 605 431 238 406 306 826 676 200 236 727 792 231 885 296 718 329 358 357 208 365 295 359
 636 447 637 172 258 211 219 385 895 804 255 863 746 318 632 141 315 314 613 190 212 244 648 794 257 263 166 292 780 808
 650 293 557  76 410 192 264 848 865 724 281 867 210 843 656 818 125 646 338 216 181 304 839 811 183  66 149 290 245 568
 775 287 529 308 222 446 251 696 275 815 241 500 193 414 731 522 248 154 198 284 269 349 819 893 802 253 202 322 714 803
 575 617 556 173 137 488 152 220 900 884 146 886 897 647 733 179 207 450  99 215 468 153 791 679 697 224  91  78 375 798
 464 850 633 206 754  38 243 285 838 782 191 583 834 478 837 845 195 717 571  30 806  47 807  74 876  35  83  70 180 163
 729 131 758 887 239 282 877 101 741 678 176 673 256 784 740 615 116 594  54 235 111 228 820 123 869 831 104   2 668  93
 790 119 430 155  79 232 888 642 799 737 836 894 827 773 880 654  75  65 199  57 229  50 785  92 759  36  88  72 609 664
  60 393 227 188  56 144 851  98 813 768  69 680 862 597 828 825  12  28 705  96 109 889 719 641 816 891  53 871 136  90
 890 711 612  21 882 140 138 114 600 695 812 743 861 649 796 165 130 105 221  37 631  24 810  84 779 781 892  58 118  16

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.47599e+06us (= 4475.99ms, 4.47599s)
Wall-clock time (full program): 4.50931e+06us (= 4509.31ms, 4.50931s)
Satisfaction error: 0
Number of search iterations: 953
Number of local moves: 687 (including on plateau: 196)
Number of local minimum: 29 (including on plateau: 21)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 876 397 334 180 747 218 646 837 870 418  99  53  20 792 485 784 326 271 289 546 771 480 161 298 505 228 746 863 168 107
  42 883  40 637 321 243 375 453 773 477 595 311 521 386 791 808 569  54 827 803  68 213 754  28 421 578  10 519 263 752
 877 173 380 826 851   8 706 842 756 848  22 414 862 653 610 869 247 246 225   7 331 320  72 233 864  14  13 282 554 410
 159 760 566 821 755   3 638 315 248 644 346 385   5 875  71 833 183 774 256 834 406 335 232 239 555  26 191 895 690 475
 551 113 351 152  65 625 251 570 216 673 322 671 396 539  97 860  50 659 839 292 819 683 128  70 238 553 307 751 829 845
 630 317 153 187 783 448  66 716 131 735 297 492 761  36 501 332 816 142 164 709 250 727  31 871 844  33 373 681 702 587
 516   9 508 116 692 538 881 220 184 261 591  85 231 629 390 149 663 604 536 699 121 388 123 283 619 461 728 794 649 847
  77 815 667 759 493 318 616 618 198 325 874 361 741 487 793  25 738 181 223 189  57  89 718 708 177 586  63 339 758 522
 846 443 242  39 428 737  37 494 544 265 672 415  16 520 584 506 661 888 304 878  64 122 489  76 724 529 515 892  81 504
  58 350 111 782 889 259 424 502 360 190 423 781  79 528 695 374 102 686 459 891 725  38 136 124 703 411 666 552 478 739
 550 583 209 249 828 275 599 294 589 594 364 440 211 518 309 631 664 561 854  15 157 867 549 407  41 770 422 279 119 567
 574 579 809 273 670 688 452 617 660 779  67 166 163 677 257 507   2  82 175 305 678 729 810 510 241  34 613 840 100 458
 134 623 799 230 319 641 602 139 476 715 306 651 162 813 435 497  95 757 281 540  55 296 689 165  91 720 789 788 454 253
  45 117 865 394 222 290 764 291 120 417 705 537 471 530 607 483 621 787 612 479 171 590 444 467 392 338 593 543 280 340
 777 323 657 160 156 894 775 179 734  21 562 524  23 369  83  98 824 812 258 676 558 838 324 691 227 365 367  88 736 416
 141 378 527 853 409 420 513 450 188  47 462 437 293 419 900 352 859  61  60 714 802 535 399 357 571 572 495 498 470 333
 857 393 186 348 336 391 830 684 719 500 668  46 441 112  75 429 137 563 400 772 743 523 274 469 207 371 707 210 401 723
 431 767 486 545 463 643 432 312  90 481 790 634 701 185 240 603 460  92 614 255 438 722 427 358 430  94 680 101 532 509
 376 635 206 778 356 303 133 308 434 344 531 732 733 766 301 384 650 796 682 109 872 176 330 235 856 473 451 343 144  78
 455 713 276 606 721 547 408 287 381 482  86 696 221 368 694 403 349 805 413 512 436 341 146 896 726 525 110 466 377  69
 887 299 800 712 202 172 155 169 465 899 674 447 457 201 237 608 300 214 278 442 656 835 776 745 143 203 620 132 182 605
 786 548 601  32 464 355 472 224 565 753 533 138 639 302 254 611 893 313 316 106 205 880 627 811 446 200 114 697 260 370
 592 731 372 597 115 858 268 534 831 217 252 768 633  12 345   1 541 362 823 310 347 814 135 286 665 632 645  17 425 387
 140 148  73 267 449 626 588 704 129 126 636 648 642 503 580  49 474 517 145 383 598 154 879 849 284 582 285 490 742 825
  48 749   6 822 354 852 855 711   4 147 402 542 804  51 456 363 150 105 868 404 499 215 882 780 700 511 151 366 615 103
 514 193 669 890 652 130 197 245 576 272 559 329 624 491 236 556 288 270 744  19 609 398 693 433 264 836 806 127 843  52
 798 654 795  43 337 192  93 445 763 412 581 170 748  62 797 526 314 675 426  11 655  87 266 647 850 628  27 577 167 769
 204 679 884 866  35 395  74 841  29  56 484 710 818 817 269  30 244  84 405 698 277 196 897 685 439 730 873 208 389 199
 379  18 785 327 174 886 108 219 662 585  44 359 717 640 622 740 488 658 178 564 262 328 898 600  80 750 468  59 342 575
 195 125 158  24 229 560 557 295 820 832 568 573 382 234 801 104 807 496 861 353 885 596 226 194 212 762 687 118 765  96

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.71483e+07us (= 27148.3ms, 27.1483s)
Wall-clock time (full program): 2.71813e+07us (= 27181.3ms, 27.1813s)
Satisfaction error: 0
Number of search iterations: 10163
Number of local moves: 2667 (including on plateau: 1244)
Number of local minimum: 889 (including on plateau: 160)
Number of resets: 5
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 894 412 133 845 601 847 745 749 140 896 195  40 552  66 122 344  70  79 605 389 765 689  63 855 163 265 890  43 667 391
 814 410 753  96 680  36  93  29 872  57  90 635 531  22 301 249 267 886 709 657 580 571 431 104  71 688 815 726 624 718
 743 703 885 684 848  17 222 895 142 602 329  39 756  97  56 796 572  69 728 193 175 188 107 881 617 496 117 153 862 543
 201 168 181 614 661 237 844 632 375 706 691 866 232 278  94 126 252 644 416 229 162 857 233 829 242 554 843   3 730 615
 202 751 437 213 822 204 541 276 266 846 858  41 170 211  65 665 182  98 592 544 867 755 593 871 281 205 176 198 793 792
 790 835 356 774 330 752 191 125 244 604 230 309 588 305 115 878  82 169 586 533 374 863 360 875 652 485  84 197 114 715
 358 759 161 113 470 735 893 879 319 582 194 340 850 243 679 216   2 538 841 179 178 387 269 567  95 474 642 504 883 165
 158 234 357  16 694 235 228 861 270 723  91 256 311 138  67 833 785 892 506 880 804 824 900 577 209 111 274 354 839  88
 299 508 275 264 811 260 214 207 851 579 255 666 219  76 302 633 725 326 717 873 273 710 507 639 124 739 225 258 701 279
 352 160 148  23 664 597 616 257 692 212 200 268 277  49 700 869 130 379 801 842 239 899 693 137 537 888 489 328 365 704
 337 254 836 367 789 241 336 271 136 722 453 430 794 512 361 419 376 217 397 750 420 134 746 481 247 769 295 399 221 805
 523 263 338 363 440 711 261 304 366 834 620  75 754 250 316 380 426 819 696 146  61 683 613 551 348 359 484 369 334 828
 332  59 300 396 795 362 259 628 716 459 417 147 548 390  86 393 469 788 350 761 865 495 859 783 392 210 335 444 409  68
 434 450 386 373 177 498 462  35 563 856 427 451 283 672 465 403 638 618 282 381 377 491 246 534 372 401 849 471 423 497
 156 215 697 421 139 575 659 882 378 510 477 456 132 443 236 418 897 218 647 345 772 472 435 591 370 553 174 320 351 576
 262 660 565 285 313 499 587 464 467 487 525 224 490 540 529 518 500 884 468 583 415 364   6 287 568 511 154 550 385 425
 294 341 461 514 346 475 448 458 145 411 442 816 775 648 492 626  19 527 102 561 530 368 119 402 682 349 532 245 668 719
 436 455 581 608 333 513 317 734 760 187 515 559  99 557 482 629 457 595 526 432 449 355 135 293 671 640 384 463  27 323
 818 308 452 564 240 479 446 611 539  46 522 503 542 486 636 413 786 433 172 306 578 536   8 318 473 324 502 598 505 371
 454 830 488 441 286 509 584 483 619 297 521 589  72 832 594 528 325 398 860 183 622 428 296 339 606  38 603 519  44 127
 650 600 707  26 121 438 439  51 687 466 621 655 109 520 729  28 690 590  92 695 646 284 766 825 674 569 180   9 623  25
 610 118 675 562 779 116 545 585  18 556 733 101 108 677 778 535 641 705  58 887 131  33 312 120 253 106 662 812 558 741
 546 649  55 288 307 630 643 353 478 424 678 874 342 802 549 290 607 736  60 173 609  74  64 476 738 227 634 773 394  42
 289 408 251 612  31 740  48 838 167 164 429 757 573 758 724 322 763 383 303 631 798 220 493 105 776 280 314 673 110 555
 780 744 407 699 144 714 291   7 782  81 771 658 840 686 708  83  73   1 321 414  62 898 670 713  14  80 762 331 681 100
 171 663 837 808 292 820 516  13 192 570 501 517  50 727 737 721 823 599 445 129  52  20 781 123 877  12 732 653  89  45
 720 112 807 596 184  10 817 189 768   5 656 627 787 248 827  85 777 199  87 395 150 186 810 157 676 651 574 803 190 422
 143 669  77 310 637 315 799 151 731 149  32 645 382 800 742 853 238  53 327 206 388 405 494  37 813 891 560 698 404 566
 702  30 806 831 547 791 128 764  11   4 876 524 460 685 868 208 231 400 196  15 347 141 852  21 226 770 152 767 298 864
  47 747 103 809  34 159 343 784 821 480 166 447 889 797 155  54 712 272 625 203 826 185 654  24 748 870  78 854 223 406

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.64018e+07us (= 16401.8ms, 16.4018s)
Wall-clock time (full program): 1.64351e+07us (= 16435.1ms, 16.4351s)
Satisfaction error: 0
Number of search iterations: 5905
Number of local moves: 1867 (including on plateau: 1047)
Number of local minimum: 512 (including on plateau: 106)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 477 700 513 748 506 760 116 479 201 376 176 498 440 556 795 875 569  30 276 655 825  57 131  82 518 716  64 190 483 703
   8 395 870 728 745 388 128 799 821 143 893 175  40 317 797 337 260 842 321 729 392 336 324 862  15 684 245 841  63  17
 570 829 787 105 258 843  44  93 881 553 635 343 115  61  89 110 867 473 778 654  34 535 125 801 296 528 606 160 879 463
  59 897 141 662  19 598 749 581 358 838 286  51 468 713 560 326 689 695  92 390 133 899  84 876 288 403 180 849 187 444
 239 123  62 809 159 740 707 100 868  37 505  54 200 698 721 349 346 777 277 839 822 746 380 290 705 889  39 142 102 790
  53 869 769 811 210 368 121 168 632  21 671 747 303 119  68 736 315 710 715 436 492 279 274 873 823 114 626 203 756 233
 670 209 367 527 520 192 534 726 526 332 278 624 573 722 470 244 308 289 734  46 683 815  67 896 541 197 731 164 445  85
 874 223 693 173 397 559 481 773 660 389 485 604 344 459 501 432 884 251 247 237 206 571 754   1 146 576 313 871 196 215
 580 430 264  56 752 615 166 122 834 779 155 169 354 253 817 878 690 845 385 853 139 257 411 508 685   6 793 248  99 372
 270 243 250 240 320  66 567 272 174 216 798 235 236 784 840 666 364 634 510 751 140 661 297 708 865 859 531 252 764   2
 419 458  88 471 310 877 499 833 148 329 818 824 544 225  94  25 348 112 857 455 672 293 331 212 826 259 488 287 850 563
 420 490 188 153 410 552 281 429 256  23 744 437 359 861 393 832 109 619 434 519 521  80 637 447 365 858 714 217 361 806
 788 238 768 651 507 489 191 460 333 170 792 462 375 450 282 208 664 224 652 522 753 154 810 335 561 298 592 545 213  28
 448 451 120 401 617 145 254 268 724 406  91 872  43 285 295 587 540 577 653 103 851 214 355 852 723 706 322 536 611 465
 345 415 356 341 892 307 262  77 647  11 400 311 667 106 495 412 895 486 621 720 373 360 837 682 761 422 101 596 265 352
 442 398 886 537 533 452 642 435 648 542 211 691 453 409 177 183 267 466 428 441 218 316 771 330 767  38 377 347 494 616
 309 549 530 578 509 622 138 860  86 353 301 679 407 189 609 639 863 701 574  60 529 539 124 283 300  32 386 800 497 469
 523 394 381 816 668 558 342 433 149 226 363 396 732 319 482 292 161 741 554 630 467 425 516 759 550 643 383  97 493  22
 302 595 894 184 638 378 564 900 402 725 312 709 194 538  75  58   5   9 636 475 711 783 525 163 306 888 232  55 610 649
 439  81 599 557  98 546 631 543 588 418 602 181 583 511 487 640 275 318 135 382 111 504 438 379 263 629 575 743 680 579
 104 136 443  26 770 835 500  79 585 758 291 454 623 241 880 645 514 242 625 414  20 702 669 369  16 515 678 371 532 478
 633 796 222 193 591 480 803 704 675  90 227 325 677 384 113 456 229 178  72  14 586 338 742 593 366 426 681 898 547 476
 659 156 446 775 650 339 864  83 431 733  69 735 167 503  24 641 219 391 646 255 750 266 107 565 147  47 628 844 688 687
 727  71 618 601 261  96 202 607 162 461 551 449 697  42 582 566 362 231  41 730 774 656 305 657 323 782 676 620   7 658
 108 813 766 417 605 249 421 699  48 772 789  74 484 612 719 665 185 314   4 182 130 776 738 195 781 785 150 273 589 172
 718 572 387  87 126 117 762 663 555 830 423 357 464 794 144 151 887 413 584 118 890  45 457  73 205 221 271 854 673 674
 405 692 351 517 228  31 644 299 334 786 712  10 856 812  36 199 328 568 472 737 157 819 608 234 805 496  13 491 158 717
 198 165 404  65 613 686 548 152 230 831 802 827 820 627 427 370 350 424 304 885  33 765 755 269  95  70 804  18 416 562
 846 280 340 696 129  27 757 594 524 855 132 374 694 791 763 186 614 828  52  76 220  78 739 171 294 399 814 866  49 327
 882 847  12 590 474 600 597 284  35 512   3 848 603 134 780 807 408 127 836 207 883 246 204  50 179  29 502 137 808 891

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.32969e+07us (= 23296.9ms, 23.2969s)
Wall-clock time (full program): 2.33297e+07us (= 23329.7ms, 23.3297s)
Satisfaction error: 0
Number of search iterations: 8907
Number of local moves: 2532 (including on plateau: 1195)
Number of local minimum: 772 (including on plateau: 143)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 404 790 891  67 784 196 128 894 888 759  42 281 102 372 537 139 527 546 386 237 135  96 856 210 141 738 628 789 849 103
 199 436 324 202 683 892 745 260 493 126 866 265 890 885 848 158 701  13 183 398 857 156  70 861 218 363 677  53 580 113
 820 614 879 283 676 189 120 622 124 232  88 634 275 566 623 524 624 476 522 872 153 171 399 551 769 792  40 576 221  80
 829  30  48 739 253  41 548 725 427 613 235 101 174 437 204 716 411 710 528 378 420 804 797 547 690 743  18 243 244 862
 700 733 290 670 863 813 261 164  78 640 878  50 117   6  89 513 718 309 387 696 308 373 896 479 881 240 390  46 794 133
 735  29 215 145 367 830  56 800 757 112 498 325 468 247 224 259 870   4 783 707 860 320 464 605 671 756 104  82 699 523
 122 194 620 816 377 347 459 451 659 639 226  72 349 238 361 254 212 709 663 778 824 684  11 568  84 558 822 106 644 668
  34 529 223 111 737 231 227 129 893 168  83 812 170 413 714 898 241 255 835 514 127 162 880 147 883 569 509 831 859 331
 307 781 752 664 542 601 306 380 376 249 394 271 270  12 252 321 140 847 837  71 166 248 833 301 882 713 582 875  65 477
 284 854 553 419 819 581 462 317 679 839 273 165 295 447 777 682 100 332 557 340 486 338 518 489 680 246 134 712  94  43
 747 630 771 379 534 474 408 188 251 179 296 439 327 758 473 685 428 871 590 446 593 274  33 579 662 549 175  97  77 602
 571 282 600 382 311 799 438 267 365 207 412 851 366 615 356 545 730 884 897 694 138 740 541  63  90  60 328 354 506 123
 627 289 348 335  86 587 865 228 520 654  91 530 895 352 233 169 395 125 825 853 900 768 310 723  24 360 392 594 430   7
 483 749 312 422 217 193  92 268 512 285 415 467 396 263 809 807 649 844 137  14 429 782 565 155 211 814 641 643 401 540
 230 184 869 272  23 507 364 163  57 667 539 764 177 840 610 346 385 146 105 647 264 562 345 832 300 631 409 834 689 754
 344 510  76 815 297 632 726 728 564 554 391 435 788   8 154 444 299 495 592 410 591  19 456 424 405 636 490 358 213 661
 798 186 503 182 426 453 485 142 598 381 543 416 319 702 732 298 136 612 336 693 499 805 504 257 406 608 440  99 445 511
 400 525 403 715 250 497 678 575 657  44 609 107 773 736 333 469 288 751 150 487 115 583 234 368 691 567  79 772 143 516
 811 242 795 658 533 633 496 550 351 501 502 818 220 526  49 442 731  39 109 574 441 656 216  74 642 515 577 339  17 458
 475 388 774 660  64 450 629 599 461 463 482 258 535 471 484  27 625 648 201 586 494 397 449 121 448 278 762 876 294 116
 178 544 617 572  36 886 114 203 635  16 369 808 666 532 563 359 245  87 508  47   1 425 846 748 836 481 765 303 573 552
 603 465 480  28 675 375 791 669 850 110 555  59 793 432 665 384 618 452 418 597 877  26  20 706 148  51 460 621 269 318
 343 200  15 655 864 362 326 637 279 802 304 899 334 803 705 455 638 595 173 197 256 341 266 119 646  35 519 302 556 889
  73 645 845 589 130 417 672 152  54 616 727 292 611  21 214 750 724 209 206 695 841  95 588 761   3 286 472 287 719 821
 355 371 585 697 606 144 505 559 374 746 570 785  81 744 208 431 205 315 198  58 852 828 686 478 118 383 674 151 742  66
 225 760  61 763 370 626 681   2  22  25 704 741 770 357 443 801 393 652 858 167 330 729 329 190 176  32 698 868 181 561
 521 172 316  55 342  31 488 434 578 500 721 810 753 766 584 277 734 389  68  85 159 131 187 775 596 423 293 843 776 708
 314 650 180  98 132 185 407 780 322 806 229  38 873 604 219 653 457  10 433 703  37 867 874 323 236  45 711 619 823 887
 692 538 108 720 796 491 350 842 531 827 687 305 262   9 560 239 222 517 192 157 536 280 337 454 817 276 651 149 191 779
 291 195  62 402 722  52 688 787 160 755 786 717 466 353 492 470  69 673 838 414 826 855   5 607 161 767  75  93 421 313

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.7084e+07us (= 27084ms, 27.084s)
Wall-clock time (full program): 2.71171e+07us (= 27117.1ms, 27.1171s)
Satisfaction error: 0
Number of search iterations: 10921
Number of local moves: 3008 (including on plateau: 1584)
Number of local minimum: 1051 (including on plateau: 194)
Number of resets: 5
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 761 140  39 632 725 130 811 664  62 617 159  61 878 834 587 879  60 127  47 489 810  42 822 831 369  31 355 769 328 456
 268 504 357  93 730 700 824  82 682 718 871  58 622 432  66 625 760 237  73 670 339 219 530 338 870 385 703 120 588  51
 859  70 683 869 876 694 441 337 787 374 134  12  49  65 417 426 687 895  53 605 250 894 684 170 164 772 161 900 110  77
 643 106 711 519 654 624 306 212 235 642 108 738 850  13 146 818 892  48 537 282 251   4 644 182 851 720 597 861 218 103
 198 653 543 143 873   7 732 499  52 114 128 518 153  81 547 288 648 874 542 716 629 809 168  38 183 842 844 883 593 217
 875 686 889 148 305 316 298 257 191 627 156 667 759 154 696 751 262 887 600 206 695 202 150 115 748 363 814 315 188 195
 126 570 815 866 187   8 886 169 270 166 277 681 679 214  57 194 808 513 175 827 816 457 559 264 523 763 423 192 427 603
 838 614 638 113 274 714 669   6 141  79 177 497 238 167 181 345 236 267 589 802 560 783 882 568 155 721 604 290 790 577
 139 782 271 295 522 494 324 863  14 263 352 843 896 740 234 510 284 123 527 353 389 881 727 330 225 717 314 307 485 311
 318 297 402 303 333 598 398 551 329 860 661 176 793 269 213 256 331 275 708 575 448 786 853 865 422 285 100 354 377 379
 858 673 319 245 260 788 304   5 852 201 613 739 313 283 791 302 294  40 709 867 160 701 618 396 286 719 409 101 404 265
 322 393 317 321 223 332 320 797 789 552 208 893  44 308 755 289 428 744 334 185 549  35 273 556  25 646 773 429 820 855
 348 699 376 378 477 854  56 336 757 347 446 607 885  78 823 515 224 242 563 395 792 344 358 411 390 365 571 474 375  29
 897 412 278 459 419 848 451 276 204  22 819 343 209 480  75 325 762 447 434 425 832 135 382 806 450 469 327 724 360 445
 541 656 829 418 415 482 293 368  55 129 125 491 380 888 199 421 496 471 452 749 503 109 856 356 455 444 500 526 442 466
  45 460 449 391 514 424 420 501 546 531 538 350 511 437 299 766 433 495 691 472 105 801 453 619  33 408 498 478  76 771
 540 468 439 493 118 847 362 535 492  30 254 554 516 484 807 486 246 361 266 383 400 351 431 458 509 502 479 626 550 528
 463 517 464 247 639 364 481 506 899 157 443 534  83 465 532 512 483 877 476  80  43 487 406 558 662 767 149 596 615  10
 467 323 612 507 190 233 796 891 590 221 435   2 521 116 565  59 505   9 249 340 197 890 524 520 641 884 606 582 388 652
 610  54  96 508 569  27 529 650 309 370 576 599 636 536 579 121 367 158 241 403 122 864 583 647 675 470 633 608 401 574
 371  99 591 671 301 151 702 609 545 561 211 133 764 601 704 640 649 685 666  37 326 111  71 592  87 672 635  50 602 678
  41 586 564 548 595 131 461  17 623 312 117 713 657 566 862 567 689 438 281  91 804  20  46 553 745 136 585 616 573 578
 210 697 178 659  95 186 660  34 342 835 631 572 580 680 255 840 857 655 171 373  74 287  23 414 741 189 742 756 145 634
  97 244 690 813 733 280 462 729 628 768 310 359 397 581  16 784 107 750 688 193 621 706 216  32 207 112 384 674 222 712
 349 258 174 743 692  36 226 637 584 795 800 753 232 239 394 162 230 440 715 774 746 525 777  98 231  92 475 296 366 676
 416 220 410 841  28 620  64 594 407 205 726 405 196 752 137 898 778 736 710 775 144 229 292 785 830  19  86  90 346 776
 707 413 163   1 562 781 173 731 454 737 723 252 142 836 611  63 179 765 833  67 291 734 215 728 722 102   3  94 698 735
 645 821 798 868 392 227 555 203 651 663 812  11 165 544 758  72 259 705 805 747  26  15  85 341  69 693 386 399 668 132
 539 272 248  88 630 849  21 779 180 839 880 754 243 826 372 533 261 104 228 381 794 436  84 665 817  89 240  18 872 473
  24 828 172 335 184 770 490 677 845 780 825 200 124 846 837  68 300 147 152 253 799 658 803 279 430 138 119 387 488 557

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.64302e+07us (= 16430.2ms, 16.4302s)
Wall-clock time (full program): 1.64628e+07us (= 16462.8ms, 16.4628s)
Satisfaction error: 0
Number of search iterations: 5964
Number of local moves: 1806 (including on plateau: 916)
Number of local minimum: 517 (including on plateau: 102)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 285 152 323 545 603 202 265 878 286  42 107 839 559 280 766 318 114 509 760  31 550 585 230 861 421 142 798 590 830 644
 116 350 722 298 236 380 126 221 291 567 144 153 449 417 818 771 465 855 743 532 639  57 749  73 267 880  81 669 860 586
 793 118 231 707   1 748 492 191 239 649 804 325 874 840 462  65 292 235 812 269 507  15 827 443 761 330 810 288 115 272
 149 725 344 113 806 263 283 574 352 696 356  85 240 689 608  82 514 337 525 658 377 731 643 284 408 369 480 629 444 751
 495  58 670 517 659 873 482 562 210 583 295 882 610 862  20 802 257 510 270 691 394 135 621 128 204 336  33 666 502 188
  96 366 598 623 664 289 506 770 842 161 320 143 256 789 357 693 413 315 469 165 554 813 616 682  99 622 447 322 432  93
 314 328 625 395 486 384  52 411 721 499 396 129 397 597 551 123 758 883  27 148 489 164 724  40 832 642 697 400 826 477
 338   7 388 539 829 266 851 293 201 137  83 498 146 262 599 364  39 593 667 819 454 496 780 530 549 864 796 663 219 245
 894 340  89 209 540   8 491 835  90 580 446 854 777 387 535 800  68 630 618 685 182 302 159 605 805 341 282 581 212 170
 299 335 155 448 505 416 675 587 613 487 641  70 321 423 875 640 848  28 317 251 460 171 699 787 428 193 893 222 271 457
 557 857 176 897 430 626  63 453 414 312 437 490 141 376  46 671 543 895 468 754 711  84 132 732 420 631 455 497   6 241
 792 870 362 105 192  79 790 268  18 523 817 881 508 636 560  55 419 553 890 259 130 151 185 316 772 119 136 795 485 849
 747 837 333 332 614 117  44 331 207 739 594 109 858 844 360 494 407 242 279 534 276 710 891 190 576 695 124 334 194 503
 520 672 102 879  88 564 542 828 296 470 767  77 404 692 518 836 290   5 375 180 706 305 120 753 383 690 300 464 162 527
 680 260 478 418 676  36 353 415 147  22 434  48 868  21 349 522 601 456 750 774 611 573 390 715 278 463 571 479 627 500
 515 205 208 647 254 655 248 422 617 412 595 358 886 373 301 512 558  51 537 730 729 197 329 156 220 372 633 638 646 511
 852 526 374 648 157 683 313 737 139 405 799   3 815 277 425 409 392 445 223 606 694 652 584  91 189 853 297 232  14 681
 249 577 588  74 781 225 615 103 841 728 391 765 442 426 227 820 726 524  17 125 217  98 548 735 834 258 484 565 483  49
 354  47 450 713 481 686 635 304 167 607 488 740  26 370 363 203 211 177 773 200  72 809 632 531  38 824 884 856 702 172
 308 900 591  86  45 762 776  71 429  61 892 738  60  97 779 206 589 106 677 801 100 885  69 436  66 887 657 846 247 348
 701  35  78 237 452 660 717 399 756  43 342 845 604 472 243 140 778 365 233 513 811 406 821 389 253 281 744  13 709 475
 757 493 816 620 763 700 150 440 275 519 173 473 163 782 393 476  24  29 433 238 651 662 783 234 888 311  80 160 306 723
 769 555  53 273 734 307 216 533 896 768 898 838   9 187 536 572 435 287 346 326 712 154 196 876 310  75 246 624 653 131
 379 822 609 541  87 850  62 797 439 138 309 410 568 224  94 528 619 752 229 863 110 181   2 867 214 600 466 183 703 869
 184 673 759 382 678 596 714 823 294 808 145   4 546 226 592 538  41 741  76 582 174 871  12 859 889  67 122 252 733 134
 199 101 843 459 424 186 361 403 727 343 351 877 544 516 158 339 684 441 371 261 650 679 451  11 708 121 688 570 575 474
 175 347 825 784 736 367 264 628 755 471 378 324 355  64 461 398 637 807 814 327 198 213 386  54 645 228  34 579 698 563
 866 381 319 108 179 791 788 169 872 746 504 467  23 656 556 111 578 195 127 529 687 847 215 438 561 501 255  92 552 402
  95 803 794 133 359  10 742  19 661 833 431 745 665 427 244 458 668 831 168 634 566 704 705  25 112 218 368 274  59 764
  37 775 612 785  56 786 899  50 720 166 178 345 401 303 719 569 547 718 521  30 104 865  16 674 385 602 654  32 250 716

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.40435e+07us (= 44043.5ms, 44.0435s)
Wall-clock time (full program): 4.40775e+07us (= 44077.5ms, 44.0775s)
Satisfaction error: 0
Number of search iterations: 16937
Number of local moves: 4047 (including on plateau: 2079)
Number of local minimum: 1639 (including on plateau: 253)
Number of resets: 9
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 385 360 624  86 338 277 850 756 610 417 507 189 858 393 479 851 542 200 381  83 461  54 335 115 873 791 900 435 252 113
 302 607 157 706 899 767 796 567 744 127 243 885  84 190 191  35 135 211  16 888 504 205 743 709 134 754 183 738 104 891
 630 593 854  93 631 841  32  50 525 326 768 297 328 833 394 727 100 517 289 804 123 755 830 415 261 596 165  62 231 445
 194 591 107 881 146 849 185 895 785 874 466  76 512 151 144 187 815 486 271 270  10  53 863 395 890 310 590 721 723  75
 101 426 558 682 808 303 179 612 735 698 680 209 238 217 579 779 795 812 133 470 496 275 276 588  49 142 167 296 497 715
  99 348 780 742 177 272 573 228 247 793 441 642 407 683 334 253  67 362 403 580 831 563 109 724 410 285 653 145 685 679
 233 708  92  15 585 411 608 229  40 543 423 896  68 840  19 401 399 647 606 621 304 897 702 359 260 242 264 805 894 404
 870 626 309 431 254 240 649 761 460 355 552 298 806 169 178  20 565 319 634 871 322 749 734 548 347  33 614 106 521 174
 195 251 775 770 861 305 516 283  31 236  61 220 327 377 514 317 318 625 554 468 828 722 643  65 819 598 353 695  95 693
 769 778 182 152 758 428 429 562 171 367 281 540 456 452 584 448 561 527 510 459 478   7  91 332 845   2 262 825 792 467
 827 464 163 757  90 257 686 700 490 670  24 681 450  36  39 821 447 731 771 672  55 222 648 847  52 617 352  71 667 208
 111  66 495 566 137 835  14 391 638 325 280 732 103 532 777 589 583 794 246 170  81 803 476  89 164 763 673 705 855 522
 227 773 129 371 837 373  88 864 671 216 547 859  82 269 219 798 225 576 511 389 155 361 406 747 365 383 652 539 730 153
  58 136 603 475 363 551 249 629 484 408 427 718 582 659 728 824 345 159 879 256 822 646   5 267 599 550 287 458 300  48
 710 865 292 416 639 537 726 224  77 405 569 140 545 184 627 384  97 559 172 226 641 488 364 156 772 664 557 889 176 414
 868 214 707 832 284 402 248  57 677 893 315 690 524 526 265 412 853  28 313   3 892 199 203 518 374 201 876  46 622 473
 632  87 108 122 480 422 308 694 234 578 444 312  23 688 139  17 704 651 443 740 884 295 800 839 124 279 594 751 370 753
 369 173 424 492 218 162 489 613 541 116 533 553 878 438 661 689 396 602 635 515 206 380 616 204  94 781 237 703  47 750
 783 676 340 356 158 499 762   8 531 844 474 392 346 655 202 674 568 699  42 494 333 128 241 132 436 600 666 462 491 523
 736 748 654 118 130 166 382 147 286 457 597 716 782 811 439 433 766 451  45 875 587 788 390  26 154 148 375 508  13 787
 105 809 834 741 520 544 498 665 421 886 342 213 188 759 615 420 455 239  96 161  79 786 117 692 351 592 663 250 181 293
 386 149 657 826 316 712 131  72 880 299 866   9 442 337 760 339 274  51 883 571 555 150 119 483 887 662 235  70 860 534
  41 595 717 397 398 418 765 877 729 311 291 432 294 114 409 125 656 212 379 574 869 477 581 500 329 799  11 560 306 349
 797  60 193  27 636 764 357 570 481 143 611 196  56 820 650 640 258 215 434 440 321 687 644 697 358 530 848 519 331 232
 330 324 604 852 529  59  25 378 320 678 691 341 711 197 816 564 482 126 430 485 746  80 701 268 301 449 575 502 314 637
 857 446 549 503 223 141 307 354 538 784 425  98 872 259 823 221 601 660 577  73  74 618 198 867 535  22  43 350 668 829
 619   6 675 368 255 138 836 620 244  34 343 465 469 505 628 528 207 818 898  38 472 121 669 737 493 120 645 278 572 714
 733 419 696  21 282 790 810 487 336 290 501 186 509 454 471 175  63 372 633 437 463 739 719 856 556 102 720 263 388  44
 536 400  69 605 789 506 210 192 323  29  37 846 713 623 813 843 513 802 586 609  85 814   4 180 801 658 245 376  78 230
  12 817 168 112 774 546 807  30 266 413 776 684 862 344  18   1 725  64 745 273 838 453 288 160 882 842 110 387 752 366

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.14428e+07us (= 51442.8ms, 51.4428s)
Wall-clock time (full program): 5.14758e+07us (= 51475.8ms, 51.4758s)
Satisfaction error: 0
Number of search iterations: 20639
Number of local moves: 4635 (including on plateau: 2160)
Number of local minimum: 1962 (including on plateau: 288)
Number of resets: 11
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 793 152 791 408 193 822 114 756 474   4 858 753 136  66 128 719 763 740 178 817  59 355 323 767 213  40  68 755 872 398
 165 147 345 838 801 821 780 746  42 100 862 360 559 204 782 735 459 866  35 816 590 156  80 269  13 776 404 731   2  31
 236 758  23 813 729 786 795 673 201 190 810 151 212  11  16 601 692 787 181 744 254 711 222 441 182 771  92  20 708 705
 649 724 192   7 230 718 833 110 357   6 788 774 130  12 687 797 164 743 829 873 173 697  61 824  89  10  48 647 605 738
  78 851  15 631  27 794 805 839 158  45 728 643  83  77 620 856 270 760 131 789 239 679  72 674 171 161 726 139 769 685
 268 766 272   3 765   9 841 668 616 115 282 206  41 581 188 840 651 676 626 761  88 255 407 167   5 646 700 818 597 657
 302 704 207 662 702 768 733 825 373   8 562  96 218 111 545 568 714 623 691 785  44  33 159  25  29 773 695 827 712  21
 157 667 655 563 703  76 752  26 103 283 498 521  22 177 186 654 663 636  36 587 502 820  19 671 342 642 737 618 604 595
  55 693 117 689 784 555 552 510 315 146 629  98  37 294 759 588 716 598 675 518  18  39 243  81 678 572 684 701 538 633
 119 680 634 698 637 548 454 640 278 320 120 366 625 427 666 574  91 696 603 615  74 470 203 388 713 641  30 513 613  79
 108 617  17 542 656 681 611 553 541 344 645  84 569  85 757 351 686 531 614  50 439 410 234 150 488 532 751 435 579 455
 586 511 175 516 452 526 530 610 506 185 564 560 465 434 592 619   1 473  69 551 665 436 296 184 567 522 528 346 609 437
 259 442 472 589 445 607 479 393 431 309 596 514 524 333 383 547 214 210 422 489 520 583 384 481 447 503 608 492 453 386
 456 501 450 622 682 591 423 630  60 381 517 556 428 461 533 466 395 571 469  34 496 664 266 169 509 558 331 336 390 570
 584 457 495 585 507 482 419 438 153 112 449 448 580 430 549 399 523 539 658 353 446 624 477  64 566 125 536 444 546 527
 168 403 380 504 519 426 397 602 458 573 460 499 606 382 772 285 433 463 500 379 417 475 484 368 635 371 554 392 347 263
 491 348 534 335 413 418 869 878 378 565 451 318 424 883 525 365 200 535 300 672 414 370 409 299 396 249 515 334 329 298
 292 376 293 405 354 895 476 402 529 742 311 286 899 490 341 332 537 256 349 411 369 600 727 324 306 362 497 471 400 483
 375 361 257 389 468 420 343 485 316 850 328 879 391 848 352 432 575 415 322 209 860 364 577 557 644 287 262 297 425 227
 612 198 421 443 205 277 350 314 690 544 652 809 211 593 288 739 861 412 494 123 290 321 778 467 807 359 304 387 325 241
 792 195 868 237 327 275 187 162 843 887 245 508 874 864 172 505 632 289 191 132 815 116 677 486 859 340 265 118 317 337
 747 305 258 307 308 113 238  47 894 650 312 273 406 715 260  82 837 216 330 372 875 852 790 853 487 196 274 385 886 247
 775 440 250 356  90  99 137 891 770 870 339 279 867 764  54 217 844 251 865 280 252 835 291 871 303 367 160 135 122 741
 722 229 806 253 129 228 888 194 246 669  87 779 721 830 267 310 197 326 179 478 808 846 863 783 834 166 223 138  95 221
 802 248 550  63  75 854  70 124 699 748 881 338 750 233 219 264 313 394 855 295 377 220 594 660 885 800 149 180  56 819
 781 154 639 240 900 271  93 226 804 754  97 734 823 638 148 319 127 284 836 101 416 235 842 749 799 709 276 133 242 145
 621 261 831 880 155 121  62  43 777 762  24 576 599 732 889 170 174  65 126 401 882 105 683 429 143 363 897 832 176 736
 627 892 796  73 224 104 141 659 281 849 232 244 109 480 202  28 543  71 648 199 812  52 826 358 231 688 540 845 877 884
 670 301 876 720 893 163  49  14 561 706 102 140 512 707 745 107 208  38 578 628 493 462 717 582 464 803 814 189 215  58
 225 134 896 144 142  67  94  57 661 798  86 723 694 653 890  46  32  51 725  53 828 730 811 374 710 183 847 857 106 898

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.95373e+06us (= 4953.73ms, 4.95373s)
Wall-clock time (full program): 4.98696e+06us (= 4986.96ms, 4.98696s)
Satisfaction error: 0
Number of search iterations: 1184
Number of local moves: 740 (including on plateau: 217)
Number of local minimum: 60 (including on plateau: 32)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 894 183 118 681 792 783 184 294  51 566   2 257 895 878 693 131 115 571 687 611  38 866 144 483 160 813 246 627  64 688
 768 708  54  31 839 737 582 746  33  86 116 700 554 849 412 138  77 600 598 620 651 530  62 333  72  93 868 686 157 815
 834  68  69 204 547 653 254 750  53 292 879 395 883 132  35 604 199 555 728  92 859 100 654 820 752 884 171 857  82 110
  84  74  39 381 605 690 840 812  58 644 710 146 848 591 575 139  37 893 585 129   6 103 520 832 281 888 881 203  50 871
 133 245 278 151 650 330 158 680 698 153 675 516 886 831 731 226 273 787 398 290 872 403 140 513 808 469 223 525 120 353
 150 624 197 794 821 896 468 837 519 228 796 828 304 262 854 188 553 428 312  60 124 205 284 747 285 113 176 889  55 518
 670 593 235 291 307 543 510 394 170 130 774 308 562 864 842 295 283 509 200 867 427 161 324 890 231 579 730 533  19 274
 493 114 224 414 829 771 317 860 208  79 485 201 396 631 841 128 106 892 805 167 626 297 900 239 850 300 309 709  44 280
 177 178 117 692 315 442 570 482 858 288 862 827 222 298 791 111 179 877 870 797 155 550 221 706 270 313 172 744 163 268
 422 329 844 416 316 619 856 775 898 899 876 384 123 365 347 164 376 445 406  17 457 293 260 573 420 355 436 452 258 134
 159 390 401 512 613 430  96 799 327 243 523 776 338 461 389 392 173 845 616 440 676 755 432 689 564 166 339 393 336 242
 256 341 572 714 565 745  80 456 729 299 639 467 501 342 807 206 400 359 863 323 287 196 325 610 388 286 399 349 334 677
 371 852 531 305 259 721 466 724 779 320 601 352 502 366 551 296 322 453 449 377 409 318 328  28 499 448 497 230 798 363
 505 180 215 244 532 608 481 272 847 408 219 382 489 535 704 210 861 379 500 340 421 588 544 475 540 404 346 419 617 250
 372 306 364 253 443 433 778 263 418 504 494 463 480 438 465 673 345 561 478 152  42 356 781 633 413 645 425 563 495 479
 417 640 450 725 477 542 431 348   7 357 249 405 154 344 397 474 460 521 506 522 137 875  66 526 375 486 545 423 782 874
 615 470 459 503 374   3 289  94 630 490 464 411 441 455 373 429 434 880 606 435 383 484 590 369 437 492 514 451 277 663
 743 472 261 788 488 498  21 385 646 602 612 578 213 237 683 558 800 192 454 302 528 407  23 142 410 629 471 538 491 343
 255 496 742  36 527 541  99 233 669 507 337 218 642 552   1 643 584 332 310 537 391 462 664 628 104 635 515 549 658 648
 362  15 674 569 444 722 524 723   9 136 370 476 303 697 672 560 711  78 712  46 574 661 618  27 380 806 335 581 717  13
 657 275 539 607 517  20 623 311  76  98 105 596 666 641  12 732 786  87 185 682 761 301 217 191 694 583 511 621 736 685
 790 536 811  34 378 227 567 269 696 659  61   5 112  63 108 595 589  67 195 897 638  45 622 740 599 652 603 662 766 529
 248 668 741 577 594 247 625 679 655  65 187 749 122  25 402 758 695  91 165 439  88 660  32 266 587 739 793 211 637 770
 473 713 665 101 780 194  57 175 649 568  89 836  59 702  85 720 707 198 212 795 726 546 216 446 264 241 647 162 762 727
 360 826 756 193   8 174 548 609  24 817 126 326 156  95 636 753 678 765 534 760 354 759 716 182 350 168 202 314 592 734
 386 802 557 614 234 121 851 102 487 873 447 186 703 367 190 632 773  22 238 715 576 634 586 559 667  48 135  40 738 232
 426 699 824 181  14 109 754 125 684 818  16 777 207 597 148 358 853 225 691 733 763 719 735 282  18 458 319   4 835 143
 705 823 220 825  97 267 415 147 810 671 169  29 887  41 189 816 119 368  90 265  81 843 869 236 785  11 855 424 757 701
 764  73 789 833  43 209 819  30 271 885 865 772  83 580 251 748 145 214  70 718 809  47 751  71 508 801 803 127 361  75
  26 822 769 846 107 240 252 141 556 830 767 149 784 276 331 838 882 321  52 387 656 351 891 279 804  10  49 229 814  56

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.24645e+07us (= 12464.5ms, 12.4645s)
Wall-clock time (full program): 1.24979e+07us (= 12497.9ms, 12.4979s)
Satisfaction error: 0
Number of search iterations: 4158
Number of local moves: 1467 (including on plateau: 561)
Number of local minimum: 389 (including on plateau: 57)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 646 673  74 287 750 149 641 444 436 894 154 169 127 165 180 117  33 753 324 774 678  88 883 467  76 783 843 813 548 546
 300 892 802 146 491 745 773 322 859 705 476  93 267 363 160 112 494  91 560 801 397 109 751 758 113 275 711  80  22 847
 171 611 667  55 204 691 310 861 780 785 234 858 655 589  73 245 166  67 640 658 257 642 631 173 768 174 159 798 108 485
 401 616 766 896 690 452 712 209 603 142 376 747 170 818 315 454  50 103 163 155 167 137 865 461 509 421 542  87 890 598
 613  29 626  51 451 263 698 328 490 229 854  97 820 763 216   3 804 446 325 664 829 793  10 143 685 211  21 838 862 353
 172 391 102 124 876 285 307 177 697 872 301 541 743 680 318 281 757 885 590 392 344 609  56 230 842  35 399 194 668 647
 830 565 213 713 186 119 608 781 189 741 338 702  72 136 161 718 652  65 825 824 816 405 738 312 202 717 203 145 347 192
 807 674 586 256 841 557  14 148 880 662 797  20 423 385  77 311 295 821 891 193 719 796 378 106 630 665 219  52  75 237
 761 305 503 351 330 833 710 222 653 294 129 814 132   8 834 447  95  63 649 623 403 677 313 326 370 650 734 306 683 297
 220 247 803 371 752 242 568 482 111 559 248 212 550 284 250 537 888 881 725 823 786 335 518 116 183 625 489 236 228 246
 140 727 271 398 527 846 291 269 895 867 496 648 465 532 241 535 356 341 282 596 358 262  53 374 264 584 551 317 621 408
 602 268 686 547 210 416 849 182 424 361 840 633 101 381 279 198 592 290 499 561 791 723 348 379 806  81 151 327 372 618
 152 826 299 409  60 864 386 128 255 364 828 190 866   5 887 396 176 296 406 767 619 863 349 359 144 533 395 390 811 492
 687 555  30 333 856 779 681 414 150 258 332 709 422 389 524 530 624 243 523   4 769 323 787  49 345 632 577 125 302 563
 393 278 531 412 354 580 418 448 552  82 478 581 435 449 450 346 362 484 434 339 208 433 404 543 855 576 483 410 420 777
 162 427 383 440 463 417 501 899 438 879 694 426 522 352 455 493 153 724 373  83 283 513 507 375 466 221 540 517 366 443
 238 495 425 388 525 511 233 402 413 178 720 453  99 645 809  12 574 457 749 599 636 504 553 514 519 429 303 468 432 232
 428  47 714 707 606 470 456 515 445  27  66 254 107 556 415 506 733 744 812 329 360 512 510 288 479 644 643  85 487 570
 770  24 141 529 400 893 226 578 627 601 706   9 567 569 635 737 708 126  28 526 587  34   6 612 411 157 538 839 617 314
 168  54 100 573 218 808 304 536 340 205  32 639 728  92 437 575 637 564 520  46 130 634 848 579 276 875 488 638 614 857
 458  58 464 629 605  78  94 676 502 201 214 607 588 682 545 622 703 582  86 289  17 695 760 286 860 200 657 199 604 554
 593   7 832 672  96 355 197 845  26 886  69  84 566 815 656 716 544 133 195 253 147 462 308 882 368 790 851 730 121 316
  18 696 684 239 156  13 508 394  36 320 669 671 675 874 343 704 115  71  68 227 778 164 572 762 792 591 735 597 377 666
 721 475 615  25 898 277 473 610 659 407 259 742 114 732 474 486 357 337 661 179 334 481 274  70 331 196  44 873 663 748
 191 736  15 827 594  39 670 731 272  23 836 123 595  57 871 477 309 562 469 105 660 571 293 794 131 215 500 868 701 280
 817 755 369 138 431 184 740 679  64 784 319  89 799 835 134 206 699 342 104 292 430 118 380 788 498 805 746 480 217 273
 726 240 756 765 439 231 521  98 175 739 441 252 260 754 223 497 837 775 251 365 897 382 700 884 583 298   1 321  62  42
 350 852 878 722  59 442 336 782 688 261 188 759 651  11 795 628  43 853  48 528  16 158  31 244 600 459  40 471 800 822
 265 870  45 693 181 187 249 120 384 110 692 549 771 387 889 776 620 900 505 689  38 534 419 764 185  19 585 539 460  90
 715 122 135 819 266 789  41 235 472  79 729 844 225 207 869 850 139 516 810 831  61 558 270 877 224 654 367 772  37   2

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.40234e+07us (= 24023.4ms, 24.0234s)
Wall-clock time (full program): 2.40567e+07us (= 24056.7ms, 24.0567s)
Satisfaction error: 0
Number of search iterations: 9006
Number of local moves: 2801 (including on plateau: 1457)
Number of local minimum: 764 (including on plateau: 175)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 314 536  87 888 335  98 216 893 490 668 423 539 605 249 602 182  57 433  60 409 734 900 584 176 763 797 229 716  31 501
 375 703 856 157  16  56 427 684 773 549  80 879 425 674 736 857 559 727 329  97 558 766  43  70 257 396 830 225 266 145
 188 865 480 263 190 708 832 465 106 301 347 607 640 248 280 564  55 523 203 477 518 840   3 198 644 681 577 262 643 807
 526 310 757 819 835 239 552 675 551 199 795  73 298 553 183 119 180  10 863 642 472  47 868 286  68 403 690 817 578 107
 744 519 676 207 319  50 312 141 665 534 233 805 597 250 759 181 591 679 730 678 481 307  14 488 843 685 138 686 140  63
 224 206 666 397 855 384 322 361 175 330 497 259 821 652 299 449 779 762 365 859 160 393 201 884 161 135 354 209 782 574
 386 205 367 146 701 882 296  33 295 860 127 555 851 749  92 692 136 731 338  93 770 707 321 891 130 177 728 243 689 324
 193 814 554 167 281 756  89 660 586 226 169 822 746 550 508 294 656 126 271 368 369 772 529 165 408 680 813 457 316 170
 618 410 231 570 399 543  61 582 218 525 567 524  28 810 825 546  18 128 897 663 487 688 834 289  65 687  91 337 514 360
 401 899 836 824 896 741 499 611 151 195   4 173 186  34 451 426 389 256 538 252 163 430 775 598 413 588 761 292 221 512
 630 108 743 862 261 290 268 622 374  32 300 103 799 609 786  82 456 469 634 414  45 327 804 274 771 440  36 745 758 473
 823 232 463 516 842 443 464 309 197 600 715 806 489 149 890 378 284 498 304 105 496 595 540   7 242 459 677 581 194 217
 590 109 462 381 415 565 654 500 123 422 428  49 192 117  19 760 504 709 700 479 669  52 635 820 697 875 184 320 510 575
  85  74 240 560 645 803 332 227 711 405 579 873 573 776  64 340 661 833 571 311 735 150 326 402 532 125 435  21 768 358
 801 376 522 569 878 352 816   2 230 241 777 455 411 726 889 620 164 382 113  81 866 466  25  72 694 366  40 120 566 895
 371 191 513 331 535 877 285 780 276 318 458 303 390 750 351 260 491 752 236 874 377  69 557 850 277 187 737 702 313 104
 683 101 631 404  62 475 740 545 717 429 407 246 704   1 416 619 158 116 627  53 828 732 220 547 721 124 171 854 691 493
 506 633 258 507  38 383 839  41 696 847 154 789 460 293 346 562 815 705 424  67  66 421 672 219   9 533 841 453 446 492
 515 237 450 228 341 881 826  12 808 845 444 505 342 722 282  90 748 162  23 137 541 432 792 601 767 542 100 520  39 583
 357 363 698 599 142  84 355 468  83 474 710 695 179   5 667 420 712 461 751 887  96 114 159 774 837 441 624 272 561 527
 323 606 121 849 898  27 725 892 339 720 693 152 234 288 647 521   6 629 628 739 129 325 112 269 648 317 802 278  35 563
  58 637  26 245 139 568 831 592  11 395 798 509 251 436 718 438 616 168 870 787 144 615 738 729  86 212 794 398 658  48
 785 829 517 511 445 482 406  59 783 638 818 344 148 655 719 264 238 528 172  42 392 222  15 200 871 387 353 706 110 876
 185  99 247 210 419 769 531 604 742 587  75 204 699 880  88 626 621 208 215 270 848 894  95 886 189 651  24 572 713 364
 784 670  37  54 447  94 308 476 133 467 388 380 853 811 471 437 632  78 869 623  22 791 790 448  71 650 350 196 800 385
 306 662 287 213 334 885 373 254 754  51 861  29  20 336 166 858 452 753 283 733 495 348 714 391 235 134 867 111 846 764
 747 434 593 827 211 223 417 755 838 636 589 255 131  79 585 153 530  13 315 412 370 610 484 349 664 657 544 359 379 356
 253 502 244 291 580 418 143 400 724 132 343 156 612 793  17 646 639  46 659 844 809 265 649  76 275 608 147 796 576 872
 302 682 483 653 431 362 494   8 178 333 439 614 617 202 485 594 603 778 372 478 279 122 345 883 454 548 273 781 328 394
 442 503 470 267 625  77 102 864 788 556 297 812 214 118 174 537 765 852 155 641 596 115 671 673 723  30 305 486  44 613

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.06628e+07us (= 50662.8ms, 50.6628s)
Wall-clock time (full program): 5.0696e+07us (= 50696ms, 50.696s)
Satisfaction error: 0
Number of search iterations: 20659
Number of local moves: 4813 (including on plateau: 2409)
Number of local minimum: 2021 (including on plateau: 314)
Number of resets: 11
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 693 833 202 264 763 628 734 637 774 711 537 261 371 864  64  56  12 440 695  65 328 805 789 180  48  28 466 649 117 501
 873 375 890 830 444 787 785 661  80 738  63 184 480 713 122  53  82 886  97 274 704 282 495 858  39 151 386 783 369  31
 800 824 241 259 399 462 812   3 790 224 223 102 594 729 616 163 225 586 851 719 573 380 852 522 252 171 888  69 160  26
 551 754 485 262 600  40 114  73 639 279 128 617 132 712 253 633 413 473  58 212 793 766 640 533 654 294 678 846 434 449
 190 727 215 618 173 333 834 116 655 579 407 162 121 412 397 141 512 539 565 638 435 542 840 651 773  87 156 607 355 735
 760  13 136 548 370 514  88 796 614 481 181 220 502 521  60 730 880 311 839  15  30 778 673 898 696 204 432 753 339 133
 176 377 100 295 155 146 314  59 248 672 222 416  72 770 219 209 623 685 576 609 665 218 515 878 663 580 733 566 893 861
 249 147 174 723 199 340 845 636 234 599 335 447 257 817 312 360 139 769 630 877 226 144 438 348 302 172 420 687 895 794
 341 344 510 154 703  70 166 318 676 486 666 856 182 185 705 276 130 835 771 681 324 120 140 862  45 598 247 346 897 881
 237 111  46 870 535 425  99 106 431 536 500 823 301 419 411 148 758 894 287 353 899 868 255 283 142 836 819 494 240 389
 337 281 450 332 642 558 698 258 414 265 742 747  16 293 827 313 772 581 423 483 555  23 797 105 323  47 326 451 664 792
 167 554 788 280   7 385 656 256  92 682 297 305 336 351  36 443 378 186 810 321 603 530 683 841 837 310  17 801 875 688
 768 694 626 759 270 422 488 357 285 680  61 126 578 857 807 492 437 246 505 338 739 268 885 391 430  74  79 272 402 179
 590 621 436 236 511 527 847 393 309 352 374 345 267 239 584 327 292  62 307 187 829 775 441 453 748 418 403 482 395 765
 524 491 400 556 433 767 736 364 424 394 622 842 464 137  19 250 865 390 604 254 288 316 231 557 686 507 583 534 183  94
 243 838 478 519 221 577 381 457 426 479 647 568 365 553 291 867 504 850 487 427 290 461 409 260 469 445 169 804  29   1
 552 691  10 724  20 210 192 567 755 615 516 528 113 203 496 320 459 498 373 350 168 429 611 286 667 585 629 662 415 871
 401 165 448 472 456 489 245 467 544 574 289 538 388 561 303 446 706 892 455 660  75 597 452 818 206 610 322 484  98 354
 471 814 593 562 359 648 493  18 108 658 490 569 702 588 744 559 714  42 475  55  34 529 383 127 104 632 465 781 499 299
 273 109 325 657 701  83 508 813 408 188 242 476 625 368 550 513 595 563 549 613 396 684 843 161 379 518 175 732 304 164
 564 652 650 200 315 197  11 722 587 891 546 134 746   6 802 503 347 887 517 543 342 571 541 107 460 334  22  38 606 674
 497 670 669  32 362 699 372 405 776 157 764 737 589 855 387 596   5  77  51 624   9 233 196 718 178 751 631 158 757 560
 470 398 707 643 591 848 263   2 366  44 608 523 876 832 129 619 349 229 762 721  33 653 277  76 149 700 675   8 115 849
 782  14 811 572 725 720  89 715 731 269 150 110 634 125 582 635 532  54 602 780 743 382  95  35 205 463  21 177 866 896
  41  52 820 124 644 645 230 816 266 575 570  90 697  84 740 822 854 213  50 547 717 627  93 709 784 809 367  27 343 159
 671 170 330 410 806 329 194 786  66  96 825 659 741 668 526 745 217 138 235 882 750  43  37  49 826 646 689 798 112  71
 135 131 101 477 214 284 859 853 620 458 189 641 692  25 844 612 152 244 384 306 815 677 296 392 821 728 317  24 679 545
 803 592 879 251 900 376 308 238 708 208 889 232 193 356 520 442 509 216 228 143 404 428 145 605 716 756 874 298 207  91
 278 363 872 525 198 779 271 795 421 540 601 531 690 119 300 884 191 275 211  86 417  67 406 808 474 860 749 103 506 195
  78 710 123 361 799 227 883 828  68  85 831 726 791 153 869 358 863 454 118 752 331 319  57   4 439 201 777  81 761 468

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.89265e+07us (= 18926.5ms, 18.9265s)
Wall-clock time (full program): 1.89597e+07us (= 18959.7ms, 18.9597s)
Satisfaction error: 0
Number of search iterations: 6971
Number of local moves: 1722 (including on plateau: 780)
Number of local minimum: 651 (including on plateau: 99)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  10 394 194 823 645 780 885 493 267 127 220 264 399 442 831 117  69 256  45 867 406 770  35 239  58 870 462 898 829 820
 259 896 835 734 207 288 895  20 312 689 741 248  25  18 826 111 362 189  16 656 769 796 854 195 775 832 849  13  27  79
 135 807  66 756 131 122 856 130 790  44  40 295  94  61 778 232 750 695 714 721 751 549 303  47 293 722 792 605 881 355
 432 852 761  72  39 783 827 342 749   7 339  78 709  21 602 106  55 704  19   2 627 688 279 819 710 271 585 465 830 742
 317 817 733 812   9 684 707 251 844 604 308 509   3 690 320 311  12 520 301 815  37 757 126 231 360 400 587 565 632 253
 188 789 358 628  86 891 703 167 696  59  17 855 162  33 699  14 737 115 453 754 415  83 173 614 802 766 753 824 676   4
 671 273 762 572 270 229  93 104 744 735 382  77 103 746 620 175 191 752  34 535 623 498  22 245 723 422 774 768 729 643
 215 196 593 804 165 712 199 452 702   1  95 218 337 668 718 255 767 200 323 554  65 666 198 626 525 818 411 662 698 672
 166 649 269 658 594 765 221  82 637 119 283  88 630 664 563  38 692 139 532 471 496  80 141 640 725 730 529 545 706 663
 168 673 726 566 459 398 638 786 564  89 153  51 837 608 485  23 745 560 617 192 136 571 150 680 250   6 579 601 760 444
 211 144 441 634 806 492 586 108 694 616 606 203 495 390 383 243 274 423 864 177 482  54 800 497 187 510 318 650 701 526
 155 599 652 636 542 583  41 282 828 582 681 455 574 489 576 534 639 157 346 537  99 619 180 590  29 163 518 511 396 522
 486 487 607 449 456 333 480 228 569 506 430 439 466 624 314 776 395   5 631 437 531 555 128 334 329 328 536 507 438 711
 570 454 540 478 461 543  32 387 392 183 364 197 581 457 413 502 488 319 402 622 615 365 481 538 505 332 567 600 577 550
 519 284 512 539 523 642 463 428 138 515 305 479 561 434 348 533 418 613 233 494 669 344 309 472 421 367 378 499 667 408
 299 316 433 591 618 451 469 517  24 425 670 140 508 336 300 446 306 285 521 884 419 431 793 524 578 558 621 325 357 370
 356 705 385 366 500 450 186 603 527 556 427 464 112 417 389 501 353 412 611 588 424 592 580 368 573 384 292 369 474 551
 675 222 386 448 341  92 391 544 280 589 717 859 728 338 426 352 393 547 414  53 164 839 291 552 379 473 853 458 304 407
 404 307 443 374 865 359 739 748 483  56 296 850 388 810  48 779 202 470 226 205 813 321 491 241 822 268 445 381 655  26
 514 322 420 372 900 331 758 447 262 403 873 878 376 214 693 429 298 302 629 361 808 405  64 347  50 219 659 503 436 242
 821 700 371 206 246  42 410 530 172 894 843 687 677 204 327 708 475 265 657 272 377 313 886 665 254 170 596 373 184 190
  87 811 227  36 477 575 349 788 210 289 234 490  57 287 350 845 261 797 648 467 860 771 801 326 678 258 146 647 133 610
 724 260 249 152 416 225 148  49 263 848 759 541 324 297 257 773 857 736 513 343 559 208 598 887 345 877 240 201  15 851
 781  98 209 685 609 871 340 654 401 354 841 435  30 216 217 686 266 238 795 290 476 440 874 892 799 171 159 286 121 281
 612 147 863 375 785 113 635 683  97 731 787 504 330 409 118 814 176 740  63 178 747 236 869 161 872 179 275 174 129 713
 468 142 102 160 899 181 310 842 252 644 193 833 791 879 134 351 230 625 897 816 158 553 397 546 247 697 105 101 866  96
 674 132 484 123 154 224 125 772 557 651 803 715 777 719 145 743 834 763 156 244 120 278 653 335 149 890 294 235  75 691
 876 223 633 276 237 595  60 460 151 516 124 568 720 880 661 597 727 794 840  31 755 143 809 109 315 641  74 562  68  70
 847 764  76 100 277 213 862 836  28 858  91 732 838 784  85 861 805 682 169 868  71  62 584 679 716 182 110 114  84 137
 875  52 185  90 798 548 107 782 882 825 893 363 883 380 889 660 738 212 846  81  43 528 646 116  46  11   8  73  67 888

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 6.00002e+07us (= 60000.2ms, 60.0002s)
Wall-clock time (full program): 6.00332e+07us (= 60033.2ms, 60.0332s)
Satisfaction error: 2
Number of search iterations: 26377
Number of local moves: 6039 (including on plateau: 3064)
Number of local minimum: 2605 (including on plateau: 390)
Number of resets: 14
Number of restarts: 0

Problem in row 2: 259 896 835 734 207 288 895 20 312 689 741 248 25 18 826 111 362 189 16 656 769 796 854 195 775 832 849 13 27 79 => the sum is 13516 rather than 13515
Problem in row 6: 188 789 358 628 86 891 703 167 696 59 17 855 162 33 699 14 737 115 453 754 415 83 173 614 802 766 753 824 676 4 => the sum is 13514 rather than 13515
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 633 124  64  60 407 829 698 837 544 731 898 227  31  91 804 791 773 838  90 623 182 192 776 725  79 800 162  19 116 371
 767 398  16  78 816 213 644 869 415 284 852 513 738 121 851  72 330 363  97  32 603 760 228 827  49 792  20 845  33 889
 133 135 369 884 571 796 327 301 288 112 769 243 875 747 210 720 834 427  21 497 890 257 802 857 183 442 412   1 151 261
 640  29 815  98 646  44  18  76 807 839 685 197  69 727 531 757 734 849  11 801 819  30 828 100 152 842 348 686  55 282
 375 250 649 661  10 629 472 721 673 104 724 108 762 117  54 507 730 689 690 186 616 668 739 830 247  63  75 772 251 143
 650 659  15 702 161 634 719 450 583 761 774 245 300 232  56 703 454 771  81 452 794 238 753 755 439  48  12 742 265  67
 748 635 110 153 356 825 136 832 113 700 595 520 376 114 252 795 200 655 181 680 841 532 751 293 120 235 474 782 230 281
 323 675 806 582  46 641 264 716 613  51 486 462 763 617 202 662 666 759 476 392 565 459 218 128 142 569  38 553  26 615
  68 683 736 714 275 701  22 102   6 564 676 208 551 636 160 672 578 693 718 359 586 408 463 441 291 539 273 667  37 688
 242 657 593 664 482 535 246 527 477 125 697 309 639 711  28 618 567 502 746 630  65 744 768  58  43 591 310 558 306  77
 785 409 552 536 169 705 258  61 287 577   2 508 694 588  42 584 699 594 609   9 519 256 652 648 268 416 420 404 692 572
 608 526 402 489   7 347 492 631 562 733 487 455 606 423 190 622 546 811 194 141 514 684  74 779 809  24 187   3 886 283
 528 674 749 580 604 643  86 560 877 784 483 624 214 139 658 165 612  47 491 515  39  25  52 501 237 872 319 555 496 386
 274 677 556 361 166 469  36 726 505 437 484  23 600 424 545 611 883 456 543 445 458 550 248 168 895 433 370 500 364 308
 399 601 354  40 473 485 360 431 430 599 478 203 460 475 494 351 499 453 596 418 523 435 381 490 468 651 389 383 338 858
 510 401 542 775 559 481 498 353 516 524 434 471 530 384 896 260 290 199 410 509 304 614  34 461 219 324 493 332 590 602
 366 488 443 812 362   8 358 222 457 574 355 579 464 610 444 343 207 451 405 788 390 391 226 403 864 729 581 278 517 400
 691 436 844 349 103 637 421 547 533 495  35 368 566 339 269 503 175 277 373 715 221 241 479 465 561 894 642 387 570 379
 438 236 432 787 770 231 743 239 426 322 329 681 525 334 766 397 365 295 737 548 374 717 289 440 321 344 521 428 138 342
 758 814 429  93 380 314 480 318 446 862 722 317 377 297 345 303  59 663 233 587 847 279 188 585 568 255 607 294 707 388
 518 325 413 331 654 285 632 316 313 137 682 696 372 174 754 367 266 406 155 817 843 786 320 223 538 144 645 627 670 106
 229 311 204 129 382 346 882 145 861 341  62 270 280 118 836 234 333 678 224 660 414 750 833 411 863 215 575 357 831 741
 822  94 115 337 803 340 272 665 154 123 101 621 419 378 855 470 163 206 881 563 352 385 876 781 173 249 820 296 466 735
 216 263 573 756 522 240 840 859 201 512   4 626  73  84 783 286  71 164  99 425 180 205 298 885 865 878 417 653 797 740
 140 259 799 167 185 897 879 262 134 209 541 695  92 821 679 176 146 149 554 276 671 870 506 119 504 312 619 873 824 157
  57 217 336 798 899 835 158 628 189 709 394 712 130 764 669 299 156 147 708 620 335  87 126 196 846 557 350 179 880 534
 212  95 305 326 656 150 549 687 170 752  85 732 706 826 576 225 307 271 848 598 111 395 172 184 808 159 900 267 854 589
 198 704 396 171 780  66 647 220 745 254  70 790 328 891 191  17 892 625 777  96 131 109 537 540 860 805 868  83 529 195
 765 874 793 211 823  41 867  82 467 193  14 810 887 605 253 292 853  27 789  53 315 856   5  45 393  89 850 178 447 638
 422 866 105 871 448 148 511 132 723 107 597 302  88 728 122 713 127  50 778  80  13 592 893 177 710 244 818 813 449 888

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.15515e+07us (= 11551.5ms, 11.5515s)
Wall-clock time (full program): 1.15843e+07us (= 11584.3ms, 11.5843s)
Satisfaction error: 0
Number of search iterations: 3596
Number of local moves: 1282 (including on plateau: 565)
Number of local minimum: 280 (including on plateau: 53)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 252 842 303  35 868 274 815 880 187  96 825 151 184 120  13 564 346 455 113 717 833   5   6 865 816 425 613 554 746 612
 315   2 876 673 853 269 810 808  54  12 692 395 138 108 101 846 230 856 121 830 287 774  49 689 627  36 839  69 450 706
  46  44  77 318 847 509 381 794 212 699 798 312 176 448  70 769 725 194 458 753 437 785 245 827 854 117 278 132 514 696
 777 878 859  98 216 218 583 872 317 666 323 330 788 530 322 883 208 284 822  63 821 192  55 426 806  19 125 532 354 148
 264 834 877  60   8 103 835  53 775 757 758 219  61 191 718 677 405 102 702 698 664  10 385 667 795  51 634  95 341 776
 442 344 824  57 766   4 675 751 243 206 593 389 106 676 778 705 170 591 123 708 700   7 133 574  15 654 741 128 639 773
  11 764 850 200 691 304  48 171 181 685 525  50 118 886 894 690 715 188 154 396 710 493 238  24 651  22 888 693 658 617
 864 590 786 796 727 190 759  29  28 679  38 203 150 105 552 861 289 750  73  91 761  72 838 656 723 687  93 129 217 779
 270 620 104 153 539  42 765 638 556 563  90   9  85 719 605 550 588 720 714 193 659  86 297 752 645 661  47 487 749 609
  34 589  43  88 633 434 599 650 584 646 607 500 790 631 704 569 845 649 259 512 373 601 244  52 505  33 742  18 561  20
 547  45  17 295 632 517 722 600 350 582  39 139 799 628 519 205 587  83 566 363 513 570 334 781 736 534 316 625 484 387
 629 119 734 367 653 351 162 618 585 359 126 488 321 721 531 549 360 541 636 597 378   3 275 733 461 680 682 577 137 142
 652 840 665 301  32 502 684 670  25 482  21 345 603 576 657 671 504 147 427 644 419 662  26 439 414 596  40 483 511 477
 515 486 624 507  27 663 598  16 489 542 510  23 457 475 468  79 826 185 473 623 565 611 494 535 537 615 412 459 277 424
 358 302 551  58 267 422 595 465 529 557 376 545 518 372 499 467 231 447 453 819 223 572 516 463 364 495 449 748 456 398
 579 546 444 491 481 258 340 462 544 431 575 747 635 619 429 384 399 476 417 438 308 298 292 249 383 254 416 496 768 356
 506 610 159 626 255 433 430 474 445 375 831 887 288 602 408 382 548 480 353 393  65 567 562 365 394 391 492 328 443 423
 325 348 226 580 257 452 441 361 251 300 527 745 536 522 272 553 844 891 310 711 411 131 647 265 413 451 377 166 782 420
 501 630 253 503  82 568 355 327 339 540 586 801 386 479 446 261  14 324 889 380 332 604 860 214 472 428 211 713 220 797
 783 478 369 578 306 299  81 508 436 410 523 737 368 186 857 366 828 729 404 401 400 533 320 130 286 285 291 290 898 435
 823 528 180 683 643 146 271 755 237   1 305 524 235 559 213 326 805 694 276 852 841 371 728 307 198 273 837 343 319 242
 370 296 201 802 282 848 222 240 874 335 800 409 869 241 202 379 362 594 707 281 616 655 669 167 390 466 141 851 182  64
 352 279 388 336 464 581 229 858 730  66 406 867 342 280 313 215 836 871 460 688 485 329 470 347 283 812 637 196 311  84
 807 266 293 843 885 740 454 114 224 314 268 497 762 163 189 233 814 338 250 792 246 818 772 622 402 210 248 155  99 697
 735 149 471 892 156 829 124 247 789 407 397 668 712 207 256 204 498 791 178 169 262 357 732 469 195 260 897 866 183 415
 228 418 392 793 648 756 143 199 879 538 221 726 744 832 227 172  67 374 870  89 209 165 349 179 152 896 724 738 232 555
 640 116 543 197 558 681 520 115 731 900 743 739 763 177 294 234  97  80 674  56 263 873 642 100  71 760 899 804 158  87
  31 236 660 686  78 701  92  94 331 337 592 849 771 560 863 621 157 490  62  75 440 855 672 811  37 820 127 421 882 164
 333 432 573 606 140 813 614 678 787 895 111  76 571 122 225  59 110  30 709 109 160 875 784 112 754 817 144 703 770 403
 526 884 173 893 521 608 168  68 803 135 309 145 239 780 890  41 107 161 862  74 134 641 881 695 136 767 175 716 174 809

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 9.95747e+06us (= 9957.47ms, 9.95747s)
Wall-clock time (full program): 9.99089e+06us (= 9990.89ms, 9.99089s)
Satisfaction error: 0
Number of search iterations: 3176
Number of local moves: 1321 (including on plateau: 567)
Number of local minimum: 246 (including on plateau: 74)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 843  47 868  75  93  31 577 316 876 897 860  58 827  46 339  28 300 118 335 282 736 241 852 865 673 805 178 864  24 461
  48 659  11  67 130  95 288 594 871 224 799 738 858 772 116 573 136 473 882  83 503 767 701 267 853  98 120 187 894 708
 826 257 327  54 510 561 629   6 848 568 720 813 809 155   3 434 174 781 817  88 206 833 790 775 822 356   1  18 168 166
 494  74 851 828 139 570 103 784 836  42 285 469 819  53 467 409  97 236 786  20 284 779 768 364 376 748 662 443 239 490
 383 138 375 215  33 830 783 807 325 793 526 628 749 732 191 119 331  82 727 121 211 756 699 734 487 726 233 199 163 419
 436 190 753 525 696 276 408 543 184 527 216 722 670 156   4 888  96 718 372 101  43 705 778 788  29 806 126 315 746 698
 692  65 787  16 123  26 657  12 877 707 201  91 611 149 681 739 837  57 218 715 287 691 322  41 452 106 857 821 838 839
 340 634 728 704 147 735 192 175 125 198 802 272 668 186 578 152 297 574 531 755 370 533 450 614 625  15 160 651 671 633
 318 488 636 496 430 706 338 576   5 613 680 134 595 658 697 157 161  69 669 593 311 412 609 556 666 617 177 203 644 301
 154 535 745 387 744 641 298 627 507 115 549 153 309 554 818 621 403 652 390 571   8 355 558 110 702 248 347 269 687 458
 368 598 643 640 305 800 213 716 176 616  27 647 471 517 559 341 479  37 646 414 405 682 548 555 538 159  22 173 631 589
  73 887 630  39 197 553 158 508 791 162 509 550 581 606 512 344 591 189  60 491 214 660 623 585 612 518 742 392 314 424
 324  25 501 534 562  38 200 495 764 326 572 521 590 114 238 516 476 560 829 825 754 603 460 463 506 354 260  19 605 481
 433 143 773 539  66 498 522 542 480 895 896 237 132  34 483 195 426 867 204 470 421 587 520 546 457 478 445 438 348 440
 524 389 515 500 873 544 361 604 353 484 582 608  40 523 230 398 446  68 474 425 358 307 400 694 575 513 468 417 413 429
 485 472 466 357 655 416 456 569 505 733 333 566 464 610  52 758  79 861 226 112 431 564 453 688 423 477 650 142 102 410
  78 532 343 530 667 449 244 332 465 397 170 475 885 770 399  55 415 615 122 600 846 441 447 337 359 395 683 637 499 328
 391 547 420 678  62 185  36 393 212 654 271 365 795 451  13 428 362 810 653 346 345 350 363 263 850 883 432 804 371 782
 689 439 404 381 710 551  23 685 321 294 360  17 188 638 377 844 618 835 878 462 308 279 580 181 264 402 592 796 385  14
 536 384 299 369 151 724 743 761 514 254 312 596  50 302 231 663 898 816 373 401 540 261 352  63 128 557 599 622 693 323
 275 379 183 351 765 245 776 845  10 803 762 251 489 482 811 221 832 283 624 798 511 281 253 266 388  59 273 789 268 242
 677 274   7 886 310 296  64 105 801 442 714 455 493 334 320 255 881 228 349 193 304 893 280 854 656 675 586 684 229 270
 567 222 303 235 502 866 824 292 219 202 717 529   2 291 862 840 721 243 386 169 812 459 329 182 256 295 437 642 220 891
 664 374  86 695 841 247 330 117 205 207 747 427 258 814 879 290 619 620 223 763 265 167 148 552 278 249 632 766 880 172
 785 875 210 752 676 277 725 140 690 234 448 141 250 729 842 679 665 584 232 872 565 145 146  77 165 336 849  99 131 196
 378 777 252 869 899 113 541 382 497 100  56 435 171 444 649 815  44 217 563 771 583 108 227 367 794 492 719 504 672  76
 601 808 124 240 884 890 774 528 144 711 225 730  84 111 342 741 863 645 109  49 737  92 313 588 135 750 454 127 179 537
 137 703 579  61 317 133 856 164  72 635  70 834  89 792 855 180 607 674 519 874 713 104  90 709  71 306 723 759  30 859
 107 900 407 780 208 396 757 486 797 602  85 760 150 831 545 751 626 209  32 259 597 366 262  51 129 406 319  87 740 870
 889 700 289 712 820 823 639 411  45  80  21 293 418 661 422  81  35 394 286 892 847  94 194 380 246 686 769 648 731   9

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.51398e+07us (= 15139.8ms, 15.1398s)
Wall-clock time (full program): 1.51725e+07us (= 15172.5ms, 15.1725s)
Satisfaction error: 0
Number of search iterations: 5378
Number of local moves: 1630 (including on plateau: 917)
Number of local minimum: 476 (including on plateau: 97)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  13 602 202 178 681  17 112 889 792 542 549 279 799 839 461 548  90 674 879 272  65 738  55 562  24 182 471 390 724 886
 854 572 214 861 604 790 563 125 249 811 577  88 862 398 491 141 456 184 266 339 433 639 180 470   6  36 350 816 396 744
 234 732 896 172 877 745 846 190 487 221 894 354 198 798  57 401 286 864 304 224  82 156 534 882 109 747 114 736 150 225
 306  48 137 890 400 261  10 149 274 476 688 668 720 809  25 855 295 697 629 665 427 591 246 127 275 276 885 814 852  20
 891 671 363 649 327 284 719  59 796 735  37  43 807 553 546  44 883 614 194 713 827 343  31 860  32 282 144 450 208 410
 480 360 382 528 803 652 229 142 240 277  30 220 347 353 483 730 701 551 813 765 448 263 569 536   9 146 477 431 773 777
  92 136  61 157 782  11 126 299 664 884 834 875 300 158 517 859 669  78 805 754 296  38 737  47 635 795 329 774 318 485
 453 893 823 258 319 850 168 570 211 262 741 216 280 264  22 257 656  58 589 238 256 585 786 352 197 403 876 705 533 694
 386  73 188 235 707 499  91 524 881 389 783 849 700 778 108 776 434 667 377 247 334 242 317 209 899 322 619 232  50 599
 435 502 636 835 332 365 458  86  40  45  89 341 683   8 616 269 432 784 756 847  67 348 848 195 760 191 715 740 844 248
 856 726 416 374 222 375 181 189 532 174 173  74 455 751 832 212 444 206 230 582 612 384 687 441 734 356 311 702 529 755
 313 547 376 290 333 210 418 544 312 525 443 874 829 672 750 540  84 892 497 133 574 801 314 381 787 131 203   7 357 378
 305 537 387 670 227 391 606 292 287 503 766 349 252 388 241 788 345 873 557 746 233 358 638 366 752 267 102 199 567 523
 207 584 440 468 409 775 411 164 595 573 630 818 489 541 493 100 627 845 522 454 413 452 116 159 464  69 566 605 132 394
 521 271 500 501 369 380 583 535 519 336 611 469 421 797 278 878 167 260 186 692 110 323 123 685 618 539 615 698  79 451
 446 650 837 508 869 723 527 419 239 310 472 428 406 176 555 196 682 153 213 457 488 728 843  64 761 183 134 372 538 138
 515 293 179 151  76 579 836 580 244 273 617 793 346 762 781 302 445  97 543 600 496 338 420 714  39 867 772  94 592 171
 392 163 175  75 289 564 325 581 578 556 460 315 265 552 695 530 415 888 505 607 342 643 270 187 610 482 870 160 423 598
 554 699 510 831  62 506 880 231 690 634 414 245 424 565 320 351 559  33 586 429  54  21 309 475 871 659  96 442 653 412
 383  29 898 316 301 439 718 812 696  81 568 205 117 253 408 601 425 494 479  28 654 640 645 379 492 422 660 706 192 474
 587 359 594 200 490 531 810 644 662 250 297 613 371 223 677 520 399 511 624 780 340 294 590 467 237 608 405 121   3 308
 426 621  34 657   1 516 802 633 193 628 757 689 268 622 344 129 145 560 513 122 771 498 842 140 185 824 620  52 215 708
 641  56 721 623 743 161 684 808  77  85 105 655 481 779 115  19 526 107 395 770 764  53 152 729 154 675 768 865  35 769
 727 124 709 219 673 857 101 663 463  71 166 841 789 106 637  46 749 170 753 507 324 155 328 593 710 712 465 466  23 368
 504 717 243 632 651  14 148 794 647 459 251 255 204   2 626 833 228 711 337  99 716 676 800 691 438 822 130   5 866  16
 285 678  12 646  18 407  72 113 725 597  49 759 291 806 135 704  93 177 165 385 680 661 281 828 868 758 693 288 863 478
  70 201 575 362 326 830  60 550 330 815 236 576 226 128 254 785 603 825 558  26 826 900 473 367 518 686  41 111 509 748
 739 731 648 486 733  51 887 703 143 512 217 335 791  68 840 514 147 361  27 104 817 658 545 397 722  98 417 259 561   4
 820 853 462 370 303  66 402 355 642 596 631 169 331  83 404 103 851  42  95 609 571 625 821 393 447 119 449 838 767 298
  80  87 897 373 588 666 742 872 307 895 430 120  63 283 804 484 679 139 118 321 495 364  15 819 162 858 218 437 763 436

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.86204e+07us (= 28620.4ms, 28.6204s)
Wall-clock time (full program): 2.86536e+07us (= 28653.6ms, 28.6536s)
Satisfaction error: 0
Number of search iterations: 11800
Number of local moves: 2967 (including on plateau: 1757)
Number of local minimum: 1140 (including on plateau: 227)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  18  82 108 806 797   5 444 634 845 711 366 355 808 385 241 282 558 841 754 784  47 106  86 217 821 471 835 787 259  62
 834 854  50 764 745 585 793 339 825 747 863  96 198 210 273 165 885 389 838 213 271  98 107 111 285 898 523  25   2 529
 717 866  15 886  24 164 767 538 513 236 810  77 760 318 205 281 261 849 707 830  75 155 242 173 853  73 759  74 517 770
 430 753  28  30 843  32 737 149 879 123 832 589  20  60 169 665 312 802 421 855 704 791 347 763  68 731 508 850   8  16
 361 814  45 489 857 301  49 779 701 461 828 750 182 163  69 321 899 452 220 725  53 815 172 783 721  35 167  39 578 686
 346 678 219 632  58  27 876 127 637 192  84 560 299 896 775 153 895 865 143 101 720 616 710 491 360 567 358  37 233 860
 365 809 257 708 804 147 864 267 437 159 118  34 129 522 645 868 891 532 692 658  26 209  51 148 689 324 694 786  19 663
 469 698 646 716 734  40 670  29  22 462 736 199 130 604 685 154 624 203 539 684 276 594 160 801  23 659 633 674  21 630
 524 543 743 681 683 177 401 348   6 162  81 527  78 602  64  56 353 730 222 587 563 790 550 410 638 206 666 655 792 677
 126 657  52 591 135 120 627 254 605   9 572 262 709 571 607 668 669  71 796 650 251 643  61 667 722 408 687 501 188 636
  42 695 597 625 250 459   1 322 423 551 612 497 472  11 600 552 576 794 628 641 715 542 194 577   3 492  79 511 436 618
 519 533  94 475 615 161 526 104 581 671 565 729 631 623  92 702 386 503 310 531 156 598 313 289 509 651 566 376 208 498
 328 644 540 341 510 500 420 545   7 546 877 302 654 150 336 370 780 303 387 547 712 728 202 263 482  43 515 507 486 490
 428 380 478 521 673 813 622 680 412 541  89 468 660 586 449  38 473 621 516 230 619 305 315  14 559 488 429 467 176 465
 434 454 512 528 144 635 518 371 525 457 544 379 256 530 557 415 537 504 442 383 357 455 367 553 175 433 496 350 738 466
 334   4 432 368 648 580 477 493 811 464 609 332 556 342 439 450 776 304 225 647 431 418 568 453 441 399 284 413 805  12
 307 369 502 499 476 795 419 479 438 268 239 744 447 414 260 378 329 620 402  66 569 494 481 755 404 603 372 443 562 381
 769 300 584 400 296 889 294 588 409 340 398 314 422 280 575 343 218 549 316 480 752 266 733 364 288 574 363 388 606 417
 700 325 446 335 224 773 352 554 514 662 308 629 337 245 354 407 739 397 610 359 231 326 460 327 405 842 323 216 741 374
 735 426 286 235 403 740 306 474 394 373  13 309 653 827 435 391 652 596 785 649 132 393 782 458 278 611 100 270 535 274
 495 277  48 579 377 570 395 679 345 900 858 279 852 291 290 240 275 265 166 248 894 269 768 777 344 297 520 207 691 319
 727 252 253  17 244 283 189 699 873 765 762 816 812 229 349 221  44 561 416 331 287 258 771 392 298 732 424 595 564 351
 749 196 703 179 247 506 215 890 121 820 292 272 445 714 390 892 184 141 682 440 751 582 840 317  83 338 382 232 617 295
 697 592 859 136 672 758 846 599 406 264  95 719 718 128 119 829 411 201 139  67 723 223 548 676 396 642 613 212 115 112
 483 133 824 774  63 109 333 800 384 897 375 818 781 675 823 861 151 171 869 238 330  80 197 137 706 190 158 200 593 362
 448  41 862 193 870 844 157 204 174 191 590 757 320 487 693 713 102 181 145 246 463 152 788 293 888  88 742 234 871 778
 125  33 798  10 211 456 249 688 601 124 803 640 705 748 664 178 113 228 836  31 848 255 484 789 138 186  99 839 875 761
 117 142 884 807 131 726  70 187  76 608  54 874 237 226 746 799 227 661  59 485 583 817 756 146 536 772 168 867 614 140
  55 851 819  87 425 893  72 122 505 626  57  91 134 822 887 243 105  65 214 170  93 881 696 534 847 311 872 878 470 690
 833 114 831 103 356 427 826 573  46 185  85  97 110 856 724 880  90 116  36 639 883 656 766 837 555 451 180 882 195 183

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 9.52889e+06us (= 9528.89ms, 9.52889s)
Wall-clock time (full program): 9.56154e+06us (= 9561.54ms, 9.56154s)
Satisfaction error: 0
Number of search iterations: 2836
Number of local moves: 1116 (including on plateau: 415)
Number of local minimum: 214 (including on plateau: 58)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 269 796 622 846 579 782  91 726 867 109  97 739 709 102 120 866 178 588  93 734  50  73 775 118 619 208 129  83 662 885
 105 900 104 391 286 147 358 878 872 880 114 875  44 121  60 856 200  36 858 590 101 744 196 174 877 132 233 865 884 634
 180 898 725 478 598 145  99 687 788 784 379  42  82  95  98 864 151 507 212 665 611 897  56  49 645 252 143 825 767 793
 298  96 764 771 871 223  58 351 706 824  67 813 499 241 185 713  54 602  88 641  65 201 142  55 894 335 762 882 572 742
 103 131 823 785 769 244 155 802 818 895  94 868 640  61 111 251 271 608 256 830  63 807 254 119 663 415 137  29 863 650
 189 198 161 889 594 862 106 848 896 141 495 873 680  85 247 122 202 731 888 811 213 250 152 263 521 134 748 236 701 279
 149 730 374 624 699 238  72 899 724 115 179 812 754 477 136  87 197 799 265 804 190  69 253 883 854 146 164 125 827 870
 319 191 840 158 874 231 169 681 708 183 257 205 447  84 123  59 375 839 786 795 248 892 887 159 605 276 354 281 695 794
 329 409 222 326 670 117 282 344 682 637 595 890 859 210 237 386 473 715 304 781 177 696 815 273 685 328 181 211 264 417
 160 313 444 835 704 163 293 625 592 806  89 381 258 360 448 427 353 770 324 558 777 893 333 225 631 322 255 215 828 133
 382 267 239 475 669 280 352 621 571 330 378 630 445 323 259 242 274 717 194 714 357 750 266 597 549 886 232 418 757 341
 485 302 186 487 691 376 761 582 581 278 294 610 591 297 309 277 490 674 580 390 240 891 371 316 820 626 301 268 249 192
 393 404 373 574 568 397 315 350 246 331 512 245 751 307 540 314 285 311 466 552 392 486 425 636 587 749 556 569 462 419
 221 384 332 399 656 765 283 599 541 349 308 643 488 454 483 346 532 428 369 502 456 394 325 340 627 361 284 548 492 606
 396 506 406 420 300 348 480 615 442 559 398 620 470 372 628 345 401 327 472 412 539 270 563 575 649 489 347 272 463 431
 498 432 562  15 510 400 566 476 746 367 414 408 430 661 338 387  23 295 736 291 366 547 467 743  27 530 434 573 517 756
 550 544 458 653 576 557 515 370 364 536 471 383 262 168 410 523 424 655 441 312 433 514 413 292 214 524 461 618 355 519
 710 337 437 593 135 642 469 459 305 388 528 107 138 585 446 494 303 586 468 504 567 503 561 429 172 537 465 589 513 545
 395 551 509 460 368 729 629 287 365 402 113 450 153 607 609 436 614 416  25 230 808 440 664 479 380 493 439 543 356 565
 553 505 555 603 217 689 654 491 321 604 243 533  78 577 578 482 678 170 422 334 411 508 529 518 342 657 690 449 116   8
 639 405 522 535 100 501 798 474 339 407 496 617 527 723 667 673 554 162 500 481   5  76 538 516 343 584  14 638 150 531
 698 600 671 130 224 659 451  81 455 220 660 484 187 763 766 672 831 108 520  86 773   6  12 616 377 127 869 779 193 497
 684 668 635 112 385 542 613  13  24 652 738 423 317 747 728 534 707 126 564 182 675 362  53 648 306 184 733 683 216 261
 792 646 694 128 124 570  45 171  31 633 768  21 219 720 803 772 791 288 693  52 716 318 525 457 166 718 601 526 511  16
 612 583 819  41 175 426 737 139  19 703 745  68  35 712 596 752 833 203 805 275 195  30 658 705  47 816 760 727 289  10
 817 679 719 697 389 721 838  51 173  62 842  64 822 732 651 836  46 144 234   2 850 753 206  26 290 453 623   9 226 560
 692  77  74  11 310   1 851 363  38 464 876  17 821 688 700 676 861  80 666 359 852 546 677 860 165 686 110 741 235  18
 841 722   4 140  57 853 845  71  66  39 735  92 403 644 814  20 857 299 443 218 758 336 776 834 296 759 780 438 176 199
 849 204  32 711 229 832 783  40  79 789 843 167 632 844 647  70 702 452  43 320 837   3 826 801   7 740 829 148  22  34
 207  37 209 228 188  75 847 421 156  28 787 435 774 755 778  33 855 879 800  90 790 260 797 809 157  48 881 227 154 810

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.86232e+06us (= 5862.32ms, 5.86232s)
Wall-clock time (full program): 5.89638e+06us (= 5896.38ms, 5.89638s)
Satisfaction error: 0
Number of search iterations: 1452
Number of local moves: 776 (including on plateau: 251)
Number of local minimum: 77 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 240 708 501 105 841 372 288 600 884  26 866 504 824 630 348 858 301 869 422 134 387 805 804 400 623  10  35  25  65  40
 837 543 536 616   5 314 391 373 479 465 338 725  81 562 693 118 874 161 140 868 317 287 319 704 687 714 313 633 308 114
 576  97 411 580  96  79 601 184 845 512  55 398 800 848 768 889 337 802 220 262 808 402 525  57 363 569 103 433  49 846
 201  86 200  88 542 720 193   1 660 176 628 760 464 273  83 242 885 634 371 296 677 152 473 515 790 835 875 158 647 890
 159  21 810 578 759 794 431  62 156 254 436 839  13 734 121 160 613 413 499 806 684 166 683  60 334 831 377 795  87 840
 131 744  18  33 733 887 834 227 190 883 541 857 171 257 719 290  22 260 472 710 559 572 864 423 164  68 851 707 109 219
 113 354 880 813 692 248 427  69 104 169 529 838 232 168 755 186 899 344 743 298 767 737 202 263 531  94 598 412 842 208
 685   7  28 878 590 798 243 206 622 419 702   3 815 739 784 102 439 432 535 213 127 608 675 329 644  45 828 776  89 154
 362 676 666 780  61  54 500 454 513 416 722 583  92 637  20 231 445   4 316 553 886 667 635 754 749 378 668 224 252 217
 108 789 556 351 614 368 731 524 328 420  93 225 293 395 627 898 381 126 621 455 881 392 741 604 456  91 181  70 557 639
 269 358 603 172 609 192 167 729 424 636 709 657 836 379 599 447 361 229 239  27 494 671 748 147 204 689 270 320 762 568
 375 478 547 266 551 364 573 460 680 409 382  56 429 786 300 438 575 852 241 441 305 752 386 347 545 552 276 571 390 188
 459 672 596  82 148 173 853 326 782 292 421 770 617 385 491 151 280 294 289 384 119 698 355 761 863 537 563 333 393 428
 496 404 397 475 791 832 533 585 179 483 520 577 517  80 291 651 415 519 446 756 138 746 366 771  43  85 210 470 142 597
 452 819  78 766 699 380 149 713 340 183 615 860 374 203  16  12 566 331 778 369 408 453 437 335 480 211 540 706 592 650
 132 315 185 503 307 396 640 821 155 673 740 474 451  63 591 690 532  39 833 476 497 502 489 523 234 468 261 631 619 275
 844 299 669 511 209 772 632 274 567 471 407 345 418 783 579 125 602 554 498  58  44  99  30  41 653 817 610 506 787 311
 607 570 574 461 641 818  42 538 625 484 278 661 867 467 124 678 487 406 247 271 251 466 594 611 297 488 165 170 555  72
 847  98 526 792 117 788 180 674 516 434  38 425 462 481 325 527 221 157 724 595  52 825   8 228 312 342 492 779 655 895
 389 862  77 306 861 383 324 582 304 894 309  84 521 587 663 826 253 626 277 618 548 191 137 162 664  36 403  37 700 891
 128 365 215  71 286 718 279 624 648 897 150  51 283 178 376 606 549 534 629 716 900 679 123 495 303 282 440 414 717 859
 341  15 205 736 457 153  90 605 233  59 236 133 638 417 682 854 509 865 645 586 764 207 777 514  53 769 747 135 367 723
  64 646 763 405 350 141 458 530 322 888  75 100 267  19 765 688 589 449 775   6 410 388 285 450 896 486 665 742 870  23
 564 357 139 546 691 803 816 581 222 785 781 197 807 539 195 507 130 799 199 588  31 136 143  14 493 649 750 686 223 144
 656 701 318 189 110  34 732 426 323 738 339 442 550 612 246 336 873 872 107 302   9 250 259 505 558 730 268 711 809 510
 893 226 360 249 174 879 346 356 518 264 256 584 218 235 565 892 352 214 697 757 561 721 370 560 245 330  67 272 877 477
 712 773 620 643 359  73 101 444 394 696 871 116 106 401 122 430  74 823  66 129 593 343 703 662  50 694 735 855 715 212
 728 670 774 856 177 751 659 508 745 187 353 327 230 332 522 469 705  95 399 238 528 115 695 811 797  17 194 463  24 146
 882  48 443 448 196 111 490 758 681 255 830 726 485 843 349  32   2  11 258 753 658 310 544 642 163 822 793  46 284 652
 265 814 820 216 849 120 812 281  76  47 295 198 654 482 796 182 244 801 829 850 112 175 145 827 321 876 237 435  29 727

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.88553e+07us (= 28855.3ms, 28.8553s)
Wall-clock time (full program): 2.8888e+07us (= 28888ms, 28.888s)
Satisfaction error: 0
Number of search iterations: 10129
Number of local moves: 2376 (including on plateau: 1022)
Number of local minimum: 907 (including on plateau: 137)
Number of resets: 5
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 340 438   2 592 871 800 890 285 508 371 219 282 865 347 848 735 741 382 113 271   4 467 622 239 395 174 881 365  90 378
 491 496 823 388 290 191 653 847 581 580 179 409 178 854 874 826 879 828 679 643 746  21 187  74  68  50 207 405   9  59
 165 822 325 796 308 810 533 579 757 385  18 128 320 807 813  32 184  27 193  65 675  25 688 767 209 794 119 558 815 798
 315 177 103  12 259 510 769 383 451 698 169 636 876 100 722 782 143 586 719 457 849 150 316 441 793  80 140 792 306 781
 311 650 555 267 262 236 121 587 692  19  46  55 762 768 278 736 211 104 845  33 206 806 840 334 610 439 474 754 766 748
 203 270 721 246  83 241 787 788 708 341  10 105 795 867 656 281 223  49 799 666 551 765 626 202   7 163 638 619 326 779
  28  22 218 742 554  23 888 716 672 108 421 872 576 146 772 352 456 702 644  15 680 497 739  56 511 448 330  40 567 720
 139 789 649   8 488 758 630 170 673 523 260 172 647 539  77 774 534 304 261 444 863 543 658 243 502 162  72 190 776 667
 868  63 637 790 512 120 642  71 208 498 734 185 837 537  34 701 880  79  30 607 648 332 657 557  24 540 659 107 663 295
 836 434 640  29 718 251 408 155 186 737 624 263 696  89 605 556 851  81 728 266 563 247 495 516 151 258 367 801 549 415
  26 609 710 240 432 591  60 141 574 442  61  99 144 525 572 671 635 171 300 627 480 683 481 501 711  52 686 846 685 760
 364 709 294 248 608 852 499  53 693 355 662 882 213 731 468 645 400 402  16 620 147 535  47 279 613 396 356 168 831 429
 199 841 302 416 612  76 358 598 532  66 839  97  13 866 289 425  91 864 877 445 550 126 717 562 414 691 238 861 466  84
 873 614 257 277 482 484 224 292 131  31 808 375 707 431 435 475 669 181 453 268 784 505 602 811 590 327 253 145 493 538
 469 571 676 362 606 514 500 116 443   5 531 401  38 217 706 507 600 472 616   1 544 856 264 399 447 665 524 297 664 504
 559 412 337 410 862 272 314 470 463 286 520 252 291 360 548 381 752 552 440 515 462 727 333 615 351 180 834 461 210 346
 404 477 166 420 419 697 392 695 452 885 363  92 273 328 403 527 743 473 322 681 519 357 454 437 785 713 321 135 124 458
 825 878 455 269 343 200 283 430 699   6 750 338 646 700 329  42 703 670 335 301 142 802 436 353 123 855 668 250 397 287
  96  93 359 674 611 309 372 724 588 821 307 654  17 221 465 249 732 835 850 331 348 312 305 745 387 176 589 817 450  78
 860 226 471 900 628 843 256 805 617 895 111 303 349 393 407 106  86 449 398 621 485 344 182 492 159 503 423 723  62 418
 738 411 376 886 464 842 394 725 390 740 313 875 160 216 323 660 536  73 389 342 887 234 196 368 596 573 254 336  88 130
 633 197 857  44 284 288 870 625 853  39 684 869 812 101 386 225  41 509 296 201 293 763 459 299 345 816 545 138 391 652
 233 759 761 682 690 114 228  51  11 230 891 152 214 275 370 747 889 530  87 753 274 428 893 542 859 744 129 167 547 265
 546 560  20 585 319 568 157 564 276 764 894 595 730 324 374 194 188 161 832 583  58 898 125 521 819 733 122 582  43 380
 379 446 487 797 526 883  64 426 198 422 245 896 110 687 424 204 192 756  98 235 634 489 117 678 310 814 844 205 791 158
 569 136 689 541 655 384 618 575  35 427 751 529 222 749 603 112 215 783 486 899 227 377 183 298 494   3 833 651 132 339
 369 149 715 593  75 460 212 561 830 704  36 827 115 102 173 565  82 661 714 577 164 366 350 629 597 506 517 778 771 317
 570  14 518 244 373  70 820 242 109 884 601 712 584 134 318 156 632 413 154 677 153 433 566 354 838 803 361 189 775 818
 631 479 137 280 127 897  45 804 118 483 639 755 599 478 148 780  94 594 237 858  57 232 892 786 229  48 490 729 175 694
 476 773 255 777  54 231 528  37  67 770 829 705 726 623  95  69 133 824 604 513 522 195  85 417 578 809 641 406 553 220

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.73349e+07us (= 17334.9ms, 17.3349s)
Wall-clock time (full program): 1.73683e+07us (= 17368.3ms, 17.3683s)
Satisfaction error: 0
Number of search iterations: 6122
Number of local moves: 1882 (including on plateau: 806)
Number of local minimum: 635 (including on plateau: 94)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 419 152 448 556 723 828 348 726 535 308 675 225   3 438 586 658 422 118 138 146 439 120 867 250 680  78 807 646 636 540
   2 587 443  49 647 857  82 872 461 605 685 848 288 618 254 447  71 811  24 777 266 731 477 101 295 804 450  46  97 820
 403 333  68 566 644 380 653 584 390 134 212 547 484 496 178 734 639 401  16 700  93 307 638 475 491 576 399 717 755 502
 681 875 792 715 395 269 253 104  79 678 239 834 849 856  65 241 276 122 578 328 721 213 186 754 382 191 455 462 108 814
 593 130  84 469 301 780 402 262 240 637 772 499 379 601 367 860  81 803 657 441 668 600 743 210 300 810  53 260 103 410
  76 758 855 629 808 881 763 113 273 590 876 790  48 181  10 222 141  56 633 766 799 303 732 703  86 119 471 317 166 350
 789 560 735 384 267 270 468 687 264 488 459 319 809 386 398 654 800 582 516   9 161 249 344 169 514 196 747 667 243 381
 123 109  54 594 271  61 891 752 886 238 327 279  63 621 297 116 818 310 275 374 368 785 830 523 859 659 824 472 336 400
 562 574 539 437 890 151 215 311 895 671 893 293 143 616 529 165 127 852 121 489 617 879 220 569 330 232 237 512 372  74
 589 585 426 329 620 236 746 801 643  36 216 405 613 163 825 805 420 296 788 823  37  83  25 716 176 699 332 112 712 258
 325 177 306 153 171 164 162 641  20 272  55 740 425 549 802 432 326 676 760 197 291 408 831 689 651 812 836 508 290 846
 751 797 557 192 203 316 537  31 683 761 614  33 391 720 551 669 744 607 199 528 487 460 136  90 733 282 183 180 709 371
 648 458 465 168 182 277 542 518 214 615 175 815 404 140 819 736 592 863 854 200 816 338 202 645 211 705 294 261 198 160
 413 630 126 598 561 358 427 568 188 563 741 302 571 424 354 357 493 526 572 798  41 383 837 517 474 150 435 627  70 411
 305 436   4 416 862 444 423 370   7 231 884 449 534 531 189 125   6 580 440 205 478 451 285 887 826 223 806 844 822 452
 564  21 697  98 365 842  22 672 467 185 147 156 750 642 869 656 463 611 827 174 226 129 456 100 604 431 256 530 773 782
 622  59 482 546 144 579 173 495 283 133 158 154 550 880 406 737 701 724 757 289 599 608 768 363 896 286  15 868  23 217
 532 839 610 722 206 337 841  72 345 652 347 519 769  75 765 193 360 409 324 318 708 501 718 224 208  32 265 135 628 861
 686 753 500 662 577 343 315 102 323 504 878 159 376 634 821 187 230 573 748  11  87 157  35 397 727 767 845 219 506 393
 729 434 623 612  89 309 322 713 388 795 843  14 486 485 793 314 838 229 299  85 567 730 251 184  17 446 234 335 575 776
 445 131 565 252 728 866 375 774 124  38  34  42 321 392 719 553 625 287 835 832 679 544  39 783 429 149  73 770 632 479
 554 688 396 749 791 167 581  57 847 771 246 515 655  43 352  29  99 221 510 704 244 635 892 787 543 442  91 320 339 247
 597   5 609 606 759 115 139 142 473 670 711 882 695 373 233 274 745  94  13 650 525 596   8  30 552 666 764 292 522 775
 356 541 298 707 366 521 394  27 673 706 756 353  50 417 602 778 555  44 898 331  47 304 377  28 155 385 840 692 794 520
 457 660 682 698 817 853 888 858 742 533  12 378 739 263  64 245  80  19  58 312 595 114 710 483 476 268 640 414 369  88
 470 873 340 170 209 497 663 871 796 684 248 538 428 281  92 341 591 207 194 559 454 762 342 255 259 603 204 359 677 548
  69 738 107 242 145  51 418 649 851 351 430  52 503 132 725 664 900 407 172 349 702 696 361 536 364 626 883 453 877  62
 284 545 570 415 558 466 111 190 899  77 148 870 280 690 235 624 619 524 117 507 494 661  26 781 278 885 389 588 505 179
 334  66 355 714 106 864 464 513 481 227 313 874 813  18 387 498  60 674 665 829 894 511 346 786 509 128 195 691  95 105
 137   1 779  67 110 433 897  40  45 362 421 631  96 850 228 201 693 889 527 784 412 257 833 480 490 865 492 218 583 694

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.23845e+07us (= 52384.5ms, 52.3845s)
Wall-clock time (full program): 5.24178e+07us (= 52417.8ms, 52.4178s)
Satisfaction error: 0
Number of search iterations: 22859
Number of local moves: 5700 (including on plateau: 3046)
Number of local minimum: 2185 (including on plateau: 386)
Number of resets: 11
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 375 521 860 848 666 763 101  14 165  58 657 505 137  25 786 625 123 868 282 360 526 781 332 819 814 300 131 367  28 678
 164 895 412 497 800  67 106 720  60  48 401 891 427 768 130 304 146 538 753 820 789  43 879 778 898 671  36 118  18 338
  38  12 839 841 168 599 452 764 751 823 600 299 192 499 447 837   9 792 796 216  27 542 151 777 856  71 261  76 571 209
 465 702 159  23  22 148 871 233 220 842 166 275  59 861 428 470 612 687 807 865 217 320 717 679 176 632 391 663 722  83
 156 693 446 188 884  10 454 474 701 154 776 888 808 830 240 802 321 500 812  89 402  24 442  42 634 177 204 715 562  87
 831  37 725 489 579 731 817 205 511  81 129 283  55 818 695 215 706 448 804 288 247  56 844 714 618 173 289 453 596  78
 236 750 700 341 267 585 174 708 698  32  84 390 334 690 673 411 688 694 728 604  15 314 281 858 897 252   8 340 622 141
 199 658 745 525 103 359 662 232 582 187 805 150  16  97 744 112 661 887 756 286 302 616   7 828 685 667 680  88 619 257
 136 704 726   2 610 639  65 184 379 482  74 676  93 889 794 741 692 730 637 665 134 747 602  39  64 696 170  79 621 445
 568 699 139 256 265 319 459 853 305 493 388  52 566 458 626 608 483 740 506  50 258 713 601 584  45 589 735 114 611 432
 629 607 567 219 198 518 580 317 550 313 207 572 737 496 755 315 729 548 628 399  77 564 239 636  34 322 291 656 651 161
 115 179  80  75 874 697 561 344 598 389   4  46 788 595 517 508 743 559 514 633 649 311 374 578 478 546 293 573 461 433
 364 869 392 473 552 480 716 450  98 539 279 522 488 466 642 577 543 285 533 309 638 615 494 201 721  63 326 581 230  69
  30 835 292 565 772  94 749 244 259 527 502 329 467 549 266 396 501 487 441 529 734 435 736 479 504 352 426 354 437 224
 491 660 383 528 495 541 157  41 711 640 681 421 407 357 512 422 623 477 400 363 670 140 105 406 438 405 370 271 523 877
 650 833 393 469 443 843 624 498 449 238 409 769 475 510 272 617 386 492 535 182 223 408 169  92 537 350 424 327 417 481
   1 336 413 859 557 416 686 468  57 346 672 119 431 882 857 253 197 563 312  86 683 142 436 376 545 530 801 586  13 892
 373 202 457 439 775 791 876 356 333  21 296 368 719 328 353 515 739 631 246   3 228 277 558 490 451 284 361 838 484 723
 613 425 378 287 222 849 460 377 606 774 249 122 369 203 591 486  62 210  33 784 707 810 851 463 264 345 759 472 200 544
 255 594 372 746 507 513 404 836 614 742 554 829 349 380  47 323 250  73 160 280 569 773 241 440 318 270 485 677 641 273
 113 108 385 899 227 397 175 226 214 532 307 410 262 382 310 394  54  96 335 767 896 797 208 780 330 886 757 867 575 826
 821 145  11 803 430 316 462 520 415 574 331 785 813 268 260 682 295 190 358 825 765 107 516 234 276 337 524 653 206 593
 779 724 536 827 519  70 242 761 418 171 752 709 355 221 635  53 456 306 218 664 193 381 793  26 248 254 647  29 758 770
 878 342 301 263  17 351   5 476 894 547 120 503 274 109  61 855 597 308 196 732 646 152 832 864 243 866 643 592 110 738
 824  95 278 455 875 362 195 403 180 560 748 343 395 211 189 387 627 135 147 852 587 684 237 231 167 290 815 845 795 603
 691 111 128 464 588 124 212 297 790 705 609 689 162 138 127 158 890 225 509 630 766 733  40 183 655 893  68 870 251 809
 294 194 620 590 186 116 885 806 644 883 398 324 863 100 846 235 654 816   6 153 371 245 880  82 132 384 822 178  90 718
 782  99 471 347 570 213 414 674 727 834 811 710 840 798  20 553 339  51 191 133 419 348 126 185  49 645 712  19 675 760
 771 420 659 125 181 850 104 366 555 429 854 434 762 143 269 540 298 144  85 149 605 881 155 534 862 900 303 583 325 229
 873  66 648  72 163 754 847 668  31 551 652 102 872 444 423 121  91  35 787 799 172 556 669 117 576 365 783 531 703  44

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.82264e+07us (= 18226.4ms, 18.2264s)
Wall-clock time (full program): 1.82594e+07us (= 18259.4ms, 18.2594s)
Satisfaction error: 0
Number of search iterations: 6399
Number of local moves: 1688 (including on plateau: 688)
Number of local minimum: 581 (including on plateau: 102)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 810 854 377 788 115  71 269  43  72  24 572 809  42 741 586 647 876  93 554 850 212 858 886  17 578 615 450 391 194 121
  96 106 678  68 660 569 722 870 771  13  77  83 114 778 192 753 122 889 848 340 191 888 410 187 890 321 807  52 509 511
 692 872  33 611 308  55 280 625 185  95 218  86 622  10 547 568 812 536 559 379 676 344 677 471  79 630 855 654 787 249
 265 518 849 438 287 196 236 182 111 252 789 276 223 641  90 871 198 701 864 473 180 109 816 629  46 832 856 702 478 407
 136 842 323 520  54 286 571 777 126 131 390 830 609 881 729 463 825 309 408 222 694 177 781 202 151 132 358 544 839 205
 589 297 751 244 291 742 168  64 201 557 433  32 498 869  99 867 844 262 171  84 490 304 567 835 219 461 828 170 806 772
 161 316 795 152 484 352 113 894 102 210 312 866 617 759 302 599 813 322 475 365  40 224 596 762 624 154 457 757 745 147
 719 773 436 204 179  57 158 893 656 225 292 264  88 159 483 659 879 415 313 679 704 885 489 693 526 561 315 423 128 260
 184 104 658 178 874 501 579 735 899 183 603 120 801 285 146 240 440 267 246 840 301 288  36 370 785 775 827 221 253 776
 200 716 119 508 821 274 895 207 705 853 333 294 435 721 707 361  53 238 216 162 189 282 718 664 355 636 263 332 646 612
 499 325 341 791 107 550 347 495 369 430 829 234 747 188 270 318 689 465 604 331 883 167 531 336 335 891 306 334  59 744
 662 150 513 385 393 843 268 618 254  47 746 764 330 248 637 824 754 257 845 406 360  65 474 562 337 375 442 251 241 464
 339 389 738 394 851 353 235 388 614 401 373 199  97 289 684 431 359 897 213 278 607 519 505 697 553 149  94 892 639 338
 399 713  92 502 602 670 258 444 838 574 169  60 310 396 488 447 420 381 140 206 826 429 472 688 875 635  19 459 558 445
 481 452 427 534 403 504 281 233 546 409   5 818 655 477 542 392 814 378 760 319 454  45 580   2 455 482 327 425 428 887
 386 792 748 632 487 493 817 354 346 468 491 528 256 479 766 446 215 439 560 462 675  78 374  49 515 116  29 585 480 449
 815 368 533 384 514 363 582 779 348 539 284 517 166 673 432 243 421 703 273 556 657 214 195 299  31 320 631 588 418 669
 326 595 305 575 239 605 437 548 181 555 752 796 862 563 298 296  20 691 522 416 108 543 226 706 549 266 412 144 133 846
 819 362 492 516 295 237  91 541 573 803 441 190  26 125 799 700  16 620 476 469 749 404 873 566 232 156 755 521 583  85
  73 524 597 527 532 186 651 402 720 453 593 328 638 100  23   9 485  67 768 786 145 860 634 529 523 726 422 671  76 467
 565 110 357 405 486 643 231 545 683 756  38 606 696 466 717 175 124 570 712 395  58 598 733 581 414 443 314 290 661 143
 349 861 783 681 652 727 804  87 852 667  89  44 500 538 666  51   3 250 621 535 649  61 228   4 724 640 137 506 765  41
 767  21  39 142 685 623 682  62  69 672 736 456 193 552  66 135 601 300 645 497 627 865 663 613 217 101 591 592 564 739
 458 345 698 203 229 769  37 372 160 740 176 174 841 730 117 275 419 820 794 351 293 594  82 366 610 608 668 512 732 342
 164 134 242 808 510 324 774 780 590 411 782 626 283  22 648 127 584 398 680 695  81 227 255 731  15 153 644 279 714 834
 857 383 350 711 725 868 699 247  12 434 737 836 633 424 426 577 118 503  48 793 758 155 371  28 494 470  80 211  30 537
 708 877 364   1 139  50 770 540 665 723 878 587 674 715 802 710 220 148  56 271 209 882 138  11 750 619 245 307 259 197
 823 172  18 600 798 743  27  25 805 686 130 687 551 311 761 367 417 261  63 356 496 863 129 763 822 831 460 343  34 173
   8 387  75 616 690 413 880 123 272 628 847 898 800 277 163 734 141 451   7 896 900 859   6 317  14 382 112 709 380 530
 165 157 784 397 105 448 653 642 790 576 400 507 208  98 329 230 833 884  74 103 303 728  70 837 797  35 811 650 376 525

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.05837e+07us (= 20583.7ms, 20.5837s)
Wall-clock time (full program): 2.06167e+07us (= 20616.7ms, 20.6167s)
Satisfaction error: 0
Number of search iterations: 7035
Number of local moves: 1839 (including on plateau: 860)
Number of local minimum: 641 (including on plateau: 109)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 398 875 473 138 332 842 533 235 768 152 463 192 742 189 854 179 176 844   4 796 476 757 157 424 503 392 185 413 485 538
 205  83 265 252 870 427 650 794  14 900 285 321 430  13 753 674 139 749  74 564 720  67 867 183 444 467 877 269 526 633
 852 461 197 137 331 872 737 806 839  23 294 555  99 521 342 542 863 546 453 108 527 218  86 389 534 787 282 293 178 643
 207 897 112 209 856 857 159  88 432 283 497 696 361 289 573 791 477 596 750 436 885 400  30 705 250  49 876 462  79 213
 736 513 373 779 848 255 551 170  51 730 684 454 687 448 334 784 486 101 544 268 103 866 277 572  28 154 202 264 735 518
 195 688 475 713 718 541 234 810  60 363 752 362 654 722  24 328 883  71 569 121 691 193 355 821 616 414 127  66 457 492
 151 729 383 587  47 188 206 531   7 849 412 793 837  15 721 516 479 869 198 428 788 801 273 882 878 182  65 613  18  69
 296 887 628 807 568 697 584 403 376 266  37 391 335 860 135 300 341 762 835 390 111 607  54 836 131 301 634 725  45 173
  27 175 556 314 640 663 537 714 429 664 699 144 419 816 549 622 303 244   2  16 589  29 396 775 662 423 719 777  36 576
 507 732  62 624 187 619 748 487 884  96 608 456 180 212 708 586 600 208 698 523 677  94 482  12 799 126 819 243 117 421
 702 133 543 225   3 629 274 292  57 886 896 660  41 621 229 291 763 747   1 804 113 814 581  87 831 701 262  61 435 833
 889 164 110 803 631 318 605 118 783 140 319 811 104 756 451 593 606 402 156 590  68 827 618 594 239 298 222 123 595 582
 284  75 647 344 578 337 388 320  58 495 496 651 694 562 802  70 548  63 577 271 815 149 446 371 472 466 540 773 778 445
 500 510 458 626 561 228 478  80 508 635 601 105 615 310 470 828 219 834 221 231 215 498 774 158  93 862 644 829  44 380
 636 259 823 488 785 528 327 217 771 672 514 637   8 315 165 465 220 249 681 560 499 245 248 322 830 535 598 353 437 128
 288 372 520 439 638 532 545 566 469 707 563 746 530  89 511 416 253 818 304 130 313  98 382 312 405 627 666 280 690 306
 309 297 851 323  82 351  34 147 359 770 434 847 145 452 455 326 891 553 764 490 433 588 471 874 366  56 115 415 843 474
 524 565 502 571 858  52 349 233 191 224 143  81 625 659  78 715 550 617 501 302 880  59 710 348 879 579 387 350 609 374
 646 614 899 656 343  11 822 703 223 196 316 347 325 776 333 142 275 407 892 760 184 406 216 381  95 494 411 653 506 483
   5 393 700 789 484 174 888 201 354 450 399 346 853 574 790 519 404 493 426 290  38 680 468 148 358 845 480 716 204  46
 782 442 125 352 745 365 464 449 345 317 172 557 460 226 717 386 394 792 645 356 668 744 186  32 820 237 305 639 385 408
 580 270 864 257 256 281 340  85 893 709 261 489 287 671 675 119 242 276 611 512 232 336 808 612 200 339 641 299 766 604
 679 620 141 120 329 422 375 168 623 286 272  19 379 711  77 227 692  64 795 754 364 585 728  20 420 859 855 689 377 865
 161 246 685 440  53 559 397 894 809  92 330 642 417 307 610 308 767  97 367 800 632 263 258 167 459 741 114 676 695 529
 682 665 652 491 163 324 210 868 751 438 431 567 251 171 109 881  48  43 203 817 311 597 781 723 895 360 190 102 765  26
 425  31 116  22 410 241 443 591  73 780 798 368 418 657 447 395 136 850 570  33 441 739 727 726 693 107 706 230 825 517
 873 743 153 738  72 731  90 661 898 384 194 150 536 509 260 160 649  42 409 655 370 599 630  10 106 686 295 755 603 554
 124  84 733  91 840 772 214 740 602 712  55 846 805 669 236 181 211 238  40 575 525 812 240 769  25 539 670  50 279 838
 169 166 369 658 278 678 786 254 129 134 758 247 481  17 515 667  39 357 824 813 199 177 761 558 338 155 552 724 871 841
 683 826 100 522   9  21 547 890 759 162 832  35 797 378 592 504 861 583 401 122 648 267 505 704 146 734  76 673 132   6

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.90451e+07us (= 29045.1ms, 29.0451s)
Wall-clock time (full program): 2.90784e+07us (= 29078.4ms, 29.0784s)
Satisfaction error: 0
Number of search iterations: 11627
Number of local moves: 3115 (including on plateau: 1431)
Number of local minimum: 1101 (including on plateau: 187)
Number of resets: 6
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 756 846 131  22 183 841 172  23 761 326 874  56 772  86 824 778 126 754 311 835 826 858  19 815  21 259 784 257  34 165
 790 664 804 462 748 853 210  40 220 295 192 228 686 195 854  41  79 755 885 862 444 733 828 763  45 251  57 275  52 204
  39 881 765  78  43 716  58 719 374 405 524 239 818   4 697  11 171 764 622 802 746 246 481 605  15 277 833 668 797 117
 147 669 738  31 261 263 319  30 749 529 785 176 819 206 822 129  16 675 731 292 893 899 679 158 743 811   5 270 624  46
 760 776 682 735  32 851  87 146 803 342 729 465 646 121 789  49 231 700 136 740  76 775 699 674 287 180 663  10 143 188
 721 477 812 107 726  13 141  17 633 323 720  55 728 106 762 807  26 713 260 701 641 779 650 829 736  95 670  29  74 164
 712 561 586 593 739 623 100 229 707 367 349  42 600  25 618 333 303 879 139 800 613 757 691  33 571 226 142 248 759 170
 711 770 725 722 535 657  89  18 751 161 672 454 654 602 526 717 767 626 332 640 127  14   8 798 573  80 585  28 153  20
 685 594 458 687 534 660 203 671  36   3 575 252 550 777 615 752 791 557 114 703  77 658 588 609 336 262 589   6  38 135
 619 546 651 290 470 715  44 551 692  64 634 218 665 662 656 625 191 630   2 644  53 683 355 648 516  70 398 150 469 604
 647  59 580 732 678 628 209 491 533 506   9 395 476 627 554 610 157 582  97  12 608 484 704 695 214 216 632 155 548 677
 442 515 563 361 401 552 111 584 741  81 193   7 461 744 577 549 483 430  37 532 578 666 564 667 498  90 596 418 567 507
 503 448 457 304 592 475 518 391 453  71  68  82 565 541 560 643 595 559 558 433 423 611 521 508   1 617 407 538 504 569
 635 312  94 108 673 553 496 443 566 616 123 375 517  24 388 568 513 527 655 536 432 314 614 530 542 537 525 371 487 441
 511 404 400 494 413 753 502 467 450 639 386 520 543 366 322 255 421 337 459 493 389 460 466 385 545 463 419 482 324 447
 512 555 480 445 327 523 501 579 509 299 427 680 492 436 452 497 499 341 402 302 495 434 328 280 539 428 449 406 490 408
 383 612 271 607 369 485 451 414 861 863 353 456 380 422 437 410 387 301 601 351 309 488 510 254 378 464 334 479 473 412
 446 431 202 392 416 399 489 425 394 796 734 597 837 839 348 363 343 403 411 288 472 439 182 372 409 346 318 426 274 724
 384 576 856 528 468 308 590 396 296 774 808 350 253 307 329 486 316 368 849 379 424 393 289 429 645 298 315 415 269 417
 364 273 397 222 830 189 681 235 358 825 873 478 377 471 340 373 689 325 794 887 631 293 365 354 244 294 179 705 272 197
 205 889 440 599 869 128 225 278 306 787 187 693 435 237 219 362 360 186 795 344 723  83 381 283 898 888 317 843 234 321
 250 266 181 213 382 166 878 310 547 855 162 864 122 780 606 339 243 113 845 356 799 816 420 359 297 750 286 649 376 285
 120 300 305 562 223 267 838 848 112 730 345 880 276 265 199 217 895 357 245 247 335 238 745 236 642 676 313 638 771 690
 338 154 201 352 169 159 820 224 370 714 215 727 132 574 233 834 805 125 688  84 256 264 156 860 178 857 696 793 653 884
 198  66 281 629 211 877 821 894 185 706 500 783  72 347 258 241 890 163 620 167 279 190  50 330 896 621 284 806 268 882
 455 242 104 556 891 115 836 897 196 119 572 661  88 866 133  99 540 134 208 474 149 570 282  75 207 872 859 652 871 792
 230 140 249 813 144  85 766 832 177 200 137 788 152 737  93 758 702 151 519 212 900  63 876  48 844 817  35 598 868 581
 109 227 865 883 773 175 892 842 130 587 331 708 160 637  67 698 291 184 240 116  73  54  51 103 850 603 840 583 591 852
 782 138 168 886 194  96 659 827  91 505 320 544  65 801  92 101 875 814 522 110  60 105 232 768  98 531 867 786 709 769
  61 124  69 102 221 390 809 694 514  27 718 742 174 710 145 870 810  62 438 173 684 148 781  47 747 636 118 831 823 847

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.88978e+06us (= 4889.78ms, 4.88978s)
Wall-clock time (full program): 4.92304e+06us (= 4923.04ms, 4.92304s)
Satisfaction error: 0
Number of search iterations: 1178
Number of local moves: 704 (including on plateau: 269)
Number of local minimum: 61 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 736 327 683  70 356 696 182 117 330 479 855 611 252 793 390 463 623 595 863 364 183 402 647 385 345  41 146 810 472 299
 715 529 312 745 718 192 440 807 442 821 204 525 757 681 294 856   2 728 132 456 114 240 445 407 636 307 156  14 712 128
  19 449 819 322 532 756 443 141 219 139 164 699 121 752 396  38 616 765 213 503 698 591 205 689 869 511 340  45 691 770
 871 516 850  93 455  87 662  32 861 829   8 143 259 725 742  94 190 518 558 147 758 383 103 380 754 498 714 437 777  71
 432 571 229 584 202 214 323 713 684 134 809 851 835 808 775 300 160 622 613 184 466  13 638 181 419 448 162 247 702 196
  18 483 245 171 860  15 847 435 277 399 388  92 133 773 355 371 641 799 347 490 885 430   7 403 256 782 603 593 741 676
 172  46 110 415 179 568  95 820 732 352 649 414 534 242 889 785 630 394  16 408 246 825 410 426 444 677  10 830 528 669
 188 375 772 539 393 822 177 897  77 228 566 193 664  83 302 790 501 672 348 321 828 743 488 158 142 896  86 406 376 484
 232 606 239 538 499 112 796 812 166 370 161 236 607 632 599 101 296 583 547 888   1 295 341 458 373 189 461 834 652 891
 313 496 663 633 711 368 840  26 582 739 865 332 423 618 353 559 358  60 144  21  98 841 130 620 255 705 648 363 418 333
  88 701 361 576 524 700 367 250 755 107 643 405 357 163 273 279 125 480 351 868 337 565 523 507 655 349 309 495 707 695
 817  66 577 554 201 544 421 553 849  67 709 747 123  29 491 826 478  44 198 761 585 893 890 138 331 155 382 624  58 404
 590 326 324 717 722 283 258 867 129 206  33  79 153 612 875 335  73 392 550 665 489 671 729 526 680 343 241 653 660 334
  48 642 634 104 354 494 106 124 557 601 573 776 271 872 265 723 666 243 436 513 150 839 864 339 306  51 572 735 105 552
 207 823 502 527 459 708 109 626 289  30  69 497 120 816 589 454 706 609 457 122 148 727 420 719 473 195 639 514 231 730
 842 873 369 510 127 716  91 769  97  57   4 251 749 305 261 469  25 556 845 564 374 690 733 688 551 800 267   6 542 384
 290 344 264 311 409 428 673 372 679 635   5 169 515 319  24  80 894 301 667 615 377 899  65 787 877  64 857 462 429 704
 416 149 791 438 694 570 401  99 886 604 675 778 310 263 395  37 646 586 398 658 506 346 771 167 531  12  82 439 417 450
 281 567 587 360 687 481 548 598 693 721  62 115 597 465 614 734 135 492 521 338 656  27  61 504 212 533 453 434 874 165
 685 476 640  35 645 536 644  50 224 844 208 697 581 119 431 792 674 411 116 186 580  72 797 802 237 238 218 508 602 467
 424 235  43 254 748 579 763 750 366 209 670 519 541 600 505 266 637 433 441 486 308   9 151 724 740 318 303 316 379 798
 562 884 191 287 221 768  53 474 880 543 200 194 329 226 285 767 482 223 304 659 651 574 286 682 594 540 764 315  22 555
 627 126 530 493 795 537 784 881 737 588 848 175 180 244 350 833 774 215 592 159 815 596  56 211  42 314  96 535 269 113
 879 325 650 668  54  89 852  40 176 805 111 710 170  76 804  23 387  85 249 451 811 608  49 378 760 629 703 895 569 509
 813 381 234 336 136 328 262 485 140 342 248 803 789 561 293 631 814 892 365 389 522 257 887 220 471 447 781  11 657  20
 422 197 738 560 292 131 298 520 692 233 878 731 628 278 512 216 185 275 686 661 678 118 882 621  31 446 762 173 108 563
 477 230 779 836 145 578 362 276  75  52 759 270 806   3 227 500 605 575 744 625 838 291  68 288 268 846 900 617 178 297
 397 827 168 546 610  36 470  17 320 783 400 866 794 427 876  84 545 274 854 517 154  55 284 619 386 549 282 100 487 788
 203 746  59 475  34 317 468 883 210 766 898 225  47 843 260 837 425 654 174 359 102 452 859  28 413 801 858 824  78 217
 751 199 152 818 753 862 780  81 391 832 853 412 870 187  90 272 222  39 786 137 157  63 726 460 464 831 720 280  74 253

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.11559e+07us (= 31155.9ms, 31.1559s)
Wall-clock time (full program): 3.11888e+07us (= 31188.8ms, 31.1888s)
Satisfaction error: 0
Number of search iterations: 12122
Number of local moves: 3381 (including on plateau: 1762)
Number of local minimum: 1136 (including on plateau: 218)
Number of resets: 6
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 831 610  77  32 110 123  67 510  55 829  74 639  13 839 820  53 762  78 894 501  79   9 629  46 773 728 812 807 880 835
 854 565 805 869 161  61 704 874  59  82  68 643 707 712 847  36 889 166 816 782 147  47 673 170 113  76  41 616 104 828
 128 670 647 419  64  43 509 864 124 175 151 757 289 834 790 101 798 125 844 653 500 132 811 810 136 140 155 871 150 825
 126 899 120 824 766 198 227 770 214  24 660 588 593 765 892 177 897  58 172 709 114 678 751 174 206 156 203 708 215 631
 857 884 209  73 898 234 167 733  71 112 119 797 800 242  90 108 887  70 727 885 793 169 851 526 146  98 224 804 157 784
 792 665 625 149 205 116 571 478 180 138 182 882 706 886 133 216 741 159 251 794 752 187 893 627 875  99 153 263 134 663
 328 720 676 260 634 194 254 817 171 243 212 405 806 867 162 193 201 231 846 769 603 173 814 877 192 226 345 772 249 275
 225 891 689 566 238 267 621 876 270 185 250 808 550 729 302 219 190 280 252 789 715 330 207 617 233 326 164 803 176 747
 268 863 865 626 294 221 703 377 236 186 285 900 365 239 165 181 241 223 195 723 336 855 870 761 197 232 274 740 314 780
 259 301 284 636 291 344 868 255 322 655 320 675 883 248 184 315 293 483 288 744 890 371 350 774 246 316 272 582 361 705
 369 862 802 479 237 265 697 359 342 753 319 749 355 300 378 407 297 373 402 813 719 311 338 722 247 324 340 296 312 348
 337 403 309 592 375 390 764 591 416 796 362 822 779 327 352 313 308 347 374 640 881 269 442 298 382 339 230 364 381 332
 292 357 318 701 395 331 726 662 346 711 399 323 895 333 410 409 418 385 349 434 363 290 448 738 368 439 295 452 443 485
 281 436 486 841 406 421 677 413 356 896 351 449 447 724 370 411 423 372 299 579 266 306 429 408 427 615 392 470 307 257
 401 507 430 335 471 456 341 360 420 547 495 379 414 451 389 477 490 446 425 568 396 489 536 518 367 562 445 440 494 466
 488  96 394 387 462 397 476 484 544 432 539 491 475 487 548 398 426 461 521 391 441 473 492 551 424 438 433 469 480 417
 467 512 577 453 468 504  16 559 560 422  18  21 366 542 455 506 519 508 545 481 431 472 514 619 575 527 400 428 496 554
 522 552 557 208 457 493 287 576 437 609 596 585 228 567 555 482 464  44 393 384  50 695 584  39 515 460 524 543 589 520
 553 533 513   7 535 540 144 404 564 529 578 586 264  56 537 580 450 574 618 358 597 511 458 183 502 652 517 499 444 229
 563 505 525 122 100 583 115 523 561 530 102  94 218 569 623 528 622 644 595 222 454 633 666 129 696 556 613 605 684 135
 503  37  12 353 624 614  69 258 546 531 674  93 638 376 572 628 541 671 570  35 435 658 549 137 646 685 573 188 699 600
 654  97  20 590 692 694 321  51 534 386 538 139 612 594 635 607 651 632 679  92 282  29 103 601 604 581 760  40 667 630
 687  42 664 244 641 682 354   3 648 587 742  87  72 702 657 739 199 602 598  19 189 672  86 276 637 497 620 669 759 141
 775 148 656 459 735 693  48 204 700 286 778 474  63  80 686 681  38 683 767 168  83 713 107 645 710 608 659  60 781  27
  75  31 650 758  54 730 383 599 763 642 606 240 317  85 105 777 743 748 661  84 611 668 145 235  23 837 771 325 649 200
 786 277 152 736 795 732 412 465 809 532 843  91  88 118 688 731 154 823  89 210 106 827 109 278 785  33 721 131 852 142
 245 211 380  30 745 680 516 329 821 310 819 111 304  66 737 698 746 725 127 283 343 768 253 463 853 714   4 220 856 158
 791 130  52 756 755 801 888  81 830 217 788 305 163 717  17 845  22 859 179 273 262 833 202 279 783 734 860   2  26  65
  57 498 750 256 716 858 718   6 776 334 815 121 415  49  28 861  95 866  25 117 878 787  62 818   5 691 842  45 848 178
   1 213 271 754 191 850 872  34 840 836 832 261 690  11 388 838  10 879  14  15 799 160 143 196 849 826 873 303   8 558

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.29279e+06us (= 4292.79ms, 4.29279s)
Wall-clock time (full program): 4.32608e+06us (= 4326.08ms, 4.32608s)
Satisfaction error: 0
Number of search iterations: 952
Number of local moves: 569 (including on plateau: 190)
Number of local minimum: 38 (including on plateau: 28)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 879 817  74 599 526 807 272 758 464 214 203 617  76 131 784 870 130 883 546  59 156 820 331  50 765  32 810 139 674  29
 873 484 787 508 194  17 220  55 645 814 228 592 282 148 728 337  60 743 506 655 169 489 386 147 833 132 753 117 900 713
 881 344 600 162 288  35 838 223 825 311 101 381 815 562 133 785 262 229  68 328 822 388  85  72 718 692 849 615 368 735
 478 533 763 470 578 556 377 887 296 898 394  95 141  36 367 877 269 687 154 530 852 543 108 275 661 273 329 420 170 498
 791 392 715  47 356 824  49 476  75 429 432 757 581  77 129  63  99 684 422 792 116 752 689 760 346 577 836 342 809  98
 745 234 312 103 841 642 256 747  38 563 532  96 385 222 189 627 672 588 800 490 371 710  13 856 376 308 704 195 724 176
 678 341 582 488 319 660 158 806 518 208 507 575 355  90 339 281 369 551 756 467 140 405 781   5 650 840  10 351 750 535
 548 330 314 616 749 694 695  57 894 568 426  94 721 709 211  65 323  28 353 767 313 466 842 390  61 213 457 404 601 606
 876  64 589 839  37 454 686 184 459 706 657 105 553 509 325 591 594 538 375 494 886  34 425 628 517 122 450  79 669  70
   1 503 160 544 343  71 246 666 598 227 151 726 777 635  69 354 714  30 545 322 702 874 241 866 332 796 372 576 501 573
 289 366 448   9 402 634 248 159 739  52 621 613 111 722 136 637 226 729 754 305 797 705 699 415 845 636 868  24 259  67
   2 580 209 708 799  97 811 609  11 447 480 853 326 565 514 374 218 557 336 444 186 119 497 310 828 748   4 782 504 597
 570 688 290 436 813 126 770 267  84 315 473 740  22 837 441  25 567  83 844 624 486  33 620 118 191 764 633 619 264 772
 431 540 418  31 854 230 625 260 163  44 421 352  62 878 646 865 301  27 794 875 528 496 428 823 453 121 434 808 120 487
 461 522 492 365 537 644 451 500 350 896 471 283 560 858 391 107 691 651 587 100 123 252 280 495 345 196 468 821 348 270
   7 171 703 340 885 295 433 641 541 859 406 579 145 521 788 897 829  48 677 285 648 639 485 173 146 237 190 370 396 181
 155 631 542 593 773 512 818 207 717  19 254 175 720 798 149  41  26 358 249 452 670 437 395 463 225 789 357 834 274 882
 685 242  12 364 297 830  56 380 373 363 472 719 652 397 769  73 850 675 893 389 697 430 112 150 438 549 334   6 574 734
 693 440 324 656 529 414 731 185 555 766 611  43 193 605 819 168 654  14 411 513 891 407 456 303 125 291 643 349  86 640
  58 412 261 401 177 317 519 832 192  87 109 359 803 751 205 775 287 383 604 571 659 524 623 671 206 664 736 585 219 525
 137 847 318 212 347 534 338 255 236 465 183 711 786 266 723  82 738 482 387 416 455 475 690 590 889 134 384 298 880 257
 469 622 292 481 201 872  51 142 846 727 187 286  15  88 843 730 862 419 250 602 279 479 759 527 307 182  92 762 733 410
 165 164 768 649 106 335 596 554 867 536 827 333 572 474 778 398 152 801 180 612  93 499 127 647 166 523 700 174 172 547
 244 179 309 744 746 776 569 802 360 696 857 899 531  91 564 258 238 732 197 157 277 779 460 561 607  20 293  23 247 299
 268 408 558 320 584 888 417 304 890 110 382  89 233 427 780 676 559 793 805 113 135 138 566 188 321 667 505 681 124 586
 198  53 812 783   3 178 210 379 698 278 895 864 816 603 399 294 409 458 239 217 231 403 673 861 316  81 202 826 510 626
 755 632 860 884 663 232 855 539 362 393 442 114 742  46 741 552 271 483  78 253 224  18 653 424 725 638 161 302 167 306
 204 614 550 712 263 493 102 423 215 595 658 761 804 516 276 610 618 701 413 439 144 443  16 477  54 668 245 502 871 128
 831 682 153 216  40 327 435 511 400  66 243 665 515 462  80 583 848 115 284 795 630  42 446 662 869 851 251 774 361 378
 143 680 300 235 265  21 683 707 104 863 892  39 221 491 199 520 679  45   8 449 835 716 629 608 200 771 445 737 240 790

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.22941e+07us (= 32294.1ms, 32.2941s)
Wall-clock time (full program): 3.23272e+07us (= 32327.2ms, 32.3272s)
Satisfaction error: 0
Number of search iterations: 13344
Number of local moves: 3100 (including on plateau: 1485)
Number of local minimum: 1210 (including on plateau: 194)
Number of resets: 7
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 464 188 228 864 232  68 204   4  53 763 836  39 115 858 808 812 804 741 234   3 248 844 201 211 141 790 853 209 852 848
  38 247 787  93 199 114 802 807  99 243 810 156  21 780 859 838 822 845 368 865 678 875 193  91  85 855 726 103   9 107
  65 801 257 771  19 786 837 215  10 119  57  54  29 861 823 789  27  20 679 872 273 767 851 113 155 850 820 502 873 220
 548 749 503   1 245 172 863 795   5 190 826  15 272 723 791 702 130 673  80 740 766 792 730 216 154 815 136  24  35 824
  89   2 756 695 312 796 705  98 712  50 639 813 351 687 711 650 713 383 266 775 218 132 806 328 104  37 690  16 745 236
  30 291 145 797  77  17 724  49 698 735 785 553 385 742 207 750 653 357  81 659 777 722 783 194  23 662 752  82 753  32
 106   7 794 572  52 773  13 710 168  44 629 669 208 576 376 707 769 721 230 737 265 708 641 658  64 755 654 137 595 177
 100 614 205 670  34 714 793   8 701 746 754 768  22 649 367 703 642 571  58 349 728 729  46  51 338 699 621 197 529 109
 289 751 233 656 686 613 655 671 324 623 225 590 287 494 133 667 635 336 538 619 163 111 574 138 244 719 605 157 731  48
 323 598 129 609 504 617 603 541 570  76 630 569 543 651 631 568 622 559 476 632  62  25  14 634 189 738 592 246 519  45
 293 580  71 547 483 685 537 584 700 521 301 615 170 624 591 715 348 606 350 101  75 638 509 616 359 552 545 222 429 148
 610 433  11 517 392 542 682 647 460 510 626   6 343 596 146 575 522 455 238 620 118 594 378 618 316 581 627 327 554 471
 600 399 128 436 478 540 534 582 492 480 587 511  28 365 520 565 666 573 439 309 461 561 277 440 302 523 468 372 637 242
 448 403 297 422 124 414  12 684 589 555 625 607 390 663 451 400 427 485 347 426 488 524 530 463 342 535 546 402 528 388
 556 452 557 473 500 633 585 527 469 420 489 579 423 419 333 424 432  43 516 472 457 330 512 431 314 386 526 410 481 366
 474 441 533 611 531 454 506 475 467 458 445 525 416 447 415 459 434 505 532 513 214 491 303 341 362 358 479 396 437 493
 601 470 345 401 319 404 498 544 676 395 450 486 515 508 514 449 757 305 271 311 380 363 393 304 761 387 462 518 322 406
 381 438 373 425 384 411 369 382 270 564 292 315 683 397 776 482 558 885 377 340 442 412 212 379 583 317 353 874 375 466
 418 716 361 337 391 884 334 446 285 628 588 413 490 374 453 352 260 847 857 318 308 231 282 417 677 344 335 536 262 371
 339 364 646 326 370 298 274 321 560 882 562 284 360 428 672 329 283 276 661 665 781 405 894 279 689 252 251 578 180 306
 809 320 487 299 313 331 290 325 210 296 206 507 816 191 497 280 200 249 849 250 814 407 860 736 408 195 187 900 421 862
 550 394 668 477 883 398 185 181 725 495 255 356 597 443 241 221 217 307 278 288 782 811  96 784 739 239 256 648 281 720
 758 151 640 126 818 389 176 772 227 268 203 224 748 134 125 286 226 774 841 294 759 160 891 694 831 171 332 692 254 551
 803 179 599 144 829 139 869 213 846 237 165 196 843 147 734 162 354 164 709 117 842 240 346 893 693 229 235 577 178 833
 881 779 827 258 880 267 261 149 198 764 300 253 890 153 355 167 184 183 889 643 539 430 175 800 593 166 186 604 174 567
 612 131 501 828 733 169 834 263 866 116  95 799 602 269 717  84  92 264 747 161 652 150  74 456 765 275 202 798 435 825
 832 182 259 898 805 743  42  86 871 821 120 897 697 122  59 173 691  79  78 295 121 727 657 563 886 142 140 696 159 674
 645 876 840  63 681  55 192 718  61  66  83 867 887  70  72  60 879 310 732 223 465 152 484 896 760  47 892 660  73 706
 409 895 496  87 566 219  69 819 499 762 102 744 835  88  41 110 135 143 158 878 608  94 123 644 868 788  18 854 877 586
 444 664 839 112 675 870  67 899 704 688 830 105 549  56  97  36  33 856 636  40  31  90 680 127 770 108  26 778 817 888

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 7.0318e+06us (= 7031.8ms, 7.0318s)
Wall-clock time (full program): 7.06492e+06us (= 7064.92ms, 7.06492s)
Satisfaction error: 0
Number of search iterations: 2085
Number of local moves: 965 (including on plateau: 417)
Number of local minimum: 157 (including on plateau: 42)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 338 782  84 838 653 849 827 775 628 102 581 127 690 896  60  75 111 137 811 802 456  89 764 160  54 881 157 650 116  22
 172  91 895 886 551 110 726 119 850 861 652 206 867  92  68 729  71 626  81 548 846  64 165 844 840  95 824 582  15  39
  35 766 658 654 655 848 823 835  11 126 161 470 732  53 280 117  88 739 149 762 112 601 108 260 759 877 874 781 125  56
  82 871  50 787 617  96 859 839  47 808 299 642 863 159  29 807 343 812 746 894 521  51 216 151 123 100 891 704  49  59
 128 674 153 772 897 192 691 819 178 756 777 651 869 101  85 190 331 813 322 815 162 207 685  87 180 814 142 723 118 183
 532 882 217 757 708 888 761 158  83 296 265 748 738 227 261 641  42 173 408 818 211 232 883 219 873 169 166 721 220 218
 164 790 163 479 792 171 890 778  55 129 200 596 892  94 105 878 136 478 847 717 325 257 692 826 565 241 167 644 303 141
 233 234 223 885 378 156 600 884 205 298 585 806 753 268 170 310 209 793 767 235 852 868 898 122 357 154 176 805 258  33
 237 769 333 662 459 340 508  74 887 225 214 687 715 250 318 796 330 240 531 789 204 893 851 124 201 231 364 681 263 339
 327 324 312 680 825 251 321 344 335 880 699 857 693 363 374 273 319 262 627 302 899 282 369 195 215 598 238 720 405 226
 315 368 332 765 744 359 453 313 270 361 259 663 671 269 511 573 199 457 743 828 397 367 433 284 889 277 352 542 272 249
 673 266 274 788 616 407 286 304 391 271 836 900 482 291 323 755 376 317 370 279 436 236 389 496 561 480 501 633 134 444
 441 463 495 278 749 481 425 353 348 879 354 475 450 412 288 388 447 770 588 498 347 487 366 281 377 435 394 473 246 527
 469 294 420 465 365 334 413 362 437 379 371 562 525 476 244 492 700 592 831 243 375 621 328 419 446 440 245 563 677 427
 490 572 275 590 558 472 360 300 181 342 645 372 421 404 454 614 373 350 649 502 406 517 381 451 505 455 575 395 491 415
 422 553 438 537 509 434 519 489 523 382 384 461 316 518 484 449 474 411 485 392 432 386 504 464 599 428 515 430   6 571
 595 380 409 494 403 351 424 477 387 512  46 439 569 358 356 385 349 586 416 538 529 426 577 526 401 471 648 390 560 513
 647 414 549 254 336 524 290 503 624 618 311 145 393 500 609 705  12  73 267 326 522 593 460 623 634 534 576 285 629 559
 121  30 568 289 109 552 580 544 608 742 731  27 314 536 619 714 584 431 185 550 533 631 458 499  97 686 597 255 483 442
 602 466 612 229  52 486 541 603 462 543  13 212 228 610 493 292 660 540 133 175 506 670 636 510 383 635 696 632 341 554
 402 547 594 143 530 747 140 709 467 155 222 242  58 520 574 417 669 682 684 625  90 539 191 675 564 557 488 198 589 497
 817 202 727  57 418 646 507 535  14 607  93 305 188 676 679 578 337 639 452 114 640  23 429 620  61 622 794 247 703 785
 570  36 605 221 152 566 398   9 661 587 546 148 187 468 659 711 583  20 445 448 656 725  40 657 695 604 615 113 688 702
 567 146 579  67 230 735 306 701 698 667 399  45 139 555 638 179 853  66 606 203 678 713  62  41 773 694 516  79 843 737
 706 752 736  99 135   1 130 174 301 719 196 106 150 664 697  80 730 556 396  65 355 591 666 750 293 797 822 256 734 858
 763  70 400  24   7 751 346 718 791 115 514 320  10 754 800 239 776 712   2 295 795 716 643 740  25 248 104 253 856 728
 855 287 710 545 329  44 283  17 774 741 816 443  19 784 809 707 810 193   8  37 182 611 276 837 423  16 120 208 799 832
 733  43  18  63 309 103  32  72 668 345 637 821 410 689 798 197 876 780 144 224  69 803 613 786 820 758 107   3 872 722
 771 683 841  76 252 842  48 630 830  38 834 210 147 783 870 138 862 189 724 194 307 184 168   4  34   5 665 528 854 804
 308 760 845 131 177 779  28  77 801  31 875 829  26 745 860  86 865  78  98 297 672 132 264 864 768 213 186  21 866 833

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.86613e+06us (= 5866.13ms, 5.86613s)
Wall-clock time (full program): 5.89898e+06us (= 5898.98ms, 5.89898s)
Satisfaction error: 0
Number of search iterations: 1430
Number of local moves: 735 (including on plateau: 256)
Number of local minimum: 80 (including on plateau: 43)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 243 479 811 742 724 463 374 267 302 813 242 384 576  76  21 476 857 246   1 499 168 817 725 804 252 667 493 299 390 304
 146  72 690  20 632 697 844 312 789 846 143 308 133 796 327 495 888 245 840 222 849 600  40 338 800 557 638 129   9 110
 801  18  23 599 795 137 398 335 189 611 783 403 634 828 534 816 788 573 673  66 648 144 691  25 395  92  73   2 565 876
 376 158 810 235 782  34 770  61 525 418 150 108 309 737 184 539 756 215  99 568 571 792 865 318 345 780 677  41 676 616
 595 700 732 227 608   7  85 176 653 649  27  10 405 481 707 263 294 805 124 346 785 866   3 740 115 870 332 754 856 300
 713 835 550 286 307 518 587 348 666 642 203 696 382 331  79 104 695 468 793 773 692  50 134 159  57 310 261 496 593 787
 216 204 781 744 759 589  59 234  65 618 269 714 743  51 232 596 623 746  33 241 540 706 719 532 142 581  97 285 799 597
 486 180 329 117 181 604 536 409  11 421 293   8 328 249 603 558 731 182 798 437 749 111 541 777 368 660 900 513 821 614
 671  36 704 175 494 711 253 647  17 523 248 138 528 771 848 289 651  31 640 662 645 574  96 758 687 542 446  98  63 569
 685 502 350 425 488 760 874 610 472 827 554 126 107 280 412  44 432  58 103 823 381 766 413 357 643 464 274 364 471 450
 212 774 156 694  35 570 459 655 354 393 199  68 615  75 440 631 775 347 684 394 324 741 881 717 591 170  69 147 592 753
  71 226 769 326 605 861 899 895 333 375  48 551 292 265 552 315 475 839 859 457 716 163  93 619 517 564  95 136 562  37
 202 351 665 240 812 544 410 223 818 622 765 553 188 644 529 786 178 738 123 579 776 174 521 415 451 102 185 360 270 291
 201 747 428 419 109 560 151 681 635  30 675 268 430  62 352 882 869 169 524 656 520 377 836 187 583 443 411 448 548 314
 727 563 436  94 186 668 264 483 567 336 851 879 474 636 728   4  54 337 878 657 367 442 255 438  24 417 359 371 257 763
 613 404 820 832 247 101 538 454 278 722 250 406 609 526  12 862 301 797 416 686 325 601 195 164  55 422 399 456 322 702
 388 791 735 503 219 282 447 577 427 461  78  77 830 504 485  64 784 893 344 519 663 259 154 297 330 509 543 466 453 433
 135 898 431 441  32 387 549 674 373  47 380 646 672 141 389 114 508 693 497 400 122 238 883 383 323 679 617 522 708 633
 822 729 192 424 290 343 873 272 864 462 626 119 191 845 276 402 355 197 244 396 275 527 733 340 808 751 423 160 271 305
 288 530 429 363 842 127 469 701 341 321 625 213 356  22 877 590 113 807 283 831 473  38 669 445 407 510 578 630  39 598
 790  28 372 401 284 449 547 224 391 586 718 444 750 705 279 752 455 378 531 303 165 342 281 826 220 211 559 757 511 256
 353 482 588 829 320 768 358 370 533 316 555 868 105 682 802 205  43 477 452 266 209 891 889 161  88 639 755 225 260  26
 841 214 467 498  16 887 688  29 230 218  86 834 726 414 838 196 239 349 210 715 392 206 659 420 680 896 379 317 620 251
 221 854   6 491 233 228 172 761 128 334 794 515 120 207 492 748 208 654 710 487 273 198 516 512 637 426 594 871 863 262
  52 183 460 833 850 306 478 698 465 145 162 545 501 803 814 116 106 155 712 607  90 658 112 561 890  84 779 875 296 179
 885 566 193  87 584 778 149 434 683 229 458 847 628 139 298 556 157 231 118 435 664 506 439   5 489 366 254 815 650 872
 703  46  56 745 572 171 739 843 152 140 894 819 580 602 535  83  67 720 385 217 236 855  15  13 880 397 670 886 480  14
 277 200 313 627  19 131 258 470 767 546 825 837 641 824 505 490 699 386 575 132  74  42 237 860 652  91 709 514  80 734
 190 892 130 362 606 173 166 311 629 764 762 624 125 319 295 730 369 585 689  81 339 153 867 621 721 167  49 806 408 582
 612 853  89 736 884 661 121 361 858 100 852 507 537 500  70 809  45 194 177  60 484 678  53 723 365 148 897 772  82 287

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.65985e+07us (= 26598.5ms, 26.5985s)
Wall-clock time (full program): 2.66324e+07us (= 26632.4ms, 26.6324s)
Satisfaction error: 0
Number of search iterations: 8443
Number of local moves: 2261 (including on plateau: 1123)
Number of local minimum: 719 (including on plateau: 150)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 289 747 892  88 883 608  64 671 104  84 885  51 522 777 229 775 139 898  33 810 151 760 233  91 721  61 253 676 165 855
 825  31 211 744 269 339 125   8 273 824 689 793 569 813 288 191  18 795 821 834 266 200 667 787 809  15 249 615  52 395
 713 184 811 158 128 359  78 783 703 102 448 768 120 628 236 820 652 808   7 581 258 748  92 785 722 832 277 161 512  41
 826 684 257   9  34 349 286 886   6 752 461 746  70 699 812 228 270 753 844 232 578 805  24 796  69 669 207 293 835  35
 831  75 342 659  74 123 221 780 725 465 706 797 101 302  20 292 807 755  77 582  42 679 673 791 716 119   4 492 895 370
 763 414 124 322  45 749  23 773 764 238 337  49  83 841 268 551 803 695 710 762  66 707  53 632 890 654 244 631 112 212
 766 183   5 297 846 881 859 794 397  16 690 375 455 426 154 295 315 705 160 403  11 776  71 626 884 849 284 147 682 163
 642 271 280 272 655 358 888  36 291 422 756 792  14  98 159 675 788  62 670 227 118 765 624 698 248 380 739 666 696 225
 602 417 222 224 668 279 853 635  28 575 661 625  58 891 369 164 806 606 639 770 202 174 226 155 658 692 220 241 833  22
 607 175 630 218 645 189  47 709 702 723 529 314 570 206 171  79 553 646 599 479 190 738 127 618 838 856 665 585  59  48
 687 388 194 619 544  32 573 514 532 638  27 535 373 247 588 406 554 251 596 230 656 594 521 622 562 518  67 549 560 338
 114 501 502 525   1  43 179 609 616 516 640 745 528 574  39 453 548 496 242 597 852 610 405 480 691  44 818  17 572 558
 456 437  56 589 536 889 234 523 527 531 494 534 506  40 519  89 520 141 546 579 131 804 555 552 396 460 484 543 561 283
 580 540 108 332 704 326 526 195 276 750 256 538 837 473 576 135 173 547 497 499 571 489 352 530 245 385 464 566 368 677
 392 491 700 428 517 485 354 559 680 382 348 478 376 537 542 462 784 470 459  25 475 438 476 442 447 324 398 383 176 487
 299 214 156 685 817 509 407 413  54 468 371 876 126 498 495 860 379 900 718 467 452 433 419 298 472  13 360 649 217 490
 410 366 386 404 323 493 598 488 196 423 210 483 563 443 308 353 446 436 411 477 429 450 850 854 424 729 416 391 347 408
 356 471 858 364 399 130 500 362 678 374 390 466 789 719 440 724 361 290 282 300 439 731 454 319  68 511 345 340 863 192
 688 378 758 387  10 335 629 148 250 418 309 231 389 720 621 799 198 306 802 363 401  37 350 394 420 449 894 877 603 351
 307 754 430 657 365 329 372 311 377 601 474 712 294 593 743 591 262 261 505 381 636 409 564 305 265 481 840 402 201  93
 331 149 346 343 110 727 786 637 255 774 313 567 694 336 851 611 830 111 246 341 715 545 565 107 296 421 333 344 208 623
 143 662 393 815 384 644 782 243 278 321 252 274 816 742 153 254 355 767 435 759 320 172 686 604 239 431 327 683  57 524
 848 142 751 839 330 613 441 259 209 240 672 513 778 317 790 845 162 117 577 867 590 281 177 150 181 185  29 486 303 823
 144 620 647 681 445 634 843 146 653 482 167 213 400 328 318 600 264 771 660 205 822 235 204 865 312 166   2 870 223 595
 137 664 798 643 701 862 769 136 425 772 451 219 463  38 693 121 260 316 533 122 641 133  72 275 287 457 612 180 874 861
 116 879 301 415 736 674 508 880 663  99 197 182 193 145 882 515 169 216  65 728 761 140 757 115 868 134 866 267 187 857
 178 887 801 726 325 188 444 708 186 819 215  97 730 510 650 367 434  85 113  95 878 541 781  94 105 814 741 199  90 714
  81 507 605 152 557 614 157 109 899  96 587 129 733 503 334 357 737  73 132 648 697  55 836  60 168 504 869 592 896 828
  80 550 412 717 847 469 732  30 871 584  87 310 586  21 556 827  86 100 263 106 740   3 829 458 432 735 633  19 568 864
 304 734 539 203 617 285 237 170 897  26 893 103 779  50 711  76 842 138 873  46 427  63 872  12  82 627 875 651 800 583

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.74593e+07us (= 17459.3ms, 17.4593s)
Wall-clock time (full program): 1.74926e+07us (= 17492.6ms, 17.4926s)
Satisfaction error: 0
Number of search iterations: 5523
Number of local moves: 1681 (including on plateau: 795)
Number of local minimum: 503 (including on plateau: 88)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 857 170 181 188  95  86 874 113 210 153 339 766 833 458 790 724 202 140 674   8 107 863 692 823 600  53 864  82 887 683
 241 212 156  93  43 295 779 482 826 723 654 675 435 360 673 521 211 720 407 656 666 707 336  62 668 355  57 145 890 467
 838 525 871 117  40 146 148  65 165 238 309 272 310 785 604 619 812 793 718 348 142 175 143 129 680 740 594 545 836 808
 596 256  28 728 469 688 664 509  14 470 253 879 120 801 758 807 166 228 749   7 269 574  25 160 314 519 389 661 876 538
 457 610 679 108 536 192 159 703 105 755 627 869 834 757 700 364 425  78  76 752 337 743 251  89 697 652 410 266  66 218
 293 543 224 844 809 247 650 508 243 380 485 694 817 445 616 741 732  97 636 494 362 289 190 555  51 590 352 130 300 198
 860 167 237 388 406  68 106  88  22 868 460 708 426 665  11 554 505 139 841 894 655 213 223 865  46 456 301 642 856 845
 670 168 163 682  26  27 672  17 881  87 713 630 478 730 361 691 649 641 299 607 633 147  92 193 843 565 704 400 559 187
 495 157 152 677 847 698 572 102  64 466 706 687 318 259  61 578  21 861 155 463 795 849 297  24  81 727 112 828 855 608
 144 171 658 215 629 660 848 288 393 859 663 438 563 116  59 499  55 873 416 837 191 832 291 320 617 645 249 575 283 128
 811  71 287 439 586 305 557 738 232 800 556 595 564 475 612 401 447 370  34 787 710 246  85  67 180 549 900 573   9 529
 539 528 226 471 312 527 853 820 270 298 486  94 582 150 862 497 831  90 302 100 659 767 358 375 562 577 214 177 625 363
 603  84 771 481 418 271 523  75 338 441 567 799 585 415 324   3 548 126 372 789 583  98 763 373 690 686 735 371 507 176
 488 571 570 194 531 493 450 472  20 331 806 356 510 503 419 179 327 897 397  18  41 489 858 632 533 542 137 589 534 628
 442 392 739 366 328 386 637 544 421 411 546 268 822 714 384 433 899 229  39 403 568 518 390 395 304 330 602 412 164 429
 424 437 382  52 462  10 774 464 576 448 487 465 537 504 201 477 431 746 345 693 646 753 440  72 334 621 526 501 399 308
 449 579 591 383 158 535 725 551 479  50 751 379 886 733 354 359  48 689 816  80 385 483 344 516 444 473 709 285 258  23
 613 197 248 278 367 335 376 712 468 701 161 430 506 717 491 350 261 867 522 396 480 520 715 547  32 699 498 598  13 417
 284 744  69 172 756 326 279 428 502  16 381  91 770 353 420 639 850 230 824 454 296 631 514 653 409 895 566 513  63 387
 369 840 742 402 453 307 275 778 731 827 842 205  38 854 618 303 620  96 490 377 357 183 404 647 216 236 220 265 374 446
 262 804 773 273 530 323 292 695 716 550 196 346 351 286 560 313 781 341 643 311 207 423 332 347 340 254 657 626 316 667
 329 459 761 532 233 878 317 592 885 819 587 276 257 234 452 151 203 240 451 149 255 398 221 818 434 235 496 227 775 851
 810 762 638 252 776 759 250 162 792 242 244 306   5 748 721 772 123 109 263 461 110 394 365 634 839 104 606 558 443 267
 245 685 342 315 349 169 173 217 414 321 662 325 734 131 719 593 835 391 432 408 605 368 802 599 797  70 290 455 264 805
 274 684 896 891 821 745 277 580 796  73   6 200 260 378 343 219 872 889  36 178 737 125 705 648 204 209  79 877 231 282
 736 541 294 788 121 696 136 678 750 644 195 474 552 208 111 436 614 124 726 829 114 405 782  42 651 784 184 185 154 561
  77 601  58 814 791 765 813 768 622 635   4 174   2  19 515 676 760 702 189 127 427 681 780 669 322 132 830 484  29  49
  56 597 186 893 747 888  83 225 866 786  37 138 333 133  44  35  45 898 825 476 884 134 722 852 624  99 115 119 892 783
 135 206 882 609 846 875 222 553 103 122 281 777  54  60 319 569 101 182  74 798 500 492 883 640 581  47 880 623 517 584
 118 754 711 870  30 815  31 588 611   1 511 199  33 524 413  12 141 729 764 615 794  15 512 769 422 671 239 803 540 280

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.09722e+07us (= 20972.2ms, 20.9722s)
Wall-clock time (full program): 2.10056e+07us (= 21005.6ms, 21.0056s)
Satisfaction error: 0
Number of search iterations: 7848
Number of local moves: 2404 (including on plateau: 1173)
Number of local minimum: 712 (including on plateau: 138)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
   8  52 148 610 820  56 857 607 818  74  92  99 708 636 881 679  69 900 115 201 734  82 842  89 649 887  46 783  83 890
 156 885 108 437 659 886 872 545 539 482  48 808  90 514 848  60  55 692  19  84  65 146 866 274 667 869 242 671 883  45
 706 878 109 550  85 686 892 101 882  76 623 142 877 799 114 102  97 611 133 495 159 804 884 781 694 888  26  53 219  49
 153  29  57 867 273 126 579 634 645  66 246 801 329 822  21 698 203 893  61 779 151 833 854 173 811 702 889 530 123 167
  50 141 196 717 802  73 873 231 896 100  79 136 405 770 233 789 208 827 250 468 769 226 879 660 768 712 314 760  17 166
 130 288 116 278 296  64 844 865 846  62 171 144 371 788 147 858 174 899 191 838 777 158 864 282 891 758 124 840 185 266
 206 150  88 721 641  63 461 293 845 292 187 819 715 707 188 516 105 785 190 724 268 342 127 803 849 809 315 870 195 241
 267  36 225 778 826 117 506 816 898 230 297 839 298 622 119 756 232 733 154 832 433 284 523 183 828 244 239 687 165 348
 255 318 287 767 817 307 731 308 449 199 129 773 510 537 337 662 202 651 182 821 753 485 325 131 200 625 353 684 299 418
 407 404 264 681 723 210 829 362 604 223 168 365 602 776 249 357 301 262 377 675 895 370 326 172 436 498 393 862 322 402
 341 487 358 765 311 389 528 814 897 321 850 247 635 871 412 447 676 181 401 486 336 408 189 368 235 224 324 406 270 338
 269 222 332 745 763 568 494 435 631 220 424 720 615 375 419 688 303 349 420 852 334 149 759 309 526 396 354 234 306 304
 261 533 565 367 459 275 540 476 589 497 356 177 750 285 280 504 229 509 276 797 691 500 737 574 392 427 286 253 499 431
 291 345 394 364 438 312 762 323 493 361 440 489 739 596 214 351 520 374 616 555 657 465 378 541 369 388 863 346 473  58
 524 477 272 894 271 379 548 302 251 352 472 474 543 549 366 507 591 415 521 422 463 552 277 416 259 469 340 719 432 458
 479 464 439 601 212 454 310 290 423 617 453 428 160 387 426 300 588 441 648 637 384 429 492 633 638 557 444 475 373 333
 460 558 450 577 243 445 411 585 134 517 513 505 254 582 484 553 386 359 466 178 544 350 491 556 409 452 576 613 606 258
 584 578 328 112 575 580 245  94 421 643 586 414 143 442 413 561 446 594 569 593 197 690 515 471 603 192 652 316 488 470
 551 538 614 483 320 501 252 572 163 792 467 430 327 448 508 443 587 547 425 535  75  41 490 729 629 451 512 164 566 355
 683 457 727 218 383 511 360  77 317 462  37 531 205 240 608 496 600 599 628  11 564 743 567 573 710 305 738 107 397 661
 583 647 559 216 518 455 283 666 260  51 481 620 343  10 456 289 861 532 674 125  67 725 194 748 502 480 618  86 771 695
 478 670 682  59 592 597 236 689 139 627 757 621 313   5 519 103 680 263 562 281 319  91 294 722 668 211 339 619 639 740
 546 560 716 227 595 644 335 180 417 609 736 563  72  71 434   1 654 176 624 237 525 677 742 711  14 331 678  22 749 669
 527 632 794 279 672 700  28 663 395 880 810  38 155 132 728 755 823 135 685 113 581 735  32  27   4  18 653  96 630 795
 665 714 598  87 744  42 110 805  78 843 391 399 376 162 626  24 571 106 590 642 175 693 198 701  70 152 732 656 772 793
 746 137 790  93 221 824 121  16 193 807 646 503 825 170 570 761 658 213 718 330 542 118 145 363 184 747 787 238 705 344
 834 815 798  12 204 860 217 612 128 791 752  98 605 403 699  33 859  25 851 104 138 806  81 751  15 265   3 385 837 534
 726 640 876 400   2 713  68 784  35 782 835 554 741 295 664 120 774 215 696 111 522  47 390  39 256 161   9 536 650 874
 754   7 813 228   6 847 169 122  34 764 703 380  13 381 855 372 856 186 673 410 868 786  31 655  30  40 830 157 841 704
 875 853 812 382  44 831  54 248  95 775 766 398 796 140 697 730 207  43 800 179 529 780  23  80 209 257 836 347  20 709

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.80534e+06us (= 4805.34ms, 4.80534s)
Wall-clock time (full program): 4.83873e+06us (= 4838.73ms, 4.83873s)
Satisfaction error: 0
Number of search iterations: 1100
Number of local moves: 682 (including on plateau: 202)
Number of local minimum: 59 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 733  85 669 471  97 611 616 138 359 660 375 426 201 187 284 691 110 863 120 161 681 404 800 756 812  29 775 123 593 685
  93 866  13 888 366 351 529 895  78  52 195 721  23 270 367 897 854 107  39 862 441 515 554 607 887 198 373 301 728 445
 622  48 842 345  69  70 286 562 291  43 324 801 474 878 574 503 566 139   2 394 687 804 855  30 723  35 630 473 755 690
 715  89 108  77 183 832 334 875 514 253 783 144  74 196 209 726 843 806 861 376 798   4 794 780  15 231 119 694 417 665
  95  46 807 743  56 890 899 252 222  40 693  99 598 872 223 261 509 532 496 810 170 522 886 826 164 765 190 547  36 266
 795 671 169   5 839 844 654 278 393 171 860   3 649 150 615  87 813 683 221 211 732 670 273 613 667 176  21 185 689 378
 867 695 714 237 236 846 900 358 217 535 290 645 181 731 761 154  57 507 356 799 655 785 173  24 116 254 147 184 703 388
 303 224 372 776 299 239 328 541  80 818 596 779  53 838 219 399 267 140 258 742 245 657 432 713 304 620 323 625 758 567
 821 343 262 293 631 672 729 350 337 493 651 680 797 744 344 332 197 666 512 274 392 160 374 500 255 347 364 242 510 243
 325 790 202 475 377 287 584 603 759 786 543 528 423 492 142 115 735   9 167 191 679 662 131 434 320 314 639 774 279 750
 397 835 739 637 246 280  60 318 824 256  64  17 152 864 712 465 346 653 751 109 447 560 636  58 749 424 454 578 705 179
  22 214 787 530   8  20 698 269 353 322 847 206 580 133 400 416 521 815 720 894 675 335 618 555 752 590 354 336 218 327
 444 781 339 520 540 207 856 837 819 643 247 363 311 485 419 234 753  71 852 646 316 288 118 178 544  61  67 442 656 478
 709  38 460 632 230 158 249 386 384 153 564 505 421  27 858 477 893 857 180 841 415 439 612 462 295 452 889 111 385 433
 130 428 677 149 814 483 391 581 791 481 518 704 435 850 883  83 145 102 539 414 238 340 313 582  92 259 403 592 608 490
 360 369 525 405 480 777 438 112 727 307 128  68 825 803 499 881 172 296 748 526 457 275 213 828 276 383 157 551 476 453
 260 412 634 588 836 466 205 229 401 572 467 317 833 380 644 331 524 381 326 594 348 684  44 382 489 647 200 519  62 740
 294 446 192 885 569 101 387 450 272 834 549 504 458 436 193 162 811 771 674  84 583 451 556 546 103 486 491 754 233 240
  37 601 271 310 708 741 365 591 175 468 808 506 716  75 497 628 668 784   6 635 536 186 575  54  72 650 456 762 502 132
 626 793 859 165 531  65  47 268 623 606 297 156 379  11 586 782 129 809 463  34 338 561 577 429 227 678 865 589 609 413
 472 455  45 368 736 166 501 552 792 892 461 568 579  91 570 663 406 341 621  25 117 789 174 208 768 553 484 126 333 659
 537  42 610 315 619  50  14 877 409 349  63 235 533 305 298 746 104 309 599 718 707 595 321 769 773 545 745 692 241 395
 106 640 719 402 884 565 408 494 548 605 127 396 431 168 204 638 189 495 430 710 443 199 361  33 464 617 418 829 281 711
 587 633 448 232  10 538 896 122 302 614 215 362 124 737 411 113 527 702 624  96 576 228 760  81 772 673 523  66 882 661
 573 802  18  31 220 371 319 282 717   1 816 437 876 830 851 724 511  12 738 105 470 257 770 664  76 597 725 487  32 203
 557 159 629 265  82 648 357 840 151   7 143 676 688 244 210 449 697 488 696 730  55 558 848 517 831 398 853 194 216 329
 767 585 225 312 874 868 763 289 764 788 627 686 263 330 251 177 283  41 410 869 407 248  94 873 277 642 136 134  16 516
  49 747 146 827 699 563  90 722 125 817 121 805 559 602 641 766 141 440 469 459 137 300 135 308 871 600 479 482 342  73
 706 652 212 734 427  28 114 425 292 870 879 823  59 604 550 226 658 188 352  51  88 891 420 163 571 534 390 422 880 306
 513  26 822 898 849 778 498  19 796  79 264 355 820 182 100 389  86 508 285 155 682 148  98 542 250 757 845 701 370 700

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.08851e+07us (= 30885.1ms, 30.8851s)
Wall-clock time (full program): 3.09185e+07us (= 30918.5ms, 30.9185s)
Satisfaction error: 0
Number of search iterations: 12064
Number of local moves: 3050 (including on plateau: 1777)
Number of local minimum: 1084 (including on plateau: 208)
Number of resets: 5
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 269 154 570 699 774 327 702 155 145 652 491 799 333 175 624 898 473 776 560 323 497 234 663 309 225 313 515 534 290  36
 630 900 561 727 820 250 267 410 501 531 707  19  57 605 428  97 895 416 166 743 392 237 224 800 686 366 365 402  56 257
 434  48 357 339 216 190 373 634 573 585 814 620 433 647  88 157 728 315 299 566 106 749 530 613 803 245 782 343  69 859
 894 797 700  46  66 117 608 519 462 875 640 279 120 378  99 544 231 142 687 706 651 459 848 144 615 568 413  30 334 543
 431 129 860 203  26 704 833 499 338  65 837 666 527 598 494 146 126 714 182 843  52  47 567 347 632 114 618 836 578 503
 857 761 219 768 255 813 128 149   5 780 495 829 133  77 823 239 472 429 221 244 324  15 551 263 862 722 476 649 694 262
 409 153 168 616 709 563 253 724 606 420 271 230 483 205 202 826 625  54 622 655 111 506 747 773 206  55 646 304 715 658
 730 890  41 275 572 609 277 887 264 328 896 426 794 314 721 233 222   1 170 488 805 215 337 179 294 623 514 115 464 831
 214 891 866 750 827 696 148 204 104 592  44 181 594 535 335  90  95 137 370 415 832 788 742 298  80 757 889 575 406  60
 223 877 353 660 127  59 300 178 475 798 897 604 161 884 856 243 256 552 674 340  78 693  29 247 208 584 417 587 272 883
 858 536 321 740  28 403  72 764 196 363 644 791 303 602  63 197 319 793 881 688 879 386 100 171 596 849 344 186 283 159
 143 612 850 297 789  10 830 528 132 815 130 867 689  82  74 342 177 441 806 436 286 748 217 790 320 301 771 325 261 446
 352 885 851 451 397 710 505 424  84 539 458 136 712 454 287 305 418 872 467 442 381 131 125   7 777 302 427 524 422 670
 465 396 518 359 595 481 399 332 781 291 698 331 586 412 318 517 455 559 574 558 189 364 371  38 643 711 110 629 382 453
 101 839 124 668 692 199 853 461 266 511  33 838 520 548 151 553 695 725 252  92 296 639 502 362 235 444 828 119 550 419
 227 240 280 375 869 525  53 139 863 576 317 407 248 882 209 648 390 697 395 842 401 783 549 174 685 367 289 510 188 387
 538 778 308  91 273 556 588 822 665 312 265 105 380 285 873 801  71 246 868 474 438 322 270 385 871 150 376 892 112 400
  76 439 346 540 533 821 804 238 555 541  18  35 664 597 880 899  50 384 886  51  40 661  64 507 220 369 537 690 351 719
 108 489 708 345  11 617  25  14 498   6 678 865 207 226  67 679 619 460 425 599 874 581 824 657 440 682  93 187 818 713
 164 141 109  23 745 383 611 160 443  16 878 469 677 242 254 405 751  85 281 888 102 785 628 735 306 733 756 676 307 762
 716 810 103 529 554 180 870 140 705  31 122 354 388 636 729 389 732 893 509 165 107 582 521 562  70 557  79 484 662 336
 447 163  98 368 744 569 841 779  68 118 293 796 767 194 546 852 775 492 311 398 249 645 391 667  12 526 169 681 358 198
 753 471 232 600 229 593 356 738 739 456 601 211 825 631 671 147 811  27  81 212 408 330 542 840 414 361 675 394   9 158
 847  45 184  37 172 326 278 134 564 844 516 423 432 457 864 755 754 731 348  13 861 638 156 737 763 218 490 201 669  58
 736 176 876   2 741 435 626 479 310 185  34 437   4 673 329 404 512 377 482 173 701 374 486 683 360 734 372 274 817 723
 167  22 720 513 355 834 236 523 855 213 195 659 450 393 583  73 610 545 478 452 603  87 193 627 579 183 316 703 759 589
  75  20 607 792 292  24 295 816 637 752 786 468 590   3 284 121 276 654 135 162 808 760 633 445 421 718  32 493 766 650
 653 765 466 496 349 614 787  86 854 547   8 210 463 259 835 812 350  96  94 672 769 288 485  62 680 565  21 500 591 138
 770  49 642 448 487  61 580 772 784 152 241 260 258 726 251 341 123  83 635 684 845  89 809 571 470 282 449 480 641 532
 228  39 477 758 268 846  17 807  43 621 508 200 717 795 577 802 504 819 656 191 430 379 411 522  42 116 746 192 691 113

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.86337e+07us (= 28633.7ms, 28.6337s)
Wall-clock time (full program): 2.86665e+07us (= 28666.5ms, 28.6665s)
Satisfaction error: 0
Number of search iterations: 10615
Number of local moves: 2787 (including on plateau: 1440)
Number of local minimum: 980 (including on plateau: 156)
Number of resets: 5
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 899 777 391 203 124 574 732 201 663 719 655 623 594  39  10 461 607 112 808 758 422  25 257 247 624 630 524 115 383 338
 801  79  61 253 755 821 345 193  40 318 638 370 665  45 668  21 633 428 731 144 479 541 320 876 816 415 412 244 866 537
 362 591 561 653 330  91 631 217 893 894 324  12 855 699 518 844 157  52 442 418 852 179 795 562 156 259  42 254  11 861
 511 806 859 323 165 584 311 236 424  59 289 285 804 803 202 268 227 634 220 354 637 766 385 356 351 798 833 102 225 698
 135  85 218 396 387 155 863  70 897 885 514 602 558 477 690 651 700  27 733 797 314 468  75 209 526 462 131 186 470 834
 576 153 871 119 864 553  56 506 142  94 666 261 104 669  38 497 183 223 815 523  43 820 394 686 759 359 337 868 846 490
 366 727  13 332 234  48 358 780  18 101 325 557 347 740 206 146 715 760 790 565 279 712 828 122 249 416 692 466 786 837
 226 604 575 211   8 116 817  41 374 235 303 856 382 327 483 769  68 177 842 679 784 386 827 297  46 831 640 187 782 642
 467 281 708 658 372 413 312 886 180 676 207  86 659 717 484 597 577 173 702 423   5 723 499 219 677 326 369 166 812 141
 266 775 618 147 239 438 825 884 694 139 118 613 791 874 688 343 231 819 851  26 750 126 838 210 181 480  80 106 265 100
 695 250  57 619 127 656 739 174 693 393 434 429 426  50 772 304 547  74  49 836 701 414 745 657 238 108 136 721 796 675
 197 377 488 875 204 363 389  16 331 388 567 865 198 192 854 726 435 407 269 753 830 873 578 128 527 495 182 476  17 515
 185 222 644 883 449 299 579 880 520 267 381 402 516 822 841  14 411 368   2 111  34 212 742 845 329 811 826 436 421  63
 334 346 530 573  23 405 536 459 794 716 491  24 284 543 534 286  33 292 545 802   3 617 569 294 762 858 443 290 237 892
  67  71 757  28 522 357 542 364 355 123 540 276 781 444 720 454 456 872 307 848 586 399 559 371 889 310  66 684 431 336
  51 737 608 793 379 400 199 588 494 805 333 272 612 298 246 169 572 293 341  32  60 689 538 417 714 664 792 134 605 680
 823 384 213 486   9 473  83 900 891 890  58 580 818 288 589 152 401 687 485 278 590 263  64 682 296 344 482  65 406 835
 117 620 214 738 807 532 763 614 615 563 554 378  36 200 408 232 168 380   6 556 649 120 162 560 788 280 546 674 761 474
 632  73 150 145 764 654 549 395 767 743 306 151 595 667 262 190 704 410  82 529 315 460 287 446 592 221 779 646 500 501
 587 508 552 709 599 551 471 754 270 683  47 191 403  97 271 230 121 697 671 705 849 582 505 703  53 242 404 447 609   4
 465 593 208 164 398 628 853  20  55 224 741 603 539 463 273 746 645 696 340 550 171 517 596 133 641 321 729 724 464  15
 420 710 847 629 771 783 188  72 302 450 672 734 130 502 610 504 748 625 722  88 283 129  22 295 109 749  90 867 159 305
 519  87 882 349 611 581 342 525 361 533 308 437  37 568 570 430 800 850 509  76 317 184 132 498 670 478 728 879  93 161
 282 600 441 512 643 566 736 178 513 877 773 626 427 274  35 365 744 172 322 301 453 555 809 661 328  96 260 544 255 167
 392 713 205 256 862  81 245 564 785 711 635 445 176 601   7 616 718 662 251 216 481 756 149 189 681 571 138 673 622 114
 507 725 103 258 799 277 691 895  62 606 409 829  77 458 770 869  30 765 639 107 810 397 660 125  95 843  19 367 163 160
 452 375 472 898 229 707  29 390 432  78 778 881 233 339 531 870 548 264 419 252 319 528 348 789 105 113 475 768  54 839
 636 455 433 194 840 585  84 457 425  98 360 195 647 440   1 814 510  31 154 774 824 439 248 751 857 196 650 730 335 352
 860 170 678 215 648  89  99 469 175 110 776 888 373 503 747 496 291 752 228 521  92 492 275 300 316 598 832 627 652 243
 685 621 158 896 353 735 148 787 350 137 313  44 448 376 487 451 535 813 240 493 583 143 309 887 140 241 878  69 489 706

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.07844e+07us (= 30784.4ms, 30.7844s)
Wall-clock time (full program): 3.08177e+07us (= 30817.7ms, 30.8177s)
Satisfaction error: 0
Number of search iterations: 12471
Number of local moves: 3167 (including on plateau: 1497)
Number of local minimum: 1126 (including on plateau: 176)
Number of resets: 6
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 363 273 556 192 525 221 706  44 863 599  47 429  71 199 809 823  38 761 782 585 778 568  49 268 634 202 553 755  53 769
 547 140 101 389 201 852 882  67 844 469 495 119  90 406 814 810 108 644 155 281 141 800 707 877 116 139 486 784 834 217
 879 753 184 801 170  70 899 503 442 462 260 724 225 206 482 723 171 109 609  66 293 836 187 721 350 696 692 536 203 263
 839 320 461 552 813 209 783  73  96  15 779  83 134 198 765 160 207 205 781 453 204 106 231 687 898 490 869 862 400 842
 117  21  34 216 764 893 772 213 750  82 244 451 645 528 737 705 243 821 628 729 543 856  75 100 137 335 197 786 654 239
 290 794 726  74  16 894 806  30  58 680 501 336 712 403 343 669  10 693 189 811 223 179 590 481 604 758 129 748  68 700
 322 542 881 402 880  85 485 688 900 674 636 424 387 181 847  60 128 138 365 238 152 360 411 118 845 114 731  86 683 752
 200 866 215 236 859 334 296 875 346 265 885 262  22 314 480 785  65 876 804 883 417  92 789 156 727 169  45 812 193 247
 210 468 237 597 299 370 661 222 639 321 258 460 381 763 220 767 347 672 598 822 226 341 323 575 658 715 626   1 497 241
 235 648 130 257 232 280 499 530 421  35 677 195 447 611 733 404 518  95 777 618 722 303 308 617 858 642 164 714 663 182
 825 269 884 342 366 317 537 144 555 521  24 837 190 656 304 562  27  87 330 369 410 670 319 798 725 848 145 734 288 432
 487 178 850 450 133 449 131 474 807 271 471 840 286 545 298 135 861 338 253 631 186 512 301 573 601 287 685 815 285 382
 540 491 251 359 757 318 774 833 456 292 849 289 409 274 660 412  19 754 388 619 272 252 284 466 593 445 832 125 176 326
 488  18  56 529 855 372 531 331 464 246 399 373 802 652 420 479 608 357 560 230 676 550 361 872 380 362 632 162 396 354
 483 586 440  29 398 744 582 873  69 419 327 436 868 828  41 596 218 878 390 150   5 242 393 489 527 546 348 407 780 423
 224 414 646 558 340 175 233 214 640 612 535 699 434 364 211 591 515 384 505 465 657 519 261 653 374 565 484 728 245 270
 371 328 736 742  39 564  57 249 375 526 353 896 166 379 500 475 324 574  84 416 513 563 627 719 427 697 770 302 148 595
 496 664  46 457 557 532   7 890 180 395 559 824  31 534 153 577 422 458 579 146 349 441 867 472 368 392 623 426 554 516
 691 793 492 829 795 603 377 494 506 446 378 808 448  25 112 111 889 647  81  52 279 415 455 613 428  64 620 397  26 641
 864 759 294  79  50 154 167 888 394 566 355 578 430 266 570  43 508 356 549 843 666 745 622  93 614 583 339  11 870 259
 433 651 418 678 592 686 132 587 637   6 316 165 665 684 668 805 498 594  61 391 437 766 183 264 126  97 633 254 467 621
 329 520 571 476 504 463  48 358  17 690 773 452 681  51 662 580 756 572 790 853 514 352 675 228 157   4 159  63 610 607
 256 163 701 345 517 718 310 234 702 835 188 857 892 860 115  12 671 255 240 219 588 105 435 655 168 589 523 275 548 539
 147 600 405 309 124 831 444 300 315 886 576  99 401 544 643 113 717 713 649 367 337 698 413 567 120 312 438 635 708 104
 695 172 771 408 425 746 827 625 191 803 127  72 816 383 768  59 820  23 177  14 830 630 533   8 306 887  89 616 606  88
 502 689 276 385  40 739 477 775 103 194 874  98 738 740  77 871 854  62 694 248 762 325 174 267 443 227 679 277 818 107
 720 376 732 709  78 581 511 454 788 510 791 313 638 650 173 102 522 459  37 615 208 826 797 196  33 624  36 283 229 524
 212 569 584 551 851 185 351 730  20 710  32 704 891 250 749 673 760 333   2 787 703 110 602 538 123  42  80 561  13 799
 439 143 716 667 865  76 136 386 776 478 297 541 142 278 158 122 895 629 711 332 605   9 751 295 682 846  91  55 659 735
 311 307 121 897 470  54  94 431 161 507 509 151 473 743   3 291 796  28 747 282 819 344 792 149 493 838 817 305 841 741

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.28809e+07us (= 22880.9ms, 22.8809s)
Wall-clock time (full program): 2.29136e+07us (= 22913.6ms, 22.9136s)
Satisfaction error: 0
Number of search iterations: 8844
Number of local moves: 2283 (including on plateau: 1122)
Number of local minimum: 790 (including on plateau: 161)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 895  87 878 575 317  84 111 618 493 157 142   1 749 450 514 710  62  60 740 655 189 610 585 703  66 240 849 505 577 893
 171 122  75 620 140  61  44 873 206 480 314 805 671 784 809 775 300   2  54 705 138 804 857  28 863 580 546 701 870 117
 884 131 698 545 837 277 109 881 147 738 524 676 880 766 233  69  56  97 827 108 588 318 424 135 832 102  35 831 757  10
 106 264 255  23 127 116 100 898  80 356 501 792 767 195 867  36 279 872 250 472 180 879 850  58 868 848 841 236 500 899
  77 892 247 861 823 219 286 658  83 426 894 112 739  88 201 875 302 598  89 542 303 835 627 399 143 896 162  93 802 243
 890 772 343 537 165 866 258 590 606 484 182 839 699 368  94 822 753 124 460 161 326 640 341  48 811 516 276 175 148 221
 313 414 155 608 115 406 883 673 150 403 467 119 481 192 623 231 887 196 649 818 232 630 656 789 204 234 297 405 758 527
 383 645 172 665 177 596 209 628 342 779 295 669 781 661 719 776 348 361 572 871 174 680 181 334 214 227 288 246  90 432
 110 239 222 834 166 237 688 682 900 765 420 463 134 178 677 578 438 216  85 336 215 261 888 490  96 828 838 168 477 886
 187 191 207 797 268 164 351 633 555 459 830 734 691 340 869 602 225 254 549 212 657 378 721 380  79 309 453 198 807 415
 325 795 345 123 248 747 291 806 515 521  27 407 600 186 229 448 275 854 611 540 419 685 506 228 287 499 800 584 156 458
 708 294 103 576 307 852 259 650 328 563  99 845 530 337  31 864 353 194 429 541 621 553  32 663   7 384 301 825 551 715
 213 670 159 648 193 401 332 659 312 391 518 586 299  68 786 770 333 176 625 612 724 528 278 507 504 331 208 517 398 769
 397 455 381 790 686 417 782 444 152  11 363 532 511 357 367 362 581 335 794 371 386 587 296 390 558  26 547 840 360 437
 441 508 533 446 465 306 329 265 605 461 128 449 522 389 889 238 394 820 675 445 443 249 387 565 382 439 418 475 440 409
 783 473 281 430 316 720 462 339 564 271 535 483 393 349 730 457 498 377 486 151 434 369 510  71 385 494 538 529 433 654
 226 428 305 321 773 469 482 154 560 442 567 464 375 392 591 273 205 853 536 416 366 492 707 634 491 664 235 346 425 323
 534 435 636 423 544 503 502 270 539 454 202 793 185 489 496 431 456  42 798 573 513 410 561  37 422  91 756 167 787 466
 638 355 251 311 520 574 408 105 400 726 559 285 282 197 447 601 595 474 427 674 210 762 604 718  19 643 622 801 170 137
 712 632 717  38 379 554 556 471 304 144 476 290 217 579  39 244 603 509 862 330 569 315 566 280 723 626 751 651  24 354
 748  18 733 365 709 616 697 308 274 241 451  13 327 404 190  15 743 735 562 745  47 256 624 641 512 732 413 731 372 293
 136 570 173 179 687 613 690 218 523  29 891 652 526 571  57 352 716 374 141 684 761 421 114 742 583 667  64 118 744 519
 568 858 689  55 609  72 843   5 774  70 552  74 266 763 350  59 668 855 817  33 592 120  43 711 760 768 678  46 200 617
 754 470 706 223 396 629  16 319 752 267 607 126 614 788 436 230 696 260 468  30 599 322 702 722  34 746 163 263 364 813
  25  52 874 411 826  95 851 153 780 359 589 245 199 810 220 695 525 713 146  14 833  49 149 829 488 242 692 344 582 725
 642  81 791 133 615 653 478 370 557 358 130 639 292 593 635 785 289 737 132 821 619 324 125 646 679 412 188 700  40  51
 897 771 882 160  12 298 662   9 666 819 683 104 497 550  41 320 184 672 284 660 736  53 145 759 812  45 402 777 594  21
 631 824   4 495 844 750 129 637 262 816  63 253 139 728 548 877 211 860 158 543 452  78 257   6 808  22 778 376 252 714
   8 681 815 487 395 479 842 101 814 729 647 727  76  67 183  17 846 803 224 283 704 310 693 203 764 531 107 847  82  50
 113 388 885 836 856 741 865  98 272 796 859 338  73 876 644   3 694  92  65 169 485 597  86 799 121 373 269  20 755 347

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.47301e+07us (= 14730.1ms, 14.7301s)
Wall-clock time (full program): 1.47631e+07us (= 14763.1ms, 14.7631s)
Satisfaction error: 0
Number of search iterations: 4811
Number of local moves: 1440 (including on plateau: 524)
Number of local minimum: 404 (including on plateau: 60)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 555 622 526 181 897 416 111 543 140 360 109 550 500 435 675 186 333 385 105 717 796 216 446 859 174 691 863 290 784  50
 307 458 788 292 799 145 478 530 806 240 664  85 107 437 762 889  65 826  71 261 738 417  47 765  62 227 723 380 841 305
 241 377 444 143 720 440 274 620 454 488 613 754 545 225 702 667 587 183 558 150 231 814  90 800 772 366 312 141 408 396
 871 699 612 853 224 842 108 365 590 139 462 106 371 513 662 113 239 414 456 313 233 610 467 180 714 510 118 802 423 506
 101 383  40 740 625 154 153 531 867 868 742  68 291 893 249 397 179 556 494 203 852 883 265 655 516  92 341 786 196 395
 430 538 824 638 845  56  82 177 160 898 194 242 541 573 212 821 103 789 668 155 125 168 666 287 698 701 147 619 284 874
 421 117   5  59 755 877 571 658 647 665 509 812 461 405 551  87 327   2 894 184 451 142 281 659 330 807 790 794  72 182
 652 753 575 870  30 642 719 528 599 128 492 264 567 367 213 769 279 276 348 607 811  95 527 554  97 594 195  46 463 455
 875 749 232 882 320 475 688 585 311 299  69 136 487 411 671  54 262 448 686 149 170 722 199  64 267 860 498 885 566 495
 452 748 335 419  75 369 503 447 822 884 589  44 761 346 138 156 146 829 226 819 564 222 257 670 586 654 172  16 745 521
 793 692 424 624 301 537 532 517 129 721 501 493 244 387 200 650 230 403 374 900 148 332 739 643 102 696 482 260 362  99
 171  83 295 616  24 271 325 349 252 351 576 644  41 844 862 886 409 851 727 428 680 151 167 602 133 834 400 757 336 450
 338 235 850 286 562 314 104  20  86 221 223 608 443 778 310 491 679 840 785 827 381 158 816 542  79 303 393 634 337 872
 318 324 470 539 773 485 598 206 869  70 297 746 549 715  48 273 896 100 394 135 553 285 472 484 479 636 552 266 820 163
 468 229 278 210 453 630  32 441 159 818  77 791   3 459 412 730 520 782 583 570 391 673 750 339 728   9 533 250 732 465
 237 198 169 215 355 445  18 651 536 388 340 130 809 193 601 627 864  28 592 632 302 618 471 401 855 190 557 669 711 713
 519 693 705 296 561 507 124  74 676 165 892 729 568 817 321 368 197 283 334 258  67 469 438 621 563 899 617 384 162 208
 426 672 511 716 407 269 878 808 734 502 175 427 603  36 263 255 268 708 609  53 442 402 756 382  21  27 890 319 359 597
 477  93 534 578 815 645 353 234 694 211 768 110 611  31 595 425 559 548 415 865 114 429 744 343  37 137 189 565 770 626
 508 483 329  89  19 656 759 735  78 641 760 378 347 731 217 497 695 579 121  84 710 781  49 289 547 600 219 736 460 418
  73  23 737 228 389 726 684 628 247 358 605 741 433  38 356  45 505 280 345 606 144 173 615 623 848 725 481 895 832 132
 122 529   6 544  10 376 704 486 633  96 581 504 474   8 660  35 631 596 300 689 866 390 361 764 112 489 496 648 681 724
 687 372 678 524 253 763 805 205 535 331 404 518 787  55  33 804  81 771 176 152 767 891 836 245 847  11  22 685   7 270
 876 480 838 220 432 352 322 569 525 342 574  58 540   1 856 674 350 123 709 363 126 364 246  60 780 857 775 191 308 604
 164 758 294 653 879  34 682  98 192 649 774 858 783 661 309 629 881 204 522 639 304 259 116 218 700  25 810  52 277  91
 466 635 752 801  76  15 823 515 272 588 316 514 373 207 798 275 420   4 357 473 410 797 697 161 399 185 830 476 243 637
 718 236 777 214 580 238  51 449  29 512 683 422 282 831 413 837 846 354 187 861 464 434 887  66 833 157 288 256 317 293
 490 439 248 835 375 839 436 134 499 888 120 792  26 593 209 115 690 188  39 751 370 706 406 582 546 201 323 523 298 854
 747  17 178 119  88 254 795 828 328 379  80 166 766 712 560 703 431 386 849  94 733 663 398 614 677 640 457  63  14 776
  12 880  61 131 873 743 803 584 646 315 326 825 202 813 657  57 843 779 591 577 572 251 306  43  13 392  42 127 707 344

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.01455e+07us (= 30145.5ms, 30.1455s)
Wall-clock time (full program): 3.01788e+07us (= 30178.8ms, 30.1788s)
Satisfaction error: 0
Number of search iterations: 12617
Number of local moves: 3026 (including on plateau: 1229)
Number of local minimum: 1238 (including on plateau: 181)
Number of resets: 7
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 302 879 871 870  56   7 844  63 882 319  53 796 885  98 498 606 889 634 843  75  34 287 423 845  81  70 443 813  29  20
  14 857 784  91  43 774  17 194 718 694  37 252 665  68 242  61 883 854 840 795 193 166 474 868 309  65 147 769 839 802
 858 827 145 866 826 792 453  31 747 185 797  96 748 782 153 800 853 674 167 123  16  52 375 285 328 604  90   4 735 103
 753 847 861 732 128 819 611 241 699 225 756  36 887   5 179 725 742   6 408 142  21  15 251 864 129 624  24 723 691 371
 859 681 212 772   1 872 621  62 737 291 758 157 825  82 214 874 768 554 133 809  13 111  44 807 215 226  46 815 644 312
 684 616 783 688 686 245 838 134 359 310 662 187 833  10 177 746 765 116 811 806 191  47 188 248   8  35 253 600 877 612
 556 552 736 679 698 199 730 174 805 638 172 393 724  92  26 745 761 690 773 722  18 114  67   2  84 112 239 752 647 615
  23 667 122 663 581 829 318  38 791 392 702 120 657 717  88 654 614 655 770 619 460 590 267 280  78  83  99 670 740 228
 786 675 162  95 721 389 444 283 708 186 728 109 785 547  41 603 664 683 586 837 204 139 126  48 289 651 216 596 680 534
 530 630 100 676 461 582  57 576 632 138 682 568 648 446  42 477 527 559  87 734 433 669 668 160 361  28 258 609 645 532
 652   9 282 693 494  12 627   3 569 539 646 207 639 566 455 642 661 525 580 146 452 672 418 585  19 592  51 622 550 607
 519 562 101 553 558 798 467 290 599 154 706  22 190 531 537 495 575 687 499 344 507 588 196 543 471 626 284 561 397 155
 297 593  30 628 386 480 457 567 465 237 666 631 636 536 601 335  32  11 238 571 564 643 572 366 579 591 195 587 540 481
 526 438  25 470 369 456 513 516 394 560 476 427 479 504 425 317 493 524 492 466 469  58 381 383 602 649 448 432 459 764
 372 327 484 363 538 308 439 521 445 574 528 529 367 551 442 437 202 503 502 435 447 641 320 542 355 368 515 577 544 339
 508 409 522 426 264 350 757 511 449 548 322 488 422 485 417 420 404 419 398 497 549 501 546 378 589 316 399 458 358 405
 303 491 412 400 505 487 472 473 351 415 338 618 332 523 478 293 535 489 653 323 434 349 483 424 713 450 608 352 347 464
 373 396 357 391 206 288 739 584 406 517 296 276 703 360 333 512 270 482 685 255 500 388 775 410 379 382 777 387 307 781
 265 244 365 305 348 565 281 731 304 707 384 834 230 395 719 249 510 353 794 431 233 370 801 413 594 401 660 272 414 343
 268 127 294 421 496 514 767 329 380 860 376 430 306 462 862 300 441 364 490 518 324 331 788 429 509 334 640 168 354 633
 416 345 454 385 436 273 635 714 229 726 346 411 259 298 760 260 336 169 842 171 541 286 780 313 749 342 659 256 325 799
 341 295 377 301 223 831 236 884 894 678 243 326 271 275 873 222 263 261 250 257 716 189 617 789 779 570 637 158 356 403
 201 161 710 330 150 269 180 876 278 692 321 362 311 315 266 176 115 849 463 227 763 793 715 776 804 733 755 374 210 340
 192 220 671  73 175 822 897 677 108 888 211 711  80 875 673 314 262 159 203 198 620 899 851 205 337 428 878 144 224 520
 218 208 697 277 771 893 173 695 156 451 184 709  59 279 625 828 136 254 232 163 814 754 869 817 486 629 705 113 235  85
 867 130 650 181 555 117 402 274  60 578 118 855 178 583 750 221 183 231 170 892 808 830 729 468 751 613 898  55 247 121
 152  66 563 886 891 135 149 881 151 197 812 848 148 744 704 125 246 213 209 818 743 597 475 440 738 573 164 623 105 119
 863 107 545 132 820 292 102 533  74 124 219 610 131 727 816 182 141 557  27 200 846 656 137  33 762 841 835 832 865 506
 741 766 595  64 234  45 240 850  39 598 836 720  40 856 407 106  79 823 299  89 778 900  69  93 658 890 896  50  54 700
  76 390 605 104 895  72  49 810  86  94 140 787  77 803 712 790 165 217  71 852 824 880 110 701 759 689 696 143  97 821

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.80486e+06us (= 3804.86ms, 3.80486s)
Wall-clock time (full program): 3.83804e+06us (= 3838.04ms, 3.83804s)
Satisfaction error: 0
Number of search iterations: 878
Number of local moves: 618 (including on plateau: 162)
Number of local minimum: 45 (including on plateau: 24)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 873 557 802 720 884  64 117 172 672 605 213 175 452 505 717 875 241 126 705 248 142 749 660 861 503  57 147 101 205 367
 156 421 779 806 877 121 311 226 426 330  78 675 437 504 642 693 841   8 285 346 465 430 809 825 509 469  71 598 359  18
 770 140 874  17  23  19 834 518 797  68 763 800 458 707 673 758 775  11 114 108 414 736 879   3 133  32 803  15 487 786
 561 843 442 136 769 361 831 725 501 160 178 520 448 876  20 138 630 445 640  28  83 767 261  56 714   4 798 387 301 892
 210 697 618 106  99 252 109 777 193 745 737 880 398 823 131 565 744 299 473 298 124 856 709  66 765 413 255 176 846 151
 132 869 345 591 243 739 183 244 655 155 277 319 119 254  87 161 757 774 845 538 807 726 849 488 556 204 127  96 553 822
 829  86  82  94 702 804 578 294 721 365 258 233 182 194 191 401 350 164 859 264 784 796 847 625 507 657 282 216 810 340
 236 169 166 128 351 778 342 863 840 218 466 584 323 652 316 262 887 867 288 890 302  46 486   6 208 397 668 363 742 671
 304 300 596 665 404 519 679 189 230 407 483 461 626 502 576 173 327 888 354 731 150 496 479 271 766 372 287 165 364 751
 718 627 278 811 352 500  47 269 539 516  59 893 828 357 382  43 415 853 267 134 259 620 593 688 402 239 852 240 416 318
 677 439 866 284 315 787 729  27 386 245  21 543 788 540 385 274 844 305 383 184 185 110 102 732 449 857 899 542 349 268
 412 666 812 162 272 780 280 224 868  37 482  90 790 791 581 411 434 303 676 332 347 747 570 123 276 192 188 381 493 795
 537 366 894 400  53 639 116 148 694 423 270 740 491 587  70  49 429 891 263 237 748 836 477 455 529  24 544 604 225 776
 664 292 139 209 317 406 733 619 756 395 485 441 295 741 222 499 573 686 418 409 167 558  50 835 550 379 309 651 393 324
 478 260 575 624 453 484 699 464 242 530 713 286 333 562 462 613 250 515 376 785 460 186 525  76 336 555 293 506 341 533
  16 180  36 600 443 526 545 554 494  25 824 896 424 546 498 467 474 369 816 662 291 602 513 344 527 614 265 212 296 456
 459 446  55 113 390 450 472 476 586 435 862 326 312 582 510 356 750 348 521 468 569 373 608 734 480  12 755 281 137 649
  14 457 417 394 120 567 492 273 320 860 103 514 871 885 154 206 322 792 634  72 547 105 481 471 864 762  13 574 535 696
  33 201 577 658 654 228 781 568 290 669 168 389 419 594 289 592 566 249 227 490  97 308 377 153 760 895 752 563 643 325
 670 572 234 279  58 585 403 512 865 589   1 307 635 229 528 615  62 405 753 629 444 220 158 609 196 610 738 628 541 440
 799 251 329 599 475 355 129 532 159 214 661 636 534 603 522 683  88 564 712 663  91 247 219 552 451 579 819 396 601  52
 692 638 682 674  77 283  45 889 122 118 246  93 517  26 392 606 588  29 621 428 886 632 832 882 115 690 306 685 680  41
 814 436 768 559 648 337 235 143 266 633 678  61  75 257 761   9 107 689  44 746 783 399  34 653 728 723 410 551  85 883
 793 571 135 724 727 463 427 597 112 719 497 149 622  39  65 850 617 198 331 870 343 616  92   7 297 508 647 794 607  98
 420 898  81   5 703 438 163 422 211 706 698 900 207  60 851  31  63 495 645 659 815 362 523 773 321 691 125 338 711 200
  69   2 701 687 590 631 722 391  74 789 818 358 611 374 695 716 170 612 157 681 704 232  40 174 313 710 187 872 179 256
 231 801  35 339 335 371 531  89 735 743 772 353 221  30 623 684 190 536  10 433 380  51 203 454 388 817 897 764 855 644
 759  67 827 637 837 334 826 650 378 813 144 310 253  80 858 431 223 111 177 152 842 217  54 854 368 881 408 580 360  84
 141 715 275 646 524 656 489 878 202 195 730 199 146 511 754 805 583 838 100 197 839  22 771 370  79  42 432 595  73 708
  48 548  95 848 820  38 667 782 181 808 830 384 700 104 560 549 215 145 821 833 447 470 314 375 425 130 238 641 328 171

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.63171e+07us (= 16317.1ms, 16.3171s)
Wall-clock time (full program): 1.63504e+07us (= 16350.4ms, 16.3504s)
Satisfaction error: 0
Number of search iterations: 5829
Number of local moves: 1753 (including on plateau: 717)
Number of local minimum: 529 (including on plateau: 103)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  48 812 786   7 855 782 784  50 759 161 486 298 252 810 746 764  14  47 117 807 852  23   5  57  21 781 774  65 888 664
 311  49 162 773 489 882 836 191 840 881 790 833  25  42 251 243  63 847 880 793  33 113  27 100 850 695 659 158 377 322
  35 204 428 651 109 165 239 342 824 872  92 878  77 766 863 680   9 762 743 124 798 760 211 287  75 389 864  20 885 363
 620  34  52 692 750 250 796  94 811 870 596 769 593 286 450 724  36 217 666 732  87  16 445 283 600 454 280 282 800 230
 193 105 131 779 281 775 890  74 705 845 483 699  22 343 210 694 898 842  91 805 661   4 212 894 416 832 494  44  11  82
 306 227  86 799 147 388 808  79 690 795 134 720 112 126 568 467 218 857 755 772 756 684  55 510 118 163 709 189 609 668
 132 726 712 826 177 638  66 228 802 102 667 670 194 648 159 477 818 757 687  19 821 838 275  88 645 178 636 367 103  59
 761 896 257 744  45 745 688 260 296 521 135 516  56 224 168 660 580 657 804 530 735 598 349 293 662  71 655 120 294 195
 344 107  70 610 622 546 614 383  64 794 534 525 231 339 372 355 364 625 895 753 602 643 267 535 630 543 612 197 255  84
 276 208 595 549 150 713 718 186 538  12 783 478 143  89  90 358 501 650 522 698 503 723 166 563 848 562 682 493 207 511
  81 375 564 702 594 303 628 346 631 557 140 585 691  60 396 548 508 604 442 531 485 533 185 415 639 148 635 500 101 588
 448 597 529 858 480  80 590 737 637 446 608 484 652  13 376 272 714 550 502 566 139 395 320 285 565 420 110 556  68 518
 308 615 351 399 570 536 575 233 479 577 427 487 581 537 528 426 656 221 327 561 519 188 338 333 515 292 641 509 254 532
 411 234 345 434 646 475 431  98 559 649 370 495 497 547 616  29 469 439 278 579 572 474 633 828 506 366 144 437 574 380
 499 606 336 555 513 542 435 315 492 309 340 576 326 266 523 517 504 321 586 359 482 310 295 348 360 583 369 452 663 733
 851 623 430 654 410 412 776 749 686  72 269 453 403 464 393 460 490 258 524 413 304 473 589 441 350 341 324 121 409 373
 151 846 868 422 201 229 665 611   3 778 347 206 335 465 356 658 629 365 436 248 669 444 514 319 384 119 553 417 424 853
 421 569 317   8 256 392 209 673   2 390 456 387 541 685 498 841 402 466 587 404 425 632 545 273 307 325 814 418 752 520
 617 400 423 216 314 727 361 582 183 385 642 701 792 429 407 681 299 331 169 249 457 305 677 401 264 697 481 190 716 419
 700 676 432  85 770 270 261 507 332 398 459 236 438 892 123 806 834 241 540 552 371   6 591 405 173 605 362 447 284 719
 717 265 856 271 200 468 215 689  39 323 174   1 554 414 703 738 246 368 240 302 382 440 721 290 820 443 884 777 707 268
 505 316 328 128 291 883 205 763 176 130 354 187 381 751 674 558 104 607 378 122 379 408 704 874 463 603 213 711 571 748
 567 274 678 488 330  95 225  18  32 312 527 153 334 866 875 394 247 471 887 391 300 353 869 337 297 831 288 865 584 627
 578 844 289 219 788 170 235 797 827 154 397 771 854 451 624 715 780 244 184 279 171 146 472 830 357  53 175 839 115 157
 843 551 644 182 742 861  76 736  96 223 860 245 867 747 862  46 127 111  62  73 155 767 613 242 722 544 277 476  93 672
 801 592 253 116 900 108  51 708 876 352 813 313 725 823 455  69 196 262 203  31 470 202 679 222 374 893  97 849 621 461
  15 599 739 891 198  24 156 809 301 706 640  28 879 129  67  10 886 160 138 318 449 819 815 829 696 180 406 816 734  78
 787 181 754  41 730 825 125 835  43 683 172 137 729 496 152 179 462 220  61 791 710 803 237 789 512 433 141 899 259 329
 731 226 837 386 765 214 619 526 693  54 653  58 491 136 133 106 601 873  26  38 145 647 817 573 232 822 199 741 539 634
 458 758 263  30 192  17 238 897  99 164 167 626 740 671 877  40 859 142 785 675  83 768 889 871 114 149  37 560 618 728

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 6.00019e+07us (= 60001.9ms, 60.0019s)
Wall-clock time (full program): 6.00358e+07us (= 60035.8ms, 60.0358s)
Satisfaction error: 2
Number of search iterations: 26781
Number of local moves: 6021 (including on plateau: 2923)
Number of local minimum: 2602 (including on plateau: 389)
Number of resets: 15
Number of restarts: 0

Problem in column 8: 50 191 342 94 74 79 228 260 383 186 346 737 233 98 315 749 611 673 582 507 689 763 18 797 736 708 809 835 526 897 => the sum is 13516 rather than 13515
Problem in column 17: 14 63 9 36 898 218 818 580 364 501 508 714 656 469 504 490 629 402 299 834 246 104 247 780 127 196 886 462 601 859 => the sum is 13514 rather than 13515
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 324 619  91 355 754 322 250 492 556 740 870  24 793  87 879 376 685 887 529 380  56 554 815 223  11 218 398 244 241 742
 427 722 232 405 697 462 375 423 704 203 577 115  15 852 399  13 559 838 732 776 149 293 158 625 505 121 480 500 333 825
 688 279   5   9 237 789 352 537 786 660 202 703 197 833 716 741  63  33   1 231 717 313 690 842 506 363 640 511 664 207
 173 626 892 140 235 805 895 236 738 470 761 749 320 661 163 289  70 662  99 444 659 829 294 136 539 113 159 830 107 421
 695 127 846 165 443 466 737 169 565 526 525 408 419 117 817 726 409 568 291 196 224 857  30 730 615 194 530 171 884  65
  37 412 549 820 534 524 422 482 538 540 719 819 516  73 120 416 777 357 193 100  68 401 574 199 269 426 612 514 613 891
 724 238 215 646 575   3 382  22 139 435  62 663 796 809 458 463 336 195 885 614 272 780 351 858 836 144 699 487 347  81
 344 827  32  34 481 785 111 270 490 811 445 681 377 106 441 847 888 348 183 354 109 262 790 701 245 610 781 407 608 147
 603 461 181 765 397 649  47 845  43 708 551 774 822  42 693 105 166 265 253 219 110 886 562 632 488 654 400  35 734 425
 473 580 252  38  78 709 475 206 285  16 670 897 725 225 387 339 170 606 394 468 310 802 381 714 794 893 810 274 177 367
  79  49 736 569 712 283 277 553 672 784 877 280 498 521 184 153  72 864 715 546 803  41 880 362 342 134 535 288 520 186
 550 385 485 379 457 431 641 114 378 472 666 332 762 821 242 360 718  93  95 361 675  20 835 570 259 502 345 428 404 735
 653 797 620 770 448 343 872 582 671 465  44 865 371 532 314 623 126  45   4 372 643  54 566 217 295  66 512 429 611 605
 586 624  85 848  82 863  46 204 296 146 766 634 338 523 555 650 298  61 386 267 900 212 739 564 733 889 689 108  96 327
 328 281 607 684 748 130 306 627 319 103 418  25  27 284 862 832 806  90 751 449 459 778 682 804 486 104 875 150 477  23
 622 898  97 266 867 370 633 756 308 261  69  39 255 491 573 807 536 519 364 305 497 560  84 221 406 694  40 871 246 860
 578 102 743  88 617 414 311 395 317 273 424 346 292 517 507 723 637 702 494 824 122 365 652 190 368 808 254 866 315 271
 172  21 587 148   2  92 764 861 767 325   7 657  29 759 527 783 542 618 544 350 248 604 118 638 567 571 851 334 698 331
 801 340 644 787 533 326 543 151 706 503 337 899 119 680  77 187 631   8 600 595 442 558  10 222 228 710 154 547 541 636
 601 366 290 658 731 592 630 868 390 647 145  64 705 214 141 430 335  67 479 837 720  18 773 585 746 711 161  31 391 189
 229 798 768 388 844  58 700 572 353 853 692 137 713 873 182 307 474 589 493 168  26 143 760 469  52 211 656 152 769  86
 249 243 849 411 179 676   6 384 434 674 691 175  94 208 677 557 590 752 616 496 728  83 123 509 112 800 216 876 349 758
 389 456 162 591 133 839 831 300 251 329 263 552 782 160  76  28 826 609 792 258 227 823 396 318 665 454  55 602 621 727
 499 450 841 392 275 304 515 855 176 757 628  14  71  75 755 415  36  89 813 747 795 874 393 455 323 433 124 771 383 257
 471 489 878 125 436 413 635 467 576 210 260 373 696 655 834 639 629 588 814 686 745 129 138 209 226 132 220 164 239 439
 369 451 476 651 410 191 869 447 330  12 856 101 264 156  98 301 510 812 881 667 438 297 131 579 321 679  59 859 501 799
 678 356 230 518  57 303 452 594 581 495  48 894 840 548 287 508 233  17  74 673 772 437 850 483 545 598 513 312 155 464
 185 584  19 563 791 648 178 484 309 167  53 299 460 854 157 522 268 753 403 721 669 596 198 359 788 561 234 683 707 302
 213 247 729 420 316 142 200 341 645 402 531 180 779 599 504 201 282 883 432 276 188 818 286  50 417 642 750 478 668 896
 775 687 374 882 446 583  60 278 192 528 358 816 440 240 890 174 843 597 205 135 744 128 256  51 828  80 763 593 116 453

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.19777e+07us (= 51977.7ms, 51.9777s)
Wall-clock time (full program): 5.20103e+07us (= 52010.3ms, 52.0103s)
Satisfaction error: 0
Number of search iterations: 20820
Number of local moves: 4918 (including on plateau: 2393)
Number of local minimum: 1963 (including on plateau: 322)
Number of resets: 11
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  42 853  68 841  51 800  13 657  22 857 879 284 288  93 770 834 816 169 108  45  31 833 731 792 811   1 180 775 836  35
 480 842 114 802  55 843  27 302 147 790 855 319  15  99 873 754 831 181  26 173 701 258 753 876 184 808 631 621  37 118
  54 839  44 884 240 124 848 713  12 823 716 516  17  19 791 801 822  11  20  98   9 845 748 854 481 860  75  48 627 576
 850  40 175 798 297 126 168 886  14 700  39 683 671 328 762 849  28 676 137 204 760 757  16 813 407 400 392 637 807  95
 864 370 157 667  70 694 306 544  59 715 804 681  50  83 706 817 732  32 562 178  78 591 689 858  87   4 738 709 604  66
 702 742 183 121 167  43 123 144   7 614 818 195 358  62 773   2 803 151 583  90 680 765 785 726 691 714 630 819 737 287
 740 766 164 712  18 559   6 698 567 609 755 177 193   3 682 727 695 339 241 125 652 624 719  34 267 749 341 596 705  52
 668 707 334 794 263 610 133 237 436 494 734 105 197 211 688 142  67  86 492 739 708 774  10 692 570 767 548 674 500 135
 699 557 227 515 162 507 690 309 176 600 685 642 374 128 663 585 703  46 205 545  92 574 730 660 255 572 672 534 185 223
 654 629 172 454 262 678 145 153 584  33 625 602  38 693 769 571 533 208 617 664 100 499 601 318 291 684 512 553 670 203
 696 582 435 459 354 335 213  47 156 588 577 442 535 603 541 659 620 564 537 619 640 484 647 196 199 546  85 589 367 200
 496 439 556 489 607 645 253   5  30 622 375  49 347 756 373 580 554 560  60 615 478 611 581 656 161 486 539 781 495 316
 308 456 651 509 201 646 634  25 594 519 587 540 593 472 445 441 132 362 487 462 612 522 448   8 272 626 579 460 563 361
 502 330 332 506 565 465 524  61 271 513 592 520 628 505 566 467 317 433 351 447 551 420 532 452 391 531 278 503 437 525
 550 536 474 542 504 482 526  82 468 528 353 471 404 679 324 405 463 444 378 395 635 501 342 458 419 470 430 523 426 303
 476 527 421 595 236 477 497 359 423 491 368 413 466 385 844 376 521 393 450 345 638 356 398 449 510 411 461 363 402 464
 644 344 242 355 410 424 568 397 606 389 578 315 431 514 498 529 386 888 457 427 388 336 573 451 453 384 429 483 270 346
 827 877 599 434 493 380 662 383 440 518 438 881 590 301 259 256 357 214 446 406 432 296 290 538 396 485 321 377 225 394
 292 325 408 403 382 425 669 412 899 364 343 741 387 369 269 209 311 736 666 329 366 322 246 399 900 286 777 304 371 605
 232 300 289 473 310 294 616 718 415 422 508 812 475 314 327 417 283 710 326 549 511 490 880 261 782 233 276 187 337 768
 409 295 618 340 895 266 750 861 758 416 293 744 828 725 182 252 469 372 264 743 234 338 143 265 455 352 299 221 349 379
  72 479 653 298 784 313 558 639 824 401 191  96 285 312 414 320 218 889 281 751 248 869 224 381 875 239 840 274 122 665
 245  63 859 188 759 120 752 821 238 152  71 795 814 778 179 254 216 350 885 251 633 307 815 206 543 219 788 247 280 687
 101 115 830 189 761 226 745 348 360 517 260 648 675 789 109 222 127 390 686 847 786 141 235 139 608  57 797 720 282 805
 186 194 661 331 704 856 898 697 835 333 202 890 231 717 250 155 130 783 597 249 658 217 165 198 897 138 171 154 131 887
 159 207 838 277 643 160 613 829 809  97 243 146 799 729 158  65 728 882 677 220 244  84 140 257 721 852 210 102 820 806
 275 103 870 273 763 163 215 488 891 112 228 190 722 787 111 825 641 575 771 649 632 323  79  80 110 673 865 268  69 764
 793 119 862 116 810 305 279 623 826  88 149 117 747 776 104  77 832 636 896 598 846 134  94 150 106 863 192 555  76 746
  81 772 428 129 883 894 212 530 780 174 113 443 561 552  56 871  89 711 586 874 148 170 166 569 650  41 230  73 892 837
 418 107 851  21 866 655 872 547 868  36 136  58 796 733  29  53  91 724 723 878  24  74 735 779  23  64 229 365 893 867

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.2187e+06us (= 4218.7ms, 4.2187s)
Wall-clock time (full program): 4.25207e+06us (= 4252.07ms, 4.25207s)
Satisfaction error: 0
Number of search iterations: 936
Number of local moves: 645 (including on plateau: 174)
Number of local minimum: 48 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 503 142 702 741 882 641 850 189  86  53 866 798 148 139 173 149 111 893 167 662 642 522 663  50 790 120 667 813 171 182
 723 637 714 672 640  54  77 164 748  59 587  22  88 119 802 656 306 881  62 728 716  51 326 357 101 712 647 849 892 125
 643 529 898 606 746 829 170 196  70 330 669 116 253  19 890 733 267 248 136 386 871  48 698 128 174 763 751 895 179 274
 569 727 219 894 815  78  11 580 246 713 736  94  76  83 874 201  41 133 225 732 735  49 759 886 594  90 887 888 542  38
 846 191 778 797 792  44 315 310 774 118 655 848  98 104 197 499 122 155  71 768 812  99 879 573 198 407 726 744 531  64
 876 177 827 584 753 900 151 187 235 677 749 141 700 202 343 329 153 281  37 694 633  68 891 150 880 243 875 515 185  79
 504 242 275 804 771 184 885 339 854 442 810 348 269 311 190 670 147 115 114 806 661 422 247 282 268 284 541 789 530 411
 725 194 324 701 899  89 231 709 215 203 824 107 277 156 258 832 314 264 395 858 896 297 878 371 169 416 604 461 597 251
 777 864 620 586 238 129 199 481 873  81 877  96 870 318 494 372 168 276 347 785 401 865 350 137 241 200 283 794 352 441
 847 192 295 286 376 232 227 223 821 889 730 453 354  97 298 791 272 291 681 447 884 365 346 367 236 206 693 811 205 600
 433 844 165 737 244  72 398 359 278 872 476 249 218 230 263 767 496 320 333 897 862 382 630 446 301 472 659 510 378 224
 516 834 292 883 627 138 396 351 289 464 532 796 340 527 299 710 374 818 309 470 334 217 245 338 500 393 471 528 212 312
 861 717 239 392 632 455 403 175 313 760 599 335 583 513 356 412 366 353 388 803 323 438 254 210 409 560 479 445 387 355
 787 468 581 425 415 537 459 509 473 439 377 454 397 488 255 361 489 553 552 337 381 332 434 400 287 456 465 566 402 436
 349 591 579 300 160 558 384 344 421 567 463 307 607 285 368 408 477 460 288 740 559 498 452 370 495 469 577 379 449 611
 482 568 404 237 533 328 474 261 739 380 432 478  31 475 435 448 539 608 501 511 443 508 483 316 444 431 563 362 609 492
 303 419 524 305 423 428 603 364 417 715 540 467 548 572  67 554 131 327 556 457 705 696 317 360 519 491 462 363 592 290
 410  26 389 385 413 543 534 208 551  75 154 383 729 429 576 451 418 485 635 427 598 731 493 549 270 625 547 345 590 546
 233 506 618 505 538 721 626 271 375 658 406 614 653 550 615 535 562 502 490  91 342 414 234  12 666  65 571 405 127 610
 296 634 605 358 369 440 159 480 424 259 279 756 764 525 557  56 544 523 682 319 121 699 514 574 520 582 221 390  92 773
 450 321 654 280 123 703 521 621 657  33  63 536 570 742 616  43 762 394 708 293 178 518 639 613 687 545 228  16 665 336
  29 507 188 143 265 373 636 487 617 650 180 437 856 602 628 678 593 649 561 220 399  13 674 555 786 564  84 325 145 671
 117 624 162 497 517 783 720  35 601 486 157 629  23 631 686  52 596 683 752   3  46 588 240 676 668 644 466  28 648 757
 112 589 651 100 222 781   6 814 719 260 102 622  15 623 565  36 645 828 575 134 430 595 690  27 734 843 266  32 646 853
 207 193 745 106  60  21 675 852 213  69 161 578 776 660 738 691 817 724 718 250 130 706  58 816  80  42 294 612 835 688
  85 195   5 304 124 770 638 819 722 750 341 775 755 809  82 226 673 766 684  93 322 204 689 765 166   7  39 252 758 697
 214 331  20 110   2 743 807 782  30 830 209 458 839 780 801 144 680  18 823  45   9 761 103 652 685 704 126 172 837 800
 257 619  95 140 585 273 420 711 512 840 186 779 695 851  73 484 769  24  57 256  34 784 105 845 772 679  55 109 799 707
 132 108 152 211 216 805 793 826  66 833  47  17 158 855 262 836 841 869 860   1   8 788 163 831 692 838 181 113 146 867
 229 526 795 426 135 863 747 868 176  10 308 822 825 820 754 391 842  74 808 302  40 857  61 859 183 664  87   4  14  25

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.88398e+06us (= 5883.98ms, 5.88398s)
Wall-clock time (full program): 5.91687e+06us (= 5916.87ms, 5.91687s)
Satisfaction error: 0
Number of search iterations: 1461
Number of local moves: 913 (including on plateau: 330)
Number of local minimum: 78 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 864 327 497 439 425 583  87  35 105 842 794 647 343 834 179 230 877 138 218 368 756 792 741 636 604 131  68 139 796  20
 481 338  10  44 421 467 836 377 322 262 311 547 496 443 603 107  93 688 823 573 673 424 293 533 509 620 833 528 827  33
 150 776 449 768 505 709 289 810 478 559 840  53 401 655 786 284 236 214  29 869 141  61 775   1 832   6 364 316 294 865
  54 739 286 610 861 783 641 695 216  84 857 104 137  49 550 598 155 745  94 621  39 680 224 900 258 177 892 787 404 275
  55 345 524 495  40 395 850 791 697 899 820 228 623 501 694 257 120 822 378 194 211  11 184 503 115 897 109 622 887 248
 746 460 380 166 213 326 588 375 859 254 569 575 479 797 268 777  70 806 773 499  15  72  36 126 498 737 800 295 222 734
 661 361  85  52 237 782 485 512 410 732 152 795 759 614 835 124 803 389 445 417 560 409 862   2 251 727 185  58  45 766
 839 171 371 108 209 599 649 830 356 323 784  34 207 540 868 881 337 671 269  32 703 344 488 324 212 662 163 143 681 717
 565 696 328 580 149   5  16 735 584 403  19 519  48 725 342 596 666 813 520 411 415 798 594 640 808 493 123 259 606  59
 221 690 263 252 430 383 672 535 484 561 244 825 454 307 576 721 420 416 638 653  91 612 225 290 321 722 280 135 553 541
 507 111 234 398 261 182 781 682 549 635  30 436 240 302 260   3 736 418 870 482 427 504 729 423 348 624 483 526 529 805
 679 883 444 253 774 205 287 362 381  63 195 125 723 629 196 818 779  14 667 453  95 874 365 790 731 329 385 591 379  46
 513 372 558 801 730 615 151 291 674 446 459 517 597 229 106 300 708 281 250 716 643 247 277 592 256 468 330 414 400 574
 841 687 691 469 809  50 724  47 581 271 112 848 472 551  65 241 239 648  90 463 637 625 457 193 491 243 642 689 563  76
  80 686 789 390 536 201 548  78 854  27 585 437 702 408 204 617 355 525 133 245 340 867 455 272 359 373 851 849 534 215
 419 394 855 772 162 156 278 357 186 780 531 639 747 148 539 349 412 320 407 567  12 127   7 475 710 249 758 713 609 837
 799  41 433 363 886  83 494 626 199 670 537 388 514 296 613 310 522 197 714  67 506 627 273 692 191 616 376 333 283 866
 319 442 210 223 200 712 101 119 878 447 556 882 238 838 676 521 845 396 288 100 489 387 738 202 391 650 570 353 392 352
 246 198 292 146 393 413 434 652 829  98 873 318 402 480 562  23 470 699  38 370 872 885 164 701 487 477 458 654 279 602
 158 554 336 461 428 335 618 360 354 853  92 308 298 693 568 814 788 282 422 646 545 161 165 450 366 826 255 742 172 465
 490 208 168 431 276 382 435 875 347 590 589 114 432  77 331 500  79 860 802 812 888 486 705 110 762 180 144 153 718 571
 440 315 645 611 700 743 764 895 264 190 397 206 719 118 511 761 384 601 306 595 233 889 456 160  69 633 309 181  74 346
 242 600 890 656 660 785 157 657 817 173 122  42 632 619 863 297 438  89  17  81 896 203 804 828 658  57 285 350 265 332
 847   9 226 607 235 858 471 312 754 299 154 879 113  22 793 683 429 313 816 733 763 145   8 189 167 518 608 715 752  97
 557 474 726 771 492 811 270 136 304 317 664 405 169 707  86 476 142   4 678 314 552 466 634 750 187 843 406 267  13 894
 341 217 566 871 227 628 452 543 183 605 374 176 339 856 219 677 631 130 546 898  64 178  37 751 846  56 685 893 464  62
  26 527 753  18 665  71 579  51 121 704 426 593 815 220  43 159 728 755 740 140 301 770 441 274 824 231 698 451 819 572
 515 769 749 508 891 884 582 578  66 358 351 510 630  75 538 399 844 706 303  60 232  31 778 305 132  82 134 586 831  88
 192 462 587 532  25 266 174 175 516 684 523 821 117 334 542 116  21 502 530 767 651 367 748 744 807 128 564 644  96 880
 668 663 170 720 675 103 102  24 147 386 555 544 669 448  99 876 188  73 711 369 765 473 852 659 325 760 757 129  28 577

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.48286e+07us (= 44828.6ms, 44.8286s)
Wall-clock time (full program): 4.48619e+07us (= 44861.9ms, 44.8619s)
Satisfaction error: 0
Number of search iterations: 18957
Number of local moves: 4078 (including on plateau: 1986)
Number of local minimum: 1771 (including on plateau: 233)
Number of resets: 10
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 168  47 876 879 491 869 106 686 623 849 445 779  88 559  54 268 290 162 428  81 446 501 847 142 113  98 566 757 408 889
 900 875 803 660 694 457 164 248  67 736  31 522 102 244  53 114 852 898  83 103 486 627 835 530 761 490 213 175  16 776
 672  51 870 789 622 141  85 656 210 449 562 752 301 700 820   7 632 156 808 226  99 591  13 783 892 111  21 531 109 856
 894 582 708 134 586  89 149 727 170 637 525 642 104 821 326  55 133 610 890 148 178 699 483 374 619  74 793 257 310 798
  95 116 346 896  37 187 765 375 140 880 882 311  70 638 269  36 860 215 737 691 128 605 874 291 710 893 816 202 265 185
 871 546 218 772 641 851 859   2 825 785 249 863 813 502 238 158 788  86 706   3 198  18 176 577 545 278 487  30 420  10
 674 107 625 830 843 223 316 607 216 518 771 547 596 677 208 453 499 267 594 811  50 661 173 404 230 786 322 153 203 151
 388 145 734 778 855 884 199 887 234 277 595 287 195 802 358 245 193 312  11 564 155  12 828 583 321 681 476 850 323 343
 644 209  24 657 357 349 318 784 207 834 495 613 382 645 181 839 220 678 797 373 214  42 205 365 262 433 679 885 191 633
 899 598 317 447 872 329 258 711 480 196 299  58 315 718  17 247 295 629 664 794 756 309 560 739 320 359 634 242 194 259
 618 174 167 631  73 524 799 767  45 669 652 367 434  38 361 163 319 867 186 866 438 873 615 307 229 260 590 197 831 455
 620 454 251 360 534 302 371 211 881 431 379 719 206 659 255 347 391 165 392 743 429 648 324 781 456 589 805 422  49 341
 263 364 285 425 430 409 253 250 822 628 730 475 235 427 496 552 394 474 846 200 188 565 139 241 707 237 780 293 796 611
 458 800 327 497 393 760  68 606 741 378 437 467 554 243 759 667 256 749 179 308 601 396 325 334 383 827 397 297 228  80
 468 504 444 377 339 419 440 555 500 386 461 581 236 381 519 399 572 171  59 795 390 865 721 406 314 505 484 758  66 400
 225 575 514 233 463 350 464 485 137 551 713 635 424 462 340 372 435 413 508 693 540  40 414 807 123 460 588 520 452 579
 673 472 845 443 509 356 426 274 466 553 493 439 650 348 604 489 384 154 344  77 403 646 573 597 481 436 539  34 715  92
 363 417 351 117 593 303 465 477 412 115 180  87 527 806 676 548  56 728 624 298 492 891 602 542 818 567  20 273 442 725
 516 281 459 411 338 150 836  72 478 423 124 407 549 353 537 801 603 266 119 897 599 666 330  65 561 332 550 569 580 643
 536 416 523 513  75 469 471 331 636 157 283 709 723 410 651 612 861 663 305  93 587  78 571 125 675 130  96 528 649 639
 254 521   8 333 842 705 482 815 782  69 418  46 470 515 626  44 479 576 616 696 763 389 526 190 506 488 147 687 494  28
  22 127 755 345 177  25 824 355   4 212 578 792 584 387 354 814 570 368 690 366 621 160 735 512 722 448 261 535 640 532
 362 682 731 135 192 252  57 510 557 720 395 750 405 183 108 684 182 608 296 695 733 507 770 556 415 288  62 592 746 342
  61 754 451 224  90 609 533 101 300 280 854 169 717 748 777 857 702 335 138 232 837  76  26 819 402 817 132 585 120 769
 544 844 219 100  94 868 864 189  14 161 336 653 729 136 791 441 279 292 742 172 671 745  91 144 574 768 630 654 688  82
 264 246 294 726 217 883 697 511 740 732  64  63 658 271 877 665 473  23 692 683 352  60  41 774 773  33 753  27 826  97
 282 858   9  15 126 118 284  19 804  48 698  71 762 276 787 712 689 685 184 503 895 304  29 600 143 888 337 812 853 724
  39 775 541 563 738 110 878 166 790  43 159  35 716 313 751 517 105 558 131 369 398 886 306  32 121 529 838 617 829 662
 204 231 152  79 614 701 222 810 401 714 275 670 122  52 272 841 764 704 370 655 647 270 543 129 227 421 498 286 832 809
 538 744 668 146 680 823 862 328 833  84 432   6 848 201 450 568 239 703 376 380 221 385 840 766 112 289   1 747 240   5

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.63521e+07us (= 16352.1ms, 16.3521s)
Wall-clock time (full program): 1.63849e+07us (= 16384.9ms, 16.3849s)
Satisfaction error: 0
Number of search iterations: 5512
Number of local moves: 1663 (including on plateau: 787)
Number of local minimum: 454 (including on plateau: 112)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 699 899 214 821 737 115 119  77 127 535 128 662 694  72 874  34 147 101 554 880 135  17 847  25 141 804 892 849 850 466
 344 748 117 848 776 695 188  75  95 384 222 788 722 563 215 883  94 120 463 592 766 217 589  71 220 822 819 109 887  83
 286 573 881 785 185 780  88 623 156 653 276 773 838 319 845 852 124 808 834 797 611 182 235  62  87  60 103 522 112  65
 606 891  99 680 189 161 194  53  90 856 179 875 698 181 684 897  61 108 691 886 184 627 625 267 749 890  76 645 260 113
 283 803 898 799 781  51 150 165 888 718 155 734 794 294 879  89 227 105 172 657 802 242 173 521  97 582 228 843 199 186
 114 885 123 671 334 669  45 855 178 792 451 877 769 863 605 488 160 104 617 761 870 139 333 191 889 221 152 154 170  35
 142 894 239 644 859 187 878 626 314 636 131 237 865 255 809 724 116 301 841 630 681 149 642 882  86 183 102 110 231 121
 218 219 111 872 197 195 895 700 137 798 434 813 688 297 844 789 377 289 663 730 815 162 448 298 209 241  78 274 302 422
 247 234 295 562 331 229 244 415 884 738 634 371 208 758 350 262 352 317 812 723 864 857 861 343 374 163 166 278 273 370
 258 282 223 719 304 346 308 817 366 520 129 341 257 348 250 619 143 233 828 866 871 598 839 900 455 432 203 202 438 420
 292 534 249 509 395 349 398 335 876 750 836 408 416 873 307 360 271 365 320 649 300 230 791 362 355 353  93 869 385 285
 216 190 316 638 326 309 380 330 306 860 800 296 442 284 449 599 517 567 893 726 481 512 332 386 225 417 471 572 324 351
 212 536 428 607 493 290 303 305 862 670 641 587 542 440 256 546 527 437 457 550 409 210 491 327 411 397 383 338 539 321
 519 369 310 674 318 832 340 323 487 574 403 407 477 472 243 405 490 238 492 628 313 506 444 531 462 322 429 525 459 523
 475 236 382 564 526 896 375 545 391 414 540 373 529 552 378 465 584 339 458 464 325 419 368 443 496 376 337 265 524 476
 566 392 570 460 431 452 511 568 399 381 436 311  13 486 480 441 461 394 413 453 390 513 543 579 435 387 514 497 556 483
 501 364 549 447 159 410 427 499 439 591 470 164 604 578 537 518 489 446 576  67 575 433 637 596  36 588 544 516 401 354
 423 468 418 261 358 664 672 586 450 279 503 553 479 288 614 478 264 412 648 133 363 656 532 561 580 632 430 361 393  56
  82 474 515 359 676 473 469 485 192 367 224 504 675 686 207 240 406 697  14  26 425 668 558 613 729 389 620 601 533 608
 559 287 655 379 507 445 538 646 424 252  68 705 639  57 565 168 709 687 560 421 132 201 342 328 677 647 357 426 551 583
 616 494 679  46 541 633 692 667 603 400 807 151  28 740 707 315 609  63 167 266 134 661 180  48 775 595 505 106 702 585
 612 557 652  85 703 650 618 590 693 213 176 467 651 122  74 268 621 727 329  29 600  11 107 685 581 665 840 631   3 555
 660 196 731 291 736 787 622 251 771 171 510 138  16 715  20 502 482 508  59  31  80 728 226 593 571 673 640 456 782 569
 842 500 629  24 777 754  38 140 454 211 270 610 275 721  40  70 597 716  50  58 356 717 704 498 658 144 696 770 484 712
 594 404 711  69  37  49 811  43  91 118 547 733 678 755 157 246 810 689  81 402  19 659 763 280  15 851 643 767 746 747
 725 743 683 169 177 577 829 706 200  27 666  52 263   2 801 735 752 713  79  18 281 826 312 783 714  10 690 146   9 827
 760  22 779 198 248 818 732 751 764 153 739 175 130   4 269   7 784 757 388 396 795 825  84 232 854   1  73  96 823 858
 772 193  33  23 635 602 206 793 624 145 814 174  44 753 259 765 835 786 272 345  32 347 126 820 741   8 774  21 805 768
 837  98 868  12 125  92 615 293 759  64 548 136  42 204  41 744 796 806 254  54 701 831 336 762 148 816 790 824  66 853
  55  30 158 299 654   5 830 253 495 245 778 100  39 833 756   6 710 682 530 277 205 372  47 528 745 846 867 742 708 720

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.57341e+06us (= 4573.41ms, 4.57341s)
Wall-clock time (full program): 4.60669e+06us (= 4606.69ms, 4.60669s)
Satisfaction error: 0
Number of search iterations: 1162
Number of local moves: 807 (including on plateau: 238)
Number of local minimum: 43 (including on plateau: 20)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 838  79 897 340 839 632 875 198 743  84  32  91  99  88  82 738 727  23 665 105 747 799 762  26 800  36 658 881 226 405
 755 409  35 607 669 850 764 561 865  33  73 264 779 211  38  85 836  37 866  41 567  89 870 189 835 137 787 239 863 161
 871 134 758 718 821 600 169 142 884  44  60 163 841 192 663 213 109  18 646 185 895  42 858 654 243  61 763 890  64 814
 714 160 102 892 700 399 186 193 812 168 316 175  53 194 150 218 896 851 715 477 112  94 861 117 801 622 234 883 792 628
 894 768 116 666 769 564 164 899 757 236 238  75 794  27  93 597 807 158 773 140 305 854 644 107 823 510 268 143 177 149
 148 275  71 781 710 686 311 220 805  81 222 151 302  69 121 219 898 886 869 522 190 751 579 120 888 217 859 358 534 672
 278 719  68 864 638 295 848 114 674 240 598 390 127  83 323 711 843 188 694 776 877 241 693 759 132 228 212 260 394 248
 315 826 270 475 842 306 388 900 282 338 215 277 885 372 335 853 314 231 543 783 166 333 563 251 145 232 847 214 307 707
 379 184 286 745 520 575 304 312 893 267 614 165 235 370 108 878 752 590 742 245 294 202 829 283 172 332 772 195 410 862
  72 227 182 609 855 647 473 880 433 427 318 157 434 208 209 582 319 309 387 450 456 257 872 512 802 337 844 404 262 591
 201 429 411 548 648 448 457 408 303 255 483 259 550 272 819 581 326 300 360 891 242 458 610 349 423 263 443 412 535 831
 273 317 424 293 637 613 469 292 421 588 444 887 288 103 296 276 426 389 620 580 320 400 554 342 406 511 285 403 828 830
 392 420 249 639 539 680 384 454 347 206 380 368 702 350 603 860 261 480 422 503 339 274 560  78 369 551 398 269 668 770
 331 279 506 468 524 367 378 407 415 683 518 341 366 485 385 782 601 523 250 604 528 395 470 381 442 459 207 635 353 432
 499 386 419 659 497 284 321 471 327 418 280 430 435 377 492 453 417 437 488 546 529 445 476 570 391 329 446 464 724 505
 362 478 537 401 500 413 452 402 136 396 467 371 361 556 461 393 334 652 586 451 355 472 484 346 593 374 455 549 545 633
 504 618 359 375 297  24 330 441 629 525 685 587 527 439 354 376 521 345 662 440 508 322 364 519 462 247 486 517 538 514
 670 541 382 496 266 154 344 348 328 542 493 695 731 298 679 697 619  20 558 351 482 502  97 357 557 655 605 313 568 167
 735  40 509 126 363 119 530 414 513 474 566  62 507 572 555 612 592 536 599 141 153 630 373 712 447 585 705 577 416 352
 491 578 617 336 287 205 569 425 656 626  19 533 565 595 526  51 428 552 574 463 490 684 324 498 540 465 703 616   7  92
 559 717 594 495 183 159 726 584  11 583 436 576 501 634 667  90 487 608 281 244  98 741 299 438 621 642 187 615 290 449
 645 774 466 124 144 133 785 516 180 750 460 733 544 636 721 431 271 204 308 246 691  22 254 701 643 589 571  31 739 203
 553  21 709  76 197 732 673   1 199 532 720 547 631 810 623 178 723 713 253 310 651 664 397 640 118 876 171 289 252 256
 692 104 627 170 129 725  57 822 728 562 657 852 481 708 771 224   3 736  86  96 688 682 155  15 115 803 200 846 625 156
 602 760 879 649 139 233 811 706 110 641 677 790  43 833  50 210 624 676 223 678  29  16  52 806  58 825  59 817   4 515
  66 753 531 135 356  55 837  12  87 675 696 834 809 777 606 229  10 791  54 793 699 690 130 722  47  74 230 729 797 291
  63 173 873 225 106 258 716 767 196 734 650 874  49 889 365 596   6 761  25 824 730 237 152 832 123 827 113 653 125 573
 100 681  17 128  80 775 147 749 737 740 671 698  30 856 756 221 181 704  70 804 813 689  14 820 660 146 179  95 611 343
  34 857 867 301 138 789   2 216  39 818 687 325 798 765 796 383 176   9 131 780  67 744  28 882 748 816 815 162  77 265
 479 808 754 174 122 795  45 661   5 849 840 845  48 746 868 778   8 788  65  46 494 786 191 489 111 766  13  56 784 101

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.04799e+06us (= 4047.99ms, 4.04799s)
Wall-clock time (full program): 4.0811e+06us (= 4081.1ms, 4.0811s)
Satisfaction error: 0
Number of search iterations: 858
Number of local moves: 681 (including on plateau: 155)
Number of local minimum: 31 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 784 638 187  28 748 411 898 871 267 149 148 180 126 732 886  72 163 884 868 568  44 626  16 355 805 509  86  88 892 486
 242 733 492 582 395 426  26 196 245 606 579 191 551 433 409 603 834 532 167 864 110 770 787 402 397  10 227 572 565 569
 599 183  45  23 444 643 146  78 769  70 155 771 827 348 334 823 656 408 216 212 842 839 694 460 441 189 468 359 833 640
 754 354 765 295 746  68 253 238 111 895 134 177 629 668 366 205 785 705 507 169 789 744 390 488 546 263 866 382 214   9
 239 190 298 430 340  19 434  52 188 782 817 767 729 337 299 675  79 849 707  35 703 339 831 573 763 614 790 307 235  94
 687 483 570 345 554 431 642 795 247 578 119 794 597 728  54 493 202 344 791  65 760 370   4 221 206 387 174 558 801 515
 737 157 557 535 659 173 539 577 153 630 637 269 215 616 406 720 862 528 841 309 571 357 192   6 131 581  30 615 899  13
 718 717 639 854 270 230 255 322 207 697 349 689 752 283 118  64 647   8 159 500 186 388 726 396 867 418 564  62 745 685
 840 262 405 117 846 561 621 129 461 832 116 290 619 265 139  29 686 372 219 666 672 403 519 617 160 485 719 730 122 613
  98  38 612 552 534 352   5 172 358 316 393 792 566 527 896  32 891 296 716 633 156 644 331 699 574 448  99 521 888 376
 365 762 775  92 586 779 480 151 815 695 491 164 658 636 350 306 281 312 330 413 150 260 421 505 652 284 197 662 325 618
 494 863  81 759 674 476 108 756 671  50 608 223 620 250 588 538 471 440   7 580  90 835 634 257 648 356 543 136  83 676
 140 632 890 837  55 417 496 749 384 591 560 228 877 414 248 244 464 596 508 326  97 144 537 285 553 288 217 836 541 361
 598 456  77 649 300 455 778 797 780 420 678 286 741 392 342 347 419 193 353 141 540 655 323 261 278 454 208 828 385 381
 161 490 182 484 240 764 474 504 204 128  66 437 723 453 850 386 449 301 318 452 443 722 319 373 701 481 589 641 360 820
 848 545  58 115 520 870 803 272 364 166 529 473 807 498 680 563 710 121 287 514 547  21  24 259 788  71 555 310 367 830
  95 252   3  80 696 398 567 605 254 669  25 845 170 576 755 450 838 736 425 702 809 362 623 691 112 438   2 479 391 467
 429 333 123 592 583 412 814 844 199 786 466 184 338 584 731 595 594 400  87 369 459 229 427 501  42 860 523 383 377 251
 472 881 715 882 294 738 137 475  36  33 237 231 218 220 368 873 550  93  15 774 800 147 209 435 869 885 327 682 101 818
 810  43 379 772 624 315 878 590 125 482 562 415 249 502  39 783  56 308 653 271 859 324 343 747 478  12 585 168 416 727
  69 458 226 851 138 274 893  89 804 363  73 825  60 292 799 428 232 512 145 645 879 525 900 734 371 175 798 321 451 185
 513 317 575 280 106 628 276 335 876 673 894 198 470 279 627 120 401 424 305 201  59  41 808 665 152 663 657 708 889 375
 495  18 768 341 181 332 847 291 549 713 684 856 224  48 256 802 677 176 857 302 446 602 351 698 497 683 268 275  67 211
  82 154 487 796 611 536 130 499 773 234 843 297 243 793 811 706 264 880 162 109 531 522 724  51 266 282 303 874 503  49
  46 622 277 693 102 661  31 646 407 635 753  91 336 203 374 709 436 289 469 700 399 651 670 725  20 679 766 530  53 542
 104 135 548  22 714 852 410 143 806 178 477 883 127 510  37 816 233 861 544 743 113 105 650 751  34 872 506 378 439 524
 740 457 631 587  57 489 132 865 897 313 887 511 114 776 721 124  84 179 404 380 447 593  14 329 821 200 517 389  96 761
 829 858 688 654 465 394 758 739 103  76 750 320 258  61 625 210 293 133 824 604 225 757 142 346 328 559 556 463  75 422
 526 609 607  27 432 246 667 462 681 533  40 518 660 777 213 692 100 822 819 442 742 304 171  85 311 516 664  63 712  74
   1 875 855 241 601 165  17 273 781 222 445 610  11 314 194 107 158 813 812 826  47 236 735 600 704 853 711 195 690 423

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.72524e+07us (= 27252.4ms, 27.2524s)
Wall-clock time (full program): 2.72852e+07us (= 27285.2ms, 27.2852s)
Satisfaction error: 0
Number of search iterations: 10322
Number of local moves: 2485 (including on plateau: 1213)
Number of local minimum: 931 (including on plateau: 161)
Number of resets: 5
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 440 105  32  68 827  84  23 834 873  44 713 719 113 148  89 374 598 734 653 840 877  39 836 857 126 888 588  21  72 900
 690 897  91  90 883 110 706  76 807 433  57 660  20 101   7 741 793 889 117 683 748  48  95 853 799 522 597 171  69 762
 782  70 852  97 885  12 127 168 781  52 837 662 221 122  14 254 128 789  30 676 652  34 613 710 771 828 851 107 874 516
 263  54  99 235 866 267 484  58 811 164 875 805 753 104  98 689  85  55 328 682 816  45 709 778 764 812 865 179 123 649
 760 197 150  73  42 256 790 862 848 361 869 864  13 879 134 610 152 210 124 787 675  78 188 806 147 809 768  81 132 850
 287 698 167 200 154 894 801 797 721 182 384 826 243 642 185 745 166 219 298 896 631 151 242 564 899 368 715 223  74 143
 189 116 222 257 207 121 849 878 774 884 881 777  83  92 163 759 142 201 788 735 688 292 283 714 239 187 705 226 195 868
 841 241 141 228 761 118 486 783 700 568 833 615 333 265 269 593 161 196 169 898 723 250 892 578 112 217 813 272 204 255
 311 398 367 211 341 162 758 174 457 891 303 594 373 882 273 622 244 203 804 823 843 754 315 646 176 302 750 155 202 181
 893 259 304 186 844 376 818 286 451 637 702 780 413 206 308 727 297 260 194 630 513 343 191 678 346 867 224 299 232 251
 483 404 872 820 193 519 855  87 512 248 309 240 403 330 271 501 282 432 736 324 493 606 300 505 458 521 803 215 548 245
 220 397 402 396 523 345 835 663 544 645 585 696 234 344 295 356 316 321 560 565 581 318 360 533 288 275 312 478 365 763
 465 268 336 474 277 456 798 294 535 880 327 659 471 353 317 446 408 625 261 480 707 383 467 490 514 296 378 469 352 329
 831 824 412 487 231 331 546 431 359 284 435 461 258 313 441 307 418 434 528 703 407 270 482 602 504 293 445 485 364 629
 355 468 252 354 488 742 381 348 584 524 439 371 655 447 580 575 391 725 454 502 319 357 511 453 388 419 363 414 448 208
 547 358   8 506 424 582 428 503 607 390 393   3 379 385 553 537 372 416 559 455 600 386 596 686 452 563 422 442 466 497
 443 472 380 566 437 314 551  82 370 405  10 406 415 400 654 464 573 587  94 525 722 477 518 389 526 661 377 498 491 708
 499 417 638 347 463 558 133 530 423 401 538 177  49 543 534 557 322 567 473 274 450 515 542 351 667 411 572 489 492 583
 476 687 460 531  19 562  33 496 339 306 545 280 590 569 540 619 536 494 438 349 326 495 574 278 475 338 550 561 640 409
   4 634 627 601 410 614 479 529  86 617  79 229 618 577 125 541 395 749 459 291 325 712 481 382 586 527 157 624 636 421
 595 612 520 621 517 692 337 604 264  50 510 140 554 658 620 138 657 730 462  67   5 603 651 165 591  46 449 579 571 507
 609 611 643 608 668 508 178 532 436 729 737 340 650  18 665 205 747 285  37 216 320 429  62 103 500 576  71 639 746 647
 119 694 717 822 100 656 173 392 430 623  17 599 305 697 704 160 677 552 743  24 159 695  38 323 726 681 170 648 679 192
 632  66 555 635 808 731 427 669 180 589 592 108 556 800 720  27 779 825 549  63   9 854 766   1  36  51  41 644 693 109
 738 680 786 691 626 366 218 666 214  29  26 184 664 732 839 130 672 740 773 106 146 310 628 111   2 633 225 785 752  43
 149 815 757 739 153 728 236 190  16 335 135 227 832 685 846 616 670  22 249  64 199 775 699 247 684 156 115 802 733 641
 290 821 765 246 120 711 230 387 102 791 279  75 845 144 671 209 886 770 767 276 237 842  47  93 755 362 444 871  59 420
 131 860 394 701  65 718 375 674  56 281 756 744 796 751 847 233  11  35 289 253 301 856 673 238 890  53  80 470 870 114
 139 332 794 887 369 172 198 426  77 342 137  61 859 819 895 175 776 425 784 145  15 829 716 350  88 724 399 876 570 136
 334  60 772 838 814 810 262  96 158 830 212 213 817 509 858 605 861  25 795 183  28 769  40  31   6 129 266 792 863 539

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 6.1678e+06us (= 6167.8ms, 6.1678s)
Wall-clock time (full program): 6.20083e+06us (= 6200.83ms, 6.20083s)
Satisfaction error: 0
Number of search iterations: 1578
Number of local moves: 798 (including on plateau: 278)
Number of local minimum: 106 (including on plateau: 33)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 412 227 381 719 274 820 745 816 311 559 118 302 710 416 638 331  45 379 106 815 193 487 268 554 509 454 170 795 114 847
 848 476 336 832 631 579 747 584 632 539 401 432 861 748 478  49 316 136 283 261  66 120 294 717  59  21 764 701 547  57
 375 163 207 634 517 879 653 616 484 143 845 692 422  88   5 806 493 455 640 144 445 868 184 406 166  61 884 334 643 263
 155 308 720  98 483 684 661 468  33 898  63 388  84 513 880  82 593 461 337 447 713  53 750 542 716 367 574 850  56 538
 390 242 642 299 885 178 520 393 770 254 188 385 809 491 586  46 182 784 851 663   6 490 419 359 369 228  69 519 836 662
 133 515 792 465 506 132  29  12 594  71 601 772  52 762 732 842  87  79 342 763 550 573 502 240 580 743 446 765 109 726
 149  85 258 128 208 525 453 386 708 892 725 672 545 647 101 224 742 578 145 364 544  89 508 536 602 855 694  31 599 522
 373 434 862 733 715 358 327 482 403 532 370 840 514 321  67 558 524 366 498 424 339 191 318 852 275 467 146 320 756 150
 680 722 636 442 597 153 222 395 426 822 585 324 618 897 425  77 329  74 167 156 755 171 398 340 761 119  90 877 368 889
 723 872 126 596 237 441 438 658 448 512 259 168  62 730 352 869 652 622 348 500 609 626 646   4 363 200 183 314 624 333
 246 176 633 768 711 346 129 319 383 488 793 577 553 777 286 541 819 754 250 521 729 458 804  48 391  23 206 688  54  44
 639 378  96 460 853 471 310 712 230 811 351 677 361 429 164 495 707 700 218 549 830  70 613 679  93 387 582  11 564  75
 607 173 300 443 402 477 404 186  68 583 682 349 739  76 751 360 740 650 202 890 744 687   1 801 245 826 110 531 190 298
 560 142 291 112 496 562 392 669 463  19 575 211 705 407 213 735 858 219 789 312 439 214 656 405 196 821 511 614 304 625
 874 891 123 239 362 610 343 450 706 157 130 690 354 160 567 698 124 649  51  43 611 523 566 436 499 400 325 881 561 492
 102 818 856 666  60 870 221  26 161 189  86 277 617 169 767 231 595 555 628 691 590 581 787 470 728 589 839  36  34 276
 267 896 356 838 875 430 332 273 338  40 475 265 151 568   2 322 134 591 895 220 474 414 648 382  91 437 587 757 828 629
 799 104 683 417 671 345 790 529 813 374 282 137 201 100 203 864 771 290 285 548 802 293 328 297 413 603  92 269 760 452
 113 141 507 659 139 627 635 107 630 266 592 288 181 473 462 664 846 365 775 759 530 435 260 309 528  17 563 210 766 668
 295 878 697  14 154 681 854 103 185 833  64 384 174 654 317 466 279 421 863 427 510 651 807  28 714  81 883 204 209 685
 280 350 117 197 619 882 810 873 451 225 857 165 867 604 501 660 296 817 194 158 505 411  27 306 179 494 408  95 440 727
 399 326 485 518 376 410 389 888 212 420 686 556 623 753 105 893 241 135 588 234 233 803 192 272 116 122 608 695 860 377
 372 678 344 796 721  78  72  25 371  37 571 479 752 533 600 489 415 195  15 355  47 457 773 670 825 837 827  30 357 794
 693 676 252 244 598 271 397 718 612  35 749 704 180  55 570 866 232 307 814 736  22 781  39 576 746 428 808 177 216  13
 699 162 198 262 138 783 831 315 785 805 111 788 800 199 786 257 264 899 341 486 433 829  83 284  42 774  94 380 535 152
 396 791 782 238 303 253 287 526 769 798 255 456 235 557 780 243 572 270 236 459 537 859 469 480 565 217 223 449 175 335
 605 849  38 248   3 251 776 696 148 347 620 215 249 503 823 731 256 172 900  20 843 551 871 226 724 606 205   8 844 187
 394 734 675  73 353   9 709 147 702 824 645 546 516 247 504  41 125 431 444  50 301 418 289 758 689 665 615 667  58 886
 159 292 281 834 497 330  32 865 127 737 812 121 472 229 527  10 641 540 423 779  18 313 481 703 674 797 115 569 464 673
 778  16 841 543 131  80   7 278 552 305  24 655 108 409 323  65 637 621 887 741  97  99 534 835 657 876 894 738 644 140

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.69207e+07us (= 46920.7ms, 46.9207s)
Wall-clock time (full program): 4.69536e+07us (= 46953.6ms, 46.9536s)
Satisfaction error: 0
Number of search iterations: 20215
Number of local moves: 4894 (including on plateau: 2499)
Number of local minimum: 1928 (including on plateau: 338)
Number of resets: 11
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 193 108 748 886 842 896 792 888  44 701 765  57 824 150 489 100 154 216 871 514 512 539 140  46  91 112 704  97 850 186
 769 894 861 123 237  38 899 802 578 739  89  77 761 135 898 146 131  65 757 891 653 392 593  79  72 874 130 238 117 477
 754 416 875  59 161  21  55 853  90 793 530  94 697 897 159 170 157 219 727 262 759 257 182 222 731 742 796 836 788 213
 647 273 685 101  93  37 632 680 227 872 113 172 808 134 152 132 242  63 876 854 210 719 563  45 139 840 862 819 635 890
 864 893 696 151 586 181 817 774 271 564  54 164 827 229 497  92 231  73  62 137 815 623 846 236 142 753 760 176 803 198
 789 411 602  70 277 887 272 797 661 839 122  47 625 215 196 239 102 180 106 787 879 654 645  81 129 844 832 276 663 288
 470  75 856 162 269 895 831 175 199 649 211 294 785 317 504 282 143 188 558 248 718 770 791 726 120 295 691 289 671 333
 609 252 783 266 184 136 811 878 209 595 230 460 801 433 314 104 141 128 807 145 806 841 651 259 357 203 881 362 614 255
 336 540 889  51 126 173 194 767 849 750 319 290 338 366 496 348  26 148 699 804 730 419 852 304 280 189 838 233 820 341
 327 305 674 270 250 321 318 782 877 885 274 381 245 296 848 243 483 326 291 882 613 405 734 218 105 205 220 156 752 829
 543 350 492 235 168 355 409 166 360 610 379 421 503 401 868 361 256 624 385 708 605 657 858 308 185 363 345 438 656 506
 429 541 423 367 779 375 356 670 260 499 463 400 857 310 437 265 251 359 368 167 687 507 851 371 253 373 678 469 509 241
 297 710 347 309 340 725 447 658 413 404 349 494 299 393 281 298 390 821 374 403 855 399 813 482 344 275 396 163 664 372
 432 485 246 284 900 440 511 407 652 486 410 212 461 358 365 529 263 346 354 457 576 380 528 892 456 364 516 427 325 453
 434 741 537 378 313 524 287 435 473 481 343 312 320 458 424 478 352 571 518 465 412 467 383 519 422 331 640 607 369 521
 394 598 391 307 449 370 415 426 479 397 532 552 565 450 445 431 443 436 406 580 559 316 402 428 339 573 487 441 382 522
 446 566 510 526 491 459 570 495 517 452 554 353 484 583 582  80 520 568 332 590 493  28 158 418 616 471 144 679 376 454
 668 214 279 673 551 420 414  25  53 386 569 448 322 618 124 634 488 581 633 684 462 557  16 622 681 631 550 439 217 556
 534 110 138 724 387 466 628 502 567 425 472 226 515 599 195 672 627 611 641 561 268 562 542 408 475 468 116 232 389 455
 240 505 264 525 545 648 683 544 490  99   2 693 587 629  78 630 596 669 527  60 315  30 254 660 790 501 642 553 118 638
 225 620 302 546 508 615 805 306 183 384 617 549 548 737  68 474 695 538 646  85  17 223 591 286 700 612 444 523 155 513
 662 585  14 621 555 644 686 342 451  66 560 866  11 667 329 717 639 417 531 395  58   8 119 589 709 637 115 655 575 292
 207 249  98 592 535 574 208  96 430 500  15 480  64 597 636 729 775 606 665 707 278 703  39 351 689 464 608 600 285 735
 121  67  32 756 764 747 676 178 572 111 536 715 577 843 533 762 626 702 127 200 153 244 330 688 692 716  31 584 337  95
 160 711 258 619 594 476  29 197 174  69 847 666 204 601 745 706 728 733 677 547  52 784 388 604  12 781 206 825  88  34
 165 588 293 777 398 698  40 192 794 323 814 694  61 659 721 650 823 736  35  23  48 234 442 751 743 147 109 643 335 579
 221 795  33 603 732 723 377 114 818 149 776 873 201 712  56 809 834 746  50 311 224   9 283 675 870   6 498 133  86 798
 744  74 833 837 740 334 190 107 300 261 845 883  24   7 884 799 705 828 324 228 682 267 171 690 800   5 179  20  41 713
 816  71 187 830   3 301  76 177 758  22 865 773 191   1 328 755 835 714 125 778  27 749 103 771 810  18  13 780 812 826
  19 768 169 867 738  36  87  82 766   4 860 869  10 720 863 880 859 303  43  42  49 772 247 786 763 722  84 822  83 202

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 6.58189e+06us (= 6581.89ms, 6.58189s)
Wall-clock time (full program): 6.61507e+06us (= 6615.07ms, 6.61507s)
Satisfaction error: 0
Number of search iterations: 1969
Number of local moves: 665 (including on plateau: 216)
Number of local minimum: 162 (including on plateau: 27)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
   6 878 865 106 161  96 150 120 853 115 859 809 226   4 143 172 213 870 821 889 734 882 817  37 806 745 793 249  88   8
 846 280 835 166  49  59  94 839 844  58 250 229 771 849 144  64 104 762 368 788 764 812 178 819  52 155 790 210 863 473
 827 103  10 116  36  92 118 651 831  85 198 786 750 756 176  26 744 724 713 748 567 388 284  35 813 737 529 137 727 808
 860 374  44   1  20  12  66 784 823  93 218 829 830  76 662  40 867 163 781 248 811 692 494 783 833 693 498  70   5 845
 726 285 706 568 221  18 160 773 759 211 717 720 765 673  30 329 690  23 702  67 749 201 235 746 758  16 111  13 752 791
   3 649 710 689   7 283  38 768 742  68 127 741 661 715  28 630 757  27 627 617 478 708 304 676 146 798 604  32 242 640
 658 257 696 728 208 157 170 825 803  29  34 694 620 723  73 641 675 358 714 609 763 303 179  77 686 637 537  57 101 503
 665 105 700 596 600 237  91  31 722 202 167 851 608 739 238 650 619 719 747  98 695 224  19 681 666 730 382  97  14 622
 684 130 660 731 628 253 156 663  11 383 219 547 605  83 310 659 685  46 575 634 583 635 316 607 501 624 334 344 180 729
 611 197 678 520 214 204 581 559 636   2  25 441 682 738 590 233 553 656 654 585  21 670 183 652 643 704  79 187 565 452
 603  95 618 632 531 332 679 592 184 582  17 534 599 577 646 593 613 141  22  45 576 165 550 614 533 669 216 556 485 516
 558 354 631 447 606 276 525  75 439 542 564  33 507 528 488 513 554 471 524 626 506  41 330 621 511 552   9 541 510 633
 557 482 586 572 457 342 555 580 540 595 268 203 496 574 571 629 458 509 551 612 223 139  65 588 578 544 222 514  15 490
 545 499 450 523 449 232 465 446 182 448 453 610 518 468 569 530 560 430 517 123 462 536 502 522 491 269 442 483 336 455
 508 538 535 527 424 414 440 487 459 492 402 451 398 307 371 397 389 548 466 409 566 467 412 481 347 341 526 403 489 521
 432 570 519 438 875 419 422 477 385 436 434 546 505 343 288 429 561 435 428 480 357 463 392 421 445 472 425 378 309 431
 320 484 476 416 312 898 437 369 411 405 401 615 393 479 493 324 351 591 456 370 470 366 486 349 469 500 319 648 433 474
 299 387 454 359 306 698 464 418 348 838 426 444 317 497 417 294 408 761 279 333 807 322 703 443 367 381 701 391 361 292
 278 733 394 390 286 543 266 362 532 331 794 814 267 396 380 313 379 314 881 311 277 243 755 406 384 300 683 372 754 377
 275 337 410 346 549 778 296 363 289 687 295 400 399 415 427 302 339 423 420 896 360 705 820 121 327 843 584 460 395 254
 273 691 192 373 297 602 340 376 323 623 864 338 308 345 247 282 240 263 365 122 767 893 766 356 241 149 886 834 888 271
 119 740 325 305 711 404 885 259 265 735 799 134 255 261 671 281 114 805 291 228 186 872 709 239 495 353 246 836 642 350
 251 699 293 287 776 674 785 871 375 868 504 209 200 364 252 193 264 256 355 873 138 818 664 195 326 145 644 515 386 335
 236 225 181 194 260 653 842 475 318 789 563 171 874 315 712 234 895 270 205 110 199 352 775 852 328  63 828 721 707 168
 132 601 159 802 879 877 861 102 175 174 774 177 274 189 862 718 217 787 190 804  84 258  80  90 894 230 290 796 848 191
 298 616  39 840 227 797 655 196 301 573 736 126 169 262 688 725 173 562 148 135 869 645 822 847  55 815 207 587 244 158
 220 668 231 638 832 779 792 212 697 677 321 136 206 142 899 760 892 625  82 153 109 407 810 100 162 133 826 795 164  47
 124 598 891 880 854 900 850  74 107 816 777 113 112 245 657 801  81 769 512 647 215  87 117 128 461  51  71 837 716  24
 858 890 185 272 856 589 579 639  99 782 770 147  60 855 751 866  48 151  78 824 125  69 594 188 108  86  61 772 413 800
 743  50  42  53 884 897 753 129  62 876 539 667 140 597 732 887  72  56  43 131  54 152 154 841  89 780 672 680 883 857

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 7.51224e+06us (= 7512.24ms, 7.51224s)
Wall-clock time (full program): 7.55317e+06us (= 7553.17ms, 7.55317s)
Satisfaction error: 0
Number of search iterations: 2048
Number of local moves: 852 (including on plateau: 325)
Number of local minimum: 146 (including on plateau: 45)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 550 801 311 741 867 700 850 863 341 675 387 350 707 479  71 176  66 419 121  31 840 191 420  33 764 813 185 133 326 304
 287  17 384 516 835 739 629 427 327 665 887 732 843 553 407 175  78 284 844   2   3  19 809 602  10 796 178 833  49 585
 876 457  22 250 821 854 533  20 855 202 751 448 715 243 569  91 653 891 841 418 277 210 640 728 197  26  37 752  87  51
 256  65 295 143 651 576 106 423 755  35 332 826 129 104 750 551 555  23 777 188 706 337 564 818 465 871 459 695 597 463
 546 771 236 802 316  76 647 593 422 749 868  61 138 770 269 866 877  46 400  83 713 896 504 151 498 355 494 212  94  62
 268 562 517 493 424 756 599 186 379 490 763 283 356 712 301 374 182 650 227  36 259 785 735  67 686 734 716 150 816   9
 508 789 760 187 682 170  11 719 349 594 464  59 701  34 638 601 131  12 869 127 320 536 180 677 621 632 509 146 767 722
 542 608  70 680 160 130 625 362 156 852 477 711 673 742 117 788  56 190 659 670 510 267 500 111 753 669  16 139 586 696
 485 296 567 105 167 759 616 315  13 434 312 769  28 664 697 252 633 442 478 774 240 265  15 590 662 157 582 834 643 721
 698  80 233 137 725 161 467 255 744 708 238 360 612 583 389 125 476 899 678 663 166 878  77 228 578 579 338 634 642 164
  24 782 394 577 318 552 523 483 159 615 618 565 548 528 221 153 781 308 466 547 179 119 559 857 412 183 900 513 262 369
 658 894 515 865 169 319 627 720 201 558  84 812  30 343  52 502 291 688 416 223 481 217 322 306 733 605 580 439 155 710
 689 603 561 218 449  98   8  73 488 486 193 822 103 361 298 531 589 637 413 336 473 714 776 600 703 209 482 276 799 527
 246 610  72 128 596 404 571 606 433 807 814 609 779 631 451 512  41 543 521 426 109 216 132 244 604   5 440 541 587 837
 529 274 566 572 398  93 249 683  74 254 535 539 842   6  27 484 207 222 645 806 773 808   4 646 136 687 526 880 501 549
  48 425 491 636 430 525 557 540 354 414 447 495 452 530 573 879 378 382 613 518 729 499 148 314  50 173 437 554 480 444
 286 519 377 438  90  54 780 224 810 264 617 568 245 454 743 300 363 390 270  29 289 893 496 142 648 630 364 619 882 731
 232 293 704 115 450 614 325 321 797 385 317 532 654 163 380 626 694 674  88 784 443 839 403 329 352 366 393 342  53 847
 471 359 556 230 560 445  89 505 898 470 328  69 790 831 383 272 253 432 415 832 395 892 429 469 635 460 241 402 123 281
 242 745 798 309 299 746 303  43 848 213 792 391 884 620 676 406 581 431  81 204 124  25 849 339 257 428 472  97 534 778
 411 410 718 692 702  64 668 709 248 365 347   1 804 401 681 397 475 503 200 795 373 263 685 468 492 234 330 671 282 126
 487 302 737 497 266 657 171 830  38 489 775 174 237 396  63 563 824 474 405 672 417 883 765 371 100 305 323 699 260 335
 214 353 864 285 368 897 766 409 279 870 220 641  68 135 399  79 344 888 791 628 860 107 758 624 251 856 219 181 122  39
 607 786 386 370 196 313 858 108 574 545 331 114 239 203 783 895 886 661 195 258 292 280 762 388 211 154 372 846 310 592
 623 112 144 455 522 453 324 717 199 294 421 168 514 141 297 693 235 208 845 667 346 192 511 761 723 622 827 462 348 691
 875 805 660 803 357 506 158  99 591 162 152 261 172 890 588 177 375  14 800 194 575 271  92 820 570 828 275 376 838 231
 644  75  47 544 120 598 351 101 873 611 215 446 829 278 885 794 441 823  42 787 435  82 229 724 817 345 851 226  96 206
 649  55 757 140 247  45 273 859 461  60 116 874 189 815 747 507 772 825  18 738 684 811 110  21 290 652 705  40 748 307
  44 334 655 726 793 853 165 727  95 147  58 690 149 819 679 288 740  32  57 198 736 584 836 862 113   7 392 367 639 730
 520 333 118 861 537 358 666 595 754 102 656 145  85  86 381 458 538 524 340 881 768 436 205 225 184 134 872 456 889 408

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.58627e+07us (= 25862.7ms, 25.8627s)
Wall-clock time (full program): 2.58958e+07us (= 25895.8ms, 25.8958s)
Satisfaction error: 0
Number of search iterations: 8885
Number of local moves: 2327 (including on plateau: 1123)
Number of local minimum: 807 (including on plateau: 163)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 785 180 724 795 759 896  85 790 468 782  64 753  63 461  44 780  41 148 447 253 214 798  80 109 145  17 665 745 623 801
 816 889 885  71 641  72 116  24 260 859 317 187  53 634 237 703 137  93 199 127 851 838 842  84 140 878 882 684 163 833
 674  27 536 168 621 196  54 899  86 639  57 620 153 619 831 644 123 181  69  31 883 232 876  92 850  46 758 893 858 799
 219 106 821 395 866 881  61 470  68 844  51  50 868 886 298 711  19 284  94 132 627 671 772  73 107 178 498 867 788 810
 841 130 892 897 727 259 204 685 334 860 131 177 186 823 103 332 292 477  62 100 607 236 677 222 118 895 716 431 707 394
 217 234 794  43 742  29 241 220 303 582 170 824 294 852  97 736  15 361 157  65 829 270 819 574 894 152 697 815 686 803
 120 139 701 720 857 900 873 238 111 726 213 182 256 805  77 173 149 358 569  30 721 265 840 898 135 250 856 738 440 175
 269 223 519 579 746 300 143 662 274 786 276 273 179 836 459 809 323  98 537 211 722 203 891 310 197 164 814 499 781 432
 682 200 666 304 218 709 316 299 331 822 248  75 202 835 151 761 146 209 134 570 774 890 663 336 221 191 863 765 652 282
 488 147 583 165 887 233 808 201 683 789 656 150 193 643 693 359 230 228 561 295 555 258 399 297 244 377 601 818 762 212
 337 748 524 633 650 756 275 386 198 205 352 513 347 281 215 252 344 277  74 330 884 345 396 216 391 658 832 747 754 595
 729 481 830 407 439 285 539 368 338 506 594 777 318 429 335 385 388 235 229 340 325 426 728 308 271 320 550 531 732 372
 279 328 689 307 735 414 416 245 404 319 428 502 467 564 651 406 360 324 455 381 301 540 339 480 870 825 364 482 262 378
 434 544 530 541 514 551 255 670 501 578 239 408 242 184 766 427 387 346 567 322 128 563 495 508 559 343 588 296 327 702
 460 503 511 369 456 500 363 485 534 568 479 565 349 552 390 436 585 380 278 512 315 518 224 776 478 283 397 538 405 306
 560 469 376 486 326 389 517 535 584 384 580 365 543 667 342 418 465 351 412 586 546 424 490 362 474 341 443 172 533 375
 457 441 286 392 289 630 393 558 463 225 437 528 547 371 156 604 417 383 571 557 442 624 350 421 494 458 356 454 603 608
 649 473 382 452 450 532 507   2 446 370 625 562 593 420 549 329 673 373 309 402 398 411 520 354 612 471 267 445 321 618
 646 668 195 497 556 483   6 104 449  23 464 353 509 403 419 629 581 611 510 489 425 654 261 422 210 616 415 714 637 566
 626 589  13 476 628 423 610 435 717 366  39 491 472 194 548 615 648 598 577 410 348 590 505 642 529 661 251  52  95 367
 587 638 293 268  79 526 691 715  18 290 523 757 525 115 462 572 599 698  35 653 374 704 602 409 522 596 263 138 287 576
 718 597 333 655  33 575 614 516  60  99 678 731 828  89 791  45 484 613 174 573 188 515 504 659 690 433 400 119 280 521
 657 664 357 122 154 527 438 783 706 291 475 636 812  36  34  81 734 632 872 687 142 631 312 622 545 487 144  83  67 784
 102 647 227 600 208 302 379 554 679 110 864 493 740 413 680 161 764 877 700 773 266  70 606 444 592 166  10 207 185 696
  11 744  59 845  16 126 617  96 542 231 797 676 775 189 733 591 635 771 820 699 247 681   8 723 451 843 311  78 162  38
  66 755 155 710 466 792 645 609 705 192 669 136 763 176 751 158 839 272 817 770 254 605  49 796 675 453  25  32 124  56
 553 793 401  21 133 264 847 496 879  82 739 725 688 114 712 160 848 849 854 769  58   5  37 767 640 672  55 314  28  12
  88 862   4   1  48 105 807 749 804 167 778 171 853 226 737 246 888 871 855 861 240  42 129 730 708 779  20 313 243 190
  90 249 121 750 112 719 826 695 802   9 692 813 694 206 448 117 741 865 743 800  91 430  87   7 713 837 305 257 183 113
 355  47 108 846 159 141 869  26 768 811 880  22   3 492 806 875 660 752 834 787 760  76  14 874  40 125 169 288 827 101

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.60317e+06us (= 5603.17ms, 5.60317s)
Wall-clock time (full program): 5.63619e+06us (= 5636.19ms, 5.63619s)
Satisfaction error: 0
Number of search iterations: 1412
Number of local moves: 787 (including on plateau: 229)
Number of local minimum: 92 (including on plateau: 34)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 796 215  51 414 103 199 148 547 246 503 890 655 564 861 418 124 789 260 396 228 841 413 771 603 820  31 223 187 786 433
  65   5 844 859 602 470 397 833  96  10 698 757 729 337 529 673 410 194 685  92  33 269 236 863 234 468 706 342 232 847
 769 498 693 489  73 514 625  20 539 682 824 225  74 755 860 885 322  19 266 777  93 302 495 463 822 231  58  80 850 212
  35  26 621  32 801 803 186 178 580  52 255 297 411 882 802  25 830 816 805 131 784 230  66 763 382 795 740 338 273 576
 548 686 613 287 144 160 612 179   2 174 573 596 361 139 457  36 578 437 688 852 712 485 560 551 408 128 719 743 739 348
 871 453 211 843 601 702 200 259 490 349  22 222 127 205 761 620 823 146 683  27 431 283 358 118 893 362 835 604 561 455
 846 157 842 125 742 749 213 738 630 327  88 262   1 821 717 237 245  86 347 675 836 339  21  46 543 876 209 589 671 537
 367 268 369 550 217 265 183 884 185 295 598 840 643 557 661 452 216 113 171 467  70 566 765 221 730 758 583 741 448 332
 151 164 678 169  61 526 870 140 306 461 210 754 439 372 359 534 855 588 845 288 326 487 491 428 657 459   8 508 629 752
 567 202 460  72 165 316 708 873 592 780 155 309 554 320 391 284 384 520  95 290 594 393 731 679 421 710 504 278 703 465
 377 774 313 519 687 530 416 624 308  56  45 376  76 395 831 354 817  81 371 385 406 674 727 475 279 811 161 545 458 644
 154 898 713 518 652 669 856 300 449 877 293 571 715 190 315 615 628 663 351 838  77 104 556  15  42  85 569 114 130 558
 328 735 280 633  98 798 722 639 568 107 868 772 425 523 407 572  64 286 684 116 126 132 756 310 482 156 874 636  55 363
 699 872 355 258 887 251 494 778 650 162 365 206 218 275 866 353 142 422 691  54 733 705 333 429  28 511 334 181 848 415
 314 718 298 825 562  63 785 746 533 791 676  68 829 267 159 481 403  13  91 329 695 451 356 869 203 305 617 770  37 261
 150  79 111 552 191  83 158 525 450 500 672 438 471 759   4 897 387 892 375 886 809 839  78 790 895 214  40 440  49 781
 724 238 478 133 818 510 292 432 546 360 423 607 600 865 454 252  71 575 426 381 776 311 352 241 677 420 357 446 638 112
 696 263 574 701  84 270  82 350 794 577 531 493 720 627  97 867 325 445 878 736 122 469 108 341  89 637 166 299 527 647
  34 436  60 499 366 541 879 233 398 517 605  23 242 646 271 565 704 751 402 473 147 690 804 584 117 323 374 828 515 488
 250 444 229 711 239 330 610 656 109 793 138 635 618   6 106 507 192 888 666 505 609 883 289   9 549 622 586 734 559  43
 247 779 792 881 651 512  11 590 813 819 689 208 747 479  29 340  12 692 177  44 827 343 240 581 405 249  18 370 582 388
 595 424 799 477 417 680 697 401 204 496 383 304 123 862 110 826 591 707 276 631 296 486 153 725 277 544 462 176 256 137
 170 319  17  16 563 456 400  24 257 346 184 810 889  87 767 832 619 390 502 681 173 694 896 129 782 641 726 750 168 227
 244  48 660 748 282 714 851 723 632 480  39  47 611 201 272 172 336 700   7 412 806 379 281 472 760 587 753 737 119 442
 875 654 149 392 197 368 101 464 409 532 528 220 616 597 658 864 135  62 593 542 649 120 497 653 301 443 521 198 394 783
 253 721 834 182 732 516 235 102 812 509 538 814 105  14 553 226 321 894 709 115 189 640 744 274 180 207 466 317 506 807
 386 775 243 373 880 447 248 163 667 141 662 797 642 762 484 599 900 196 648 524 219  75 294  59 344 380 858 134 188 427
 435  69 665 492 745 345 716 152 579 764 815 837 389  53 570  90 335 773 121 766  30 522 626 145 307 476 100 434 364 800
 670 787 513 474 536 404 285 303 668 441 555  41 312 175 540  38 224 849 399 664 728 608 430 891 254 768  94 143 585 136
 899 808  50 291 419 324 535 659   3 614 193 331 264 483  67 195 857  57 167 606 378 623 501 788 634 318 854 853 645  99

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.31714e+07us (= 43171.4ms, 43.1714s)
Wall-clock time (full program): 4.32043e+07us (= 43204.3ms, 43.2043s)
Satisfaction error: 0
Number of search iterations: 18581
Number of local moves: 4908 (including on plateau: 2622)
Number of local minimum: 1841 (including on plateau: 332)
Number of resets: 10
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 823 583 805  35 156 837  32 239 864 802 776 455 247  63  62 847 103 253 740 299 850 317 377 490 491 207  68  58 825 811
 376  50 721 840 863  22 648 335 578 340 549 390 877  31  92 407 895  95 152 646 869 134 170 184 880 474 201  20 897 779
 444 551  18 742  51 791 785 788 419   5 842 757 510 810  55  46 334  59 769 857 783 861 194 171 326 729  36   6  23 753
 331 749 716 760 157 762 887  75 117 411 828 697 296  53  66 403 741 379 303 871 891 826 222 466 116  34 437  21  88 812
 155 798 670 773 675  16 834 616 703  94 801 894 626 504 283 118 867  27  90 700 704 680   9 884  45 393 210 226 106  14
  99 767 803 398  48  52  28 782 533 522 672 114 195 445 727 780 712 497 265 786 548 336  71 764 101 726  69 166 815 694
  57 781 538 270 119 836 627   8 141 765 777  91 267 730 163  13 822 756 144 566 561  60 752 517 338 608 375 696 413 724
 784 746  30 544 278 722 682 734 124 312 817 677 685 711 147 209 728 446  74 800 395 149  24 679 230 202  67 356 637 526
  64 590 656 841 615 797 579 846  43 671 789 676  54 294 587  56 873 148 198 886 607  19 128 159 673 620 327  42 183 494
 143 766  29 571 146 584 553 702 665 575 543  93 793 605 747 216 111 542 647 516  44 140 603 545 743  39 218 636 596 404
 160 649 638 631 238 619  65 713 552 709 161 311 339 563  76 525 309 345 708 657 598 650 628 180 242 580 286 450 430 503
 279 496 621 297 172 613 577 609 565 658 501 718 153 591 554 234 547 362  83 595 883 310 470 641 250 237 321 228 602 348
 468 562 500   2 249  38 531 733 488 252 593 813  89 645 564 534  40 532 384 618 471 624 493 255 586 541 260 381 669 600
 480  78 487 323 316 521 475 102  33 460 476 483 513 456 465 343 829 537 640 511 452 519 505 611 589 557 661 477 191 425
 514 333 569 540 663 457 498 355 528 433 392 440 320 518 383 387 421 397 572 394 451 653 484 410 186 508 365 428 454 462
 459 352 385 439 266 358 482 506 610 651 373 441 405 314 774 576 386 366 509 467 318 359 639 623 447 319 464 473 330 424
 523 409 453 461 568  70 622 269 246 448 481 635 560 353 211 442 875 546 436 274 182 612 361 399 370 555 597 771 371 415
 486 389 418 748 692 374 367 485 438 416 357 295 301 185 396 794 585 347 795 351 443 363 346 349 502 406 529 582 241 535
 890 233 221 372 121 567 492 293 479 315 285 899 848 225 804 758 290 224 388 329 305 458 130 744 469 277 698 643 380 378
 687 328 432 402 594 427 298 243 344 536 844 262 272 342 131 745 434 831 300 158 369 853 858 302 401 426 878 235 292 291
 845 435 368 775 659 391 268 896 633 843 236 332 104 417 408 660 208 151 790 382 240 287 725 524 168 414 463 364 325 204
  15 674 229 652 154   3 818 212 478 219 145 341 735 337 281 530 754 422 289 264 400 893 827 133 755 495 707 855 888  10
 839 190 606 223 761 324 187  87 164 868 282 870 872 203 738 570 199 472 220 449 113 835 258 808 139 263 705 731 251 288
 520 515 820 217 630 175 644 592 882 678 136 125 429 189 768 686 231 816  86  84 206 604 706 821 280 122 681 512 181 179
 770 254 227 556 879 854  17 275 192 248 167 200 499 852 807 581 354 759 881 193 257 588 307 162 259 138 614 634 308 683
 719 360 350 165 527  26 322  11 214 830 276 174 601 814 691 799  79 889 710  82 177 273 666  85 885 866 304 625 739 256
 617 150  73 865 787 507  96 819 690 188  80 126 763 695 169 173 120 750 284 112 732 107 205 232 667 717 574 796 792 629
 664 662 197   7 699  12 778 245 244 142 129 668 313 178 824  72 489 127 723 550 431 271 860 137 849 856 892 832 559 105
 196   4 838  41 573 862 110 261 715   1 109 115  77 655 736 412  47 689 642  37 135 558 809 701 874 900 632 851 215 720
 108  61  97  25 859 898 213 684 833 123  98 423 772 737 806 599 132 751 693  81 100 176 688 539 654 306 876 420 714  49

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 8.80165e+06us (= 8801.65ms, 8.80165s)
Wall-clock time (full program): 8.83499e+06us (= 8834.99ms, 8.83499s)
Satisfaction error: 0
Number of search iterations: 2853
Number of local moves: 1134 (including on plateau: 495)
Number of local minimum: 230 (including on plateau: 51)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 579  98 874 605 821 189 164 409  21 248   5 895 748  38  67 235 878 848 781  83 560 272 303 113 858 381 820 849 542 231
 621 805 371 791 703  53  99  57 898  61 477 649 698 851 209 428 127 660 251 648 530 196 571 397 183 458 320 244 877 282
 145  93 830 899 199 829 278  79  52  81 810 114 679 125  89 863 345 548 552 181 867 746 757 487 550 741 287 897 234 158
 673 674 818 474 718 657 178 693 412 212 452 137 540  72 823 780 514 572 646 184  88 651 152 106 286 700 433 142 120 608
 262 517 135 382  75 659  64 861 900 110 100 314  42 492 202 896 541 665 776 460 126 833  50 133 860 856 377 455 611 761
  63 610 139 219 253 692 156 581 772 445 151 738 721 822 195 221  39 697 319 574 469 637 529 866 204 654 786 197 162 604
 869 118 163  11 583 420 589 875  56 690 389 124 694 835 763 887 447 153   4 726 789 258 595 331 276 852  71 871   7  69
 388 260 566 625 123 750 593 876 268 819  55 532 386 372 241 243 147 843 865 569 187 704 279  46 769 584 705 263 325 132
 561 193 227  47 759  76 269 246 812 138 329 650 798 676 505 328 831 883 743 161 502 336 713 206 489 364 631 575 254 213
 342 264 273 827 200 803 493 330 667 708 210 480  78 845 549 468  37 681 711 893 300 130 290 281 211 101 735 578 712 318
 297 376 380 146 321 719 802 346 427 417 880 509 890  36 742  91 872 223 881 515 413 293 288  49 641 128 369 615 191 658
  45 728 348 609 442 298 684 255 732 870 170 734 808 682 374 436 736 366 315 478   8 277 353 307 289 527 614 201 408 421
 449  84 837  92 384 669  62 570 642 857 423 683 190 886 305 105 396 668 709 343 635 558 332 400 252 375 464 399 378 368
 695 714 215 337 166 356 814 247 768 435 482 392  41 783 512 720 643 439 317  80 141 451 687 462 414 629 839 259  82 395
 194 817 894 354 379 327 112 617 576 271 770 634 257 494  33 771 504 284 516 577 391 174 385 205 547 508 309 398 774 443
  28 459 485 383 476 360 497 453 172 842 754  32 717 745  73 216 437 567 306 490 804 730 472 801 607 242 148  12 484 723
 603 622 173   2 237 501 394 686 425 538 590 475 600 598 523 794 441 393 666 544 299 461 419   6 826 233 116 341 498 511
 545 496  58 675 592 349 438  34 825 352 334 507 457 616 553 522 562  17 624 226 588  22 528 859 531 426 586 416 555 222
 838 340 370 884 543 294 503 367  25 525 387 296 454 312 140  40 749 618  31 891 481 568 677 766 171 220 168 784 403 670
 415 813 691 229 302 362 680 788  35 176 521 119 844 510 557 424 186 787 313  29 500 390 404 520 359 143 486 702 585 645
 429 160 355 619 310 623 868 539 323 602 565 308 280 506 534 361 479  68 144 782  15 150 764 882 326 706 301 846 430 240
 599 612 716 182 725 122 795 483 655 582 656 564 115 217 661  66  24  43 185 192 536 411 747 737 444 710  77 401 671 587
 573 626 628 653 689 179 432 664 250 275 632 796 154 108 535 519 136 292 270 765  59 208 418 729 518 236 450 448 778 495
 639 596 663 344 350 777 224 188 266 731 779 591 739 261 238 760 357 465   9 699 727 815 630   1 471 207 431 230 102 225
  65 245 601 662 546 347 751 556 159 446  18 198 488  51 840 134 467 647 672 256 850 155 841 633  19 466 554 678 316 854
 836 752 249  95 358 169 551 333 373 715  86 440 104  14 733 756 785 121 338 533  10 456 724 594 228 613  90 853 799 807
 824 335 109 889 696 291 129  87 322 563 767  94  20 707 806  96  44 180 131 351 758 879 167 809 722 402 644 239 753 701
 117 744  30 111  74 265 740 526 513  13 816  70   3 410 828 422 892 470 792 365 339 463 103 775 790 473 580 499 640 652
 773  97 793 832 627 888 559 149 407 157 847 606 285 274  23 295  26 232 214 755 855 885  54 811 311 405 324  16 797 218
  48 267 524 537 864 491 597 620 762 636  60 834 685 177 862 638 873  85 434 165 688 406 283 203 363 175 800 107  27 304

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.46036e+07us (= 24603.6ms, 24.6036s)
Wall-clock time (full program): 2.46363e+07us (= 24636.3ms, 24.6363s)
Satisfaction error: 0
Number of search iterations: 8746
Number of local moves: 2518 (including on plateau: 1246)
Number of local minimum: 766 (including on plateau: 159)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  45 832 781 857  31 767  37 175 269 393 798 110 380 563 817  39 332 113  10 405 632 768 800 179 376 514 746 871 215 660
 140 885 166 739 131 837 233 633  88 898 321 572 790  65 270 742 297 850 121 861 569  61  72 158 106 827 186 897 155 845
 870 157 692 244 894  79  56 474 196  13 843 119 824 853 399  35 280 838  21  12 831 731 807 129 693 812 680  16 109 808
 840 811 341   9 457 630  20 334 125  52 789 128 755 753 543 747 225 847  82 796 331 759 306 232 194 675 510 550  48 626
 683 740 780 751 792 839 115 537 132  49 760 396   6 482 725 854 230 816 637   3 642   5  86 173  85  62 678 566 603 288
 386  47 695 718 896  11 254 325  78 893 895  59 523 745 764 788 102 836 463 112 676 665 152 701  51  18 697 777  64 124
 584 224  19 133 823 754  30 548  99 728 657 374 689 515 453 741  80 340 710 636 147 769 668 860 217 586 111 709 227  84
 669 717 601 638 732 682  58 611 605 171 198 127  36  26 706 694 162 664 743 756 337 430 497 595  95 205  32 672 238 818
 442 733 784 622 787 667 600 580  97 234  22 644 108 700 588 571  90 735 564 577 164 134 470  15  29 540  33 738 655 592
 594 392 727 582 551 652 333 310 101 631 704 886 679 549 105 698 163  42 567 517  27 641 575   4  24 643  38 556 628 596
 565 681 613 614 285 485 202 597 151  40 502 477 612 557 182 585 174 726 806 181 758 447 559 313 621 419 620 690  28  25
 500 448 437   2 576 799 301 253 554 624 558 449 648 505 489 384 319 276 342 287 338 724 561 616 451 506  68 478 534 488
 617 522 536   1  14 487  91 833 570 663 526 527 560 634 265 658 496 426 142 583 149 466 484 529 370 531 397 552 454 432
 650 421 581 480 593 403 509 532 473  81 390 513 490 428  23 363 299 481 748 476  34 406 467 598 431 438 615 528 418 646
 379 395 555 373 590 439 574 495 412 458 366 424 344 468 547 533 507 504 653 541 499 394 356 271 881 143 193 368 503 350
 317 461  73 417 819 435 475 355 654 809 444 516 239 335 471 416 358 440 160 493 674 427 498 472 420 231 521 511 609 465
 518 579 404 512 687 391 589 772 323 459 452 315 524   7 180 289 343 347 302 367 864 867 351 842 414 383 433 525 117 359
 345 422 360 364 892 443 627  92 214 441 103 659 841 336 822 407 791 483 312 241 761 464 274 296 329 298 303 365 455 775
 279 400 308 423 311 408 858 868 651 348 381 410 148 282 804 382 508 793 460 228 810 369 195 277 712 372 640 144 385 361
 339 388  94 353 208 300 591 802 863 436 855 322 150 429 783 677 501 318 145 387 223 307 352 803 711 409 852 309 314 294
 207 242 346 267 328 260 801 719 568 445 324 859 425 826 666 236 872  76 246 375 469 362 248 295 730 377 450 357 873 266
 813 398 750 292  55 252 708 402 862 782 545 849 316 304 210 278 647 604 220 656 779 243 258 479 456 165 120 122 749 201
 178 139 250 235  98 283 774 670 846 815 189 662 786 188 639 291 828 177 226 821 434 161 263 264 773 721 378 199 491 736
 327 286 272 562 293 218 520 610 888 542 371 107 673 875 190 256 729 141 530 249 262 553 762 578 268 255 869 221 257 851
 900 200 156 797  46 883 599 126 635 720 247 766 330 219 602 216 887 135 259 222 170 326 191 696 891 290 785 237 771 213
  60 519 778 185 401  17 866 349 707 618 114 251 752 116 184 204 703  87 844 882  96 168 691 856 770 705 625  66 765 136
  50  93 890 699 229 203 486 261 830 167 245 829 146 776 629 104 608 702 805 686 606 169 211 757 734 275 354 212 587 172
 130 795 284 744  41 389 713 100 607 240 688 305  74  57 206 722 877 154 865 619 197 273 814 281 763 714 649 320 825  69
 209 535 159 187 884 494 834  63  43 192 153 137 123  44 176  67 645 446 848 492 623 880 671 411 737 716 138 889 899 820
 879  53  83 715  71   8 661  89 874 573  75 723 544 878  77 538 462 118 684  54 413 546 876 835 183 685 794  70 539 415

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.00866e+07us (= 10086.6ms, 10.0866s)
Wall-clock time (full program): 1.01194e+07us (= 10119.4ms, 10.1194s)
Satisfaction error: 0
Number of search iterations: 3237
Number of local moves: 1083 (including on plateau: 425)
Number of local minimum: 256 (including on plateau: 61)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 137 865 167  23 822 577 365  68 144 892 727 838  85 789  56 124  39 136 267  70 761 847   1 123 842 654 795 780 650 871
 753 112 231 392 145 131 561 103 115 889 703 505 655 900 899 205 601  49 298 150 864 645 756 704  79 388  11  40 880 751
  97 425 874 151 877 883 357 808 189 740 118 285  95 157 542   5 695  17 669 120 863  60 835 786 100 169 875 866 132 725
  47 686 381 887 891 888 274  59 670 571 554 868 129 111  54  93 222 737 851  43 879 683 171 759  10  82 878 133 454 450
 861 679 121 259 760 640 820 165 405 209 513 602 856 321 705 195 845 101 598 228 596 603  30 839 156 647 294 122 196 149
 255 197 600 175 191 796 893 375  89 884 264 213 587 262 373  90 628  87 656 813 638 876 739 890 498 238 146 125 701 236
  77 210 514 232 660  99 854 549 108 860 176 300 744 522 885  84 734 489 564 665 809 528 211 610 219 142 367 179 353 771
 764 148 684  92 252 127 312 637 245 721 815 135 862 297 765 767 257 141 413 710 850 716 895 536 352 277 265 109 198 173
 254 235 805 215 897 200 714 193 481 240 329 223 801 247 859 829 289 729 518 186 575 747 816 354  86 440 604 331 160 158
 319 251 793 162 214 422 719 512 358 548 301 692 812 180 281 292 794 493 307 490 170 589 541 849 336 494 328 269 420 579
 317 464 370 369 652 304 688 273  73 500 445 178 639 333 296 347 749 320 872 882 623 711 325 804 443 376 284 534 253  91
 322 308 743 466 387 785 617 351 580 216 140 256 736 229 409 746 359 648 777 345 653 401 449 818 366 107 286 181 444 390
 225 461 403 556 448 379 799 423 339 311 511 391 442 529 456 492 424 886 315  18 607 523 459 487 460 429 455 519 338 430
 207 368 507 356 362 378 341 590 806 689 342 497 348 217 432 591 508 852 436 410 560 592 478 484 234 385 344 318 416 467
 621 194  83 306 361 302 263 138 408 562 486 384 626 293 527 784 220 380 696 821 584 202 406 870 858 371 472 546 501 250
 418 477 735 458 421 326 372 427 288 551 417 279 291 578 451 502 717 206 346 545 439 246 624 540 404 463 525 516 570 383
 510 649 553 608 585 402 237 183 668  45 675 155  65 433 593 550 766 840 663 896 426 116 437 382 485  22 496 465 163 447
 363 270 565 811 393 521 441 622 618 249 457 524 355 212 469 192 625 411 504 343 431 224 543 491 113 462 476 280 800 750
 397 530 738 783 337 395 218 483 544 473 452  26 153 453 881 691 674 134   9 104 314 324 475 243 316 446 615 894 682 731
 581 517 495 574 672 221 595 558 599  58  78  24 164 898 708 310 629 470 290   6 313  94 844 327 661 547 412 659 644 567
 174 671 712 827 399 482 538 597 573  19 532 699 398 631 305 258 201 435 187 480 242 143 559  27 676 509 685 535 303 718
 531 867 233  41 594 488 184 552  15 434 588 612  55 557 605 834 555 568 276 569 374 172  80  46 848 697 520 340 614 666
 788 635 662 266 752 582 268  20 754 295 770 309 275 646 537 396 566 364 349 680 117 563  36  61 334 611 606 609 613  51
 642 869  35 778  33 706  98 824 503  69 641 630 377 658  88 287 261 227 515 724  63  37 479 283 709 763 632 781  96 707
 776 678 415 787 438 282  48 586 681 190  71 791 271 619 239 836   4 687  42 154   2 360 730  25 779 713 723 857  16 715
 831  14 690 802  66 636 386 664 873 576 758 742 633 468 394 159 130 651 620 414   7  31 634 583 102 526 199  53 745 128
 755 572  64  32  34 762 471 407 732 506 825 139 323  81  62 657 166 846 230 810 177 823 203 260 748 833 244 814 698 241
 627  74  28 474 272 694 428 817 126 769  29 773 188 819 204 667 702 722 182 168  12 539 161  44 798 643 830 832 774 119
 853 700 208 792 533  57 616 728 790 335 299 673 782 797 110 775 152 837 332 843 147 720 248 105 677 226  76  21   8  75
  13 389 106 841  67  50  38 803 741 114 499 772 768 278 330 757   3  52 733 828 419 400 350 185 826 855  72 807 693 726

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 9.5643e+06us (= 9564.3ms, 9.5643s)
Wall-clock time (full program): 9.59737e+06us (= 9597.37ms, 9.59737s)
Satisfaction error: 0
Number of search iterations: 2975
Number of local moves: 1044 (including on plateau: 420)
Number of local minimum: 227 (including on plateau: 54)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  73 186 773 769 255 331 473  49 805 865  61 850 510 890  80  11  58 288 814  46 862  55 799 757 835 635 280 715 265 125
 684 466  67 789 143 803  47 849 375   6 561 102 649 896 710   8  63  12 480 535 275  39 714 406 283 591 794 882 438 848
 363 109  24 839 612 775 434 213 828  79 159 782 779 218 675 515 130 417 626 505 379 150 767 111 728 340 488 431 883 156
 257 177 686 831 411 891 207 154 215 135 173 869 169 812 784 261 815 170 199 875 274 765 273 881  35 134 873 386 192 611
 884 436 756 669 727 864 354  51 813 808  66  87 874  30 817 226 659 200 508 560 502 445 100 220 180 454 124 661 355  85
 103   7  71 553 410 886 845 419 110  62   5 885 665 234 196 369  83 719  10 681 555 738 678 204 857 853 569 879 645 224
 249 227 621 250  14 690 595 292 899 191 362 458 301 158 142 660 859 742 327 825 833 290 662 889 179 277 353 342 676 152
 513 195 151 704 209  41 108  53 241 878  99 536 440 197 880 797 774 731  75 691 599 657 238 628 552 726 795 339 317 351
 758  33 556 734 328 791 477 278 743 455  13 511 276 269 713 146 160 415 211 763 463 428 503 648 187 802 365 863  20 606
 313 792 201   1 352 345 892 287 216 637 674 834 442 233 822 343 361 462 297 447 356 409 358 349 405 893 624 272 412 486
 225 456 872 644 887 300 259 545 122 604 188 693 240 376 575 653 620  76 176 639 735 141 368 861 636 324 389 194 248 469
 587 539 534 432 750 450 217 181 854 189 329 479 219 399 577  48 350 285 378 745 452 374 467 471 470 588 615 298 517 721
 305 337 549  37 311 597 163 816  29 623 654 429 391 291 585 843 312 490 258 584 307 771 741 330 650 425 634 112 547 394
 397 871 413 877 786  74 622 498 253 592 139 495  70 404  40 426 296 581 766  36  32 299 663 341 430 866 651 528 367 702
 752 236 360 344 359 310 133 420 562 497 671 472 242 116 408  77 385 563 751 608 501 837 491 478 523 286 673 451 847 162
 421 550 868 117 543 494 459 303 512 518 370 564 364 105 729  81 289  98 487 377 396 457 557 596 449 692 228 526 489 876
 465 551 694  78 496 281 538 500 335 336 753 504 113 482 516 558 571 464 840  68 707  60 338 522 844 293  69 507 618 414
 759 629 268 568 762 416 418 309  90  43 401 531  38 318 613 583 393 867 251 619 895 149 175 574 841 582 138 647 205 433
 230 484 403 246 294 304 524 632 602 481 532 171 744 476 483 474 443 898  17 244 573 392 295 700 461 542 203 666 422 579
 453 521 402 824 600 326 346 601 320 284 382 387 530 519  93 527 578 643 830 232 724 739 821  45 499  26  50 593 398 222
 437 640 514 115  95 260 708 475 712 263 264  96 717 829 806 229 652 271 617  18  23 668 172 747 333 630 646 544 509 525
 572  56 723  42 633 371 768 761 529 783 590  16 851 818 161 699  91 860 625  34 384 697 372 598  27 247 689 119  52 347
 594 576 322 223 132 395 641 237 842 424 709 705 448 400 137 589 749 323 221 107 696 722 533 672  88 609 140  84 809 388
 446 493 559 852 366 118  25 616 182 190 537  94 541 688 164 706 827 231 826 856 580 381 239 348 245  57 778 468 554 548
 254 780 439 279 718 823 325 804 178 586 770 570  82 703 210 306 683 897 631 148 166 698 282 144 764 198 746  59 127 145
 129 687 104 755 711  92 114 603 546 567 800 667 319 737 610 798 407 202 655 266 614 444 390 441 435   2 302 796 165 157
 147 785 664 605 184 321 685 733 894 740 801 123 506 656 235 638 136  89 101 730 334 679 308  97 357 128 212 193 776 658
 520 748  86 315 185 106 811 760 167 787 777 270 427 736 540 316 243 695 807 566 267  44 332 262 126 153 131 682 810 846
 725 565  54   4 819 380 720 870 373 772 855 214 836  65  31 790 670  72  15 701   3 832 627  21 208 677 314  22 788 492
 900 383 781  19 423 680 607 206 168 120 820 121 732 460 183 838 858 754 716   9  28 155 252 174 888 485 642 256  64 793

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.95391e+07us (= 19539.1ms, 19.5391s)
Wall-clock time (full program): 1.95721e+07us (= 19572.1ms, 19.5721s)
Satisfaction error: 0
Number of search iterations: 6617
Number of local moves: 1770 (including on plateau: 755)
Number of local minimum: 615 (including on plateau: 103)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 210 116 406 201 626 858 565 434 198 799 697 318 277 672 745 204 798 154 491 786 666  61 730 333 566  67 508 255 279 495
  11 575 314 802  49 662 102 365 287 637 366 718   9 407 371 769 418 544 768 700 372 324 611 578 196   7 242 832 641 838
 674 661 290 190 207 651 685  54 100 248 187 633 805 215 643  77 843 267 840 659 123 572 147  82 646 483 885 141 615 892
 594 753  29 744 617 870 355 316 168 526 586 501 668 184 732  70 369 192 191 618 276 775 599 142 470   8 472 670 487 533
 474 628 132 262 562 177 484 867 284  19 810 882 347 118 546 774 395 553 605 307 309 516  97 545 310 564 884 756  80 228
  63 404 164 348 726  86 299 664 634 541 234 500 283 532 813 804 424 229 831 793 556 629 256  72 837 122 128 456 498 589
 600 121 226 471 555 440 560 742 762 143 614 374 647 151 441  71 763  37 785 777 129 125 306 408 816 462 438 596 709 246
  85 401 898 779 419 489 519 773 645 186 280 158 603 683  15 405 803 724 258 130  20 865  48 161 894 694 676 437 457  10
  22 343 601 319  42  47 377 455 895 828 272 124 644 612 650 823 465 252 632 464 851 701 853 704 115 218 144 173 783 106
 264 281 188 766 370  91 361  60 509 888 230 733 761 362 583 139 743 563 459 375 265 274 711 747 152 801 669 133 767 270
 257 403 303 253 175 547 679 331 699 356 364 689 866 297 293 760 289 869  46 358 421 417 686 754 193 300 291 282 688 649
 717 719 880  93 736 460 345  89 512 232 496  81 528 702 415 759  56 789 140  23 259 335 342  76 558 891 790 388 468 636
 800  53 796 182 502 225 587 430 155 604 442 114 194 821 812 494 657 385 620 871 582 542 111 206 104 631 380 427 772  16
 411 835 503 655 654 873 237 610 846 239 400 536  14 552 720 360 467  95   3 390 619  45 696 792 162 521  12 103 622 543
 376 752 266 712 429 117  27 787  78 896 402 703 514 227 212 886 378 623 577 687 211 195 513 624 850 220 159 597 110 387
 334  51 826 315 493 145 739  98 397 517 889 245 160 268  31 878 734 807 608 477 680 273   1 741 432 525 499 681 653  18
 209 705 859 431 410 510 590 721 109 609 119 305  69 861 428 515 329 567 254 271  21 710 706 389 638 295 505 690 200 490
 181 250 436   4 171 860  73 425 794 269 126 852 809 222 776  64 217 625 205 765 167 778 707 682 561 580 551 750 602  13
 872 326 466 530 134  28 485 758 588 156 857 535 749 677 213 138  65 475 413 448 740 231 108 841 559 836  50  99 357 781
 899 199 527 693 292  62 875 285 570 224 392 713 900  68 621 862  74 579 180  26 660 784 595 443  88 169 317 480 675 263
 658 458 179 723 353 233 107  66 497 780 833 327 715 863 294 444 642 136  52 153 537 593 113 746 506 854 435 439 367 412
 652 337 576 463 656 165 714 581   6 383 663 260 304 479  59 795 302 384 598 727 149 278 386 839 344 797 881 131 363 243
 332 433  35 849 244 178 635 183 822  38 673  25 340 584 504 396 883  24 864  57 640 820 879  83 420 573 423 607 214 757
 172  90 235 416 671 815 722 554 764 446 897 788 174 488  41 202 346 321  84 648 738 261 296 548 507 476 630 197 146 842
 350 381 692 236 120 806 325 830 338 550 286 684 323 478 848 520 393 105 678 382 844 251 782   2 453  87 454 336 531 450
 591 890 737 616 731 473 398 330 368 613  40  92 301 223 856 447  36 639 359 308 735  96 275 349 665  17 729 824  79 698
 893 751 298 221 708 518  39 189  44 811 695 523  94 322 481  34 571 874 716  55 399 829 249 452  75 818  33 808 486 529
 770 876 422 238 771 549 391 534 482  43 312 373 451 311  30 574 163 568 538 728 877 341 791 148  58 449 394 524 569 240
 868  32 414 492 247 855 814 539 137 328 112 409 627 667 185 150   5 847 585 313 208 540 755 203 748 834 557 352 170 522
 176 691 817 511 845 725 426 445 827 606 241 320 339 469 157 101 887 288 135 219 461 354 166 825 592 216 379 351 127 819

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.05571e+07us (= 50557.1ms, 50.5571s)
Wall-clock time (full program): 5.059e+07us (= 50590ms, 50.59s)
Satisfaction error: 0
Number of search iterations: 22346
Number of local moves: 4918 (including on plateau: 2446)
Number of local minimum: 2124 (including on plateau: 301)
Number of resets: 12
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 631  18 792  92 680 704  50   8 858  37 140 782 119 639 311 738 706 352 773 183 703 654 673  79  40 142 469 491 751 900
 124  75 562 788 173 849 890 829 745 165 516 758  93 772  88 755 163 523  38   7 737 804 714 157 251 831  84 815 104 105
 708  66 495 763 126  86  73 869 239 170 162 847  69 875  90 739 882 642 614 784 698  89 822  41 176  76 464 309 670 871
 489  58 517 117 368 780 799 771 684 421  97 762  98 115 657 723 635  26 634 671  91 200 774 245 616 123 702 664 623  55
 726 181 666 125 414 149 457 238 686  78 242 303 690 707 355 661 508 766  64 694 621 244 649 136 794 542 348 592 339 540
 874 620 160 166 120 797 109 730 833 477  19 185 139 727 285 143 543 236 725 659 785 233 447 722 526 161 830 221 156 887
 384 254 214 612 351 204 863 134 154 382 462 187 338 891 110 217  30 850 147 818 835 678 837 894 218 510 197 805 556 383
 744 227 199 287 790 153 256 709 228 222 820 189 713 816 171 802 493 653  61 346 765 736 760 301 292 357 247 712 263 203
 253 860  70 225 335 150 234 817 864 180 559 436 305 224 271 880 809 748 315 332 679 866 806 195  65 349 507 832 208 141
 397 768 266 277 385 188 167 267 232 865 281  44 440 674 380 825 467 884 558 286 113 840 611 873 466 360 602 533 186 280
 872  31 308 260 290 223 675 102 731 897 754 423 216 300 577 503 598 889 240 415 356 333 350 878 344 337 326 264 328 695
 336  46 304 270 313 406 879 279 192 456 867 282 603 524 196  74 321 862 433 389 595 834 627 715 854 372 636 241 480 129
 413 594 419 504 381 483 388 362 789 343 669 359 608 555 310 325 444 396 651 512   6 302 567 445 103 448 588 412 502 637
 418 757 481 437 519 250 289 375 416 861 364 401 420 312 393 442 591 515 434 405 497 429 607 729 298 116 693 131 461 474
 633 532 587 402 399 358 458 319 422 392 475 394 371 452 443 552 500 118 460 593 520 435 379 548 505 132 318 373 575 870
 451 231 427 441 425 431 386 478 269 249 584 546 795 246 767 606 179 391 182 268 404 472 465 574 759 511 450 454 488 586
 536 496 564 492 275 330 426 857 856 137 274   3 513 470 573 658 753  13 572 403 561 410 407 322 459 541 482 324 479 329
 291 640 190 599 211 689 398 449 663 801 719 596 369 133  28 629 424 178 345 699 366 341 378 746 529 430 128 537 484 525
 554 545   4 506 836 194 547 550 579  60 644 390 580 711 296 278 501 159  83 589 720   2 152 895 645 549 210 578 628 530
 892 617 205 597  96 648 877 299 846 288 174 551 212 509 235 146 622 641 718 486 100 571  82 347 317 843 395 582 265 354
 700 601 742 294 585 201 581 428 365  34 138 583 841 193 883 145  81 262 527 688 643 563  48 272 691 610 672 273 377 494
 207 590 646 342 566 668 652 660 340 687 619 569 570  49 553 786  45  14 783   5 127 255  42 261 528 521 499 676 650 605
 881 409 685 899 387 490  59  80 151 717 893 576 747  99 565  12  27 155 681 701 316 376 306 184 721 683 320 568 111 716
 106 743 604 761 625 667 498  68 130 557 453 438 844 135 811 172 248 432 219 630  95   1 544 624 821 609 258 307 752 363
 331 647 682 158 710  87 665 781 148 787 164 740 692 361 824 626  23 198 793 656 334 859  62 370  24 297 724  63 638  71
 202 514 764 885 618 886 175  52 230 353 144 741  67 896 898  22  72 876 732 259  53 226 107 662 476  51 749 534 798 473
 206 779 417 538 848 812  54 411 108 776 600 463 852 400 853 237 613 215 615  16 439 169 101 220 803 735  47 408 769  11
  36 539  94 838 845 213 775 778  25 839 705 770 177 295 810 697 677 487 522 446 374 468 114 252  20 696   9 728  43 243
  35 868 632  33 823 531 796 800  77 813 122  29 284 314 327 112 826 777 367  57 191 842 808 535 323 827 733  56  17 560
  85 209 819 807  21 888  39  15 655 471 855 168 750 121 455  10 734 257 229 518 791 283 276 293 851 756 828  32 814 485

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.42636e+07us (= 14263.6ms, 14.2636s)
Wall-clock time (full program): 1.42965e+07us (= 14296.5ms, 14.2965s)
Satisfaction error: 0
Number of search iterations: 4929
Number of local moves: 1467 (including on plateau: 563)
Number of local minimum: 424 (including on plateau: 62)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 324  82 307 856 215  21 849 817 823 789 675 250 216 148 857 530 204 880 440 362 333 615 858  45  75 149 470 824 126 375
 125 832  67 816  25  22 803 192 826 871 775 829 229 308 839  58 179 851  35 837 819 335 549 145 284  26   4 784 325 725
 243 795 310 864  95  19 798 797 755 866 409  61 122 337 809  13 102 865 746 836 822 171 821 118 238   8 115   5 594 781
  10 352  28  16 231 270 210 710 799 736 771 831  90  15 752 155   9 731 765 855 869 106 813 778 182  12 888 730  31 770
  88 667  68 779   6 170 802 783 239 840 672 233 237  63 772 749  77 699 454 774 818 140  81 711 597   1 235 785 185 790
 263 662 739 708 301  11 757 681 733 700 687  59  29 169 630 128 636 800 706 692 759 363 255 701  36 146 183  18 389 574
 311 323 652 747 167  55  20 147 697 590 595 110 166 176 796 607 756 639 791 680 753 131 199 129 338 722 659 645 377 537
 139 264 734 653 364 620 695  64 727 358 638  56  92  23 577 565 713 566 673 684 658 575  48 610 205 592 117 717 112 676
 644 314 618 585 227 617 688 689  27 794 424 195 298  44 609 627 356 604 648 634 810   7 642 641 213   2  40 589 214 715
 300 207 661 596 248 571 599 626 669  79 433  34 165 130 693 520 514 635 654 624 582 124 628 608  54 579 651 657 113 561
  57 152 532 666 536 137 584 569 600 576  17 501 591 616 625 703 583 650 497 534 556 521 156 601 103 543 143 656 342 168
 187 212 668 611  83 541 504 557 623 564 455 290 531 448 560 516 547 581 202 545  30 540 550 605 135 580 444 559 341 506
 445 346  84 502 539 265 439 554 474 523 483 567 360 493 471 619 558 327 509 463 568 551 351 500 334 467 383 614   3 723
 552  37 429 469 353 511 498 479 456  24  66 562 570 499 400 515 396 621 533 430 622 450 413 524 406 587 586 482 528 517
 412 473 420 478 529 527 395 472 404 495 542 477 397 426 489 538 465 418 476 525 492 484 374  14 423 518 555 368 449 480
 573 503 457 496 330 481 410 443 466 403 422 419 438 488 507 451 316 415 459 436 407 526 317 385 674 461 522 414 462 434
 366 519 394 299 606 435 508 381 359 416 452 464 411 373 563 274 894 390 398 486 402 294 603 367 491 421 744 432 391 382
 441 718 548 475 629 401 372 331 339 425 835 485 431 361 348 384 350 453 269 446 260 437 685 370 647 318 380 309 764 304
 758 724 220 442 505 417 399 388 393 369 876 241 329 632 295 261 349 376 807 259 321 257 405 232 686 340 315 343 762 814
 490 671 283 296 776 735 365 428 262 273 748 578 379 345 328 332 252 278 458 893 344 643 613 336 705 392 218 282 544 268
 769 612 281 320 427 347 287 306 247 655 289 861 305 830 297 286 242 408 276 371 873 786 664 293 751 203 633 230 386 280
 678 804 244 224 683 811 153 285 891 246 326 853 883 787 175 303 254  94 510 302 150 846 253 267 847 209 196 258 766 217
 698 719 223 188 679 812 200 897 163 266 313 741 740 885 277 136 208 275 354 127 198 251 842 312 777 355 743 292 487 357
 494 637 132 234 745 460 890 189 240 319 141 271 892 875 119 138 852 228 827 173 291 468 236  47 780 881 665 222 872 197
 879 631 272 121 801 728 186 142 177 279 245 768 702 649 225 761 322 219  98  43 178 709 815 694 387 792 161 249 729 553
 825  89 874 159 843 194 158 806 107 174 193 535 889 447 201 738 877 221  60  71  62 646 160 896 712 732 754 164 882  46
 714 123 760 109 886 767 191 256  85  86 181 805 782 670 116  76 898  96  97  73  70 808 704 899 513 863 820  72 895 100
 887  80 900  41 845 867 101 120 144 162 588 598 690 773  38 848 190  39  91 157 184 726 288 172 884 868 716 838 593  87
 793 859 860  74 737 841  52 226 721 572 211 134 763 828 114 834 696  51  42 154  78 151  93 682 660 870 512 133 742  32
  50 108 750 691 104 862 602 180  69  65  53 707 788 677  33 850 720 105 640  49 206 854  99 833 378 878 663 844 111 546

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.51935e+06us (= 4519.35ms, 4.51935s)
Wall-clock time (full program): 4.5521e+06us (= 4552.1ms, 4.5521s)
Satisfaction error: 0
Number of search iterations: 1194
Number of local moves: 726 (including on plateau: 224)
Number of local minimum: 70 (including on plateau: 26)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 555 155 671  96  73 747 881 462 168 886 106  34 592  47 117 203 750 134 677 206 884 831 883 621 620  87 889 163  78 899
  81 542 789 191 101 661  44 680 867 837 449  32 653  85  37 181 779 852 836  66 574 749 780  79 718 222 878 120 577  55
  36  74 399 892 122 838 898 650  43  39  70  68 503  52  80 194 890 876 201 153 834 756 646 701 698 151 875 900 737 139
 891 114 268 119 893 791 312 565 100 856 214 162 608 199 175 111 250 640 697 879 593 784 533 107 524 888 186 782 128 146
 112 271 629 244 894 855  91 580 135 708 851 190 710 164 113  21 848 872 104 103 806 845 799 287 295 887 575 165  64 297
  77 239 285 237 340 874  90 722 229 159 185 246 830 273 136 688 184 626 664 623 588 877 833 102 873 173 336 467 696 863
 198  84 803 260  65 862 897 715 253 347  95 149 896 334 179 647 196 154 870 732 813 865 300 882 669 143 282 195 324 306
 371 210 857 243 811 654 251 868 197  69 264 351 801 137 725 358 189 829 221 832 746 638  56 403 849 209 727 256 217 176
 242 227 772 584 180 674 174 691 895 259 228 332 814 266 129 359 116 252 230 776 795 652 699 231 869 138 388 446 843 254
 170 309 318 319 716 642 215 507 148 880 284 502 546 313 352 538 307 394 335 764 569 817 387 277 781 470 726 315 447 167
  99 421 683 839 723 825 294 808 169 279 236 177 527 338 416 636 216 379 435 408 558 581 365 583 885 241 302 326 402 364
 420 370 339 238 290 634 448 773 293 376 321 846 381 380 667 735 270 385 537 504 752 594 704 406 362  86 212 366 325 501
 517 480 549 485 748 637 245 425 278 275 331 451 757 392 384 761 276 861 356 289 573 452 676 298 233 499 343 281 234 429
 426 553 310 353 257 586 375 439 486 377 442 432 393 436 433 225 493 461 431 386 404 645 440 600 418 398 871 458 618 369
 551 357 492 382 272 350 423 513 459 248 363 413 471 561 866 597 490 360 515 474 367 476 473 397 455 428 296 520 483 463
 378 346 591 582 419 349 427 648 498 341 477 522 422 496 383 348 361 484 578 373 500 417 460 495 316 391 552 487 410 464
 628 400 424 354 337 390 625 457 481 536 518 601 572 445 475 514 509 414  53 401 489 258 547   7 689 468 314 681 478 450
 545 611 521 482 585 329 510 130 556 412 564 131 437 345 374 745 610 579 323 548 430 219 508 532 109 539 465 333 589 454
 541 595 342 444 624   5 540 453 570 523 576 529 598 534 218 466 535 612  24 267 226 200 220 787 567 438 660 525 368 528
 283 604 132 644 269   2 635 249 456 603  50 659 516 469 543 662 619 639 630  25 274 395 554 311 562 614 703 472 415 526
 687 147 512   9 702 288 668 204 633 568 519 658  59 571 672 301 530 560 587 178 405 157 344 713 142 655 144 550 762 590
 724 609  75 675 188 599 673 207  31 544 613 441  93 602 742  41 807 563 171  38 327  89 679 850  48 566 719 491 695 615
 479 396 389 700 627 261 788  14 557 506 733 596 235 800 328 208 690 505 763 213 152 355 192 797   1 736  62 606  40 786
 678 686 663 631 714  83 721 286 768 783 632 531  23 705 497 262 810  30 712 682 240 133 330   6  61 765  19 187  35 842
 805 770 303 826 299 123 751 108 651 616 559 685 172 778 835 308 844 617  33 411 121  28  51 182  13 758  82 796 743 247
 665 777 494 666  29 161  76 322 643 641 753 741  54 827 657 409  98  46 728 828 156 110 140 858 141  49 255 804 656 731
 793 819 670  27  57 124 853 263 607  20 775 709 304 730 755 720  16 183 372  94  97 127 711 809 407 693  92 759 706 223
 774 790  15 841 739 158  88 434 729  17 717 694 166 740 649 692 816  72 605 622  71 115  42 840 488 193 265  18 305 820
 767 744 160 860 707  10 202 118 821 802 792 864 150 812 754 847   4  11  67 818  45 145 105  63 511 859 854 280 317  26
  22 815  60 292 734   3 320 224 794   8 798 769 232 684 824 738  12 125 760 822 126 205  58 291 211 771 443 766 823 785

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 6.45871e+06us (= 6458.71ms, 6.45871s)
Wall-clock time (full program): 6.49135e+06us (= 6491.35ms, 6.49135s)
Satisfaction error: 0
Number of search iterations: 1649
Number of local moves: 893 (including on plateau: 400)
Number of local minimum: 84 (including on plateau: 52)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 754 167 896 898  64 725 891  57 758 714  91 760  48 823  69  15  47 568  36  72 748 894 759 204 895 772  90  92  61 547
 198 359 142 449 737 112 787 860 814  88  33 849  24 742  62  20  34  58  22  96 730 884 124 874 886 161 861 883 887 739
  94 818  80 757  55 789 876 101 810 709 723 641 107 734  85  67  82 704 100 144 607 785 115  86 889 540 109 890 121 897
 746 140 125 792  51 812 888 141 702 751 665 181  66 769 698 177  74 713 133  84 854 846 117 123 900  83 878  75 126 805
 788 825 170 880 767 811  50 165 793 169 836 645 598 899 186  26 158 650  46 859 175 651 136  76 178 892 134 137  93 722
 148 119 189 153 116 289 743 190 768 869 628 858  98 780 173 129 166 736 865 610 208 710 800 218 893 719 232 159 176 773
 562 552 272 139 135 826 642 164 749 809 203 850 145 672 870 171 225 834 255 647 331 669 260 835 237 594 229 163 234 241
 581 670 206 243 247 662 782 460 687 799 233 684 256 185 219 305 194 804 182 238 242 832 881 245 246 775 231 307 262 857
 451 606 286 273 282 640 695 276 545 732 806 829 774 271 212 248 254 794 320 318 838 572 211 215 261 413 149 251 230 763
 677 851 324 409 250 601 644 591 656 304 263 706 557 303 335 298 227 616 378 319 882 590 249 315 281 724 308 264 294 299
 593 664 267 340 296 636 343 382 576 259 862 885 551 280 332 328 367 691 316 543 269 613 345 279 314 848 275 313 371 377
 686 697 327 360 847 544 287 252 630 351 658 579 361 347 309 388 356 366 416 548 292 569 363 339 436 863 310 387 317 330
 372 625 352 421 337 553 693 411 558 374 404 567 712 346 430 389 217 537 348 321 379 589 390 667 469 395 365 462 393 439
 402 338 418 420 375 571 417 385 555 326 564 477 452 424 426 334 621 400 355 481 875 520 358 458 412 485 415 369 408 474
 450 454 397 459 475 441 488 376 405 480 444 373 542 457 468 423 476 465 484 682 437 422 394 396 431 434 381 447 438 496
 489 407 486 293 428 533 472 490 446 410 466 471 433 541 499 507 497 527 440 429 399 342 518 487 534   2 483 509 456 521
 157 461 442 570 453 344 482 526 357 502 516 323 354 512 432 478 517 443 550 535 492 350 528 464 362 300 510 508 574 473
 383 505 559 463 448 380 560 406 370 503 495 419 160 530 554 498 467 513 584 470 207 329 494 511 493 506 500 104 600 504
 266  35 435 563 586 349 627 549 384 587 536 312 364 575 556 538 491 398 523 311 479 392 531 546 585 290 561 599 524  23
 226 183 605 532 580 210 268 525 102 595 325 445 611 629 604 626 455 297 514 224 501 270 573 515 624  68 614 619 578 597
 577 188 588 635 646 180 631 615 265  39 302  52 565 634 609 582 708  56 596 146  87 274 583 663 608 216 660 519 620 671
 200 353 637 602 679 152 221 666 301 661  79 291 283 648 603 681 639  21 618 236 683 201 617 592 111 132 638 623 674 673
 235 278 675 653 633 191 425  53 205 130 110 147 622  38 735 741 657 322 727 680 632 155 643 705 649 333 689 685 678  89
 659 257 716 744 707 277  13 733 244 694 187  43 612 106  30 721 728  78 729 703 717 114 103 368 747 240 652 781 692 120
 522 168 718 676 761 529 172 701 138 105 122 174 715 151 740 699 738 131 696 688  27 306  77 690  32 386 791 771 755 336
 726 401 756 654  28  70  37 752  18 239 284  17 770  19 700 795 731 192 753 786   9 228 655 766 128 539 764 816 822  60
   3 711 777  12 762 195 184 156 414 197 258 202 220 745 750 765 844 213 820  42 801 179 821  54 776   6 817 779 813 199
 720 852  11  44 803  73  29 833 253 209 797 285 798  97 778 828 837 214 843 790   1  45 223 807  14 566 802  49 796 118
 842  16 819  41 868 154 143 827   5 127 841 162 853 150 855 867 831 295 856 668 391  71 839 193  59 830  63  81 427 341
   8 815 840  40  99 866  25 872   7 783 784 288 864 108 196 871 877 879  10 845 222 113 808 824  65 403   4 873  95  31

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.29854e+06us (= 4298.54ms, 4.29854s)
Wall-clock time (full program): 4.33119e+06us (= 4331.19ms, 4.33119s)
Satisfaction error: 0
Number of search iterations: 924
Number of local moves: 722 (including on plateau: 150)
Number of local minimum: 31 (including on plateau: 19)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 397 754  31 825 516 798 170 691 426 142 158 653 563  58 763 890 438 447 540 138 488 234 146 228 162 541 850 140 824 504
 610 760 462 350 183 895 875 103 185 102 213 344 105 874 348 452 435 694 788 862 290  34 114  37  45 706 819 302 897 631
  18 192 333 419  60 683 802 476 460 429 584 756 291   7 524   5   8 247 757 400 123 855 704 151 226 813 858 751 884 699
 626  94 224 705 593 589 244 177 284 533 809 503 804 148  77 274 204 394 793  33 514 252 842 852 188 877 656  86 418 722
 497 519 887 747 779 469 190  95 115 534 370 898  15 461 592 829  62 338 873 882  19 111 800 215  22 137 642 416 854 147
 546 792 212 581 880  13 774 360 216  50 587 230  32 203  71 320 602 888 776 229 193 870 414 588 616 896  68 639 129 740
 828 443  93 293 889 471 378 278 157 340  24 180 731 297 604 797  16 473 557 871 392 719 485 222 835  26 892 149 289 786
 554 894 702 520 201 393 484 441 339 164 442 795 223 358 324 668 167 331 851 525 186 217 808 818 318 317 235  23 885 332
 599 444 104 468 726 553 764 254 612 431 688 558 347 597 549 470 613 481  43 840 187 352 264 496 153 643 511 221 483  64
 564 439 308 522 200 787 287 505 547 745 110 362 697 734 313  40 820  90  21 570 538 377 634 263 510 692 319 857 384 280
 749 681 508 741 172 856 566 231 240 238 717 684 379 269 288 698 219 493 730 669 482 535  11 218 494 595 191 292 451 118
 415 296 383 239 257 304 601 425 899 237 607 624 475 328 430 865 412  82 693 863 502 325 184 477 206 724 298 711 523 130
  14 398 405 353 327 271 420 125 179 307 197 357 550  98 458 682 755 837 784 628 883 173 433 752 474 671 122 766 707 389
 826 314 465 251 423 421 413 596 380 539 834 650 446 721 590 495 310 408 275  92 144 611 561  76 696 388 799  54 351 386
 356 220 354 648 552 387 374 762 361 445 403 448 775 777 713 432 134 635 526 124 410 422 647  39 498 658 366 559 205 285
 501  27 710 640  52  20 323 316 311 532 859 492 803 434 479 154 565 843 174  42 527  87 686 489 712 748 305 848 236 600
 605 227  48 509 368 572 294 551 641 336 466 150 385 638 117 467 900 580 376 128 573  88 486 567 761 490 678 560 195 759
  49 780 720 315 472 578 812 395 513 651 847 427 106 480 424 312 363 189  75 367 249 744  61 499 463 436 528 742 632 286
 202  69 591 625 196 455 166 529 575 506 242  74 194 355 126 785 630 823 369 182 608 437 844 670 440 253 579 737 644 609
 853  55 791 655 577  10 718 621 830 594 544 133 211 456 156 454 569 556 210 279 598 159 545 491 864  79 372  70 390 675
 453 583 450 337 500 845 108 782 100 256 281 629 266  80 801 672 633 326 198 891 680 409 373 603 838   1 139 667 165 449
 649 518 303 542 893 295 457 181 846 627 169 618 382 811 260  53  83 586 171 815 836  38 168 160 346 112 768 832 243 753
  57 685 750 531 120 867 636 109 349 715 606  28 576 789 537 478 464 225 839 143 746 714  25 261 342 113  44 530 617 619
 178 657 404 258 555 145   2 246  29 664 359 543 716 739 860 866 401 679   4 321 276 886 512 695 728 309  46 623 199 615
 245 259 727  59 622 341 687 879 660 729 701  85 878 765 673  65 690 661 250 152 391 733  56  81  41 132 652 769 121 411
 241 517 406 343  17 365  99 881 402 677 876 536 700  30 620  66 723 176 637 869 574  12 582 794 428 796 614 262 175  97
 330 407 375  84 736 273 381 807 817 868 141 127 135 827 783 233 268 163 646 329 849 872 507 585 790 272 255 322 270  63
 773 654 822 107 101 364 155 821 778 334  36 568 758 709  96 207 562  89 521 689 131 665 833 772 301 232 136  91 814 396
  72  67 738 571 732  78 659  47 805 674 345 515 666  73 214  51 806 662  35 299 265 841 781 771 208 487 767 335 248 703
 708 770 209 277 816 417 676 831 459 116 300 548 306 399 725 735 663 119   3 283 861 743   9 645 810 371   6 161 282 267

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.34344e+07us (= 23434.4ms, 23.4344s)
Wall-clock time (full program): 2.34674e+07us (= 23467.4ms, 23.4674s)
Satisfaction error: 0
Number of search iterations: 8938
Number of local moves: 2584 (including on plateau: 1349)
Number of local minimum: 826 (including on plateau: 140)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 747 698 442  76 134 828 837 674 664 813 159 105  92  61 102 805  91 110 879 774  65  38  55 820 801 898  78 727  56 886
 685 891 467 112 481 630 673 829 748 888 606 103 209  99  93 806  85 124 519 667 116 104 145 869 396  80 170 160 889 871
 722 468 466  40 149 770 666 648 729 780 214 115  72  81  45 456 892 151 431 690  71  79 449 850 642 212  49 862 853 863
 152 474 257 154 793 424 831 873 789 771  96 182  77  26 125 653 887 189 834 766  89  22 120 683 856 530 890 737  57 178
 733 807 894  86 202 884 659 848 694 803 169 175  83  58 150 845 328 239 153 523 219 100 233 646 885 899  42 824 158 176
 882 248 626  73 123 719 804 731 836 196 127 192 246 185  97 325  98 605 582 592 130 155 500 761 865 897  46 794 859 221
 168 830 260 224 900 763  88 206 753 197 143 363 660 872 259 715 861 486 784 767 279 211 172 618 501 745 139 147 187 217
 875 515 696 306 133 657 825 792 852 254 201 496 231 283 184 866 131 132 412 799 270 167 895 265 281 334 166 398 881 218
 222 728 769 287 250 815 800 779 339 778 267 364 327 552 243 204 282 568 711 566 302 858 216 269 245 230 336 783 191 234
 567 370 759 311 225 810 392 380 638 746 331 361 285 296 299 477 292 199 464 787 301 373 322 294 400 252 576 893 235 880
 241 284 842 864 140 743 288 286 547 326 710 348 418 320 253 263 273 349 741 838 183 469 693 323 712 268 379 809 428 177
 854 427 708 403 297 762 470 419 384 367 402 883 395 454 310 313 337 647 816 495 227 242 505 298 237 404 316 408 341 394
 352 550 896 401 423 362 391 232 318 672 752 451 507 389 368 544 381 350 677 525 437 274 634 409 406 249 455 358 345 407
 422 720 359 411 312 355 575 556 290 271 549 462 399 482 429 375 266 878 846 460 356 277 740 309 387 340 478 397 471 343
 372 385 434 569 432 465 551 572 484 386 354 450 315 448 532 335 516 374 447 537 445 414 614 369 517 416 383 426 538 435
 535 303 599 587 439 378 589 485 553 488 321 616 443 452 430 542 413 236 444 371 360 324 203 522 483 558 504 461 440 436
  33 463 458 473 628 347 498 528 555 509 526 617 472 543 493   5 540 388 508 365 338 446 393 546 563 410 480 344 533 513
 421 425 226 489 438 173 453 524 593 346 491 610 600 307 584 627 420  24 329 295 562 668 366 609 476 661 215 490 548 545
 511 521  44 541 539 126 594   9 645 686 536 240 510 603 595 635 680 289  21 300 457 565 156 612 163 643 590 632 631 441
 527 129 190 492  95 611 601 332 583 502  31 506  32 650 574 570 604 598 136 342 636 557 417 602 621 573 620  28 639 717
 586 146 164 751 580  43   6 531 264 162 405 730 681 561 554 518 577 682 251  39 564 622 487 459 512 678 613 128 692 529
 223 578 308 607 723 247  84 479  90 319 675 669 497 777 623  75 585 615 390  16 701 764 272 560  20  54 596 559 633 776
 121 114 108 608 663 475  11  66 188 738 641 640 649 671 637  52 695 304 280  48 781 656 415 195 658 625 534 494 757 691
 137 705 261 687  69 165   7 571 244 376 591 588 654 817 782  74 662 785 258 111 684 619 676   8 734 736 755  47  12 700
  59 210 101 655 703  19 644 200  29 697 291 713 688 754 651   1 679 665 382 293 749 707 579 702  82  63 706   2 718 773
 744 161 207 624 330  34  23  70  64  30 597 514 818 791 765 756 709 790 503  51 795 629 772 186 107 721 726 229  37 732
 499  60 357 181 876 157 788 174 122  41 851 808 821 278 843 652 135 742 305 256 877 786 704 581  94  87 868 275 262  35
 725 520  18 867 847 333 353  68 198 117 844 317 739  62 857 208 724 433 171 141 832 812 699 119  13 714 835 113 833   3
 220  50 760 814 768 106   4 276 255 138 775 870 798 802 827 670 179 874 205 750 840 758 228  14 142  25 826 194 238 109
 180 735 839 822 823 314  10 377  67 118 860  27 797 841 811 148 193 689  36 351 849 819 855  17 716 213 144 796  53  15

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.08803e+06us (= 5088.03ms, 5.08803s)
Wall-clock time (full program): 5.12119e+06us (= 5121.19ms, 5.12119s)
Satisfaction error: 0
Number of search iterations: 1221
Number of local moves: 760 (including on plateau: 282)
Number of local minimum: 77 (including on plateau: 31)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  59 874 287 818 858 279 896  30  41 856 857  82 193 888 172 701 242  86 803 503 848  23 297 243  38 142 485 886 439 589
 405 838 875 126  76 143 440 237 153 870 722 156 196 822 501 603 282 583 853 333  44 487 871  28 260 880 369  51 559 752
 486 825 391 811 835 420 677  55 799 380   9  50 122  27 639 859 881  48 710 447 557 724 844 258  73 306 707 408  17 150
 877  84 158  20 727  36 729 831  81 797 887 105 111 234 387 479 505  67 743 836 769 521 754  99 224 609 192 819 688 146
  26 582 506 570 686  89  69 691 199 358 184  53  45 571 776 253  61 614 798 862 566 749 737 800 621 742 120 190 746 251
  57 719  71 794 711 715 721 103 339 695   5 607 191 538 527 643  12 517  79   8 728 212 265 591 894 580 170 539 705 779
 385 682 656 692 814  29 816 340 809 771 266 366 477 267 427 850  25 165 698 827 114  65 760 315 334 441 173 256 564 131
 147 130  91  94 623 622 668 845 588 788 403  63 629 734 457 585 625 138 198 554 681 272 898 269 412 151 247 748 759  96
 238 264 307 652 751 657 699 684   1 650  88  40  98 208 647 669 599 185 620 263 725 494 712 596 456 578 222 744 414 254
 864 478 775 520 683 892 523 502 649 299 438 443 645  21 675 382 673 626 600   7 231 136 197 280 182  19 218 584 611 362
 295 572 152 202 411 671 618 422 605 758  47 473 576 586 166 713 271 840 714  54  77 314 365 666 606  24 763 662 560 332
 305 495 424 540 756 481 373 235 641 592 513 761 116 363 217 474 704 106 370 421 129 419 239 792 767 579 529 268 594 312
 324 460 530 593 261 491 637 635 706 598 531 507 434 546 469 139 741  72 774 437 168 296 608 229 399 449 123 446 575 337
 329 565 410 396 543 431 548 780 464  78 426 764 785   4  22  97  13 161 569 476 483 453 409 659 542 883 796 442 558 429
 832 660 430 745 522 532 537 642 402 160 205 597 175 590 336 144  80 604 653 308 423 619 141 498 829  35 489 630 376 321
 176 514 390 331  15 361 291 360 445 876 861 885 432 289 555 458 470 250 221 300 472 435 524 551 568 772 613 428 162 510
 515 388 525 383 417 535 177 817 241 356 398 504 846 787 394 436 454 462 381 200 302 246 781 480 552 371 219 484 128 736
  87 353 718 215 322  52 655 463 872 790 793 709 118 348 301 379 587  11 274 839 891 674 450 545 288 325 318 466 204 468
 612 276 717 346 278 395 298 275 602 281 320 654 323 678 702 319 317 847 451 349 327 344 386 283 416 393 528 646 801 351
 610 211 852  39 359 313 345 869 357 220 768 789 292 651 127 448 233 541 508 879 133 342 328 372 113 867 735 273 309 632
 232 330 178 352 262 807 425 249 203 310 225 397 791 690 897 574 277 573 475 252 672 733 384 159 834 236 739 194 244 821
 631 509  43 257 516  68 577 544 837 455 303 248 240 418 368 207 732 499 132 628 536 685 223 343 290 882 747 117 786 694
 617 406 889  74 616 804 216 783 547 149  49 549 230 326 206 209 496 841 415 286 561 293 812 815 284 518 488 119 214 703
 115 492 851 770  62 708 112 228 562 389 400 567 471 661 820 104 459 553 195 636 689 526 259 824 465 187  34 189 697 490
 813 634 401 762 108 823 167 350  14 188 534  83 833 186 755 738 806 795 493 726 101 658 109  16 174 624 740 201 500 183
 863 107 270 316 899 855  32 245 854 179 210 753 723 670 367 157 773 452 338 213 482 784 137 601 497  10 364 154 433 777
 843  90 595 341  93  66 171  58 180  37 873 805 890 125 124 842 810 893 169 404 140 181 311 778 895 849 511 633 164 644
 731 375 135 730  92 444  75 663 638 377 860  56 865 868 407 102 693 627  95 716 900 550  33 285 226 145 227 808  42 750
 878 255  60 378  85 461 556 533 294 110 700 667 866 413 354 121 676 680 155 687  70 615 100 766 757 563 884 826   2   3
 163 347 828 648 134 335 467  46 392 148 640 782 802   6 720 830  18 679  31  64 696 665 581 374 519 355 765 304 664 512

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.88905e+07us (= 18890.5ms, 18.8905s)
Wall-clock time (full program): 1.89234e+07us (= 18923.4ms, 18.9234s)
Satisfaction error: 0
Number of search iterations: 6723
Number of local moves: 1630 (including on plateau: 571)
Number of local minimum: 616 (including on plateau: 72)
Number of resets: 3
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 735 459  61 763 323 629 430 734 814 713 714  64 335 286 563 204 756 163 653 411 110 874 365  32 759  13 406 256 299 591
 784 844 122  60  72 670 241 144 803 151  87 755 654 676  74 346 502 436 607 631 308 781 800  12 709 514  40 869 794  29
 681 380 212 806  76 239 387  70 777 201 788 116 644 107 692 309 748 263 169 866 438  49 659 685 703 439 530 171 464 846
  38 511 275 372 878 301  93 820 356 824 863 504 119 828  68  94 711 492 255 733  69  88 741 565 598 617 494 843 150 215
 242 209 338 830 237 333 804 900 192 619   9  33 708 633 872 868 528 251 640 429 178 486 590  34 271 402 407 726 684  62
 836 649 463 566 808 332 273 471 440 498 531 153  48  92 470  37 137 461 826 553 457 665 238 583 287 805 359  25 817 635
 351 383 791 282 554 135 596 875 769 177 606 479 123 210  20 180 719 671 576 895 390 149 236 892 319 175 647 478 623 214
 261  78 366 443 523 770 385 220 458 705 362 879 695 217 367 264 585 388 688 222 632 595 224 568 331 888 624 377  66 334
 701 690 891 352 538   1 185 432 812 766 786 195 281 513  44 117  15  98 105 194 208 898 793 551 357 725   8 525 881 853
 894 228 560 537 196 889 111 469 558 465 386 792 207 369 160 798 161 669  71 715 847  99 243 172 121 588 839 512 542 317
  57 529 167  41 396 893 738 481 146 728 257 564 757 244 707 329 722 218 652 129 253 231 234 682 610 349  89 832 630 850
 742 658 838 258 589 174  55 230 776  81 697  56 762 543 840 355 556 645 493 336 368 227 108 897 795 304  63 254 549 266
 428 796 899 233 472 280 620 405 557 885 223 259  31 524 252 533 489 605 326 660 883 300 314 115 444 541 503   3 364 571
 152 743 768 371 322 674 176  83 328 448 350 813 203 751 379 384  46 442 827 373 884 761 145 159 221 587 760 447 235 683
 320 687 414 141 858 572 433 579  26 613 445 540 712 823 393 455 425 327 341 441  58 101 721 426 358 307 418 473 783 325
 732 202 484 419 772 689 416 295 574  75 487  59 870 527 851 650 466  80 508  21 219 496 316 421  96 552 834 480 634 290
 656 424 516 842 284 782 399 460 456 422 501 678 434 559 318 667 641 205  90 603 488 344 353 801  22 467 655  95 147 206
 548 211 417 727 118 296 562 453 139 303  47 854 124 363 876 491 475 825 477 886 775 246 136 130 408 691 312 197 657 771
 495 519 392 126 845 240 638  39  17 397 437  35  19 423 199 717 289 532 873 639 664 663 699 602 584 582 131 394 627 698
 157 517 601 787  84 120 594 265 522 268 621 599 395 188 739 330 672  45 164 274 518 604 132 785 818 106 435 852 462 861
 615 700  53 114 143  54 831 378 510 404 288 451 724 277 704 156 680 740 545 109 802 758 381 292 807 354 184 269 592 600
 158 810  23 871  91 651 260 767 232 864 616 648 642 555 499 706 666 609 310 272  43  51 409  27 521 547 398 569 614  86
 693 337 618 125 247 567 882 225 128 509   4 573  52   6 848  14 643 535 340 550 833 860 718  65 597 749 581 490 190 536
 198 279 835 765 245 811  77 677 578 729 431 778 612 476 165 611 127 696 497 790 887 403 342 173 168 216 575 297  10  67
 361 140 799  16 262   5 427 561 815 229 880 702 723 737 526  11 744 482 420 155 186  24 780 710 716 736 191 865 133 179
 544   7 483  28 816 339 313 764 570 539 400  18 410 686 867 586 189 515 662 321 293 534 746 661  50 193 754 731  42 454
 267 294 142 694 750 679 819 270 628  97 200 855 298 138 248 730 148 856 154 302 415 829 485 779 382 104 500 285 345 822
 181 113 370 797 593 896 577 637 166 183 305 374 324 753 622 890 226  82 625 249 389 774 675 673 608 187 291 311 170 474
 182 668 505 789 877 103 747   2 283 520 449 413 752 162  73 821 315 347 343  36 468 213 306 773 507 401 646 859 375 580
 506 450 112 360 546 391 446 809  85 102 745 276 857 849  79 862 134 837 278 720 452 412 626 250 348 376 841  30 636 100

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.56524e+07us (= 35652.4ms, 35.6524s)
Wall-clock time (full program): 3.56852e+07us (= 35685.2ms, 35.6852s)
Satisfaction error: 0
Number of search iterations: 14027
Number of local moves: 3155 (including on plateau: 1609)
Number of local minimum: 1264 (including on plateau: 189)
Number of resets: 7
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  76 548 696 755  95 104 596 576 205 155 887 322 551 813 208  86 854 795 133 804 108 310 701 418 184  93 700 280 693 769
 853 427  37 765 149 676 165 872 888 383 364 801 710 156 476 265 430 224 137 799  98 766 132 900 855  78 419  56 122 512
 789 190 196 805 852 327 172  16 764  27  63  57 437 554 522  84 742 482 705 822 589 739 620 257 881 102  32 260 771 658
 728 617  75 786 134 256 126 226  81 592 174 217 824 780 545 199 878 844 508 168 579  87 717 452 691 599 842  59 113 618
 575  92  79 604 695 784 455  48 163 624 583 131 772 749 185 182 167 633 289 177 530 141 241 521 546 503 578 856 752 860
 747 158 270 838 750 782 779 223 197 829 531 114  88 598 343 262 127 849 337 572 173 363 151 880 458 390 389 375 899  43
 221 219 751 301 160  72 640 210 527 244 848 201 797 253 451 266 648 819 603 858 150 515 261 891 110 242 835 254 883 285
 729 601 422  97  25 499 222 827 194 684 533 214 843 399 632 245 229 294 307 783 274 248 406 716 318 239 778 296 731 730
 713 339 106 118 814 746 897 416 162 349 436 373 661 378 647 287 193 585 180 334 644 732 711 170 374 109 148 501 665 727
 650 414 186 251 360 646 372 216 635 612 361 431 669 264 637 330 176 580 457 100 537 304 712 816 840 371 485 231 544 328
 564 315 571 164 673  80 272  41 220 192 894 207 890 380 504 183 338 505 278 845 692 326 875 864 269 444 761 535 401 232
 228 200 460 298 385 299 609 393 250 793  99 227 353 450 702 861 543 426 760 314 561 305 346 413 303 387 893 788 594 275
 143 202 358 725 397 342 448 896 107 815 442 395 428 475 117 625 697 454 195 862 188 400 830 405 354 439 283 563 492 438
 790 323 449 478 319 470 486 434 365 246 446 402 282 574 709 477 348 481 509 547 733 513 529 369 351 582   5 465 435 398
 263 333 532 497 203 425 415 284 833 523 279 567 560 432 417 495 344 494 271 825 698  90 423 111 818 636 410 412 469 456
 511 396   6 581 277 820 510 466 440 500 597 386 429 679 313 507 577 473 550 517 491 403 309 490 662  33 377 135 587 493
   2 424 225 680 569 629 249 528 474 884 479 682  14 738 311 421 392 555 356   7 281 630 394 565 588 525   4 616 832 461
 300 643 810 873 628 659 103 590 267 459 453 359 240 411 502 639 553 105 345 721 376  70 136 556 809 534  61 549 317 447
 826 325 621 720 121 329 847  38 654 467 675 839 892 404 247 506 689 483 623  46 370 238 153  69 292 524 489 336 230 462
 608 445 605 538 519 487 146 706 846 209  28 808  96 441 312 518 558 295 540  44 671 663 622 288 600 791 484 536  77  34
 357 614 714 130  15 672 488 433 352 381  40 668 125 602 268 690 652 124 792 161 759 181 335 800 653 681 520 656  68 584
 212 626 464 607 740 642 255 715 379 737  51 568  85 686  10 886 138  19 306 836 726 678 142   9 770 850 595 615 145  23
 211 610 823 539 763 627 218  45 468 233 409 649 115 258 189 480 638  58 876 666 634 674   8 552 541 593 362 101 498 677
 293 773 526 140 694 154 123 757 745 215 753 667 708 748  22 743 321 408 707  31 664 471  11   1 116 762 291 774 324 573
 591 562 586 754 787 877 179 570 796 316 276 885 206 557 837 129 472 213 688  47 308 723 645  64  39 806  18  67 463  54
 302 758 388 159  36  83 719 286 191 152 112 811 128 187 724 611 651 613 147 350 347 687 895 175  60 794 871 722 857 699
  73 744 685  24 704 341 741 841 368 178 756 641 420 144 767 776  65 542  53 166 619 297 443 683 736  62 882 657  55  52
  35 735 718  91  20 120 660 798 803 867 670  49 235  50 703 817 631  74 859 874 169 320 781 332  17 204  89 898 119 777
 785  12 866 171 768 496 734 812 273 243 869  42 566 157 384  66  82 237 865   3  30 834 655 514 259 775 355 828  13 821
 340 870 290  26 863  71 889 252 868 606 407 802 391 198 831 879 382 851 139 236 516 807 331 234  21 367 559  94 366  29

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.35203e+07us (= 13520.3ms, 13.5203s)
Wall-clock time (full program): 1.3553e+07us (= 13553ms, 13.553s)
Satisfaction error: 0
Number of search iterations: 4576
Number of local moves: 1482 (including on plateau: 645)
Number of local minimum: 379 (including on plateau: 84)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 401 298 317 236  26 295 870 504  33 406 867 218 715 727 834 166 787 649 216 625 733 134 202 728 800 342 392  91 100 803
 639 629  63 172 399  32  54 775 793 783 279 510 600  72 101 838 750  19 316 586 661   2  62 596 682 708 597 633 290 874
 467 188 254 823 557  11 307 841 804 768 567 308 626 246 580 807 877 847 502 161 147 598  53 114 356 699 182 108 267 450
 125 123  89 203  45 822  80 748 820 808 729 281 689  59 662 611 265 854  50  73 843  95 812  34 693 861 266 669 310 796
 771  23 186 176 538 334   3 468 765 755 628 145 767 718 710 713 757 311 584 553 163  30 523  10 835  41 654 801 185 368
 360 371 485 297 818 789 224 811 514 483 148 315 797 676 716 572 619 102 289  46 543  93 671 230  20 545 659 227 282 813
 623 684 491  67 139 724 441 141 239 687 697 511 554 454 741 732  51 560 590  75 300 524 325 754 760  98 496 296  58 703
 634 630 432 515  87 177 152 133 656 651   7 149 806 585 615 643 209 784  18 573 886 857  85 191 685 737 175 599 222 622
 725 638 827 781  25 564  28 702  60 652 691 525 581 128 429 706 339 759  83  31 535 264 762 194 680 225 782  77 131 591
 679 602 498 158 302 698 204 658 363  96 696 416 365 738 437 373  38 568 330 107 251 635 798 799 749 433 293  99 232 900
 674 616  27 136 692 423  74 562 579 664 361 488 571 879 435 610 151 391 620 412 213 532 322 221 347 140 645 898 255 577
 855 260 533  64 722 653 364 517 892 776  65 301 612 212 422 505 862 763 384  43 129  15  21 829 404 195 569 542 405 601
 555 398 574 118 466 484 370 817 578 124 675 624  70 479 459 233 320 497 868 589 183 709 458 415 449 238 268 570 421 506
 592 648 539 474 509 744 418 695 409 417 425 481  66 739 156 540 503 338 636 603 519 431 831 229  22 358  36 489 275 393
 439 492 438 211 563 277 875 521 575 761 434 561 324  55 242 726 443 312 719 428 319  82 650 478 426 544 331 559 250 480
 821 345 117 446 465 487 647 455 891 210 853  14 385 766 396 397 217 462 740 162 323 587 837 341 349 252 500 304 395 351
 234 113 407 814 655 419 305 794 826 343 839 337 530 137 350 536 463 357 235 508 694 184  71 551 273 346 764 436 537 457
 359 550 858 673 386 869 460 228 403 721 286 372 430 605 256 614 493 244 245 427 469 660 219 476 413 306 646 192 375 280
 723 452 420 321 387 819 701 464 528 366 333 769 241  44 779 686 179 276 388 856 200 747   9 541 178 165 390 394 887 272
 196 374 262 640 259 377 736 110 329 445 142 442 461 414 440  24   4 644 844 791 690 380 379 456 840 790 720 490 683 153
 340 303 411 627 382 168 778 472 499 880 473 180 355 127 115 482 815 529 288 752 583 617 231  56 248 381 850 552 668 353
 269 208 670 558 336 549 705 548 206 103 160 291 292 604 494 294 657 126 899 665 522 872 520 866 344 271 507 130 588 261
 143 842 730  13 677 237 824 214 215 205 154 278 299 270 258 240 700 335 632 792 566 285 758 774 146 642 470 641 888 287
 477 832 770 746 362 120 354 318  16  47 606 714 190 576 249  48 637 890 220 897 681 187 666  94 518 595   1 313 546 845
 171  97 565 389 678 486 582  90 711 155 513 828  40 893 223  68   5 608 756 400 556 253 833 816 864 889   8 207 547 284
 105 135 742 873 881 896 772 109 122 198 247 825  84 181 121 444 731 501  61 516 688 805 104 475 144 883  81 802 851 138
  39 846 663 773 328 167 201 150 119  78 895 707 471 859 495 383 860 274 378 672 283 526 534 410  76 424 753 314 785  52
 243 159 894 848 780 111 786 193  86 112 263 751 116 531 352  42 369  92 712 735 451 795 257 863 332 448 631 621 885  57
 189 882  79 836 173 613 593 408 327  12 453 309 884 704 618 106  88 197 743  35 367 871 734 810   6 512 717 852 348  49
 667 777 174 527 878 170 607  69 157 809  29 865 594  37 830 376 326 226 169 402  17 745 788 164 876 447 132 609 849 199

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.61228e+07us (= 16122.8ms, 16.1228s)
Wall-clock time (full program): 1.61555e+07us (= 16155.5ms, 16.1555s)
Satisfaction error: 0
Number of search iterations: 5788
Number of local moves: 1713 (including on plateau: 805)
Number of local minimum: 497 (including on plateau: 110)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 485 109 523 840 742 891 114 617 179 789 585 110  56 526 748 643 170 504 159 147  79  48 722 639 695 750 812 795  13  25
 381 271 845 771 108 691 244 698 512 173 708 309 137  96 859 548  34  36 418 192 870 528 740 731 801 171 537  54 270 782
 216 723 645 666 885  55 195 725 187 433 656  26 314  39 619 828 880 470 245 148  69  28 670 679 706 413 856 124 297 718
 129 238 417 899 576 892 218 317 203 855 802  95 882  82 209 890  35 455 169 736 111 127 783 863 785 469  40 225 136 877
 538 202 732 178 869 751 604 721 246 680 241 131 167 316 772 518 267 161 501 231 177 126 796 638 866 599 832  59 269 327
 593  27 843 311  84 830 592 803 130 457 371 212 223 282 285 602 201 217 133 884 889 264 221 744 893 355 774 414  90 791
 741 449 587 204  29 780 405 296 144 306 768 287 132 250 851 836 222 172 655 175 146 165 842 815 886 793 166 852 318 243
 219 228 692 769  52 817 536  16 197 603 535 598 226 478 747 596 258 384 160 466  44 328 568 663 652 805 230 767  87 794
 799 142 819 738 373 895 128 788 881 266 281 362 303 268 635 237 229 463 460 240 260 871  47 681 704 274 305 255 659 152
 441 827 717 620 220 397 410 734 374 868 530 206 106 338 597  81 288 634 294 358 605 213 483 461  57 291 735 841 395 394
 184 636 363 200 467 341 477 324 385 176 875 810 198 326 301 462 465 337 677 898 183 378 626 625 589 376 319 300 379 838
 644 503 356 331 456 186 372 443 275 486 430  24 452 320 545 412 292 647 312 525 807 729 654 566 445 419 491 340 631 422
 823 235 343 650 368 447 472 615 403 839 322 402 347  51 637 299 261 798 342 351 334 313 661 521 490 409 401 344 163 874
 511 781 476 205 357 367 350 786 323 542 480 551 383 431 439 101 211  98 435 498 375 690 497 883 549 364 290 325 702 515
 387 766 496 492 556 711 302 481 495 194 360 345 180 442 861 484 423 336 304 632 563 406 689  15 390 519 559 424 388 315
 141 474 427  11 675 724 560 499 558 440 529 429 426 564 853 573 611 107 600 578 508 398 509 450 321  42 349 493  76 590
 570 553 181 540 415 684 468 607 420 408 522 479 352 621 571 683 727 610 448   9 531 353 354 710 236 411 391 550  62  49
 102 444 482 507 591 534 451 583 544 458 382 421 119 428 489 696 280  22 574 582 396 770 437 162 850 488 370 500 252 601
 253 121 609 392 389 190 565 572 657 569 581 896 624 749 254 273 678 307  23 533 436 464 293 283 145 653 432 510 446 618
 506 613 561 139 733  68 459 520 516 365 272 118 505 627 554  37 117 135 669 672 284 709  41 156 862 745 648 502 858 524
 703 664 514 829 541 668 539 158 579 265 277 140 586 234 155 207 546 224  20 404 688 699 332  73 298 662 834 814 763  99
 168 705  97 278 557 594 714 239 210 567 199 651 630 649 400 188 693 616 628 820 701 105 329 185 125 339 494 233 779 622
 154 623 584  32 120 555 552 232 595 580 475 897 887 746 164  67 792 888 149 894 438 263 276  31 150 123 685 547 900 116
 641  70 153  88 513 115  33  85 762  65 872 527 787 816 359 248 808 629 251 279 673 712 100 473 377 665 707 453 642 612
 487 262  77 242 434  71 719 532 813 606 348 700 471 847  72  94 837 399 640 112 752 737 257 366 104  61 289 806 713 667
 773 778  18 775  46   6 454 151 809  43 249 671 846 849  86 658 878 876 879 333 697 682 346 517  10   3 193  58 674 157
 797 113  14 764 755  78 614 189 687 728 286 835 867   1  75 575 386 790 844 873 760 818  93  21  66 784   5 227 407  63
 335 676 633 174  74  80 860 259 824  91 393 757 761 777  30 191 822 833 821 134 214  12 380 330 138  50 765 577 864 660
 369 562 208 825 776  89 800 215 588 416  64 715 694 716  92 758 743 759 857   7  60 753  83  38 143 756   2 831 543  53
 425 720 103  45 754   8 308 310  19 247 122 811 854 646 256 730 361 608 848 804 865 826 686 196 182 726   4 295 739  17

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.12729e+07us (= 11272.9ms, 11.2729s)
Wall-clock time (full program): 1.13054e+07us (= 11305.4ms, 11.3054s)
Satisfaction error: 0
Number of search iterations: 3532
Number of local moves: 1149 (including on plateau: 493)
Number of local minimum: 262 (including on plateau: 63)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 899 845 798 821  44 723  69 140  72 834  29  51 843 733 478 588  15  34 214 893  82  60  28 616 869 885 750 184 898  20
  87 895 812 176  63 884  86  89 865 671  21  76 135 698 622 607  96 244 660 785  45 115  18 684 375 882 802 838 405 779
 888 195 418  98 139 846  77 211 111 713 259  84 896 680 466 514  23  38 572 900 109 175  22 810 863 638 789 894 879 208
 163 152 880 457  99 741 867  33 808 809 232 191 253 106 686 816 185 178 229 889  26  64  70 817  40 632 897 603 858 734
 113  78 673 204 752 553 857  25  49 836 158 190 868 768 263 697 102  52 127 760 305 159 274 554 363 814 887 860 443 731
 400 484 465  91 266 826 121 217 146 220 234  73 132 815 649 797 131  27 237 878 225 222 526 630 851 743 753 840 778 738
 268 337 692  83 143 729 792 203 339 584 196 519 177 608 721 793 114 294 891 883 128 306 282 254 117 767 615 636 855 189
 218 209 601 666 275 151 687 620  79 183 260 224 257 848 574 804 318 148 227 567 134 145 854 670 271 380 870 710 790 775
  88 299 445 172 272 242 255 150 892 353 165 256 757 886 852 837 249 265 473 364 129 844 223 801 228 543 831 239 639 766
 205 122 291 343 874 315 350 430 197 725 424 853 787 123 780 582 287 236 206 696 591 470 327 718 309 279 685 262 706 342
 313 295 552 856 813 200 799 383 193 251 866 192 212 311 770 827 130 454 463 605 372 320 346 772 250 376 335 362 654 243
 351  95 391 325 791 409 316 215 754 381 358 397 182 414 873 795 393 354 850 547 310 395 455 401 169 839 379 429 586 361
 345 549 437 308 783 434 269 336 614 862 416 513 727 252 682 593 357 328 312 534 324 356 286 247 347 456 423 402 583 440
 292 427 283 331 773 388 133 890 594 444 475 261 637 404 500 329 322 399 521 411 532 371 449 421 438 579 493 461 568 389
 417 432 370 517 441 435 446 467 598 451 226 480 245 599 452 348 523 288 384 387 439 518 646 487 536 562 415 482 426 498
 508 428 471 533 496 469 460 587 464 494 378 341 367 559 280 412 570 781 155 365 396 556 491 629 273 164 359 522 422 585
 474 505 531 258 476 458 520  43 501 419 394 477 374 298 390 410 442 749 612 373 524 420 544 563 453 468 561 512 406 360
 392 485 525 398 537 610 386 651 560 592 527 377 230 502 290 403 763 180 515 516 548 503 575 569 297  31 349 472 235 497
 447 558  47 675 436 621 580 606 540 627 645 509 557 573  37 284 510 490 153 285 506 542 602  39 704 210 340 507 304 581
 538 678 488 352 382  94 528 664 495 566 110 179 662 635 119 144 486 676 462 314 539 669 489 408 716 659 499 565 281 118
 550 625  74 702 479 564 590 317 511  93 595 724 300 744 141 136 589 529 609 334 730 578 546 126 492 221 303 681   6 626
 604 708 302 413 369 679 695 633  14 661 722 640 366  66 355 142 613 653 577 162 597  41 619 173 758 728 270 103 307 545
 611  67 161 755 333 571 726 596 747  17 759 642 631 277  68 167 771 535 690 137 688 652 108 276 576 385 323 656 326 264
 634 431  56 736 709  24  42 833 628 541 761 650 166  54 116 171 707 677 700 296 600 859 618  81 655 201  50 756  62 701
 877 551 643 847 319  90 712 504 530   7 794 776 694 241 240 138 832 693 658 187 668 822 737 168  12 120 154  55 233 213
 332 803 641 674 786  16 338 617 784   9 835 819 665 238 293  46 765 774 483  61 672 830 714 207 647   1  48  92 267  58
 751 811  85  65 147  30 788 711 742 735 745 746 105  71 289 278 748 864 555   4 705 796 820 186 769 160  53  57  32 667
 818 740 689 841 717 112  80 782   5 425 407 732 624  59 199 219 872 875 100 174 861 842 739  35 764 125  97  13 321 248
 104   8 246 807 368 644 231 762 481   2 805 720 663 330 871 450 777 876 181 107 849 194 806 829 157 648 149 124 170 156
 828 703 448  11 433 657 715 800 202  10 719 823   3 623 459 188 825 824 699 101 881 691 301 344 216  19  36 198  75 683

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.94879e+06us (= 5948.79ms, 5.94879s)
Wall-clock time (full program): 5.98157e+06us (= 5981.57ms, 5.98157s)
Satisfaction error: 0
Number of search iterations: 1509
Number of local moves: 794 (including on plateau: 300)
Number of local minimum: 86 (including on plateau: 40)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 893   8 320 852 851 135 304 862 581  50 867  56  18 249  10 110 825 628  84 727 730 854 201 887 168  72 120 868 840 345
 874 882  51 144 881  62 877  55 615  78 654  14 397  47 113  38 504  35 765 767  54 459 883 493  93 842 776 829 336 897
 139 777 507  79 841 151 879 152 408 221 681  36 758   3 216  66 728 131 633 678 107 790 873 651 555 142 885 364 870 194
 812  26  28 655 570 757 340  64 310 104 795 707 657  59 722  90 818  30 230 690 163 778 701 813 276 315 896 215 769 125
 794  99 145 141 575 219 725 407 762 262 299 259 153 146 326 114 127  20 815 799 205 878 857 856 564 875 889 116 834 254
  76 197 589 360 281 173 703 898 692 178 347 155 314 313 890 368 251 149 618 803 248 554 691 830 888  86 272 611 814 166
 328 126 271 225 210 729 859 593 791 209 706 302 667 239 557 820 344  85 810 278 206 242 869 622  52 617 123 726 738 171
 260 688 181 213 682  40 592 855 639 580  39  83 844 285 871 585 843 136 686 736 365 274 431 836 212 231 656 337 214 121
 284 270 234 471 895 770  29 179 545 638 111 546 335 227 821 226 880 872 822 298 886 520 663 605 800   1   9 167  81 330
 232  45 325 308 327 366 527 861 746 899 519  69 858 261 156 549 286 283 846 735 891 766 669 509 381 275  94 266 307 159
 295 717 290 674 174 391 712 342 747 837 752 186 191 137 255 434 393 412 683 246 744 282 603 696 417 371 324 447 273 490
 267 482 321 331 361 396 647 386 763 619 353 892 358 497 243 442 428 297 401 630 659 559 552  92 455 409 291 244 697 443
 572 399 467  96 373 755 577 348 789 449 876 269 511 503 404 362 220 806 258 376 229 312 533 756 444 487 508 294 190 352
 451 529 415 318 566 343 626 863 332 311 751 410 514 644 550  77 460 112 561 329 445 437 405 500 479 491 456 356 250 534
 616 372 411 414 433 390 435 526 475 835 333 786 292 624 538 402 540 474 301 138 378 543 502 133 351 430 446 501 472 424
 309 634 579 532 306 176 643 385 496 418 303 370 387 536 473 108 465 426 448 563 450 379 463 211 547 528 498 849 613 420
 469 583 582 600 576 516 238 222 128 481 658 553 612 421 419 535 489 679 218 608 454 495 339 359 441 357 394  98 525 466
 599 453 413 416 539 388 100 354 384 241 551 458 556 571 560 677 513 341 485 531 440 649 185 436  15 468 484 609 661 438
 586 477 367 375 422 629 103 488 147  37 350 403 594 573 494 256 567 524 355 601 627 363 380 200 541 518 715 189 866 768
 429 544 666 470 289 884 193 245 775  87 300 637  12 382 598 425 587 530 452 804 237 610 257 377 247 591 574 558 607 148
 705 562 521 668 464 816 400  70  68 432 625 101 369 596 203 517 506 642 293 202  42 129 670 157 505 708 699 604 718 523
 512  80 515 636  65 277 319 349 510 169 427 783  34 620 702 805 578 569 486 693 623 398 279 788  22 117 522 588 374 675
 759  32 792 606 672 710 317  53 115 796 296 595  91 646 492 711  21 732 192 204 687 614   2 252 648 680 694 650  17 439
 698 590 771 207 235 721 499 894  48 700 132 742 779 713 671 724  16 483  24 119 143 177 154 268 253 719 462 827   7 739
 158 537 753 787 640  95 602 265 109 733 184 150 864 584 662 731  41 631 264 134 653 224 743  49 223 720 542 635 161 641
 695 676 797 811  11 709  31 723 175 457 195 652 568 476  75 823 480 833 188  73 632 346 187 240 782  33 183 645 180 839
  19 826 764 118 172 565 196 389 199 734  58 749 124 865 780 741 716 819 316 228 395 160 140 164 801 848  60 689 130 750
   6 714  82 660 122  46 392 838 478 817 423 900 737 665 280 785 288 772 165 106 287 621  43 704 807 685  57 105 182 748
   5 406 761 684 208 461 548  25 305 809 760 802 847 860 236 832 338 233 793  97 754  13  23  27 808 828  88  67  44 853
 673 784 597 664 774 845 102 824 383 334 170 850  74 773 198 162 263 831 323 322 781  89 217   4 740  71 798  61 745  63

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.23766e+07us (= 12376.6ms, 12.3766s)
Wall-clock time (full program): 1.24093e+07us (= 12409.3ms, 12.4093s)
Satisfaction error: 0
Number of search iterations: 4177
Number of local moves: 1337 (including on plateau: 608)
Number of local minimum: 344 (including on plateau: 73)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
   1  28 741 734 643 715  58 707 121 620  11 787 342 381 812  38   2 890 719 361 867 228  75   5  72 836 712 589 720 700
 783 553 467 405 111 819 717 263 123 207  59 374 466  90 191 750 555  42 260 862 718 855 863 801 328 217 729 194 544 169
 480 493 897 271 372 200 558 708 166 145 670 248  98 687 490 839 143 119 835 610 713 534 703 358 294 364 314 276 781 149
 312 318 179 609 806 861 521 187 115 418 832 214 682 338 225 371 152  55 464 751 852 301 595 282 462 697  61 859 731 265
 201 744 786 240  78 300 326 454 167 650 570 346 289 548 250 431 662 299 773 193 234 203 853 754 233 461 630 488 748 604
  62 491 495 686 841 148 430 776 388 127  34 359 846 757 459  26 247  93 813 158 245 775 528 792 573 249 157 816 568 576
 597  46 320 181 494  81 652 131 220 870 626 159 141 231 519 216 599  41 880 864 830 469 655 818 860 221 472 426 763 133
 894  84  60 266 780 146 653 799 755 347 770 117 476  29 774 671 584 825 588 310 826 740  13 413  47 302  54 665 332 195
 336 872 389 409 499 436 108 378 685 125 743 600  66 866  88 882 335 262 219 377 876  27 811 505 585 313 771 287  67 598
 296 496 677 352 891 162 329 439 833 344 569 199 134 823 517 869 333 177 275 391 189 698  68 798 168 473 363 236 777 639
 362 222 844 788  89 185 433 606 447 883 474 735 212 834 196  49 543 261 482 529 130 721 769 279 339 849  35 407 540 272
 307 539 785 354 612 351 406 432 608 531 664  48 675 692 428  24 156 268 739 593 617 638 190  96 327 817 102  94 809 613
 243 536 144 634 283 848 421 448 611 658 264 445   4 737 523 293   8 851 241 298 398 303 465 714 238 753 624 618  12 900
 779 784 885 308 227 383 506 174 395 591 379 324 647 360 565 278 370 827 557 420 256 393 873 315 435 285  69 380 368 382
 512 778 690 886 601 596 192 211   9 489 456 253 455 760  18 479 688 321 139 385  73 437 453 877 235 415 357 427 424 899
 794 738 399 135  32 451 440 666 366 800 373 640 838 105 513 649 110 895 468 457 888  16 394 136 340 475 689 402 286  20
 632 663 857 554  22 343 292 559 651 397 616 509 487 745 239 582   3 535 401  43 319 572 390 309 274 702 175 563 510 571
 355 546 768 218 645 810 481 514 345  92 330 497  15 709 802 204 814 507 350 603 726 376 795 101 530 100 438  97 180 567
 541 386  99 538 545 154 484 515 727 843 636  95 209 446 183 850 518 165 173 470 178 547 412  76 550 527 765 594 875 414
   7 416  79 577 460 820 452 425 637 619 107 614 641 356 552 520 270 705 304  37 442 605  80 322 625 417 602 710 323 791
  33  51 306 615 106 758 232 699  19 500 501 684 583 132 592 587 533 661 317 772 874 845 142 676 122 280 485 694 213 503
 821 120 419 840 551 654 277 668 824 564 297 648  21  23  64 627 681 728 566 478  53 865 252  56 706 316 646   6  14 730
 331 369 112 560 341 673 898 522 644 334 198 441 657 237 879 669 128 672 492 150 126 254 349 295 793 732 679 257 678  45
 400 516 526 701 147 109 556 137 392 325 635 337 537 242 305  57 269 471 854 716 160  77 549 842 656 837 581 578 251 752
 667 483  87 525 724 434 695 691  40 291 161 805 375 449 210 164 896 623 244 829 182 223 683 290 590 458 736 124 628 208
 579 742 116  17 680 171 746 408 607 759 622 621 797 259 762 796 696 498  70 723  65 410 348 104 659  74 224 704 155 103
 396 170  25 186 215 273 206 281 764  50 893 633 761 202 542 856 725 411 429 524 892  63  10 756 747 847 580 502  44 532
 284 153 562 163 767 444 384 140 807  82 575 631 790 477 858 450 789 889 138  31 114  36 660 828 878 230 188 693 422  52
 868 504 629 255 586 387 258  91 267 815  85 403 808 871 226 205 884 311 151 176 229 881 184 831 561 197 766 118 722 246
 642 674 172 508 367 803 804 486 782  39 365 749 463 129 733  83 822 113 574 404 443 423 353  86 288  71 511 711  30 887

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.04344e+07us (= 20434.4ms, 20.4344s)
Wall-clock time (full program): 2.04671e+07us (= 20467.1ms, 20.4671s)
Satisfaction error: 0
Number of search iterations: 7885
Number of local moves: 2104 (including on plateau: 1023)
Number of local minimum: 722 (including on plateau: 134)
Number of resets: 4
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 492 471 592  79 508 608  10 148  57 866 521 497 628 714  14 711 801 479 726  22 456 467 310 879 495 864 225  76 611 188
 877 563 795 284 135  59 485 786 712 552 254 547 811 854  87 146 551 105  45 717 210 678  36 112  97 862 306 354 625 870
 771 574 805  91 470 312 193 796 324  58 620 268 686 875 102 706   7 707 173 474 325 745 833 461  98 253 776 701 211 100
 314 133 613 672 180 859 401 627 621 269 606 863 844 198 202 727 548 342 143  51 898 168 637 149  90 245 700 649 523 243
 400 359 182 853 418 644 502 277 619 848 405 122 334 789 416 839  60 204 590  75 166 759 480  55 809 478 615 823 152 242
 562 115 840 216 871 580 425 175 464 736 880 209 250 103 734 825  44 172 255 537 183 473 816 158   3 519 886  86 572 826
 315 159 578 252 518 541 673  99 733 849 412 223 150 453 756 144  27 348 181 775 445 633 256 830 557 695 758 513  69 573
 489 836  50 295 156 876 397 457 782 423 834 195 525 857 887  74 511 226 273 755 288  65 883 107 524 294 587 258 319 292
 265 852 622 178 170 199 797 422 339 282 101 368 227 831 744 804 570 238 304 261 803 394 293 141 341 271 865 767 832 234
 239 408 218 305 680 194 757 353 838 822 390 130 889 406 483 165 640 196 431 189 813 576  26 301 343 882 766 347 287 441
 119 206 869 396 370 515 591 365 668 237 768 491 386 215 664 303 326 372 860 769 257 128 900 322 118 530 728 309 443 290
  15 162 366 560 323 444 723 177 377 774 650 266 595 360 720  56 661 395 407 665 321 675 428 607 599 762 184 419 436 388
 373 140 846 787 387 764 505 486 311  19 286 316 300 246 429 643 380 715 674 164 438   5 618 540 432 770 317 847 610 167
 716 807 455 689 384 383 596 475 812 298 378 748 248  29 327 713 442 659 185 855 437  16 392 506 532 512 241  21 190 469
 612 320 843 344 108 527 402 318 236 346 575 892 224 333  41 868 699 332 192 145 291 761 899 450 504  71 208 808 584 582
 398 411  25 888 454 421 214 200 629 308 399 331 494 379 598 393 626 709 330 452  77 280 449 447 614 783 427 681 468 630
  88 207 522 139 490 735 549 828 482 160 247 600 824 794 328 463 542 683 679  13 731  61 472 703 658 222 738  64 219 274
 817 413 351 538 568 458 503 872 488 564 885 345 138 740  47 338 142 691 666 409  37 725 228 567 462  63 583 157 517 203
 702  20 507 605 187 362 329 417  48 279 821   8 466  35 281  93 389 520 656 760 897 439 414 874 501 890 842 113 270 790
 559 662 430 639 534  42 671 616 694 577 153 531  46 724 743 657 263 212 262 586 124 217  67 800 652 267 111 509 566 601
 448 645 554 533 845 581 692 235 121  66 151 460 127 544 850 299 191 106 642 655 221 550 648 741 763 361  11 526 176 773
 126 841  95 693 772 163 233 285 729 884  70 597 555 670 186 784 638 878 749  49 685 585  28  23 499 179  54 546 516 403
  52 654  85   1 376 352 410 553  92 594 896 435 698 737 116 500 651 623 835 313 660 132 367 543 688 249  53 788 201 861
 635 881 858 350 806 110 369 120 420 856  38 609  62  34 240  80  39 667 476 721 730 792 337 481  24 647 302 819 528 484
 571 708  43 510 732 355 137 385 229 669 434 722 780 556 357 704 798 690   4 895 335 381 297 545  32 251 440   9 837 109
 514  33 746 696 415 477 171 779 753  12 653 799 123 154 535  78 155  68 451  40 487 404 815 375 894  72 603 829 752 632
 433 765  94 340 718 424 356 604 213 264  73 230 569 260 791 134 793 814 750 161 677 777 125 802 710 873   6 131 459 169
 747 893  82 493  89 589 636 602 624 498 426 117 391 232 579  84 349 697 739 631 136 682 588   2 646 283  96 336 561 687
 785  18 244 496  31 114 684 751  17 276 358 778 278 363 539 374 781 296 663 634 536 565 676 465 272 220 641 754 617 289
  81 259 205 593 820 827 104 307  83 129 231 818 867  30 719 810 891 371 174 742 851 382 197 529 558 147 446 275 364 705

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.10975e+07us (= 21097.5ms, 21.0975s)
Wall-clock time (full program): 2.11382e+07us (= 21138.2ms, 21.1382s)
Satisfaction error: 0
Number of search iterations: 8226
Number of local moves: 2068 (including on plateau: 872)
Number of local minimum: 751 (including on plateau: 125)
Number of resets: 4
Number of restarts: 0

