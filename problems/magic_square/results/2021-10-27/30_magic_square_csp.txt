@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 523 577 859 543 522 368 444 111 808 130 473 632 622  47  86  10  61 647 598 408 417 643 785 254  28 571 531 455 462
 681 877 262 189 281 866 110 457 466 719 398 196 765 428 708 738   2 883 702 501  71 120 840  26 549 624  54 292 169 541
 601 283 851 138 288 190  64 265 412 406 635 351 331 727 631 393 496 713 134 519 183 585 132 490 797 837 814 180 291 778
 793 575 794 807 665 253 357  40 749  95 304 100  57 261 373 249 340 700  49 893 771 775 729 850 320 898 363  36 102 217
 754 562 766  34 790 194 305 107 186  18 812 530 301 760 136 387 706 548 245 349 312 722 555  21 165 761 770 682 478 559
   1 275 674  50 325 774 117 151 759 783  37 692 863 223 593  14 737 609 403 243 844 804 135 540 502  17 695 773 361 521
  35 179 116 846 544 471 852 362 336 376 553 158  84 536 274 446 232 856 715 308 503 675 782 678 178 599 668 800 124 229
 355 803 688 572 596 385 298 222 619 244 894 742 326 698 789 642 125 636 164 487  92 397 563 586 294 255 184 153 390 316
  67 763   5 862 396 691 493 141 648 414 509  45 302 868  63 830 786 767 574 755 659 516 270  11  99 106 202 871 646 156
 886 838 395 644  78 756 204 386 857 566 238  23 525 732 835  96 176 234 703  30 247 436 486 337 113 191 529 697 687 590
  79 242   6 534 717 142 177 878 603 579 604 887 568 147 884 195 358 841 211 787 115 314  68 209 290 822 827 328 872 231
 520 286 588 122 484 892 589 815 384 219 252 517 705 108  53 346 762 421 860 287 208  94 279 432 662 356 834 427 696 317
 311 605 867 449 343  76  32 861 161 724 511 497 607 224 711 557 824  43 345 354 873 655 811 276 445 140 150  82 718 263
 413 342 424 482 491 492 467 264 359 855 463 869 465 464  16 494 514  87 389 481 172 753 489 167 248 551 459 780 699 366
 650  65 256 776 832  31 447 546 712 246 518 303 818 652 510 535 104  93 817 327 271 131 639 259 673 380 425 532 329 638
 411 400 454 451 437 418 507 430 423 538 440 416 468 441 419 452 448 402 433 391 458 453 456 725 443 388 227 745 407 434
 289 897 896 506 148 580  22 567 173   3 166 620 597 378 709 676 371  60 581  55 828 608  58 637 610 154 105 645 825 751
 679 162 477 504 475 429 736 250 338 653 374  41 383  66 584  69 592 344 352 627 144 561 369 641 791 564 731 365 401 813
 515 306 442 370 323  56 733 895 689 721 606 781 801 805 139 764 661  85 324  25 594  73 118 634 347 188 285 272 293 670
 333 683 201 297 769 350 842 816 582 879 870 205  48  62 206 874 542 137  33 266 554 145 422  39 693 853 684 552 450 128
 576  13 199 677 558 155 882 280 720 213 654 240 353 438 470 802 284 127 495   4 694 319 891 796 296 657 746 192 251 533
 235 735 617  98 237 300 752 836 332 315 160 114 779 318 334 381 258 375 225 728 875 212 341 307 569 480 757 528 616 701
 431 669 170 295  97 335 865 149 152   7 461 379 881 833 267 573 539 626 744 864 513 426 175 890 273 629 221 193  19 839
 392 505 621 615 181 628 439 405  70  80   8 777 330 843 364 203 611 460 587 810 570 215 233 185 420 734 220 612 772 625
 321 545 741 730 241 820 666 667 187 299 174 623 633 198 399 339 214 595 888 159 126 889  59 707 129 230 876  83 664 313
 758 197 476  52 377 527 618 614 831 133 704 809 101 171 792  20 630 310 499 795 556 218 672 821 685  74  15 409 216 435
  51 690 348 526 282 591  44 710  91 747 157 268 651 257 656 847  88 819 788 508 498 228 565 663 658  90 121 854 483 236
 269  72  75 119 714 798 146 680 784 512 768 858   9 583 404 726 372 524 485 739 360 845 686  27 602 880 200  46 143  89
 799 163 322  12 474 716 640 239 309 537 367 278 103 560 649 613 848 488  81 210 547 806 823 394 750 479 182 277 109 740
 410 260 207 899 829  77 743  38 472 826 748 723  29 112 500 168 885 671  42 415 469 123 226 382 660 550 600 578 849  24

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.91335e+07us (= 19133.5ms, 19.1335s)
Wall-clock time (full program): 1.91664e+07us (= 19166.4ms, 19.1664s)
Satisfaction error: 0
Number of search iterations: 7820
Number of local moves: 6424 (including on plateau: 6364)
Number of local minimum: 75 (including on plateau: 774)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 447 406 408 272 304 887 279 714 578 207 823 831 794 305 171  32 724 781 122 361 574 825  18 634 846 546  75 120 388  43
 150  14 380 531 180 339 826 628 476 685 331 489 879 398 837 400 333 448 597 125 488 469 338 415 330 453 875 309 485 307
 157 893  80 638 857 138 100 871  41 152 435 358 663 750 738 341 444 589 845 165 211  28 896 218 692 321 579 404 166 745
 118 527 537 113 639 518 396 401 565 789 232 132 246 296 677 808 475 200 718 446 103 861 899 110 533 283 792 251 704 146
 604 135 850 516  66 366  12 731 801  76 771  50 766 390 865 434 526 895 788 294 815 202  52 362 212 720 490 250 248 228
  82 630 349 730  68 188 605 732 277 513 562 798 421 657 156  85 783 803 466 405 293 560 843 403 601 213 187 151 877  77
 395 542 674 851 195 249 176 179 755 263 215 528 500 844 687  97  55 269 709 162 683 534 173 620 885 633 795 196 593  58
 431 425   6 587 631 660  40 227 460 111 414  96 373   7  60 880  79 876 237 744 835 809 773 262 303 611 655 822 586 515
 759 203 139 572 538 169 702 580 712 640  37 763 648 849   9 854 729 733 669  71 308 658 170 319 149 335 206  95  88 811
 643 727 790 581 121 824 740 295 860 311 129 160 715 757 389 115 112 594 412 159 231  23 570  24 775 590 253 665 541 409
 340 701 258 299 360 376 673 284 900  31 343 271 652 350 322 429 353 273 552 318 836 868 290 818 288 839 394 329 436 332
 529 324 369 104 667 381 287 379 737 561 204 325 810 891 375 254 867 378 391 223 372 426 344 855 219 551 326 278 226 862
 371  51 784 791 266 478 497 153 491 621 848 612 472 147   8 889 722 327  63 666 807 465 625 411 780  21  54 632 140 323
 286 423 555 524 624 377 739 471 804 736 547 387 367  42 445 183 430 413 314 664 385 473 355 852 649  94 198 420 210 548
 452 144 654 457 463 116 897 233 461 892 682 348  86 422 467 443 337 124 813  64 382 582  69 749 229 483 650 364 746 706
 506 882 417  29 698 599 342   5  33 268 613 758 833  34 456 292 782 786 220 832 805  61 754 670 407 145 334 459  62 433
 464 107 661 217 508 285 419 499 693 752 136 799  46 756  36 177 482 553 869 847 328 282 568  27 454 571 544 819 174 442
 462 493 545 585 484 479 492 504 520  90 642  72 470 468 761 301 450 600 550 495 559 247 501 315 598  26 267 671 365 503
 374 588 623 748 800 644 838 101 178 205 577 317 525 127 230 646  15  70 432 502 141 609  25 514 449 357 576 820 719 765
  74 842 316  30 812 523 384   4 647 257  16  35 617 721 772 356 680 796   3 583 689 345 883 764 615  38 700 359 168 486
 313 575 870 225 164 558 517 886 458 265 618 536 275 554  49 521 186 607 793  11 608 191 224 619 636 872  93 584 651  56
 255  83 774 481  22 853 148 441 208 863 723 556 143 216 260 629 386 281 123 209 126 696 760 474 530 742 352 708 770 703
 856 694 131 402 797 734 167 787 690 591 637 192 302 635 603 185 235 686 725 363 543 155 659 158 437 726 236  81   2 106
 888 455 399 397  45 108 128 522 130 767 874 662  87 221 776 777 181 494 496 595  78 370 507 728 498 280 713  91 681 567
 679 769 707 716 346 699 610 653  44 539 816 190  39 245 602 678  47  99 163 428 684 762 418 201 424  67 133 830 354 573
 119 193 134 668 336 261 672 817 142 427 297 881 270 898 557 641 828 102 239 778  53 779 306 243  10 768 747 298 300 751
 535  65 259  57 310 866 743 240 197 864 347 416 505 393 509 264 189   1 312 688 710 214 510 735  13 873 753 675 656 616
 691 626 383 451 711 532 252 392  20 289  92 841 161 606 829 368 695  19 256 814 105 320 274 182 705  84 894 821 858 244
 645 511 241 592 806  17 717 172 438 566 114 549 109  59 242 596 878 238 540 827 569 137  89 785  73 834 234 859 802 276
 890 487 222 351 697 291 117 614 199 184 440 563 741 477 627 840 512 480  98 676 194 564 622  48 175 439 410 154 519 884

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.56537e+07us (= 15653.7ms, 15.6537s)
Wall-clock time (full program): 1.56867e+07us (= 15686.7ms, 15.6867s)
Satisfaction error: 0
Number of search iterations: 6424
Number of local moves: 5365 (including on plateau: 5306)
Number of local minimum: 59 (including on plateau: 646)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 835 412 201 553 541 102 152 487 792  59 141 484 766 783 743 522 234 302 607 535 367 106 693 348 349 221 734 483 770 193
 602 754 605 270 109 771 628 140 225 752  15 485 174 542 188 108 868   7 429 880 380 393 578 701 287 324 664 557 851 228
 449 208 700 897 608 599 263 308 554 139  94 544 596 863  18 239  17 306 612  21 200 515 668 469 566 585 366 864 523 724
 384  65 301 186 753 689 514 433 587 793 848  26 775 511 209 105 386 826 809 132  32 691 814 594 786  71  95 321 569 210
 115 810 898 368 818 521 825 332 659 389 829 808 862  54 870 503 103 229 307 148 138 819 198 125 196 739 545  63  72 172
 657 423 834 895 399 570 494 589 318 121 329 434 178  93 529 703 271 190 165 371 245 733 118 892 695  98 344 551 721 555
 651 688 274 381 317 507 237   9 714 669 791 455 149 729 461 670 154 745 430 869 598 872  99 665 262   5  62 339 496 217
  57 874 617 290 861 400 600 885 240 678 223 526 100 128 674 363  79 876 486 889 375 899 354  45 756 183 453  52 280 272
 337 719 459 828 387 342 471 406 129 445 653 698 292 336 427 192 167 649 303 299 682 652 490 794 580 454 159 151 242 772
 816 428 584 203 372  68 261 214 383 275 509 704 338 590 175 742 866 501 346 476 572 173 163 804 388 615 633 709 538  69
  61 101 374 636  10 452 712 749 732 356 351 316 558 778 310 635 890 185  91 296 117 357 610 845 199 853 716 340 218 667
 355 683 415 654 119 365 531 807 376 206 661  47 547  14 267 164 666 758 900 702 394 694 286 784 411 247  50 642  53 717
 795 790 460 295  35 249 385 536 624 440 273  81 171 882 446 204 711 823 546 256 255 180 781 142 391 327 855 369 840 373
  60 839 325 162 888  34 413 673 830 821 126 362 548 475 153 697 424  88 658 577 135 470  58 887 879 251  44 852 493 293
 508 212  42 480 243 277  31 727 350  77 417 419 431 883 847 377 833 656 466 425 740 111 194  75 647 639 516 857 723 312
 179 123 458 409 404 539 422 506 281 436 463 675 690 238 444 420 534 519 773 472 462  67 474 254 504 638 801 421 414 495
 236 146 379 488 736 798  82 250 401 567 764 202 621  55 161 803 207 260 655 438 477 246 211 268 625 618 632 735 777 677
 552 875 871 334 616 817 134  66 563 867 359 482 435 257 216 676 313  13  28 606 831 347 170 120 510 706 747 891  23  90
  43 416 597  56 765 442 686 877 896 738 177 685 187 603 328  89 619 574 352 220 505 284 405 575 645   8 609 725  87 322
 646 331 266 713 769 197 680 258 213 592 812 710 231 672 768 564 305 456 130 315  22 481 687 641  78 573   1 361 802 241
 227 323 643 160 556 692 720 679 264 233 524 133 166 549 741   2 788 859 500 865 576 300 520 285 844 124  39  70 850 283
  85 499 746 392 136  41 298 671 230 537  64 122 407 219 886 314 708 269 447 759 718 782 824 854 131 805 252 760 195 364
 513 640 137 244 441 737 629 253  84  36 568 813 532 335  97   3 530 326 614 345 748 224 279 767 622 878 846 215 498 561
 492 341 650 582  20 533 579 147 663 815 145 696 581  96 390 884 518 627 259  33 478 797 843  24  74 722 731  38  76 681
 726 114  25 176  83 169 565 333  49 620 699 832 595 873 512 660  12 439 806 662 107 157 707 191 613 382  37 637 893 841
 464 611 288 527  92 450 728 155 465  19 491 426 705 761 294 583 780 437 402 586 763 762 181 182 358 858 113 158 468 408
 842 457  29  80 730 593 112 397 562  51 144 881 715  48 543 343 304 591 448 330 836 443 418 410 604 403 634 517 265 785
 787  46  86 856 796 289  11 489 822 540 837 297 116 222 789 799 184 110 631 276 757 550 560 320 127 248 601 205 353 811
 750 571 451 626 838 378 525 820  30 849 432   4 860 644 278 396 360 150 309 235 226 370 630 311 232 467 648 104 398 623
 291  16 800 774  73 894 827 319 479 395 776 168 189 282 751 755 684 744   6 497 779  40 502 143 156 473 588 528  27 559

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.9207e+07us (= 29207ms, 29.207s)
Wall-clock time (full program): 2.92401e+07us (= 29240.1ms, 29.2401s)
Satisfaction error: 0
Number of search iterations: 12311
Number of local moves: 8804 (including on plateau: 8684)
Number of local minimum: 259 (including on plateau: 1096)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 818 536  69 599 887 111 360 787 221   3 851 263 487 731 892 649 298 128 277  49 615 297 384 205 378 170 488 752 343 867
   1 740  98 460 716 191 680 897 340 863 213 386 666  16 854 811 334 174 233 853  20 815 700 127 372 671 211 114 847 112
 881 690 899 137 301 238 344 383 376 154 800 517 764 336  74  26 655 456 231 514 355 554  31 329 627 801 594 805 363 280
 500 245 790  92 539 178 389 495 886 478 836 875 475 464 459 273 789 481 513 218 249  45 223  29 312 874 802  48 765 193
 240 186 289 683 786 466  34 373  89 398 490 581 501 891  68 621 578 183  94 434 210 717  57 750 830 735 557 491 338 845
 561  61 358 638 414 864 831 252  18 759 584 345 142 506 722 303 665 681 812  11 198 189 520 453 346 441 176 181 718 766
 161 295 274 695  73 318 737 819 777 208 125 689 300 258 820 637  58  66 684 865 326 266 806 547 322 730 697 763 148  51
 727 291 395 133 177 622 703 678 804 116 247 288 538 351 550 260 527 848 164 348 165 698 696 654  93 253 586 582 316 705
 575 251 511 115 225 307 265  37 646  71 896 701 362 367  30 140 396 653 542 293 597 598 850 540 743 710 541 868 650  35
 323 817 688 134 196 313 866  75 544 587 222  27  65 639 306 880 651 402 369 612  46 292 565 573  28 824 166 794 877 634
 477 679 278 782 635  90 545  80 691 709 571 568 660 387 645 187 171 158 882 556 772 385 411 439 153  36 762 132 553 121
 692 237 194  88 109 876  47 659 503 190 658 531 617  14 248 791 118 180 576 560 339 185 706 803 628 603 857 715  77 714
 779 101 235 271 834 579 108 157 602  62 393 596 534 533 206 768  24 674 619  63 657 643 317 642 537  33 417 826 496 809
 304 162 559 792 296 229 476   5 507 558 486 884 770 498   6 555 455 888 156 168 522 758 519 859 493 479  17 440 457 217
 444 552 482 699 469 356 508 442 494 415 483 463 509 452 470 474 497 408 515 282 499 423 399 241 808 468  76 276 462 449
 694 427 422 448 465 753 467 428 776 421 136 203 380  25 489 419 832 404 432 438 516 783  55 872 219 471 433 243 403 461
 333 374 412 437 418 216 835 769 436 551 785 135 104 431 410 379 365 728 406 254 670 391 397 686 799 413 359 484 163 375
   8  38 618 407 105 889 107 543 357 746 733 713 430 510 349 435  52 810 856  60 119 528 530 445 290 473 739 232 632 761
 839 729 708 548 588 382  22 492 314 321 370 310  82 614 756 672 595 755 302 721  54 139 754 311 505 585 195 147 131 574
  91 840 870 286 145 420 294  79 521 647 255 215 354 843 308 535 771 844 350 324 719 745 188 443 828   9 849 624  21  97
 182 833   7 524 774 242 226 668 738 272  70 626 361 860 239 270 855 341 234 605 284 879 124 325 352 281 780 623 192 748
 332 837 825 732  42 900 707 563 256 894 720  10 606  99 113  86 330 246 589 677 636 264 130 590 299 269 200 155 592 816
 663 518  87  64 580 775 201 723 103 611 230 778 285 767 742  40 305 829 744 236 797  72 228 120 583 781 798 532 319   4
 141 512 712 669 593 704 173 106 204 424 123  67 287 813 591 760 895 102  41 693 842 364 795 283 450 630 179 315 567 480
 620 184 268 682 337 126 890 209 852 656 172 644 788 199 629 858 726  13 807 741 652 546 169 160  83 212  56 409  78 749
 458 388 175 862 144 416 502 454 381 841 447 394 472 227 523 566 451 570 664 224 425 446 400 485 883 151 342 429 673 122
 279 822 893 110 368 747 796 607 711 309 676 661 100 702 405 504 250  85  23 648 390  50 838 734   2  96 262 526 724 197
 117 371 149 600 861 773 610 609 150 167  53 564 625 202 793 267 821 320  84 878 898 604 244 138 613 347 275  43 814 525
 667  15 377 259 751  81 640 869 159 261 562 335 885  44 143 220  19 426 631 641 327 827 633 401 725 577 529 871  39 601
 608 784 873 569 687 353 152 257  59 823 328 146 366 736 675 129  32 662 685 549 616  12 846 331 214 392 572  95 757 207

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.22751e+07us (= 22275.1ms, 22.2751s)
Wall-clock time (full program): 2.23083e+07us (= 22308.3ms, 22.3083s)
Satisfaction error: 0
Number of search iterations: 9092
Number of local moves: 7524 (including on plateau: 7464)
Number of local minimum: 82 (including on plateau: 878)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 730 575 629 150 706 571 301 718 623 558 778 472 312 644 520 265 433 345 226 211 543 597 181 572 383 106 491 364 400 111
 159 637 124 109 559 557 202 404 495 337 128 627 695 834 815 415 669 719 769 843 108 394 852 116  14 120 822 674 187 131
 365 895   4 584 893  39 794 546  58  36 422 831 568 711 888 386 771 306 744 536 382 127 882  84 281 263 112 396 556  55
 810 746 587 483 333 391 717  88 737 786 523 704 262 380 136 309 548 651  22 736 256 752 697 269 335 214 280 194 542  27
 745 235 665 832 201  72  74 862 114 663 384 374 104 502 515 880 147 418 570 414 692 742  43 476 208 494 544 598 708 239
 243 435 441 632 117 713 465 255 705  67 354 272 856 285 529 728 760 176  34 468  29 635 268 765 764 885 363 173 824 274
 449 664 157 446 798 347 193 212 566 300  95 609 260 490 369 608 188 646 191 606 795 370 537 684  46 228 747 617 654 643
 277 118 284 698 877 740 324 625 304 823 624 241 547  41 693 602  94 524 361 757 679 264 134 107 522 517 393 497 356 492
   1 770 381 734 640 209  61 149 351 474 620 158 614 141 618 290 645 540 507 307 762 619 240 662 791 782 649 456 123 221
 626 222 594 876 605 453 259 530 780 694 398 129 668 258 477 803 434 156 555 447 282 538 789  21 389   2   3 563 326 638
 320 653 751 729  91  40 577  20 442 349 889 266 884 848 317  99 220 452 688  38 196 521 511 135 816 779 296 630 234 724
 562 611 585  92 857 429 463  63 872 133 583 439 683 741 175 634 162 311 677 332 310 249 334 242 397 436 299 379 756 709
 171 121 732 293  45 459 860 604 607 759 313 230 424  93 721  30 143 567 569 700 377 890 821 292 411 215 748  23 539 758
 589 294 516 295 814 650 410 894 305  76 303 100 527 560 137  54 484 270 887 406 850  97  68 840 858 678 469 496 122 466
 250 541  10 431  18 702 519 851 716 580 298  33 155 437 460 488 329 799 464 358 579  78 206 478 357 792 532 712 445 897
 659 340 428 423 342 864 680 276 811 881 813  32 835 797 407 244 553  62 392 163 238 216 169  51 672 115 657 509 870  16
 686 113 224 461 231 471 504 261 667 828 229 773 535  89 565 366 371   9 836 195 402 859 775 833 408 189 152 110 590 783
  64 883 749 103 200 784 739 417  69 257 438 482 489 735 154 554 886 526 166  31 510  79 346 372 847 125 767 689 217 837
   7 178 696 308 486 319 405 480 367 462 691 359 806 601 328 348 321 343 341 661 388 413 561 875 286 675 199 842 451 318
 254 501 182 315 475 174 787  83 419 170 817 891  49 387   8 722 283 785 245 412 874 219 879 621 586 593  56 399 714 615
 899 161 151 278 330 685 153 275 733 576 636 603 743 232 768 839 687  28 432 682  53 353 444 185  77 658 574 186 223 871
 267 183 551 455 503 595  59 701 288 130 727 425 225 289 237 247 715 639 666 493 518 790  13 287 253 853  82 805 829 690
 203 360 844 552 673 513 648 777 160 102 213 362 409 600  90 841 395 197 613 180 271 676 725   5 338 670 512 869 420 297
 481 699 252  85  17 146 144  26 514 868 845 804 218 251 302  66 642 479 710 126 573 443 528 820 549 892 628 139 763 505
 167 421 184 322 487 596 578 755 776 660 448  75 761 148 612 500 855 849 145 291 534 454 416 854 246 588 336 233 164  60
 427 450 878  24 508 248 498 430 210 426 142 865  52 801 861 204 838 198 105 165 772 179 622 812 731 325 190 750 331 473
 827 177 826 641 581  70 168 373  65 819 403 726 172 390 314 599 192 703 355 720   6 707 375 138 564 327 807 339 323 808
 873 316  50 738 227 825 385 723 458  87 344 467 352  47 101 796 119 753 809 616 655 802 631 774 656 368  98  19  25 401
 506 671 900 633  71 818 896 470 207 236  42 485  37 592 788  48 499 531 350 867 800 440 457 866 205  44 846  73  57  80
 898 545 140 793 830  35 652 647  96 378  15 681 273 591 610 550 132 533  86 754  81  12  11 279 525 582 863 781 766 376

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.90406e+07us (= 19040.6ms, 19.0406s)
Wall-clock time (full program): 1.9074e+07us (= 19074ms, 19.074s)
Satisfaction error: 0
Number of search iterations: 7561
Number of local moves: 6342 (including on plateau: 6282)
Number of local minimum: 55 (including on plateau: 763)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 244  73 842 610 374 511 416 203 700 657  22 882 207 185 424 881 549 469 238 854 183 361 190 596  27 525  56 614 722
 212 344 150 301 537 251 237 621 693  48 888 714 569 177 400 138 292 838  35 408 529 573 865 232 539 849 626 462 298 689
 434 392 619  13 169 158 551 409 661 894  75 651 817 411 660 815 423 707 658 498 273 598  86 688 460 461 452 248  53 181
 227 869 350 226 210 324 705 805 490 615 394 593 791 363 830  52 731 373 279 340  99 571 224 874 257 382 336 148 794 263
 117 822 486 359 622 123 346  15 334 562 570 812 530 306 192  42 669 433 652 597 421 465 877 362 655 761  46 841  58 440
 719 698 234 474 740 763 717 202  47  71 294 594 247 799 581 314 215 664 472 876 395 151 629 341 451 757 863  36  41 130
 735 368 327 640 297 783 715  18 387 774 455 129  63 358 785 706 100  93 342 642 199  33 878 836 536 196 742 897 403  78
 120 508 225 172 406 691 119 546 385 810 479  24 654 494 563 697 723 492 632 852 725 676 647 509 513 121 145 101 480   6
 665 164 144 538 674 592 786 262   5 153 488 166 459 645 627 531 107 280 213 811 532 175 128 170 568 804 727 579 732 790
 383 307 779 646 850 892 296 171 788  74 205 871 435 703 322 236 576  43  88 887 608 351  17 616  65 695 178 272 843 318
 872 577 174 899  94 163  38 558 797 501 758 775 765 216 666 142 228 147 343 716 862 127 106 601 157  32 833 326 776 266
 512 898 606 605 453  37 230  96 304 554 254 671 427 858 140 590 176 800 544 290  28 483 663 407 267 692 528 733  97 572
 814 612 132 771  51 464 867 683 566 317 821 390 320 557 425 316 312 540 840 105 618 500 193 161  64 300 526  44 611 595
 542 156 505 504 360 828 893 853  26 356 136  79 135 471 687 602 410 371 353 414 484 831 491 102  89 609 503 585 859 281
 638 514 678 485 447 673 457 793 446 422 197 256 587 274 443 330  16 380 726 305 809 405 450 239   4 470   9 880 437 745
 507 750 837  29 896 826 398 282 834 701 137 476 110 200 458 444 439 245 886  34 795 413 377 325 806  30 233 415 401 231
 516 582 637 522 708 255  23 381 495 720 219 856  54 699  49 211 639 589 173 259 391 656 332  12 116 832 818 354 625 792
 329 133 428 357 393 534 807  59 518 864 670 635 489 367  82 376 545 179 481   3 702 704 829 633 432 560 217 338 260 591
 388 397 252 866  45 466 418 680  70 456 848 345 643 431 209 875 768  83 149 328 186 195 684 802 198 721 636  80 445 851
 430 710 222 634 580 108 675 686 372 617 420 839 672   2 734 845 229  10 124 662   1 773  40  14 502 883 375 527 737  92
 206 191 816  95 553 402 649 308 789 337 295 404 442 311  11 679   7 277 613  62 240 759 827 780 870 556 696 264 253 823
  87 478 738 668 291 475 355 487 712 258 115 441 417 426 265 429  91 746 497 449 764  55 467 412 533 667 641 454 550 547
 473 159 276 766  66 607  21 890  98 223 819 891 162 711 188  76 709 319 221 755  57 751 564 808 729 114 798 787 364 113
 302 249 847 167 283 303  77 111 744 468 313 349 208 289 510 844 584 884 846 777 753 365 519 552 648 201 347 184 250 541
 603 333 310 275 623  60 187 126 801  69 747  72 762  85 482 419 754 739 438 180 803 835 370 756 339 293 271 493 784 506
 399 165 118 628 813 517 574 543 160 214 194 146 604 718 535 189 366 548 782 523 575 885 384 748 182 287 284 659 396 379
 653 299 630  31 348  84 321 736 285 288  81 496 154 767 895  25 879 644 269 565  50  20 261 770 599 520 631 741 713 760
 109 690 369  90  61 857 588 323 515 677 743 243 331 724 378 578 463 448 752 155 335 278 769 241 889 104 246 796 143 620
 555 125 825  39 586 685 820 600 772 650 561   8 309 168 861 730 559 270 499 681 141 436 235  19 868 524 152 521 112 204
  68 781 728 873 749 220 134 855 218 122 682 567 477 778 352 860 624 824 139 103 286 268 242 315 583  67 131 694 386 389

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.91826e+07us (= 19182.6ms, 19.1826s)
Wall-clock time (full program): 1.92157e+07us (= 19215.7ms, 19.2157s)
Satisfaction error: 0
Number of search iterations: 7863
Number of local moves: 6528 (including on plateau: 6468)
Number of local minimum: 71 (including on plateau: 762)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 356 729 614 377 701 620 655 459 741 403 107 138 225 552 603 671 838 594  76 387 266 428 541 217 445 127 442 329  49 825
 505 462 871 383  39 582 812  50 841 798  93 415 490 844 106 358 855 212 172 119 823 392 158 802  89 149 482 733 842  38
 755 465 682 295 370 447   2 822 400 174 271 126 687 121  40  67 318 220 514 535 342 887 824 849 720 749 160 468 806 399
 219 478 275 416 547  19 734 656 757 724 534 708  70 192 456  81 151 407 308 394 328 379 664 867 458 846 539 234 579 495
  15  88 895 717 319 851 132 533 372 559 136 170 826 128 320 580 424 865  34 612 712 284 471 799 390 464 303 640 162 714
  64 606  71  46 863 518 242 697 115  92 454  11 251 517  44 384 804 892 795 707 516 773 651 314 850 819  30 550 551 288
 821 337 347 593 489 330 684 818 374 252 324 766  16 571 339 807 654 147 719 375 100  24 506 667 586 513 532 703 111  10
  90 515 674 833 653 221 745 205 113 425 578  25  80 558 840 499 760 685 244 816 488 112 214 650 191 626 311 163 689 512
 765 805 449 371 139  53 645 888 565 105 615 190 167 779 491 206 891 186 451 718 315 545 380 204 537 743 210 382 466 254
 296 197 421 544 754 215 666  54 511 325 728 670  91 607 596 711 179 256  42  97 605 133 796 497 623 622 709 520 393 657
 208 346 540 568 120 597  17 748   5 609 866 508 809 647 726 529 229  22 486 722 681 616 143  87 569 417 727  63 725 185
 524 585 323 536 260 122 181 852  98 258 564 519 731 856  14 180 297  20 224 882 404 598 742 624 131 285 808 778 457 662
 194 522 335 783 548 521 752 301 820 280 279 632 493 700 155 723  43 492 436 469 875 283 355 463 223 432 257  96 498 555
 747 272 801 418 659 543 222 441 187 413 803 526 290 501 333 144 484 633 583 770 183 245 673 668  12  58 631 259 146 870
 811 589 396 129 688 357 886 567  41 721 705 344 756 480 827 510  72 360 814 250 527   8  32 232 634 675 238 199 281 386
 243 341 899 763 775  55 124 103 621 860 141 239 885 125 117 145 591 751 202 267 737 698  74 584 759 797  78 872 423 246
 732  61 769 195 157 249 437 477 236 150 876 896 553 391 148 832 546 787 231 528 619  57 502 116 790 368 683  18 247 864
 829 710 736 261 613 761 331 389 574 625 397  51 435 348 406 793  59 338 507 322  82 475  37 207 487 525 862 835 345 175
 270 317 496 228 587 637 815 166 873 890 789 309 349 278 771 142 474 414 479 193 434  13 542   7 450  26 639 274 879 774
  69 321 690 114  21 810 265 378 758  65 302 310 868 307 713 306 171 643 692 276 573 694 588 366 101 365 848 784 781 336
 883 767   4  33 453 255 595 566 291 289 834 839 481 440 253 608 188 702 878 273 549 410 472 430 401 874 226 304 169  48
 791 443  94 156 294  95 699 523 237 509 352 422 262 828 706 618 642 599 676   9 216 610 408  99 877 669 740  62 201 678
 350 889 369 485  66 137 431 630 467 500  47 381 628 164 600 782 641 300 577 843 444 786  36 738   1 173 433  73 764 780
 562 617 123 299 813 405 102 268 411 570 881 735 604 177 575   6 470  27 845 627 110 696 869 286  86 602 316 572 663 198
 452 178  60 367 327 629 658 161 601 159 184 362 638 592 649 858  52 561 196 776 165 794 312 686 898  77 611 768 576 168
 402 118 340 695 153 677 218 777 672 772 135 762 305 398 409 563 361 730  84 326  29 292 395 531 263 635 817 884 334 438
 140 854 590 897 503 351 298 209 282  35 750 277 426 388 661 880 715 109 785  68 853 538 293 353 287 448 108 354 636 427
 530  85  75 859 581 704 461 269 154 744 227 857 557 248 241 264 359 420 646 680  23 847 446 746 792 189 230 385 203 693
 473  79 200 494 235 893 152 332 894 836 104 679 412 644 476  28 556 313 364  45 800 665 560 343 652  31 182 753 483 837
 419 739 376 660 788 861 554 176 504 373 439 648 130 134 900 240 691 830 455 429 716 233 831  83 213 211 363 460  56   3

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.07651e+07us (= 20765.1ms, 20.7651s)
Wall-clock time (full program): 2.07986e+07us (= 20798.6ms, 20.7986s)
Satisfaction error: 0
Number of search iterations: 8506
Number of local moves: 7037 (including on plateau: 6977)
Number of local minimum: 63 (including on plateau: 844)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 897 611 338 673 401 287 133 309 258 811 705 449  40 414 701 174  65 747 331 371 534 368 852 182 292 434 187 311 838 802
 121 869 236 883 758 725 117 662 536 224 530   4 349 481 120 389 358 195  46 202 717 589 203 665 124 876 348 718 821 649
 562 676 847 565 175 641 428  37 340 149 454 732 704 656  33 444 466  15 233 420 404 391  57 533 472 574 314 803 687 703
 226 790 698 794 127 579 418 630 492 474  76 141 647  43 753 339 874 496 608 669 399 334 155 135 390 835 215 147 568 463
 546 435 882 361 798 889 522 222 644 775 370 499 470 648 225  63 682   5 143 766  18 672  93 690  92 126 877 580 216 206
 632 228 168 103 601 712 180  34 342 594 239 872 431 592 262 765 638 591 636 867 118 452 716 613 123 664 507 254 208 373
 871 554 471  69 162 858 731 142  98 829 128 299 606 205 148 615 505 479 899 625 538 329 460 678 547 140 555 129 590 255
 243 303 801 158 779 575 637 667  95 497 445 332 521 462 190 388 230  27 844 752 539 464 859 800 421 253 778  22 366  67
 304 614 163 333 170  17 323 675 640 511 451  10 825 249 461 891 412 881 639 726 743 857 598 296 392  14   7 410 374 529
 198 265 116 450   2 812 317 491 376 621 270 218 151 887 557 467 378 503 234 577 864 223 383 784 836 643 411 885 164 432
 670 246 264 279 514 113 318  86 526 509 556 417 439 823 806  70 250  45 425 585 553 680 448 281 722 892 569 256 480 693
 582 515 237 815 330 109 355 837 102 523  35 567  78 144 559 655 634 532 769 888 573 873   1 367 663 343 695  77 519 138
 181  16 344 209 266 537 551 169  79 197 612 422 488  91  25 692 469 571 727 762 622 336 879 884 269 409 441 842 780 645
 709 535 232 781 341 512 125 666 398 316   6 729 131 501 193 298 898 455 699 201  73 335 816 629 707 597  56 259 745 572
 627 777 276  36 478 107 273 819 674 289 861 189 595 742 468 419 789 313   8 301 797 740 306 173  21 826 153 493 105 860
 465 787 473 365 880 456 870 406 508 217 213 440 159 757 453 442 150 631  13 487 782 796 839 248  80 560 315 548 156  19
 482 134 696  89 513 364  38 616 130 744 609 229 754 407 788 668  31 268  66 900 685 247 600 799 749 146 657  49 360 697
 843 715 650 403 352 586 457 101 776 167 846 623 350 300 426 177 845 395 483  55 602 783 393 353 394  11 231 310 372 516
 357 280 868 430 764 136 894 312 566  54  42 346 337 275 397 855 294 866 500 484 495 386 517 677 413 459 702 619  82 108
 161 763 271 651 686 738 791 804 438 282 504 739 694 599  39 186 308 288 840 284 379 552 104  28 157 416 502 152 774 385
 290 328 767 363 708  75  68 681 558  88 750 737 447 219 543 863 278 691 759 176 251   9 319 274 700 191 659  60 813 850
 618 424  32 267 604 490 810 878 240 293 814  85 212 100 115 605 443 660 145 433 380 305 286  24 808 351 772 721 773 827
 607 477 832 633  20 820 688 200 895 302 325 528 628 542 646 183 285 207  72 710  96 588 252 541 291 137 320 755  94 841
  74 277 427 475 527 220 227 362 746 893 624 525 851 405 603  62  30 486 377  51 375 396 581 160 805 862 865 833 257 139
 653 817 584  87 853 184 498 531 369  44 214 720 436 179 751 561 795 785 849  47 768  29 617 658 347 242 194 356  50 297
 211 324 261 733  81 204 626  59 761 679 886 381 166 756 809  23 576 119 830 132 437 458 518 506 570 165 792 620 171 661
 196 241 520 706 642 400 610 550 188 890 494 402 713 793 741 730  52 295 510 114  64  99 387  48 689 748 110 807 735  41
 245  97  71 684 714 489 321 563 724 848 485 322 283 711 635 199 192 263 326 235 354 578 549 221 415 671 834  61 771 654
 734  58 446 596 185  26 429 828 540 112 587 736 154 423 896 564 818 875 260  12 272 238 382 545 719 824 327 786  53  90
 210 359 544 524  84 854 760 178 476 583 384 822 856 111 172 728 770 831 244 683  83 408 345 723 307 106 122 652 593   3

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.35245e+07us (= 43524.5ms, 43.5245s)
Wall-clock time (full program): 4.35577e+07us (= 43557.7ms, 43.5577s)
Satisfaction error: 0
Number of search iterations: 21736
Number of local moves: 17168 (including on plateau: 17108)
Number of local minimum: 267 (including on plateau: 2133)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 898  95 878 398 467 382 774 171 242 708 771  31   7 627 114 195 194 713  54 369 525 531 707 483 527 692   5 302 789 866
 704  38 694  16 667 809 894 113 368 206  84 257 247 336 507 788 813  93 277 217 310 811 152 475 828 793 263 604 850 301
 500 121 840 504 241 742 695 187 635 283 264 516 421 474 238 127 256 534 508 449 471 615 879 388 179  24 830 284 443 867
 243 617 870 372 641 173 192 394 577 385 180 765 463 817 726 679  67 418 210 300 772  35 237 825 636 125 807 218 544 227
 375  49 267 315 758  45 685 803 698   6 804 563 558 653 240 303 626 849 589 200 199 519 514 183 296 746 331 608 642  91
 673 611 580 815  53  94  60 900 496 665 389  80 149 209 288 350 895 675 101 846 728 340 110 754 716  76 297 741 205 619
 609 278 100 349 621  72 729 552 329 601 162 235 446 521 124 862 734 444  18 739 490 450 576 706 104 487 740 702  87 648
 834  20 167 244 550 420  98 762 219 428 763 814 111 391 616 751  11 262 495 769 214 865 697 362 676 248 836 159 659  74
 768 275 610 717 295 145 572 294 652 884 732 545 654 123  12  71  58 292 433 515 851 668 640 510 291 886 251 379 311  81
  41 370 289 298 271 540 333 258 848 875 748 631  36 720 581 381 835 212 524 485 629 202  77 757  83 743 176 860 150 562
 539 877 234 361 587 116 794 270 553 117 625 239 687 305 583  96 290 566 760 530  75 387 535 105  69 724 832 683 744 232
 462 871 422 459 189 320 568 537 175 318 658 573 634  97 517 781 129 196 805 567 274  52 151 425 461 736 371 693 542 532
 586 790 343 207 364 198 453 395 738 570  42 523 556 325 727  21 458 549  23 543 786 339 782 481 122 506 285 126 857 820
 132 494 709 656 861 770 503 646  14 637 520  32 536 484 795 146 498 700 499 260 512 366 118 684 712 148 657  59 147 220
 346 334 628 559  82 479 412  79  15 236 374 880 837 745 486 493 505 575  92 181 409 686 889 308 323 853 109 620 141 839
 438 437 424 404 470 419 432 429 452 466 455 457 434 400 439 442 401 414 670 405 447 441 415 465 468 396 456 403 413 723
 638 472 533 778 222 476  55  33 538  63 833 108 397 376 792 854 451 357 622 390 204 246 393 882  39 261 599 783 399 721
 266 480 286  99 719 672  64 223 797 155 169 624 347 842 367 873 838 378 766 773 358 831  48 170 353 313 546 818 293  47
  78 876 253  17 324 671 304  43 888 259 731 281 254 756 645 560  44 819 690 156 355 869  85 136 791 591 182 590 445 822
 798 492 571 103 230 643 607 526 482 338 321 164 764 342  30  65 785  57 435 314 753 177 655 852 582 666 491 614 306 352
 216 335 153 864 410 806 664 823 408 309 858 326 597 228 384 705 411 761 112 327 337 140 816  19 800 119 733  29 718 107
  88 548 651 887  22 224 160  89 341 843 161 644 855 226  34 776 312  68 899 682 139 265 554 674 430 287 767 663 881 345
 592  10 440 569 436 578 826 529  40 551 509 662 710 605 557 824 168 564 215 269 386 280 497 231 585 775  25 359 416 307
 134 574 501 595 639 755 138 213 115 632 250 841 600 193 801 351 890 184 142 680 380 541 360 163 885 348   1 677 613 319
 699 730   8 703 130  50 174 844 696 188 561 120 669  27 784 511  26 427 812  66 827 722 750 133 135 799 868 272 172 612
 407 579 488 808  86 892 373 606 594 518 478 735  73 787  51 649 354 154 330 893 106 203 322 896 847 143 417 268 185 273
 377 883 678 137 714 689 593 856 276 701 201   2  37 252 431 332 749 737 780 144 688 356 596 249 469  90   9 245 660 584
 874 392 128 363 759 131 299 845 190 547 166 796 158 598 328 191 528 859 211 565 555 777  46 221  62 711 618 255 829 513
 197 186 344 602 810 402 317 647 650 365 477 208 872 891 603  56 725  70 752 779 233 279 460 821 423   4 630 473  61 178
   3 681 426 316 897 802 747 448 489 661 229 863 406 165 715 282 464 588 691 102 502 522 454 157 623 225 383  28  13 633

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.23419e+07us (= 32341.9ms, 32.3419s)
Wall-clock time (full program): 3.23751e+07us (= 32375.1ms, 32.3751s)
Satisfaction error: 0
Number of search iterations: 15052
Number of local moves: 12158 (including on plateau: 12099)
Number of local minimum: 151 (including on plateau: 1468)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 144 654 292 714 120 707 240  30 126 865 651 826 173 342 302 115 227 695 507 609 628 690 868 454 793 316 123 349 447 508
 322 188 323 151 392 543  84 492  39 759 766 744 732 317 215 891 500 743 516 689  12 525 542 602 279 202 534 533 827  53
 752 606 550 738 474 459 275 524 446 432 169 864 460 371 883 343 212  38 117 879 402 424 277  54 398 405 629 469 620 245
 831 201 558 824  29 472 300 329 287 140 575  37 280 121 836 835 647 291 753 837 541 889 603  50 278 467 177 592 234 501
 877 142 153 781 496 863 897 149 306  90 220 158 436 709 538 600 465 466 274 438 351 272  98 866 440 853 748  45 610 174
  35 697 155 876 228 268 719 107 874 271 180 328 667 688 535 299 579 795 290 554 711  67 855 701 722  51  26 674 458 105
  99 850 480 186 685 199 723 894 785  88 241 336 884  25 669 601 537 589  68 631 104 171 751 229  74 792 430 295 254 845
 708 677 549 899 444  11 108 658 569 118 545 586 861 846 407 210 122 288 679 374   7 813 675 125 372 114 242 267 563 678
 307 164  91 811 284 165 802 364 755 664 862 159 259 573 311 681 170 518 358 236 136 161 463 388 639 565 419 886 452 872
 156 394 867 638  34 330 583 408 597 764  80  97 206 720 749 455 116 339 493 807 887 246 162 692 650 468 264  95 562 656
 498 476 196 102 281 384 851 568 213 559 385 475 273 285 567 724 225  64 221 566 578 668 128 834 137 653 682 520 616 786
 900 315 138 298 684 791 370  47 773 519 473 698 266  87 539 499  20  58 532 854 522 740 230 514 435 504 608   3 373 725
 334 779 431 184 366 182 611 760 344 756 382 453 734 442 844 849 320  75  18 429 286  86 391 784 209 641 411  89 888 437
  63 490 428 451  10 843 625 456 414 404 825 193 552 239 376 729 659 247 590 491 588 820  77 133 788 129 814 871 101 109
 152 635 642 544 257 337 718 555 485 426  17 661 557 881   4 106 869 645 200  16 103 261 252  46 546 878 747 712 742 521
 506 192 673 113 332 710   9 548 702  57 683 147  28 484 479 477 515 439 523 686 410 893 416   5 649 352 857 705 378 547
  56 190  82  33 736 141 556 457 512 536 726  59  94 396 713 540 309 750 489  23 403 817 783 848 763 216 587 423 571 706
 360 420 381 377 461 354 350 505 842 367 721 395 390 183 746  72 644 771 305 232 347 363 415 346 840 380 397 134 774 643
 488 812 251 494 797 696 778 823   8 387 270 325  62 745 365 768 822 154 762 166 754 357 237 262 314 327 450 340 303 198
 355 613  15 580 341 716 393 482 892 856 481 222 670  81 282 135   2 495 612 478 434 839 819 809  83 775  79 263 389 324
 618 672 406  36 614 898 497 801 181  71 383 470 832 527 132 250 581 219 297 176 821 248 249 531 260 528 870 584 301 462
 733 143 739 630 172  44 217 258 253 780  21 112 841  49 875 111 361 890 632 412 175 409 665 471  27 700 445 838 704 808
 652 356 896 326  61 663  13 203 256 449 433 617 148 145  73 318 765 847 830 127 741 574 211 530 660 680 818 379 218 526
 687 619 513 551 582 223 255 691  42 800  66 413 448 348 594 417  65 623 735 333 119 529 207 308 828 694 312 399 761 353
 362  48 717 195 633 238 243 185 304 561 885 767 627 776 163 191 737 276 621 517 715 816 604 636   1 585 310 443  70 289
  76 782 657 296 794 369 194 401 510 648 624 502 464 607 345 693 757 375  40 283 197  14 859  85 769 599 224 676 615  60
 770 486 666 511 622 189 386 772 124 368 777 803 160 634  69 331 560 359 577  31 852 226 626 655 418 130  78 815  93 427
 294 179 730 204 833 727 860 662 789  43 564 882 805 425  22 799 605 321 503 796 233  24 265 168 509  55  19 598   6 595
 576 139 205 758 895 421 806 208 646 167 110 483 293 829 790 319 244 810 100 699 787 235 637 591 593 187 728  96  32 131
 804 596 731 214 858 572  52 178 441 570 400 703 313 640  92 157 880 335 873 146 671 338 150 798  41 269 487 422 553 231

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.1454e+07us (= 21454ms, 21.454s)
Wall-clock time (full program): 2.14874e+07us (= 21487.4ms, 21.4874s)
Satisfaction error: 0
Number of search iterations: 8834
Number of local moves: 7332 (including on plateau: 7272)
Number of local minimum: 67 (including on plateau: 894)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 620 407 390 573 251 402  62  47 463 370 709  58 561  34 301 320 657 847 737 559 471 156 332 777 560  55 716 541 639
 186  26  52  28 765  94 355 787 306 198 767 852 758 808 742 195 526 792 875 183 374 704 653 181  83 505 502 263 367 588
  21 770 899  81 510 822 231 516 261 506 888  41 844  77 871 484 138 886 287 674 511 403 184   1 353 857  22 452 797 128
 728 623 358 810 116 705 100 326 152  37 316 783 695 768 196 553 525 837 796  10 821 229 601 528 277 169 453 174 778  51
 881 376  18 114 791 781 849 856 363 165 838 537  38 105 675  60 214 862 155 504 436 104 550 399 288 864 815 135 448 294
 482 861 853 618 686 730  74 565 260 546  80 282  53 134 692 711 834 107 218 642 717   5 826 237 536   6  85 487 613 575
 868 784 564 735 236 345 439 806 205 602  70 764 803 256 621 745  68 162 318 462 377 219 259 691 612   2 106 293 829 274
 119 828 311 518  96 383 739 660 713 241 865 126 703  90 725 655 802 300 369 109 122   3 459 732 266 833 410 761 255 322
 665 697  15 347 303 309 497  40 635 461 270 172 351 481 740 442 817 533  79 690 724 567 357 483 629 723 185 315 250 738
 538 141 235 694 136 474 153 747 776 649 336 831 265 840 883 860 366 275  44  12  88 509 279 468 836 392 604 521 163 400
  99  86 566 667 307 451 595 425 213 600 585 354 563 295 389 344 892 234 593 586 619 580 469  75 189 841 356 606 342 594
 292 187 258 663 168 540 333 178 832 591 614 596 254 598  76 267 103 659 726 373 592 304 755 264 718 673 428 409 534 530
 302 296 898 147 820  82 754 337 443 361 164 429 535 414 278  36  23 722  78 801 426 680 804 641 339 552 752 514 395 492
  16  45 714 359 548 513 317 239 743 508 458 127 522  42 129 855 161 406 786 247 444 643 581 789 843 191 823 142 741 583
 457 427 475 545 433 491 524 460 253 423 493 490 131 495 396 416 562 431 478 470 465 523 455 488 480 456 430 519 467 382
 814 291 866  61 731 664 628 132 360 350 501 479 393 669 283 170   4 568 137 413 760 140 415 884 835  39 597 587  48 696
 661 634 819 654 859 656 549 624 121 891 314  50 515 130 199 166  71 551 212 324 799 150 630 177 766 343 763 101 204 582
 473 179 242 404 527 221 896 688 572 284 173 207 160 727 494 782 708 394 507 749 208 271  66 733   8 651 454 687 380 670
 890 201 194 897 893 158 788 133 151 779 498  97 325 632 626 707 569  32 388 117 102 850 839 379 365 432 625 671 148  29
 531 811 772 240 115 154 308 167 571 590 532 203 672  93 217 220 570 476 748 289 193 854 145 870 599 744 149 328 702 652
 544 756 338 771 701  67 543 246 830 825 257 412 809 584 159 146 790  87 486 557 268 715  35 381 818  98 372 773 120  27
 244 880  95 539 228 794 640 503 874  25 298 438 310 352 812 323 751 753 384 418 848 245 417 143  33 555 627  64 698 224
 188 646 405 578 445 895 368 894 180 499  91 472 222 882  89 285 329 211 813 125 678 223 269 113 441 638 774 631 577 554
  84 111 574 362 517 666 280 699 520 795 658 334 633 605 252 863 197  11 668 800 542 775 313 387 182 408 273 676   9 321
 807 327 496 286 689 123  92 411 662 330 112 644 824 762 489 576 615 299 398 232  13 610 464 693 215 371 346 846 419 364
 157 110 650 281 378  30 869 249 877 262 679 647 375 700   7 335 712 637 558 873 391 683  14 757 603  49 144  57 685 746
 769 556 124 272 216 331 118 845 437 422 622 225 450 589 872 878 485 706  43 209 200  54 190 616 435 233 876 729 434 579
 341 176 206 226 609 440 785 175 719 401 793 887  72 276 816  46 684  31 171 636 319 424 682 805 312 227 192 529 858 677
  73 349 500 842  63 466  59 348 420 290 734 607 297 210 108 243 477 449 736 446 681 710 759 248 608 305 547 512 648 780
 385 721 611 386  56 879 230 397  19 421 139 720 885 340 645 851 202 447 617 827 238 867 889  20  69 798 750  17  65  24

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.44741e+07us (= 24474.1ms, 24.4741s)
Wall-clock time (full program): 2.45073e+07us (= 24507.3ms, 24.5073s)
Satisfaction error: 0
Number of search iterations: 10134
Number of local moves: 8466 (including on plateau: 8405)
Number of local minimum: 67 (including on plateau: 1028)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  61 809 587 401 570 723 777 276 438 865 832  94 900 569 789 467 142 167 350 784 295 326  34 459 100 479 292 764  72  93
 844 386 314 400  45 632 740 684 783 308 529 305 320 478 392 803  62 553  79  92 880 147 532 370 114 840 485 449 162 787
  11 184 372 298 522 893 808 321 464  76 582 133 871 239 101 216 103 620 608 821 577 851 641 475 785 422 220 883  81 337
 445  17 343 716  58 109 557 543 447 472 223 868 128 739 700 347 138 266 650 151 539 714 742 833 393 240 253 858 568 458
 418  30 494 491 770 317 357 204 752 137 482 102 859 645 769 873 427 229 403 161 362 693 336  64 753 780 278 593 189 547
 153 416 845  33 190 180  10 899 621 897 191 536 515 675 853 163 662  41 818 643 843 212 280 259 750  37 676  53 828 236
 892  90 826 670 805 588 115  28  86 165 695 407 390 534 759 405  67  18 555 132 322 629 830 672 415 176 471 252 651 870
 265 197 699  97 713 348 488 164 771  51  22 767 682 511 226 152 652 452 726 633 619 387 799 773 516 380 708 297  65 355
 506 375 660 199 435  21 221 728 835 443 779 627 301 704 246 381 712  59 545 433 687 487 397 774 639  75  38 600   1 607
 768 822 725 648 157 733 574 794 188 628 678 283 451 584 428 624  50  69   7 303 244  91  63 388 521 862 857 513 117 345
 496 888 304 419 509 351 578 120 517  52 611 625 688 446 782  44 200 595 679 385 302 889 374 668 425  35  31 339 268 895
 796 819 501 550 507 793  82 580 384 680  66 274 489  57 616 144 781 690  15 842 329 352 876 130 306 124 368 701 647  16
 744 462  89 417 143 198 518 334 596 847 108 720 887 490  70 294 746 855 454 572 110 275 123 841 606   3 564 656  96 697
 497 849 798  19 139 795 254 561 470 211 852 736 373 540 495 666 508 414 610 399 531 145 175  39 224 500 576 173 503 463
 333 604 549 877 667 866 681 225 172 665 395 541  46 410 201 440 834 286 258   8 657 179 288 715 603  95 686 394 359 481
 585 242 195 208 634 118 186 703 817 456 260 251 307 222 537 423 872 330 514 136 461 878 473 112 214 754 525 691 848 563
 363 738 122 546 361  26 664 349 282 364 886 658 618 342 692 309 800 881 215 178 558 814   5 156 281 391 293 315 743 565
  23 637 455 571 439 105 757 498  13 310 623 756 573 594 367 655 227 365 804 150  73 187 730 194   6 379 762 824 732 706
 885 271 839 235 863 289 202 196 158 827 429 369 411 149 709 528 724 480 598 823 544 377 502   2 327 106 371  25 591 685
 135 287 755 354 353 205 673 811 810 406 523 340 129 378  60 420 763 263 257 483 250 243 861 590 797 356  40 772 674 527
 654 486 468 589 291 442 612 711 653 247 159 722 560 677  88 778 121 758 119 450 408 389 548 285 299 820 856  48 192  85
 290 884   4 786 790 749 434 636 231 802  36 829 613 218 234 217 249 366  43 644 126 210 813 879 284 807 269 319 453 300
 262  71 154 605 341 567 181 437  87 765 638 273  68 615 705 867 846 182 183 233 325 721 177 209 816 776 318 436 882 775
 245 382 430 530 409 837 535 836 338 869 457 228  14 141  20 476 801 707 719 642 741 296 788 421 383 609 155 131 134 241
 747 850 556 601 431 344  12  80 255 104  84 270 404 146 533 402 635 838 631 890 279 602  54 815 396 493  29 477 806 751
 113 185  78 698 791 717 542 860 469 232 277 230  99 727 599 323 659 622 891 630 376 160 169 346  47 734 441 332 896 272
 735 510  32 874 566 614 335  27 238 854 207 520 313  98 316 583 484 898 360 213 203 324 460 413 466 864 792 237 718 261
 424 444 267 166   9 107 474 661 465 617 669 729 554 766 586 551  24 694 524 512 168 504 562 575 597 519 761 264 248  74
 748  42 358 206 581 256 649  56 683  49 328 148 127 111 559 745  55 505 140 646 831 702 552 626 812 689 663 671 579 398
  77 538 696 311 426 592 499 193 492 116 894 174 825 710  83 219 171 312 760 526 875 731 331 432 640 170 737 448 412 125

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.74453e+07us (= 37445.3ms, 37.4453s)
Wall-clock time (full program): 3.74787e+07us (= 37478.7ms, 37.4787s)
Satisfaction error: 0
Number of search iterations: 17802
Number of local moves: 13407 (including on plateau: 13286)
Number of local minimum: 321 (including on plateau: 1611)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 898 359 720 204 822 608 282 210  12 891 814 176 467 228 568 175 138 752 615 729 341 377  42 792 501 187 121 237 366 883
 671 873 340  93  94 310 762 190 785 148  61 189  16 183 802 151 611 103 832 503 794 686 763 283 118 553 440 629 838 694
 332 384 845 397 294 858 894 258 156 678 396 540 818 112 133 285 831 260 756 555 877 291 160  24 378 330 514 803 278  78
 152 659 452 548 809 350 759 298 725 586 829 457 246 623 660 199 537  79   3 113 664  74 327 100 506 836 781 245 319 579
 200 645  44 789 740 164 162 724 892  89 819 552 569 262 117 482 599 312 380 301 379 381 206 456 582 748 764 708  77 372
  34 782 256 835 409 767 622 535 386  59 804 871 232 736 233  69 757 741  88 731 150 101 144 168 691 662  38 658 247 709
 523 656 856 293 672  82 732 787 701 783   6 806  64 395 143 313  58 272 201 684 657 223  51 683 240 722 706 618 107 481
 463 770 508 897 197 405 512 598 149 286 494  18  40 543 726 747 311 712 655 640 141 730 648 352 146 239 105 534 429 520
 864 235 714 269 899  81 203 812 680 617 297 403 325  57 768  49 408  84 307 825 124 651 504 749  91 125 870 106 688 710
 198 267 390 750 580 639 331 333 634 607 314 400 667 636 188 574 296 624  45 388 606 367 360 589 193  27 532 363 800 817
 416 254 718   5 597 896 820 306  52 584 177 612 585 676  70 601   2 122  99 571 259 533 564 823 374 505 810 846 562  76
 172 559 438 652 737 799  29 182 572 279 173 666 685 881 627 309 554 577 546 349 328  30 628 205 600 227 654   9 773 275
 191  11 464  83 120 236 119 860 581 444 507 186 550 837 641 886 840 551 844 739  10 772 214 875 208 401 326 128 872  19
 526 102 418 406 539 344 404 613 744 242 115 609 212 493 251 795 522 343 222 431  95 866 271 498 638 876 692  13 735 500
 519 468 460 475 471 449 474 136 472 436 422 675 465 479  80 530 497 414 421 453 484 461 488 529 470 451 447 458 454 477
 339 387 895 742 166 277 653 594 797 828 510 621 459 605 302 441 351  37 123  15 702 413 859 486 485 632 274 443  46  33
 588 370 852 221 393 391 439 596 342 427 779 368 423 435 592 356 373 434 316 361 399 833 420 357 425 355 375 487 410 398
 496 848 362 521 322 679 155  73 303 241 847 389 417 593 674 415  72 383  56 788 745  75 695 746 365 525 153 570 758 249
 114 900 646 161 202 663  39 345 402 371 104  25 889 811 699 849 717 882 824 209 527 893 448 336  20 321 207 255 230 426
 791 184  48 170 225 547 681 677 558 234  65 469 755 738   4 515 229 693 647 281 159 707 602 329 868 777 244 869 126 323
 719 480  47 544 595 830 376  21 317 268 270 450 216 668 733 127 171 215 538 354 320 412 690 861 850 801 194  90 642 716
 492 697 324 369 163   1 545 180 217 754 805 108 778 295 603  32 644 583 842 224 462 248 305 219 358 489 857 625 536 760
 715 616  23 703 698 315 556 263 178 513  85 771 347 300 364 518 649 478 885 445 751  60 276  35 154 284 561 769 516 687
  36  66 578 614 490 807 252  63 878 169 888 253 130 158 428 841 796 843 220  14 231 784 129 437 826  28 495 466 761 834
 142 145 635 289 682 192 385 816 528 346 874 338 643 111 650 626 318 299 273 633 131 567 815 689 337 573 243 491 134 610
 669 266 250 304 179 531 790 723 591  71  92 890 808  31 334 280 135 713 630 855 353 288 213 257 775 147 290 793 700 557
 109 590 509 132  26  62 879 424  17 264 696 766 116 261 430 670 884 174 774  86 854 721 780 631 786 511  97 776 392  98
 853 446 110 549  55 348  87 665 137 734 185 661 165 867 851 743 765 827 499 181 821 211 524 308 637  53 727  67 432   7
 728  41  96 620 863 473 238 673 483 753 382  50 865  68 140 798 407 442 287 195 575 542 887 157 839 711 394 167  22 619
 565 455 517 880 476 411 335 560 226 813 705 196 563 433 704 139  43 566 587 862 576 218 502 541  54 419 604 292 265   8

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.86602e+07us (= 18660.2ms, 18.6602s)
Wall-clock time (full program): 1.86945e+07us (= 18694.5ms, 18.6945s)
Satisfaction error: 0
Number of search iterations: 8032
Number of local moves: 6645 (including on plateau: 6585)
Number of local minimum: 64 (including on plateau: 800)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 284 255 627 174 812 141 577 366 841 466  74  36 844 744 836 619 221  87 734  11 528 112 317 788 757 137 512 392 498 725
 428 240 280 479 254 726  32 120 312 500 833 406 550 574 107 341 758 200  18 266 463 470 148 547 668 633 803 894 733 732
 222 895 329 459 865 125 560 713 103 893 587  26  75 515 419 324 623 485 281 460 131 477   1 830 847 835 826  56 248 305
 325 592 189 124  91 653 597 613 210 377 128 625 109 806 779 499  64 614 890 801 542 106 510 130 824 158 228 855 641 435
 526  55 371 637 166 375 786 646 746 333 544 349 669 163 624 209 179 770 355 489 332 322  67 274 196 568 696 664 546 858
 879 774 505 585 145 474 817 504  76 749  34  42 102 751 784 651 438 759 869 229  86  77 588 219 327 846 190 203 394 418
 872 471 753 762 828 557   7 701 421 116 431 264 243 401 487 320 765 391 253 861 873  61 590 346 754 291 395 153  88  60
 573 304 335 447 185 482  45 626  17 536 888 449 545 815 523 386 818 501 343 282 173 338 831 135 208 785 800 265 840  40
 147 430 772 493 891 202 760  41 642 659 508 805 316 723 358  39  97 387 363 711 695 679 743  50 139  57  19 490 596 703
 453 405 715 764 263 152 769 175 690 782 852 606 580 654 206 194 367  29  83  95 211 761 427 629 384 559 699 212 337 462
 648 883 461 579 412 288 530 183 276 133 299 480 409 773  66 804 672 607 656 539  21 575 495  58 716  23 310 119 720 780
 520 216 483 717 755 348 644 612 537 681 165 649  62   3 838 138 290 737 100 636 339 794 359 404 307 293 622 660 198 408
 856  85 110 691 127 454 465 415 226 143 426 680 578  94  93 150 600  71 809 886 712 808  16 889 533 730 252 768 586 262
 256 220 287 115 837 816   5 848 503 204 289 864 562 519 517 374 300 144 345 739 403 745 738 323 511 353 440 429 657 172
  51 775 609 486 452  15 896 160 436 845 414 271 842 121 488 450 595 610 368 193 159 558 827 162 789 186 467 235 667 388
 796 273 379 149 724 475  78  44 538 156 740  69 393 218 673 437 214 199 685 807 478 434 569 897 509 413 362 154 798 854
 781 731 851 184 892 422 259 877 225  38 541 697 548 315  73  37 423 432 630  65 301 180 620 603 247 692 563 652 286 350
 442 370 195 591 319 693 750 260 802 638 458 834 702 257 518  90 608 469 249 295 878 205 277 385 236 197 417 814 455 111
 397 245  81  68 793 524 207 157 599  92 611 445 813 285 565 665 270 859 555 308 682 399   4 167 884 441 645 583 771 400
 853 502 376 192  28 799 689 223 497 108 402 136 187 875 448 747 552 336 534 554 535  53 694 570  24 123 521 862 373 722
   2 170 666  33 361 791 871 340 647 748 572 311 507 104 829 736 684 650 456 344 380 275 168 306  13 571 118 756 742 364
 234 635 823 176  22 640 251 473 721 468 411 321   9 484 146 242 352 706 822 410 876 700 302 686  30 561 357 582 797 278
 688 678 425 643 543 201 132 617 267 777   8 330 874 683 244 766  14 297 215 398 783 763 795 514 161 741 529  47  54 328
 481 126 494 661 663 776 839 567 129 752 525 117 314 114 551 584  72 390 516 389 443 881  35 342 424 155 634 258 464 819
 531 710 439 283 792 113  89 880 778 728  20 496 598  31 381 576 318 615 416 566  46 882 604 735 820 433 272 122 231  10
 191 298 628 709 164 356 105 188 767 238 708 707  96  84  27 849 898 326 446 677 594 605 857 472 870  12 246 513  63 821
 602 334 476 631  98 232  59 556 181 618 354 671 655 899 825 718 860 832 553  79 237  43  25 140 279 727 714 670 134 313
 347 506 372 227 151 811 581 309 239 217 532 900 292 866 268 492 171 331 213 382 522 250 843 850 698 704 457 303 230 451
  48 527 101 593 621   6 396 662 540 296 867 787 676 564  52 420 407 632 169 369 491 729 687 887 178 675 351 444  99 241
  82 810 383 863 261 868 719 639 549 224 294 142 365  80 790 658 885  49 589 674 601 233 378 177 182 616  70 360 269 705

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.74008e+07us (= 57400.8ms, 57.4008s)
Wall-clock time (full program): 5.74337e+07us (= 57433.7ms, 57.4337s)
Satisfaction error: 0
Number of search iterations: 29646
Number of local moves: 19823 (including on plateau: 19642)
Number of local minimum: 862 (including on plateau: 2348)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 899 213 618 765 607 260 354 797 430 519 215 167 107 554 619  72 201 706 413 702 676  75 132 682 717 800 209 124 763 119
  98 862 798 671 153  11  74 155 669 249  57 442 429 819 774 680 338 782 510 359 575 888 750 419 236 526 412 282 113 384
 444 541 815 612 847 432   8 398 840 509  61 143 724 891 577  49 632 539 255 725 807 230  16 211 860 271  22 588 295 173
 846 809 484 785 665 658 624 180 876 172  66 131 593 568 223 190 441 804 772 115 238 105 437 264  86 104 495 645 529 610
 204 546 403  33 799  30 310 395 147 712 309 600 175 129  43 890 518 572  29 659 165 501 762  35 838 694 867 822 545 783
 171 418 766 202 170 758 855 229 599  79 300 514 320 106 678 635 241 427 683 877 784  62 321 820 345 506 181 745 634  89
 235 193 693 730 269 583 721 700 154 746 256 421 166 698 446 550 127 385 839  18 878 288 450 348 439  83 323 293 597 886
 652 895 900 775 287 111 394 688 266 753 226 383 810 552 200 160 615   4 118 812  20  27   9 628 761 662  55 670 366 716
 279 556 148  53 573  71 265  67 625  21 831 591 870 602 789 258 720 423 261 360 544 646 253 871 268 697 445 481 479 468
 879 355 490 397 707 117 596 461 145 811 703 472 525 434 157 146 677 283 535 664  31  38 648 638 532  25 636 692  37 684
 198 242 863 898 121 299 496 476 314 327 551 475  97 393  47 850  95 438 221 582 114 598 179 340 574 668 736 608 826 889
 771  65  51 517 801 558 511 585 408 704 569 219 882 802 220 251  48 543 274 586 361 311 382 214 757 483 486 191 548 417
  82 239 713 709 108 285  23 896 534 897 656 473 286 205  85 358 767 642 631 195 315 396 374   5  26 874 691 655 741 654
 474 497 471 488 614 537 719 513 494 477 531 371 123 489 459 482 452 848 478 512 498 464 522 138 500 469 324 222 197 152
  56  39 298 357 447 247 817 747 177 606 388 864 499 162 465 329 103 470 144 856  50 695 830 589 728 276 854 351 504 567
 595 502 649 485 225 399  92  46  19 401 639 787 244 564 578 415 189 386 759 790 592 462 755 325  73  93 536 620 742 553
 440 411 443 364 409 893 414 851 245 406 370  87 748 233 259 786 431 873 176 454 402 653 341 565 365 416 335 405 350 390
 643   1 391  14 368 363 505 372 369 806 375 428 322 859 770 776 389 336 302 136 616 629 777 861 347 305 301 254 376 524
 373 673 206 641 267 803  64 116 584   2 841 751 887 308 281 337 880  54 199 752 829 425 404 297 307 142 660 715 433 284
 768 174   3 868 163 793 515 590  36 228 252 604 722 666 875 248 837 726 381 326  15 549 208 756  88 740 272 449 460 203
 328 764 224 291 760 657 333 387 689 836 778 587 448 346 821  52 158  40 734 122 270 647 594 150 101 792 696 352  28 530
  42 633 601 128 426 605 739 296 824 690 185 813 277  10 523 566 845 503 422 491 457 210 130 533 729  84 561 168 808 216
  17 330 126 212 356 240 844 828 458 137 623 133 456 773 334 570 603 120 723 580 164 675 555 257 581 487 520 737 184 892
 630 731 560 644 858 617 710 290 109 207 410 196 881 237 289  70 318 794 687  69 738 827 188 493 540 705 151 378 110  78
 527 835 627 275 622 312  12 194 521 857 872 626 159 674 227 187 463 134 611 139 805 637 796 319 186 231 714  76  59 818
 749  24 192 232 102 842 234 613 754 453 833 667 306   6 538 455 708 852 681 262 609 125 679  77 528  60 640 294 651 349
 217 435  34 339 492 344 507  91 367 149 781 547  41 780 711 884 362  63 377 278 304 743 273 727 672 816  68 866 562 685
 733 701 563 407 894 400 744 420 814  96 100  80  90 218 853 579 795 516 849 436 650 169 246 331 156 342 243 141 686 263
 699 732  32 542 392 467 718 343 313 621 576 280 769 379 424 865 380 140 135 480 451 571 661 834 292 832 303 183   7  94
 466  99 353  81  13 823 317 791 735  44 161 663 559  58 250 825 182 112 316 178 557 869 843 788 883 332 779 508 885  45

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.55721e+07us (= 25572.1ms, 25.5721s)
Wall-clock time (full program): 2.56051e+07us (= 25605.1ms, 25.6051s)
Satisfaction error: 0
Number of search iterations: 11064
Number of local moves: 9139 (including on plateau: 9079)
Number of local minimum: 96 (including on plateau: 1107)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 403 839 652 105 519 656 234 535 478 512 376 858 124 163 128 886 651 390 269 215 824 464  94  87 235 778 640 697 414 289
 647 477  79 585 423 561 857 717 344 369 298 813  95 150 145 453 391 274 206 451 430 643 437 613 396 657 590 733 660  21
 878 348 506 513 340 282 170 337 159 101 861 178 192 112 859 784 122  41 735 595 486 544 198 631 847 849 266 121 819 641
 831 823 375  70 546 229 228 224 791 536  67 264 511 169 455 806  50 731 108  18 433 814 855 754 790 357 752 501 237 190
 714  53 562  58 503 521 523 598 165 241 782 509 877 415  11 677 322  40  75  42 779 730 681 850 292 748 805 578 132 232
 756 881 364 220 618 347  55  82  43 783 705 193 259 667 636 321 245 318 346 829 755 225 746 628  72 826 395 454 171 575
 635 400 317 860 131   8 406  28 333 834  78 177 294 484 261 447 876 795 729  47 837 661 360 738  48 689 665 864 216 297
 471   3 438 653  30 180 531 485 555 644 770 362 557 372 693 719  66 491 106 568 508 136 153 599 584 574 319 444 674 830
  45 221 443 569 311 894 148 272  10 888 446   4 845 233 882 728 392 777 862 439 217 646 789 130 732   6 620 380 475 111
 737 104 547 794 284 567 532 367 741 457  85 248 265 809 538 308 761  99 880 623 173 109 764 522 685 581 168  23 286 458
 553 871 700 867 673 482 514 307 504 349 634 398 715 566  90 463 200 781 309 203 290 704  17  22 167 401 155 565 125 890
 582 896 140 596  20 325 659 885 300 576 419 323 649 827 209 545 412  98  38 889 632 762  96 277 156 404 469 411 579 341
 115 137 407 385 227 488 542 852 822 119 287 706 468 481 711 268 397 808 205 527 435 490 520 238 524 627 425 887 304 113
 413  93 836 749 489 174 253  24 688 802 769 798 365 856 421 186 462 291 213 639 445 118 745  12  86 141 117 724 763 843
 773 771  14 594 874 787 895 537 146 281 166 371 302 792 417 288 201 252 189 807 472 134 655 212 709 500 181  76 844 275
 133 427 273 517 383 409  15 703 832 374 573 684 675 123 766  19 510 335 626  81 815 723 191 242 900 691 278 432 280 505
 243 721 428 218 214 772 609 873 483  29  49 718  74 329 358 283 552 539 701 262  73 179 197 820 605 617 801 316 765 687
 528 271  65 246 260 328 570 351 838 326 818 100 841 479 851 564 352 211 149 726 204 331 725 785  88 334 312 387 682 793
  77 740 541 175 603 734 465 320 345 602 671 753 872 727 373 176 678 891 739 420 496 207 194 343 476 172 263 270 160  32
 869 332 690 152 330 110 897 449 786  51 255 648 377   7  25 616 467 767 450 516  27 702 495 624 669 591 426 139 384 664
  57 611 676 530 222 183 720 707  13 239 668  89 587 580  60 610 759 589 884 354 637 296 526  54 250 187 898 870   5 654
 336 418 295 342 601 658  61 107 254 663 424 630 249 184  37  69 883 775 893 164 138 774 796 223 162 534 583 758 866 638
 226  84 750 816 129 196  52 431 692 466 556 388 279 185 645 338 301 120  39 708 842 429 492 452 810 161 804 854 662 608
 154 126 188 315 879 474 230 797 551 143 502 327 712 586 853 410 683  64 310 381 442  35 780 356 713 621 499 518 251 615
 293  63 231 899 606 550 305 498 394 285 386 470 389 694 461   9 742  91 846 572 102 699 219 670 835 114 350 821 314 607
 313 629 353 716 736 157 507 258  46 768 359 696 494 378 543 135 276 672 525  97 680 650 459 892 202 363 257   1 776 577
 825 614 210  80 558 811 533 142 588 800 147 744 208 751 448 840 563 633 434 679 303 299  83 548 559 195 355  34  16 515
 151 619 875  92 597 456 642  44 812 848 402 182 868 460 405 306 399 324 698 710 256 487 247 368  62 382 554 480 549 240
  71 339 803 199 817 416 865 722 366  68 695  56 370 833 612 473 743 747 422 560 244 493 593  26 236 379 441 144 666 116
 686 604 757 600 592 760 497 863 436 361 267 828   2 103 622 788  59 571 529 393 540  31 408 799 625  36 127  33 440 158

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.7562e+07us (= 57562ms, 57.562s)
Wall-clock time (full program): 5.75949e+07us (= 57594.9ms, 57.5949s)
Satisfaction error: 0
Number of search iterations: 28541
Number of local moves: 21741 (including on plateau: 21620)
Number of local minimum: 458 (including on plateau: 2680)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 136 808 461 659 425 844 693 213 363 817 532  96 624 236 135 385  36 547 676 628 352 573 163 567   8 581 490 274 438 755
 851  44 859 192 587 401 121 826  98 245  32 895 861 572 777  55 756  77 773 400  61 796 228 531 188 432 787 774  37 259
 435 668 822 821 449 395 270 737 279 488 829 176 815 434 293 144  64 652 408  15 260 608 511   3 595  22 200 813 446 863
 153 515 766 834 194 115 198 439 801 133 132 864 722 359 487 781 871 436 234 427 535  47 632 206 559 241  34 832 797 171
 760 889 442 634 223 467 430 767 162 283 636 312 526 183 263 332 660 297  53  92 414 174 648 748 235 763 647 686 392 397
 570 182 475 225 893 785 853 249 337  74 667 454 684  87 726  58 429 390  81 510  80 883  73 501 720 678 530  86 702 533
 117  85 389 290 447 823 713 721 374 346 802 747 335 840 354 196 366 203 641 306 319 717 266 666 493 358 540 287 331 443
 890 282 181 896 888 625 165 696 644 226  83 514  42 166 843 240 894  79 662 520 220 633 690 247 786  72 769 202 173 187
 257 127  11 768 463  33 790 160 619 548 242 164 417 451 585 482 149 387 845 734 724 333  19 835  54 670 545 825 687 591
 311 483 318 473 267 881 575 122 193 626 157 291 420 621 334 588 472 497 471 794 824 345 758 598 499 415 243 113  69 757
 688  10 655 103 857 491 315 145 789 224 607 142 278 806 106 561 348 870 172 658 833 221 179 749 592 458 509 138 339 672
 518 869 582 542 730 140 343 351 569 300 528 576 405 500 167 277 114 558 556 553 120  88 481 876 584 156  62 302 793 875
 544 900  38 711 762  48 836 169 732 527 253  63 524 884  27 874 180 516 217 371 753 609  43 104 604 804 361  71 618 372
 205 728 314 525 264 872 308 412  66  97 444 805 620 480 645 742 129 578 827  46 885  23 560 552 873 317 295 495 324  84
 141 147 426 404 320 201  52 761 399 738 718 150 788 778 448 504 596 271 605 877 498 698 466  31 484 455  21 478 629 431
 679 744 130 534 406 219 367 612 307 695 603 699 212   2 653 403 849  16 139 238 589 336 239 506 207 616 719 891 126 779
 152 437 456 146 423 799 513  18 630 292 210 445 301 338 816  51 743 803 441 148 780 521 413 422  60 701 522 795 593 546
 428  90 325 347 615 489 380 651 340 716 492 353 360 262 739 409 485 350 376 650 847   4 168 637 831 846 108 469 373 375
 599 657 256 184 812 566 237 819 457 100 882 416 186 303 369 294 154 709 289 281 398 705 714 222 370  65 782 341 854 494
 305 860 227 391 549 639 298 754 674 597 344 638  70 740 529 539 258 661 322 357 356  89 394 328 610 551 897 246 216  76
 523 459 745 727 464  25 323 316 119 683 759 814 479 848 886 710 124 577 254 468 284 841 378 410 261 214 233 273 109 209
 654 627 465 215  82 218   1 230  56 723 867 248 502 505 175 580 746 850 557 640 170 899 550 810 383 105 128 384 671 474
 191 327 838 309 382 776 635  20 102  26 208   5 828  45 204 879 362 364 741 866 614 685 272 642 574 586 313 682 751 288
 664 137 681 285 555 704 197 537 735 601 329 691 195 623 606 421 565 752 470 649 199  50 842 211 276 244 543  30 342 381
 107 611 365 583 386 118 541 554 764 855 158 791 450 310 856 349 807 255   9 251 646 112 798  78 151 811 507 538 190 564
  13 731 677  91 486 123 729 733 880  99 736 269 809 673 326 700 231 818 772 830 178  17 462 131 189 110 134 517 771 280
 496  28 750 689 111  14 424 101 579 775 321 669 229   7  95 665 852  67 143 388 656 820 706 393 563 715 865 411 858 125
 452 703 250 868 155 590 878 663 770 440 159 503  59 275 116 177 185 161 418 783 377 477 707 252 433 330 784  39 613 898
 837  68  40  57 296 712 622 453  75 862 692 460 680 675 419 600 396  49 887   6  35 617 800 697 568 407 304 892  41 268
 839 299 571  12  24 402 708 286 602 379  93 265  94 512 536 519 694 725 476  29 508 594 355 562 765 792 643 631 232 368

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.54343e+07us (= 25434.3ms, 25.4343s)
Wall-clock time (full program): 2.54669e+07us (= 25466.9ms, 25.4669s)
Satisfaction error: 0
Number of search iterations: 10689
Number of local moves: 8646 (including on plateau: 8586)
Number of local minimum: 120 (including on plateau: 1099)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 894  70 718 384 436 625 884 652 270 256 766  29 562  92 517 888 112  73   7 161 900 577 758 420 344 704 323  76 527 490
 150  40 763 209 470 828 813  86 640  56 174 620 290 619 299 446 864 897 456 327 715 383  69 202 794 773 863 258  64 347
 307 875 832 500 236 371 285 547 405 538 669 357 442 857 103 531 171 690 687 423 455   4 123 507 539 240 524 702  52 543
 784 105 312 810 841 244 238 454 377 796  15 799 860 749 246 298  39 597 401 654 354 821 148  30 510 573  62 861 245 292
 731 584 214 626 598 374 463 762 560 774 353 443 228 653 622 193 122 792 318 656  90  37 382 587 501 508 315 708  10 311
 211 575 642  20 617 479 115 198   1 102 812 785 623 328 869 434 196 192 740 726 803 583 320 322 602 600 451  53 591 525
 899 787 866 173 264 431 892 458 142 891 818 329 199 745 712 218 520 369 131 276  58  47 846 783 533 604  42 397  66  19
 243  95 651 859 580 472 204 415 855 871 439 277 771 795 696 606 135  60  99 389  26 608 163 444 711 452 410 321 313 555
 837 212 271  67 478 453 457 234 671 658 136 496 390 294 460 350 514 349 848 368 411 552 210 381 777 557 595 413 739 337
 365 227  21 725 303 820 468 279 316  80 845  49 768 429 665 187 108 844 743 179 882 898 132 280 440   2 636 801 638 385
 554 380 421 558 753 809 219 574 241 396 275 893 151 356 388 317 291 190 402 545 616 494 343 506 613 153  11 646 786 634
 203 336 564  36 404  50 629 260 137 565 265 550 492 588 592 461 738 789 183 325 858 876 607 614  65 513 534 302 162 817
 466 392 376 854 530 593 722 418 223 632 633 659 467 427 746 363 251 661 688 635 361 751  72 261  12 197  96 267 754   8
 697 840 172 744 757 742 229 333 847 425 239 568 207  82  75 772 473 480  27 215 761  61 827 250 495 386 610 509 603  89
 493  91 482 499  57 668 843 159 432 504 700 205 807 141 184 412 570 505 561 676 563 422 689  63 484 188 284 569 779 485
 734  14 220 709 217 503 477 644 675 221 674  81 670  33 360 448 621 274 601 195 764 189 707 693 579 678 811 393 224 106
 475 695  97 301 862 853 340 127 288 582 213 581 295 526 609 516 883 788 824  44 831 441 399 139 140 186 272  45 890 273
 289 266 839  34 359 769 549 486 165 435 138  35 395 164 324 836 778 180 528 286 535 759 719 469 728  84 770 154 765 677
 730 287 815  74 856 168  38 870 816 119 338 833  78 407 268 305 741 750 352 852   5 182 497 331 117  24 755 723 628 556
 650 692 114 483 310 144 278 733 208   6 134 177 370 851 641 664 615 877 200 878 433 536  94 519 101 304 300 667 655 881
 351 464 798 146  23  48 330 309 540 409 566 657 714 611 367 372 685 589 553 345  18 729 895 170 571 756 378 342 314 465
  79 542 559 462 637 850 790 391 618 428  25 760 406 502 111 572 747 125 375 737 262 191 645 293 387 296 887 334 319 185
 643 373 449 886 147 155 121 447 681 834 830 158 776 705 232 546 206 348 176 216  59  43 247 594 694 450 716 732 379 672
 649 819 586 590 145 673 109 339 126 797 498 802 748  68 254  51 167 252 512 430 523 160 627 666 281 889 116 178 631 829
 194 823 259 394 532 166 873 679 805 130 332 408 647  13 529 226 838  93 235 605 248 835 341 775   9 231 639 398 548 710
   3 445 282 400 698 133 713 471 782 308 346 682 684 874  32 842 230 225 585 703 100 297 596 699  54 518 416 814 124 459
 113 735 129 680 727 107 417 522 143 237 683 269 128  77 515 578  17 222 806  16 808 885 752 867 474 720 257 487 780 364
 326 872 156 242  31 476  55 662 706 181 537 424 118 481 660  46 868 663 437 521 366 249 599  88 414 691 306 849 724 767
  87 544 419 426  71 149 701 896 804 717 511  98  28 255 791 880 403 152 865 879 169  83 686 826 825 438 355 233 120 104
 358 335 488 624 576 362 263 110  41 567 551 491 201 793 648 157 612 489 175 253 541 822  22 736 721 800 781 283  85 630

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.91095e+07us (= 29109.5ms, 29.1095s)
Wall-clock time (full program): 2.91426e+07us (= 29142.6ms, 29.1426s)
Satisfaction error: 0
Number of search iterations: 12777
Number of local moves: 9348 (including on plateau: 9226)
Number of local minimum: 265 (including on plateau: 1145)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 598 473 610 661 272 787 350 290 115 889 834 837 152 108  10 113 650 434  63 463 692 749 544 536 390 604  75  64 252 900
 774  11 190 243 241 767 457 549  72 133 274 646 684 119 230 827 192 717 721 744  22 186 790 864 376 840 321 776 541 208
 311  65 183 626  51 207 898 815 266   7 151 584 408 585 481 601 511 847 179 251 762 803  84 538  96 800 829 745 754  77
 608 818 757 244 111 554 632   8 327 640 188 813 894 358 104 693 838 171 487 157 607 525 415 444 557 185 850  93 215 222
 273 527 446 597 694 306 296 474 337 863 126 228  92 596 570 793 382  37 713 755 346 675 588 679  50 695 642 220 424  91
 516 292 313 254 657 852 817 137 110 482 631 614 488 233 830 706 212 458 307  45 856 140 305 700 629 761  38 310 799  23
 271 741 621 413 739  31 582  49 802  60 117 123 683 839 438  87 275 267 480 806  36 893 176 851 283 777 728 460 309 578
 765 416 882 312 249 510 121 577 844  82 429 795 580 106 141 449 159 258 860 508 725 187 643 164 865  46 507 624 418 293
 181 594 175 688 543 435 154 287 547 890 696 214 479 537  44 704 729 333  34 589 805 428 389  26 260 785 484 616 464 405
 747 135 879 331 280 635 239 809 357 773  81 786 470 719 367 142  16 671 178 103  98 658 885 612 505  66 667 708 109 489
 101  55 794 743 846 231 832 871 139  48 592 250 102 430 545 530 676 314 364 593 682 756   1 652 768 138 670 535 217  40
 534 734 125  13 259 174  61 644 320 858 703 196 727 564  78   3 503 791 758 195 347 575 517 497 234 784 261 783 690 587
 855 662 825 329 134 225 551 781 702 562 861  68  39 533 753 609  42 167  67 867 291 301 191 447  97 130 298 797 451 880
 385   4 529 493 450 445 512 736 553 422 466 399 519 558 491 128 467 586 319 523 384 371 628 441 486 476 218 606 472 448
 546 386 500 821 462 211 563 360 664 286  54 720 816 158 574 245 637 567 653 237 219  70 263 177 732 359 605 425 518 687
 375 246 468 414 465 410 811 515 522 735 722 556 666 316 289 105 256 845 391 600 602 265 426 278 336 647 163 483 107 501
 615  35 513 452 760 431 689 295 686 398 796 204 892 454 145 224 388 778 397 112 149 419 437 335 326 277 828 877 442 161
 342 724 262 173 532  24 238 826 792 663 779 495 372 370 812 165 153 595 853 526 393 223  74 618 857 255 619 387 264 129
 368 888 247 699  30 345 407 366 548 571 738 302 339 349 378 656 340 707 268 284 539 566 789 443 355 363 351  95 876 308
 814 257 648 242 520 638 759  18 325 299 432 874  25 143 633 459 780 184 471 197 674 396 775 881  90 665  43 455 412 406
 436 613 383 831  83 540 498 599 849 394 461 172 581 848 343 502 808 485  33 392 731 654  58 404 356 229 453   5  62 712
 131 715 691 565 611 440 636 201 285 317  32 669 673 841 200 555 742 148 895 182 573  20 180  57 875 381  69 506 490 835
 365 560 677 878 373 395 216 843 854   2 354  99 374 842 726 282  80 334 750 300  53 315  85 716 576 362 645 210 872 377
 766 714 866 478 899 630 100 531 120 509 568 122 380 836 620 338 194 116 203 887 499  47 733 288 697 427 328 303  12 304
 823 144  52 659 348  59 771 627 769 625 746 323 660 155 617 198 409 168 634 114 496 801 641 294 723  17 136 439 297 770
  19 550 235 132 524 583  86 127 819 494 456 402 822 521 332 701 330 639 236 226 504 710 492 685  94 668 678 681 542 227
 401 884 248 353 579 705 341 156 269 276  56 253 160 552 752 680 561 124 166 870 833 423 421  29 740  27 772 873 420 591
 170 788 146 590 820 730 206 189  28 199 403 655  76   9 869 649 883 433 748 400  15 868 417  14 569 603 209 232 886 711
 352 279 162  79 361 318  41 764 344 240   6 737 169 322 862 896 891 623 477 782 213 221 709 698  21 824 559  89 672 804
  73 205  88 202 622 897 651  71 150 798 763 379 193 514 281 475 411 718 810 807 369 270 859 147 572 324 469 118 528 751

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.24888e+07us (= 22488.8ms, 22.4888s)
Wall-clock time (full program): 2.25219e+07us (= 22521.9ms, 22.5219s)
Satisfaction error: 0
Number of search iterations: 9519
Number of local moves: 7798 (including on plateau: 7738)
Number of local minimum: 86 (including on plateau: 899)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 507 504 576 314 826 450 456 771 312 593 197 597   4  72 272 642 252 652 562 575 680 701 603 309 136 322 672 499 199 260
 510  13 555 760 407  11 250 825  60  78 659 888 892 384 564 759 183  65  84 385 528 550 462 793 411 634 216 519 693 377
 845 308 419 342 181 560 852 710 311  91 640 625 776 530 773 594 221   8  36 131 769 129 352 144 466 811 123 195 837 736
 778 427  50 794 423 645 895  87 763 370 185 861 357 653 354  82 439 102 320 209 815 590 175 396 285 554 189  85 804 828
 732 340 787  81 792 139  35 471 363  64  10 683 691 858 882 182 681 243 890 476 410 302 480 541 198 881  52 345  55 851
 211 138 730 114  96 718 397 281 124 848  38 767 147 673 282 201 386 686 752 814 809 709 548 271 842 621 214 854 127 117
 540 796 570 368 725 891 665 589 224 116 601 369  34  95 749 294 563 146 641 632  46  73 391 359  79 821 707 900 297 234
 600 824 192 248 656 663 288 668 894 251 569 498 511  99 171 700 610 750 296 622 404 860 149  76 245  62 145 703 133 628
  63 157 670 222 247   5 413 559 867 362 643 849 164 644 299 694 546 394 744 388 885 847 508 158 697 324 619 374  53 120
 866 629 617 585 202 275 122 650 637 598 382 105 433 539 624 180 678 438 516 536 107 543  57 533 292 623 403 338 398 609
 266 188 119 453 572 383 535 193 371 786 599 557 577 648 452 490 346 194 630 280 525 574 134 711 365 580 578 265 306 838
 582   3 179 671 361 791 679 393  30 614 409 583 378 406 412 108  51 855 857 651 401 244 755 586 153 236 733 591 321 482
 343 485  24 897 509 674 646 166 839 695 698 330 237 872 334   1 184  21 808 416  15 160 205 777 477 376 724 151 764 687
  25 844 522  67  59 279  83 889 501 434 470 168  68 475 493  22 658 684 270 542 746 379 813 431 766 708 770 803  17 529
 310 584 429 465 461 870 489 521 458 455 506  20 677 442 524 448 467 422 515 479 443 447 841 436  26 444 446 132 298 460
 425 301 728 287 172 155 682 229 101 690 834 347 350 143 269 561 267 779 790 853 162 254 367 830 567 846 631 121 408 366
 219 869  66 742 607 344 208  49 305 491 537 300 276 737 432 360 873 781 137 702  47  70 734 657 649  32 242 660 704 685
  19 757 235 486 517 415 868 596 871   7 150 587 758  23 218 213 381 395 339   2 103 899 832 551 789 210 893 780 573  48
 240 716 884 231 268 720 154 512 783 118 472 464 274 262 513 373 833 667 348 745 840 230 441  16  44  80 380 878 802 227
 662 241 859 319 445 505 654 414   9 823 220 751 420  43 822 289 817 323 661 336 304 454 534  18 566 723 307 239 399 358
 364  69 898 552 874 835 290 449 212 315 317 177 618 255 261 638 111 104  45 163 474 335 785 831 762 739 527 128 605 782
 795 318 264 820 719 800 741 426 169 565 636 253 819 497  89 556 246 532  27 283  31 238 604 484 418 125 738 492 818  12
 705 333 257 712 713 170 206 469 278 883 435 375 140 784 627 392 761 816 316  14 714  75 190 286 715 478  88 748 256 579
  71 167 351  29 581 263 606 788 799 538 159 191 843 161 547 856 152 772 115 689 626 863 727 178 518 109 520 740 156 400
 633 615 349 502 233 135 495 113 110 204 639 277 225  37 608 765 595 875 463 797 295 481 389 655 200 488 428 249 798 862
 487 457 503 635  61 483 173 130 666 805 664 459 500 756 112 165 735 421 228 372 387 880 223 865 496 142 743 437 440  90
 326 329 531 836 864 417 203 721 602  74 293 405 186 688 196 879  93 424 141 356 545 747 106 215 827  56 675 676 887 217
 232 731 390 313  42 353 612 327 568 549 331 494 611 886 829 717 468 174 620 876 284 402  77 722 126 341 303  58 754 325
 430 571 613 616   6 526  92 332 592 291 553 328 850 100 768 544 226 706 558  94 647  28 774 588 523 812 176  41 355 775
 729 801 148  54 896  40 726 187 696 807 669 207 699 753  39 810 692  86 806  97 473 451 259  98 877 337 273 514 258  33

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.19448e+07us (= 21944.8ms, 21.9448s)
Wall-clock time (full program): 2.19781e+07us (= 21978.1ms, 21.9781s)
Satisfaction error: 0
Number of search iterations: 9050
Number of local moves: 7348 (including on plateau: 7288)
Number of local minimum: 91 (including on plateau: 908)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
   6  50 343 889 708 897 873 482 319 853 210 106 532 819 390 531 805  10 179 719 189 798  41 514 638 158 551 492 163 250
 621 867  58 876 806 139 174  31 706 218 227 593 339 114 124 712 140 592 602 732 868 167 405 814 555  68 193 858 279 637
  99 107 799 467 411 127 333 865  14  26 181 736 410 804 102 783 834 461 373 704 364 299 548 854 409 524 848 881 118  34
 141 778 431 840  71 223 680 757 558  92 654 542 734 233 236  18  20 684 526 820 496 162 652 540 260 660 829 371 397 110
  29 751 564 658 843 869 849 135 231 501 292 262  88 342  89 715 437  42 579 900 147 406 520 644 844  48 261 609 270 590
 113 807 832 797 699 648 580 729 164 831 154 251 671  54 646 133 565 823 479 195 306  12 101 875 267 675 366  62 472 208
 478 740 344 685  43  52 639 744 217 503 763 323  78 789 716  57 362 143 885 726 301 824 842 125 132 613  64 553 499 275
 171 283  94 676 153 606 145 709 399 510 536 635 631 749 747 335 355 440 822 200  27 377  49 546 571 852  32 554 788 523
 320 534 730 643  70 645 720 379 615 544 185  83 642  59 679 329 212 156 661   5 166 894 802 830 287 821  33 398 232 841
 871  85 316 144 476 573 697 225 268 641 659 404 815 633 395 396 330  36 710 248 796 129 280 389 272 731 725 770 175 326
 700 100 743  82 860 186 771 266 828 818 568 420 169 170  25 614 214 516 259 112 480 782 119 168 861 755 543 512 738 136
 165 630 338  39  63 199 385 184 866 289 780 596 626 446 161 515 714 209 578 264 794 116 792 190 229 833 489 786 874 365
 775 582 620 566 465 664 108 298 151 895 723 632 530 273 421 197 221 295 663 597  21 816  16 707 483 220 130 294 761 391
 460 490 556 449 508 561 493 454 567 537 511  79 439 448 559 249 595 517 188 473 538 545 504 430 228 547 459 462 422 247
 159 687 240 358 146 681 152 872 650 246 628 686 768 312 464 692  65 288 456 586 509 522 447  75 226 525 800 529 649  97
 486 485 450 444 477 408 407 470 388 383 426 415 360 498 401 611 469 436 412 502 417 432 666 487 419 403 380 518 384 481
 629 474 754 219 443 418  17 576  38 149 739 653 337 601 864 111 416 378 253 750 624 604 887 372 310  69   7 183 859 781
 196 795 657 345 302 178 741 608 387 207 381 893 284 856 150  46 703 317 809 769  51 204 254 672 878  55 746 382  60 589
 513 356 304 303 458 392 318 363 290 263 500 109 237 577 349 870 721 810 297 361 651 541 336 194 375 286 886 347 662 846
 695 137 242  91 435 587 693 122  56 560  40 332 817 138 640 434 433 617   2 309 673 790  11 271 898 584 619 713 765 811
 883 599  35  86 438 607 291 428 527 300 836 354 121 838 862 618 735 340 827 241 256 748  15 314  28 837 334  67 445 505
 627 491 239 352 670 468 570 296 855 357  90 346 475 148 307 235 402 277 274 557 678 424 688 667 665 521 634 441  93 668
 787 176 882 192 173 386 825 574 160 752  53 442 801 370 785 206 104 745 575 891 103 313 131 766 793 216 594  72 393 255
 519  74 123 245 711  98 376  84 724  87 774 535 471 157 656 857  47 276 281 427 727 851 351 142 847 655 762 552 243 863
 322 583 324 495 549 896 257  61 850  13 572 311 350 835 308 705 728 899  95   3 808 773 777 348  96 563 205 222 369 198
  66 191 764 155 888 528 105 331 791 494 201 718 134 733 484 429 845 647 767 269 506 258 265 813  44  81 598 215 585 610
 689 623 772 737 202 539 368 784 622 367 172 603  45 451 839 315 533 694 126  77 625   8 890  22 452 722 282 117 425 414
 779 753  73 591 400 177  30 691 230 698 884  80 211 457 696 374 321 756   1 497 325 327 677 120 702 359 203 879 466 758
 803 278 760 636 305   4 244 669 463 776 423 826 717  23 238 616 701 234 224 187 562 180 880 285 453  19 690 600  37 682
 413   9 128 455 742 759 674 328 581 605 353 550 683 588 182 812 488 877 612 394 507 213 569 341 293 115 252  76 892  24

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.91722e+07us (= 29172.2ms, 29.1722s)
Wall-clock time (full program): 2.92052e+07us (= 29205.2ms, 29.2052s)
Satisfaction error: 0
Number of search iterations: 12434
Number of local moves: 10231 (including on plateau: 10171)
Number of local minimum: 92 (including on plateau: 1214)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 711   4  33  68  81 522 809 874   3 111  78 596  19 854 710 661 744 751 476 739  98 188 385 104 431 789 524 664 616 872
 757 879 410 503 727 442  26 302 759 192  96 774 292  74  92 748 675  91  60 159  40 654 680 792  94 151 846 776 831 593
 365 435 829 466  23 485 858 426 201 440 421 433 210 611  59 842 884 143 156 707 618 534 297 716 402 263 472 826  58 335
  97 304 447 811 203 818  76 750 333 719 519 505 760 351 495 686 439 287  21 375 167 571  66 726 324 242 800 162 705 756
 348 700 729 487 427 254 658 228 119 474 741 270 383 765 550 861 128 106 243 221 701 144 772 767 648 708 486 109 309 179
  67 291 187 206 694 736  45 636 851 306 643 310 562 342 713  87 108 521 196   9 747 575 867 496 715 838 261 326 332 848
 282 667 862  70 268 720 479 597 352 373 436 422 438 227  79 380 198 577 684 160 142 434 420 678 171 824 401 797 681 696
 391 267 173 318 833 130  29 660 810 801 761 830  47 525 319 293   7 602 250 627  22 709 662 499 819 615 513 224 174 605
 222 234 598 414 117 255  30 529 586  85 153 653 672 308 631 621 456 578 622  35 875 620  84 552 208 693 742 625 691 626
 320 828 452 448 449 307 299 569 687 612  54 769 357 149 325 178  34 883 690 619 489 886 640 278 530  13 706 413 386 145
  82 806 500 580 656 695 312  73  38 343 583 822 137 235 182  48 812 724 796 604 531 323 314 663 387 632 392 493 164 588
 637 788  27  71 859  41 364 587 102 366 558 548 802 290 773  99 540  95 581 216 555 163 544 147 702 877 642 641 685 215
 231 220 718 537 674 836  52 791 441 870 608 497 344 175 635 469 347 508 122 184 281 677 644 406 337 286  93  10 764 758
  57 408 225 783 893 609 743   1  61  20 482 676 655 897 112  44 465 834 878 840 882 177 139 755 118 266 135 131 559 670
 501 498 515 419 471 504 603 460 470 532 445 483 423 463 417 432 488 459 388 409 492 454 275 455 458 190 464 424 446 477
 782 311 494 461 584 682 600 425 430 467 526 116 412 251 399 896 777 384 377 394 368 298 107 115 816 722 199 328 271 523
 191 894 638 246 475 490 453 891 150 714 359  62 336 382 148 327 393 397 753 411  14 416 697 371 238 514 863 679 634 379
 369  75 590 404 403 407 400  31 346 358 793 353 305 512 428 381 345 313 322 787 354 367 629 668 628 341 396 683 733 794
 543 768 731 166 614  24 567 329 835 123 574 374 728 651 868 781 295 330 372 340 754 181 804 158  50 623 316 248 136 232
 572 331   2 665 799 699 780 200 599 161 301 285 645 808 355 873 795 257 444 303  46  28 545  42 579 698 321 763  12 607
 745 561 594 898 202 317 762 817 798 289 837 197 146 114 853 633 871  69 127 518 551 820 103 185  80  55 105 126 869 273
 688 370 570 256 186 473 565 294 264 528 752   6 850 451 885 429 155 405 437 669 211 230 857 443 457 450  53 630 395 556
 649 249 378 880 189 899 169 226 895 141 703 277 890 725  65 244 746 647 823 121 398 511 168 284 589  89 803 204 219 334
 844 659 217 832 502  83 212 778 180 892  32 560 229 576 888 478 280 827 849 241 650 110 213 240 671 260 209 549 300 154
 860 481 813 152 516 193 740 138 539 601  51 218 265 245 821 349 252 779 338 876 856 841 462 418 125 815 557  11  63 140
 723  56 390 276 172  88 491 279 223 262 673  16 568 889 207 536 610 732 533 887 527 554 786 237 566 183 666 839 507  39
 350 546 547 132 283 613 517  36 805 592 239  15 843 717 120 510 101 170 624 766 595 582 721   5 852 538  90 360 542 704
 573 133  37 900 296 790 730 689 541 606 214 881 564 100 339 253 315 657 775 784  64 361 272 864 258 124 646  72 591  86
 509 389 274 807 356 269 376 734 362 845 865 855 520 176 233 247 771 195 553   8 738 468 205 866 415 480  77 617  17 288
  49 363 535 259 563 134 770 165 735 692  18 712 113 652 814 129 484 194  25 506 749 639 157 585 847 236 737 785 825  43

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.2259e+07us (= 22259ms, 22.259s)
Wall-clock time (full program): 2.22923e+07us (= 22292.3ms, 22.2923s)
Satisfaction error: 0
Number of search iterations: 9310
Number of local moves: 7563 (including on plateau: 7503)
Number of local minimum: 94 (including on plateau: 951)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 584 821  39  91 149 234 781 628 571 344 583 611 776 321 553 620 729 529 518 868 104 731 253 314  97 384 111 354 606 211
 204 739 201 624 437 188  36 693 769 819  88 870  69 678 625 882  29 214  73 342 274 313 487 885 833 417 533 735 297 161
 353 145 877  52 488 425 167 893 243 469 411 556 386 435 715 251 325 829 373 128 652 307  31 121 710 632 548 336 873 784
 895 481 139 806 613 777 802 535 719   7 607 290 537 210 151 847 101 880  92 249 326 793  56 574 648 258 520 225 306  71
 572 299 370 291 272 206 296 130 740 237 440 228 865 636 324 756 428  66 816 460 851 514 129 676 376 169 397 828 586 557
 565 470 467  67 618 393 696 248 109 890 338 374 805 235 869 219 732 197 438  26 714 797  72 196 309 489 293 612 505 772
 329  84 812 621 164 279 722 328 415  17 609  12 146 303 320 832 686 534 738 813 257 698 523 702 138 790 528 103 681 331
 672 405 888 265 682 362 785 543 212 333 398 143  76 443 216 364 132  16 462 800 301 260 442 685 782 711 448 718  85 886
 554 843  33   5 283 576 432 827 401  24 315 420 122 856 224 741 494 850 810 703 712  49 517 343 262  57 864 783 406   9
  68 341  22 591 626 726 780 375  83 378 348 434 842 581 644 347 530 152 690  48 834  38 837 539 463 105 213 369 849 662
 498 385 830 589 284 665 725  53  14 558 194 697 542 803  50 664 452 516 844 323  98 312 770 423 332 536  82 241 268 767
  43 266 786 619 687  70 646 208 254 840 547 465 153  30 289 217 854 874 663  27 706 478 541  10 562 118 276 845 595 846
 464 162 867 316 367 185 853 141 203 635 318 140 531 179 859 131 795 540 337 453 184 598 564 506 713 615 447 458 238 716
 177  58 747 468 779 372 352  61 891  87 825 798 349 502 659 123 524 142 496 379  45 519 892 588 220  55 899 527 159 822
  35 444 689 259 642 144 552 736 178 271 750  46 310 450 110 176 163 760 357 763 640 222 497 881 733 649 814 482 730  32
 431 454 120 660 439 125 512 655 400 136 304 835  15 300 570 748 232 807 172 209 787 277 701 668 195 402 483 308 704 866
 863 608 199 223 754 426 124 593 717 826  40 592 351  77 705 759 346 409 391 388 568 424 699 108 381 445 154 623 147 575
 449 107 894 407 602 158  44 399 157 485 538 801 852  47  18 165 267 645 684 709 287 126 355 815 503 368 233 831 878 691
 883 499 862 244 302 796  89 480 746 855 102 422 427 510 875 472 590 298 137 335 753 311 674 361 174 377   3 486 371  81
 171 515 252 860 604 876 166 603 475 334 755 526 567 871 897 187 270 430 345   2 479  86  34 269 551 239 560 857 189 545
 669 751 639 773 617  54 246 218 673 484 651 191 771 578  20 788 455 585  96 643 242 205 182 566 156 616 633 473 150 390
 858 889 383 641 408 278 173 358  78 394 236 768 677  93 761 504 491 382 631 650 190 774 471 387 436 720 240  79 285 280
 106 707  13 692 356 521 477 457 207 112 596 461  94 658 836 116  99 230 671 841 804 360 657 820 544 600 403 637 389  51
 749 413  28 414 281 634 680 745 501 661 723 330 198 757 181  75 365 794 654 221 546 599 647 155 392 610 838  80  42 202
 114 419 695 340 500 809 322 525 295 115 742 887 429 148  65 627 724 493 679 421 653 765 605 317   1 100 601 263 744 117
 327  21  23 395 532 694 817 638 507 764  95 466 818 363 350 245 775 193  63 522 380 614 247 766 667 752 762 250 183 286
 884 728 490 186   4 192 319 587 872 848 339  90 811 666 513  59 727  25 133 743 474 579 396  41 737 359 294 170 688 561
 119   6 580 898 456 824  74   8 622 808 412 215 255 495 791 569 256 670 492 861 135  64 511 231 416 789 180 508 721 549
 597 656 160 700 264 896 292 404 900 275 629 734 168 839 288 273 261 229 433 577 459 823 175 441 476 559 792 134  62  19
 282 799 410 418 305 630 555 446 563 509 582 113 573 451  37 758 683 226 227  11  60 879 550 127 708 594 366 200 778 675

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.81246e+07us (= 48124.6ms, 48.1246s)
Wall-clock time (full program): 4.81577e+07us (= 48157.7ms, 48.1577s)
Satisfaction error: 0
Number of search iterations: 24898
Number of local moves: 17123 (including on plateau: 16942)
Number of local minimum: 693 (including on plateau: 2003)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 478 375 164 590 710 423 630  61 649 119 766 886 669 287 507 881 408   3 333 625  89 240  91 555  75 474 113 554 860
 155 857 761 872 194 844 161 786  49 832 681 541 789  27 712  52 202 542 459 532  57 267  53 604 412 757 658 132 383 144
  94 631 575 400 186 553 292 622 215 360 722 521 732  83 689 169 781 175 647 861 816 453  55 140 533 231 328 780 187 684
 224 248 548 262 207 249 115 493 271 748 556 708 563 754 855 158 465  64 244 788 241 794 522 439  90 552 589 720 671 377
 619  51 519 849 693 694  15 783  67 159 141 736 482 813 642 266 539 593 480 276 679 568   5 717 497 219 403 243 366 401
  80 228 295  34 363 764 811 446 208 405 656  76 166 430 862 620 125 667 138 675 805  45 510 871 729  39 713 734 385 635
 565 427 426 173 746 252 737 866 176 259 151 851 269 189 846 347 290 883 603 705  60 802 795 337  66 184  21 756 227 506
 828 562 467  46 591 454 895 670 661  10 301 698 743  43 156 707  18 531 317 654 560 567 598 307 373  48 803 615 104 188
 763 573 742 644 380 327 741  71 296 683 396 100 605 364  35  50 128 421 220 444 744 384 199 726 826 696 352 344 640 621
 335 709 559  86  13 392 216 483 773 660 771 406 393 177 395 804 759 765 407 289 628 570 358 136  22 655 131 778 514 331
 714 308 704 491 179  63 600 584 602 204 577 284 210 353 424 578 731 657 581 616 275  81 733  95 706 325 599 580 637  24
 260 489 365 758 254 263 852 192 716 702 582 576  33 715 108 596 618 345 160 185 143  37 492 551 730 641 537  14 792 809
  19 386 512 513 545 496 205 894 508 291 629   7 534 653 530 749 171 122 762  56 571  98 314 827 447 585 700 311 303 777
 854 511 120 251 588 797 466 170 265   6 469 236   1 504 112 462 666 840 775 819 882 133 835 464 558 494 471 234  59 473
 442 434  74 381 503 549 470 479 419 486 256 526 477 639 449 484 420 432 461 460 485 174 472 404 500 798 515 476 410 440
   9 725 101 371 518 574 690 242 676 118 428 457 152 195 800 456 502 796 198 225 516 892 745 313 206 417 297 873 609 414
 525 280  29 264 409 638 213 451 458 367 865 806 697 677 538 318 416 324 869 343 222 455 808 436 149 755 103 587  26 487
 351 776 517 887  41 870 438 830 505 233 387 247 322  32 557 218 448 388 663 399 286  58 134 652 283 379 413 831 536 834
 874  85 668 770 165 110 310 312  12 520 105 148 643 699 268 810 329 261 339 876 168 673 368 340 349 787 836 304 636 750
 370 107 481  70 390 499 674 150 867 376 753 172 632 279 305 739 897 688 281 282 597 211 633 272 608 277 342  92 747 724
 443 807 769 842 890 332 356 495 238 357 498 258 315 191 820  44 848  38 728 124 111  88 523 606 221 372 779 359 793 270
 651 278 752 167 767 463 527  40 425 569 540 117 217 109 214 662 415 429 546 468 142 839 572 475 273 875 613 543 147 680
 509 154 431 529 837  84  96 116 864 193  72 885  54 735 106 856 302 346  42 433 524 617 815 878 212 824 812 209 845 135
 785 650 190 200 294   8 452 612 740 579 355 180 300 822 411 378  62 646 139 232 853 843 703 196 799 490 235 245 879 237
 634  93  25 126 402 183 547 255 535 818 825 607 711 197  47 889 592 790 817 719 721 665 181  65 129 239 614 528 338 223
  97 898  31 686 682 201  68 687 829 858 369 847 130 341 121 544 501  78 627 611 435 838 203 685 595 323 362 418 157 293
 326 701 645 751 877 659 784 350  28  23 583 692 441 880 374 299 437 153 330  87 450 246 145   2 899 594 114 229 850 566
 723  99 127 626 102 774 319 422 586 768 182 610 841 561 718 354 389 772  82 782 672 695 320 274 564   4 226  16 306 601
 336 137 814 678 382 163 648 348 801 391 230 123 309 896 250 253 285 288 738 162 178 888 863 791 823 623 398 691  17  11
  30 833 893 624 727 550 394  36 664 891 316 334 868 488 884 146 298  73 859  79  69 445 321 821 361 257  77 760 397  20

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.31231e+07us (= 23123.1ms, 23.1231s)
Wall-clock time (full program): 2.31563e+07us (= 23156.3ms, 23.1563s)
Satisfaction error: 0
Number of search iterations: 9518
Number of local moves: 7350 (including on plateau: 7290)
Number of local minimum: 133 (including on plateau: 955)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 897 521 699 660 276  90 153 767 890 128 788 859 537 881 245 820 107  11 889 121 147 371 190 206 297 167 326 523  92 857
 319  71  34 898 370  98 630 262 756 836 114 358 740 665 826 693 254 579 414 595 106 871 596 485  35  40 290 654 835  91
 760 231 797 424 443 163 100 227 204  74 519 514 804 734 663 101 340 877 117 799 520 386 565 281 876 539 142 831 395  89
 842 322 171 511  44  94 131 196  96 802 610 251 853 150 306 294  27 350 811 656 885 456 824 796 481 217 782 562 374 621
 637  66 333 261 509 838 546 662  64 164 102 616 692 257 203 241 772 770 684 192 317  50 687 242  45 730 551 580 867 837
 315 542 293  22 422 199 817 271 856 280 725 302 138 478 351 346 272 415 828 789 330 393  16 749 723   4 883 872 174 710
 609 620 119 726 230 588 240  12 193 854 283 531 249 715 614 462 515  88  30 198 727 284 461 708 704 238 671 695 601 550
  78 365 590 136 810 655  54 677 158 583  76  77 643 134 308 338 627 746 268 341 636 721 651 151 805 403 390 768 832 494
 152 178 718 327 103 798 155 418 432   7 402 755 888 165 248 369 362 181 602 769 678 657 104 286 625 880 237 688 737 594
 389 696 861 343 582 311 265  47   5 314 892 685 324 500 584 109 528 472 246 321 633 516 449 738 830 524 188 219 216 728
  29 592 301 628 332 154 739 815 795 493 235 587 325 211 629 791  25 255 646 573 801 638 222 631 328  87 812 191 334 316
 137 197 313  83 843 530 891 845 209  42 659 706  82 733 703 201 143 285 544 694 848 160 354 750 649 233 720 846   3 112
 545 780 508 839 535 593 527 123 814 348 110 175 398 855  39 569 517 536 492 617 790 226 176  14 250 600 533 186 141 679
 622 397 442 382 647 645 183 437 698 146 868 803 482 116 329 234 475 200 495 568 538 612 751  26 266 292 417 405 416 623
 513 506 466 428 473 491 477 486 447 458 498 413 512 467 474 468 504 476 490 406 441 385 434  68 457 487 426 421 479 464
 438 465 429 483 445 425 497 455 436 459 469 470 435 460 407 697 480 419 410 444 451 488 439 463 404 409 430 440 408 360
 433 399 220 736 452 394 453 557 691 412 489 502 376 363 505 411  67 816 747 753  32 577 335 427 366 380 503 396 323 400
 752 827 383 664 213 336 787 570 554 446 821 896 368 282  69 120 289 149 274   9 387 658 529  46 307 661 852 353 608 305
 822 258  28 507 899 236 683  99  15 221 754  73 232 367 870 611 887 841 423 156   2 858 278 807 635 862 130 560 145 256
 547 252 210  70 709 879 581 849 833 652 605 157 779 648 850 722 626 639 742 448 127  38 291 572  48 179  31 352  18  61
 243 177 510 215 866 716 875 724  24 296 381 818 126 773 882 869  59 674 777 122 295 309 794  49 312 607 208  81 279 454
 731 670 676 606 214 125 169 384 244 525 578  60 349 829 778 735 729 559  36 548 719 599 207 682 586   8  33 124 668 344
 540 339 757 140  79 895 863 259 585 229 566 793 184  65  53 552 774 771  37 212 356 118 669 597 567 823 556  19 667 450
 218 700 894 632 187 300 267 761 168 744  72  10 194 574 205  85 361  51 650 884  84 378 713 575 813 686  62 743 741 763
 873 618 776 260  63 132 373 111 675 701 263 239 680  43 690 357 653 139 499 851 553 431 717 874  97 331 541 129 644 202
 304 840 844 864  86 180 359 195 781 320 144 809 624 345   6  55 825  75 173 800 518 613 558 377 555 337  52 303 765 808
 379 745 225 166 732 672 148 347 526 762 185 170  57 598 563 420 689 702  95 388 375 681 392 391 189 758 634 182 561 783
 275 133 115 496 642 471 571 532 806 886 253   1 589 277 792 878  41 299 372  17 228 484 522 847 355 784 711 786 247 105
  93 108 162 785 604 759 712 893 401 714 766 270  21 287  13 603 860 549 666 224 819  56 318 113 135 576 640 342 865 161
  23 900 641 223 705 748 269 534 159 619 288 615 834 543 310 364 707 591  58  20 172 501 273 564 775 673 764 264  80 298

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.23082e+07us (= 22308.2ms, 22.3082s)
Wall-clock time (full program): 2.23416e+07us (= 22341.6ms, 22.3416s)
Satisfaction error: 0
Number of search iterations: 9401
Number of local moves: 7759 (including on plateau: 7699)
Number of local minimum: 68 (including on plateau: 999)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 478 365 814 328 311  76 846 299 845 152  52 886 884 422 853 573 578 632 187 413 255 385 883  94 202  29 415 109 270 879
 462 607 550 330 138 349 265  66 451 139 745 634 153  41 269 568 743 445 223 661 713  75 425 756 530 490 765 857 704 361
 474 430 164 514 473 107 240 160 762 368 221 681 721 193 817 689  77 712 381 676 733 181 204 600 126 348 673 534 872 384
  97 246 360 335 532 464 798 796 396 684 776 835  48 346 343 198 438 118 439   5 236 799 469 447 820 683 280   8 667 852
 452 775 189 110 669 247 404 800 624  15 108 557 169 426 555 700 851 296  54 498 672  37 357 594 795 613 665 605 336 342
 650 885 897 701 406 148 887  88  33  28 388 206 437 344 894 528 499 159 864 688 619 121 526  93 297 457 271 421 302 678
 409 294 303 237 828 219  10 134 736 140 475 263 826 691 345 481 596   6 362 488 393 644 875  35 848 374 633 788 232 850
 180 819 760 547 480 755  44 680 142 707 341 614  57 124 565 321  78 805  71 554 183 579 369 581 325 562 329 347 878 718
 440 290 288 564 592 692 161 364 293 111 175 429 720 492 533 838 551  80 761 617 143 811 695 724 408 179 831  62 387 284
 655 546 145  27   2 744 750 653  86 572 783 322 227 825  73 370 312 260 752 184 479 668 575 738 809 191 849 764  59  95
 295 640 313 392 694  85  11 305 382 830 545 580 587  67 777 334 657 358   9 618 441 449 890 432 278 559  45 660 386 896
 251  58 621 717 629 353 679 261 603 858 241 870 411  13 210 218 877 693 740 628 177 671 272 377  18 208 195 806 320 540
 778 401 298 595 710 637 552 275 529 147 889 774 512 730 274  60 647  84 477  16 636 608 766 465 248 122 196  40 226 823
 758 151 150  39 610 623 199 729 238 456 735 398 802 414 843 666 391 350 168 881 803 229 224 598 254 277 537 366 243 383
 458 495 454 434 435  24  82 561 511 436 450 419  99 485 863 648 417 769 509 446 506 658 427 468 135 471 459 472 433 491
 307 114 420 466 714 476 214 674 483 807 638 416 685 567 601 522 117 423 137 772 119 880 494 116  22 308 496 517 785 225
 292 504 699 539 524 194 510 315  23  70 856  43 781 371 583 129 842 379 702 871 337 186 268 273 770 810 786 200 611  47
 394 359  17 612 677 166 635 821 584 521 128 898 861 245 643 242 173 233 535 215 566 675 768 102 163 174 697 501 818  92
 900 283 131 182 505 627 556 318 808 771 354 317 630 711  87 780  31 560 375  38 407  72 301 507 866 753 840 553 216  36
 132 859  74 597 649 829 412 626 489 418 484  46 757 543  12 503 306 105  21 351 527 258 203 789 493 682 747 461 363 779
 538 822 746 748 513 424 754 586 709 352 155 300 380 641  50   3 787 860 314 291 158 395  90 444 544 207 239 569  69 827
 593 103 606 470 120 642 604 397 176 257 376 516 323 837 127 589 410 782 873 222 235 582  61 784 448 146 639 500 869 228
  98 289 541 213 405 844 431 698 874 726  25 178 252 576 256 625  79 836 686 749 367 531 327 816 310 616 212 259 615  81
 790 727 542 813 523 234 266 172 737 197 791 833 253 156 190 508  56   7 590 170 687 654 100 319 793 865 201 696 378 267
  19 719 230 893 324 220 832 602  83 841 723 286  42 588 287  34 112 309 136 332 525 563 705 463 834 276 815 715 115 892
 339 304 570 205 123 767 652 577 585 725 133 519 548 340 739 558 460 824 812 165  51 106 326 728  26 453 486 162 899 333
 231 502 867 316  89 741 591 154 250 662 515  63 455 895 389 574 716 402 549 130 876 249 651 217 571 656   1 847 171 185
 536 482 443 734 192 862 742 400 690 331 631 285  96 141 264 888 428 855 497 209 609 751 101 104 149 854 144 167 839  91
 708   4 703 732 599 244  32 113  20 390 520 282  68 645 794 338 622 706 518 868 403 211 882 663 763 797  55 372 399  64
 801 442 620 125  49 722 356 891 373 804 262  65 731 646 279  30 664 467 773 759 659 487 281 188 670 355  14 157  53 792

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.63336e+07us (= 26333.6ms, 26.3336s)
Wall-clock time (full program): 2.63677e+07us (= 26367.7ms, 26.3677s)
Satisfaction error: 0
Number of search iterations: 11441
Number of local moves: 8164 (including on plateau: 8044)
Number of local minimum: 228 (including on plateau: 1028)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  22 499 225 626 761 717  12 233 317 619 847 473 712 776 135 159  99 682 807 345  73 113 753 169 115 724 281 696 690 835
 492 874 360 558 343 636 395 329 517 160 448 631 688 334 294 887  32  70 859 226 416 808 177 247 276 102 441 476 765 674
 521 793 846 418 770 384 137 687 603 852 129 895 158 112 349 267  72 530 304 221 543 404  83 850  34 194 227 823 707 602
 759 750 132 790 681 302 857 579 485 668 477 615  92 308 209 297  76 673 243 644 348 610  62 163 645   1 166 791 855 237
 214 118 518 125 778 886 467 669  86 427 562 116 684 785 423 350 771 635 110 754 816 331 685 336 157 752 359 222  69 310
 630 722   6 111 758 726 531 342 716 178 621 259 837 293 613 374 836 781   3 659 356 513  55 103 175 155 139 763 419 841
 193 764 899 174 250 235 723 822  59  93 786 461 232 283  67 665 554 439 651 498  52 606 582 697 662 352 720 479 253 264
 223 265 311 783 391 219 251 643 677  11 710 642  43 171 705 664 388 316 447  57 512 706 686 703 444 524 586 458 587 392
 398 538 184 787 368 516 833 190 680 200 729  95 344 327 877 802 134  36  16 528 154 629 216 471 745 769 440 299 898 312
 801  39 144 667 123  85 879 840 256 589 285 128 731 864 893 364 622 570 366  21 633 561 239 598 583 187  79 704 637  27
 234 457 756  18 675 330  89 709 206 555 595 263 863 119 346 519 257  87 332 568 495 197 575 566 834 438  60 867 657 848
 625 815 435 240 120 617 832  44  40 546 131 718 340 691 535  96 826 124 817 894 433 443 854  97 728 842 192 195 138 107
 417 872 733 557 393 101 641 211 511 394   2 670 282 634 553 266 362 536 804 421 559 576 358 628 167 218 300 450   8 891
 627 126 773 367 411 599 541 475 547 775 383  33 829 484  71  90 491  15 386 333 493 502 584 446 652 640 527  28 799 488
  88 156  35 782 150 660 862 569 452 179  29   9 481 574 465 280 254 550 876 466 740  80 827 220 744 585 760 844 768  30
 363  66 734 608 714 851 414 324 410  65 185 462 151 238 878  42 735 581 408 803 463 172 873 871  61 255 413 199 437 739
  64 501 624 373 514 109  13 882 406 794 672 828 533 429 397 268 453 897   7 249 203  24 425 296 565 607 856 678 838  10
 164 611 784 407 106  78 601 490 795 797 648 274 338 182 792 474 424 382 403 805 353 420 289 809  82 428 741 337 464  37
 692  98 869 369 278 762 798 183 215 590 301 325 122 676 821 788 401 402 320 456 639 885 725 305 341 860  84 188   5  17
 189 580 292 483 577 121 273 865 719 127 270 245 322 497 176  19 544 866 314 323 695 671 730 552 825 431 748 246 654 161
 522 252 542 261  53 380 767 526 592 459 426 632 375 813 658 262 277 365 133 525 260 800 708 357 482 683 810 307   4 284
 647 196  50 130 399 354  26 258 500 711 523 884 564 689  41 649 315 556 573 567 774 229 600 746 494 618 449 272 108 593
 571 191 442  48 616 638 146 231 136 694 372 742 831 409 548 737 504 861 248 743 405 230 165 623 700 141 812  81 381 269
 534 217 713 469 460 701 173 432 849 721 242 328 140 117 162 653 699 892 655 666 361 303 207 228 594 661 371 387  31 549
 757 379 412 870 796 287 400 168 496 646 715 698 335 563 396 693 480 149 545 507 186 596 415 309 213 355 478 319 210 142
 702 845 529 811 339 390 152  51 306 489 170  75 732  38 298 751 204 830 436 100 736 114 318 370 506 201 588 779 766 889
 572 505  74 208 605 290 858 486 198 612 508 820 244 853 279 291 503  49 814 824  20 727 181 591 468 614 470  45 286 520
 880 321  94 839 105 148 147 351 609 104  25 205 890 738 515 875 578  58 772 145 777 747 422 241 789 454 445  23 539 679
 560  77 180 434 551 883  47 389 755 224 843 604 347 472 487 620 806 288 326 153 749  63 212 780 378  68 597 663  91 868
  54 888 819 202 430 510 650 537 377 236 881 385 275  46 532 313 818 295 540  14 271 455 509 143  56 656 376 896 451 900

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.48588e+07us (= 44858.8ms, 44.8588s)
Wall-clock time (full program): 4.48921e+07us (= 44892.1ms, 44.8921s)
Satisfaction error: 0
Number of search iterations: 23221
Number of local moves: 18695 (including on plateau: 18635)
Number of local minimum: 262 (including on plateau: 2140)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 691 689 808 360 641  31 762 403 231 515 284 295   1 849 602 539 568  58 249  18 378 702 364 665 219 839 820 121 419 394
 160  22 862 250 101 715 575  84 482 347  39 809 832 189 663 877 886 302 410 271 883 228 326 115  23 707 771 784 545 257
 751 382 583 270 697 207 340 448 757 409 655  59 275 287 893 383 218 571 266 699 740 426 108 612 246 552 399 144 789 349
 720  10 354 649  74 137 767 698 660 790 351 544 202 386 344 150 878 664 731 396 261 876 672  47 843  29 164  70 298 750
 507 828 692 850  73  85 703 800 714 826 148 776 397 639 332 558 765  50 235 549 423  83 229 171 579  53  77 211 345 817
   9 674 626 511 504  14 163 405 451 146  60 586 739 212 517 437 611 810 387 435 645 248 263 374 591  93 873 635 900 596
 404 363 609 821 644 642 536 746 407 328 894  80 133 754  13 650 143 813  54 500   2 240 557 356 871 365 744 111 565 170
 442 339 587 117 881 280 879  32 822 713 864 126 535 281 598 498   4 888 629 313 306 277 831 338 449 238 530 299 168 251
 311 806 856 172 109 592 159 237 777 818 752 668 563 537 139 842 471 685  28 683  64 116 243 657  95 155 446 779 151 604
 845 637 253 678 221 722  87 358  98 431 300 242 621 631 473 509 781 169 141 432 749 359 494 255 278 764 670 560 176 581
 369 622 145 717 761 422 617 796 206  30  89 130 372 775 898  57 682 294 794 696 165 282 334 142 758 138 425 853  76 870
 236 469 355 466 315 710 395 891 210 866 314 847 291 793  92 367 274 361  78 814 177 564 173 807 512 297 700 899  19 223
 241 652 260 646 458 123 316 325 456 526 214 421 285 723 309 265 459  82 392 348 584 874 654 747 816 475 198 262 519 885
 625  42 158 131 791 495 798 890  71 224 797 323 638 516 662 846  56 107 892 353 321   7 127 792 188 778 149 493 760 485
 615 388  33 286 232 734 134 233 550 424 551 463 534 401 595 453 331 706 480 733 154 484 667 523 436 400 375 496 690 414
 428 724 267 497 540 867 178 562 376 324  41 859 125 192 438 479 577 269 462 555 802 194 844 377 728 444 434 676  90 166
 342 333 502 505 514 600 543 416 624 460 572 559 461 468 153 478 258 429 447 477 183  12 681 532 317 553 593 506 427 570
 704 708 362 390 310 467 268 834 174  94 840 209 452 755 501 119 296 811 628 858 711 601 541 863 226 135 120  55 227 256
 337 350 492  88 470 527 415 430 585 745 182 576 408   8 185 264 815 785 542 476 402 454 522 481 896 370 445 199 433 633
 259 161  27 114 574  24 688 156 669 472 529 618 782  43 499 623  69 490 803 732 102 795 819 184 366 599 709 588 830 191
 411 129 389 769 208 272 513 614 865 594 329 841 884 195 213 312 230 175 753 804  20 441  38 464 610 217 643 561 341 680
 887  37  96  63 603 647 384 695 640 128 823 735 373 304 508 780 718 225 162  79 605 566 693 385 124 589  48 489 443 686
  35 897 548 736 215 679 393 187 727 439 661 318 222 352  26  46 105 630 457  49 330 799 518 186 653 491 786 580 578 872
 100  67 712 305 569 651 293 524 104 848 450 110  45  99 827 292 851 656 636  61  44 889 180 336 801 857 521 483 533 671
 247 335 833 546 868 759 721 738 770 616 196 677   3 379 327 371 273 322 197 684 861  21  91 181 634 725 113 719 283  25
 666 582 824 343 768 737 486  40 201 573  34 320 741 474 730 627 465  72 279  65 837 190 531 620  17 716 276 122 788 391
 301 413 252 805 455 825 418 234  81  36 525 632 748 368 648 528 112  16 855 694 538 729 869 743 239 381 488 289 157 136
 787 763 398  66  11 307   6 606 554 203 875 200 882 244 216 204 687 854 608 510 773 772 193 380 659 658   5 357 597 140
 205 420 220 590 756  97 303 118  86 487 308 417 245 895 860 829 613 520 852 179 619 783 547 440  51  62 288 567 812 346
 880 673 412 774 152 147 675  15 167 103 838  75 726 766 254 132 319 701  68  52 836 503 406 742 290 835 705 607 556 106

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.7496e+07us (= 17496ms, 17.496s)
Wall-clock time (full program): 1.75291e+07us (= 17529.1ms, 17.5291s)
Satisfaction error: 0
Number of search iterations: 7190
Number of local moves: 6014 (including on plateau: 5955)
Number of local minimum: 46 (including on plateau: 723)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 589 467 187 338 494 329 818 824 713 262  90  46 674 555  40 179 533 268 796 852 450 391 573 314 119  17 563 856 340 838
 851 783 729 491 535 303 313 724  79 153 100 889 482 554 481 168 688 241 399 239 170  87   6 695 874 540 388 488 841 224
 771 349 176  12 844 244 742 162  81 679 448 403 884 776 397 700 585  69 648  22 873 569 833 105 260  82 321 821 234 425
 257 405 465 173 510 804 432  14 191 341 632 350 780 811 301  27 787 151 636 231 542 460 582 608 849 433 801 197 489 256
  59 566 786 755 634 139 727 276 809 235 174 758 556 263 167 711  92 748 829 597  80  88 220 794 324 740 155  39 763 431
 878 439 864 230  38 859 625 146 242 837 892 453 315 117 121 416 734 641 304  44 199 216 161 704 721 109 606 375 617 612
 472 733  86  10 745 251 720 473 116 805 298 103 469 746 850 646 611 813 348 200 775 355 110 877 182 842 245 141 122 371
 651  73 501 194 113 706 101 793 390 737 865 332 120 367 209 204 326 459 457 370 769 476 499 312 757 732 631 517 652 202
 697  60  51 723 271  84 322 423 678 381 831  53  28  35 653 800 269 891 210  24 635 709 712 412 760 478 822 759 561 183
 616 665 277 559 853 628 404 863 177  67 118 599 834 310 603 344   2 687 402 572 615 180 779 335 152 127 198 579 361 609
 252   5 671 293 605 364 586 128 614 570 581  25 565 495 784 618 203 650  34 380 621 858 588 436 795 546  61 629 206 352
 507 107 594 843 714 639 160  78 165 549 593 537 557 654 772 519 663 764 538 789  99 330 705  18 258 455 184 130 369 225
 539 512 219 564 521 226 523 552 513 562 490 536 543 474 545 518 196 145 520 516 508 291 514 102 529 524 560 289 480 504
 247 282 394 415 857 895 885 509 728 484 240 158 673 218 622 815 677 526 136 767 325 496  42 442 281  62  97 802  93 347
 505 410 492 486 502 503 190 468 470 452 398 475 449 487 435 725 429 454 462 430 477 188 485 451 466 395 440 444 441 506
 531 483 649 689  23 386  49 421 883 211 181 610 201 233 383 620 319 318 656 726  16 880 115 785 401 867 400 279 302 898
  77 365 142 377  29 295 819 150 624 414 782 222 839 411 261  96 445 716 426 658 886 273 855 684 443 422 825  68  64 847
 379 791 823 378 408  85 860 419 578 630 334 207 407 138 827 124  57 111 387 798 438 274 830  91 591 285 868 623 731  43
 286 327 567 659 166 696 434 890 353  58 337 354 571  11 670 193 456 333 163 228 832 598 134 730 553 778  65 661 765 647
 317 596 217 790 212 792 662 866 287  30  83  48 351 816 710 316 356 551 672 346 719  47 888 331 686 323 595 528  37 343
 137 645 345 840 777 900  45  20 283  54 339 770   3  94 887 675 574  98 604 587 744 643 577 238 129 747 701  70 814 175
 132 532 171 372   7 131  50 896 147 417 534 522  89 808 144 768  76 781 807 875 644 718 359 871 253 657 694 272 205 583
 192 680 846 409 342 358  32 249 357 788 810 803 172 660  36 306 882 362 106 666 259 420  41 806 300 845 275 248 876 389
 750 255 817 428 633 393 214 568 406 681 756 870 548 195 243 284 305 797   8 527 374 178 307  63  55 221 446 751 707 735
 461 899 575 626 693 159 642 280 743 893 749 154 385 692 250 164 157 135 265  21 215 437 753 702  13 288 761 668 427 308
 396 862 328 738 223 826 278 447  15 123 373 828 881 376 544  74 229 156 773 424 126 754 384 854 267 108  95 613 600 820
 550 292  72 148 290 667 691 736 835 640 872 627 104 685  75 879 698 703  71 185   9 836 547 186 418 897 208 299 294   1
 602 530 638 511 232  33  26 741 479 458   4 722 246 682 266 590 848 236 894 125 320 584 189 133 515 592 464 717 580 558
 762  66 169 227 637 708 366 368 690 143 497 669 213 541 500 676 699  56 493 715 297 766 264 140 812 254 683 270 525 309
  52 336 664 237 607 112 799  31 869 861 114 392 576 311 739 360 619 655 471 601 498 413 463 296 752 149 363 382  19 774

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 6.00016e+07us (= 60001.6ms, 60.0016s)
Wall-clock time (full program): 6.00346e+07us (= 60034.6ms, 60.0346s)
Satisfaction error: 1
Number of search iterations: 29670
Number of local moves: 19571 (including on plateau: 19335)
Number of local minimum: 880 (including on plateau: 2331)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 0: 589 783 176 173 634 859 720 793 678 67 581 537 543 218 435 620 445 111 163 346 744 718 41 63 13 108 208 717 525 774 => the sum is 13382 rather than 13515
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 608 716   2 754  69 253  45 319 746 863 294 600 743 375 536 666 269 178 634 771 101 621 226 777 479 801 172 232 557 108
 439 556 510 786  10 580 336 220 722 241 212 664 371  20 415 386 139 878 837  70  58 756 367 149 843 876 848 211 373 642
 794   4 490 247 244 888 594 732 452 308 803 328  15  74 775 374 410 233 548 747  53  32 840 886 440 179 287 116 783 839
 597  93 713  73 633 560  35 866 595  94 741 511 842  65 359 214 216 499 114 641 350 726 546 106 533 712 831 632 311 307
 352 450 862 575 772 431 612 496 646 348 761 158 224 773 748 164 327 856  40 422 454 468 739  16  38 357 301 667  39 419
 255 316 677  89 790 764 558 593 300 389 583 611 485  22 742   1 694 717  76  61   6 370 651 183 509 855 682  11 757 768
 570 154 706 684 715 251 361 709 129 573 295 100 147  95 813 680 881 650 701  75 275 165 215 659 696 290 896 262  87 681
 796 811 198 273 658 143 829 297 507  83  97 413 285 288  63 277 588 385 892 518 188 808 734 759 617 171  88 898 151 700
  67 105 177 900 315 358 762 322 429  51 466 809 720 169 587 860 167 470 749 407  36 280 703 718 493 438 133 639 406 779
 310 889 828 847 182  31 186 227 303 740 248  25 787 767 443 733  52 137 194 550 705 184 657 568   5 877 758 425 239 618
 219 538 234 123 338 456 708 669 648 189 736 692 489 620 695 131 445 671 890 582 880 270  12 654 109 349 334   8 309 517
 616 326 481 516 686 689 246 766 356 891 202   3 414 744 161 420 850 610  68 519 674  66  19 236 204 395 525 396 565 871
 738 187 126  46 398 203 564 276 296 579 512 826 522 526 894 521 561 534 135 222 769 531 520 529 302 528 532 163 501 474
 343 259 258  14 118 797 830  79 719 113 162  43 369 625 601 807 543 660 784 225 627 824 873 237 368  62 710 145 865 455
 426 331 897 491 448 704 502 150 819 453 540 333 476 463 464 497 482  92 799 430 514 473 487 418 467 483 107 134 436 199
  86 841 325 615 857 402 752 416  17  24 727 459 576 699  72 102 822 428 250 478 774 585  71  30 781 626 571 563 166 400
 596 656 737 465 435 111 392 895 541 449  50 146 723 698  18 555 643 780 569 332 339 103 380 870 549  29 230 472 423 329
 330 475 442 834 341 503 362  59 559 366 391 833 637 321 363 379 365 305 399 388 344 383 390 770 353 567 376 778 340 562
 444 760 254 551 155 776 144 437 159 735 635 649 693 883 136 527 314 142 378 836 731 539  78 156 554 240  90 605 858  56
 286 115 360 318 335 867 513 592 793 745 181 213 884 231 874 351 765 324 320 613 152 252 381 260 382 304 714 544 636 210
 652 484  54 191 337  28 433 355 272 446 668 721 566 711 647 763 812  44 515 697 238 893 228 432 537 138 394 661 589   9
 798 578 124 408 729 174 289 397 268 264 245 207 691 849 586 614 628 313 457 477 535  64 458 140 854 412  96 785 523 552
 676 606 630 242 899 851 127 599 121 201 864 384   7 506 218 451 644 553 274 281 471 702 853 208 460 393 623  34 291 346
 160 480 665 266 584 505 724  48 261 792 364 119 845 859 816 104 141  57  91 825 818 200  41 265 257 823 655 545 598 607
 196 707 879 409 193 209 176 821 427 690 802 875  99 256  81 306 377 882 504  37 852  13 662 284 486 688 574 838 132  60
 791 411 500 495 157 678  49 122 619 170 885 755  84 441  42 640  80 243 148 795 372 298 827 673  21 750 117 814 728 810
 249 263 195 629 679 354 861 817 125 604 317 417  98 271 387 581 112 403 631 279 622 846 185 887 278 405 345 469 805 401
 197 217 461 672  33 205 508 663 638 835 190 730 235 192 404 524 229 492 789 869 751 685 572 800 292 299 153 323 530  27
 577 542 602 130 590 624 342 547 180 670 434  47 267 804  77 832 206 806 447 283 223 725 488 421 788 293 782 683  23  82
 347 645 128 872 815 120 675  26 868 609 110 844 221 168 498  55 753 173 282  85 603 653 312 424 820 175 591 462 494 687

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.46698e+07us (= 24669.8ms, 24.6698s)
Wall-clock time (full program): 2.4703e+07us (= 24703ms, 24.703s)
Satisfaction error: 0
Number of search iterations: 10202
Number of local moves: 8115 (including on plateau: 8055)
Number of local minimum: 123 (including on plateau: 954)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 879 242 888 887 550 279 764 848 821 257 127 281 114 437 654 683 190  88 411 150 775  20  66 168 366 783 259 607 530 391
 211 354 851 271 844 795 258 538 350  21 326  94 151 651 856 440  32 602 162 152 715 789 527   7 684 827 792 385 249 581
 319 247 261  76 238 797 688 311 448 710 526 881 133 826 386 184 536 771 893 191 510 562  47 231 892 292 129 214 414 802
 457 473 569 805 159 556 485 752 621 372  98  14 284 823  65 712 597 106 590 403 194 413 255 774 429 620 743 401 702  43
 471 175 303 675 852 104  56 593 706 142 865 325 689  34 577  81 412 897 611 672 418 252 794 310 509  26 506 360 623 477
  74 266 495  49 542 377  93 815 626 615  28 560 355 717 628 814 253   8 687  83 327 711 701 363 784 563  27 574 762 618
 304 884 873 638 400 333  60 661 395 776  30 398 215 796 500 572 223 740 819 174  69 402 652 155 648 549 143  64 582 460
  19 230 645 609  78  80 337 737 812 857 588  17 767  62 435 318 504 352 869 328 262 451 810 831 234 316 845 842  63 217
 552 855  25 389 566 375 452 371 624 126 121 872 605 277 270 837 324 187 321 622 653 171 102 891 342 347 829 613 647 149
 134  61 629 534 297 329 895 207 144 601 387 496 708 877 714 130 298 160 760 101 208 157 606 799  48 713 515 858 862 287
 546 694 265 213 614 592 282 482 636 288 519 422  41 250  79 627 533 120 861 379 889 770 182 753 493 192 280 808  75 630
 357 368 317 409 595 559 634 741 822 584 756 663 610  59 348 300 426 525   4 658 649 135 631 222 185 436 204 571 665  82
 183 268 313  22 283 177 580 188 733 508 516 541 456 544 763 415 657 484 417  92 216 759 668 466 746 237 442 260 800 781
 695 524 692 880   2 124 439 594 293 111 353 212  52 469 392 866 673 186 209 899   1 635 698 748 656  86 724 554  68 680
 871 518 172 468 430  29  77 589 755 853 557 445 197 520 358 453  58 199 301 728 356 738 345  18 573 778 424 494 697 514
 739 517 498 459 551 264  72 835 116 427  95 599 720 499 850 431 825 351 640 502  23 180 444 591 390 443 555 380  57 462
 736 381 428 671 583 521  39 272  10 878 773 803 786 407 811  53 476 790  15 269 461 378 492 344 600 479 148  44  35 832
 619 156 691 531 532 239 788 273 361 275 243 362 406 596 397 227 346 278 193 454 666 700 745 472 396 470 535 195 565 804
 302 896 306 285 122 236 644 226 420 220  37 232 718 367 523 766 854 464 323 382 749 256 263 490 376 798 882 393 824 161
 809  85  40 703 181 632 637  12 682  50 787  16 359 241 731 818 218 276 758 131 478 864 251 685 870 646 221 540 421 373
 843 868 491 570 690 801 480  31 202 383 722 765 679  71 834 699 642 425 548 295 507   5 105 107  91 650 245 322 433  11
  46 224 123 465 828 769 578  13  97 474 727 308 136 693 166 267 735 503 349 875 512 846 511   3 248 732 633 659 709 286
 374 505 681 730 900 820  96 364 178 686 664 608 487 467 139 561 100 838  67 586 890 330 726 331 128  99 410 147 291 312
  90  38 734 225 132 315 813 399 455 404 660 254 779 206 198  36 719 558 817 616 785 103 757 394 750 575 458 173 883 189
 405 860  42 501 169 707 816 309 729 486  54 696 876 341  24 314 604 205 434 307 497 841 299 859 233 338 488 140 164 777
 475 885 408 336 847 296 564 747 246 568 886 587 612 163 165 335 432 840 228 830 115 625 567 167 153 117  84 179 617 441
 723 849  87 704 447 154 839 481 537 449 705 219 137 545 667 576 146 522  70 751 170 244 370 670 450 305  55 725 320 598
 110 793 200 125 744 806 290  51 343 662 369 210 543 639 489 145 446 721 235 423 332 603 229 585 863  33 898 836 118 674
 339 141 772 109 294 780 419 547 240 529 483 768 894 196 108  73 579 641 384 655 754 463 553 438 289 274 365 416 138 874
 833 158 716 176  45 669 340 528 113 203 513 867   6 742 388 782 677 678 539 807 334 112 119 643  89 791 676 761 201   9

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.2496e+07us (= 22496ms, 22.496s)
Wall-clock time (full program): 2.25292e+07us (= 22529.2ms, 22.5292s)
Satisfaction error: 0
Number of search iterations: 9615
Number of local moves: 7933 (including on plateau: 7874)
Number of local minimum: 71 (including on plateau: 934)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 283 844 796  34 119 626 545 320 330 827 618 203 791 148 595  96 518 772 885 323 453 382 777 334  38 125 318 104 561 750
 414 441 365 116 511 164 497 519 817 598 349 350 398 724 534  90 740 560  48 230 291 878 207 900 490 721 658  43 232 630
 261 328  77 798 531  91 316  94 450 833 800 405 729 288 753  80 612 345 544 672 353 884 131  39 880 344 174 120 845 738
 784 513 355 101 553 620  18 502 389 773 192 385 158 393 248 523 698 234  45 887 898 700 130 834 304 622 224 445 275 712
 896 742 586 588 305 665 177 566 838 483 168 629 238 321  85 447 515  26 427 537 615  50 253 837 804 582 628   1 379 127
 814 828 140  51 352  89 875 790  64 160  13 214 583 338   5 536 645 808 687 430 706 794 597 247 888  42 649 542 439 189
 474 265 726 541 437 752 260  66 465 673 856 577 272 861 243 849 152  59 220 361 173 840  41  53 674 199 785 874  47 720
 312 106 783 823 520 227 197 218 652 807 764 748 715 486 423 704 235 251 813 137  58 172 146 550 181 267 619 821 648 132
 121 391 521 324 147 863 462 219 107 787 897 663 112 246  35 532 138  16 657 883 644 446 276 396 565 675 855 795 654  88
 780  98 508 683 178 200 269 670 488 413  19 111 419 327 169 713 824  32 631  12 578 249 829 842 180 636 812 584 728 533
  72 830 215 559 867 651  23 719 693 303 417 540 862 363 416 705 387 792 204 209 697 428 395 360 325 666  27 424 175 191
 535 571 212 239 589   9 133 799 893 563 886  36 226 757 159 841  49 468 591 301 343 732 853 170 506   6 761 394 346 547
 233 815 660  65 755 229  62 723 196 128 831 401 480 478 496   4 171 596 411 895 735 461 868 640 548 528 182 110  33 781
 390 195 281 852 608 319 187 444 661 448 452 554 623 774 684 332 122 403 526 625   3 616 375  82 510 438 500 433 422 656
 507 397 420 579 408 339 429 362 384 456 741 435 638 843 479  20 557 570 466 614 432 357 889 135 449 103 322 421 690  73
  46 564  67 359 642 504 293 348 136 820 388 505 530 746 378 854 400 627 499 892 610 575 392  86 280  57 655 297 495 470
 576 639 501 707  83 472 727  93 383 117  24 105 454 679 624 144 367 848 749 244 279 822 399 879 809 145 458 268 463 457
 714 476 572  54 493 539 242 581 637 451 522 703 710 108 475  11 317 369 440 864 315 529 860  71 311 602 225 481 593 250
 546 851 302 873 754 410 314 498 217 464 284 601 678 377 494 745  55 711  21 285 766  97 599 524  15 604 109 115 347 859
  44 574 786 166   2 155 850 716 294 184 370 102 162 134 709 770 633 653 282 562 662 129 691 585 512 751  92 810 459 676
 194 836 373 307 313 237 882 407 482 890 296 580 141  69 643 183 621 161 271 573 613 143 491 326 779 607 737 517 650 193
 664 289 240 298 680 310 460 858 257 306 418 692 489 832 223 788 455 816 167 442  79 258 153 801  40 767 641 179 891  22
 331 188 733 329 899 635 590  95 163  56 412 722 376 769 797 443 556 149 202 682  87 503 685  37 190 758  61 805 473 789
 847 270 336 126 592  70 768 667 603 255 381 739  17 236 826 372 708 825 818  31 555 747 264 688 150 866 358 228  30 142
 734 274 100 606 730 839 467 221 527  60 368  81 252 406 668 869 409 213 278 124 686 694 216 552 857 201 431 632 295 725
 263   8  74 647 206 881 514 245 778 803 865 811 404  84 354 309 568 485 695 386 208 118 681 477 549 765 374 436 185 342
 176 567 846 543 701 872 806 743 156 186  14 300 802 835 157 402 677 718 340 205 211 114 364 165 337 600 525 516 609  28
  75  52 731 617 287 793 877 509  10 139 469 871 286 210 876 689 487 241 471 702 380  25 634 736 594 262 333 819 277  63
 760 222 434 759  99 308 558 231 894 273 366 198 671 605 611 351 123 699 756 256 426  76  29 425 484   7 587 763 782 762
 669 341 775 771 154 646 717 292 551 259 335 254 299  78 356 113 776  68 371 151 659 696 290 744 266 569 415 538 492 870

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.62341e+07us (= 36234.1ms, 36.2341s)
Wall-clock time (full program): 3.62671e+07us (= 36267.1ms, 36.2671s)
Satisfaction error: 0
Number of search iterations: 17128
Number of local moves: 11646 (including on plateau: 11466)
Number of local minimum: 432 (including on plateau: 1384)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900  96 294 229 214 124 259 511 722  20 870 149 818  44 769 765  27 884 734 686 123 586 859  46 482 695  35 669  37 868
 288 446 682 138 541 283 474 200 175  81 373 352 745 356 609 529 338 803 246 840 883 582 212 535 217 842 742 389 520  94
 105 601 831 713 301 858 215 438 417 748 786 808  69  54 150 611 237 403 444 588 595  16  86 731  31 598 337 737 380 627
  25 544 759 789 151 558 573 579 258  38 857 846 500 164 344   1 242 248 335 537 814 458 518 247 612 476 353 688 768 233
 764 261 128   2 763 369 700 703 428 584 106 783 239 564 733 807 662 317 197 147 784 334 701 157 623 370 546 107 279 357
 855 632 152  43 555 717 743 390 236 680 104 712 749 267 201 773 289  50 306 607 692  66 536 343 776 620 193 303 654 271
 599 300 459 325 485 634 725 257 251 498 570 631  85 843 825 125 652 321 173  53 514 280 112 774 223 875 600 861  88 377
 398 382 691 368 597 205 847 661 240 642  24 249  70 649 196 399 697 166 830 801 322 596  23 109 869 226 690 567 174 827
 666 127 897 543 614 889 163 656 629 216 698  78 797  56  64 211 551 650 687  65 134 647 126 636 309 625  79 643 345 714
 397 224 741 320 314  72 385 622 453 619  84 504 707 672 350 887 621 119 547 329 696   3 409 222 706  34 811 576 363 728
 670 638 272 549 862 100 793 422 569 494 548  11 141 794 285 161  15 721 739 431 187 738 207 311  80  39 790 844 799 305
 752 374 241 740 297 608 852 170  12 351 493 578 589 724 260 296 102 816 155 496 566 367 693 770 523 192 265 291 435 507
 563 538 802 821 561 203 117 708 516 179 626 243 534 148 221  10 194  21  76 871 788 477 795 184 760 284 750  48 751 726
 189 276 727 130 506 250  98 610 835 732 674 746  47 463 139 324 448 641 874 313 308 234 873 354 415 575 327 767 342 298
 419 432  40 624 483 522 445 410 481 451 310 443 462 468 470 487 143 464 449 427 473 490 683 469 479 475 381 442 440 753
 110 154 416 465 779 411 441  87 895 805 270 412 348 190 454 792 457 554 489 437 447 406 450 439 637 467 480 393 429 401
 108 796 332 235 425 366 206 227 872 414 653 806 391 383 365 255 850 460 424  52 413 542 113 539 484 820 804 466 122 592
 491 864 181 436 819 718 423 144 892 757 780  89 684   7 568 405 834 359 503 142  97 169 577  74 556 593 880 153  45 275
 689 659 492 495  18 486 530 182 562 218 433 890 252 885 639 856 472  30 191 512  41 213 402 646 604 346 719 231 388 434
 848   4 879 671 111 615 263  28  73 299 293 710 254 881 202 812 810 232 333 341 386 645 886 426  95 663 178 323 723 531
 171 853 550 772 673 813 893 264   8 347 418  71 186 362 515 630  91 758 286 756 361 702 220 497 140 526 505 404 407 336
  36 618 145 865  17 761  82 613 711 478 832 183 587 565 736 355 287 517  14 720 208 228   9 829 657 245 581 131 838 667
 266 590 292 585 387 420 461 574 681 860 400 655 421 791 633  22 775 525 841 304 278 274 172 824 168 730 210 133 185  58
 219 452 225 167 854 766 199 755 326 845 528 330 677 553 158 282 640 198 800 882 295 129 863 115 195 560  63 165 899 375
 747 545  92 896 524 508 408 120 371 591 209 606 146 137 754 580 331 583 277 540 513 837 509 876 162 262 121 735 177 358
  99 785 396  42  59  32  62 675  68 430 456 307 318 510 644 319 891 798 787 176 312 851 678 716 340  90 704 617 705 648
 878 519 273 253 660  67 256 836 471 894 826 188 867 376 244 729  55 533  83 455 762 602  29 392 339  13   5 384 709 817
 866 571 676 499 116 114 616 744 281  33 156 552 316 809 849   6 694  60 877 268 394 898 559 180 828  57 521 101 823  51
 378 159 349 665 527 269 635 230 488 118  61 204 628 668 360 315 782 605 715 136 290 781 658 502 833 395 685 815  26 238
  19  75 501 135 302 777 651 699 594  93  77 379 888 132 778 771 328 679 103 603 839 364 557 572 372 822 160 532 664  49

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.77822e+07us (= 27782.2ms, 27.7822s)
Wall-clock time (full program): 2.78157e+07us (= 27815.7ms, 27.8157s)
Satisfaction error: 0
Number of search iterations: 12153
Number of local moves: 10017 (including on plateau: 9957)
Number of local minimum: 103 (including on plateau: 1170)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 807  42 721  91  89  32 252 674 856 199 547 415 576 709 134   7 208 142 593 655 452 882 467 254 565 443 771 216 876 840
 507 152 828 656 892 381 877 183 619 601 282 180 630 822 201 347 503 114   4 635 235 480 231  84 310  80 865 814 419 583
 288 720 162 224 839 766 466 377 266 433 744 274 474 809  69 631   3 562 365 357 618 795 645 560 272 342 517 258 649  30
 367 697  15 743 823 253 120 509 884 361 401 812 324 184 791 429 682 636 657 394 551 198 128 179   5 705 328 633 100 606
 323 652 557 820 245 561 351 614  54 573 229 718 305  58 641 749 314 206 678 769 196 847 363 313  67 107 758 250 740 457
 568 348 531 144 496 158 842  10 893 112 255 115  17 360 626 785 582 890 603 793 739 118  75 385 738 735  36 279 498 784
 113 411 482 343 595 191 195 510 747 350   1 232 405 147 895 796 437 774 734 471 424 340 341 640 545 218 389 717 410 662
 398 811 116 719 731 899 139 878  41 286 270 824 504 627  87 534 242 659 470 837 167 440 574  12 176 301 384 368 506 515
 370 608 886 687  20 397 117 230 306 309 345 546 275 493 325 588 778 202 753 225 349 609  97 755 634 554 174 693 475 715
 708 888 157 402 639 685 736 416 283 382 860 885 848  29 616 133  56 129 166 104 615 817 430 584 331 647  81 434  61 393
  24 304 259 153 832 333 204 654 247 666 267 611 511 412 422 122 458 564 746  73  38 190 501 752 712 521 843 570 889 637
  50 508 396  85 436 699 487 178 463 516 447 526 684  28  48 285 676 844 523 577 723 733 248 408 870 492 163 869 477  76
 853 233 679 700 673  65 154 830 675 141  68 217 815  60 900 610 539 414 181 335 835 300 329 374 527 444 105 237 663 559
 797 665 726 435 214 849  53 146 607 798 185  70 145 589 690 623 596 388 108 696  82  26 612 897 200 395 486 813 532  92
 488 465 490 479 311 448 135 439 425 851 155 497 212 540 404 455 445 779 428 862 502 468 533 431 786 453 438  63  72 461
  90 284 371 661 294 617 261 495 707 703  11 244 648  66 344 669  25 787 550 213 650 756 732 222 182 620 759 164 855 535
 872 567 599 383 651 658 549 469 387 456  21  77 379 376 418 271 767 420 613 520 592 373 724 249 358 742 386 130 172 336
  52 757 186 297  59  95 590 205 868 859 790 571 407 537 764 578 821 121 524 287  88 293 543 741   9 406 454 625 228 760
 777 269 873 622 161  22 751 629 866 187 896 472 597 810 857  49  18 729 380 109 852 175 668  45 265  79 413 303 334 307
 500 646 332 481 514 518 670 680 691  31 867  40 427  13 804 875 483 464 681 781 375 462  23 541 441 403 207  78 209 278
 831 170 761 296 426 442 505 780  19 298 829  71 750 894 140 579  86 295 151 390 883 315 273 783 846 621 215 111 264 491
 686 563 356 137  43 643 805 513 173 555 745 494  99 871 193 644 841 119 409 536  34 701 446 714 221 177 359 660 489 289
  55 223 556 591 220 460 692 156 226  83 400 727 768 803 281 808 321 251 737 484  98 845 339 765 125 106 210 519 816 850
   8 330 421 197 378 110 624  96 858 512 776 728 819 548 292 369 754 789 449 725 276 138 838 160 671 580 366 280 320 103
 338  74 246 308 826 211 353 713 123 834 277 528  51 327 499 168 770 171  46 632 763 337 836  62 794 702 704 688 451 683
 585  33 364 572 552 792 802 317 260 891 219 256 600 711  64 299 602 257 417 169 575 399 192 605 459 354 594 530 653 392
 698 799 762 772 861 326  39 126 450 581 827 722 372 291  35  16 262 268 432 148 165 569 604 322 818 188 525 694  37 806
 102 312 243 476 203 864 833 825 238 194 730  94 587 667 880 362 628   6 352  27 318 263 716 689 710 879 881 132 302   2
 775 346 290 898 478 800 558 544 239  47 529 874 127 598 241  57 391 672 101 189 782  93 773 566 642 748 316 586 131 124
 485 638 150 143  14 240 355 319  44 706 542 695 159 136 854 677 227 863 664 522 538 553 234 423 236 473 788 801 887 149

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.71171e+07us (= 37117.1ms, 37.1171s)
Wall-clock time (full program): 3.71505e+07us (= 37150.5ms, 37.1505s)
Satisfaction error: 0
Number of search iterations: 17163
Number of local moves: 13708 (including on plateau: 13648)
Number of local minimum: 192 (including on plateau: 1715)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 296  88 404 867  26 135 131  96 310 565 648 379 728 221 687 362 841 425 184 424 861  90 618  31 327 620 597 778 876
 210 860 650 847  32 581 856 345 594 307  18   6 776 245 242 843  91 781 159 235 522 563 707 547 107 374 348 111 842 716
 351 126 828 634 684 508  29 105 785 708 371 887 383 223 283 359 769 710 866 219 878 255  63 313 643 118 238 195 794 190
 109 397 737 819 560 139 665 340 391 848 396 680  81 287  25 755 180 658 207 709 115 647 341 334 742 838 804  34 185 492
 614 799 346 702 674 254  49 897 178 783 260 208 602 600 358 762 805 142  47 593  67 237 384  60 585 761 745 818   8 177
 485  19 406 215 347 376 871 612 375 601 281 859 826 368  50  71 704 323  40 202 807 247 857 279 793  75 172 630 874 750
 791 899 497  78   4 449 717 149  89 655 166  41  36 569 603 668 505 484 381 735 677 361 800 664  35 798  73  65 694 832
 627 765 122 298 850 432 357 659 101  93 711 222 498 305 751 527 276 211 278 875 137 571 679 840 433 151 204 756 378 408
 846 638 641 354 882 148 623 790 758 399 289 214   9 102 796 385 246 809 141 360 496 690   5 412 154 724 558 766 227  53
 771 132 675  92  27 320 895 858 329 551 262 613 886 831 667 152 193   1 110 588 595  69 582 257 881 660 523 233 189 573
 599 413 757 435 114 477 419 779 721 615 611 570 645  17 661 191 605  13 562  10 199 535 394 564 689 365 504 576 311 164
 265 531 823  12 546 545   2  66 802 125 578 561 568 636 552 553 555 364 566  84 537 540 626 837 849 129  11 521 526 205
 203 598 500 197 556 587 501 549 144 520 845 528 473 524 539 467 584 113 339 146 510 494 693 282 529  28 481 450 619 516
 414 596 438 229 263 810 366 423 617 337 155  22 730 487 725 136 479 331 542 491 486 335 483 410 240 743  52 877 787 511
 446 499 465 474 457 506 441 459 409 456 488 455 464 439 462 503 536 475 471 427 512   7 428 470 429 476 461 478 442 480
 628 448 723 169 234 873 463  20 437 426  33 774 182 420 775 460 444 452 386 844 767 417 672  59 606 633 170 303 292 405
  70 330 777 302 686 252 806  30 200 892 839 811 833  86 851 321 380 167 591 698 763 789 241 160  72 319  76 390 175 608
 472 225 431 739 466 836 261 443 445 447 415 454 373 392 402 418 727 268 759 244 458 213 192 434 440 430 663 421 398 649
 388 639 163 746 220 550 318 325 400  95 631 352 196 889 469 640 316 880 338 112 621 468 784  39 328 662 651 156 803 336
 326 293 592 813 518 894 382 714 140  77 309 186 277  46 285 183  42  43 855 747 852 652 870 718 304 736 676 176  61 748
 682 530 792 273 266 637 106 344 286 250 780 513 236 862 436 264 161 590 713 543 317 884 119 872 288 267 370 116 567 451
 120 162  37 147 607 507  62 604 231 554  98 422 740 814 879 754 726 890 653 117 642 259 133 103 201 212 827 685 514 815
  74 835 124 130 669  24 865 706 194 502 753 239 577 703 274  82  80 808 820 301 401 121 209 801 772 622 579 580 616  54
 509 258 228 681 825  48 249 610 719 764 150 312  51 297 143 715 575 322 705 795 299 489 134 232 720 817 280 786 145 657
 885 206 158 355 353 517  68 243 586 625 632 369 688  57 188 666 217 853  58 768 174 869 168 734 100  45 816 482 744 891
  56 349 372 534 654  97 574 557 888  21 495  55 171 749 812 315 216 138 226 830 173 752 403 532 363  94 829 854 624 782
 356 157 683 656 218 284 407 248 788 864 732 306  23 731  44 411 824 253 644 635  15 324 519 629 834 538 275 692 387  38
 773 695  87 416 395 453 333 722 696 291 883 738 822 691 393 153 572 548 541  64 270 224 741 544 490 343  79  83 367 108
 294 123 290 896 269 673 797 589 533 128 670 770 863 187 104 181 646 314 760 609 308 300 821 515 179 559 729 389   3  16
 251 697  85 868 272 712 898 198 583 271  99 700 127 230 525 893 699 733 332 350 493 342 377 256 678 671 701 295 165  14

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 6.00016e+07us (= 60001.6ms, 60.0016s)
Wall-clock time (full program): 6.00347e+07us (= 60034.7ms, 60.0347s)
Satisfaction error: 1
Number of search iterations: 31732
Number of local moves: 20143 (including on plateau: 19912)
Number of local minimum: 1043 (including on plateau: 2419)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 1: 876 842 195 804 761 793 664 679 690 595 10 566 113 479 503 775 86 373 352 309 250 231 706 249 517 654 656 87 123 251 => the sum is 14189 rather than 13515
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 126 193 162 311 355 887   2 899 117 779 760 465 244 884 883  55 107 594 478 497 382 876  81 184 874 151 651 604  46 868
 514 295  86 629  34  22 207 194 733   7 672 686 864 237 316 662 640 463 240 756 707 391 759  36 235 596 281 763 846 644
 308 734 822 580 563 813 856  16 176 489  53 252  63 206 587  12 272 798 678 172 144 802 147 586  24 820 565 818 616 543
 471 679 552 373 844 611  75 390 609  99  89 574 839 304 753 589 815 219 183 663 601 643 389   4 400 692 116 212 502 225
 528  70 402 727 859 229 227 548 749 888 853 659 345 234 273 174 569 186  26 723 776 332 191 371 192 767 532 468  10 607
  25 698 441 182  44 726 177 627 375 788 257 327 614 473 167 808 334 557 684 265 704 146 667 508 711  48 626 852 551 133
 653  59 742 474 535 595 697 725 691 720 807 438 157 289  85 103 163 267 546 566  52 722 525  33 792 567 869 527  93  23
 732  73 638 123 305 130 754 641 210 677 242 622 774  97 665 770 165  37 255 635 254 806 701  83 680 366 848 323 768 141
   8 260 403 380 871 164 786 358 610 491   9 335 500 829 437 181 161 364 811 866 383 602 112 127 550 784 785 132 685 531
 399 416 312 618 374 328 824 285 893 633  65 878 558 664 209 319 168 238 293 599 417  41 830 313 299 650 322  71 671 828
 603 445 321 287 619 408 544 849 562  66 556 236 549 666 197 526 578 879 362 592 232 762  74 881 196 109 188 275 804 149
 348 880 105 568 120 329 668 894 292 153  58 339 892 624  72 221 873 699 547  39 738 632  51 687 249 490 199 867 593 288
 376 469 617 479  98 278 283 253 816 709 504 220 529 148 534 518 519 510 128 344   6  30 647 584 898 877 200 524 572 845
 757  91 119 495 696 307 623 215 201 646 523 812 251 453 780 715 517 284 736 320  88 737 115 755 259 771 261 613 343  32
 436 378 475 423 444 450 487 485 171 466 561 498 442 470 455 456 476 486 503 415 432 393 429 459 461 483 482 434 513 452
 431 511 900 575 454 448 428 169 712 413 464 406 460 458 421 443 354 446 397 409 407 447 634 480 418 472 404 439 138 377
 394 424 765 462 501 387 340  62 411 396 440 505 427 395  69 449 481 451 425 748 309 435 359 724 499 385 605 422 819 426
  28 764 303 347 195  15 794 506 833 205 381 800 372 761 554 882 324 405 111 875 488 842 218 379 318 625 276  38 579 297
 507 279 509 821 652 515 896 243  50 823 775 325  29 336  20  42 530 175 693 787 825 110 349 660  31 266 708 741 108 710
 654 719 401 571 590 705 598 559 863 365 282  95 637 537 158 131 239  90   3 333 702 150 870 522 541 296 137  64 889 814
  96 154 648 600 100 837 286 516 228 263 104 795 642 101 612 477 300 631 890 306 885 735 302 847 367 223  43 706 245 576
 714 310 331 106 803 860  35 342 521 129 636 256 369 467 388 854 224 716 361  80 827 258 231 841 688 208 739 315 772 134
 758 861 124 386 895 747 139  87 214  67 564 615 248  92 831 796 591 783 840  45  13 496 274 140 457  78 729 649 338 658
 897 865 217 118 703 156 180 545 694 262 690 769  11 718 801 268 621 713 294  82 682 246 743 226 746  49 484 222 280 233
 728 179 608 247 160 113 493 681  60 337 290 166  77 583 533 777 778 121 492 540 809  57 745 538 152 751 789 744 291 676
 187 850 832 581 392 520 585 773 573 570 398 430 750   1 420 301 582 782 606 143  84 555 791 577 211 122 326 341  19 213
 357 384 872 797   5 628 356 639  47 350 645 114 817 298 630 414 717 836  40 553  27 412 433 159 203 683 142 368 799 790
 669 752  56 838 204 542 241 855 198 620 826 185 730 539 721 597 862  61 270 250 843 173 216 655 560 512 178  79 189  94
 136 135 731  54 360  76 277 145 536 835 886 695 155 793 271 661 353 656 766 810 346 190 851 805 834 264 330 230  17 317
 675 588  21 363 740 689 657  14 370 269 125  18 170 858 673 314 202  68 857 102 352 494 781 351 670 410 700 674 419 891

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.30891e+07us (= 23089.1ms, 23.0891s)
Wall-clock time (full program): 2.31219e+07us (= 23121.9ms, 23.1219s)
Satisfaction error: 0
Number of search iterations: 9932
Number of local moves: 8140 (including on plateau: 8080)
Number of local minimum: 93 (including on plateau: 999)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 899 408 180 384 112 476 801 260 714 149 808 130 537 254 198 171 461 827 400 507 519 160 699 542  64 628 404 655 296 872
 109 880 201 549 550 389 297 518 251 891 255 216 648 886  58 444  22 878 183 555 805 396 591 469  42  30 429 731 806 436
 685 639 837 234 849 364 745  76 261 502  84  12 888 581 845 500 809 253 588 390 328 478 313  93  34 366 489 800 321 151
 477 327  26 580 121 833 283 713 351 579 322 622  92 491 330  45 688 493 418 540 768 287 463 818 812 835 531 245 213 212
 771 423 838 594  90 632 127 517 132 415 716 604 192  61 633 279  33 407 780 834 879 522 308 217 663 767 227 682  85  87
 724 275 115 300 624 250 503 619 437 703 819  96  36 816 202 133 759 265 541 861 742 645 334   2 706 535 249 295 467 462
 240 815 150 730 721 257 673  91 427 270 421 856 683 754 303 729 144 784   3 438 717 736 350 705 139 118  11  50 528 672
 596 509 695 181 638 582 420 654 220 206 237 707 574 182 709 196  51 670 691 577 146  65 262 403 843  66 627 710 846 252
  78 411 492 895 803 795  83 399 640 358 233 347 417 388 497 850 189  74  37 563 113 610  70  94 643 732 796 547 521 840
 516 575 755 293 449  48 863 621 191 605 278 529 733 694  10 650 508 572 538 143 602 274  17 432 484 426 711  24 470 504
 413 743 626  69  46 385  25 894 510 466 498  18 312 102 571 807 701 338 756 593 515 794 505 395 406 361 341  31 870 424
 273  68 873 465 197 793 292 851 343 100  47 512 692 302 881 791 329  67 603 802 337  80 684 664 268 787  56 173 584 601
 168 276 256 414 702 383 839 228 757 533 324 104 790 562 335 734 188 763 558 263 391 219 310 286 686 178 900 609 534 225
 828   4 374 186 458 629  97  52 752 631 556 892 281 483 860  63 506 778 154  88 606 776 172 175 885 471 246 166 874 472
 165 199 208 680 708 526 766 748 554  35 155 204 280 728 442 447 422 698 269  44   8 830 332 700 445 607 473 882 567 393
 454 578 223 333 494 156 595 141 883 758 679 349 203 299 419 405 852 644 599 761 114 241  21 712 877 576 117 552 369 111
 772  39 557 592 753 744  19 867 653 820 318 479 783 365  79  75 370 137 727 746 267  98 525 360 331 340 122 615 637 325
 831 152 524 170 598 235 496 314 380 124 889 657 412 665 666 545 747 352 501 179 190 630 379 777 298 207 720 120 737  20
 176 520 559 416 140 475 376 568 769  16 774 344 832 221 764 464 145 163 367 722  40 544 243 659 266 857 898 750  55 392
 460 346 169 704 658  32 284  72 387 586 309 726 126 448 810 814 589 848 451 320 456 662 539 770 336  28  89 381 474 641
 490 660 616 782 248 485 200 167 649 323 523 386 611 244 740 290 884  71 285 291 397 855 482 566 443 159 452 375  81 760
 674 676 677 715 247 696 634 377 230 762 893 301  62  29 226 306 258 398 304 439 187 282 738 158 565 468 353 842 433 585
 271 363 125  38 897 661 896 214 446 311 210 821 862 614 597 355 652 583  99   9  49 564 739 238 590 876 211 751 372 101
 319 342 693  23 868 453 164 440 119 841 441 656 480 123 345 356 785 339 218  54 853 194 635 215 486 647 450 362 865 749
 514 162 357 871 651 107 401 636  43 195 551 224 116 788 147 675 546  27 847 174 625 797 718 875 222 305 570 600 668 103
 348 781 428 511 138 368 697 459 587 229 681  82 135 669  15 887 620 723 719 185 687   1 317 608 560 106 457 488 205 824
 430 532 786 131  73 288 394 789  57 527 859 425 775  53 373 618 277  77 157 642 561 725 866  59 193 553 765 455 231 844
 678 499 105 239 232 817 530 289  86 689 617 536 543 836 315 136 264 569  95 431 825 402 890 858 110 612 153 129 359 671
 142 667 811 613 134 548 773 128 864 378  13 826 148 382 410 177 409 481 829 741 354 487 209 371 792 184 799  60   6 779
  14 646 259 823 316 108 242 813 822 513   5 854 272 495 735 573 307 236 798 623 434 161 804 294 326 690 869 435  41   7

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.90447e+07us (= 29044.7ms, 29.0447s)
Wall-clock time (full program): 2.90779e+07us (= 29077.9ms, 29.0779s)
Satisfaction error: 0
Number of search iterations: 12491
Number of local moves: 10376 (including on plateau: 10316)
Number of local minimum: 101 (including on plateau: 1207)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 899 651 308 893 402 179 200 290 337 175 521 573 889 732 393   7 159 192 661 709 476 400 844 606 101 165 610 241 208 694
 631 851  99 434 748 865 285 519 858 424 253  88 740 122 199 576 195 699 379 294  27 702 267 433 554 240 105 836 481 611
 385 188 832 781 898 147 120 617 373 545  76 628 375 600 689 280  46  84 214 783  51 679 570 447 180 662 707 808 692  58
 216 235 224 320 507 231 332 715 733 720 674 312 603 242  10 797 691 326 259 726 258 877   6 753 500  16 185 703 462 882
 427 760  47 618  72 360 435 613   4 738 342 114 743 807 789 488 495 737 123 361 838 157 565 881 135 512 377 556  20 401
 730 900  48 676 831 759  18 141 246 438 801 775 493 295 330 118  56 289 770 167 357 473  67 251 635 745 645 465 347 649
 592 499 548 527 127 782 721 440 164 850 148 776  69  93 529 615 324 156 725 484 414 190 272 142 667 873 249 623 642 274
  83  70 226 352 275 304 396 654 780 755 428 444  54 509 577  89 620 814 319 567 110 236 825 803 595 437 833 391 310 659
 849 802 205 160 848 204 742 451 453 516 629 602 181 677 150 675  63 404 810 830 561 229 298 382 222 584 206 103 670   9
 171 168 795 853 100 384 637 287 751 621 152 215 155 820 821 230 255 835 856 282 520 739 130 266 876 439 842 193  36  86
 605 234 712 593 126 547 871 398 389 656  41 456 243 212 345 429 855 470  87 681 734 346 276  62 344 596 729 144 528 806
 219 359 480 538 239 557 220 406 886 598 861 170 644 189 218 700 376  31 701 133 884 852  44 140 270  55 867 526 792 560
 355 829 747 211 790 572  40 585 296 619   2 186 506 894  60 880 546 543 459 722 143 817 536 183 827 173 502  57 108 327
 490 116 763 109 518 643 514 818  38  95 508   1 136 380 885 804 533 158 718 594 264 387 686 834  73  21 672 318 813 626
 257 727 374 498 634 800 469  64 496 292 719 153 501 431 475 455 815  61 754 372 860 426 323 513 483 131 107 652 223 450
 416 461 458 443 811 420 449 448 419 478 474   5 397 425 494 710 395 411 482 409 452 369 446 650 436 669 392 412 415 269
 277 599 350 819 551  75 824 265 563 129 888 544  11 405 303 353 368 582 552 260 466 317 511 646 784 761 879 338  78  17
 697 549 614 196 588 680 485 869 119 201 539 630 307 601 866 166 245 366 161  65 314 655 609 210 209 371 316 532 477 878
 525 313 896 334  22 349  32 333 640  15 128 407 293 777 586 112 362 217 497 845 723 574 568 664 486 559 321 531 799 607
  98  28 859  14 627 749 583  37 104 658 309 816 221 390 744  59 785 633 124 331 408 704 432 772 566 510 778 874 115 187
 684 286 145 117 340 262 657 793  66 248 343 863 768 714 647 300 653 555 341 268 302 515 194 247 339 868 460  26 750 764
 590 445  97 198  13 227 162 238 771 823 322 890 696 597 717 472 504 837 283 336 822 263 731 471 329 752  24 741  53 111
 138 636 423 367  79 895 812 660 351  92 410 363 809 846  30 256 232 608 203 616 491 843 522 479  68 430 558  82 492 724
 370  12 569 575 381 564 897  81 517 132 765 708 541 365 149 418 891 773  43  35 648  34 791 468 854 665 250 413 587  19
 146 716 305 711 388  45 579 892 202 839 622 756 315   8 301 562 273 356 297 553 673   3 422 758 358 463 403 325 612 632
 870 779 182 225 394 503 693 348 530 176 695  94 178 154 571 278 766 698 685 666 163 328 864 417 364 125 169 774 589 237
 335 421 581 399 706 174 378  80 244 489 580 487 306 271 505 690 798 887 523  49 184 281  33 678 705 442 757 134 663 735
 794 137 805 139 550 106 540 534 625 197 638  91 639 254 688 762 454 457  39  85 604 857 668  25 736 311 102  96 796 786
 624 207 288 687 279 841 172 151 713 113 261 826 862 682  90 467 683 284 578 828 177 191 228 121 769 299 441 746 524 383
  42 537 535 728 671 291 252 788 847 883 386 542 840  23 354 767  77  52 872 464 591  71 787 213  50 641  29 875 233  74

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 6.00016e+07us (= 60001.6ms, 60.0016s)
Wall-clock time (full program): 6.00348e+07us (= 60034.8ms, 60.0348s)
Satisfaction error: 1
Number of search iterations: 30974
Number of local moves: 20110 (including on plateau: 19874)
Number of local minimum: 918 (including on plateau: 2464)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 1: 694 481 808 185 512 635 142 825 229 520 681 701 543 533 455 494 405 307 407 309 248 771 660 897 45 394 399 805 207 42 => the sum is 14334 rather than 13515
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 711 713 455  46 376 640 756 265 361 717 139 244 888 672 264 218  51 302 802 393 763 738 410 104 820 259 451 592  75 290
 248 870 619 798 258 580 528 854  11 228 334 222 730  49 249  14 878 298 406 293 274 879 107 444 699 631 219 324 822 649
 790 729 857 642 531  17  50 217 375 860 520 589 242 480 536 514  47 380 411 166 210 722 173 560 585 543 338 615 788  28
 746 160 673  37 661 323 490 452 535   9 383 709 571 766  27 469 473 189 318 162 787 283 472  41 698 641 238 761 682 759
  61 793  83 394 840 697 220 866 674 171 727 305  62  48 550 132  60 837 620 832 691 725  30 613 177 289 437 765  12 804
 734 339  63 489 882 732 519 772  23 294 106 647 558 760 367  57 719  91 309 492 778   3 634  73 409 544 678 549 868  26
  82 774 352 386 666 257 687 889 506 116 378  10 151 330 806 239 856   5 566 155 586 611 369  56 269 632 625 784 749 623
 425 777 676 234 598 670 533 538 740 789 161 112 103  18 233 319 551 136 755 612 705 186 665 658 622  16 607  31 176 869
 403 140   4  74 710 540  20 657 654 573 201 321 779 555 695 131 629 363 401 762 355 605 496 595  81 823 809  72 815 252
 300 174 169 604 202 796 872  97 828 628 886 271 297 138 723 733 278 471 486 714  95   1 211 337 747 291 577 680 368 541
 384 865 842 618 247  92 113 826 706 653 512 345 205  77  35 423 182 596 392 117 463 416 849 675 639 340 764 267 152 720
 405  89 501 476 646 147 542  67 395  79 122 900 645 753 539 891 145 199 381 873 111 633 874 554 693 212 146 150 800 547
 758 400 105 478 285 231 284 662 510 767 610 156 356 358 621  58  33 776 502 847 663 109 232 685 349 130 805 391 597 757
 332 813 417 875 255 379 602  94 250 458 241 246 154 178 181 643 569 562 421 526 287 371 578 350 838 135 696 715 895 454
 521 794 468 517 559 481 494 320 168 561 438 114 447 467 529 268 739 341 483 565 474 236 485 609 427 829 251 500   2 428
 897 276 304 864  22 588 637 513 564 329 436 509 221 429 737 449 374 608 876  45 459  25  34 570 743 377 636 630 279  84
 316 575 731 700 477 125  76 498 834 184 736 880 503 299 101 745 390 703 404 603 172 120 883 303  96 899 141 185 142 694
 280  21 336 797 144 424 848 253 548 567 446 819 198 263 679 635 867 439  43 712 728 465 261 601 183 858 187 314 240 359
 453 119 587 351 801 385 582 237 466 770 204 752 419 671 563 616 497 165  24 505 281 192 415 153 716 664 214 534 783 396
 655 310 347 581 333 311 360 163 527 295 530 197 877 511 523 791 235 524  15 516 435 807 830 418 226 851 652 157 343 195
  87 413 223  70 724  52 590  39 785 402 445 626 686 704 741 708 493  54 841 123 583 440 576 795  99 799 216 327 614 260
 488 388 818 683   7 735 382 346 845 167 782 890 726 769 617 270  32 656 143 557 522 434 780  69 412  85 353 215 315  29
 328 262 277 213 850 853 133 275 196 898 208 108 572 462 175 525 831 754 507  88 690 692 370 179 335 286 515 884 684 365
 306 307 839 689 532 773 681 591 118 158 668 750 430 422  86 301 354 846 373 115  44 584  59 188 701 398 707 254 420 821
 230 273 206 861 518 288 164 272  53 432 721 100 127 546 827 448 600 313 852 863 317 180 606 751 312 408 816  80 457 894
 342 149 742 190 504 200 812 594 768 193 786 775 748 825 499 387 209 325 744  55  40 677 855 266  19  71 450 814 194 282
 862 372 836 170 593 892 650 885 137 568  64 225 129 896 227 475 224 792  13 191 552 644 243 808 245  68  98 651 426 579
 124 553 229 574  93 110  90 456 688 844 718 803 659 292 638 843 824 366 660 348 331 859 121 881 470 667 134   8 126   6
 648 811 296  66 159 833 357  36 148 326 810 491 545 344  78 771 482 887  65 871 495 322 508 817 464 308 128 835 207 407
 599 256 460  38  42 364 443 781 102 479 203 399 487 433 669 442 893 537 702 414 624 556 389 362 441 461 627 431 484 397

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.90006e+07us (= 29000.6ms, 29.0006s)
Wall-clock time (full program): 2.90348e+07us (= 29034.8ms, 29.0348s)
Satisfaction error: 0
Number of search iterations: 13272
Number of local moves: 9797 (including on plateau: 9677)
Number of local minimum: 248 (including on plateau: 1109)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 899 745 617 874 370 118  68 610 507 361 158 310 185 105 428 360  91 138 783 788 206 591 835 876 276 887 169 212 560 388
 856 870 314 154  26 867 695 238  41 258 758   9 216 849  74 146 293 189 595 845 869 350 509 358 552 283 821  95 844 541
 721  42 833 269 367 129 249 528 667  43   3 640 330 696 708 222 795 847  52 738 359 675 281 630 325 468 730 163 203 802
 539 524 371 790 679   6  94 397 235 537 278 846 744 569 207 882 296 830  85 529 298 171  82 600 319 229 777 430 408 763
  35 484  33 290 794 232 839 175 142 538 855 704 291 857 527 494 247 709  51  45 287 326 771  60 683 648 841 728 482 347
 770 516 605  29 604 756 139 761 504 280  44 190   2 669 607 202 628 161 879 886 126 135 603 329 782 223 328 493 762 502
 583 217 713   7  25 626 681  55 530 343 579 357 774 210 366  37 334 553 815 172  62 465 726 677 718 840 406 808 719 117
 220 574 627 748 442 434 799 701 452 423 450 462 488 480 368  96 489 422 213  75 443 478 736 120 102 421 781 419 399 653
 116 613   1 687 148 289 374 386 645  11  97 104 629  76 686 634 664 643 101 125 620 649 646 668 635 813 656 619 533 647
 233  67 108 836 200 638 792 760 373 624 155 727 884  64   5 490 806  50 587 590 599 764 651 320 382 127 197 875 449 162
 318  10 812 236 292 167 245 734 333 852 571 688 786 807 564 724  18 246 716 561 136 186 517 218 277  78 536 332 858 697
 384 286 268 900 570 497 894  83 800 674 294 729 551 140 230 868 237 225 563 184 665 831 121 776  14 193 403 177 817 141
 348 305 562 546 520 873 655 548 404 485 214 498 505 477 242 519 411 521 279 877 550 797 321  15 559  27 391 440 311 315
 181 166  12 133 642 531 339 345 114 765  36 513 828 518 589 532 471 743 582 796 747 111 699 549 182 143 540 523 641 544
  77 891 723 353 712 460 500 147 860 798 420 768  65 866 448 472 429 444  57 191 413 284 473 453 414 128 623 109 165 772
 431 317 426 458  13 542 415 445 895 584 376 597 859  47 401 389 446 221 418 438  69 130 466 432 451 751 412 779 522 785
 398 572 897 354 596 636 183 476 773 124 824  30 705 362 187 122 410 115 369 854 424 838 132 757 204 805 364 670 110 224
 131 752 863 248 112 893  61 433  59  93 737 282 566   4 822 825 892 425 152 300 543 889 503 103 861 234 174 304 864 390
 631 336 545 201 261 693 309 575 659 176 780 394 380 263 265 615 898  92 352 487 580  71 387 461 313 676 525 639 211 740
 731 435 266 256 853 558 526  66 554  23  28 742 327 474 888 660 288 511 302 275 151 467 506 470 534 492 441 850 405 436
 535  99 501 483 447 684 402 714 372 267 700 715 469 896 588 303 416 702 486 285 259 654 439 722 720 254 205  81  63  54
 499 652 455 662 496 456 592 717 257 459 392 226  16 134 865 113 324 253 618 495 137  98 622 689 464 585  89 673 606 871
 228 685 188 609 341 598 196 170  32 463 602 672  87 331 663 316 703 556 396 573 811 510 106  17 512 612 829 586 666 457
 832 567 437 577  21 255 741 150 621 746 778 164  80 383 767 754 698 725 834 375 335 515 209 168 843 340  49 157 322  72
 818  84 680 400 601 231 872 363 308 837 791 243 707 547 119 307 274 306 194 611 766 271 195 178 180 356 706 349 883 338
 691 661 160 578 682 344 144 739 239 555 608 393 565 820 346 880 750 427 491 581 784  19 192 848   8 215 153 337 149 156
  56 827 775  40 851  73  46 842  58 881  53 208 475 272 789 381 244 650 749 479 690 787 252 378 804 514  88 594  22 637
 355 379 365 755 819 658 632 816 735 377 625 241 198 250 508 385 295 803 759 297 270 801  34 260  20 814 264 100  86 614
 809  70 251 633 299 240 616 199 593 793 733 173 159 657 179 568 273 885 810  39 454 301 678 557 671 481 323 711  48 312
  90 769 107 409 732  31 417 342 753 145 576 890 644 692  79 219 395 123 227  24 862 351 823 826 710 878 694 262 407  38

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.09571e+07us (= 20957.1ms, 20.9571s)
Wall-clock time (full program): 2.09904e+07us (= 20990.4ms, 20.9904s)
Satisfaction error: 0
Number of search iterations: 8795
Number of local moves: 7159 (including on plateau: 7099)
Number of local minimum: 92 (including on plateau: 888)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 748 331 111 526 615 109 731 127 114 614 299 825 357 478 701  17 458 461  87 804 793 667 161 407 652 167  92 286 877
 724 880 642  64 659 227  75 805 335 366 868  24  23 439 270 229 799 280 412 835 472 123 133 128 694 672 383 763 842 349
 576  89 833  49 636 819  33 171  43 853 285 798 468 302 356 816  67 674 421 560  29 720 666 679 311   5 892 812 146 406
 610 600 429 808 389  21 113 256 510 237  57 896 803 538 886  14 212 198 268 126 865 487 275 548 818 185 774 490 861 241
 110 534 696 781 726 603 347 486 190 544 785 144 885 388  15 491 100 611 414 700 795 375 244 714  84 208 217 553 633 142
 103 664 398 762 316 758 677 586 635  47 367 498 446 192 410 394 318 269 232 215 537 483 824 451 708 841 632 391 321  40
 854 107   3 362 829 409 794  83 447 872 309 693 734 787 719 512 531 300 399 324  30 516 219 723 245 279 197 235 457 546
  25 519 430 702 239 210  59 686 482  22 602 890 547 752  55 884 690 384 289 228 532 683 595 348 481 336 455 725  94 571
 821 305 189 360 823 254 306 223 658 129 206  20  45 621 135 530 771 543 656 400 747 622 499 792 575 187 662 557 240 639
 173 761 328 267 178 345 618 671 568 612 855 147 443 631  53  68 460  41 473 743 681 567 221 660 310 591 606 250 745 449
 151 204 170 382 562 809 620 436 572 653 596 613 247 233  81  82 706 422 283 581 371 870  62 669 524 710 539 303 396 668
 834  86 377  12 288  54 740 452 149  38 319 520 738 433 502 739 277  91 541 648 712 130 351 523 477 893 773 243 736 839
 845 665 505 570 141 474 528 866 858 529 561 259 513 220 699  76 637 592  79 782 364 169  72  61 291 213 828  73 545 500
 453 312 264 503 307 775 120 559 365  70 678 271 155 488 838 125 501 164 847 116 214  66 856 509 873 813  52 780 589 852
 554 363 475  44 218 582 741 234 405 814 704 542 506 796 466 438 246 121 607 627 199 590 760 514 411 427  13 252 148 718
 744 108 564 730  10 764 423 417 431 800 470 479 205 168 402 343 587 735 326 563 150 166 807 844 485 182 274 437 469 432
 715 373 552 889 179 381 355 826 281 565  96 332 688 462 597  88 359  50 806 393 444 372 894 258  78 480 194 408 651 749
 476 282 186 413 376 401 419 337  58 358 276 727 346 788 342 368 489 415 827 329 379 676 843 209 859 361 369 867 395 344
 551 705 778 897   2 645 193 732 122 353 464 386  27 293 521 298 118 313 284 579 846 608 105 643  39 888 644 459 211 811
 253 226 786 497 692 604 569 296 598 248 340 304 493 352 647 863 527 713 535 380 777 601 334 339 225  31 117 301 687 180
 573 789 314 617 663 454 898 184 333 251  80 616 784 709 790 196 463 891 338 772 397 323 450 124  18 158 518  35 504 273
 869 871 766 134 609   7 294 435 249 242 864 737 308 202 175 755 646 390 689 272 154 236 770 315 874 533 757 224   1 137
 112  60 200   4 742 442 350 174 728 753 471 341 851 494 746 317 188 733 860 515 330 278 162 878 287 238 428 619 580 634
 195 756 629 404 425 549 695 556 558 698 525 566 263  85 680 434 416 181 131  46 176 876 628 160 257 593 222 716 768 327
  98 578 191 508 374 177 624   6 322 584 159 820 163  95 261 574 887 879 517 830 721 722 495  16 203 850 802 511 492  56
 297 201 625 292 153 550 231 484 810 536 262 138 605 403 626 655 754 759 641 881  32  34 378 448 157 143 882 765 119 654
  69 697 456 136 260 139 670 555 899 831 783 467 685 230 106 649 751  51  11 290 165 750  37  19 769 779   9 675 801 776
 703  36  65 849 862 707 767  77 857 354 387 145 325 875 426 883 661 895 630 420 152  48 216 522 673 132 183 115 295 255
  99 156 837 577 640 638 682 684 832 385 140  26  74 594 583 623 266 540 441 101 711 424 104 815 585 418 836 599  63  42
  28 840 496 791 691 102 465 507  93 657 392 817 320 588 650 370  71 822  97 172 729 207 848 445 797 717  90 265 440   8

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.58274e+07us (= 25827.4ms, 25.8274s)
Wall-clock time (full program): 2.58605e+07us (= 25860.5ms, 25.8605s)
Satisfaction error: 0
Number of search iterations: 11776
Number of local moves: 9543 (including on plateau: 9483)
Number of local minimum: 117 (including on plateau: 1151)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 495 664 630 191 876 847 255 386 501 177 404 547 205 345 361 599 571 658  91 701  34 872 124 743  80 806 351 654 305  42
 609 848 373 867 356 413 680 826 818 557 288 196 433 753   8 355   5 521 272 476 794 338  45  31  78   7 799 596 875 298
 791 165 842 688  89 721 801 120 724 330 814 370 111  55  72 617 470 619 299 692 618 184   1 169 344 582 684  86 852 605
 731 735 677 441 467 462 274 218 114 834  23 768 204 133 332 512 840 149 375 550 503 153 317 611 227 151 804 561 508 841
 636 471 194 125 773 432 473 485 339 269 147 858 608 861 487 249 101 764  28 681  68 398 549 185 745 760 523  64 691 551
 504 358 604 651 200 128 586 568 108 723 685 722  14 629 704  73 824 738 460 574 598 835  40 203 309 357  59 152 219 890
 102 696 131 480 702 560 566 321 396 183 450 310 525 234 145 752 733 708 213 252 374  71 225 697 415 452 727 803 414 878
 395 535 766 235 387 342  85 148 541 459 158 595 895 642  82 703 575 500 265  30 199 711 674 707 423 877 770 239  22 555
 251 406 855  18 748 242  50 233 646  37 540 699 720 808 780 864 511  60 520 353 474 763 622 639 307 259 468  48 166 428
 580 779 746 785 226 784 607 765 440 610 318 793 744 159 363 245  65  76 180 427   2 197 809 882 469  63  96 122 542 641
  70 181 673 817 843  83 422 534 562 887 672 382 150 388 405  54 759 391 884 223 640 380 781 394 796 326 253 291  33 241
 174 612 572 548 282 106 792 577 719 800 661 556 552 563 583 118 104 588 585  24  81 347 493 570 553 367 486 531 207 364
 776 802   3 624  74  97 325 660 186 839 857 132 401 217 266 813 140 819 823 240 279 559 713 257 833  12 278 762 210 518
 308 141 544 449 644 860 193 285 187  35 139 294 206 496 328 805 179 655 412 874 346 620 885 481 870 676 472 601 478  52
 316 443 679 263 119 408 134 894 236 447 329  41 277 881 466 438 891 389  29 127 812 750 825 457 188 410 377 880 633 376
 455 578 464  84 670 626 209 411 502 463 453 215 429 634  61 569 403  98 490 494 419 381 348 306 390 853 844 714 798 154
 303  32 365 439 603 682 362 354 897 515  25 774 143 425 886 889 426 736 527 807 879 483 755 216 195  95  20 146 289 247
 359 173 369 589 747 458 732 155 543 554 716 465 178 771 709 482 222  46 668 397  79 516 613 435  27 730 528 276 705 273
 115 301 167 898 475  88 587 437 862 105 564 350 851 821 519 324  43  90 335 484 754 448 499 284 592 623 615 436 505 343
 715 717 333 526 202 489 638 656 385 176 311 322 477 616 866  93 275 304 614 313 302 399 421 530 517 533 287 337 384 777
 434 444 228 407 579  99  21 246 230 231 420 100 772 497 648 290 645 725 192 602 899 652 567 783 659 431 214 461 349 690
 315 591 393 416 446 678 479 761  16 683 718 220 627  44 160 712 198 896 653  39 524 267 837  57 513 418 164 331 581 778
 137 323 109 756 293 336  67 256 698 787 662 238 871  87 254  51 726 621 811 320 742 366 292 859 295 270 368 451 741 728
 757 836 545 171 442 573 243 868 788  11 628 488 244 372 392 510 341 107 689 168 327 201  53 597 751 686 546 248 647 286
 675 103 296 445 782 172 593   6  26 170 430 822 229 695 537 371 693 224 739 498 900 665 250  36 110 769 657 669 815 138
 667 491 506 262 163 790 409 740  19  10 161  15 827 261 789 156 856 221  17 666 706 268 314 758 734 536 631 838 529 175
 522 514 492 157   4 271 869 846 334 454 830 594  38  69 767 144 558 797 865 786  66 687  94  56  13 576 126 749 383 854
 810 208 260 142 710 663 831  92 280 671 883 129 352 190 650 162 378 112 625 845   9 829 417 456 635 136 873 507 121 539
 113  49 637 729 211 212 340 532 775 849 182 632 600 360  75 737 700 606 590 795 237 117 258 816 584 565 379 424 281 130
 400 319  62 312 402 893 892 135 643 649  47 888 832 509 820 828 283 297 264  77 850  58 694 300 863 189 116 538 232 123

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 6.00009e+07us (= 60000.9ms, 60.0009s)
Wall-clock time (full program): 6.00335e+07us (= 60033.5ms, 60.0335s)
Satisfaction error: 1
Number of search iterations: 29450
Number of local moves: 19359 (including on plateau: 19122)
Number of local minimum: 902 (including on plateau: 2343)
Number of resets: 3
Number of restarts: 0

Problem in diagonal 1: 42 875 86 804 760 309 697 674 763 2 223 585 819 179 438 61 425 178 350 311 231 16 256 243 172 163 157 260 49 400 => the sum is 10528 rather than 13515
@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 897 315 756 425 440 538 341  20 634 548 472 540  61 669 824 143 230 495 469 715 590 289 490  45  67  99 692 355 487 869
 764 559 357 627  47 711 360 579  81 468 151  66 893 173 849 337  27 404 126 868 881 610 656  95 349 380 473 429 754 441
 234 165 826 288 712 392 863 214 887 614  54 790 388 261 112 222 489 150 703 675 279 299 577 676  46  74 865 818 105 737
 147 382 609 454 641 263 757 880 306 245  75 723 823 733 324 588   7  48 842 648 564 179 797 638  59 320 145  24 418 876
 855 258 199 394 745 500 801 135 446 340 861 138 131 463 158 264  86  90 557 606 704 184 108 483  85 835 853 749 716 771
 451 796 621 102 514 100 153 462 438 128 685 189 334 854 117 375 702 802 528 505 651 665 678 480 726 736 239  26 455   3
 314 804 333 629 435 372 698 830 326   2 163 892 266 493 806 115 160  43 136  34  15 544 600 724 705 576 870 688 719 223
 224 747 405 773 409 527 523 695 616  40 177 318   1 304 586 874  98 181 125 269 384 362 660 561 769 608 599 782 539 359
 312 624  84  73  60 598 643 560 647 803 421 866 859 203 551 444 229 667 831  72  16 668 350 406 167 639 294   4 613 811
 725 683 474 554 104 254 850 419   6 630 520 186 781  36 604  10 891 410 682 739  41 657 259 758  14 238 798 400 164 628
  78 220  87 839 799 235 899  22 567 122 575  25  11 552 649 226 779 443  23 534 325 227 524 752 714 243 822 761 677 785
 843 178 710  29 856 332 408 280 632 316 770 142 445 738 502 129 740 759 498 348 654 825 195 248  18 476 232 508 431 273
 543 456 148 753 611 812 589  52 597 134 786 461 471 183 532 693 650 774 274 442 516 231 139 149 396 746 265 646 449  17
 106 625 297 510 278 518 484 236 497 511 530 336 519 465 615 690 496  91 207 506 346 582 503 424 411 275 378 742 851 486
 541 190 166 270 571 535 379 809 558 602 427 837 672 525 569 686 204 494 481 344 836 583 174 240 356 536  35  65 124 706
 670 900  82 697 111 413 748 453 192  30 679 310 417 422 423 458 620 434  97 168 428 448 661 658 175 862 133 593 450 783
 162 426 864 217 309 777 110  64  42 731 844 890 291 412  53 709 580 664 807 640 137  83 338 846 787 601 247 741  55  88
 572   9 652 464 889 840 768 365 305 867 550 884 383 233  13 663 225 403 653 246 467 509 387 187  28 848 319 366 331  89
 491 492  94 180 700 605 352 755 212 466  56 645 191 321 216 478  19 281 376 860 485 430 596 815 847 369 680 594 228 681
 513 816 221 521 562 116 373 482 763 637 370 416 819 644  79 791 662 313 432 298 152 271  92 103 666 814 626 107 574 282
  93 198 587 898 342 257 531 879 772 276 894 328 735 206 730 170 617 633 437 364  62  21  63 778 460  51  33 792 829 479
 339 459 302 875 200 119 241 267 317 300 277 414 673 671 252 242 585 820 307 821 871 215 303 260 727 283 209 549 857 760
 873  37 765 642 390  32 140 251 457 488 196 256 595 194 694 515 504 533 146 201 696 208 780 872 635 631 788 381 293 322
  80 249 433 253 284 655 250 751 391 578 603 157 701 832 363  68 789 618 439 210 813 877  71 218 565 285 794 512 546 130
 176 397 808 202 841 501 114 436 415 713 197 354 244 886  58 684 169 805 885 619 793 845 386 371 113   8 784 295 161 255
 743 529 581 296  49 407 547 132 311 691 623 622 120   5 699 728 776 420 729 361  69 447 687 211 882 636 612 347 185  70
 402 526 708 182 734 395 127  96 721 367 329 507 584 219 154 358 188 795 323 368 477 398 852 522 827 109 286 555 573 833
 800 674 121 722 144 707 377 775  39 817 553 335 556 101 389 542 878 213 591 118 718 659 401 272 351 268 123 374 570 327
 517  57 330 301 172 287  77 896 452 858 292 343 475 834 828 563 353 470 767 537 237 607 689 155 838 810  31 141 205 393
  50 744 895 345 566 717  12 720 888 193 385 545  76 883 766 750 762 262  44 399 308 592 499 568 732 159 290 171 156  38

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.90342e+07us (= 29034.2ms, 29.0342s)
Wall-clock time (full program): 2.90674e+07us (= 29067.4ms, 29.0674s)
Satisfaction error: 0
Number of search iterations: 12853
Number of local moves: 10410 (including on plateau: 10350)
Number of local minimum: 128 (including on plateau: 1274)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 430 193 819  22  93  25 586 249   7 345 157 105 215 877 731 838 365 805  92 747 698 657  21 118 801 793 299 662 865
 309  63 891 151 855 833 522 178 110 758 240 187 632 238 845 890 318 219 289 757 412 786 440 882  20 226 210 312 181 761
 385 231  79 712 504 417 599 743  94 285 750 880 158 511 203 317 895 626  19  16 398 872 275 135 675 537 562 102 816 719
 325 144  69 800  26 166 602 336 177 255 360  60 483 775 542 864 683 660 107 886 703 856 382 831 340 446 664 579  73 321
 854 639 474 262 545 322 189 567 830  32 763 236 188 647 242 600 306 435 887 493 146  72 311 642 810 771   2 480 546 224
 594 764 525 666 155 720 533 896 296 139 292 815 362 206 590 130  38 323 233 369 829 425 638 634 609  11 759 227 120 617
 422 182 457  84 637 494 724 313 508 828  47 314 498 248 742 789 111 172 709 406 604 428 387 797 397 441 460 453 393 470
 165 354 607 416 273 668 820 686 799 834 328  54  77  31   1 874 269 629 200 729 485 556 718 408 342  43 374 608 857 310
 791 142  95 379 268 495 173 595 669  23 674  87 781 597 141 737 132  74 591 782 531 640 778 555 767 796 357 143 680  42
 583 635 302 124 320 889 519  71 871 619  24 218   8 682 496 386 116 528 684 222 643 847  99 228 605 551 721 593 229 702
 301  44 661 152 665 795 438 167 601  57 752 620 883 256 488 532  68 377 714 563 843 569  40 237 192 870 481 213 725 211
 570 104 756 651 332 543 420 180 760 443 169 867 717 134 527  61 353 439 618 432  14 692 405 366  46 860 383 685 585 403
 663 770 576 688  90 547 733 308 153 326 174 835 514 148   6 185 656  56 628 372 330 352 571 535 487 195 839 500 694 584
  85 245 196  10 277 492 868 736  62 852 892 630 175 530 765 773 371 885  35 713 798 212 225 853 232 785  65  41  12 700
 156 364 458 479 490 524 122 473 478  82 578 343 272 706 491 431 125 826 461 291 876 126 754 561 523 603 297 751 455 419
  78 452 622 267 652 862 391 477 726 436 414 486 463 338 384 380 427 394 437 512 482 641 824 515  29  70 445 476 424 411
 722 557 821 381 454 112 400 863 401 748 426 415 186 350 402 465 471 418 407 858 339 521 376 266 390 389  55 171 817 334
 806 654 507 899 333 893 284  49 265 658 520 814 361  50 349 164 375 370 526 606 160  81 534 220 404 676 251 484 681 541
 704 183 198 472  66  80  28 202 728 875 117 897 247 548 655 538 740 689 409 802 274 464 270 678 779 191 613 621 293 154
 466 772 119 744 568 103 499 137 598 859 315 738 844 467 787 254 179 625 305 271 456 294 259 517 667 170 516 540 346 100
 348 671 589 804 610 209 208 788  88  89 672 711 241 341 331 234 221 278 355 280 358 295 701 351 550 849 554 755 184 850
 217 566 559 216 851 794 335  27 214 777 316 392 587 582 359  75 888  58 596 324 136 253 223 730 715 693 644 373 616 399
 808 879 649 749 395 710 836 645 207 444 615 168 869 147 687 776 588 573 298 539  67  76 243  37 574  45 475  53  36 327
 769 840 827 434 442  13 347 611 894 378 708 161 707 873 281 413 812 811 114 123 239 367 502 109 128 260 677  48 283 344
  39 505 768 368 518 162 832 303 565 553 792 614 544 497 257 244 575  83 264 140 263 450 536 388 145 129 784 803 741 653
 329 337 176  91 462 577 106 762 449  86 624 421 631 866 739  96 745 822 194 648 564 286 753 230 549 121 113 884 705 149
 592 552 235 807 572 163 659 319 304 727 101 623 108 825 848 696 276 560 766 131 459 261   5  97 287 735  98 506 513 690
  30 633 138  34 783   3 723 150 813 363 410  17 898 396 258  52 697 307 288 670 580 691 205 650 809 282 451 823 780 581
 489 300 841 433 469 190  51 510 159 732 279 246 861 612 204 627 774 197 842  59 746   9 846 790 878 679 199 356   4 133
  15 503 127 423 881 646 529 837 447 250 818 509 115 699  18 201 468 716 734 429  33 695 558 252 448 290 673 636  64 501

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.22432e+07us (= 32243.2ms, 32.2432s)
Wall-clock time (full program): 3.22762e+07us (= 32276.2ms, 32.2762s)
Satisfaction error: 0
Number of search iterations: 15368
Number of local moves: 12372 (including on plateau: 12312)
Number of local minimum: 155 (including on plateau: 1493)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  25 684 171 730  65 335 423 365 339 530 665 350 466 353 230 443 624 390 452 445 464 855  16 816 480  56 558 847 679 659
 832 313 737 501 547  19 610  38  23 344 142 790 600 100 186 698 608 387 879 371 462 356 596 526 222 312 635 825 446 410
 826 173  77 196 546 388 308 294 779 719 180 477 565 873 235 710 792 743  95 541 590   5 440 648 269 694 289 366 104 593
 867 373 118 482 214 175  28 460 543 566 868 179 415 796 393 888 570 852 824  78 305 306 412 411 237 603 181  84 591 696
 362 413 332  39 162 770 469 892 811 890 876 613 190 273   9 633 715 323 819 263 660 736 163 257 205 129 283 221 324 683
  57 183  54 586 875 881 225 611 232 265 830 107 786 229 158 475 643 274 840 757 345  83 166 573 767 841 407 159 883 223
 623 422 599 397 333  41 317 685 594 723 645  71 587 701 642 116 374 244 441 167 763 272 433 668 318 787 138 271 571 572
 751 808 511 327 192 401 858 352  79 848 704 219 431   8 202 218 471 582 656 625 622 771 676 197 828   6  64 563 360 185
  76  58 658 831 725 258 103 191 361 277  92  47 753 479 439 520 143 690 620 282 529 756 898 846 772 491  55 885  82 598
 734 428 749 699 512  27 708 595 242 211  30 357 189 194 862 524 522 301 616 650  72 630 363 165 248 295 754 503 458 877
 842 801 421 619 784 177 664 414 207 381 602 621  51 709 311 203 506 290 474 548 319 120 117 740  43 691 721 111 494 534
 457 809 336 484  81 515  26 707 198 434 544 639 692  80 853 238 537 498  67 618 810 655   1 400 144 499 252 864 641 436
  53 199 834 124 176 581 502 330 803 141 703 504 347 640 747 403 568 617 280 742 115 559 713 358 391 488 130 535 677 255
 172 843 449 147 307 554 759 310 675 126 233 262  85 478 785 539 859 396 758 607  70 228 427  10 666 574 844  24 514 814
 121 408 545 184 149 523 315 860 673  45 667 296 805 813 470 231 157 777 304 369 700 148 297 575 782 496 878  61  33 833
 164 555  94 549 802 450 178 688 778 577 216 780 102 188 827 646 579 378 210 564   4 732 585 857 722 601 416 119  68  86
 377 245 456 741 359 839 243 364 755 662 351 838 279 476   3  91 399 561 473 567 799 267 303 385 631 697 131 343 627 253
 483 597 718 355 887  98 746 224 314 711  31 187 866 402 693 392  17 150 328  37 261 895 508 507 444 346 424 807 657 430
  60 154 133 845 880 379 264 106 382 609 661 583 682  42 578 764 256 518 644 284  32 300 465 209 739 815 745 706 468 212
 254 528 368 540 893 302 837 136 823  74 321 485 406 341 113 206 438  46 260 728 527 835 750  29 536 817 836 404 669  13
 773 752  20  14 161 865 634 455 226 275 615 891 789 217 437 497 288 215 606 886 500 394 376 632  52  73 821 674 342  35
 733 320 247 195 628 765 795 850  18 863 291 800 309 145 551 510 459 798 285  12 744 200  48 448 174 614 251 818 493 151
 432 481 241 812 338 791 334 266 516 794 204 278 152 298 584 490 454 738  63 521 869 560 781  96 822 533  97 557 326  87
 637 720 702 647 705  15 169 112 487  62 201 604 861 769 489 762 372 729 170  90 249 405 576 234 588 556 900  75 110 519
 337 139 748 114 220 806 276 804 542 208 354 717 889 592  11  50 367 589  49 472  89 425 899 447 727 492 788 250 552 562
 735 884 882 775 268 678 653  69 629 299 681 550  59 227 793 213 429 246 580   2 820 340 638 395 109 134 135 122 409 761
 851  34 331 797 419 101 384 872 108 672 766  21 724 605 398 316 538 292 712 871 155 286 182 389 894 375 531 146 505 240
 420 513 626  93 467 652 259 325 760 686  40 463 281 870 897 649 383 435 137 348 569 380 716 553 123  22 105 774 193 776
 293   7 663 453 140 517 532 451 486 370 874  99  88 849 270 854 125 127  44 287 654 856 461 726 426 442 651 670 714 386
 168 671 695 239 680 612 896 689 132 153 128 687  66 768 349 236 322 329 829 783 417 160 509 418 156  36 495 731 525 636

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.98603e+07us (= 39860.3ms, 39.8603s)
Wall-clock time (full program): 3.98933e+07us (= 39893.3ms, 39.8933s)
Satisfaction error: 0
Number of search iterations: 19837
Number of local moves: 14912 (including on plateau: 14791)
Number of local minimum: 331 (including on plateau: 1820)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 575 270  70 329 539 553 511 593 499 810 338 562 398 832  32 167 869 194 759  31  85 894 287 482 160 307 324 417 757 871
 892 895 252 463  91 353 533  25 749 464 633 384 834  55 385 868 204   1 109 352 171 847 602 315 874 475  15 638 347 689
 452 845 637 231 435  57 362 274 303 118 627 802 664 745 389 291 532 132  82 286 643 656 295  64 556 697 793 433 661 453
 261 395 582 795  34 897 786 812 408 427 236 247 476   5 623 148 767 477 478 133 391 774 328 354 775  79 423 410 250 744
 425 674 846 728 181 135 337 520 873 799 531   8 232 899 229 549 257 272 526 415 771 239 616  20 268 276 530 309 784 266
 867 612 223 747 777 632 341 382 651 301 190 131   2  92 305 220 828 517 481 646  66 430 669 628 471 831 864  48 521  42
 877  73 882 611 614 456 712 374 314 791 596 852 238 157  76  56 175  46 826  59 783 565 230 765 192 323  30 876 859 107
 809 219 785 571 208 357  93 673 282 581 392 251 158 849  63 119 676 896 152 120 682 885 691 510 801 711  12 753 154  62
 827 262 686 234 720  71 755 281  95 625 670  54 663  19 584 343 186  90 416 578 312 808 792 529 585 769 377 502  41 641
 496 872  61 851 121 255 817 515 254 325 145 413 256 886 729 739 141 693 776 368 835  24  29 595  39 100  60 547 854 719
 407 182 806 304 259 842 150 667  28 652  69 709 292 125 843 731 821 134 805 358 763 211 629 591 348 225 583 210 609 162
 743   7 319 226 879 789 830 577 580 253 610 165   9 443 773 137 653 626  88 542  68  40  33 797 467 332 811 598 372 748
 297 870 161 376 548 703 450 862 459 604 345 237 613 440 615 369 484 567 197 313 308 201 396 331 887 600 752  97 127 306
 544 265 288 836 498 129 334   3 631 442  83 560 507 844 648 367 756 619 732 172 721 412 359 841 404 397 104  86 439 494
 491 356 383 322 860 381 189 492 863 414 378 111 838 512 788 466  37 209  65 741 780 310 400 534 221 574 543 573 320 364
 149 406 317  84   6 168  38 705 146 402 525 485 717 880 114 472 421 696 587 559 500 169 762 346 825 890 564 451 401 730
 267 850 298 563 545  53 205 177 386 561 327 342 527 393 746 714 599 340 290 888 130 779 770 428 360  16 246 607 568 540
 736 740 233 143 800 592 898 206 166 333 679 572  89 394 302 772 889 155 508 796 365 294 126 431 185 519 454 136 516 486
  17 768 330 900 198 857 657  18 311 576 460 409 829 760 468 289 699 640  98  72 461  51 866 215  47 403 692  11 706 707
  94 103 893 804 191 536 241 455 438 140 235 701 781 490 503  50 102 379 566 606 318 823 634  81 865 649 708 202 483 444
 622 411 654  77 277 351 818 275 685 176 713 124 815 687 570 635 284 698 249 321 326 742 420 480 458 473 244 159 655 116
 260 418 551 188 666 363  23 683 813 399 884 429 644 875 514 594 216 437 336 681 798  43 108 446 690  75 734 278 106 263
 535 213 710 695 523 504 822 147 782 179 764 672  80 128 754 702 207 642 807 524 738 156 218  45 509 193 184 727 243 112
 426 588 639 214 659 493 335 422 349 513 737 704 448 187 285 501 390 658 283 557 350 579  49 174 479 794 725 462 199 316
 361 840  44 375 497 853 449 688 858 388 474 820 624 273  58 630 138 153 387 355  21 101 824 528 432 279 495 766 299 505
 117 203 228 618 269 684  96 569 183 722 224 518 180 366 660 750 227 603 506 344 839  22 441 694 803 605 373 837 280 554
 139  67 723 645 761  36 123 819 537 550 487 434  27  10 105 636 878 715 380 447 240 718  13 620 436 814 465 816 469 405
  35 271 142 242 724 248 650  87  74 122 217 339 883 597 264 445 163 778 833 787 371 457 700 881 115 861 419 424 538 848
 716 662 151 170 522 678 370 726 586 296 195 891 665  14 300 555 671 293 647 856   4 668 758 680 164  52 258 601 222 144
  78 178 621 173 113 489 590 488 212 552 751 589  26 558 790 200 245 855 546 608 675 617 470 110  99 196 733 541 735 677

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.79872e+07us (= 37987.2ms, 37.9872s)
Wall-clock time (full program): 3.80206e+07us (= 38020.6ms, 38.0206s)
Satisfaction error: 0
Number of search iterations: 18207
Number of local moves: 13091 (including on plateau: 12969)
Number of local minimum: 408 (including on plateau: 1554)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 898 392 589 129  20 476 191 845 181 700 574 742 604 158 223 783 197 202 688 842 573 196 213 190 338 299 204 572 741 755
 111 859 332 315 468 671 271 296 449 353  15 630 599 471 211  35 846 475 647 141 873  72 860 419 692 260 257 254 836 797
 164 625 222 895 645 438 829 165 482 293 256 285 377 669  17 439 737 699  52 147 712 420 142 739 892 899 252 267 313 443
 101 584 653 765 136 796 601 832 507 882 226 465 762 116  12 195 557 631 383  90 365 484 784 194 819 171 125 312  97 870
 109 510 812 149 763 485 629 228  55 678 858 393 519  71 610 817  33 582 263 686 544 219 328  65 148 232 565 670 822 672
 104 532 531 347 733 583 137 208 734 286 720 675 549 169 847  96 292 727 349 665 339 674 855 792 132 290 597 272 224  56
 594  49  85 776 536 411 385 691 382  38 689 480 596 168 781 743 188 201 177 840 316 827 753 802 236 405   2 788 221 355
 523 289 558 889 388 888 868 398 656 635 193 146 274 366 685 642 167 677 250 238  59 441 304  87 518 547 245 429 591 564
 805 710 153 157 824 343 866 357 876 504 721 814  89 408 253 131 837  86 835  40 128 373 103 108 342 346 206 417 844 839
 893 660 623 559 612  31 151  79 853 618   1  67 646 160  44 530 242 121 627 505 310 446 126 759 603 810 900 668 477 394
 282 318 259 251 135 566 524  41 264 269 726 664 376 809 496 268 378 150 500 821 207 550 453 440 539 773 756 578 606 516
 407 399 351 175 652 682 511 341 344  83 521 495 841 401  42 537  98 335 863 764 258 774 613 490 458 235 806 152 769 118
 731 374 638 811 628  58 163 337 535 360 331 851 363 369 663 123  26 722 735 499 728 370 751 397 611 215  30 288  22 786
 314  94 513 744 464 561 497  48 614 494 437 278 570 560 884 469 517 466  13 538 588 676 498 218 697   8 323 451 514 467
 255 528 795 237 695 820 705 818 434 487 717 333 540 389 474 501 493 244 277 107 114 754 640 227 442 246 173 138 317 615
 444 483 452 309 425 729 489 470 605 478  10 632 462 576 421 404 460 350 826 473 334 403 371 435 457 174 270 869 455 249
 412 777 816 415   5 203 522 659  80 626 872 166 198 324 472 885 396 364 234 372 684 690 329 637 170 503 693 680   4 327
 768  18 525 562 283 280 402 890 799 205 105 390 122 330 506 361 543 428 375 492 683 113 732 747 662 667 648  39 575 265
 679 180 273 779 673 803 134   7 139 481 509 300  69 281 602 782 740  24 276 414 579 214 303 867 595 823 189 807 354 639
 119 182 294  29 229 275  53 502 512  95 587 261 409 801 567 800 400 176 852 233 657 551 110 552 554 586 761 850 793 725
 130 210 887  78 155 563 302 757  14 766 874 379 706  25 831 311 571 301 878 423 427 106 650  54 422 718 794 241 529 413
 848 785 117 609 896 577 262  45 145 553 156 305   3 622 192 883 833 897 864 306 711 644  75 418 220 216 200 298 808  27
 406 508 184 352  82 144 772 358  66 828  68 651 450 124 862 649 533 838 102 880 790 488  93 356 724 555 620 621 172 239
 217 886 698 655 279  74 431 815 798 871  62 432 368 891 199  16 542 592 340 748  91 445  46 161 436 384 320 556 387 775
 825 416   6 585 716 433 581 287 714 159 345  23 834 750  21 391 225 297 319 580 336 715 854 545 534 830 624  19 243 308
 112  28 515 295 568 230 704 643 746 791 520 231 448 617 749 133 187 770 447 178 661 875 362 804  84  32  81 569 709 426
 813 641 395  61 240  36 266 865 681 212 723 687 248 598 593 380 758  51 619 666  50 185 696 381 322 307 745 843 410  43
 607  88 127 707 616 548 424 856 634  63 140 326 730 787  99 736 778 367 461  57 486 284 325 879  77 654 708  47 115 789
  73 541 658 100 463  92 386 247  37 359 857 701 752 767 633 321  64 861 120 479 703  70 600 590 608 694 894 760  76   9
 771 849 454 780 186 719 459 430 179 348 702 713  11 738 526 154 877 881 143 291 209 456 546 162 183 636 527  60 491  34

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.92002e+07us (= 29200.2ms, 29.2002s)
Wall-clock time (full program): 2.92337e+07us (= 29233.7ms, 29.2337s)
Satisfaction error: 0
Number of search iterations: 12359
Number of local moves: 8999 (including on plateau: 8877)
Number of local minimum: 243 (including on plateau: 1065)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 711 744 856 673 446  80 583 536 219 760 826 379 816 254 728 274  94  97 520  65 465 263 681 142 618 838 476 172 197   2
 802 121 565 294 199 866 250 226  34  82 807 461 575 577 648 113 858 552 138 817 110 528 761 474  49 179 820 818  95 696
 497 558  33 456 548  13 458 492 433 117 789 876 192 187 395 718 864 406 739 423 166 780 601 475  73 370 633  37 295 891
 677 336 152 106 266 844 727 486 396 628 302  19 683 585 697 738 102 695  51 369 622 819 171 543 331 169 327 180 790 704
 531 464 351  28 165 865 886 884 236 500 204 232  43 829 795 882 737 289 875 701 282 153 803  64 255 146 636  58 489 132
  86 365  53 371 758 666 398 441 885 834 308 640 158 467  24 150 514 399 328 326 894 669 786 674 194  45  68 612 808 594
 678 582  61 717 307 483 624 899 723 357 412 605 570  10  71  70  20 304 287 293 252 647 445 853  56 623 771 872 278 645
 141 416 248 471 375 658  27  62  81 779 503 377 778 353 743  31 719 796 806 846 708  66 687 592 517 161 702 139 393 340
 521 491 798 345 337 459 334 580 668 566 301 700 550 770 283 725 216 466 600 198 211 256 426  26 507 421 335 799 359 267
 529 209 450 664 898  67 477  21 151 280 400 338 330  42 783 495 845 863  85 257 367 890 212 607 663 387 641 408 341 815
 832  60 805 118 239 374 893 878 732  30 275  36 124 201 418 765 650 112 847 342 422 144 857 652 389 892 155 242 279 752
 775 524  96 785  41 237 469 554 532 324 196 348 610 726 573 437 733 310 277 530 238 333 363 343 851 768  57 665 419 401
 427 676 235 625 409 260 747  25 438 428 376 264 384 381 391 404 835 862 311 694 417 170 107 839 581 350 598 463 424 394
 296 860 632  76 314 231  89 705 159  44 679 617 228 305 261 597 556  74 766 388 603 218 191 810 372 654 880 706 682 522
 137 635 767 378 318 251 859 442  84 200 452 841 473 444 303 545 284 616  15 315 672 887 512 561 896 262 246 742 291  87
 352 714 698 571 123 436 753 358 143 455 414 629 511 298 364 537 225 619 208 490 675 569 539 129   4 133 888 484 836 360
 584 620 568 494 662 643 410 373 748 240 362 176 822 513  75 449 224 468 339 660 435 576 621 493 168 499 114  92 496 591
 534 131 579 527 763 116 487 286 519 420 741 542 498 292 243 485 128 533 439 730 185 781 203 217 881 125 126 638 707 659
 553   7 223 869 764  99 667  54 642 103 174 615 889 772 578 258 234 276 588 312 320 562  52 127 895 392 746 716 154 874
 354  32 564 403 712 586 135 710 627 510 608 794 843 671 269 699 689 547 162 593 111 319 105  35 299 827 434 259 595  23
 189 801 879 184 809 861 523 453 413 472 157 253 684 272 792 309 182  78 756 245 544 173 868 551 316 230 190 425 897   9
 233 227 729 759 855 804  47 386 690 415 109 691 205 686   3 773 385 164 104 140 776 626 115 167 873 631 546 432 724 220
 383 831 213 281 731 649 811 535 722 821 830  40 321 656 850  90 206  16 559 443  11 163 186 361 613 867  18 149 390 769
 229 366 397 368  38 540  93 774 814  39   8 156  69 634 332 793 560 870 736 454 210 688 877 653 147 604 883 148 448 587
 680 590 589 852 470 813 108 313 609 657 599 134 183 751  29 202  12 734 538 215 429 349 506 221 740 611 479 823 207  72
  83 750 431  17  22 504 214 188 407 833   1 306 508  79 720 655 782 735 692 290 788 812 644 646 745 709 451 119  59 325
 574 382   6 784 842 300 509 222 518 800 825 670 177 241 797  91 195 411   5 762 488 791 482 323 297 481 145 317 478 602
 285 271 787 606 136 247  77 837 380 693 557 549 614 713 630 160 440 193 567 505 457  50 322 703 637  48 515 777 430 329
  14 347 501 563 120 462 175 270 244 288 639 871 555 541 273 715 402 849 526 516 900  55 346 480  88 749 572 502 854  98
 828 405 249 130 848 101 685 525 268 840 661 356 122 265 447 355 824 181 651 596 757 178  46 754 460 344  63 721 100 755

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.75274e+07us (= 17527.4ms, 17.5274s)
Wall-clock time (full program): 1.75604e+07us (= 17560.4ms, 17.5604s)
Satisfaction error: 0
Number of search iterations: 7157
Number of local moves: 5783 (including on plateau: 5724)
Number of local minimum: 61 (including on plateau: 724)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 108 313 779 881 805 259 681 478 364 625 447   2 720 144 483 301 420 673 189 486 148 375  67 448 398 145 481 521 874
 518 283 409 166 260 159  38 785 279 757 479 643 644 371 320 111 888   7  89 490 586 875 269 876 845 507 637 280 761 183
 719 830 835 276 212   3 609 700 832 568   8  33 446  59  19 646 815 756 606 823  76 104 288 289 379 205 657 817 565 340
 394 627 480 811 611 235 631 291 493 341 650 494 184 515 722 523 482 488 435 357 419 198  90 462 411 388  20 456 430 877
 715 584 123 873 777 723 187 603 884  45 665 749  58 118 780 887 225 529  77 119 381 217 321 669 190 762 136 861 195  62
 442 740 322 297 617 751 500  35 327 850 210 679 790  99  74 333 368 570 339  29 487 808 315 619 595 151 809 842 306 211
  24 431 693 220 440 771 714 473  85 546 469 441 680 784 869 461 474 185 538 510 160 429 454  97 292 110 599 598 792 176
  60  53 707 860 569 663 554 674 539 467 407 857 427  12 477 226 710 194 795 689 672 799 668 120 433 112  49 188 158 376
 653 164 530 892  73 245 125 894 602 209  56 632 559 639 770 491 820 423 810 389 412 428 281 338  94 591 655 293 331 116
  96 142 207 526  40 636  41 623 787 616 896 800 506 180 465 718  51 508 282 638 682 437 317  78 702 856 852 290 299 244
 242 174 330 652 303 651 576 310 578 819 555 169 711 645 708  18 154 275 213 658  23  63 458 511 837 690 262 836 897 197
 859 337 662 783 402 758 452  37 583 621 642 540 124  16  88 885 759 575 573  52 369 171 883  47  15  86 782 358 193 863
 566 342 272 204   6 221 432 319 175 414 495 551 525 730 648 608 724 147 701  87 778 886 544 827 307 527 537 403  55 484
 196 114 391 223 772 345 891 239 695  50 302 353 560 767 318 294 797 155 128 660 793 273 240 732 589 613 278 615 796 336
 349 514 497  93 475 893 866 463 130  11 399 451 449 459 455 466 607 794 141 253 752 754 421 460 505 152 405 397 434 470
 156 305 464 472  82 256 727 122 326 499 734 450 121 871 436 468  92 549 443 712 218 579 791 705 833 879 520  10 557 138
 149  42 739 417 418 635 424 167 801 150 134 831 453 370  36 343 351 533 676 802 387  54 659 504 492 415 501 890 726 416
 789 605 392 287 558 140 100 862 406 216 350 562 396 535 600 254 541 422 713 206 126 356  43 854 236 324 728 776 352 786
 775 610  21 738 744  30 457 386  70 661 312 362 597 161  84 721 286 328 344 593 858 829   9 382 191 630 241 736 735 624
 865 222  68 844 804 347 812 202 517 425 334 532 821  46 750 383 390 314 731 300 899  34 365 255 753 224  71 476 516 215
 550 498 880 519 231 656 838 813 366 524 192 274 157 395  91 277 671 626 641 581 587 439 247 168 258 543 135 105 485 768
 230 686 580 571 788 553 826 683 284 329  83  48 400 839 373  25 214 851 227 696 186 246 709 633 564  80 438 574 252 547
 572 408 131 678 870 203 237 265  28 552 503 677 360 725 243 703 401 741  69 814 250 592 232 173 238 806 380 200 760 704
 261 847 618  95  31 153 413 444 117 263 309 298 824 647 146 849 182 489   1 840 522 361 745 208 698 878 692 594 248 742
 588 746 563 115 378 834 601  32 335 132 528 590 737 229 716 267 103 348 102 502 675 323 748 634 233 614 868  72 548 354
 699 266 895 471 107 285 143  65 691 133 898 179 234 308 567 512 264 181 803 325  66 404 855 807 816 101 536 764 367 773
 109 667 781  44 853 372 271 729 561 867 170  14 620  79 426 697 765 706 889 359 127 629  64 848 670  26 113 228 219 612
 199 687 139   5 162  57 577 296 747 882 684 509 445 769 649  98 377 828 374 304 654 393 846 582 251 685 774  61 165 316
 818 640 295 355 688 622 201 556 542 332 841 346  81 664 743 596  75 163 717 268 755 822 545  39 106 496 311 177  27 694
  22 843 178 249 363 513  13 766 257 872 585   4 604 763 798 172 628 410 385 270 129 864 733 531 534 666 384 137 825  17

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.61545e+07us (= 26154.5ms, 26.1545s)
Wall-clock time (full program): 2.61873e+07us (= 26187.3ms, 26.1873s)
Satisfaction error: 0
Number of search iterations: 11641
Number of local moves: 9404 (including on plateau: 9344)
Number of local minimum: 114 (including on plateau: 1154)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  65  48   8 527 208 103 701  60 665 284 111 841 887 335 820 658 657 832 455 855  55 603 633 570  96 412 314  57 807 848
  18  54 356 886 272 784 561 294 338 324 726 632 309 867 475 551 312   4 582 808 682  22 564 327 424 511 836 339  77 580
 681 288 685 308 538  29 534 837  21 649 663 395  33 737 604 652 383 238 672 179 114 845 767 493 196 661 242 618 125 328
 550 883 812 397 136  88 223 466 413 758 858 567  10  13 898 598 507 659 597 384 714 525  49 257 504 825 145 139 423 117
 740 195 653 707 756 560 483  43 414  83 613 647 490 200 574 480 813 379 358  53 728 556 350 815 265 172 141 801 165 281
 431 897  97 108 877 884 432 124 552 451 267 606 520 269 410 300  56 373 485 486 458 468 554 244 209 779 589 601 899  89
 298 232 680 822 297 499  41 693 448 393 189  39 443 699 229 896 563 190 463 615 214 577 776 700 697 484 389  78 529 342
 519 286 293  69 428 282 805 797 399 738 502 853 772 847 122 368 264 674 266 101 622 857 241 843 637 144   1 147 472 166
  82 878 306  25  40 319 889 704 585 695 788 154 135 654 840 691 320 184 371 210 688 450  58  70 462 872 162 231 893 759
 705 283 270 709 798 138 212 781 164 337 388 596  74 151 247 629 501 275 850 860  71  75 671 280 892 417 579 666 343 553
 228 152  14 251  91 736 581 751 157 830  19 258 365 565 852 835 881 566 240  61 429 636 642 708 285  92 476 207 722 885
 438 679 568 557 608 753 508 110 802 518 729 115 761 523  17 363 220 868 375 199  28 675 175 638  72 133 594 405 816 268
 710 344 698 869 181 378 479 169 331 230   5 419 824 192 621 204 799 814 249 662 656 271 575 191  26 648 718 605 498 149
 660 711 595 215 874 796 752 854 673 276  76 174 351 359 119 201 321 430 387 409 291 684 127 126 627 543 227 631 255 771
 453 325 846 706 213 299 757 341 573 418 839  68 742 171 367 591  46 528 471  38 392 330 426 446 791 128 794 515 795 106
 521 374 336 844 545 185 829 732 203 398  62 401 655 482 415 246 427 459 278 262 547 533 775 454 226  23 773 833 261 436
 821 100 619 348 770 467 233 347  67 225 236 634 460 505 667 332 810 296 768  27 866 287 873 310 544 715   9 717 107 355
 586 725 411 721 104 445  79 623  80  45 769 457 102 624 790  86 222 441 611 329 743 763 153 143 792  31 735 616 643 646
 120 334 252 372 193 422  32 741 664 492  15  64 719 787 394 150 766 842 625 811 703  90 803 786 559 290 163 488 435 403
 849 526 369 256 487 806  59   2 628 571 895   3 303 390 354 513 352 696 506 739 148 678 167  66 524 687 890 669 289  93
  99 245 239 620 535 243 750 250 882 888 235  95 402 301 295 702 311 216 158 879 386 305 861 617 326 420 694 765 635 161
 182 712 263 452 683 540 477 823 727 496 569 863 416 456 447 116 760  37 168 465 834 188 142 218 313 391 880 137   6 754
  36 473 130 449 512 593 170 532 817 112 340 720 517 587 562 464 198 318 650 160 259 818 602 677  84 406 746 516 531 536
  30 793 614 362 607 716 353 180  50 470 692 489 497 273  44 644 747 478  52 361 205 349 871 731 894  16 433 609 400 555
 377 689 800  51 558 831 762 491 380 539  85 317 495 357 723 408 434 610 360 785 277 381 118 404 292 676 640  20 421 234
 804 870 745 197 514 734 253 237 748 876  47 809 546 186 132 864 626 315  34 630  73 370 442 724 469 510  12 129  35 584
 819 537 123 733 783 217 461 713 121 187 755 827  98 202 279 173 155 444 541 856 668 178 134 113 777 900 146 641 248 686
 183  94 588 494 530 437  87 316 670 385 838 749 481 396 572 219 542 549 439 782 260 590 177 366  42 346 304 576 891 612
 859  24 645 254 221 224 322 345  81 407 376 592 509 865  63 274 140 789 730 333 826 109 364 875 851 780 778 211 194 474
 651 764 500 206 156   7 690 159 862 440 828 131 599 522 583 307 382  11 774 176 578 302 425 323 639 503 105 548 600 744

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.81735e+07us (= 58173.5ms, 58.1735s)
Wall-clock time (full program): 5.82064e+07us (= 58206.4ms, 58.2064s)
Satisfaction error: 0
Number of search iterations: 30804
Number of local moves: 23817 (including on plateau: 23699)
Number of local minimum: 484 (including on plateau: 2848)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 602 135 275 717 125 184 825 397 784 597 259 248 892 824 758 129 785 317 879  12 842 331  83 690  56 679 553 314  30 193
 740 844 880  57 115  64 324 759 262 639 734 247 348 189 352 852 526 883  50 442 627 272  39 251 250 665 706  47 689 662
 500 869 827 474 192 401 682 756 593 164  97  95 538 688 631 183 633 388 390 640 621 562 454 801 207 113  40 674  63 239
 405 542 800 119 334 130 779 380 675 895 504 796 628 265  44 728 843 757 237 660  76 263 147 303 537 146 413 241 683 185
 292 467 186 819 482 754 760 855  54 896 178 181 140  65 194 369 687  35 476   5 564  25 346 342 867 900 838 774 719 245
 199 595 700 792 100  87 692  70  14 840 748 315 443 882  31 750 107 718 818 246 513 701 371  69 420 596 790 673  18 217
 878 603 616 110 594 741 133 668 557   7  13 669 270 772 269 141 159 486 330 773 430 768 588 647 274 150 502 578 391 398
  60 532 363  51 124 473 711  41 177 644 316 137 708 642 407 671 426 736 859 605 356 138  34 822 392 619 105 769 751 846
 715 109 455 587 871 226 224 373 707 576 841 393 154 727 144  27 409 567 439 367 101 383 645 225 427 817  62 832 298 814
 667 255 771 375 778 672  92 623 775 286 877 549 171 232 403 166 725 136 349  89 650 575 743 830 174 464 338  37 422 291
 580 560 240 471 886 162 851 167 410  80 256 833 523 582 635 180 720 803 158 354 112 163 599  15 873 103 694 664 104 737
 288 462 361 451  32 777 179 776 114 282 322 276  81 809 600 425 807 357 318 249 624 347 651 327 550 730 861 268 389 802
 412 350 729 273 862 899 850 876  16 117 220 551  26 285 429 415  61 302 448 676 142 440 175 794 108 335 437 863 890 534
 233 519 566 484 654 579 533 515   9 713 456 271 339 481 808 400 253 238 341 244 336 874 666  29 359 898 888 201 345 283
 242 507 295 323 289 804 457 212 497 364 556 530 548 343 875 710 496 695  49 865 156 520 491 765 703  46  86 222 328 541
 864 433 423 868 362 488 470  66 252 360 485 514 424 386  21 589 894 416 499 511 744 319  77 428 394 732 399   8 630 459
 494 577 561 522 487 406 384 495 782 552 479 555 475 435 641 122 127 480 417 120 294 525 458 463 509 529 554 536  75 461
  17 284 408 102 799 733 209 419 709  68  11 891 860  19 377 483  53 501 581 726 155 820 836 313 770 206 617 572 845 131
  82 432 145 418 234  59 366 544 559 449 527 524 301 698 478 498 767 198 337 297 546 755 211 558 574 489 638 848 811 172
 613 139 661 308 223 535 306 168 477 106 161 607 340 712 724 805 355 591 387 601 227 152 634 742 453 280 157 620 573 858
  79 503 696 657 592  94 570 176 510 254 568 885 583 215 823 305 235 764 531 659 540 309  73 786 191 670 320 128 214 585
 636 569  71  88 452 218 584 277 116 446 609 821 402 421 691 260 404 299 637  98 290 678 684 735 704 381 625  42 490 787
 761 258 151 793 618 307  22 615 829 839 887   6 653 379 716 731 210 781 205 236 547 395 810  33  10   2 611 745 200 165
 492 213 834  55 219 837 466 681 606 134 304 441 261  20  23 897 231 187 705 685 739  91 789 763 528 766 622 123 287 516
 565 472 111 563 831 813  45 351 468 656 118 257 806 889 411 182 311  48 221 508 721 738 648  36 812 195 321 202 469 747
 608 788 333 746 658 300 816 264  38 266 445 699 753 358  85 365 438 149 643 197  74 893 132 153 856 169 444 866 783 196
 677 505 632 870 243 506   1 518 353 447 571 143 614 173 228 517 626 649 686 539 714   4 281 612 586 749 126 170 465 310
 368 372 121 849  28 278  58 884 723 229 835 697 795  67 344 663 545 204 722 376 203 604 857  90 326 493 160 828 414 382
 216 431 208 188 702 610 374 296 652 762 826 332 396 436 680 853  84 370 655 854 791  72 543  78 512 590 279  24 267 434
 230 190  96 385 629 378 752 293 797 847 312  52  43 521 693  99 598 460 148 881 780 798 450 815  93   3 329 646 872 325

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.4439e+07us (= 34439ms, 34.439s)
Wall-clock time (full program): 3.44723e+07us (= 34472.3ms, 34.4723s)
Satisfaction error: 0
Number of search iterations: 15710
Number of local moves: 11577 (including on plateau: 11458)
Number of local minimum: 295 (including on plateau: 1417)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 769 512 782 577  13 119 518 726 125 105 268 710 849 441  40 245 403 750 240 318 374 803 600 810 322 235 302 572 113 874
 733 397 686 140 299  11  30 146  67 786 684 546 450 519 107 592 884 802  60 481 369 377 312 463 263 850 401 799 829 432
 276 844 478 797 238 562 492 597 246 762 632 864 721 151 181 681  32 136 359 868 690  18 854 490 336 568 139 158 176 169
 552 487 381 791 313 574 772 736 398 114  36 842 287 645  50 332  42 174  27 664  51 699 352 848 458  70 808 806 486 720
 145 735  43 326 780 141 677 416 389 444 708  72 807  22 714 596 882 590 307 103 712 779 135  55 621 758 715 646  69 128
 671 163 641 511 636 615 558 653 316 539 411 542 833  34  79 330  97 476 459 356 198 570 228 323 742 370 697 477 261 729
 267 148 258 406 887 639 134  25  20 345 618 311 219 644 817 625 822 766 366 789 678 209 334 202 840 703 544 306 540  53
 598  81  94  48 776  84 575 249 689 620 755 759 259 439 368 124 757 162 825 576 660 222 685 358 379 210 541 731 110 781
 709 337 293 199 338 165  47 171 823 679  82 363 440  29 883 385 638 824 845 429 816 674 609 701 387 378 226 286 651 108
 601 182 891 421 301 513 201  98 654 496 724   4  66 698 739 838 613 111  63 154 643 468 861 561 190 170 649 705   3 897
 484 196   1 637 617 308 408 633 485 675 414 431 727 409 509 194  45 386 847 595 611 455  86 571 497 796 616 117 491 274
 309 203 488  39  80 415 341 548 471 244 826 622 880 821  19 783  96 580 506 382 832   7 149  33 722 626 257 695 792 749
 836  10 877 254 273 565 138 537 888 774 197 462 480 234 814 668  15 524 890 555 189 507 168 123 498 179 538 207 892 223
 788 271 265 805 231 185 687 761  46 543  57   6 256 870 277 547 523 743 384  44 116 872 342 899 344 269 661 407 503 813
 399 467 443 438 470 504 493 554 521 499 425 505 464 436 434 502 453 517 343 460 457 423 473 472 474 448 469 437 479  56
 400 495 738  87 260 793 442 594 867 347 520 157  23 798 447 272 680 373 329 666  37 859 264 314 324 672  65 610 217 865
 559 225 445 898 456  76 331 812 527 161 624  62 137 404 834  38 392 723 300 393 629 605 804 282 367 214 885 284 889 159
 248 765 663 270 177 894 760 465 658  93 280 557 380 553 365 545 665 489 118 292 853 206 607  73 707 243 319 160 532 578
 144  59 297 839 604 516 581  75 775 303 582 310 556 142 732 631 220 289 662 858 770 531 475 211 383 395 122 288 515 650
 820 790 599  85 569 744  35 205 218 230 320 693 361 229 526 483 862 602 133 184 129 147 694 830 551 355 628 711 589 193
 771 828 402 737 410 278 233 893 405 349  28 752  74 713 608  78 321 875 612 232 291 655 101 175 188 846 335 315 528 482
  16 266 549 192 587 461 428  95 252 728 534 281 730 253 535 876 388 186 522 767 290 588 591 700 242 871 328 204 606 449
 452 702 801 881  14 317 818 173  91 706 166  54 109 734 346 237 394 426 657 673 172 215 375 777 510 751 815 855 236  58
 180 900 152 525 784 873 688 412 104 325 623 725 696 200 648 255 878  68 247 216 794 420 427  49 239 563 371 754 391   8
  90 857  61 573 183  71  89 364 800 566 501 454 652 819 564 212 340 333 494 178 390 446 748 719 167 756 127 717 348 896
 614 656 372 360 164 659 718 863 536  77 773 550 304 115 851 262 250 153 716 155 354 417 132 579 809  64 500 763 156 593
 208 583 213 112 669 433 642 285 362 131 327 350 422 856  12 746 627 745 227 835 879 120 603 424 294 121 635 351 852 451
   5 396  92 508 886 787 827 283 514 811 418 778 584 221  88 567 275 126 753 586   9 764 682 430 740  41 466  24 419 435
 241 100 667 529 866 837 831 305 585 295 795 106 619 191 143 676 670 560 691 704 224 102  83 747  52 353 339  99 692 413
 630 860 843 530 634 376  21 841 683 768 187 647 130 895 785 195 251  26 533   2 298 357 741 296 869 640  17  31 150 279

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.5661e+07us (= 25661ms, 25.661s)
Wall-clock time (full program): 2.5695e+07us (= 25695ms, 25.695s)
Satisfaction error: 0
Number of search iterations: 11386
Number of local moves: 9229 (including on plateau: 9169)
Number of local minimum: 126 (including on plateau: 1111)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 316 280  64 651 163 259 340  76 383 685 596 194 635 767 586 472 687  57 135 732 446 482 777 633  94 494 802 168 682 859
  97 864 227 157 598 391 415 543  43 748 204 755 334 567 366 813 570 214 750 535 675 801 563 184 248 313 364 153 837 186
 389 521 840 221 114 176  75 601 831 229 183 307 210 572  24 258 506 530 108 817 529 814 379 660 795 360 115 806 762 783
  82 306 688 815 387 544 629 702 749 139 565 891 718  98  87 628 730 591  88 525 102 180 192 495 500 143 773 531  33 604
 272 557 457 112 784 196 107 805 695 546 559  74 829 827 883 863 534  60 885 151 311 371  70 327 411 738 400 244 160 287
 223 291 807  29 468 719 336 205 758 328 158 602 113 338 417 443 526 741 305 105 803 846 847 811 717 251 374  59 729 166
 300 385 335 420 838 351 704  69  79 714 615 845 793 490  91 556 312 551 505 241 856 172  32 716 701 309 271 670 321 273
 691 896 766 118 764  58 725 589 406  19 824 664 324 236 581   2 580 720 600 888 412 398 109 706 842  72 242 147  95  41
 377 179 678 341 220 623 193 373 652 169  93 110 857 610 643 886 769 299 672 226 683 491  23 613 246 656 653 555 245 380
 181 390 175 315 872  49 477  37 594 609 768 823 625 215 481 528 146 159 399 318 603 152 648 690 765  40 689 830 869  68
 590 558  25 431 282 835 884 127 887 510 595  85 422 368 723 657 331 524 278 583 281 133 355 132 260 865 697 608 206 283
  56 674 136 257  66 485 519 617 853 455 440 549 794 708 834 726 616 382 550 128 182 579 262  35 104 254  81 874 587 712
 286   5 868 667  89 775 480  84 165 170 319 654 540 337 878 304 624 516 669 447 841 352 584  18 728 240 171 676 414 614
 621 499 276 819 375 339 780  10  52 503 585 461 889 488 140 713 496 787 619 228 386  12 816 424 250 293 116 378 779 381
 833 734 270 435 174 470  15 839 357 450 844 630 433 512 434 497 129 370 507 606  73 458 753 436 483 696 445  53  86 493
 880 188 202 607  47 671 836 745 640  22 439 418  54 684 419 211 275 296  80 866 673 666 476 890 401 359 517 407  44 502
 269 344 547 873 582 810  51 149 218 776 513 224 145 429 645 209 408 711 733 467  62 302 323 222 573 632 876 569 345 508
 501 122 743 454 432 354 463 478 774 898 343 498 238 620 754  34   4 347 782 788 523 650 124  39 103 737 542 487 545 138
 396 820 593 527 692 239 646 855 225 289 292 397 148  17 736 438 177 471 430  90 742 100 453 348 796 626 288 746 402 536
 552 459 658 605 703 518 870 515 686 144 126 301   6 190 121   7 484 409 342 295  92 578 826 350 799 207 760 365 698 849
 421 832 164 747 303  21 448 492 329 267 756 852 599 809 744 310 155 879 119 277 279 384 437 231 426  38 475 561 403 757
 881 123 358 532 361 735 715 265 266 548 362 644 449  14 217 771 843 219 201 101 574 900 699 141  20 520 663 369 285 739
 693 233  36 618 363  78 216 677 825 778  61  67 178 332 427 804 356  48 203 659 533 848 212 622 213 592 541 721 781 800
 731 680 346 894 634 264 416 322 724 681 189  28 235 156 191   9 509 861 256 707 770 560 828 284 243 441 167 308 612 469
 665 566 462 641 511 137 576 298 460 575 466 372 789 862 722 195 504 464 486 413 444 294 320 790 404 522   3 263 234  77
  42 642 668 253 106 895 700 763 197 647 562 489 314  46 111 759 297 597  27   1 694 761 568 465 822  83 858 367 376 405
 173 130 899  11 897 539 134 631   8 867 330 150 161 237 456 200  30 117 812 798 333 786 537 818 564 821  31 772 637 636
 875 162 120 230 792 661 142 679  45 255 639 428 268 473  16 892 882 232 410 474  71 187 662 479 317 851 727  65 893 588
 797 290 553 709 649 452 198 392 353  99 740 252 538 705 514 131 185 752 854 655 154 208 393  96 627 791 451 638  13 326
 325 785 554  26 249 871 425 577 261 395 349 751 877 808 274 199 850 611 710 394 388  50 247 860  63 571 423 125 442  55

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.89386e+07us (= 18938.6ms, 18.9386s)
Wall-clock time (full program): 1.89716e+07us (= 18971.6ms, 18.9716s)
Satisfaction error: 0
Number of search iterations: 7735
Number of local moves: 6446 (including on plateau: 6386)
Number of local minimum: 55 (including on plateau: 747)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 899 161 496 897 534 770 758 557 724 572 204 468 580 514 676   4 620  35 239 266 598 461 105  87 651 237 532 412 234 224
 264 861 554   1 153 256 325 403 362 785 794 729 748 149 669  77 316 248 429  30 333 863 657 476 423 829 351  84 846 500
 124  71  29 548 372 494 743 184 165 706 294 573 273 827 473 700 282 137 240 824 241 760 574 218 723 581 697 803 756 103
 440 208 665 269 664 502 719 114 433 594 747  51  70 212 115 764 320 472 854 163 848 274 159 722 609 299 809 715 662  42
  62 712 837 168 787 771  20 293 113 348  94  48 817 610 180 688 223 345 171 717  95 731 792 799 759 778 270 511 401 375
 726 599  60 354 389 730 882 400 481 530 885 196 173 147  46 754 563 342 424 324 675 428 327 261 849 203 860 641 136 130
 335 523 601 699 672 344 379  27  44 236 821 145 510 291  78  81 876 558 663 298 831 386 285 877  37 851 566 297 648 556
 155 417  55 631 211 887 734 696 359 367  89 745 775  25 154 170 744 365 709 209 195 570 690  49 692 616 857   5 793 551
 578 393 226 110 893 546 205 637  79 169 250 427 666 360 864 544 751 509 742 804 202 639 540 302 538 366 111 695 126 243
 529 368 779 167 176 260 679 277 835 629 515 567 608 600 281 537 253 612  58 407 606 138 486  72  73 786 632 765 630 190
 801 225 446 125 633 584 479 896 684  99 506 340 336 795 339 875 491 358  16 680 539 102 549 247  86 721 312  67 596 588
 157 656 681 328 139 836 286 332 290 526 311 576 420 308 363 475 220  68 350 741 158 859  92 895 767 527 533 604 402 615
 289 410 313 776 816 112 304 613 777  56 183 711  85 704 652 186 162 525 571 638 392 674 561 746 343 587 244 842 142 101
  96 698 467  93 331 820 790 116 398 891 668 338 862 430 560 267 487 646 750 503  12  75 894  39  19 321 397 589 146 812
 531 505 492 458 489 495 421 513 249 459 508 455 462 477 441 288 356 450 465 447 435 466  59 434 839 437 451 490 463 480
 737 246 686 735  13 449   9 855 800 349 104 118  18   3 474 519 518 178 564 504 520 272 879 399 813 870 555 192 482 654
 364 586 802 478 416 396 217 404 453 411 673  40  91 370 628 603 415 413 391 129 258 781 749 852 452 575 406 390 284 488
  10 728 377 647  45 314 825 645 590 194 701 521 426 807 198 497 670 464 305 761 687 550 231 867 238   7 309 117 677 107
 797 334 280 528 602 141 755 179 553 230 516 381 740 471 319 900 355 106 784 174 200 395   2 569 826 705 151 710 219 593
 878  63  88 898 736  38 172 643 255 221 287 185 501 422 535 667 456 635 373 182 378 507 798 376 621 436 617 522 160 865
 322 650 585 279 485 206 388 257 886 310 347  47 405   8 753  64 595 772 307 618 276 856 330 822 207 251 811 394 443 841
 640 703 840 512 499 782  74 483 442  69 614 823 819 562 844 100  34 300 306 720 773 296 254  41 371  24 201 181 445 763
 213 326 245 409 872  65 623  61 579 685 432 808 536 265 222 622 853 661 642 262 382 454 187 271 144 716 210 619 868 283
 814 215 119 810  31 232 177 694 127 292 866 317 818 858  33 166 649 583 493 702 582 108 683 843 128 150 636 874  17 498
 374 361 889 380 780 143 791 369 543 871 444  90 387 708 337 845 552 193 883 418 301 438 850 408  76 384  66 199  50 385
 671 121 353 788 152 109 329 832 275 769 752 815 140 120 268 591 229 611 131 156 457 470 132 796 873 607   6 541 766 655
 383 830 624 164 439 659 352 122 605 188 484 718 189 884 892 847  98 869  53 357 806 135  26 881  43 175 425 318 242 707
 565 838 559 303 214 524 191 634  80 678  28 768 682 714 542 419  97 469 828 880 431 123 653  11 263 227 738 133 577 346
 725  82 315 228 259 727 691 762 545 448  57 627 295 216 805 233 597 834 148 547 890 689 693 134 460 235  23  22 660 568
  36 625  52 732 713 323 197 517 789 833 341 888  83 658 774  32 733 757 626  54 414  15 278  21 592  14 739 783 644 252

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.95903e+07us (= 29590.3ms, 29.5903s)
Wall-clock time (full program): 2.96233e+07us (= 29623.3ms, 29.6233s)
Satisfaction error: 0
Number of search iterations: 13908
Number of local moves: 11071 (including on plateau: 11011)
Number of local minimum: 157 (including on plateau: 1379)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  68 880 883 872 372 362 381 575 102 224  26 388 456 419 378 741 886 272 363 669 106 650  87 185 674 276 161 612 854 593
 856 270 698 222 540   3 787 327 264 358 110 714 829  57 812 746 530 628 182 204 492 481 841 728  79 896 625   1  43 192
 435 803 197  29 654 352 200  16 844 750  49 539 665 287 524 701 667 800 341 538 305 510 118 241 547 730 303 643 190 537
 781 457 595 663 103 369 536  84 566 488 859 351 434 422 496 454 196 293 672   4 708 188 246 870 179 717 541 548 216 479
  67 409 516 790 767  78 802 576 563 249 785 702 879 134 569 497 138 130 338 315 217 375 710   9 273 696 175 288 807 661
 549 486 836 820 465 404 100 838 186 527 873  15 251  33 304 758 808 245 393 868 447  42 743 297 339 206 207 788 323 364
 333  80 489 367 420 680 265 239 282 857 679 557 107 646 864 550   6 533 320 460 149 884 602 248 260 473 225 641 423 876
 796 342 764  81 601  97 242 688 316 603 235  39 511 309 532 116 317 863 847   8 783 731 514  51 806 466 234 472 751 400
 308 231 627 402 123 141 834 281 607 571 493 639 504  10 168  65 442 893 391 749 633 366 403 830 371 247 851 416 115 804
 111 779  53 509 724 690 586 512 522 132 757 815  86 181 700  88 283 166 825 684 554 370 208 842  93  28 558 852 564 243
 451 471 392 695 535 582 157 716 220 704 398 745 832 526 344 345 379 330  50 677 183  70 101 298 846 686 615 119 337 711
  90 253 858  74 321 545 621 613 193 515 865 824 177 475  72 470 137 617 464 763 483 340 314 348 871 229 121 395 811 656
 837 609  27 809 125 598 587 310 461 255 453  85 401 881  94 261 889 782  55  47 888 495 845 262 638 520 143 760 267 131
 631 585 590 791 164 813 384 546 199 374 580 642 178 848 226 831 215  17 647 135  77 693 443 150 531 762 655  11  20 777
 326 233 271 324 446 444 414 407 313 494 662 616 325 600 431 570 365 735 462 410 396 347 491 430 278 608 610 439 551 517
 561 146 334 356 485 505 433 280 424 552 482 151 899 559 382 238 250 373 194 387 687 765 335 441 675 467 555 450 565 584
 637 589  14 290  30 673 408 814 426 630 463 252 523 476 869 302 380 256 413 682 894 754  98 620 503  36 653  41 626 163
 153 578 577 418 891 583 623 227 719 209 513 236 664 697  52 723 727 154 827  58   2 734 862 507 567 560 218 105 258  73
  69 761 685 219 591  62 129 474 458 840 415 428 160 722 715 289 244 128 605 425 618 718 562 170 124 114 882 553 878 477
 254 877  35 133 383 771 752 210 898 343 518 709 707 581 861 797 703 406 148 657 368 350 389 284  64  13 671 237 223 173
 756 142 659 648 622 306 574  18 386 452 259 738 528 500 432 801  48 221 753 732 213 411 588 604 502  95  82 498 652 295
 681 277 331 725 240 658 572 459  63  54 120  60 156 890 795 228 594 778 169 629 155 232 542 784 162 866 556 885 678 176
 184 355  37  25 521 819 117  32 187  38 692 875  24 361 729 744 300 649 189 736 822 126 634 810 786 839  12 506 823 543
 427 469 139 774 742  75 798 468  46  99  22 826 645 159 274  91 445 689 349 769 644 635 828 855 597   5 892 312 211 230
 205  23 171 579 140 759 484 776 740 651 694 285  66 294 519 322 640 592 668 201 534  56 429  61 748 792 399 747 726 214
 152 109 377 499 478 596 448 455 307 887 296 336 676 772 301 158 850 666 257 874 145 766 165 720 328 353 737 174 354 279
 794 768 573 397 773 568  34 793 895 191   7  45 733  83 359 198 525 833 739 167 438 614 195 390 599 421  96 440 357 490
 821 544 405 113 144 487 816 843 713 318 136 508 112 275  71 624 299  44 897  21 770 417 817 394 636  40 706 501 263 780
 853  89 712 799 266  59  19 319 755 818 269 268 775 789 611 108 867  76 122 286 172 291 202 480 292 683 721 705 449 660
 329 900 670  92 849 436 412 619 860 332 805 127 212 529  31 699 385 346 835 360 632 104 203 606 147 691 311 376 180 437

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.2562e+07us (= 22562ms, 22.562s)
Wall-clock time (full program): 2.25949e+07us (= 22594.9ms, 22.5949s)
Satisfaction error: 0
Number of search iterations: 9019
Number of local moves: 7409 (including on plateau: 7350)
Number of local minimum: 78 (including on plateau: 937)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 285 463 244  19 228 330 112 816 206 204 475 200 125 191 831 769 286 597 751 208 592 557 859 705 784  90 765 636 301 886
 853 724 823 872 642 848 213  73 422 701  97 588 155 613 210 117  36 866  59 150 241 362 472 764 195 619  69 610 846 275
 576 142 868 746 402 674  55 749 199 766 425  34 480 637 507 202 727 119 182 335 800 278 214  57 319 721 858 845 581  17
 832  92 489   5 778 272 821 898 192 400 242 819 355 813 412 103 140 609 811 368 168 828 512 449 466 252 181   7 763 438
 654 622 217 640 396 593 791 491 274  22  12 460 249 741  32 720 128 616 337 587 614 308 863 792 882 513 171 218 518  54
 287 684 281 774 215 134  53 561 664 254 565 127 608 544 624 270 824 579 595 605  24 894 762  39 818 502 378  80  78 692
 586 404 394  40 390 432 735 424 771 739 545 538 643 806  87 231 205 229 615 804  76 477 678 715 364  50  84 754 633  66
 174 737 712 755 723 149 104 714 375 292 452 100   1 417 798 482 447 253 814  83 625 240 540  37 573 722 604 353 830 409
 247 336 506 596 728 493 753  33 598 517 849  81 671 367 143 434 891 655 187 304 803 360  99 366  42  58 871 462 419 646
  79 541 219 170 666 580 346 530 403  28  65 807 770 136 758 494 719 842 876 787  94 730 439 685  21 268 638 264 237 323
 445 386 809  68 745 186 430 370 498 836 659 269 681  45  10 805 691   6 585 572 501 689 317 224 338 838 245 260 649 358
 779 156 209 446 220 892 571 279 433 617 349 584 329 761 516 725 590 158 548 812  26 602 164 123 441  85 641 683 709  67
  82 630 702 374 309 458 555 141 492 559 284 707 509 312  16 118 582  95 385 750 250 875 550 562 467 575 504 495 307 870
 677 457 227 243 153 717 110   8 862 736 797 510 154 515 676 569 834 767 647  23 639 324 648  18 450 884 291 255  30 294
 527 546 408 526 406 341 461 431 529 570 534 497 621 347 519 481 322 365 525 388 532 556 290 485  11 453 539 407 487 411
 265   4  43 196 611 326 618 379 839 211 738 101 808 799 116 479 130 893 345 327 699 653 668 225 578   9 413 473 840 729
 305 414 334 339 459 161 759 256 865 262 801 299 869 295 706 359 381 535 377 216 742  13 233 567 436 773 193 523 443 600
 246 844 568 415 354 574 471 372 521 263 854 549 391 488 348 387 428 177 311 747 499 393 221 686 416 356 340 454 528 314
 743  44 106 888 131 626 881 843 138 514 536 122 289 628 665 201 102 226 257 748 465 350 850 484 670 126 184 734 732 232
 669 780 815 190 878 277 382  49 896 675 437 179 238 147 132 817 111 890 887 397 429 173 124 744  35 522 589 165 612 276
 591 175 708 520 456 543 332 810 788 313 120 695 847 310 900 857 376 105 172  71 361  75 144 293 820 657 369 203  27 877
 162 380  72 663 401 230 690 855  51 325 687 469 652 718 835 711  93 661 180 680 159 298 563 781  25 603 716 352   3 500
 333 451 306 315  63 698 635 537 852  86 223 444 478 547 207 418 874  61 166 344 829 658 667 880  98 395 267 435 423 825
 384 282 474 258 486 464 822 777 188 856 752 785 710 634  31 266 470 726  60 392 321 421  29 328 503 505 560 873  96  62
 189 883 583 704 731 318 288 163 167 693 827 645 601  20 760 476 508 524 455 145 496 113 694 222 700  70 867 405 108 160
 331 775 554 885 139 851  38 151  15 389  64 351  77 137 864 607 889 599 679 185 121 129 682 398 552 531 672 897 650 303
 133 271 542 644 280 427 696  89 410 879 373 837 194 826 861 756 296 115 148 796 426 302  52 656 442 895  41 490  74 564
 697 297  88 793 733 283 212 566 320 703 468 146 662 169 343  56 623 629 802 688 553 273 183 627 772 109  47 114 783 776
 833 363 420 234 259 239 198 251 371  91 178 782 300 236   2 248 660 483 713 768 757 789 440 342 511 740 577 448 651 631
 551 632 794 197 533 399 383 899 176  14 107 790  48 316 606 357 152 135  46 235 673 795 558 261 786 594 841 620 157 860

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.73257e+07us (= 27325.7ms, 27.3257s)
Wall-clock time (full program): 2.73587e+07us (= 27358.7ms, 27.3587s)
Satisfaction error: 0
Number of search iterations: 11551
Number of local moves: 9533 (including on plateau: 9474)
Number of local minimum: 93 (including on plateau: 1132)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 808 302 176 890 709 127 545  86 858  93 231 146 214 140 845 512 479 168 749  60 759 776 212 293 805 696 226 481 335 794
 885  74 568 744 817 626 747 178 516 398 468 395 850 671  30 135 368 264 339 698 326 419 388 839 373 103 282 478 435 101
 272 404  68 821 789 706 620 311 190 847  12 260 657 539 360 104 713 161 643 493 768 306 198 764 551 742 324  72 423 397
 484 846 259 553 442 543 849 457 149 130 343 557 369 309 687 811 685 770 160 489  38 621 385 518 223  32 648 734 340  84
 838 474 172 672 822 737 382   4 786 114 234   5 218   1 660 604 496 730 280 549 837  17 738 292 124 550 800 400 374 605
 739 726 476 697 732 810 878  34 572 209  16  87 629 733 600 318 520  41 325 279   6 136 662 710 688 208 139 664  56 825
 266 348  40 321 195 665 812 656 867  15 274 793 650 197 616 179 729 268 185 618 142 751 180 862 247 265 625 860 758 131
 267 542 244 632 405 433 270 719 554 349 206 791 856 330 310 540 864 723 449 113 715  62 654  77 575 655 350   2 573 255
 757 346 534 305 147 145 623 585 683  18 577  35 566 701 668 635 276 351 610 735 242 875 336   8 287  94 376 848 707 445
 589 525 438 563  53 677 158 669 210 870 100  54 465 471 246   9 765  63 611  39 295 888 675 592 866 627 380 619 227 771
 555 148 679 294 574 652 686  59  22 157 225 578 561 613 314 286 167 537 766 519 676 110 495 413 511 464 556 429 889 580
 508 597 684 173 315 818 607 824  97 548 144 301 123 646 717 460 753 485 441  13 828 183  47 661 424 239 112 446 647 674
 477 571 253 731 569  57  29 874 802 564 407 570 207  66 359 541 514 462 492 530 642 202 510 502 443 459 702  95 362 523
 841 873 238 105 896 299 186 772 414  21 816 188 638 700 196 261 608 634  28 387 588  55 777 872  58 689 418 163 121 673
 506 722 472 328 245 633 108 486 801 631   3 432 307 393 718 366 865 720  50 799 475 285  75 211 513 155 269 586 653 708
 220 615 412 383 583 344 410 375 345 466 329 451 547 682 300 898 402 527   7 487 327 372 448 503 399 454 617 779 334 499
 378 215 796 692 320 727 430 663 515 254 836 724 109 133 552 278 450 640 365 644 171 143 773 882 126 141 213 191 745 409
 199 641 406 425 497 137 461  49  64 262 439 884 403 224  14 201 871 354 248 750 120 785 576 203 855 651 755 844 364 833
 162 558 792 417 229  96 134 312  48 624 565 371 535 894 427 778 177 480 690 775 614 609 694 297 153 232 488 795 458 111
 159 200 740 667 712 851 829 500 505 601 704 832 444  99 243  65 165 256 803 249 491  51  82  80 807 284 456 337 622 681
 296 490  98  19 118 546 138  31 257 820 819 467 277 396 598 361  27 230 895 813 291 728 879 645 313 736 859 119 893 356
 370  10 593  42 756 271  44 341  85 603 897 880 636 769  70 363 289 241 252 473 900 233 881 725 612 584 401 507 581 106
 129 835 342  46 316 381 782 453 436 877 392 680 128 470  24 787 529 797 303 298 869 691 482 377 115 842  79  73 754 228
 154 763 386 204 521 602 630 283 809 659 716 216  43 562 831 184 522 606 559 331 189 415 420 273 288 767 531 752 182 117
 437 748 595 304 358  91 236 567 333 411 826 408 355  92 854 741  52 649 533 258 591 861 221 250 181 528 699 746  89 501
 116 222 863 166 150 169  45 628 876 452 806 721 798 353  90 639 152 536 762 783 463 714 352 379 666  76 899 235  81 323
 526 205 174 504  88 389 421 804 781 868 538 240 384 434 517 788  33 102 760 175 219 455  67 784 830 852  69 251 670 587
 853 319 367 582 217 263 447 431 394 440 308 192 509 416 532 883 132 151 892 761 743 483 544 422 469 317 637  36 428 347
 560  71 827 524 703  25 194 774 156 357 790 599 332 887 322 498 834 891 281 275  83 596 426  61 170 886 579 780  23  11
 164 125 823 711 237 695 814 590 390 857 494 658 705 594 815 290  78 678  37 122 107 693 338  20 843 187  26 193 391 840

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.75223e+07us (= 17522.3ms, 17.5223s)
Wall-clock time (full program): 1.75555e+07us (= 17555.5ms, 17.5555s)
Satisfaction error: 0
Number of search iterations: 6893
Number of local moves: 5781 (including on plateau: 5721)
Number of local minimum: 37 (including on plateau: 700)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 790 316 633 288 291 536 340 642 487 278  83 876 469 507 721 209 283 266 111 673 789 508 221 547 495 423 722 669 248  94
 679  20 119 199 839 295 692 627 324  41  39 760 322 269 331 833 225 578 689 156 658 788 814 289 854  67 497 379 719 413
 208 585 720  60 359 307 821 511 351 402 395 521 568 566 845 584  35 556  26 738 105 443 102 530 614 392 890  96 794 391
 503 171 803 416 745  38 462 786 564 154 741 688 544 347 489 668 271 293 812 650 207 300 276  99 861 286  64 450 802  25
 677 624 824 346  10 628 768 882  98  19 640  44 159 750 456 548 240 831 782 406 454 403 609 514  70  73 427 382 254 597
 371 690 712 703 697 304 244   6 290 376  31 169 301 235 638 737 834 400 835 897 746 567 545 481  15 878 180 335 287  11
 853  65  29 176 323  18 137 506 582 728 175 358 761 502 429 793 135 888 130 749 296 849 830  57 483 363 201 622 612 865
 306 883 586 120 114 360 191 252 680 574 527 124 811  63 373 718 637 204 277  66 552 695 563   3 765 860 561 183 820 647
 140 308 417 813 279 299 352 211 104  75 486 806 557 656 353 404 389  58 147 237 699 855 476 377 840 660 618 892 116 891
 328 807 198 733 583 743 272 778 885 229 394 758 771 604 342 492 579 310 639 238  45 356 108 153 613 253 893 167 164  80
 260 852 224 471   7 444 336 810 560 188 193  84 740 727 446 581 368 355 664 709 496 570 178 162 107 631 842 126 526 858
 401 426  21 319 270 485 714  43 770 708 493 381 226 751 192  86 349 808 844 634 763  81 243 318 665 233 641 144 896 610
  52 859 779 534 378 900 436 309  36  68 724 873 145  54 598 325 685 877 133 621 762 132  62 875  48 440 435 157 442 776
 539 246 329 716 344 129  88 501 361 367 424 357 200 841 117 439 635 710 464 465  59  28 700 617 687 825 313 822 312 880
 600 393 798 870 385 256 205 595 158 705 701 513  51 518 541 437 766 732   9  23 190  13 879 887 667  32 263 542 505 281
 292 343 407 655 512 321 590 494 431 350 451 565 603 515 362 573   5 432 472 421 468 418 702 605 409 408 251 524 461 475
 607 648  40 390 262  82 510 715 298 734  89 836 458 549 591 258 785 691 236 257   1 163  27 538 767 671 264 759 731 558
  61 297 686 196 775 886 448  71 339 599 249 756 422  87 818 255 623 580 744 577 332 862 146 467  22 168 693 670  34 652
 136 874 498 449 783  78 616 239 809 657 773 522 846 438 752  49 213  91 428 396  93 151 210 529 234 872 215 654 857  53
 294 800  85 457 711 165 150 109 587 160 696 482 405 795  69 823 649 216  33 661 523 606 220 268 484 615 828 540 672 412
 889 374 871 611 815 899 553 532 370 730 787 197 161 185 317 149 143 791 550 214 608 864 713 118 528 128 170  47  74 127
 411 315  76 113 659 112  92 626 569 829 838  42 334 629 781 181 139  30 594 867 314 517 620 869 662 125 681 265 805 420
 419  56  97 460 366 519 704 843 311 477 576 832  95 430 155 414 232 138 817  12 769 739 683 717 850 372 219 666 206 341
 203 651 804 827 676 747 531 488 707 723 354 284 572 525 148 753 895  17 848 259 410 397 141 115 152  46 242 516  37 447
 602 736 535 619 131 682 675 231 110 537 856 327 480 559 847  16 663 184 473 588   4 302 195 772 520 645 134 364 425 303
 504 280 338 189 106 757 748 386 881 369 777 698 212  90 261 330 593  79 375 305 764 726 706 816  50 596 222 784 103 470
 491 459 554 275 546 630 533 337  14 194 555 166 884 142 441 333 644 433 177 227 452 455 780 589 228 509 866 387 643 571
 735 186 601  55 187 223 625 399 797 575 100 320 326 826 562 445 755 500 729 101 837 434 754 285 250 646 217 490 478  77
 799 179 383 592 678 898   8 202 499 868 245   2 851 173 273 694 282 725  24 474 653 121 380 796 230 819 415 636 218 398
 365  72 348 863 684 774 674 384 543 801 123 174 241 182 267 388 463 742 453 894 466 172 632 122 345 479 551 247 274 792

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.87497e+07us (= 28749.7ms, 28.7497s)
Wall-clock time (full program): 2.87824e+07us (= 28782.4ms, 28.7824s)
Satisfaction error: 0
Number of search iterations: 12668
Number of local moves: 9599 (including on plateau: 9540)
Number of local minimum: 199 (including on plateau: 1184)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 504 168 406 549 537 123 769 703 812 192  65 157  68 593  61 754 748 762 308 669 648 331 310  64 654 518 571 398 333 740
 865 237 382 116 713 425 900 739 360 743 886 260 673 278 122  40 474 136 607 577 410  77 172 513 364 525 721 348 588 264
 112 638 869 850 559  39 558 405 767 730 622 102   2 696 634 167 564 631 252 519 551  48 671 147  89 506 451  94 511 731
  80 480 663 193 695 446 495 207 259  98 841 404 151 872 206 263 394  96 379 884 605 574 784 629 858 516 584 190 650  19
 699 783   1 802 288 890 377 214 736  50 242 550 793 560  90 243 643 508 894 611 256  92 758 120 188  53 319 646 610 499
 429 768 184 383 279 267 335  27 118 825 617 656 602 254 794 369 832 257 195 129  33 343  85 509 582 846 742 879 852 324
 111 203 857 484 591 150 708 831 182 233 510 163 651   9 889 581 141 314 893 378  51 842 104 829 115 625 491 827 110 642
 744 897 792 275 114 606  44 391   5 682 186 303 751 345 407 589 119 211 779 694 853 597 871 494 133  18  82 737 641 155
 249 565 209 548 238 746 445 284 553 286 665 401 899 725 231 881 575 878 370 338 128 835 142 811 177 101  10 105 755 365
 300 810 771 536   8 679 290 187 166 108 684 782 282  62 402 830 149 813 601 876 579 202 198 653 702 752  37  81 552 423
 647 299 800 621 460 475 124 627 717 512 329 797 274 517  35 766 296 624  93 144 667 485 587 131 351 281 171 443 898 344
 359 461 388 680 698  84 486 297 833 449 434 561 352  38 220 244 522 414  43 715 245 735 528 350 529 487 455 683 576 649
 860 170 572 733 652 639 271 154 181 658 502 645 644 712 481 493  30  63 546 135 106 821 199  21 741 586 734  20 250 896
 675 134 616 366 121 312 814 711 247 569 514  58 570 681 223 615  97 320 442 547 637 738 847 604  42 196  28 688 520 583
 459 280 453 596  32  76 856 490 539 125 761 466 291 803 701 390 471 358 534 527 482 361 440 834 523 307 210 178 227 745
 427 430 477 505 444 836 749 469 435 152 454 395 356 497 580 467 409 408 413 530 458 418  52 412 397 422 598 895 374  56
 568 235 756 200  46 205  69 349 140 367 137 714 146 608 710 103 781 826 816 562 838 483 804 321 599 840 614 417 174  87
 809 777  54  91  59 253 724 468 875 276 109 532 542 630 863 727 448 158 441 450 524 289 786 302 465  95 384 796 126 462
  88 862 590 640 867 437 545 776 674 270 489 822 807 213   3  57 720 472 191 201 145 386 416 726 246 132 139 236 578 787
 258 316 676 798 330 173  83 818 428 704  75 538  79 219 828 180 515 251 655 476 888 218 311 887  71 795 507 633 385 420
 844 773 464 295 268 785  25 262 130 240 573 719 185 845 400 336 531 854 175 718 285 176 456 433 337 222 823 403 799 159
 165 389  47 760 716 208 690  15 693 375 859 805 533 426 503 439 273 204 339 197 801 117 212 619 806 498 770  23 169 864
 657 765 685 376 221 411 790 817 387 686 215 225 232 194 618 452 355 431 327 354 709 729 287  26 392 689 239 488 492 266
 340 419 500 372 885 592 373 315 241 261 855 436 870  12 666 874  86 635  55 248 700 457 309 661 866 234 626 229 357  41
  24  70  49 463 594  36 808 778 732 753 127 891 660 478 557  14 496 479 269 293 277 687 623 301 707 678 362 521  66 722
 595  72 189  73 877 882  29 892 566 556 381 421 636 883 470 603 535 396 217 313 325 332 216 148 791 341 272 323 757 424
 772 318 541 612  74 659 304 342 750 347 107  67 138 156  34   6 668 628 789  11 160 851 728 677 346 526 788 692 585 839
 143 691 326 554 670 662   4 306 447 697 543 230 849 334 415 432 368 555 305  60 328 380 873 775 706 843 609 294  99  17
 632 322  45  13 774 819 283  78 363 723 113  16 255 868 613 820 837 672 824 544 162 540 393 292 473  22 880 747 164 228
 100 183 153  31 705 600 567 563 179 848 620 399 224   7 759 780 438 161 763 815 664 371 353 226 265 861 298 501 317 764

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.41537e+07us (= 34153.7ms, 34.1537s)
Wall-clock time (full program): 3.4187e+07us (= 34187ms, 34.187s)
Satisfaction error: 0
Number of search iterations: 16001
Number of local moves: 11884 (including on plateau: 11764)
Number of local minimum: 289 (including on plateau: 1450)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  74 735 557  37 451 432 782  67 866 278  60 711 882 109 587 652 152 849 307 794 812  81 894 591 637 416 251 352  89  10
 599  14 329 159  15 551 890 523 722 483 462 704 172 310  48 889 184 277 610 681 744 631 537 621 444 319 148 380 335 734
 473 741  99 179 657 260 750  88 840 456 118 299 383 651 108 563 566 878 149 350 275 670 131 777 248 598 573 171 768 696
 228 858 623 663   6 680  72 513  93  32 511 748 144 721 280 124 534 885 234 765 600 814 585  80  53 770  73 767 214 845
 532 255 177 452 494   8 439 167 666 742 667 243 497  34 773 807 368  63 695 706 218 491 865 127 691 694 556 607 266 215
 119 622 733 425 321 120 575 186 199 842   4 374 820 836 689 785  51 643 668 340  33 378 539 570 538 568 396 818 231  92
 802 816 395  65  70 673 211 334  38 139 161  20 529 806 301 684 817 669 216 792 869 345 804 871 527 116 675 133 314 323
 427 787 776 791 640 544 805 204 658 799 808 154 476 189 311 503 267 285  69 221  95 304 168 268 641 823 562  31 728 181
 287 783 737 810 288 895 210 755 431 226 358 873  71 291 191 122 758 261  62 824 337  56 835 190 646 784 242 800 263 129
 899 423 290 883 644 370  66 305 237 240 700 308 330 272 828 729 257 227 322 853 620  76 315 421 701 386 252 349 601 611
 682 273 795 856 710 206 262 727 150 531 332 469 188 714  39 202 281 180 223 201 745 888 614  55 709 884 194 626 107 672
 811 173 827 302 638 756 341 525 712  22 269 379 265 829 578  54 747 117  96 479 898 781 274  64 112 516 382 316 501 751
 526 407 258 484 753 377 309 780 327  26 841  25 351 790 346 699  94 678 458 466 326 749 518 774  46  13 579 505 543 467
 366 659 413 886 441 429 365 415 384 438 394 437 460 403 495 411 872 392 401 409 286 344 449 649 472 357 390 336 364 398
 463 424 422 436 418 428 367 426 356 448 433 442 509 726 445 500 454 402 465 486 408 499 475 485 440 393 447 420 492 406
 839 592 170 625 178 860 683  11 775 209 130 446 443 229 347 474 205 504 876 123 235 690  42 822 594 730 653 137 565 328
 293 320 259 313 891 838 880 752 376 705 342 870 185   1 887 121  75 720 864 564  12 450  27 477 146 338 113 572 616 508
   3 524 549  78 502 589 541 490 417 453 574 250 642 493 519 590  90 581 464 514 487 480 512 521 515 535 506 547 530  19
  24 283 674 165 555 284 577 634 470 743 545 510 857 779 207 553 826 298 558 650 760 593 363 213 183 692  41  85 197 196
 713 103 571 360 114 435 143 831 233 430 606 232 731  82 533 271 381 771 830 604 517 249 163 481 763 174 247 772 300 875
 400  44 561 331 793 655 540 224 739 654 182  47 803 389 833 236  83 372 419 399 586 169 588 134 559 582 861 488 619 225
 455 893 239  49 697 128 843 685 602 391 754 230  21 740 583 292 698 160 746 198 256 660  30 877 324 212 457 702 297 296
 498 665 264 809 192 596  59 764  98  52 609 837  40 844 892 723 550 639 155 397 111 369 624 608  23 303  29 325 716 724
 661 605 482 193 560 151 738 140 348 859 333 847 208 387 412 686 786 405   7 126 520 855 736  86 528  36 796 359 312 353
  87 145 371 317 819   9 725 385 867 778 664  91 687 343 156 164 100   2 789 832 766  79 703 414 762 253 757 276 868 306
 166 135 158 157 576 254 245 854  58 628 636 821 707 478 279  18 548 759 788 289 629 200 388 461 195 798 662 648 132 848
 615 217 630 717  35 825 125  16 627 246 801 187 595 136 633 373 693 410 569 106 522 852 110 546  77 404 797 863 612 176
 105 147 677 834 896 244 375 688 102 142   5 567 719  28 656  61 552 647 769 141  68 597 241 632 813 584 175 671 761 618
 897 318  45 536 104 203 459 732 617 708 354 676 220 635 542 874 645 219 238  43 679 115 489 361 282  84 851  97 879 613
 471 554 434 603  57 715 138 294 507 815 862 718 580 270  17 355 881 222 468 162 101  50 496 339 846 153 850 362 295 900

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.25183e+07us (= 22518.3ms, 22.5183s)
Wall-clock time (full program): 2.25513e+07us (= 22551.3ms, 22.5513s)
Satisfaction error: 0
Number of search iterations: 9274
Number of local moves: 7646 (including on plateau: 7587)
Number of local minimum: 75 (including on plateau: 953)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 229 893 165 422 303 894 596 147 694 362 838 492  67 369 182 101 205 727 230 553 815 185  99 324 245 210 817 571 880
 130 874 275  22 660 588 677  59 271  30  95 691  66 897 804 548 866 329 137 477 173 773 595 340 633 590 390 618 831  76
 388 683 202 258 771 814 469 658 237 236 446 397 821 396 277 856 158  21 697  57 320 336 514 853 713 366 637 200  77 657
 502 898   4 383 117 861 747 493 844 793 118 175 479 627 402 439 597 280 524 168  80 177 474 827 332  58 810 468 354 484
 622 516 363 869 752 700 316 507   6 153 140 346  26 882 704 198 849  63 121  37 555 850   1  56 458 729 606 876 367 847
 581 875 878  35  19 741  64 572 811 333 476 243 679 805 141 416 308 102  85 685 216  55 871 589 799 823 801 353   5 154
 431 738 749 666 272 311 544 441 648 151 180 113 715 472 482  83 150 706 735  54 509 693  61 708 134 403  10 769 758 829
 601 600 348 401 106  16 105 176 487 669 268 194 895 671 433 619  18 795 641 350 460 143 672 583 673 560 825 224 796 186
 511 534 688 636 415 470 631 247 649  96 250  11 374 854 108 450 543 724 114 690  53 650 609 748 551 872 276 442 157 162
 563 217 661 613 231 896 204 892 503 357 837 124 122 219 254 138 759 167 452 410 598 630 864  50 855 310 537  87 279 686
 326 473 508 419 566 195 625 867 891 436 836 573 475  20 792 459  60 424 407 539 428 461 356 226 127 413 345 755 440  73
 297 540 497 617  15 687  91 522 423 780 646 550 344  31 770 228 826 576 557 274 203  24 682 305 317 652 554 767 689  51
  62  42 559 518 535 262 800 552 223 542 580 434 111 488 513 621 530 569  65 489 546 491 355 525 538 808 520 264 526 447
 295 265 593 421 209 616  13 266  69 389 289 726 696 505  82 732 536 284 184 885 789 197 766 835 259 225 868 309 863 349
 720 378 179 238   8 722 495 532 263 655 281 883 501  71 496 519 628 500 292 742 386 665 435 418 638 574 373  41 404 478
 457 791  39 380  38 464 565 695 602 466 586 663 776 721 302 438 454 765  89 624 705 485 300 406  74 409 462 120 384 255
 731 411 654 269 382 385 339 703 577 359 453 391 521 417 444 347 372  25 888 820 370 322 313 839 351 499 430 164 192 547
 188 301 608 843 323 398 395  36 174 517 629 257 352  40 797 564 716 206 286 802  75 781 828 376 414  48 717 684 287 873
 787 612 191 737 832 334 562  90 533 889 342 327 579 142 201 387  72 480 325 632 886 877 239 361 110 260 570 273 152 733
 220 328 698 214 841 109 784 132 541 746 734 283 331 777 358 772  47 465 640 321 642 234 604 144 306 240 610 667 561 166
 249 261 399 824 160 674 425  97 851 299 659 253 890 531 196 775 135 881 858 112 644 578 381 193  12 486 222 568 635 267
 782 623 178 798 899 603 859 365 213 529 252  32  70 400 865 675 360 680 592 527 246 449 100 375 392 471 170 128 626 256
 393  81 822 233 456 211 379 218 115 812 116 764 664 790  93 330 725 337 371 296 840 455 744 504 845 244  98 778 190 611
 879 125 432 208 494  44 155 647 119  33 315 819 437 709 794 139 338 651 126 860 307 719 762 232 760 816 146  23 750 676
 159 809 314 285 870 490 634 645 594 169 834 763   2 318 558  84 806 506 221 884  14 131 702  45 512 426 585 510 599  46
 343  88 298 662 156 304 483 148  49 241 584  52 171 710 199 768 498 730 743 463 740 556 163 718 620 575 181 783 833 656
 678 394 753 161 728 288  92 129 451 405 235 614 699 149 779 172 319 528 803 714 670 335 282 848 587 107  34 515 189 857
  43 754  78 653 712  79 830 723 711 591 757 846 278 136 707 643 582 607 605 104  29 429 341 545 212 467 270 103 312 368
 668   7 290 736 887 427 215 751 739 293 807 862 248 443 567 145 377 294 412  27 692 187 183  86 549  94 445 761 481 842
   9  68 364 251 639 523 123 756 774 852 408 291 701 227  28 788 785 615 818 242 786  17 133 681 420 745 813 448 207   3

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.17155e+07us (= 21715.5ms, 21.7155s)
Wall-clock time (full program): 2.17486e+07us (= 21748.6ms, 21.7486s)
Satisfaction error: 0
Number of search iterations: 9096
Number of local moves: 7458 (including on plateau: 7398)
Number of local minimum: 74 (including on plateau: 878)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 898 813 819 275 341 732 189  96 516 431 232 311 326 132 654   4 226 646 723 577 343 365 444 501 547 717 439 115 234 869
 179 797 899  99  98 701 838 666  95 252 711 220 114 535 703 580 624 110 301 688 561 336 349  38 565 366 466 291 845 488
 381 379 854 461 391 799 233 866  64 100 610 728 317 788 900 364 248 557 497 632 187 426 374 316  10 396 284 826 315 212
 848 800 491 205 398 358 499  91 147 549 338 453 204 642 867 478 101 294 243 534 514 875  71 566 255 850 373 410 785 276
 335 177 468 258 770  54 878 896 653 318 143 394  75 763 832 182 740 121 794 168 203 671 513 170 198 667 623 737 392 322
 263 605 589 759  56 825 202 745 214 842 235 122  41 584 541 802  48 411 427 483 660  39 774  24 733 731 668 181 151 760
 310 840 872 395 563  83 715 596 306 679 128 288 104 283 708 585 630 670 105  66 571 494 420 693 550 664 129 576 159 333
  74 621 486 628 520 188 755 685 458 382 709  21 768 206 480 102 359 402  79 357 504 123 707 380 614 519  63 721 814 790
 320 525 548 613 372 828 103 222 682 753 877 556 479  28 445 767 367 185   6  30 437 604   7 843 405 321 706  58 766 662
 860 617 140 498 240 505 611 433 281 277 106 305 697 296 539 787 803 849 280 160 657 215  34 450 829 244 879 119 637 167
 629  73 111 722 434 133 606 293 595  31 568 348 118 891 216 868  44 331 818 586 841 109 885  13 522 754 385 572 384 635
 247 251 383 440 355  84  92  12 798 180  69 592 883 680  50 638 262 465 518 821 778 422 669 658 546 890 564 289 149 730
 714 713 278 690 312 511 558 142 757  40 265 264 524 163 756 162 619 473 741  52 475 824  18 597 762 328 496 559 650  72
 607 678  65 570 749 485 892 612 540 194 377 599 428 515  19 817 542 598 676 401  23  49 138  97 323 895 271 857 267 231
 507 489 500 469 477 438 532 508 474 487 414 451 447 443  67 406 455 464 492 436 423 482 506 441 446 457 452 432 471 449
 344 144 337 738 652  88 804 636 844 887 107 894 334 309 172 435 858 273 600 213 171 390 554 353 641 300 127 356 686 268
 727 245 156 874 627 823 775  16  68 816 526 634 809 393 820 230 221 207 543 253 173 210 196 648 859 847   2 217 389 211
 691 209 292 112 765 729 684 363 146  89  29 530 747 531 421 412 704 718 864  81 699   8 783 562 158 510 689   3 615 371
  45 764 224 150 523 622 137 835 897 201 460 791 369 470 116 839 417 786 350 796 502 552 454   1 425  60 199 354 573 603
 429 683 361 579 773 164  35 462 285 865 346 789 651 254 297 135 863 117 537 290 299 725 856 837 136   9 880 282 521  55
 808 339 673  32 533 269 319  90 407 352 448 340 855 830 769 616 702 591 696 694 257 304 459 237 157  17 330 776  70 545
 295 378 553 347 569 274 593 415 246 649 772 834 512 851 249 418 739 876  78 744  20 192 176 386 400 131 846 674  59 239
 836 126 370 873 582 746 286 256 195 430 493 130 148  87 261 178 166 815 645 583 784 551  27 154  33 719 801 643 716 881
 793 403  51 476 509 588 152 298 609 270 303 810 141 332 601 805 362  11 229 197 761 743 659 413 463  93 661 672 279 831
 456 174 751 342 644 219 555 327 175 376 308 656 594 250 139 329 259 625 590 416 639 862 314 490 190 186 758 345 871 675
 260  42 771 302  37 560 324 602 852 736 735 191 408  43 360 698 236  94  36 710 742 833 893 748  26 734 184 724 225 409
 113 665 726 145 134 527 424 807 484 467 618 792 700 108 125  80 529  62 313 777 287 655 581 812 822 687  76 155 266 578
 227 161  61 647 538  25 238  46 528 574 889 183 404 750 442 193 861 781 882 575 241 620 631 587 886 351 567  85 495  47
 242  22 681 272 388 517 472 779 419 536 888 169 626 663 884 218 223 375 399 368 677 124 153 795 806  57 200 853 228 481
  77 782   5 544 165 640  14 720 780 752 811 120 692 695  82 387 307 608  53 827  86 712 870 705 208  15 397 633 503 325

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.14673e+07us (= 21467.3ms, 21.4673s)
Wall-clock time (full program): 2.15002e+07us (= 21500.2ms, 21.5002s)
Satisfaction error: 0
Number of search iterations: 9039
Number of local moves: 7493 (including on plateau: 7433)
Number of local minimum: 84 (including on plateau: 904)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 815  19 774 696  48 289 855 740 204 307 633 347 586 892 125 196 626 493 364 265 759  93  24 807 219 106 259 768 338 868
 253  28 511 860 391  34 587  33 763  92 261 165 591 149 820 652 205 599 547 838 783 187 708 539 877 323  81 611 485 542
 742 803  79 665  94 758 568 883 753 476  60 770 653 251 309  40  45 113  59 243 536 161 716  11 615 813 371 888 521 519
 802 817  87 319 403  44  52 693 636 117 845  91 258 378 683 520 152  90 526 300 654 278 741 810  62 442 831 779 772 333
 209 826 681  20 672 272 192 538 898 790 144 629 449 262 607 315 853 503 203 649 787 206  86 193 872  78 534 175  25 847
 407 897 748 132 157 621 408 717  23 797 524 707 674 109 614 515 669 560 535  72 698  98 372 617 201 114 593  89 778  69
 640 646 412 809 557 282 856 843 234 608  75 269 334 628  35 467  68 237 643 799 549 369 222 336 275 492 308 622 166 734
 601 468 390 650 625 710 523 274 241 226 397 747 370 754  76 687 722 729 368 211 769 590 900 465 119 479   9  84 190 141
 260 566 267 396 543 743  83   7 606 424 389 899 800 776 638 225 728 177 401  10 231 695 796 496 865 110 821  71 140 352
  32 795 861 127 202 433 545 316 342 281 365 551 546 782 425  42 154 723  46 409 580 563 221 874 824 788   1 631 701 355
 871 148 775 310 228  31  30 428 327 461 667 597 411 387 584 280 360 527 818 131 451 404 850 325 816 488 314 579 619 298
 569  39 623 537 792 647 565 286   8 605 227 594 145 857 727 598 570   3 760 292  80 684 168 700 756 362 279 588 318 136
 780 341 840 771 456 358  54 317 508 556 254 671 376 208  67 718 322 811 486 321   5 764 295 188 230 882 255 873  95 713
 530  14 178 388 495 155 138 207 762 703   2 844 822 528 423 604  74 876 414 887 216 553 581 656 481 529 603 353 483  16
 450 484 498 457 248 487 183 159 434 444 473 575 507 419 210 447 875 463 509 422 469 489 464 435 478 436 440 446 466 648
 794 328 445 431 180 439 894 825 678   4 448 642 578 502 268 685 441 142 236 123 670 522 162 525 889 266 386 413 343 256
 350 714 470 544 427 618 878 198 475 751 418 270  70 361 215 477 577 287 426 869 363 455 191  13 345 501 290 724 410 828
 514 562 709 185  38 863 337 610 761 104 793  37 377 306 247 351 304 686 808 305 115 891 186 858 288  97 635 229 668 651
 129 765 220  41 720 558 130 366 285 482 752 596 103 736 189  53 806 302 128 645 329 548 749 359 814 339 637 789 199 746
 494 786 609 173 630 791 402 512 120 691  15  58 429 252 421 555 712 582 801 460 184 583 121 244 823 694 851 283 182  57
 612  36 731 150 595  88 833 592  50 836 257 108 430 375 829 662 200 737  49 398 263 624 294 613  26 726 862 675 107 757
 135 620 432  55 680 480 725 393 561 195 385 767 249 164 346 373 777 886 785 884 146 301 320 176 848 332 233 212 841 214
 324  73 122 852 711 895 859 218 658 491 834  64 250 326 616 380 839 277 271 885 452 147 348 453  61 585  47 105 798 574
 213 459 415 490 733 677 679 367 443 735 417 462 660 297  63 116 299 632 454  77 849 661 531 349 232 405 819  43 804 134
 153 394 293 438 781 663 664 381 837 197 706  56 715 118 864 805  27 571 639 235 732 881 602  66  99 340 552 126 284 296
 458 504  21 673 406 867 356 420 533 169 835 273 395 111 550 335 600 137 589 572 688 499 866 471 102 540 517 564 399  65
 124 702 697  18 354  51 303 893 171 139 870  96 384 692  82 379 276 846 644 167 100 510 842 690 179 516 755 705 518 812
 383 331  22 750 505 158 312 194 156 313 181 879 676 659 854 880 382 291 242 554 744 163 784 101 374 830 559 246 576 416
 699 238 133 682  17 474 330 573 704 689 567 666 240 506 890 392 541 223 500 719 143 357 151 745   6 657 160 217 655 641
 172 112 472 896 827  29 174 532 344 832 721  85 437 730 738 766 311  12 264 773 170 239 224 400 739 245 513 627 634 497

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.94453e+07us (= 39445.3ms, 39.4453s)
Wall-clock time (full program): 3.94779e+07us (= 39477.9ms, 39.4779s)
Satisfaction error: 0
Number of search iterations: 18416
Number of local moves: 13072 (including on plateau: 12951)
Number of local minimum: 404 (including on plateau: 1541)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 450 121  40  37 500 364 731 891 477 464 550 120 689 150 737 872 170 635  85 532 588 106 711 226 284 577 807  91 610
 205 855 755 563 362  55 127   4 593 261 395 108 307 318 759 575 691 249 305 772 191 459 254 699 468 878 153 505 849 800
 629 518 842 240 678 792 308 169 143  80 310 554 333 795 174 839 105 102 304 208 804 340 144 634 608 223 157 801 824 857
 511 710 289 812 631 502 371 665 509 671 639 865  12  81  36 658 115 647  47 651 444 369 332  50 809 185 777 553 497  77
 401  33 116 642 767  31 841 149 154 430 601 152 530 244  13  22  71 676 835 387 404 745 178 860 321 791 867 870 578 806
 869 625  82 684 729 752 617  34 277 802 602 140 702 374 322 519 274   5  97 808 325 883  54  90 733 703 493 272 355 293
 207 466 592 669 124 713 547 353 645 155 351 846 196 131 571 228 794 707 136 372   9 200 489 701 298 851 780  72 698 614
  24 338 670 875 636 164 411 687  42 380 389 356 591 604 653 770  41 680 384 881 679 386 681 706 236  23  28 623 231 346
 110 899 388 756 726 611  11 123 668  48 491 452 217 345 627 535 278  38 815  16 750 103 637 330 660 685 818 834  49 495
 618 836  95 224 793  21 431 203 534 376 798 594 481 598 344 570 426 199 212 427 283 683 259 666  75 859 622 238 656 394
 856 370 584 434 736 562 544  39 568 177  88 100 262 179 186 858 811 641 832 107 542  14 735 766 295 615 288 357 667 302
 142 799  84 555 556 294  25 597 580 897 581 579 616 160 469 163 559 382 566 303 712   2 326 529 743 533 359 541 145 718
 189  19 239 663 728 646 273 599 296 621 183 845 565 850 104 287 721 494 821 829 339  35 871 290 118 819 309 484 210  68
 437 451 368 392 590 820 895 893 549 751 863 420 109 520 738 146 486 230 747 352 421  87 247  61  27  20 790 490 360 255
 405 275 862 446 492 422 336 285 454 439 429 461 465 472 286 435 462 281 117 661 523 498 805 648 582 447 483 467  29 548
 187 609 782 765 458 838   8 423  73 744 119 377 516 633 433 443 168 787 478 488 258  56 557 112 385 263 619 761 471 704
 413 696 396 758 397 337 415 375 406 383 693 379 417 400 655 438 428 453 419 363 442 378 410 408 414 398 373 416 643 412
 576 271 769 512 664 182 162 675 229 180 640 662 365  18 866 366 843 381 732 473 161 730 763 220 167 432 546 192  94 644
 204 334 300  15   6 613 771 508 778 587 700 335 686 517 524 888 349 276 628 101 833 606 695 499 561 350   7 513 299  32
 128 279 470 324   3 399 514 789 854 569 873 402 768 267 246 674 456  70 424 317 739 742 583 297 803  78 137 172 882 256
 697 754 190 282  79 358 828 391  46 341 268 781 460 596 659 506 638 510 692 425 266 543 884 141 600 201 132 313 485 449
 796 783 605 306 250 222 455 552 264  63 354 197  53 113 760 206 864 734 148  65 774 251  64 853 725 657 874 779  96 652
 775 166 560 476 649 567 586 209 585 852 748  89 323 892 245  69 176 788  58 564 252 719 175 314 822  83 342 879 221 331
 503 233 269 114 528  74 603 270 814 202 393 672 762 827 885 526 237 898 156 830 877 573 572 195 441 311 130 241 320  59
 253 539 232   1 301 257 837 722 887 840 173 280 650 181 343 292 757 717 776 525  51 746 538 418 211 810 457  45 125 551
 880 184 896 134 135 741 727 868 193 347 147 327 785 677 265 151 773 243 111 291 198 545  76 235 724 122 540 688 715 797
  98 218 482 620 329 225 312 390 234 694 723  92 436 409 817 630 158 848 831 624 216 361 720 480 753 740  30 260 537 248
 844 188  99 328 129 159 816 536 749 531  67 886 889 213 690 219 475 139 522 709 133 574  86 682 348 507 607  17 784 589
 632 138 705 823 407 764 165 813  60 214  66 527 847 786 194 708 171 558 242 227 861 825 826  44  43 126 504  10 714 515
  26 479 673  62 595 894 215 463 440 403 367 487  52 626 501  57 316 612 445 654 496 474 448 876 319 521 716 315 890  93

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.44873e+07us (= 24487.3ms, 24.4873s)
Wall-clock time (full program): 2.45208e+07us (= 24520.8ms, 24.5208s)
Satisfaction error: 0
Number of search iterations: 10563
Number of local moves: 8503 (including on plateau: 8443)
Number of local minimum: 133 (including on plateau: 1011)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 899 245 336 862 397 366 484 657 143 232 385 822 890 431  38 271 166 296 612 518 491  56 723 545 162 734 786 108 426 434
 866 259 597 596 498 208 787 496 307 181 760 855 798 120 206 125  34 738  13 141 598 857 732 197  29 444 630 709   7 727
 170 276 131 818 310 872 332 766 356 344  81  18 631 561 222 346 140 243 217 567 526  49 573 128 853 837 815 819 680 834
  83 750 894 795 214  97 852 370 811  31 186 363 285 700 204 308 753 412 237 368 884 883 391 832 338 343  51 474 472 134
 163 675 200 153 800 658  70 437 149 531 198 548 148 233 300 535 477 591 841 882 270 678 701 467 690 178 725 416 142 659
 291 405 100 159 864 743 619 248 509 255 685 500 224 833 881 193 618 510 457 207 681 247 830 345 719 331 419 238 396   8
 663 790 506 745 730 311 213 138  63 334 677 169 117 845 525 803 684 324 666 182 479 821 240 392  80 614 540 272 265 327
 735 541 277 239 328 320 408 664 376 112 726  25 406 687 652 828 733 298 747 337 557 205 359 286 517  52 885  75 383 757
 522  99 703  68 174 203 761 263 637 717 381 190 588  65  92 848 447 813 785 115 410 554 196 555 661 699 191 782 850 146
  39 218 686 778 649 769  10 533 695 574 399 878 839 341 628 172 256 799 303 483 537 121 242  11 627  74 292 665 133 764
 576 806 585  20  50 623 587 102 579 581  66 586 551 595 584 114 183 739 283 273 495  42 754 780 534 569  16 571 563 708
 575 748 184 539 613 600 578 577 679  28 715 546 711 362 617  47 326 105 565 253 290 572 252 209 650 772 842 212  23 325
 365 456 145  30 520 157 109 854 797 840 609 294 549 201 634 705 873 494  57 691 230  77 622 461 401 194 156 849 490 655
 284 380 251 532 814 330 682 104 616 582 887 229 111 478 372 413 278  43 523 645  15 570 127 667 880 874 497 671 306 354
  93 249 466 892 173 150 266 775 859 137 317 712 488 301 485 473 694 503 602  21 151 583  14 870 805 339 770 646 235 446
 424 464 403 470 423 513 443 455 402 448 421 439 430 407 788 417 462 438 400 463 433 386 389 452 481 436 352 608 414 454
 309 442 211 427 349 536 429 264 404 420  94  37 449 323 607 615 250 219 388 889 305 673 633 514 409 487 558 876 879 519
 258  12 807 375 351 189 302 888 886 869 550  69 731  72 544 106 826 353 177 856  40 377 674 629 371 268  55 720 898 262
 793 379 868 246 543  44 704 566  88 107 530 348 165 728 342 395 492 593 560 192 261 425 486 740 812  67 468 746   2 825
  24  91 601 188 722 688 333 836 175 707 297 829  33  95 635 538 847 274 482 282 721 767 875 589 227 653 161 524  96 225
 742 851 451 729 844 897 123 809 321 640 269 139 221 774   6 599 126  71 714 611 590  85 147 390 295 823 199 185 648 216
 511 626  41 236 176 382 895  17 718 896  98 288 796 171 741 313 289 713 155 706 865 580 113   3 215 415 683 367 762 744
 827 643 384 642 281 101 231 784 228 260 867 606  22 110 378 180 547 858  32 594 824 697 604 116 508 458 304  59 802 568
 418 804 736  64 662 552 267  84  62 387 441 756 460 789 765 737 556 475  86 724 280 771 553 528   9  48  82 445 751 223
 632 453 763 432  26 776 136 350 759 358 773 504 716 559 564 877 315 119 672 103 638 254 562 312 489 244 168 158 624 179
 698 501 357 702 340 480 835  90 527 187 167 647 135 411 361 692 152 287 335 768 792 752 843 257  61  78 293 374 749 644
 226 794 636 871 132 422 529 654 603 758 689 393 130 542   5 428 318 660 860  46  73 124  35 817 202 493 861 512 329 373
 816 234 316  89 900 355 820  53 515 783 838 299 620 220 154 502 810 656 160 314 507 669  58  36 505 676 369  79 521 641
 459 129 639 499  27 394 592 210 164 781  45 801 755 670 322 791 398 831 893 808 122  19 347 610 275 846 651  76   1 360
  54 195 241 319 605 779 118 471  87 435 364 625 516 891 863 144 465  60 693 476 450 621 440 777 710 469 696 279 668   4

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.48402e+07us (= 14840.2ms, 14.8402s)
Wall-clock time (full program): 1.48736e+07us (= 14873.6ms, 14.8736s)
Satisfaction error: 0
Number of search iterations: 5770
Number of local moves: 4810 (including on plateau: 4750)
Number of local minimum: 48 (including on plateau: 588)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 226 539 777 893 153 151 125 267 386 839 540 471 583 850 293 218 242  95 655 723 118  24 603 628 185  74 682 709 575 891
  43 831 569 223 721 763 419  27 490  41 678 393 706 881 105 478 580 434 305 873 699 672  39  81 537  25  79 641 843 339
 146 303 832 143 292 459 885 579  57 773 343 824 829 114 316 785 345 739  35 503 255 805 304 166 614 845 212 776 137  99
 341  93 131 852 751 792 480 432 876 278 367  51  58 479 605 167 812 608 646 107 523 180 899 394 717 731 826 184 101  34
 834 718 420 694 134 426 254  50 300 748 624 543 695  17 675 333 463 645 195 162 350 707 383 644 287 743 412 280 268 511
 138 310 595 469 774  21 514 470 509 814  96 322 858 182   7 563 780 630 431 897 825 362 332 230 203 796  30  63 414 880
 148 282 704  23  76 275 730 710 458 453 601  90   3 631 686  19 238 633  12 794 168 680 833 767 623 827 725 265 306 755
 421 533 684 688 747  33 642 199 253 719 277 135 441  68   4 192 149 890 900 621 617 752 647  89  26 387 616 756 611 418
 690 150 604 263 841 440 818 505  65 762 103 516 102 172 427 572 636 753 189 266 154 632 517 855 872 348 433 161 312 357
 823 847  20  67 344 119 618 236  54 629 285 663 558 294 894   5 197 764 653 786 586 373 869 302 298 612 734 408 364 113
 797 452 365 671 437 666 156 132 429 336 667 513  94 317 793 664 553 196 848 766 331 495 283 836  44 428 128  75 716 327
 474  80 742 535 444 191 404 519 728 380 531  11 800 548 175 701 200 446 571 379 791 500 389 381 462 610 241 541 256 485
 141 550 206 449 425 142  98 261 528   2 536 515 443 840 274 857 354 347 741  86 369 820 464 295 465 472 842 574 635 784
 896 351 181 801 790 403 448 866 759 538 597 627 769 665  69  48 552 124 499 581 599 112  37 703 804 159  53  32 227 225
 877 524  14 489 130 269 259 468 761 330 892 486 589 454 409 530 207  59 546 561 838  22 297 712 215 525 399 851 439 363
 243 498 284 129 895 584 681 445 323 349 328 613 856 768 355 417 249 169 674  28 377 492  47 775 497 239 554 714 496 436
  71 679 502 898 272 392 544 190 493 809 326  60  84 488 687 770 846 711 106 217 122 416 244 593  49 808 547 757 183 651
 816 863 174 874   9 504 529 430 358 410 789 401 391 456 837 290 201 390 252 209 368 482 319 696 210  29 700 534 693 301
 281 308 771 491 139 545 638 864 658 245 438 567  77 234 400  31 549 551 685 133 849 423 484 692 860  38 170 211 318 865
 315 883 397  56 378 817 187 296 643 250 342 457 737 165 109 406 501 670 291 592 518 276 570 724 615 155 634 760 656 115
 487 179 136 235 733 619 366 652 372 329 476 585  46 744 622 229 160 573 407 887 669 111 338 219 559 772 765 705 309 231
 178 140 830 819 882 334 346 194 352 853 177 738 359 144 749 639  92 654  18  40 208 606 371 494 240 568 859 822  83 726
 758 506 360 173  66 878 375 204 783 795 473 461  55 673 415 835 413  52   1 888 660 577 237  85 564  82 216 388 802 740
 590 807 116 625 650 815 233 677 258 271 447 202  62 732 405 689 821 576 398  15 247 299 828 100 126 799 702 213 257 555
 313 221 884 171 588 205  61 867 527 337 779 745 325 186 861 735 886 193 289 683 321 273 477 279 870 370 157 176 648  88
 384 661 522 307  97 662 396 868 120  36 188 649 668 813 720 442 507 246 411 736 600 158 224  91 214 121 324 609 862 879
 806 340 450 147  45 787 483 455 713 578 708 123 320 512 451 803 746 104 566 152 521 385 676 475 659 232 108 376 596 198
 424 698  73 778 520 557 875 542 402  16  87 854 510 163 361 314 422 788 715 754   8 727 637 395 270 691 145  72 335 382
 844  42 374 117 722 556 222 508  78  13 353 640 871 228 591 251 750 164 587  70 562 560 811 288 810 781 565 264 607 286
  10 127 798 435 460 110 729 602 782 582 467 260 626 697 220 532  64 311 889   6 262 594 356 526 620 248 657 598 466 481

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.91634e+07us (= 29163.4ms, 29.1634s)
Wall-clock time (full program): 2.91964e+07us (= 29196.4ms, 29.1964s)
Satisfaction error: 0
Number of search iterations: 13885
Number of local moves: 11269 (including on plateau: 11210)
Number of local minimum: 126 (including on plateau: 1319)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 670 893 321 129 769 900 805 334 606 770 103 249 621 262 118 328 386 435 340 538 204 396 139  11 628  56 821 808   6 869
 866 634  99 323 445 787 772 789 646 807 561 111 663  54 430   8  71 391 637  59 218 150  61 833 459 211 117 828 811 674
 639 347 851 452 749 145 766 365  15 224 344 707 776 607 241  13 553 722 133 381  50 697 686 480 695 858   7 530 217 265
 586  87 126 203  31 336 818 801 389 252 725 744 235  53 751 447 533 196 740 713 222 655 692 187 699 576 441 486 585 206
 548 179 138 743 641  63  80 706 525 788 377 880 611 572 799 405 141 524 300 463 116 498 270 830 680 402 491 151  84 510
 612 827  85 792 142 200 871  37 410 727 293 374 295 372 304 267 837 523 413 884 368 444 168 397 499 216 346 408 737 667
 624  77 796 119   2 115 736  27  86 570 490 691 457 815 816 661 682 492 460 162 813 872 101 857 810 314 135 559 131  45
 401 622 803 260 440 355 495 273 709  24 259 840 350  34 892 500 461 734 850 376 165 392 152 543  67 752 636  35 768 327
 363 132 666  46 693 783 302 565 540 385 482 689 784 728  93 891 312 156 143 439 276 514  29 581  21 193 860 601 563 685
 220 137 791 782 472 627 883 797 195 473 171  73  12 886 349 856 532 619 758 620 301 317 506 623 164 181  20 237  19 894
 248 214 555 838 730 618 337 484 197 399 308 557 864 269  90 723 199 494 496  39 419 427 854 658 299 759  83 671 414 272
 845 319 579 642 778 412 155 309 750 387 604 354 246 189 573 560 390 424 592 192 861 714 378   9 436 522 888  97 221  89
 180 823 649 264 853 228 859   5 547 582 247 536 212 239  57  40 465 268 681 809 626 659 640 311 476 748  25 843  49 594
 125 475 887  68 652 733 528 481 753 450 422 779 462 198  42 194 672 814 464  60 504 630 583 632 184 243 729 130 257 364
 205 351 253 403 562 210 190 446 406 467 704 173 335 458 762 294 516 209  96 690 425 393 761 575 849 617 591 535 554 485
 166 105 643 478  70 208 793 865 443 359 503   3 881 479 760 112 114 635 177 603 708 571 373 825 329 676  18 578 868 172
 292 698 153 512 418 664   4 454 502 638 159 255 345 169  48 710 517 417 878   1  47 227 890 826 244 867 266 885 724 705
 541 839 146 287 756 520 367 245 238 863 357 451 529 820 361 567 226  22 455 278 134 694  75 518 545 702 846 360 140 633
 407 648 847 715 110 233 102 333 832 777 870 433 122 380 251 511 281 855 219 526 527 274 469 379 497  43 448 613 731  82
 271 176 223 353  66 183 802 593 614  55 106 343 806 431 631 519 829 456 188 836 824  32 568 384 669 780 745 288 718  26
 647 331 720 739 382 175  14 283 898 120 785  52 232 580 556 741 296 332 774 817 852 488 721 158 182 432 651 113 277 167
 250 477  72  23 383 595 566 876  41 794 539 487 668 596 862 521 185 650 600 629 786 348 316  62 275 726 589 471  28 100
  79 489 597 895 662 700 136 747  74 550 848 505 215 598 186 280 574 371 775 470 577 121 254 291 369 735 128 616 513 160
 590 438 684 108 394 483  94 297 474 147 202 307 675 542 712 656 678 552 362 551 569 191 719 716 310 207 771 315  98 673
 665  95 842 657 123 404 429 325 831  51 358 148 754 342 746 644 534 587 154 449 677 388 258  92 326 107 366 544 742 877
 711 696 298 161 781 352 127 163 426 178 899 610  78 625 338 109 879 588 229 290 282 844 356 213 819 322 234 738 605 564
 835 874  81 773 599 897 149 453 501 653 225 795 400 303 509 428  33 157 284 875 687 324 416 313 398 320 104  17 703 409
 231 608 230 804 395 679  30 261 411 370 800 493  91 507  58 124 201 558 242 174 873 602 537  88 683 375 896 763 882 549
 256 645 236 660  76 841 515 767  36 415 306 546 732 609 423 584 717 318 263 170 339 615 889 289 466  44 755  10 305 688
 442 279 144 286 341  69 790 434 420 240 468 330  64 798 757 822 701  16 812 421  65  38 654 834 437 531 508 285 765 764

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.47311e+07us (= 44731.1ms, 44.7311s)
Wall-clock time (full program): 4.47641e+07us (= 44764.1ms, 44.7641s)
Satisfaction error: 0
Number of search iterations: 20881
Number of local moves: 14538 (including on plateau: 14358)
Number of local minimum: 506 (including on plateau: 1777)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 717 300  21 834 892 750 662 439  30 104 526 712 229 578 541  95 866  24 632 731 753 523 223 729 337 760  77  18 239 173
 381 375  35 390 178   5 255 724 126 732 281 111  72 299 665 370 363 821 801 143 161 880 736 844 467 852 646 708 354 740
 695 200 660 278 145 643 196  10 793 331 681 673 663 462 840 625 549 542 225 406 468 752 509 473 572 639 209 116  71  89
 245 797 860 320 788 410 799  48  11 669 894 151 622 313 577 763  55 776 199 188 525 108  20 362  49 881 641 775 152 517
 613 246 403 157 176 475 106 244 486 536 791 889 610 714 741  61  96 247  87 339 121 609 361 276 831 810 616 494 487 893
 249 421 773 849 781 208 448 395 392 640 258 416 397 441 267 378 404 367  53 422 676 385 637 652 528 400 348  65 394 871
 377 859 133 607  37  74 779  76 780 140 417 179 297  43  28 716 754 689 510 401 631 635 132 765 856 218 164 604 798 816
 687 682 366 471 796 168 438 709 212 553 490 387 224 633 786 290 582 463 388 217 231 368 703   1 569 261 303 302 826 409
 469 898 505 694   7 298 841 100 119 707 789 512 532 568 184 886 527 364 573 514 155 113 737 457 869 304  17 413 103 260
 345 688 101 756 594 114 358 559 748 483 677 671 372 227 235 284 574 203 156 109 590 626 621 458 819 321 210 655 405 556
 597 537 830 602 547 642 588 241 181 262 122 383  79 684 373 589 648  27 705 586 350 560 636 540 259 620 545 575 182  25
 531 623 838 353 341 874 256 745 252  41  80 567 194  34 349 670 818 552  15  83 728 205 579 585 814 658 690 774 263   3
 845  58 279  66 761 251  38 718 867 711 163 488 851 141 565 351 882 628 172 630 679 855  57 661 154  94 167 557 496 330
 499 307 837 233  70 335 861 435  64 230 842 253 822 772  90 166 615 107 800 629 325 115  92 503 704 571 627 897 561 153
 347 516 295 562 548 555 691 863 159 105 596 804 757 308 451  56 343 269 288 197 817 802 418 134 415  36 847 139 764 433
  33 828 273 328 692 207 617 340 558 506  31 270 443 428 449 419 326 650 446 538 501 440 455 787 144 425 584 554 436 807
 423 550 371 437 393 447 146 702 327 382 402 142 624 478 399 149 762 426 379 710 271  42 374 293 735 500 792 420 619 820
 356  51 444 601 305 431 533 427 280 699 591 611  47 900 237 674 430 389 858 659 511 323 192 747 204 795 721 201 148 150
 864 169 862 813 481 459   6 492 667 274 580 746  26 645 190 476 316 125 171 812 519 539 226  86 236 872  22 211 784 846
 214  97 309 581 175 634 137 186 489 850 315  63 656 649 767 287 131 311 865 833 876 322 823 518   8  46 870 698 206 599
 806  50 608 612 743 333  44 603 744 346 183 614 683 521 129 268 285 482 234 515 292 730 497 783 524 576 727 162 283 138
 742 755 785   2 686 720 352 888 384 213 250  99 605 668 706 697  69 887 551 238  88 254  62   4  68 291 243 825 535 848
  60 530 465 461 118 543 386 868 829 479 769 470 170 434 722 587 215 534 452 317 456 296 832 407 464 189 219 365 454 424
 332 777  40 460 875  85 751  14 647 221 429 854 883  98  73 811 120 700  59 815 680 666 653 127 563 453 600  12 240 477
 128 725  16 491 598 544 493 675 879 396  54 824 480 222 344 507 664 398 693 520  82  93 884 112 191 301 314 546 839 502
 803 242 158 130 160 895 896 618 899 809 275  84 408 498 338 782  91 644 726  67 873 177 484 232 414  52 890 310 248 312
  39 102 768 450 369 696 202 391 522  32 678 329 445 165 593   9 715 701 592 117 570 529 216 836 843 174 513 723 878 318
 147 286 749 294 713 738 376 185 228 877 508 442 195 734 657 472 466 257 411 136 135 805 766 759 277 672  75 306 651 198
 778 342 412  45 282 794 654 739 357 360 110 758 770 835 885 220  78 124 583 853 432 474 266 355 265 180 566 495 380 123
 193 504 319 638 264 187 606  81 485 827 733  13 359  23 334 857 771 808 891 790  19 289 324  29 336 564 272 595 719 685

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.81152e+07us (= 18115.2ms, 18.1152s)
Wall-clock time (full program): 1.8148e+07us (= 18148ms, 18.148s)
Satisfaction error: 0
Number of search iterations: 7111
Number of local moves: 5797 (including on plateau: 5737)
Number of local minimum: 77 (including on plateau: 694)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 445   2 697 895 150 897 890 496 171 135  14 885 170 823 147 493  50  12 107 133 884 450  47 881 861 239 561 669 411
 813 868 246 251 260 334 609 132 707 792 223 545 290 755 809  92 349  84 497 882  40 865 498 604  90 503 467 693 149  68
 505 680 836 356   4  88 816 325 153 109  71 204 864 560 371 307 773 543 413 165 851 585 463 119 577 670 765 892 281 169
 118 610 158 783 302 351 167 440 844  82 555 745 164 151 244 724 870 484 464 662 822 784  70 801 618 123 442 553  19 365
 657 819 243 161 789  65 521 578  17 513  18 331 672 824 368 182 126 675 317 643 728 554   6 776 286 253 752 323 455 863
  45 139 760 157 479 206 176 769 581 597 366 591 695 636 306 386 686 184 183 108 676 802 280 444 684 401 130 840 828 380
  86 347 233 230 838 361 715 506 340  42 674 775 834 248 421 178 140 886 732 842 566 372 143 730 207  22 639 596 714  98
 279 208 557 145  76 491 392 274  54  64 889 258 408 677 196 721 201 716 883 601   8 734 679 725 699 470 388 263 616 843
  32 739 100 195 649 634 720 837  28 359 617 666 205  36 385 772 255 767  46 786 122 713 858 112 811  74 345 743 583 326
 671 664 700 592 395 793 278 211 586 644 794 105 300 222 740 516 827 539  62  33 473 217 804 335 289 194 587  34 375 535
 528 898 797 485 876 268  27 142  81 820 582 227  58 738 144 471  79 215 878  49 600 729 654 397 795 655 241 249 129 703
 568 531 410 387 298 383 381 645 733 855  85 573 427 391 599 416 540 254 862 748 344 562 660 846 101 532 106  44 131 103
 188 189 309 899 565 422 536 663 404 519 526 848 499 245 852 186 337 642 520 750 708 172 266 701 518  30 296  38 198 489
  43 850 606 678 110 758 777 849 405 220 242  87 294 524 393 191 200 706 197 615 284 305 237 291 753 696 646 324 627 607
 466 542 486 515 475 420 478 472 508 495 492 460 494 481 507 468 446 433 443 374 453 483  29 439 458 428 431 456 451 432
 774 219 136  24 447 722 419 742 621 624 409 457 437 629  57 426 462 572 598 288 213 384 575 406 396 415 390 659 438 576
 477  75 430 476 134 737 603 355 787 448 771 551  83 469 626 530 417 319 812 500 501 620 277  52 295 261 480 517  97 815
 710 269 533 631 449 723 688 316 238 292 682 265 563 400  56 590  23 407 711 502 332 270 619 656 357  67 202 614 841 509
 790 826 751 623 128 125 190 548 214 329 465 148  13 285 764 313 605 847 358 127 314 638 704 137 829 336 869 121 736 382
 567 546 512 756 160 264 156 412 257  73 749 166 744 571 747 874 579 879   7 256 115 766 872 262  25 781  53 162 424 780
 310 683 552 452 746 584 321  60 328 569 301 893  78 117 661 632 798 102 271 333 667 522 628 364 352 818 327 537 259 250
 403  41   9 857   1 538 226 694 805 225 224  59 595 888 625 630 791 276 111 369 593 282 231 731  37 757 549 330 875 763
 229  26 894 873 556 402  15  63 425 719 441 689 275 436 177 510 637 825 228 210 350  48 283 152 685 640 702 896 588 541
 181 434 240  72 232 635 808 367 376 891 806 887 212 594 377 299  39  31 487 803 833 343 633 187 414 221 570 832 459 252
  16 193 860  91 651  35 363 814 668 311 709 712 727 267  51 304 735 378 788 399 612  95 429 527 216 559 602 482 807 114
 830 273 389  69 236  11 871 146 831 173 859 297 800 346 574 866 796 341 652 504 159 154 338 880 116 185  66 613 490 650
 461 373 770 759 665 718  93 523 199 762 120 454 779 113 175 525 418 209 564 717  99 354 741 287 544 856  61 138 348 690
 681 761 124 234 687 810 218   5 853 353 293 322 423 308 514 877 705 622 379 235 799  21 303 534 318 611 550 754 141  80
 867 163 692 394 854 839 474 398 821 817  55 698 608 589 312 179  20 435 272 360 342 247   3 658 511 370 835  77  96 529
 320 104 180 673 558 648 580 339 155 647 362 488  89 845 641 203 168  94 768 547 778  10 782 315 653 726 785 174 691 192

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.59608e+07us (= 15960.8ms, 15.9608s)
Wall-clock time (full program): 1.59936e+07us (= 15993.6ms, 15.9936s)
Satisfaction error: 0
Number of search iterations: 6338
Number of local moves: 5265 (including on plateau: 5204)
Number of local minimum: 38 (including on plateau: 671)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  36 313 524 439 183 284 113 409  84 402  91 688 683 529 509 892 196 664 765 603 358 693  83 345 173 701 873 360 700 822
 293 223 734 653 836 277 580 260 758 893 295 759 854 124   2  39 775 839 309  11 136  28  77 141 826 879 722  22 823 347
 355  59 858  55 557 120 424  67 583 817 470 283 679 155 111 789 401 363 643  31  88 885 427 129 801 344 792 812 546 871
 208 842 522 300 773 202 523 681 503 637 554  82 143 807 175 636 252 451 285 133 478 464 614 292 227 146 514 724 699 648
 621 850 109 732 466 477 663 488 816 504 878 591 130 651 564 184 299 767 263  51 884   3 222  15 616 248 235 791 135 262
 116 718 768  70 352 565 453  80  50 694  47 203 302 428 125 761 485 619 592 433 593 607 429 723 249 540 620 452 868 573
 861 219 387 101 390 502 330 331 487 511 802 855  94  43 265 555 656 811 104 138 589 426 280 704 747 574 848 469 279 157
 321 756 720 240 483 187 190 324 304  40   6 346 471 186 220 771 833 332 448 581 764 587 538 872 690 518 551 667 275 294
 602 617 608 388  19 867 269 760 881  52 625 575 776 278 405 829 389 706 404  92 153 611 525 548  97  38 357 423 415 206
 606  23 102 708 508 815 779 832 229 198 193 883 367 610 795 516 560 147 385 441 561 535 500 165  56 559  26 160 622 634
 668  54 460 350 481 238 337 432 264 467 741 552 499 319 370 185 545 411 455 716 507 639 658 796 493 568 680 123 316 191
 899 753 112  24 354 784 171 416 590 857 550  62 719 479 709 253 697 139 588 182  86 752 721 241 810  75 463 148 820  61
 547 379 221 691 755 362 556 627 189 188 348 305 414  89 846  42 131 569 256 814 757 484 632  13 638 322 334 705 519 782
 501 539 369 740 257 317 527 276 310 474 837 520 166 114 594 161 689  90 512 831 398 628 505 489 742 381 410 177 233 728
 412 480 654 515 407 880 108 748 418 434 862 874  14 383 454 215 436 435  48 727  72 787  25 845 473 549 445 298  96 421
 296 377  10 359 849 420 374  85 437 778 494 813 558 856 745 425 630 431 417 403 623 254 163 450  71 754 162 491 447 343
 660 174 666 353 351 821 158 197 306 744 395 234 584 419 894 482 671 579 391  30 595 243 465 863 371 140  79 772 498 380
 396 604 749 865  74   5 824 763 596 703 137  93 394 530 900 731 115 819 743 461  65 176 780 586 808  29 106 204 247  12
 386 472 365 497 200 835 274 475 156 356 631 168 876 736 887 442 368   1 633 657 737 476 449 121 134 400 735 341 393 314
 443 605 119 239 438 647 698 339 600 255 335 695  58 896 459 496  18 456 692 886 468 297 100 261 440 777 563  49 457 729
 566 286 308  64 490 228 231 785 674 258 333 318 311 268 271 336 272 844 567 725 384 266 781  44 828 825 685 793 562 212
 290 462 746 838 641 859 528 170 303 210 340 517 216 544 864  16  98 192 684 696 103 710 142 739 669  99 376 521 329 613
 245 640 364 661 150 152 707 209 612 127 646 444 770  41  69 650 122 218 682 676 649 783 534 179 159 774 301 624 601 726
 126 897 281 686 713 315 543 882 898 790 536 328  35  63   8  78 843 172 180 288 712 178 406 830 531 598 194 366 827 211
 513 506 181 852 840 232  20  66 214 597 107 273 399 230 788 806 325   9 799 486 860  60 673  73 217 618 809 677 397 888
 750 847 738 226 526 702 154 672 144 392 629 167 110 626 891 458 117 585 644 572 320 635  46 553 201 510 342 373 207 378
 244 541 323  57 687 804 890 609 250 132  53 615 678 797  95  37 642 571  27 818 659 270 327 875 289 798  68 877 195 287
 582  21 118 495 408 237 537 492 794 670  81 662 576 841  33 717 246 714 805 312 533  32 869 730 224 282 375  17 326 786
 430   7 599 422 128 236 751 733 413 259 665 446 870 711 225 675 853   4  45 151  34 715 655 532 766 382 645 213 578 372
 542 251 800 895 199 145 803 307 652  76 834 164 769 762 242 338 851 577 149 570 349 291 889 361 169  87 205 866 105 267

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.33064e+07us (= 43306.4ms, 43.3064s)
Wall-clock time (full program): 4.33393e+07us (= 43339.3ms, 43.3393s)
Satisfaction error: 0
Number of search iterations: 21857
Number of local moves: 16950 (including on plateau: 16829)
Number of local minimum: 317 (including on plateau: 2007)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 204 792 104 328 623 689 695 289 850 503 318  90 192 236 824 679 288 483 808  68 891 150 814 129 692 230 165 743 612  26
 783 232 186 100 825 893  39 606 840 109 710 789  10  64 711 633 512 599 522 219 596 419 520  48 386 367 299 208 616 674
  16  53 832 246 668 277 535 447 138 154 795 755  35 625   1  59 631 375 583 753 594 324 225 877  43 664 831 537 673 769
 621 467 513 272 477 597 853 496 371 112 777 365 240 500 704 221 175  30 182  82 472 659 775 837 504 525 851 460 123 254
 807 172 558 266 757 476 541 800 114 756 157 765 883 434 449 480 361 315 736 663  12 797 379 121 189 613 417 212  18 267
 577 618 119  27 286 744 101 816 798 887 860 402 683 528 725 455 414  36  13 763 626  31   7 723 258 473 391  85 351 718
 196 117 809 565 387 696  86 661 393 420 307 889 524 686 772  98 810 290 638 691 115 146 871 484 183 529 310 304 156 382
 142 672 519 652 726 581  83 717 732 231 894 678 176 780 202  11 281 487 464  71 200 770 102 116 127 398 687 355 841 820
 373 321 295 331 515 642 366 404 657 120 740 611 152 648 177 669 698 675 733 198 665 441 103 651 179 228 237 582 475 629
 507 124 252 474 377  62 561 588  91 607 646 145 847 364 505 543 667 746  74 278 482 614 334 436 701 884 779 647  50 130
 442 844 712 265 463  87 649 863 160 592 550 706 395 335  89  80  40 578  22 411 762 223 855 767 397 715 285 602 547  79
 656  73 534 589 546 338 214 243 495  67 105 261 854 600 858 554 159 149 681 608 694  15 829 341 406 326 173 857 517 773
 271 724 859 576 897 457 144 158 731 413 416 821 241  20 376 714 828 181 184 301 401 817 465 758 282 113 370 206 151 640
 253 774 187  72 427 622 238 249 861 374 653  63 531 489 635 804 437 218 311 369 845 329 644 458 748 135 655 359 283 492
 217 721 697 737 309 852 269 560 896 553 580 438  46 424 486   6  60 719  17 446 110 163 423 639 454 444 498 469 727 555
  81 389 598 233 822 167 143 523  34 867 409 462 766 211 107 428 354 812 784 521 485 754   4 604 256 566 591 433 813 298
 247 705  14 279 372 796 811 215 570 641 210  57 630 827 650 559 415  75 353 533  32 693 126 793 836 713 481  44  99 739
 363 751 394 399 352 339 788 407 418 390 383 378 764 408 400 396 343 368 410 346 358 306 778 759 564 392 601 360 268 332
 292 572 314 842 349  65 856 430   2 703 348 545 590 890 425 357 843 205 319 488 275 280 312  58 838 571 539 308 729 170
 356 316 344 895 540  95 384   5 194 735 161 284  33 801 313 879  93 680 166 333 452 562 835 760 864 709  24 881 362 459
 134  29 685 568 193 506 255 662 422 699 244 563 544  92 250 866 634  84 320 153 658 834 336 491 118 605 345 627 876 722
 826 684 510 734 180 421 490 886 549 185 439 300 494 190 270 609 508 499 848 786 132 429 162 432 287 108 431 435 155 536
 898 574 412  37 728 263  78 224  38 538 514 260 453 501  47 749 532 654 542 448 569 276 593 478 470 716 586 557 516 264
 479 248 785 445 169 168 799 239 493 209 548 220 502 216 497 761  52 456 443 567 781 471  88  54 873 461 870 730 451 440
 880  77 330 700 178 450 900 794 552 327 671 874 235  70 676 242 222 296 305 257  61 636 707 245 790 147 466 342 682 403
 720 787 892 595  76 251 738  28 323 259  96 131 742 752 136 340 882 862 405   3 805 620 637 388 875  49 509 164 325 125
 768  66 579 526   9 782 381 140 803  25  94 645 350 128 188 197 791 885 610 849 741 815 584 227  56 806 174 771 291 234
 643 527 294 148 347 297 619 750 207 530 846 199 139 141 603  45 617 632 872 624 213  19 511 518 380 229 747 830 322 666
  55 660  51 869 302 833  97  42 677 670  21 191 688 690 551 819 293 823 468 818 317 585 385 122 203 226   8 274 899 878
 708 426 137 745 615  69 802 273 106 839  23 628 776 865 888 262 575 303 702 868 171 337 111 201 556 573 195 133 587  41

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.26713e+07us (= 22671.3ms, 22.6713s)
Wall-clock time (full program): 2.27048e+07us (= 22704.8ms, 22.7048s)
Satisfaction error: 0
Number of search iterations: 9296
Number of local moves: 7772 (including on plateau: 7711)
Number of local minimum: 55 (including on plateau: 933)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 465 119 395 398 285   5 359 157 758 487  65 374 773 582 144 163 707  11 762 535 720 577 835 413 858  90 700 717 847 214
 159 864 693   7 770 230 231 497 533 827 131  69 885 897 507 308 651 769 525  60 865 274 433 205 265 677 293 108 182 600
 280 541 838  77 534 724 522 625  47 754 744 146 257 387 831 281 238 448 435 846 548 478  13 367 457 222 787 428 295 365
 697 747 390 502 232 198 763 895  12 166  48 358 196 601 320 130 475 531 669 828 110  46 779 799 322 784 411 249 500 757
 438 306 517 840 185  33 473 417 142 117 605 256 738 229 694 760 807 741   4 259 352 756 416  67 554 767 135 866 333 708
 503  53 536 243 216 753 668 821   2 206 160 701 246 803 705 774 819 399 212 178 176 616 489 217 740 786  27 209 566 691
 785 310 792 106 676 191 716 712 378  22 315 213 814  75 174 344 197  64 602 806 275 139 317 690 587 665 844 355 737 614
 443 498 240 879 832 695  74 703 147 262 842 289 850 140 224 836   6 114 748 586 319 681 109 330 558 483 380 706 203 338
 886 153  32 488 859 250 761 682 776 509 272 634 613 372 404 493 511 633 236 210 571  89 639 181 207 353 555 187 656 303
  43 824 337 542  10 869  98 311 830 813 567 294 464 492 563 167 573 469 900 562  63 220 608  97 516 397 768  29 269 820
  94 569 789 439 419 405 138 261 783 788 321 854 149 805 811 260 699 826  99  72 430 711 491 120 544 208 626 793   8   3
 253 301  96  80 270 610 530 559 722 550 386 538 547  18 771 674 539 592 604 565  30 356 172 794 666 459 537 564 591 141
 442 721 458 679 660 373 870  31 688  93 617 103 702 456 100  91 745 180 501 729 552 795 133  95 618 223 400 403 628 429
 451 654  34  45 314 632 292 861 349 545 339 889 125 812 195 556 733 201 636 177 780 412 560 685 170 596 288  49 764 371
 466 361 155 523  38 137 251 484 199 415 873 455 495 154 505 496 164 853 463 743 418 437 796 462 173 472 513 834 446 734
 800 233 606 202 165 482 460 725 751 188 383 421 132 453 622 561 441 519 823  37  88  42 477 662 672 335 868 829  84 454
 620  50 113  24 379  40  62 156 112  16 499 752 134 739 528 480 366 881 549 152 645 876 388 607 684 667 790 471 863 872
 877 298  86 580 389 557 296 107 479 623  15 670  20 798 890 161 490 325 357 237 611 360 278 578 391 572 657 589 526 698
  82 235 664 638 630 291 449 593 663  85 377 204 381 150 689 297 244  36 348 781 871 687 878 264  76 731 432 755 375 609
  79 271  83 749 406 619  14 777 145 481 692 816 714 376 343 742 122 329 105 316 683 855 856 273 299 384 728 590 659   9
 504 190 328 215 247 896 631 192 468 422 804 118 340 884 450 323 211 713 485 228 266 363  70 772 730 258 318 584 727 778
 245 894 750 661 128 642 892 200 704 839  92 393 543 241 595 126 641 652 286 436 369 326 385 867 486  54 221 121  71 655
 673 581 225 899 512 833 845 841 183 797 888  51 594 171  73 347 129 305 370 268 843 598 189 546 267  66 423 168 434 396
 603 715 898 332 723 408 425  39 312 394 649 735 520 175 324 588 624 169 123 653 143 194 302 219 427 852 553 718 514 184
 766 440 875  52 342 227 648 255 461 643 686 447 410 860 650 883 887  59 710 309 382 736  57  41 116 282 158 646 351 136
 300 331 599 362 815 470 226 346 568 354 521 837 336 151  26 424 848 627 765 284 529  55 675 524 880 148 102 327 808 277
 101 431 368 862 532 476 585  25 574  17 494 508 350 313 726 825  35 445 452 882 279 104 732  81  23 874 680 276 647 818
 637 345 307 515 364 551 290 407 759 597 640 746 283 621   1 709 401 527 218 409 775 809 263 891 234 579  44  56 111 426
 644 678 615 719 782 791 124 392 629 893 186  68 334 254 402  58  19 810  61 849 583 252 635 851 575 510 162 474  78  87
 179 802 696 857 801 127 822 444 341 612 304 576 570 506 248 658 193 287 467 518 239 671 540 817 420  21 115 414 242  28

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.47367e+07us (= 24736.7ms, 24.7367s)
Wall-clock time (full program): 2.47701e+07us (= 24770.1ms, 24.7701s)
Satisfaction error: 0
Number of search iterations: 10180
Number of local moves: 8304 (including on plateau: 8244)
Number of local minimum: 99 (including on plateau: 1011)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  41 748 495 377 194  64 533 188 380 379 896 416 655 758 706 612 373 282 800  57  83 399 324 280 802 375 879 162 593 664
 630 659 366 661 238 304 370 857 737 603 579 212 876 100 396  58  89 831  73 771 104  90 131 796  84 820  44 703 552 781
 633 317 834 149 575  87 339 548 249 525 330 386 776 594 534 172 878 577 701 870  19 440 113 155 410 270 221 376 823 614
 403 365 499 166 767 409 847  34 382 460 798 471 137 182 415 803 717 225 326 558 671 323  12 670 231 511 721 456 713 243
 193 244 273 638 810 347 130 152 229 345  51 218 611 687 860 222 528 856  11 850 573 479 419 839 205 219 714 220 869 723
 826 625 642 679 624 746 287 320 336  74 322 629 724  10 779  13 217 237  85 566 106 418 744 158 886 176 875 854 124 433
 289 844 141  75 315 564 278 788 682 309  55 793 103 808 613 672 580 454  62 864 617 281 649   3 213 505 818 530  67 543
 531 535 643 443 883 585 469 522 859  60 895 821   9 698 384 197 726 627 385   4 395 512 658 179 126 118 187 574   2 488
  80 590 189  22 392 712 449 463 757 506 302 675 731 203 773 276 833 578 569 694 313 457 608  86 697 846 228  20 262 204
 251 470 319 308 890 435 389 536 766 768  71 358 539 483 588 705 517 656 459  14 501 814 620 206 621 700  70 232 163  66
 775  49 739 297 156  33 353 861 445 492 404 177 357 554 728 338 354  47 616 442 794 733 874 547 738  88 807  50 245 422
 507 240 653  28 337  69 290 667 116 256 112 845 763 715 447 272 246 674 260 572 641 293 538 412 858 314 329 762 743 556
 760 708 673 148 132 862 778 899 813 532 181 371 368 234 452 745 394 298 427  53 545 795  72 519 145 325  65  26 360 835
 306 265 154 207 704 417 487 146 742 749 312 202 363 496 563 815 250 646 200 351 576 816 811 464  68  27 581 494 421 882
 473 527 806 490 513 444 521 428 466 491 888  30 369 165 475 685 699 688  96 871 707 425 144 253 584 180 586 160  48 303
 414 223  17 683  15 184 498 214 327 710 489  94 504 291 448 735 294 750 560 288 268 524 458 787 657 797 618 400 790 478
 434 693 559 364 801 134 550 115 186 812 741 462 355 544 169 892 138   6 441 720 381  92 777 565 397 279 510 484 805 109
 286 346 295 849 628 195 102  63 178  78 411 650 227 785  52 567 751 783 900 791 884 482 241 668 362 804 174 107 426 430
 601 863 570 175 609 665 553 684 356 865 600 722 167 136  40 210 140 610 727 321 372 128 216  76 689 676 252 709 740  43
 123 853 589 541 209 819 898 269 235 390 686 747 230 117 467 261 542  42 825 274  21 439 725 873 640  31 344 555 110 660
 349 247 226 780 398 431 692 374 894 429 127  81 786 333 424 514 500 258 476  29 764 183 583 756 817 120 105 759 634 446
 301 254 730 866 224 897 691  98 719 406 663 885  39 438  18 622   1 518 255 537 465 108 318 832 114 867 651 316 407 275
 652 851 497 887  93 520 341 772  99 129 755 669 486 405 242 299 769 257 139 436 830 239 190 328 171 557 236 732 591 343
 635 168 450 595 453 619 147 383 361 843  35 516 562 159 824 770  25 143 852 413 334 461 191  37 599 648 300 729 632 631
 296  45 350 623 765 185  23 480 481 754 606 716 122 891  91 598 233 540 734 201 192 680 792 840 161 331 283 335 523 644
 561 432 111 855  97 736 352 881  16  56 472 342 451 549 277 529 711 388 359 784 838 378 836 423 508 263 420 681 150  59
 568 133 332  82 153 868 157 121 393 828  46 607 782 597 752 604 645  54 880 125 789 677 636 164 266 582 592 596  95 391
 678 455 647 408 837 259 587 307 340 119 639   7 485 474 264 285 267 503 872 311 173 841 248 135 615 437 848 170 753 551
 842 761 637 493 101 774 889 877 829  38 662 215 284 310  32  36 402 292  24 271 348 199  61 893 305 822 690 718 208 502
  77   5  79 626 602 151 515 468 142 509 387 198 654 799 702   8 696 695 401 477 211 809 526 571 546 827 367 605 666 196

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.23355e+07us (= 32335.5ms, 32.3355s)
Wall-clock time (full program): 3.23683e+07us (= 32368.3ms, 32.3683s)
Satisfaction error: 0
Number of search iterations: 15019
Number of local moves: 11190 (including on plateau: 11069)
Number of local minimum: 260 (including on plateau: 1351)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 576 272 698 830 888 598  86 645   8   6 333 209  78 666 216 895 466 423  55 836 502 206 489 319 518  35 758 567 479 858
 711 898 382 332 228 201 199 484 788  74 437 615 589 634 182 474 535 105 398  97 593 843 770 545 568 279 804 679  44  27
 799 269 500 791  68 362 513 377 413 475 524 387 496 867  21 436 401 347 778 462  75 412 418 454 388 324 208 801 442 707
 899 649 870 718 664  62  76 100 732 469  77 508 427 227 689 630 210 822 597 138 560 249 277 110 214 695 181 268 635 762
 779 281 886 897 226 248  22 604 339 823 273 460 743 152 759 283 834 306 599 288 614 608 337 459 314 757  17 286 276  45
 311 161 170 231 579  14 402 600 312 184 237 258 658 300 780 828 163 616 588 305 793 653 539 265 891 612 547 142 703 673
 715 527  51 247 119 816 684 414 853 820 626 812  31 251 213 875 594 566 415   9 346 262 372 259 284 434 207 537 405 771
 838 561 215 112 646 303 551 721  32  73  92  52 345 534 753 254  89 602 521 574 317 121 890 662  98 882 344 756 733 844
  12 156 172 154 840 813 811  95 667 264 115 883 419 800 164 331 865  33 691 578 854 710 603 149 638 322  19 476 175 706
 428 261  82 861 845 750 349 591 200 786 217 729 399 517 709  41 153 432 889 431  30 737 169 147 789 488 320 795 307  63
 137 735 389   1 443 186 754 893 473 141 826 824 499 140 278 738 654 463 304 808 129  87 782 636 440  91 825 144  10 685
 198 810 856  99 375 298 230 829 879 188 403 744 650 481 187 610 366 768   5 368 218 546 736 745 243 321 410 531 242 179
 657 847 701 360 157  59 850 239 894 134 536  16 676 678 113 430 777 241 708 451 871 478 212 108 453 185 335 697 507 145
 253 383 385  11 503 884 860 289 159 851 734  60 245  88 376  34 467 165 727 584 613 492 168 674 665 470 713 393 731 538
 441 471 681 558 581 263 483 120 274 619 162  25 553 174 424 472 835 523 827 222 741 211 136 887 373 133 486 690 628 522
 348  42 445 421 849 694 343 189  23 433 623 444 863 878 450 429 391 171 404 501 455 515 719   4 755 448 417 354 461 446
 490 881 439 233 528 656 219 139 509 390 864 266 192 435 397 457 381 877 668 325 644 562 203 848  81 456 386 260 358 371
 123 420 700 378 352 426  29 380 234 480 760 742 327 559 416 631 717 572  26 111 497 686 571 639  72 353 505 747 493 569
 122 485 280  39 819 712   2 671 351 146 663 357 699 669 652  43 438 150 118 577 687 692 774 240 379 766 364 573 407 640
 395 716 606 651 246  40 596 832 797 292 116 491 548  67 290 803  37 194 702 173 148 794 336 831 334 583 315 696  94 792
 728 155 271 739 866 532 724 837 655 693  66 852 338 622 223 232 629   7  53 557 255 197 643 406 570 787 244  20 586  28
 740 355 250  93 132 873 285 196 408 722  56 323 617 127 796 516 291 647 900 842 252  36 190 592 659 859 204 530 363 661
 494 580 621 468 166 128 235 178 807 511   3 595 773 725 544  13 601 554 590 772 328 540 506 236 769 125 688 135 784  46
 330 396 520 885 526 556 582 525 543 510 776 103  96 818 730 425 542 841 238 541 202 287  54 340 400 151 299 365 641 293
 369 802 229 876 632 896 761 575 102 563 458 316  48 313 814 220  15 221  85 764 809 302 821 726 282 682 256 318  69 191
 359 295 180 781 107 633 104 392  84 763 872  49 677 131 342 874 868 790 176  47 109 464 775 675 587 275 751 158 642 555
 341 477 143 101 160 195 482 117 705 880 609 533 585 409 370 607 329 356 270 785 723 449 447 310 748 225 683 519 660 297
  83 257 714 670 205 529 857 680 309 605 637 833 512  90  61  18  38 550 350 892  80 815  70 504 361 465 798  79 749 704
 167  65 627 367 267 487 862  57 126 106 565 224  58 752 846 620 765 549 783 183 648 384 114 193 618 495 625 869 767 326
 672 308 452 611 498 301 564 746 839 514 855 805 374 411 720 296  64 624  50 294 422 177 394 552  24 817 806 130 124  71

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.42031e+07us (= 34203.1ms, 34.2031s)
Wall-clock time (full program): 3.42361e+07us (= 34236.1ms, 34.2361s)
Satisfaction error: 0
Number of search iterations: 16731
Number of local moves: 13338 (including on plateau: 13279)
Number of local minimum: 209 (including on plateau: 1621)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 503 143 117 542 823 272 489 414 514 433 298 533 330 861 119 516 456 346 169 827 484 442 226 509 704 432 461 879  18 655
 551 602 715 841 340 649 720 510 701 896 419  14 824 268 182 680 559 375 249  58 343 149 670 412  49 359 181  35 683 481
 787 415 440 634 372 821 127 262  90 416 630  60 339 558 560 667 768  29 478 402 264 248 497 187 792 425 864 563 164 656
 428 103 853 362 550  24 123 878 844 778 813  51 167 642  23  42 779 622 603 756 115 703  64 650  86 635 418  56 684 663
 834 344  84  81 810 267 215 381 449 342 619 836 146 696 502 335 505 713 520 325 198 201 255 165 808 411 835 532 809 297
 413 616 754 326 177 562 318  55 111 247 728  33  92 605 333 396 763 815 579 788 851  50 795 575  46 204 764 774 614 131
 141 424 757 294 162 594 662 857  10 522 748 745  96 814 237 353 364 147 519 447 875 845 631  34  71 867 217 385 234 463
 107 284 308 106 726 866 652 270 832 371  61 582 552 174 278 761 894  37 417 581 755  59 677  19 568 648 206 775 360 589
 281 615  62  54 216 209 886 446 657 261 691 259 422 765 744  66 104 843  16 207 613 668 441 769  53 803 565 153 804 842
 221 322 794 349 892 443 529 232 609 537 105 314 773 409  45 246  82 315 762 137 625 459 868 601 732 450 338 244 883 199
 144  13 324 618 391 806 812 682 160 383 327 474 664 480 175 770 653 636 799 628 245 223 205 265 856  73 534 499 462 214
  30 617 156 679 709  47 361  21 884 557 485 578 466 125 831 101 227 109 570 171 777 880 530 585 790 386 694  43 218 888
 869 573 710 758 140 688 172 292 800 299  36 805 548  41 166 785 256 254  87 539 184 736  65 395 597 826 356 893 121 524
 398 895 202 759 546  88 583 431 801 606 289 116 885 802 873  80 108 210 699   7 780 332  98 681 407 279  91 753 423 293
 468 238 899 490 467  57 476 457 185 881 357 675 752 320 460 397 658 506 271 452 134 828 379 434 469  27  38 454 427 859
 236  76 897   8 475 528 394 817 388 793 133 173 189 390 437 445 712 767 421 717 253 492 135 526 692 269  63 700 729 660
 159 517 825 316  94 838 798 620 698 854 586 465  17 102 250 554 495 747 188 347 730 600 665 176 197 148 791  72 512 154
 564 222  39 898 811 772 211 186 273  31  95 588 392 280 607 829 448 610 266 612 242 351 705 760 513 399 382  93 740 596
 200 363 219 220 860 408 571 566 295 507 890 731 336 157 286 179 567 882 624 877 180 258 643 536 593 229 312 112 224 690
 358 313 819 410 591  22 243 302 632 645 321 368 672 525 723 139 742 540 420 276 816   6 369 328 300 213 426 673 527 796
 651 240 498 693  78 126 120 482 486 472 282 501 178 633 781 161 225 401 473 365 504 483 491 746 870 847 608 846 138 136
 786 654  75 203  85 725 374 307 350 697 191 378 251 287 848 889 685 274 406 403 644 549 241 301 290 627 168 592 714 521
 719 598 212 858  52 453 130 647 547  97 439 389 587  25 783 584  40 734 711 305 239 751 435 393 345 708 470 515 737  12
 797 862 494 511 150 230 604 887 192 288 429 541 553 891 384 518 309 118 766 352 444 544 110 367 500  15 733 142 404 380
 718 784   9 621 376 310 739 436 471 743 291 163 830 716  48 348 405 285 451 706  83 576 438 132  70 702 871 849 275  69
 194 400 900 487 283 833  99 822 508  26 637 257 687 377 319 329 122 641 311 863 306 782 840 599 496 574  11 334 155 323
 629 640 455 707 646 556 366 208 190 277 477 807 355 228 626 850  89 855 370 674 872   4 183   5 727  68 263 260 741 387
 304 678 331 373 749 611 113 735 158  67 724 669 479 100 671 623 231 129 874 128 337 341 555 852 170 569 865 152 151 776
 595 661 493 193 354 252 839 235 535   1 837 639 738 721 686 196 689  44  32  20  79 659 638 695   2 750 876 820   3 233
 430 303  74 124 590 458 789  77 145 488 577 771 195 523 538 676 580 531 464 545 543 296 666 818 722 572 114 317 561  28

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.98346e+07us (= 29834.6ms, 29.8346s)
Wall-clock time (full program): 2.98672e+07us (= 29867.2ms, 29.8672s)
Satisfaction error: 0
Number of search iterations: 12777
Number of local moves: 10313 (including on plateau: 10254)
Number of local minimum: 121 (including on plateau: 1286)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 695 790 144 476  19 207 501 480 507 824 568 115 701  36 603 235 110 505 804 659 321 811 214 166 492 758 199 217 494 864
 303 761 895 159 713  70 683 620 511 127   7 246 799  91 446 264 173 793 581 880 367 729 842 320  59  69 580 108 557 762
 843 472 369 878 418 759 247 866 262 397 464 855 223 454 888  41 601 296  64 374 234 559 117 288 631 595 389 232 294 405
  73 502 406 684 331 316 229 545 833  49 271 352 194 499 221 547 663 157 401 342  29 822 242 781 650 898 536 660 546 736
 643 455 395 302 599  98 630 251 181 584 812 564 156 112 874 269 165 739 275 612 508  46 851 226 392 514 813 202 525 722
 610 637 198   5 160 566 542 315  96 572 648 815 677 740 710 243 411 334 378 771 324 526 868  37 627  58 371 753 422 101
 826 598 742 776 745  43 608  71 351 375 629 209 796 211  82 823  15 497 258 100 583  90 765 485 602 719 339 506 624  47
 192 694 120 301 140 450 512 145 687 877 218 817 886 876 277 516 621 434 618 688  28 787 609 122   2 150 487 349 825  87
 379 137 715  23 475 222 899 410 310 124 666 430 298 529  17 523 463 819 203 679 845 667 306 519 530 751 337 452 774  13
  97 726 458 714 142 169 265 830 399 606 326 193 732 699 655 429 885 520 393 882 325 353 297 673  68 255 588  10 802  24
  66 178 423 311  26 865  20 295 106 707 398 871 725 668 239 737 769 136 857 534 285 415 308 734 798 273 183 712 724 152
 182 858  55  30 130 617 820 634 628 131 607 540 233 114 478 309 662 190 513 592 252 730 215 786 784 565 589 717 225 329
 682 385 622  21 894 272 274 210 861 522 642 201 579 407 299 646 253 330  72 613 577 409 254 604 791 317 656 358 537 227
 439 479 518 680 459 420 304 119 832 644 466  32 856 743 107 671 586 789 863 495 424 524  42 155 555 290 206 322 259 236
 550 503 197 489 442 775 132 768 404 414 427 346 496 847  16 481 460 441  51 474 515 844 498 161  40 426 444 867 747 260
 649 237 344 486 461 778 838 216 881 267 473  74 417 263 521 783 576 672 849 860 200 590 318 291 394  92  84 111  38 752
 451 168 640 626 891 363 341 532  31   4 782 177 632 158 493 556 307 764 465 187 807 591 435 396 801 387  53 797 212 468
 373 147 220 333 809 517 357 219  52 697 163 887 191 818 770 760  61 176 388 471 241 361 635 835 413 633 704 425 443 416
 767 205 445 638 805 248 779 636 382 777 366 359 456 174 575  77  63 364 754 126 345 693 551 362 470 619 256 645  78 500
  99 250 257 597 594 681 593 763 837 852 128 280  65 705 278   8 563  88 293 360 402 412 567 696 766 623 286 453 146 873
 189 661 692 841 196 605  85 755 143 831 440 727 162 180 138 350 721  81  12 356 689  45 862 654 850 735 772  56 135 552
 368 870 675 509 116 535 188 828 103   3  79 883 573 469 795 703 733 336 347 340 616 104 134 569 676 544 284 570 129 436
 105  89 313  75 428 698 148  80 741 403 448 900 615 773 276 421 869 543 118 354 700 332 139 757 224 314 854 538 554 706
 300 670 283 893 685 836 834 113 328 245 386   9 172  93 720  67 709 686 240 533 548 381 549 691 281  48 164 343 816 892
 652 561 731 611 821 780 149  11 889  39 806 327 238 355 133 432 377 510 803 184 653  54 482 170 447 376 744 370 391 419
 846 175 839 287  83 125 167 853 562 109 702 449  35 658 541 338 384 651 504 228 553  60 647 467 279 179 840 669 574 711
 859 390 153 527 408 154 477 756 282 186 560 528 539 483 490 531 151 810 305 141 665 875 289  76  34 749  33 746 718 600
 171  86 348 664 792 641 750 208 372 748 244 383 319 380 829 678 365  94 488 121 578 625 571 433 788 457 231 266 690 195
 794 400 827  95 708 268 808 102 674 814 585  50  27 657 462 438 614 716 890   1 879  62 123 213  57 872 596 261 230 292
 312 431 491 484  25 437 335 884 270 587 204 896 723 323 582 639 185  44 728 558  22  18 785 848  14 249 897 800   6 738

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.09885e+07us (= 50988.5ms, 50.9885s)
Wall-clock time (full program): 5.10219e+07us (= 51021.9ms, 51.0219s)
Satisfaction error: 0
Number of search iterations: 25803
Number of local moves: 18070 (including on plateau: 17890)
Number of local minimum: 638 (including on plateau: 2241)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 217 584 136 120 821 171 731 257 393 828 711 270  88 787 133 640 327 347 704 767 710 373  13 714 629 553 686 604  54 147
  42 170 760 195 413 140 448 687 323 721 548 881  49  77 493 286 662  29 515 429 445 886 449 739 252 649 736 889 441 161
 444 336 593 334 688 656 165 354 235 137 701 315 247 489 382 285  25 855 487 810 272 558 494 284 806 156 250 848 422 887
 457 599 778 130 359 167 630 207 781 232 730 269 426 813  17 398 870 744 636 661 501 277 103 192 800  11 549 380 691 107
 234 385 144   8 450 258 624  83 612 587 339 381 790 617 371 837 499  43 223 585 644 724 700 751 512 335 389 811 282 297
 741 850 807 702 849 420 854 388 468 896 287 215 305  34 552 204 684 112 212  76  87 872 719 502 544 747  73 150  80  85
 141 221 169 313 689 809 737 187 178 754 659 262 519 131 666 480   9 554  57 436 830 722 198 186 635 815 785 574 589 210
 709 330 653 540 696 608 125  60 708 356 717 419 862 288 432 180 318 615 168 216 844 516 611 745 126 831  58 176 602   6
 572 471 621 405 184 799 337 733 321 723 414 740 294  92 464 796 274 469 555  37  22 580 748 302 314 383 119 266 764 716
 158 306 812 882 222 467 495 856 765 361 440 511  39   5 304  19 808 676 106 151 100 148 698 470 256 682 823 293 883 779
 777 893 559 671 639 755 185 776 775  26 455 173 244  71 614  67 852 663 729 295  18 358 743 312  53 121 576 164 224 727
 328 537 826 303 341 803 869 652 720 261 153 619 591 231 345 695 562 590 219 446 816 139 871 218 458 138  46 116 260 362
 609 366 478 309 693 203 581  56 784 253 851  65 523 528 538 208 625 503 307 607 123 712 638  69 395 211 759 582 738 201
 369 374 379 401 350 364 399 236 408 344 894 159 245 782 772 271 888 360 443 461 400 610 387 769 394 378 412 447 410 409
 242 845 529 863 683 798 416 433 205 835 251 645 279 667 858  75 317 357 675 129 577 351 124 774 189 193 249 620  36 300
 506 473 296 742 646  84 105 220 651  31 564 637 386  44  45 325 135 316 868 866 694 650 707  89 891 579 425  40 660 840
 600 299 543 728  52 514 703 342 534 753  33 665 672 658  28 214 340 276  38 465 510 353 879 199 594 267 655 797 291 513
 535 310 890 531 563 632 539  16 451  63 240 885 546 732 384 756 530 491 483  99 545 573 111 518 152 179 713 391 157 500
  15 411   1  68 181 154 819  12 874 628 876 427 884 725 571 117  14 194 795 476 289 481 390 484 697 898 259 280 681 814
 768 791 110 466 479  20 789 634  81 275 475 428 746 588 228 865 541  41 290 263 857 525  32 415  48 792 568 320 423 657
 878 498 237 278 326 606  79 832 418 674 442 843 322  51 626 233 301 846  82 439 128  61 209 166 370 430 820 595 864 861
  78 508 509 200  94 641 177 598 435 592 146 505 349 565 404 372 556 699 763 561 431 557 241 482 490 485 308 504 460 805
 877 268 583 551 225 474 492 324 145 847  27 197 750 788 601 536 122 104 623 463 761 417 533 726 752 421 213 333 298  64
 437 191 109 758 616  96 352 770 569 142 407 338 526 355  86 860 859 804 227 532 113 343  62 715 825 818 243 685   4 673
  10 692 127 524 163 570   2 822 648 376  55 677 718 880 329 664 118 642 829 824 331  66  98  59 102 627 786 522 453 801
 838 254 403 319 899 486 895  47 472 497 842 392  97 155 900 586 603 368 488 596 230 238 496 196 597 618 182 367 292 162
 346 841 406 853 520 679 264 802 183 114 613 202 397 867 547 670   3 332  93 188 134 578 817 424 229 101 550 631 892 239
 678 273 507 521 143  30  91 690 281 766 108  21 762 311 396 566 462 783 873 794 875 190 827 780 839 132 363  90 248 115
 654 174 375 705 459 377   7 735  74 283 172 897 226 836 749 517 757 246 575  70 560  35  50 833 542 527 771 206 669 434
 255 265 175  95  72 734 605 706  23 160 365 477 633 348 680 793 454 456 452 773 668 622 567 402  24 438 149 834 647 643

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.22385e+07us (= 42238.5ms, 42.2385s)
Wall-clock time (full program): 4.22717e+07us (= 42271.7ms, 42.2717s)
Satisfaction error: 0
Number of search iterations: 20834
Number of local moves: 15483 (including on plateau: 15364)
Number of local minimum: 383 (including on plateau: 1867)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 126 178 200 651 159 188 815 725 511  14 894 897 871 261 503 136 378 321 470 460 756 175 333  33 570 343 791 444 458 854
 732 890 210 464 306 671 254 705 234  44 370 221 696 213 648  71 434 865 102 195 788  79  32 255 445 874 712 489 849 667
 300 845 827  68 691 864 526 217 490  13 293 344 658 409 778 124  59 354 438 528 763 181 656 235 316 168 558 866 713 233
 627 852 639 617 426 115 173 372 582 676 220  92 184  19 722  58 733  95 407 728 565 615 838 875 657 101 395 273 144 715
  43 466 121 429 759 501 861 820 403 633 687  88 613 561 876 122  67 629 417 594 137 167 340 312 784 576 522 128 618 241
 473 268 453 116 163 794 881 185  70  38 858 216 744 879 142 810 675   1 703 500 408 813 614 808  62 211 386 155 669 420
 472  86  60 856 847 752 201 620 311 584 721 581  26 290  77 768   6 772  39 668 758 286 323 397 567 611 491 506 457 382
 315 832 872 706 419 621 799 645 376  96 284 196 593  45 542 404 127 574 108   5 414 109 189  48 811 819 883 131 767 785
 531 695 585 248  12 577  90 800 724 569 383 586 385 720 171 138 529 605 899 274  47 437 716 622 280 125 335 837  42 553
 563 476 399 418   2 764 510 298 215 616 439 353 245 516 666 424 684 678 505 863 197 308  17 727 508  82 496 740 518 288
 477 264 814 204 877 436  66  87 534 572 349   8 730 367 422 314 141 646 552 246 550 494 761 482 294 592 504 604 595 533
 749 114 205 736 355 218 507  61 701 635 111 580 588 650 631 271 750 318 762 714 263 492  80 331 571 132 536 544 103 807
 412 212 551 683 150  34 541 562 512 634 455 483 597 174 468 145 519  30 474 839 575 230 591 374 497 540 495 642 532 564
 257  49 689 793  25 792 579 892 433 844 265 769  94 619  64 653 479 735 345 700 242 149 299 602 356 898  65 672  93  63
 421 779 390 162 698 817  23 209 231 694 164 537 486 674 431 560 786 227 652 723 307 368 448 777 320  91 123 834 499  84
 357 359  85 176 481  55 831 867 823  10 873 590 309 135 258 440 771 165 895  99 836 206  22 589 795 726 369 202 462 729
 389 243 223 841 868 275 187 327 549 884 697 682 172 226  21 548 447 199  74 600 146 882 891 285 566 745 718 161 282 387
 351 612 554 463 350 430 166 598 688  27  18 371 520 889 279   4 862 375 493 456  37 153 708 783 334 624 322 833 637 578
 632 342  24 425 120 790 782 360 459 392 780 361 398 717 396 818 878 337 822  20 267 660 384 428 152 296 339 547 272 317
 559 198 365 170 535 133 249 276 869 484 821 770 685 787 545 757   7 380  76 112 773 338  69 405 803 366 262  78 747 896
 253  75 158 857 680 539 665  35 377 851 649 229 699 471 517 330 423 328 502 140 222 754 432 291 743 626 709 105 751 104
 860 628 679 527  28 203 677 252 295 410  98 707 297  56 348 765 183 427 870 191  97 702 805 555 525 816 487 270 647 110
 292 583 485 310 543 100 192 347 686 478 214 475 887 734 704 524 450 277 169 451 530 332 256 364 775 180 388 809 515 465
 523 177 324 394 207 741 186 601  81 738 302 130 848 710 670 143 480 801  40  53 641 341 798 753 358 802 151 796  72 654
 830 607 435 411 746  46 287 278 194 573 638 117 156 219 400 880 228 776 352 630 690 812 443 119  73 182 521 663 461 748
  52 239 737 179 640 454 557 596 760 766 509 826 266 599 797 107 247 609 855 319 603 402 225 362 157 139 129 224 835 325
 363 587 825 781 846 147 413 661 283 606 160 449 452 193  83 742 538 336  41 804 498 806 664 692 118 659 259 250  15 244
 416 514 488  50 381 643 840 893 148  11 281 886   9 391 467 843 888 623 711 513 469 681 739 113  16 301 608  57  89 446
 900 556 289 379 655 373 406 190 303 415 828 346 304 260 755 774 305 719 636 237 885 693 610 236 238  31 568 326  29 269
 240 789 829 401 546 442 251  36 673 208 154 625   3 731 134 842 441 313 106 853  51 850 232 662 824 859 393 329 644  54

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.96433e+07us (= 19643.3ms, 19.6433s)
Wall-clock time (full program): 1.96759e+07us (= 19675.9ms, 19.6759s)
Satisfaction error: 0
Number of search iterations: 8209
Number of local moves: 6753 (including on plateau: 6694)
Number of local minimum: 77 (including on plateau: 785)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 103 598 672 210 371 774 599 278   4 764 248  18 734 154 484 546 162 362 655 813 708 757 502 532  10 363 586 279 361 868
 254 303 295 895 567 867  32 651 195 200 593 859 744 257 318  25 246 604 373 845 145 703  44 282 758 668 251 625  72 844
 313 161 186 526  87  65  71 889 291 394 234 310 782 892 736  93 129 880 861 141 684 891 633 779  39 322 713 238 837 338
 628 428 425 624 301  51 164  40 631 578 306 562 781 860 268 687  37 286 541  20 753 255 553  60 650 509 877 710 642 288
  82 131  12 492 277 331 871 431  34 214 372 721 888 806 500 401 790 566 830  76 459 237  63 693 639 772 329 899  48 551
 252 723 105 768 168 118 140 396 691 351 890 630 613 134  94 741 893 664 107 662 878 558 716 520 205 367 406   5 365 355
 784 266 232 544 559 130 815  92 719 632 767 609 264 181 192 711 740  58 568 733 160   8 800 660 866 155 170 483 261 356
 699 771 467 344 197 818 671 501 573 529 724 547  59 582 524 144 212 452 113 644 287  14 592 486 881 809 325 370  21 159
 810 611 585 808 560 270 267 369 530 680 298 199 635 202 326  53 531 574 863 557  64 641  54 481 304 674 342 336 825  66
 656 729 827  49 778 605 263 588 737 550 738  29 136 180 636 654 735 801 149 244 577 637 353 285  99  68 677   3 293 439
 119 858 619 374 271 817 430 842 256  52  81 128 223 165 621 527 829  46 864 522 851 595 275  78 846 208 840 456 601 121
 343 591 139 465 414 323  56  35 811 834 814 788 339 476 189 865 347 696 836 874 570 241 302 697  95 132  55 314  41 833
 176 679 327 879  24 569 876 745 627 792 780 670 332 538  75 102 127 375 393 236 330 695 663 366 172 417 191 385 153 821
 218 392 503 166 839 478 259 882 183 707 508 146 109 898 346 377 433 626 402 647 498 543 228 432 816 640 511  69 469 190
 434 473 490 787 514 515 797  85 435 281 438 308 193 702 221 426 661 458 606 440  70 427 694 446 421 437 480 487 701  88
 441 512 466 436 463 457 450 451 477 171 474 443 462 412 596 819 413 444 215 423 494 464 384 516 420 448 405 449 422 488
 299 147 273 163 746 726 706 383 507 678  80 496 581 688 590 681 802 528 545 106 399 869 174 597 403 657  23  91 535  42
 571 854 416 235 722 125 857 243 649 115 843 826 110 618 376 390 348 499 177 482 138 407 398 321 156 505 603 887 368 276
  96 274 364 704 408 751 658 111 669 117 580 565 791 284  17 187  28 589 292 382 832 120 475 783 653 472 521 748 894 150
 307 207 602 247 179 645 209 442 766 497  57 178 856 513 690 685 643  50  31 594 100 523 495 380 311 616 795 389 622 886
 217  45 233 216 519 841 686 872 151 750 124 409 359  90 743 539 770  97  43 853 404  83 608 730 828 204 638 142 471 850
 319 104 579 555 379 732 665 667 294 182  38 201 575 229 617 715 454 862 206 634 727 765 725 620 470  98  79 584 283 157
 776 709 848 334 884 395 227 219 258 785  61 754 773  62 518 875 309 184  11 133 838 260 397 445 455 479 561 224 491 250
 712  22 352 648 493 143 135 137 360 220 312 504 824 717 799 357 253  16 335 211 167 714 563 587 564 242 789 900 554 885
 870 775 705 506 897  26 576 239 718  13 823  74 517 429 759 148  86 572 883   7 358 173 542 196 213   2 700 752 101 855
 805 289 666 400 262 225  36 749 300 411 203 333 388 676 728 317 659 556 272 796 152 112 340 341 698 794  47 804 533 623
 873  15 453 108 820 447 320 468 583 122 673 835  33 536 485 324 230 614 410 349 461 786 245 460  89 756 226 350 683 761
 646 612 769  73 231 391 249 652  19 803 763 489 381 315   9 607 831 185 689 126 739 387 240 169 731 194 822 114 742 537
 682 812 290 540 269 280 896 296 849 675 692  77  27 852 510 222 265 116 525 777 123 305 610 158 337 747 378 793 328  84
  30 424 615 419 316 600 534 762 198 418   1 807   6  67 548 297 552 755 720 188 549 345 847 415 386 760 175 629 798 354

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.33143e+07us (= 33314.3ms, 33.3143s)
Wall-clock time (full program): 3.33473e+07us (= 33347.3ms, 33.3473s)
Satisfaction error: 0
Number of search iterations: 14194
Number of local moves: 10397 (including on plateau: 10277)
Number of local minimum: 282 (including on plateau: 1241)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 665 589 851 686 673 392 402 702 262 371 375 237 521 487 707 233 859  14 404 738 566 308  61  33  42  63 180 485 709
 386 873 172 711 597  48 899 351 425  58 852  36 653 683 247   7 350 329 136 504 753  70 435 528 703 784 265 745 556 359
 141 177 325 587 411  51 389 239  80 610  50 848 680 288 825 626 594 767 542 214 190 878 396 358 189 475 889 827 223 646
 643 302 770 181 125 178 374 874  99   3 772 100 723  31 834 267 135 785 741 800 512 441 128 113 424 764 360 718 561 757
 737  34 263 667 361  81 255  55 234 315 857 403 387 843 531 510 414 891 268 401 714  77 535 677 545  82 317 390 881 790
 362  18 227 442 870 746 808 347 656 568 399 192 708 884 133 698 158 275 322 747 818  44  53 650 138 720   4 554 124 850
 209 439 771 426 343 642 713 557 206 380  88 633 131 520   6 500 855 481 103  13 438 140 420 419 564 570 892 877 697 482
 839 658 468  56 637 376 860 240 406 666 137 274 692 109 681 725  10 678 669 695 548 150 717 460  45 700 688 105 112 114
 294 716 754  11 373 888 705 123 664 382 816 144  75 122 111 506 108 204 377 868 429 810 734 250  37 516 885 229 629 755
 428 623 211 258 898 295 536 640 365 607 614 609  16 644 495 632 331  95 639  68 455 750 213 176 655 335 631 580 619  97
 591 795 654 310 796 130 170 679 744 812 595 205 573  73 307 670 791 149 212 228  57 846 299 217 533 722 301 129 253 674
 388 456  41 107 259 662 225 840 611 792  28 584 733 251 339 309 730 684 555 841 758 480 578 104 569 598 443 161 224 165
 624  92 538 348 256 596 171 175 352 216 333 685 526 759 354 635 462 353 437 620 525 740 837  86 379 691 544 842 270  69
 457 828 477 127 503 559 346 383 210 458 384 567 200 783 449  17 699 102 880 638 316 645 366 805 582 194  32 574 760 174
 370 768 364 696 605 391  79 440 604 641 469 742 802 412 588 471  38  30 693 273 142 811 166 110 368 732 236 433 378 663
  98 694  15 261 427 869 413 845 856 385 551  23 417 743 474 465 672 751 489 581 264 769 179 876 306 300 201  12  71 508
  78 409 120 345 821 183 627 789 290 866 159 398 246 289 689 739 507 436 446 491 238 303 879 119 849  64 394 432 887 422
 461 198 219 660 139 215  26 782 154 628 344 410  35 511 798 226 659 341 844 156 671 749 416 478 560 434 327 450 752 872
 822 232 577 781 731 342 106 132  22  20 291 652 806 727 164 819 550 304 593  54 235 218 728 803 787 297 606  76 721 319
 616  65 778 266  21 249 829 486 809 552 724 895 515 220   1 862  62 372 271 321 765 311 847 838 243 296 163  29 286 823
 197 601 622 547 726 363  66 562 788 498 242 279  74 292 493 182 706 625 148 540 186 472 615 729 146 817 305 408 668 618
 799  84 602 193   9 774 272 369 826 779 766 320 287 599  90 761 543 185   5 357  89 245 636 505 572 801 831 160 804 252
 661 269 115 355 313 488 676 221 463 832 453 780 254 118 687 318 248 630 603  96 514 608 241 583 682 187 592 875 431 222
   8 896 621 882 153 710  91 445 494 415 202 797 634 719  39 134 522 423 452 763 532 407  94 260 539 464 418 786  25 590
 277 735 704 647 451 282 518 473 553 470 483 155 499 894 890 324 257 143  59 492 537 196 430 853 517 497 501 278  19 381
 330 558 546 332 444 393 280 167 476  24 509 836 762  40 793 777 883 820 773 117  47 168 854 651 285 208 157 466 612 207
 712 421 835 326 519 600 571 151 337 657 338 162 336 169 579 293 534 152 459 807 613  85 586 395 871  27 334 575 541 530
 314 397 863 794 195 467 815 565 147 356 715 858 276 126 121  43 231 523 145 312 448 484 756 340 701 549 813 513 576  72
 690 328 101 824 563 367 776 447 893  60  87 230 748 284 814  93 833 479 865 529 867 188  67 617 191 244 648 281  52 349
  83 184 173 524 283 897 527 736  49 203 886 323 490 861 496 199 400 649 775 585 116 864   2 454 502 405 675 830 298  46

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.79225e+07us (= 27922.5ms, 27.9225s)
Wall-clock time (full program): 2.79553e+07us (= 27955.3ms, 27.9553s)
Satisfaction error: 0
Number of search iterations: 11575
Number of local moves: 9524 (including on plateau: 9464)
Number of local minimum: 102 (including on plateau: 1171)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 898 878 432 710  96 644 362   5 236 244 846 705 137 728 116  81  66 138 876 714 436 329 867  53 379 713 857 218 164 587
 392 865 149 186  99 736  84  21 580 671 632 613 556 825 634 592 306 256 785 746 860 818 221 560 214 206 147 185 389 187
 829 688 836 275 310 897 685  78 257 893   9 762 305 246 891 431 155 564 683 140 101 269  30 757 590 297  50 124 774 589
 150 262 228 816 609 866 146 782 351 320 241 571 181 849 178  40 211 180 267 797 838 759 346 501 855 642 627 725 100  77
 311 569  38 548 765 251 503 655 482  43 532 864 492 770 509 129 718 499 491 528 357 466 255 449 195 102 844   6 638 506
 376 845 899 670 873 265  62 324  32 115  31 543 341 153 605 804 424  37 301 698 166 813 182 615 731  34 856 439 653 628
 404 331 330 350  18 707 702 727 738 381 835 325  57  89 135  79 686 677 415 114   1 822 243 582 787 712 167 885 579 637
 668 514 215 706 717 654 203 224 652 487 272   3 666 656 629 490 673 679 242 291 239 113 669 386 661 298 552 429  94 433
 190 567  63 575 578 709 667 380 622 264 343  82 174 521  80 131  13 549 563 353 704 798 547 874  23 830 344 625 505 841
 793 453 568  65 287 726 141 694 108 647 401 522 854 696 722 313 735  15 219 494 773 570 457  54 229 791 606 249 128 205
  41 444 407 383 624 530 801 533 639  86 593 464 437 508 872 850 316 134 651   4 719 119 754 375 201 322 742 112 689 165
 769 562 745  98 802 355  26 105 812 523 775 586  87 285 391 740 427 162 559 539 294 303 584 771 111 465 463 788 171 217
 729 495 646 388 650 538 352 497 467 823 700 160 536 122  22 334 894 507 610 534 691 270 183  10  33 611 516  69 875 253
 302 515 478 220 104 189 858 537 811 695  42 493 750 526 348 674 454 701 839 254 282  36 623 110 806 421  24 542 194 687
 452 434 460 448 485 441 477 469 425 402 472 476 546 458 451 480 423 440 136 496 484 470 471 468 412 445 512 474 473 435
 761 394 456 414 397 367 409 408 889 488 370 475 446 443 442 420 430 418 461 614 417 127 486 390 405 413 377 438 498 462
 672 535 583 896 169 317 863 595 868 184 764 204 258 396 278 130 382 748 364 703 525  68 550  46 426 483  56 238 626 588
 106  59 608 760 833 368 387 342 416 358 422 337 393 399 385 371 544 360 720 145 900 618 176  12 815 861 843 419 359 199
 600  85 751  48 232 307 193 318 247 557 209 312 273 795 809 882 753 410 356 286 502 300 459 612 288 161 554 837 545 834
 319 314 792 266 597 604  51 635 340 852 327 335 157 395 598 636 406 810 336 289 877 428 315 373 283 126 519 518 223 794
 347 479 758 721 309 259 517 541 121  60 369 692 716 172 848 766 271 662  55 403  11 817 737 261 109 828 210 197 824 455
 175 154  35 290 805 851  72 576 225 796  16 752 274 132 133  47 776 814 117 596 481 680 783 853 144 277 767 871 724 299
  90  44 216 345  58  14 827 279 607 781 895 842 884 123  71 173 599 732  27 648 240 862 260 326 879 778 840 248 151 676
 808 107 678 779 378 513 690 170 226 663 807 163 551 213 786 832 158  17 799 142 555 572 233 699  74 581 196 890  67 168
 304 235 284 659 561 281  75 489 708  49  52 192 308 565 296 601 649 756 208 645  91 398 295 741  97 739 831 743 883 780
 339 179 120 365 675 202 744 684 826 749 293  88 230 602 553 681 237 620 768 803 640 143 384 529 887 177 188 510  19 280
 664 715  93 222  83 372 500 658 103 148 268 888 641 333   7 630 657 789 633 881  95 361 800 250 859   8 276 366 711 504
 156 847 450 527 511  39 631 323 573 338 520 200 886 892 755 374  20 577 591 231 252 411 152 540 880 531  25  70 594 619
 227 734 328  92 772 159 870 682 125 566 819 790 763   2 524 665 558 191 198 363 777  28 730 585 321 263 292 697  45 349
 643 212 869 693 118 354 617 784  29 332 660  76 616 621 447 139 574  73 245  64 207 747 723 733 821 400 234 603 820  61

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.82247e+07us (= 28224.7ms, 28.2247s)
Wall-clock time (full program): 2.82576e+07us (= 28257.6ms, 28.2576s)
Satisfaction error: 0
Number of search iterations: 12611
Number of local moves: 10366 (including on plateau: 10306)
Number of local minimum: 118 (including on plateau: 1231)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 842 325 682 696 445 765 193 449 117  19 103 814  92 607 354 357 490 455 155 346  36 868 492 737 654 428 301 815  60 818
 869  81 372 135 608 571 870 833  97 154 758 862 812 362 434 228 402 827 356 826 234  16  86  89 831  14 188  33 841 726
 756 177 500 519 109 685 564 525 631 822 344 338 389 865  34 541 670 256 742  66 149 554 172 376 883 283 120 660 573 212
  30 704 881 849 471 122 813 614  58 161  80 349 160 778 625  57 230 860 809 747 438 202 352 162 427 750 771 290 242 483
 111 566 773  78 267 451 690 777 328 767 275 462  87 584 832 241 236 516  72 675 118 270 736 561 845 138 562 622 652 223
 678 195 634 384 392 856 417 382 644 643  27 215 649 601 817 702 116 396 248 257   2  65 222 797 728 789 761 281 240 377
 801 717  52 477  84  91 108 606 708  73 578 556 731 125 751 114  12 400 182 783 807 366 804 707 741 129 585 121 618 688
 291 143 208 582 598 142 458 663 246 216 626 233 795 381 409 839 432 803 361 167 131 710 317  61 385 557 503 720 698 840
 244 732 722  41 752 119 335 735 551 676 205 727 247 629 279 886 280 251 466 583 358 872 859 308 298  17 252 447  94 550
  43 304 502 616 128  21 548 721 794 307 537 793 851 642 146  38 588 319 589 885 890 249   7 288 635 314 404 480 776 100
 689 581 453 590 531 592 342 694  11 591 597 294 539 168 296 549 156 179 854 555 572 306  70 621 310 350 286 762 340 637
 299 834 465 186 855 665   3 863 408 574 345  77 545 292  48 218 740 697 671  67 348 259  88 784 580 194 788 729 798  95
 520 513 123 552 538 510  55 137 521 586 529  46 536 570 506 542 526 595 522 523 524 180 508 494 488 369 496 514 481 511
 373 838 239 656 739   1 567 166 655 425 820 651 264  26 232 613 703 158 394 200 764 380 509 880 203 753  42 853 398  13
 472 512 501 507 192 452 499 448 474 435 469 459 533 442 413 454 468 478 489 403 440 397 430 476 467 424 420 423 482 456
 429 871 106 282 446 395 457 333  59 207 439 600 460 426 473 436 336 796 363 410 819 153 437 391 491 808 878 530 475 209
 365 638 157 867 806 684  32 657 309 725 669 370  10 132 559 191 836 823  54 174 528 723 237 126 326 190 302 693 623 709
 312 375 662 341 712 401 196 293 895 418 260 184 399 825  56 367 594  39 339 683 406 774 718 390 415 433 672 368 378 610
 330 148 419 897 214 263 245   4 231 543 393 405 641 497 888 332 835  75 633 187 568 527 780 810 628 892 416 163 444 107
 532 327 238 755  15 894 303  28 858 658  22 544 647 498 461 650 876 255 225 277 686 575 579 515  31 287 624 636 320 199
 668 337 274 147 313 273 565 645 441 311 734 587 749 653 674 351 268 615 226 379 484 596 770 850  98 189  23 864 318 113
 219 407 719  24 334 619 560 112 563 331 321 139  99 386 852 388 411 724 605 711 699 681 383 185  25 877 127 609 828 577
 816 899 124 759 700 781 353 295 837  51 197 355 316  93 547 757   6 713 229 243 692 805 620 152 261 603 253 164 150 744
 254 786 705 754 262 134 518 269 414 165 811  49 887 210 227 792 802 102 768 627 104 648 110 201 787 829 874 213 173  40
 204 443 604 799 220 178 821 141 431 746 640 145 422  47 235 680 343 198 553 630 284 130 779 646 206 714 861 266 305 844
 493 632 602 136  83 271 772 140 359 857 884 791 300  53 766  79 115 170 679 691 495 421 617 599 133 873  96 364 893 151
 289 278 785  62 315 800 159 898 716 706 760 891 540 875 183 733 535  37 265 463  69 347 485   9 479  76 730  71 221 738
 612  45 217 276 824 558 659 272 387 576 843 505   5 775  64 464 763  82 769 322 701 782 169 677 666 504  35 181 171 611
 900  63 250 324 673 847 517 176  29 487 144 745 790 258 687  68  85 830 879 101 846 569 297 211 486 371 450 593 175 664
  74  44 546 224 889 374 896 639 743 285 105 329  20 715 667 848 661 866  18 534 323  90 882 412   8 360 695  50 748 470

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.89618e+07us (= 18961.8ms, 18.9618s)
Wall-clock time (full program): 1.89948e+07us (= 18994.8ms, 18.9948s)
Satisfaction error: 0
Number of search iterations: 7622
Number of local moves: 6429 (including on plateau: 6370)
Number of local minimum: 41 (including on plateau: 775)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 428 226 681 291 662  39 277 648 685 246 268 633 534 387 663 307 399 774 394  87  75 357 878 125  92 689  36 864 893 877
 285 442 753 454 382 545 897 328 372 158 559 492 397   4 865 593 369 439  53 355 221 613 183 805 698 814  15 109 447 868
 602 360 533 736 739 326 237 527   5 751 838 583 274 263 209 321  49 566 242 591 515  38  44 722 630 122 757 831 664 440
 594  31 196 792 508 896 496 608 539 783 393 159 481 127 280   6  73 840 460 881 265 141  35 303 777 870 761 269 475 476
 845 899 418 227 627 604 880 241 575 670 770 419 305 682 146  27  57 376 272  58 273 106 417 817 826 586 596 403  10 383
 576  25 861 684 529 714 652   3 314 249 187 430  62 632 310 885 300 202 278 205 319 395 836  56 721 543 712 462 707 666
 516 299 644 506 132 324 660 212 755 892 283 465 715 434 177  26 848 386 737 522 621 748 114 688 803 102 536  65 171 134
 406 362 128 789 467 849 108 113  13  52 656 297  29 703 711 657 170 653 741 347 219 445 669 331 558 808 389 631 654 560
 835 647   7  86  54 359 628 696 742 624 107 252 422 781 718 208 744 743 248 552 200 622 327 584 315 194 565 477 746  32
 185 854 117 284 231 665 683 537 636 776 804 740 623 337 487 340 398  28 528 135 634  85 461 373 818  69 411 463 724  89
 329 432 486 618 364 525  51 886 879 705 446 680 407 371 301 404 547  50 174 555 875 749 598 520 483  68 592  43 167 210
 437  19 806 780 154 289  12 727 349 832   9  45 567 857 137  24 853 484 588 675 778 449 286 261 580 317 293 795 495 617
 524  91 548 282 734 701 431 500 551 540 523 526 513 563  80 514 332 504 455  88 262 325 405 674 232 589 649 730 118 531
 168 883 530 148 308  37 600 766 470 375 254 494 318 488 569 731 165  34 385 157 716 334 686 788 448 478 726 391 745 323
 787 571 451 423  46 661 829  64 156 444 336 489 735 825 438 378 126 223 585 450 388 517 480 485 166 852 251 356 184 819
 145 784 206 213 553  67 257 384  71 676 152 763 772 264 435 900 694 791 813 771 556 603 800  84 544  96 750 110 101 160
 650 655 677 363 441 866 236 542 466 433 367 572  47 416 720 256 833 353 732 699 230 798 133 245 189 549   1 105 702 239
 290 408 729 214 151 275  90 759 155 233 843 894 392 138 812 891 754 377 609 599 296 782  95 873 421 365 361 169  21 519
  42 149 642 281 129 700 538 491 153 468 708 390 179 425 458 822 590 640 124 733 830 691 842 847  79 358  70 587 541   8
 816 768 415  20 887 218 606 882 807 501 335  11  23 111 370 161 379 414 821 577 635 402 512 195 769 469 429 316 400 266
 115 765 306 895 876 459 862 140 191 333 294 240 546 573 412 725 130 350 204 147  74 764 374 343 313 610 482 690 828 474
 863 607 229 874 629 199 100 752 354 235 668 192 827 890 713 747 503  22 427 207  61 292 250 511 193 645 464 173 767 121
 756 164  76 687 234  55 532 190 112 597 287 841 801 178 834 144 612  94 521 253 710  93 216 535 810 175 658 867 646 837
 119 490 271 723 839 615 846 224 443 211 884  83 197 162 499 509 844 471   2 176 704 396 581 311 381 667 368 762 493 244
  63 809 898 413 457 163 601 330 823 872 719 348 228  30 182 859 554 619 811 672  78  72 270 574 322  77 639 276 625 131
 860 498 758 341 181 172 247 267 456 304 641 638 659 773 614 352 346 562 143 279 472 568 139 420 260 259 695 557 203 851
 692 295 518 198 697 505 255 786 579 339  17 799 790 136 345 188 850 243 673 797 738 409 775 238  33 309 150 605 120 436
 180 595 116 258 785  97 424 856 342 104 186 351 473 626  82 620 123 824 858 453 380 225 760 678 401 616 637 320 452 693
 366  99 298 869 222 796 142  40 651  14 479 671 344 611 888 410 312 564  59 679 820 779 706  81 103 793 302 507 201 709
  41 288 217  66 497 794 338  16 871  98 502  18 855 728  60 510 561 889 578 815 570 717 643  48 550 426 220 582 215 802

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.00968e+07us (= 30096.8ms, 30.0968s)
Wall-clock time (full program): 3.013e+07us (= 30130ms, 30.13s)
Satisfaction error: 0
Number of search iterations: 13633
Number of local moves: 11191 (including on plateau: 11131)
Number of local minimum: 104 (including on plateau: 1362)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 308 516 707 448 271 334 614 822 295 545 270 665 733 181 276 105  67 510 134 151 127 715 750  27 511 403 642 623 865
 808 802 738 175 458 579 851 368 664 533 591  26 268 638 298  22 790  16 786 450 122 846  94 415 351 588  59 158 847 174
 252 424 852 161 561 472 333 226 312 199 552 416 110 678 309 855 391 480 359 397 344 548 382 387 789 430 477 812 476 531
 150 898 749 354 280 530 625 419  62 520 507 661 231 774 103 611 562 348 406 224  18 756 160 223 185 714 773 881 157 634
 883 807 194 121 672 140  73 396 629 686 320 885 549 299 762 146 892 860 217  78 168  69 811 463 322 741 207 680 384  61
 211 863 645 760 690 696 697 125 381 556  87 536   1 128 844 853  85 659 832 326 180  63 532 719 704  43 229 195 792  83
 578 163 316  48 383 405 702 815 660 713 850 753 362 610 700 141 849 100 290 356 732  99  21 693 111 272  70 839 297 587
 806 377 347 166 378 796 668 710 780 343  96 818 404 148 132 301 282 267 342 495 522 292 711 527 840 598 164 142 814 249
 627  38 456 305 452 464  88  82 674 582 254 468 435 113 372 631 618 878 327 420 427 608 784 302 828 555 361 604 345 417
  29 117  54 572 644 571 747 720  71 609 114 755 739 788 411 830 616 834 139 369 617 768 457 196  23 341 684 262 432   6
 764 640 648 120 740 736 353 116 339 227 108 319 743 843 529 563 332 153 277 286 607 534 169 165 264 841  50 794 474 781
 253 395 709 328   2 804 421 481 213 891 777 523  46 484 635  80 895  74 550 198 838 778 311 389 823 357 431  56   4 769
 488 875 816 877 240 119 314 192  65 385 559 554 864 222 360 729 172 606  60  98 462 485 273 251 513 873 501 479 575 508
 246 717 323 613 428 496 889 783 239 867 805 329 337 489 630 101 498 742 408 874 225  76   7 107  30 364 758 258 848  28
 440 371 689 829 615  64 283 619 400 799 410  92 723 143 524 219  86 654 679 521 358 577 887 390 692  57 278 266 367 483
 221 763 442 730 745 601 857 407 731 438 872 136 374 188 441 471  49 129  19 212 558 235 487 662 340 330  91 673 880 433
 871 490 250 494 202 197 592 824 493 325 257   5 247 445 162 346 425 599 540 453 506 643 220 655 827 124 641 628 366 688
 426 612 444 243 392 352 310  17 553 677  79 469 491 126 801 104 639 304 176 647 775 583 819 836 171 861 597  35 459 517
   9 503 233 509 281 566 152 798 724 331 560 398 412 284 833 657 809 676 365 632 879  72 170  31 691 232 137 349 478 744
 698 567 106 318 514 770 418 512 167 771  95 813 350 890 449 355 671 486 201 586 721   8 622 102 288 683 735 241 289  89
 475 460 187 652 274 636  11  97 681 265 206  45 434 446 888 543 173 800 451 605 291 414 646 870 123 817 370 454 315 886
 621 204 633 313 303 465 821 767 242  24 541 594 595 544 772 603 287 375 539  58 178 259 279 708 502 135 759 725 208 461
  25 261 589 547 748 130 896  93 751 826 112 189 650 285  40 712  33 200 820 685 518 238 203 568 893 260 244 504 825 670
 149 145  13 854 737 557 214 447  36 115 423 147 746 866 300 526 177 422 402 797 564 703 335 234 466 593 858 734 179 776
 401 439 248 256 626 131 570 255 155  42 669 705 795 237   3 787 528 726 718 837 658 437 706 574 159  37 596 376 537 307
 716 184 499 602 109 118 443 694 209 569 576 862 695 682 215  34 722 245 590 546 651 436  47 637 263  68 667 699 338 399
 793 473 897 154 876 394 580 294 386  51 766 380 535 620 193 218 782  41  14 884 393 869 551 600 500 210 525 138  81 317
  84  77 133 727 191 497  32 894 455 156 269 666 624  20 581 785  39 675 859 216 144 868 752 373 542 791 467  12 899 687
  53 236 779 656 190 728 186 321 765 228 754  52  15 379 565 653 803 584 757 835  66 293 845 183 663 388 810 409  44 275
 538 306  10 324 336 230  55 429 856 492 761 649  75 413 482 363 205 515 882 296 842 831 519 505 585 701 573 470 182  90

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.82012e+07us (= 28201.2ms, 28.2012s)
Wall-clock time (full program): 2.82345e+07us (= 28234.5ms, 28.2345s)
Satisfaction error: 0
Number of search iterations: 11875
Number of local moves: 9634 (including on plateau: 9574)
Number of local minimum: 104 (including on plateau: 1189)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 464  25   7 612 305 330 768 517 804 256  61 891 170 138 401 700 392 188 292 858 423 777 786 582 868 435 437 280 672  76
 714 733  10 798 175 864 626 412 721 146 533 340 295 564 247  26 894 167 638  30  34 643 682 667 595  89  75 844 817 136
 745 403 753 757 708 616  73 710  90 384  83 320 112 429 742 812 683  52 650 193 126 125 103 124 781 640 856 570 690 185
 176 706 220 163 378 598 450 321 670 536 799 397 137 632 771 755 780 374 608 281 127 311 331 416  68 565 807 578  59 501
 822 859 183 449 542 833 687  69 546 550 621 344  58  46  40 709  85 793 348 265 853 287 453 882  19 758 479 674   3 258
 653 702 746 114 286 446 201 776 172 699 765   6 666 385  99 242 808 123 662 428 377 875 889  32 734 784   1 421 409  14
 748 895 213 563 237 660 189 801 614 834 836 174 438 139  18 518 373 760 198 627 322 445 590 715 253  64 157 202 182 750
 282 434 141 102 722 689  35 436  41 573 343 269 372 118 309 618  28 668 360 658 819 338 664 581 164 828 716 642 735 830
 155 602 132 289 158 763 538 400 317 129 604 654 562 802 497  66 131 810 647 249 669 842  22 329 335 617 677 782 134 603
 515 635 619 254 388 184 813 711 166 351 120 154 854 196 509 246 871 579 191   2 613 528 165 230 599 379 319 759 803 762
 259  42 181 522 838 896 390 130 831 764 541 738 255 345 561 478 589 791 534 556 420 840 277 355 559   8 104 147 553  11
 364 389 737 646 545 673 231 893  55 696 275 195 874 485 712 190 171  16 221  80 783 349 178 825 162 519 583 877 410 381
 135 208 404 380 194 448 651 628 268 234 473 512 566 661 367 585 694 525 861 520  49 487 415 109 203 698 731  13 789 707
 631 523 323 870 506 521 210 472 544 116  23  87 792 504 406 770 465 558 513 468 508 484 475 461 483  12 363 173 530 724
 507 442 474 502 503 498 491 500 447  82 867 492 427 486 471 457 443  97 482 444 499 440 494 357 459 419 422 405 490 418
 488 675 339 736 645 261 152 354 743 386 216 609 659 835 359 318 481 414 205 398 685  21 516 313 462 489 394 466 554 342
 552 228 596 458 470 451 336 693 382 569 425  60 352 655 537 787 680 624 350  47  86 633 601 845  96 297 395 192 300 818
 720   5 681 625 128 149 161 327 240 729 641 273 299 778 679 393 301 316 869 148 411 744 524 800 469 697  20 366 122 900
 413 407 376 399 302 326 371 272 365 314 432 347 878 324 622 328 209 634 460 387 495 756 629 426 226 236 665 310 816 790
 207 719 794 539  77  72 815 168 575  27 369 121 593 433  51  54 531 880 826 855 218 820  39 728 333 315 727 752 266 611
 865 843 476 212 739 396 307 279 892 306 244 701 233  95 796 402 726 587  56 308 548  33 383 480 823 532 540  92 325 296
 200 270 797 897  88 766 467 142 243  44 346 278 884 576 852 514  94 850 811 644 264 439 740 211 695 334  48  17 274 730
 358 186 663 222 145 705 456 263 751 232 391 860 749 767 219 206 795 455 361 215 251 225 133 610 846 493  91 637 630 600
 580 262 592 180 898 153 227 605 197 837 725 615 257 623 832  78 303 284  71 276 100 463 849 169 857 873 863 285 238 223
  53 549 876  50 214 119 769  62 862 551 866 560 239 574 676 283  43 657  24 773 591 671 713 572 159 204  31 824  67 883
   4 260 529 779 688 101 879 847  65 547  63 806 160 692 179 150 851 250 505 703 568 526 827 557  84 430 571 510 143 241
 332 594 424  98 890 290 888 841 341 741 686 691 805  37 886 885  74 267 229 620 881 111 117 144 636  81 454  29 106 337
 839 477  36  93 375 187 577  45 370 732 584 431 652 252 217 656 527 113 747 774 368 110 288 775 452 607 684 718 772  57
 199 151 294 639 785 511 649 235 648 362 312 829  70 588 156 441 245 140 717 887 723 177 408 115 417 814 496 597 872  38
 535 291 899 567 586   9 108 606 555 788 271 761 107 356 304 848 248 543  79 821 704  15 224 105 678 298 809 353 754 293

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.27599e+07us (= 22759.9ms, 22.7599s)
Wall-clock time (full program): 2.27929e+07us (= 22792.9ms, 22.7929s)
Satisfaction error: 0
Number of search iterations: 9452
Number of local moves: 7749 (including on plateau: 7689)
Number of local minimum: 79 (including on plateau: 967)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  64 697 423 900 306 393 288 467 627 219  78 324 708  23 847 351  54 573 327 282 813 557 513 810 630 591 223 784 600  43
 464 546  63 472 295 601 145 710 577 629 335 599 789 451 644 621 663 427 711 328 315 381 128 386   3 465 481 217 871 198
 404  16 265 341 538 885 614 448 754 709  79  39 838  45 841 177 796 785 144 313 166 147 770 887 645 157 679 678 259  96
 662 499  37 278 203 105 479 756 585 360 346 673 642 305 758 431 421 509 120 204 799 379 244 342 432 707 638 476 376 749
 817 683 173 718  29 677 236 314 548 665 609  91 898 554 336 696 323 616 299 598 433 257  71 401  13 716 254 832 170 488
 200 508 486 110 782 119 549 331 748  67 459 419 798 487  61 398 361  53 117 503 450 828 552 689 590 735 745 752 408 210
 543 387   4 822  87 264 873 141 681  88 647 825 339 703 267 279 213 231  44 519 284 675 842 455 292 273 620 643 624 850
 839 845  82 685 406 422 698 403 606 232 795  65  97  33 719 152 109  24 242 833 207 412 458 848 303 802 720 407 378 693
  77 137 108 353 791 281 515 895 759 840 542 298  19 214 608 380 162 206  42 851 158 523 867 837  59 702 283 855 737 416
  69 101 769 443 884 370 402 114 604 522 521 587 218 777 470 107 507 713 869 430 240 195 551  83 778 544 497 280 821  49
 824 274 894 843 371 118  30  31 764 572 211 882 613 131 252 593 811 654 441 659 653  21   5 325 603 115  22 320 750 733
 648 619 385  95 178 695 239 151 103 571 312 563 527 396  99 308 874 468 384 690 724 831 553 803 224 111 165 730 717 352
 888 899 343 660 373 138  89 736 309 801 886 222  86 797 124 634 880 539 723  80 480 133 435   6 526 834   8  15 505 366
 846 293 751 357 518  55 418 664 628 196 229 783 584 187 580 225 410 261 439 788  18 772  72  10 626 787 641 461 294 622
 483 525 452 469 391 405  38  51 307 478 514 474 495 775 623 372 556 741 540 356 247 581 337 739 561 528  26 338 582 531
 255 411 142 558 794 192 893 175 238 248 345 727 276 565 520 310 646 562 861 413 492  20 517 635 477 535 610 425  98 575
 502  90 726 256 209 835 815 134 383 541 460 392 394 462 400 875 253  70 820 100 763 818 596 271 731 148 790 126 156 399
 237 226 475 771 550 428 891 578 586 317 409 682 348 164 436 498 780 501 266 792 202 829 530 185 208 289 155 172 250 760
 291 106 740 684 168 290 130  52 296 655 555 262 395 249 446 854  11 734 857 866 657 878 712 112 812 275 260 354 545 269
 579 881 699  25 651 390 661 742 143  14 597 516  93 864 434 194 329 220 560 205 506 334 823 440 234 755 747 180  41 658
 602 382 856 123 705 865 533 318 193 159 625   1 830  46 732 757 806 191 819 786 160 215 270 104 375 463 444 650 420  85
 692 169 500 424 414  40  58 536 182 567  48 322 728 666 150 127 674 669 466 135 704 877 449 496 762 700 688 631 632   9
 781 330 453 722 389 437 153 814 230 233 377  92 890 618 670 529 482 868 216 676  62  34 779 568 340 113 277 125 490 767
 227 510 897  36 321 570 569 872  56 652 374 863 853 251  47 870 311 358 285 714 879 245 301 611 367 171 132  50 761 362
 319 457 668 524 359 174 836 615 146 738 691 355 179 889 701 574 189 605  74 212 241  28 221 316 607 576 365 896 235 725
 612 862 364 287 547 397 633 589 804 512 494 181 163 729  57  75  66 849 484  76 827 415 186 744 534 176 826 350 183 493
  17 491 286 139 721 858 347 445  68 816  84 773 349 243 456 532 504 859 566 268 800 686 680 537 511 300 595 116 332 136
 140 442 122 687 808 876 766 753 706 473 326 368  81 656 149 592 199   2 617 438 167 809 201 426 129 304 746 765 184 583
 272 883 637 639 667 892 188 559 190 344 793 768  27 671 860 197 485 154 594 388 263 333 489  32 471   7 776  35 447 454
 161 246 715  94  60 743 429 121 694 297 774 369 258 564 228 807 640  73 588  12 805 302 363 417 672 636 102 852 649 844

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.61104e+07us (= 16110.4ms, 16.1104s)
Wall-clock time (full program): 1.61435e+07us (= 16143.5ms, 16.1435s)
Satisfaction error: 0
Number of search iterations: 6509
Number of local moves: 5375 (including on plateau: 5315)
Number of local minimum: 57 (including on plateau: 656)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 166  92 821 823 638 187 278 859 142 781 399 163  97 325 585 490 583 138 361 472 656  33 664 309 380 396 693 561 634 789
 737 762 264 145 402 122 865  77 809 633 308 238 815 547 175  34 614  85 766 165 131 575 245 712 736 322 624 502 432 673
 204 433 487 597  90 316 319 891 871 159 108  72 115 729 179 757  52 237 890  28  82 895 835 828 679 599 894 215 155 799
 771 672 559 270 719 650 147 333 838 500 709 587 655  74  24  94  56 279 600 345 103 262 533  80 750 528 782 684 847  64
 665 217 832  12 164 173 738 790 720 398 449 635 646 637  16 796 518  93 227 570 352 714 833 501  21 776  46 100 826  50
 222 394 233 532 804 121 594  49 734 119 104 552 185 269 798 882 300 339  73 160 848 724 761 727 535 123 221 692 569 851
 778  23 893 739 340 391 733 156 317 730  51 365 229  26 731 177 768 680 107 475 273 862  70 374 562 513 834  79 373 866
  63 389 492 785 462 732 705 879 408 106 830 406 659 420 195 318 349 448 482 281 454 601  76 746 393 439 466 263 444 224
  95 186 812 711 507 116 610 298 358 628 636 728 109 372 151 295 457 888 556 247 382 400  30 625 463 805  15 864 383 788
 327 786  10 180 320 354 845 292 759  22 660 688 506 117 483 743 376 214 868 748 745 545 336 623 884 304  40 250 412  78
 172 753 199 586  89 125   6 162 875 840 641 355 223 467 347 602 704 695 277 630 409 427 390 667 272 395 820 609 225 553
 578 286 658  96 582 280 150 555 497 388  19 707 285 548 549 512 558 509 618 612 520 571 608  11 536 541 539  68 584 550
 813  35 616  41 899 887 491 236 723 537 546 648 307 557 114 476 568 543 415 191 886 132 367  60 503 139 530 892 261 102
 620 183 148  99 640 381 464 654 854 756   4 201 488 869 577 717 242 421  66 596 158 538 540 268 811 302 220 858 797  43
 213 516 898 867 844 592 411 606 514 883 763 169  45 424 407 442  88 735 334 824 189   3 485 330 484 271  18 256 445 459
 419 499 422 450 426 478 465   5 470 453 481 436 460 474 725 417 493 379 447 435 440 423 740 458 443 451 496 416 430 384
 143 351 607 644 611 849 311 369 133  38 603 819  83 818 595 348 878 806 246  17 519 321  62 544   1 524 808 689 632 146
 856 617 370 803 534 726 515 328  42 359 404 691  69 401 452  65 244 284 182 701 816 357 434 385 362 780 343  37 872 486
 149 755 437 332 874 288 207 787 621 850  71 387 647 205 510 293 255 560 589 111 767 126 863  48 234 682 441 290 772 364
 425 639  13 896 375  86  36 137 323 335 855 622 775   8 670 529 386 337 218 747 653 671 226 642 130 477 791 760 315 438
 494 287   9 686 194 456 663 297 124 112 678 495 249 752 843 661 829 836 363 702 480 657 508 523 666 120 113   2 128 588
 690 852  58 235 239 744 141 822 101 576 178 590 258 405 326 283 198 152 842 410 698 202 598 219 353 853 807 306 676 703
 694 188 129 368 230 758 783 839 542 331 801 136 525 505 168  20 792  53 770 301  84 685 153 498 206 706 649 681 631 289
 627 683 700 825  14 527 190 841 566 572 468 196 377 240 652 615 431 721 257 184 174 299  57 802 526 134 455 715 254 413
 294  27 232 209  67 876 313 429 161 181 581 338 764 619 754 645 710 573 266 870 769 479 677 154 200 674 567 157 216 713
 900 881 831 469 140  29 800 605 629 511 251 564 877 346 699 127 144 696 259 471 574  87 276 414 593 110 118 795  59 260
 303 305 580 243 403 718 397 551   7 651  54 473 777 741 604 880 105 192 489 846  98 563 889 669 203 341 521 212  32 668
 342 749 210 291 722 675 176 310  47 248 662 193 885 810 366 228 252 418 613 773 282 531 837 350 827 873  61 360 171 253
 716 312 211 135 392 324 897 267  55 793 697 296 814 779 579 208 708 344 517 522 742 461 378 751  75 170 274 428 314 356
  39 643 784 446 794 554 265  91 275  25 504 765 591  31 241 861 857 860 817  81 231 371  44 197 687 167 329 774 626 565

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.87247e+07us (= 28724.7ms, 28.7247s)
Wall-clock time (full program): 2.87578e+07us (= 28757.8ms, 28.7578s)
Satisfaction error: 0
Number of search iterations: 12225
Number of local moves: 9846 (including on plateau: 9786)
Number of local minimum: 110 (including on plateau: 1219)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 708 419 768 763 592 326 892 653 441 283 844 772   5  85 584 639 251 319 798  82  46 732 461  98 538 857 160  43 171 185
 483 562 691 119 139 822 836 685 234 594  15 174 474 560 127 853 144  18 477 632 750   2   1 246 845 138 754 602 812 726
 652 643 817 425 545  17 401 703 629 322  72 658 277 267 198 147 216 790   7 137 736 152 583 793 480 721  38 774 424 891
 597 400 542 737 291 757 487 201 456 775  75 544 507 286 394  49 557 386 860 387 268 463 431  51 312 227 445 704 770 556
 172 851 771 104 742 696 832 103 690 495 831 316 619  87 598 236 735 555 849 304 230 290 756 131  68  93 566 220  26 549
 440 547 671 416 819 789 464 245  10 711 863 405 779 162 221 530 349 108 228 207 363 305 256 657 591 778  33 869 411 288
 866 168 488 253 585 604 310 847 697 573 332  86 244 449 578 872 428 100 348 235 342 528 182 613 504 368 476 713 509 217
 157 662 265 446 328 561 559  32 129 739 113 667 296 402 829 649  57 278 109 641  81 588 631 698 695 609 624 347 438 885
 838 208 541 511 733 359 668  19 655  91 469 248 568 677 694 617 238 686 700  28 177 552 669 674  45 188 340 642 607  73
 135 466 126 141 376  23 743 579 475 450 622 262 455 301 626 683 389 833  16 484 675 801 381 780  69 517 489 722 678 218
 306 482 820 777 581 297 346 374 413  20 593 130 358 385 222 741 136 298 330 596 275 600 615 807 366 634 616  95 893 409
 382 813 215 531 292 637 233 295 427 116 247 500 861 526 630  71 635 748 493 190 752 142 648 166 576 663  90 727 574 335
 539   9 408 125 854  84 785 101  40 886  34 193 523 823  61 472 571 406 825 705 498 479 707 473 761 250 753 159 767 224
 229 178 372 852 478 534 515 563 243 835 465 889 664 370 795  31 518 403 784 205 818  41 769 161 451 351 527 211 196  67
 899 181 830 293 412  64 114 494 654 590 776 725 514 458 334 543 344 410  79 871 532 266  12 442 681  24 749 868  76 280
 459 164 414 502  97 842 839 439 225 398 317 156  66 873 540 323 843 800 184 219 189 259 808 420 627 467 846 533 508 158
 167 453  74 679 435 497 380 361 797 879 452 499 360 377  44 516 367 407 684 762 324 329 272 799 471 460 343 384 433 510
 397 209 146 151  22 529 759 470 841 239 365 673 589 226  53 521 758 786 443 640 336 490 423 828 357 106 418 302 791 647
 170 404 203 633 672  29 353  77 650 894 802 396 773 882 651 176 371  39 274 195 688 457 299 294  11 644 429 503 815 731
 887 165 670 665 257 745 107 415  48 481 383 468 118 582 883 580  94 252 888 287 369 699 426 814 123 536  37 213 486 837
 840 728 192 307 300  42 492 821 333 273 264 755  83 897 153 766 525 605 285 565 575 311 186 373 692 537 378   6 444 787
  89 255 175 595 806 734 150 656 717  14 764  54 197   3 352 744 794 437 811 393  13 512 586 314 714 884 320 454 289 689
 124 620 180 680 279 436 254 145 709 140 858 569 462 282 491 570 880 760 154 395 895 421 199 567   4 867 646 276 321 331
 522 564 434 803 505 313 120 614 548 587 738 422  60 661  21 362 865 611  99 881 610 659 356 258 112 391 623 261 206 309
 448 339 572 350 501 155 496  47 318 485 179 392 417 740 875 612 240 134 729 716 856 204 260 432 519 232 876 636  36 719
 546 553 900 284 187 535 606 850  25   8 241 715 105  62 874 214  56 132 724 788 345 898 524 855 173  63 792 710 601 149
 506 628 325 746 810 364 163 682 281 430 660 212 870 702 551  30 712 864 375 308 693  52 191  65 520 599 128 751 242  55
 183 765 117 337 720 805 169 447 558 804 796 550 824 121  78 338 618 388 269 834 200 625 143  80 645 859 723 102 194 223
 747 816 730 202 122  92 327 896 554 270 249 379 621 603 210 399 148 354 303 315 809 781 862 271 782 111 237 638 110 577
  27 263  58  88  35 827 115 701 718 133  96 706 826 666 848 231 676 608 390 513  70 877 878 355 783 341  59  50 687 890

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.63797e+07us (= 26379.7ms, 26.3797s)
Wall-clock time (full program): 2.64131e+07us (= 26413.1ms, 26.4131s)
Satisfaction error: 0
Number of search iterations: 11344
Number of local moves: 9112 (including on plateau: 9053)
Number of local minimum: 121 (including on plateau: 1130)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 167 329 342 235 896 264 280 850 622 238 859 318 267  15  79 284 802 676 434 206 409 255 724 484 757 504 547 337 675 660
 733 669  21 362 805 826 429 324 245 762  68 725 489 361 321 196 135 614 602 207  65 692 319 292 247 232 479 656 820 819
 378 570 678 626 872 498 419 176 339  54 506 139 764 562 435 704 457 258 240 605 874 749  16 198 278 851   4 755  37 473
 316 544 462 808 327 701  45 136 111 796 382 481 784 477 104 540 155 175 358  69 854 455  81 564 777 795 780 627 368 443
 546 809 442 839 556 146 581 310 461 100 834 253 585 418 396 885  43 671 282 769  89 308 663   1 738 761 392 465 102  70
 194 402 867 423 460 453  32 737 716 728 594 141 593 845 153  51 685 838 852 647 518 323  48 103 744 347 201 263 213 344
 209 696  50 846  52 333 272 686 296 835 700  42 116 369 771 550  23 609 387 886 549 603 265 741 682 165  25 459 522 776
 607 221 592 120 857 521 787 448 631 401 205 405 425 366 214 667 623 711 428 304 171 566 766 674  94 322 616 126 357 290
 414 236 538 421 291 768 779 529 507 216 148 587 132 295 673 588 856 117 719 277 275 648 195 118 306 710 836 185 565 586
  11  99 354 215 578 895 752 713  46 884 730 721 847 208 539  74 732 108 833 204 598 393 519 341  35 202 463   8 841 572
 464  49 882 735 625 360 177 531 359 476 758 223   6 575 557 352 203 801 789 526 554 515 348 816 495 630  55 508 137   9
 772 898 843 760 444 767  44 134  59 798  18 151 299 385 680 285 184 753 555 844 832 449 222  93 731  71 156 688 286 314
 899 812  22 325 513 530 687 568 451 552 894 233 231 129 849  31 413 535 599 875 426  41 351 517 164 474 482 152 492 268
 865 533 485 830 510  57 611 494  61 365 166 441 336 496 649 775 523 370 877 452 244 212 580 228 147 338 289 447 472 662
 430 560 334 528  30 870 567 298 739 389 388 163  64 736  40 383  80 651 821 571 825 785 456 793 589 542 115 445 226  97
 480 403  63 367 276 437 478 197 170 328 400 864 664 439 427 824 668  98 416 438 391 754 641 613 313 466 309 483 702 406
 469 612 458 346 829 618 287  38 168 707 514 490 422 440 218 467 315 778  27 187 655 281 855 128 266 790 723 842 188 397
 814 468 714 532 105 837 420 883 813 424 288 138 408   7 340 804 404 454   3 279 349 376 590  88 415 512 527 501 862 160
 384 881 642 246 257 211 653 610 861 783 799 331  83 364 381 640 182 375  87 162  86 788 810  66 499 112 763  84 624 751
 534 274 750 124 516  10 818 500 161 579 353 800 792 433 853 596 395 143 140 142 722  47 356 900 252 619 657 261 563 225
 537 305 189 709 125 259 144 807 891 330 407 691 672 887 121 239  20 703 293  76 326 553  60 394 781 632 734 742 774 114
 249 174 840 765  62 303 511  29 234 661 179 471 525 186 666 380 637 890 173 350 756 729 355 866   2 869 371 373 219 690
 107 541 390 689  95 601 695 217 720 251 335 654 617  26 636 873 302  58 497 639  14 726 377 677 620 561 379 311 224 683
 178 633 629 131 412 634 227  73 803 577 770 628 860 615 150 432 600  92 694 157 210  33 493 270 574 283 127 748 876 606
 410  13 759 110 715  91 256 312 659 363  19  56 450 806 597 559 828 237  90 822 665 154 706 658 503 470 502 558 509 638
 670 650 294 569 183 133 652 786 431 317 106 520  39 863 101 698 491 230 645 486 621 697 797 172 269 273 591 791 260 180
 583 717 254 169 576 417 823 897 301 149 718 831 122 191 745 119 608 181 646  36 693 248 746 868 879  17   5 584  72 320
 643  53 109 113  75 712 199 398 536  67 300 386 307 878 817 297 524 582 773 743 343 372 130 548 681  12 811 888 782 436
 374 123  24  85 794  34 345 190 551 193 815 892 727 250 604 145 880 475  96 708 243 543 635 858 595 271 705  28 505 827
  78 241 488 487 679 229 545 644 573 192 262 740 889 893 399  77 747 332 159 848 158 220 411 446  82 684 871 200 242 699

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.73945e+07us (= 27394.5ms, 27.3945s)
Wall-clock time (full program): 2.74272e+07us (= 27427.2ms, 27.4272s)
Satisfaction error: 0
Number of search iterations: 12433
Number of local moves: 10132 (including on plateau: 10072)
Number of local minimum: 128 (including on plateau: 1210)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 224 359 703 517 241 518 101 809 207 107 892 891 271 619 492 794  88 799 278 616 500 349 416 649 287 541 296  78   3 870
 896 715 396 111 269 264 771 621 429 584 297 501 690 588 347 258  83 338 550 785 161 192 316  36 781  34 624 282 846 750
 497 368 837 138 857 821 201 839 593  77 190 280 764 855  42 526 642   4 248 543  19 707 319 400  62 622 369 831 208 656
 536 255 804 787 681 615 325 377  29 146 348 292 589 182 851  30 841 712 636 196  13 343 524 747 545 580 139 384 643 365
 508 850 220 676 773 234 223  71 194 261 166 423  39  89 810 172 528 647 129 847 533 553  38 507 753 731 291 685 744 820
  50 605 418 191 641 730 840 777 134 405 350 398 122 301 627 330 179 886 790 351 684 216 749  14 746 490 737 339 393  22
 834 682 187 222 340 575 203 310 631 699 488 765 625 587 281 706  65 105 318 663 451 879 727 723 100 118  98 185 650 298
 356 739 265 432 323 853   7 653  10 519 574  85 862  47   8 651 774 345 604 671 551 486 658 204 735 189 475 776 152 511
 816 895  86 692 143  44 142 236 661 219 520 882 687 375 558 409 322  32 828 141 180 648 537 548 698  15 594 229 677 701
 868 570 304 456 386 212 346 334 510 738 668 719  94  96 367 724 666 173 807 720 637  91 153 610 581 592 567   9 244 273
 175  21 307 722 401 174 530 861 403 674 579 893 226 317 521 144 726 695  25 599 659 678 148 137 509 354 127 462 732 716
 576 150 171 675  61 586 871 427 748 858 672 308 214 437 638 761  12 262 644 106 181 535  55 288 836 757 373 453 800  60
 133 376 899 872 782 894 454 320 680 389 752  46 529 826 104  66 117 552 438  41 205 394 833 250 484 131 433 654 609 252
 628 854 167 159 230 702 512  80 184 830  95 284 683 125 670 691 372 611 864 523 766   6 513 562  26 568 863  35 329 583
 399 472 516 487 254 455 483 481 557 447 315  97 485 285 477 493  53 480 489 460 450 449 515 473 471 123 873 717 563 696
 419 458 395 900 797 442 440 452 496 435 406 474 410 441 408  93 420 422  54 630 404 464 430 414 421 470 608 397 446 469
  79 306 549 769  72 370 789 379 786 357 591 283 566 378 725 109 758  56  92 140 426 688 887 103 170 755 743 613 344 632
 200 424 634 121 897 602 415 108 848 759 272 246 360   5 210 554 779 708  40  63 838 163 817 596 337 238 652 277 813 539
 279 425 565 358 832 436 890  45 532 199 407  28 467 445 686 313 585 385 309 618 381 843 860 874 289 742  90 352  87 193
 655 213 869 700 314 417 120 614 147 333 571 275 802 577 355 818 669 784 640 299 158 156 461 751 114 249 331 741 263 119
 662 808 169 276 387 560 679 635  99 195 202 504  33 791 878  68 303 866 770 756 353 332 772 796 160 294  70 257 514 326
 327 237 736 341  11 444 363 183 253 540 227 380 889 710 243 228 242 268 898 825 875 231 186 290 812 531 374 559 506 806
 383 305 412   2 505 745 811 300 877 457 884 835 162 225 197 660 247 829 102 881 128 607 256 342 639 823  23 561  43 274
 311 113 664 459 495 762 245 801 733 176 527 689 391 522 844 859 388 240 295 336 595   1 270 215 617 827 431 232 260 217
 491 760 709 132 482 218 623 598 729 842 633 448 390 321 845 600 411  27 209 312 110 534 165 362 198 476 465 503 494 428
 822 538 239 542  37 569 382 235 468  64  76 694 740 286  24 466 883 578 145 434 778 783 697  69 221 443 815 546 867  74
 259  17  75 793 168  31 164 582 824 603 763 620 645 714 266 888 814 188  84 155 693 767 136 673 328 705 371 499 324 366
 361 479 115  51 852  59 364 572 116 788 856 154  82 718 780 803 392 798 721  49 734  18 612 478 646 402 865 130 439  81
 704  58 606 206 573  57 556 564 302 657  16 267 547 768 112 177 555 135 795 544 819 597 413 775 876  48 293 849  20 626
  67 463 498 728 711 126 665 251 335 157 178 754 151 885 149 124 601 590 713 211 233 805  52 629  73 667 525 880 502 792

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.01865e+07us (= 20186.5ms, 20.1865s)
Wall-clock time (full program): 2.02192e+07us (= 20219.2ms, 20.2192s)
Satisfaction error: 0
Number of search iterations: 8431
Number of local moves: 6960 (including on plateau: 6900)
Number of local minimum: 62 (including on plateau: 895)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 791 852 544 823 554 665 728 252 218  53 887 212 371 250  58 226 433 133 685 555 578 523 381 201 326 696  24 317 805 374
 144  38 532 731 336 722 258 345 102 641  20 591 204 828 367 688 626 777 492 646   9 156 397 142 868 798 695 395 221 746
 691 275 719  73 259 166 516 603 328 723 629 600  54 502 350 533 277 862 249 541 740  64 849 234 859 509 556 161 431 162
 816 230 378 471 207 208 565 648 349 501 107 425 799 466 657 590 843 181  44 878 854  87 172 883 314 630 268  93 645 206
 151 860  17 402 653 112  92 450 443 103 808 628 571 153 826  97 113 311 773 612 861 837 237 832 467 198 701 503 128 576
 136 477 274 296 540 810 140 670 836 129 827 255 159 282 582 755 138 684 737 797 609 487 785 411 406 104  62 824 171 132
 581 634 760 768 183 216 484 240 408 407 711  84  43  63 223 895 530 190 749 327 721 174 185 734 801 522 262 355 713 552
 521 480 588 651 366 595 295 599 840 440 427 131 147 193 510 400 613 413 891   8 385 661 224 506  46 525 825 647 267 321
 143 783  57 618 473 360 248 368 375 767  59 845 392 888 752 660 689 776 758 176 118 623 485 280  13  69 479 134 674 453
 729 175 770 359 205 165 704 796 357 149  15 822 787 839 716 290 592   3 307 309 786 227 354 412 460 347 232 191 750 667
 298 417 124 814 869 870 294 536 551 858 203 404 829 380 779 414 211 192 454  70 179 194 774 393 219 210 126 639 790 424
 297  78 446 458 874 546 468 196 635 642 320 597 372 396 698 293 548 304 841 409 678 831 756 164 699 278 305 146  40 200
 690 842 302 478 292 753  45 640 286  31 188 148 703 459 795 312 857 547 686 331 168   1 587 261 558 710  96 771 739 239
 229 235 732 152 598 846 500 456 809 495 452 127 664 675 886 284 804 780  79 145 474 762 243  85 158  42 329 650 343 481
 566 559 602 604 545 519 539 488 432 513 616 299 418 287  30 514 524 476 644 486 363 401 549 285 429 496 449 253 472 157
  32 811 423 108 543 388 875 447  33 526 489 421 173 301 394 494 390 621  72 517 322 624 692 778 535 382 636 537 439 512
 560 330 247 254  50 291 738 867 574 754 383 386 632 890 615 313 542 794  80 117 110 257  41 622 169 562 881  86 784 586
 338  98 763 747  67 499 550 222  56  52 428  47 435 876 702 668 288 470 694 283 726 264 438 348 818 879 714 130 563 352
 115 793  28  71 896 462 184 607 139 384 209 715 893   7 256 871 631  89 398 730 461 873  88 662 469 310 725 659 420 370
 445 238 125 121 325 561 656 697 807 782 717 251 751 885 122 135 813  26 863 892  22 850  23 109 436 377 279 835 273  99
 426 557 430 137 627 416 511 865 120 324 693 848 712 564 515 531 197  82 333 608  11  37 718 300 465 260 898 106 482 742
 638 584 884 186 649 434 442  36 617 493 389 498 323  95 422 100 815 369 246   6 215 851 189 163 344 882 834 334 633 844
 281 180 736  91 764  75  51 242 441  21 677 894 387 319 150 806 594 483 342 855 744 538 270 676 766 671 575 116 241 529
 700 800 900 899  74  19 306 351 572 213 570 217 318  27 271 593 231 672 528 877 897 362 757 111 187 620  66 792  65 520
 335 337 464 491 821 177 847 220 856 819 199 643 585 315 170 605  25 505  35 706 403 233 681 682 353 376 405 741  49 437
 410 160 399 679 415 182 303 332 727   5  83 455  60 743 567 444 101 579 379 569 652 361 789 269 666 167 817 833 872 497
 781 553 195 365 720 364 680 655 889 451 265  68 866 709  34  16 724 276 154  14 745 340 619 880 658 596  29 748 119   2
 573 705 568 577  48 820 490  94 155 830 669 733 123 214 448 114  76 654  39 178  77 864 457 853 141  12 759 765 707 772
 580  61   4 802 507 663 761 202 316 803 838 463 236 308 610 769  18 583 735 339 341 346 419 625 527 475 225  81  90 788
 518 373 504 289  55 611 245 391 244 606 637 708 508 601  10 105 272 683 228 534 266 687 356 614 358 812 263 673 589 775

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.19937e+07us (= 21993.7ms, 21.9937s)
Wall-clock time (full program): 2.20263e+07us (= 22026.3ms, 22.0263s)
Satisfaction error: 0
Number of search iterations: 8810
Number of local moves: 7198 (including on plateau: 7138)
Number of local minimum: 73 (including on plateau: 885)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 438 895 440 872 894 255 853  93 788 335 157 555 645  72  23 248 829 251 260 544 687 565 752 191 643  49 181 396 585  19
 502 365 197 630 644 205 676 737 161 739 754 222 675 261 846 207 247 226 855  85 651 130 849 123 398 134 298 736 768 194
 569 534 857 830 221 836 182 897  89 267 842 152 455 104   4 628 822 357 884 376 228  40 686 495  90 805  52 758 388  67
 107 325 778 566 795 105 273  26 220 155 797  39 591 640 862 589  54 575 511 381 385 732 236 606  94 348 755 711 869 390
 189 878 258 129 764 898 442 650 445 546 501 593 352 372 404 436 708   3 146  62 885 103 483 480 803 558 548 183 616  80
 815 633 356 345 431 198 681 180  24 669 172 774 262 556 287 632 817  82 634 782 584 779 237 414 734 165 328  78  48 818
  55  57 327 331 654 528 505 186 143 729 201 888  22 371 177 792 691 713 202 516  13 700 185 695 750 329 814 561 806 574
 635 537 775 470 370 209 232 493 211  16  25 662 619 429 214 288 825 637 444 334  28 568 466 415 886 790 596 588 467 286
 638 434 420 477 647 464 639 756 655 642  79 148 636 423 401 326 603 321  53 190 319 802 110 500  84 231 871 290 673 683
 229 597 648 184 178 612 890 646 735 342 242 726 545 485 660 641 210 522 407 200 791 156 615 318 122 550 663 168 154 279
 482 699 114  99 243 724 889 810  47 127 607  58 314 508 652 705 524 624 430 553 572 707  21 253 609  41 703 465 192 743
 212 793 865 350 133 787 272 838 731   8  51  73 870   9 891  74  56 563 167 450 162 748 395 375 257 773 339 746 761 766
  45 142 510 276 227 145 481 517  97 598 540 542 514 785 717 578 303 547 270 759 843 684 454  77 380 874 494 881  12 223
 402 102 230 590 835 166 674 610 281 265 532 562 219 529  83 541 337 789 656 866 128 582 527 689  37 295 412 543 837 196
 432 344 468 425 506 249 600 476 428 882 515 658 504 472 158 188 892 458 475 170 451 531 497 460  14 284 443 498 473 564
 604 666 722 727  18 333 377 586 441 307 245 447 282 844 347 413 126 757 457   5 819 364 217 437  92 859 235 725 769 294
 389 135  98 771 557 206 449  61 446 176 847 521 741 513 239 153 280 826 571 671 816 246 367 349 751 269 551 296 416 804
 622 174 384 723 747 469 322 250 583  38 848 484  20 263 490 362 649 744 118 672 833 851 283  70 391 358  68 378 629 692
 299 880 274 424 204  81 435 721 567 694 601 140 800 876 264  46 539  75 487 361 807  44 813 664 841 538   6 617 151 266
 688 116  64  66 315 459 100 392 592 867 368 138 712 685 526 696  42 354 899 530 783 278 341 533 573 308 316 277 657 840
 627 821 893 131 520 383 422 549 620 823  11 706 285  34 767 292 763  71  36 697 626 302 417 858 324  69  32 828 199 409
 587 312 164 887 621 679 240 419 147 461 125 397 351 693  91 740  15 323 742 386 776 225 831 631 218 163 374 667 798 452
 241 665 613 579 353 812 256 343 883 661 293 489 801 320 112 716 512 300 839 301  29 486 233 313 868 291 753  35 109 309
 492 106 623 132 854 536 863   2 733 439 518 411 474 144 682 108 453 730 244 709  59 124   1 234 879 827 336 179 824 799
 618 523 150 418 304 394  33 745 275 576 403 718 382 611 850 715  27 496 794 462 259 625 875 670   7 373 605 203 387  17
 614 169 719 346 187 119 478 173 570 860 426 845 238 137 559 193 786 864 399 421 254 720  30 668 503 770 834  88 215 330
 405 488 701 149 141 509 360 762 861  63 728 554  65 139 359 832 136 765 507 580 117 120 780 877 252 479 195 659  76 856
 463 268 535 410 297 781  50 160 820 379 519 115 171 852 777 491 355 121 602 581  96 599 560 772 366 594 809 595  60 317
 900 332  43 873 680 796 433  31 698 113 760 208 811 678 369 101 306 111 340 400  87 393 552 338 896 677 456 271 363 499
 216 525 289 305 175 577 408 406 224 738 808 690 159 710 704 784 608 310  86 471 427 311 702  10 653 714 448  95 213 749

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.25654e+07us (= 32565.4ms, 32.5654s)
Wall-clock time (full program): 3.2598e+07us (= 32598ms, 32.598s)
Satisfaction error: 0
Number of search iterations: 14977
Number of local moves: 10824 (including on plateau: 10704)
Number of local minimum: 315 (including on plateau: 1378)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 316 746 449 410 809 835 757 217 363 388 788 645  69  62 798 462 622 383 210 854 321  38  91 220 107 264 794 883 126 488
 124 280  55 748 566 646 286 579 751 682 617 561 393 136 357  46 329 776 667 489 825 155 322 135 394 626 688 483 528 271
 793 156 733 747 494 586 355 594 882 530  17 202 258 427 500 692 112 514 702 277   2 260 227 293  99 674 662 819 485 423
  26   6 844 782 859  76 814 154 496 359 549 554 130 713 196 148 686 134 537 159 619 486 224 547 608 137 893 821 591 367
 318 778 827 171 354 336 470  56 303  86 253  71 847 623 328 408 899 580 206 601 468 659 317 192 452 753 379 614 740 426
 585 642 487 114  14 754 474 869 147 176 233 165 727 837 195 789 610 886 373 327  29 261 385 826 723 439 249 540 376 283
 257 117 278 436 666 694 717 739 575 515 297 230 396 229   5 845 216 544 445 637 397 853 456 531 522 871 218   8 116 705
 240 560 780 525 350   9 292 225 787 897 631 207 641 628  10 188 813  22 532 382 892 419 671 502 387 720 213 163 697 132
 881 510 760  96  67 583 673 714 629 839 348 874 625 325 836 339 862  37 352 104  34 429 209 157 242 145 469 479 745 152
 786 880 364 179 390 574 289 172 285 595 180 241 466 877 142 377 313 878 291 101 677 708 413 518 516 358 422 311 450 762
 404 346  90 658 424 563 621 288 365  83 627 454 391  19 781 279 507 670 160 472 875 592 569 728 299 457 492 370 222 709
 803 799 235 770 437 228 221  89 838 320 863 208 651 184 557 340 323 243 505 817 868 791 861  74  66  36  35 435 223 695
 506  16 802 815 785 122 305 822 211 556 314 458 734 420 166 562  33 576 110 669 884 181 842 115  54  50 864 572 273 698
 246 434 742 118   1 796 335 111 204 597 150 810 756 498 851 319 447 736 744 144 143 820 464  30 644 545 523 380 520 407
 828 738  79 428   3 451 384 191 676 564 463 700 417 598 185 857 495 161 302 295 484 690 262 613 607 527 453  94 467 503
 885 517 650 551 831 887 652 197 512 149  18 790 603 284 168 416  82 186 521 611 693 231 448 741 711 141 203 113 679  45
 555 162 749 769 587 643  85 266  64 282 824 588  52 433 170 759 338 538 900 201 465 245  13 412 653 256 763 409 455 879
 361 855 735 164 704 174  24 805 664 353 326 153  80 895 848 818 535 274 200 504 401 444  75  53 638 605 471 660 402 294
 378 237 219  68 832 442 840 730 374 183  40 722 526 368 573 333 823 425 342 685 703 189 725 767 120 632 476 123 570  70
 519 341 244 414 175  12 190 806 710 214 400 536 687 678   7 618 337 843 529 577 182 460 511 609 345 801 636 683  21 430
 602 366 758 127 553 236 726 689 304 129 102 771 752  77 891 649  97 308 889 497 131 331 106 834 699 250 493 270 691 187
 812 140  73 624 265 615 173  92 267 151 719  42 539 372 571 438 275 599 392 347  23 482 718 761 773 807 309 765 706 665
 212 712 199 369 441 716 633 255 639 663 715 681 356 276  27 867  48 198 421 584 362 779 829 254 797 105 301 415 351 310
 259 600 300  93 593 360 307 589  28 508 590 846 894 616 888 269 841 193 755 287   4 146 872 194 896 550 272  39 158 568
 668  59 604 125  11 108 675 849  63 478 860 541 418 890 296 109 432 205 403 808 606 480 552 707 226 490 406  31 565 850
 567 870 178 783  98  60 630 830 657 792 680  25 119 375 858 251 215 371 721  51 306 239 534 481 440 898 263 696 389 138
 128 729 344 764  78  47 634 656 800 558 684 405  44  72 559 743 772 103 533 596 315 640 349 281 290 234 635 647 100 775
  81 856  61 509 411 654 672 248 133 833 491 238 312 542 701 332 343 661  15 501 804 298 268 768 873 121 395  32 612 750
  41  20 546 777 865 513 232 431  57 169  88 732 548 324 578  95 724 816 581 461 543 766 620 398 247 499 139 784 446 475
 334  43 330 381 852 795  49 252 731 866 648  65  84 737 473 167 386 655 177 477 459 443 582 774  87 524 399 876 811  58

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 4.58953e+07us (= 45895.3ms, 45.8953s)
Wall-clock time (full program): 4.59281e+07us (= 45928.1ms, 45.9281s)
Satisfaction error: 0
Number of search iterations: 23957
Number of local moves: 18264 (including on plateau: 18143)
Number of local minimum: 383 (including on plateau: 2182)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 709 316 457 130 615 199 341  56 216 486 364 335 410 752 320 565 885 181 880 654 218 878 228 360 145 333 343 841 398
  45 864 419 714 188 170 868 555 865 797 542 844 169 100 664 599 363 270  16 369 347 139 215 774 140  79 846 857  60 637
 740 262 819 280 251 692  95 226 629 594 722 618 297  63 176 288 631  22 667 361 106 861 584 799 211 746 573 109 206 887
 279 393 324 803 856 742 743 576 357 513  26 126 813 273 346 210 120 777 598 761 242  18  24   7 663 510 412 850 436 717
 847  50 325 837 767 373 884 607 492 112  54 209 625 762 259 693 882  83 374 122 115   8 527 426 727 665 289 548 430 423
 201 593 238 765 382 738 204 899  97  15 604 123 388 378 754 569 782 504 691 354 768 596 158 131 467 260 227 634 271 724
 338 267 519 153 304 290 156 540 196 225 677 661 675 860 697 154 854 653 585 608 751 704  82 636 645 405 224  84  78 494
 217 776 246 892 678 685 674 732 277 298 498 690 447 687 415 272 496 450 247 483 349  96  67 721 293 372 368  73 619 397
  23 741 587 786 294 668  91 148 633 416 192 128 438 250  92  58 810  69 756  66 287 896 744 326 554 652 858 671 889 392
  76 180  39 824 239 681 672 679 432 603 144 370  40 730 399 460 470 632 353 235 660 855 310 308 321 772 838 252 318 623
 155  93 689  68 715 401 532 387 755 161 564 493 806  57 658 164 582  64 651 713 516 332 796 614  49 611 879 253 643 114
 578 826 232 175   2 248 245 118 682 875 849 507 127 219 731  65 234 680 759 311 512 244 694 545 189 265 319 800 867 617
 735 174 758 366 418 556 549 150 890 769 306  61 515 296 588 417 303 147 725 229 828 275 497  94 641 157  75 669 591 736
 488  44 791 286 586 203 673 466 208 406 411  72 365 544  98 703 110 763 348 655 764 805 381 829 550 595 464 485 254 168
 408 375 439 468 490 506 454 749 561 891 472 413 461   1 469 465 575 479 471 487 491 407 702   6  36 657  31 475 448 628
 684 421 463  30 356 207 371 705 444 396 501 458 403 757 627 449 816 237 481 474 171 707 624 431  59 876  35 422 477 433
   5 606 178 570 683 785 526 249 313 568 610 307 778 268 509   9 428 842 166 195 872  12 384 529 701 167 821 476 427 531
 812 300 536 843  42 111 551 342  85 221 344  29 602 649 137 571  14 404 793 832 152 794 291 429 873 807 521 553 845  32
 385 708 659 790 580 142 833 788 720 670 266 345 647 301 282 543 380 337 299 726 101 840 330 117 866 119 160 190 193 198
 223 648 435 379 811  20 522  25   3 222 264 802 191 710  74 883 274 292 863 305 339 355 530 825 563 897 577 716 390 377
 612 322 640 473 505  21  86 328 528 809 462 881 283 136 441 822 712 770  90 859 258 113 518 779 574 452 719 165 105  52
 621 138 214 312 583 566 862 605 557  19 350 546 233 132 394 771 656 723 871 572 533 711 437  55 646 688  37 508 124  51
 263 895 792 284 212 783 499 172 278 269 482 552 558 243 455 747 484 620  47 517 835 639 231  62 197 451 514 389 650 395
 893 327  43 186 503 590 818  53 600 453 698 276 836 352 753 613 194 240 745 622 183 597 642 151 309 359 666 184 315 314
 560 820 581 443 874 121 323 789 149 295 125 334  71 877 638 851  88 236 459 804  89 241 795 787  80 425 537 823 159 141
  38 495 734 511 129 798 644 179 391 696 539 750 695 814 182 116 616 589 162 103 784 230  41 834 525  70 205 107 686 852
 559 200 146 213 362 446 108 848 177 187 402 815 888 817 134 541   4 400 340  99 367 185 853 773 699 562 143 601 760 886
 434 442 898  81 133  17 257 547 500 869 827 780 729 329 534 445 135 456 163  34 524 523 414 478 409  11 830  77 831 808
 894 626 351 424 766 748  28 336 839 567 489 261  13 870 520 331 302 173 358  33 662 579 739  46 440 202 733 420 285 480
 502 220 104 102 676 592  48 376 801 383 609 700  87 630 737 386 635 718 256 706 255 535  27 775 728 538 281 781 317  10

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.56576e+07us (= 25657.6ms, 25.6576s)
Wall-clock time (full program): 2.56901e+07us (= 25690.1ms, 25.6901s)
Satisfaction error: 0
Number of search iterations: 11128
Number of local moves: 9000 (including on plateau: 8940)
Number of local minimum: 117 (including on plateau: 1108)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 330 765 181 392  38 319 516 316  27 779 866 556 284 683 770 141 487 747 240 343 743 794 214 768 204  68 217 292 698 737
 306 276 267 179 221 395 168 589 411 769 187 577 393 218 847 400 721 376 726  45 833 149 607 713 878 191 195 237 857 784
  30 329 339 798 390  11 264 845 895 897 885 317 298 107 685 799 101 540 348  50 537 775 105 746 178 163 666 789  35 593
 861 175 207 557 672 375  22 629 680 341 113 563 742 841 635 379  71 580 732   3  23 815 361 356 633 413 783 172 398 383
 334 771 268 843 757 624 200 206 323 251 279 151 521 850 510 385 782 759 112 106  42 534 243 156 859 734 472  55 687 701
 188  97 872 119 812 570 364 423  44 844 193 631 641 300 109 638  46 883 269 378 546 644 773 656 579 526 202 422 585 161
 724 567 545 173 122 491  98 730 870 370  43 803 263 384 249 714 250 699 296 610 228 367 898 755  63  95 549 620 621 318
 693 266 733 846 566  60 508 691 697 241 282 280  47 887 190 584 642 679 700  88 652 389  64 622 255 256 102 655 215 625
 900 230 208 586 592  41 806 653  15 484 702 308 159 639 295 373 337 260 802 342   8 729 756 345 365   6 716 357 649 852
 787 272 728 307 227 640 463  72 325 820 528 311 162 618 825 722 222 155 707 428 628 158 876 328 582  28  36 832 219 509
 710 838 811 369 139 744 196 336 760 380  49 650 613 761 890 271 723  40 636 681 436  89 473  12 469 495 662  39 164  79
 286 715 754 278  80 165 542  53 426 703 493 849 840  59 552 637 855 831 483 671 360 117 457  99  84 130 719 590 604  83
 543 410 571 538 560 399 541 362 500  67 657 763 529 511 518 535 174 569 553 548 184  24 530 312 523 287 630 752 258 167
  77 819 539 684 867 686 818   9 150 599 547 238 315 741 313 817 447 804  16 377 550 134 634 223   4 386 326 555 474 366
 498 854 320 458 451 492 520 449 446  33 466 477 438 456 478 501 482 468 433 452 417 205 505 453 503 464 425 486 441 444
 445 401 407 459 420 442 514 481 440 430 412 432 448 475 725 354 427 403 490 421 437 465 429 470 575 419 435 462 391 406
 611 643 209 262 110 561 712 396 347 176 669  69 121 405  29 434  65 609 564 889 418 839 834 332 816 627  96 668 871 133
 382 853 554  31 748 212 888  66 513 439 169 450 404  48 281 587 340 111  94 127 381 727 660 654 616 572 676 880 525 527
 745 129 489 632 273 886 614 764 138 667 682 352 485 239 677 265 573 623 288 515  10 605  34 826 519 740 397 120  74 154
 116 388 199  54 659 603  82 277 651 409 301 675 767 294  26 166  61 299 488 602 718 658 143 873 797 882 497 581 454 795
 780 349 414 612 335 827  17 879 785 261   7 896 809 322 576 185 235 246  93 848 704 720 210 182 253 506 751 152 302 259
 201 254  13 781 536 689 791 796 216 248 338 504 594 533 118 670 877  37 617 415 736 350 192 189 496 869 220  76 359 800
 310 626 211 234 374 132 709 198 233  91 461  18 708 213 664  52 245 865 884 499 257 203 735 842 615 821 706 137 778 694
 145 619 476 739 696  85 144 690 136 692 290  19 674 793 171 231 828 197 851 814 678 875   1 371  62 899  75 606  58 600
 645 324 807 893 305 146 387  14 648 824 431 372   5  25 801 180 868 443 224 467 479 157 471 558 512 226 881 128 762 532
 524 351 114 416 124 808 321 892 788  92 810 766 304 115 394 368 297 242 274 601 749 285 823 363 583 647 252 758 331 123
 153 147 665 148 894 772 663 559 565 805 480 836 244 126 183 661 858 270 293 283 860 863 309 135  86 813  78 574 160  32
 358 170 596 291 104 864 591 140 837  51 750 333 874 531 688 502 303 100 822 544 289 186 424 494 705  70 327 738 236 597
 777 103 786 711 608 229 862 402 562  21 830 142  57 588 314  73 408 455 460 695  90  81 646 551 346 353 856 275 517 717
  56 774 232 125 835 247 194 598  87 731 595 177 776 753   2 891 790 225  20 673 522 578 108 131 355 829 568 507 792 344

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.80808e+07us (= 18080.8ms, 18.0808s)
Wall-clock time (full program): 1.81143e+07us (= 18114.3ms, 18.1143s)
Satisfaction error: 0
Number of search iterations: 7252
Number of local moves: 5999 (including on plateau: 5939)
Number of local minimum: 63 (including on plateau: 679)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 371 900 520 807  97 766 296 382 229 234 238 843 215 437  37  92  49 158 881 123 838 834 783 404 875  48 874 303  18 863
 668 280 342 775 224 263 528  81 147 197 770 884  74 694 652 476 882 183 200 345 586 245 255 820 335 534 451 448 840 336
 828 833  28 373 318 645 119 815 115 140 174 755 109 363 865 277 614  80 633 537  79 499 577 640 702 598 449 813 475  62
 317  45 343 649 785 314 182 844 457  26 800  30 591 667 356 876 111 341 637 108 178 536 381 308  55 758 622 618 793 787
 294 663 692  84 613 207 713 463 191 646 822 285 231 812   6 375 127 761 413 393  64 198 625 415 527 763 440 496 417 779
 171 728 818 199 195 588 805 428 774 132 729 193  63 368 506 868 604 103 721 196 659 206 325 817 282 675  85 331 711 235
  94 558 867 391 685 397 717 141 741 122 760 546 152 297 605 676 706  61   8  29 386 654  33 797 631 173 683 585 329 691
 298  76 421 866 414 179 410 872 422 531 647 658 146 745 583 370 655 786 260 249 254 164 707 408 339 454 485 295 574 247
 576 608 782  32 479 283 364 720 189 572 427 560 498 163 584 589 269 880 469 540 796 305 349 525 648  90  51 632 188 347
 396 665 898 512 737 124 444 891   2 409 322 300 687 602 740  69  21 333  57 845 606 194 878 756  16 841 315 311  42 502
 744 883 112 501 853 617 253  89 769 672  95 564 266 390 323 557 418 376 801 555 524 743 292  58 204 526 210 257 710 153
 802 416 442 439 387 453 474 551 275 837 105 680 432 854 208 666 749 518 222 627 353 682   5  78 538 138 130 482 133 839
 899 535 307 461  47 431 334 777 660 661 362 205 367  24 350 764 569  54 517 514 101 596 686 836 825 272 221 129 402 609
 539 599   1 320 523 751  50 626 327 553  68 100 727 239 827 154 483 505 723 213 489 595 715 873 634 143 267 365 464 642
 473 120 519 490 488 507 486 847 895  36 513 494 430 121 508 468 434 472 515  83 426 856 438 436 869 452  41 573  65 460
 420 290 400  15 559 871 369 116 612 689 412 411 638 804 389 443 384 624   9 354 718 134 148 145 481 703 799 759 357 462
 696 106 484 738 388 698  12  11 858 734 459 742 399 405 244 287 398 610 337 886 107 629 326 219 284 401 798 352 366 541
 699 392 252 128 669  10 890  22 162 732 286 712 361 554 849 301 407 313 522 716 752 324 274 142  23 888 747 340 862 186
 102 319 338 172 552 521 264  52 458 887  35 701 821 542 246   3 250 879 819 832 877 351 395 177 227 304 731 860 620 180
 332 312 582 650 684 487 543 201 465 896 310 441 623 328  14 657 809  93  87 306 693 823 316 344 688 570 262  71 321 607
 240 547 722 810 113 892 139 571 566  91 563 679 677 169 894 567 137 545 467 241 270 616 725 289  20 492 217 708 495  53
  73 500 630 236 256 791 674 423 299 242 724 852  27 593 271 735 117 824 470 762 678 359  66 579 273 259 276 750 220 556
 378 202 714 503 885 212 795 330 829 681 635 230 578 110 181 780 851 447 466 778  38 159 261 491 511 372 562 429  40  67
 864  34 150 664 794  31 811 739  19 346 203 575 211  46 279 157 587 192 243 643 842 826 771  75 792 709 619  77 700 516
 776 736 641 510 232 184 135 550 611 697 118  39 504 561 695 600 662 209 580 753 394  44 615 165 757  60 636 628 155 268
 214 377 248 670 185 509 855 176 293  96 870 216 893 480 136 175 754 767 433 168 549 406 144 383 719 816 435 831 568 149
  43  99 228 167  17 704 592 803 726 533 889  98 806 690 789 835 379 456 156 478  25 288 848 653 385  56 644 225 601 302
 590 788  59 251 857  86 603 493 403 358 594 265 861 765 424  72 126 846 850 671 223 226 581   4 125 621 151 104 772 746
 548 773 814 656 170 639 471 419 477 114  88 450 768 237 281 278 258 808 160 380 565 233 166 781 532 425 530  13 748 733
  70 131 161 446 309 355 187  82 544 651 497   7 360 455 673 348 705 291 859 190 445 790 830 897 218 374 784 730 529 597

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.85253e+07us (= 28525.3ms, 28.5253s)
Wall-clock time (full program): 2.85585e+07us (= 28558.5ms, 28.5585s)
Satisfaction error: 0
Number of search iterations: 11826
Number of local moves: 9906 (including on plateau: 9846)
Number of local minimum: 77 (including on plateau: 1181)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 553 424 145 646 116 789 883 404 395 662 107   9 255 795 740 776 390 861 159 347 685 511 657 878  96  12 106 372 497 245
 224 812 529 605 311 291 277 253 306  34 473 543 700 313 389 726 387 892  52 584 504 283 451 537 641 217 174 880 729 398
 466 162 381 688 286 765 877 103 535 732 816 672 522 824 540 238 524  91 194 456 681 598 869 342 239  84 464 108  43 215
 653 386 817 570 102  31 823 868 402 518 388 696 477 480 783 442 787 221  71 321 746 887   5  75  78 271 701 407 126 383
 626 216  36 652 673  33 284 251 131 829 686 762 278 475 715 200 668 485 533 453 165 695 891 745 542 367  50  87 423 564
 433 809   3 867 591  86 230 555 514   6  64 428  68 265 218 375 660 171 310 721 864   8 658 853 780 527 549 896 212 794
 362 391 312 488 784 822 172 832 143 199 890 807 647 712 516  99 166 604 597 632 285 607 572 353  77 556  37 568  82 203
 208 293 583 753 640 752 167 785 885  61 197 888 396 229 448 670 100  62  18 675  70 289 744  27 545 500 586 727 468 749
 833 592 677 631 318 788 202 619 462 486 338 336 897 447 354 590 357 507 678  39 814 257  40 186 830  85 723 242  17 170
 112 836 574 512 435 813 876 582  16 706 109 895 261 566 204 846 163 730  14 222 274  15 295 158  59 440 625 840 589 748
 559 146 252 160 786 621 149 247 777 879 175 115 629 491  51 603 169 119 636 852 397 755  48 337 616 341 893 771 844  97
 359 320 798 717 728 461 561 370 351 124  32 611  20 374 614 734 683 329 523 322 802 368  35 213 503 234 679 446 501 703
 761  13 481 393 412 325 551  28 358 770 136 659 769 483 875 182 623 154 756  19 193 380 805 800 384 815 526 266 173 425
 691 268 314 301 849 184 226 760 467 104 546 449 438 254 692 859 682 898 661  22 164 702 373 429 340 417 459 279 492 195
 671 431 302 110 474 415 857 851 280 304 209 548 848 437 150 348 509 476 648 135 465 711 452 113 443 628 506 422 408 364
 332 430 207  98 610 767 211 796 716  58  73 298 161 900 382 317 250 294 105 237 808 455 842 508 674 742 416 687 563 578
 349 781 637 142 410 249  76 210 782 856  10  24 821 144   7 666 656 693 581 547 189 484 470 839 157 697 731 698  29 580
 725 739 838 418 125 300 139 434 644  53 866 134 223 432 791 196 403 355 709 287 324 719 515 419 655 315 111 188 699 759
 231 743 705 617 737 573   1 369 248 444 220 779 690 520 427 818  25 123 874 835 560 127 281 532 837 192 178  38 593 198
 882 316 155 819 308 133 528 185 538 620 258 176  47 214 778 445 519 307 366 710 392 606 736 406 750 571 319 585 496 350
 244 288  49 352 201 343 595 799 773 330 664 602 299 714 401 260 855 649 334 269 233 327 552 539 282 420 663 609 828  41
  66 758 460 205 472 872 831 275 613 863 227 243 881 643  95 513 576  89 757 569 140 137  88 624 579 825 454 246 151 263
 510 129 899 399 704 803 344 792  80 634 713 633 457 120 117 122 827 292 469 768 400 190 458 498 747  57 323 638 346  46
 272 870  69 847 413 262 708  74  79 733 845  63  72 577 596  45 339 871 594 187  94 179 502 335 850 754 587 177 720 801
 235 241 225 377 421 360 834 128 565   2 806 741 206  30 541 707 534 588 654 409 826 735 365  44  93 536 820 550 168 774
 303 531 651  26 147 114 138 669 264 889 751  67 804 183 790 495  65 441 487 873 567 627  60 599 763 544 326  90 676 575
 494 642 810  54 557 426 886 296 684 639 689 118 232 493 259 345 622 562 130 121 724  83  81 738 180 463 439 558 525 665
 236  92 615 600  21  56 290  23 356 309 612 499 489 865 793  11 141 797 718 854 371 680 630 860  42 841 331 256 361 766
 517 385 694 228 490 645 618 478 884   4 772 450 153 156 148 333 530 219 405 191 505 722 276 376 132 650 328 521 894 811
 608 471 297 240 394 436 181 479 267 667 843 270 775 379 101 554 305 635 482 858 273 378 764 152 601 414 411 363 862  55

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 5.56901e+07us (= 55690.1ms, 55.6901s)
Wall-clock time (full program): 5.57227e+07us (= 55722.7ms, 55.7227s)
Satisfaction error: 0
Number of search iterations: 28760
Number of local moves: 19775 (including on plateau: 19594)
Number of local minimum: 717 (including on plateau: 2393)
Number of resets: 2
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
  39 798 200 525  53 253 883 326 874 841 639 885 149  43 820 131 234 876 900 504  49 299 320 543 160 137 408 693  68 865
   6 146 720 431  58 513 426 590 501 484 529 862 773  63 461 270 240  37 332 450 462 623 871 482 464 898   2 381 718 722
 334 510 825 679 657 517 329 198 345 520 662 342  15 859 440 133 624 254 227 672  28 479  51 303 493 597 268 804 589 761
 403  57 220 793 553 823 236 706 781 562  99 818 106 273 212 755 500 256 836 339 261 442   5 126 191 700 778 795 248 641
 255 775 467 453 794 743 689 366 834  14 445  90 779 759 189 352 607 726 378 570 165 125 415 316 121 813 265 291  85 634
  42  22 752 276 675 217 309 492 644 735 616 242 806 747 152 159 377 417 800 306 791 317 815 893 116 237 490 258 124 688
 737 181   3 827 465  45 459 891 419 663 347 592 764 565 386 156 400 790 745 835 151 252 477 375  30 612 293 849  79 127
 671 161 267  74 379 409 668 687 890 783 173 210 194 514 712 686 832 860 850 175 548 153 682 395 147  82 572  11 701  29
 183  46 476 433 443 182 534 279 685 154  40 729 439 585 300 528 489 425 348 782 574 637 428 655 564 483 734 785 119 456
 748 631 162 205 615 193 872 828 246 591 202 105 696 330 531 225 203 313 118 880 638 632 784  55 796  17 179 331 780 609
 814 630 446 656 485 287 750 741 376  38 575 811 884 130  78 357  65   9 739  10 530 559 289 364 839 380 666 257 167 583
 786 757 725 407 150 840 197  69 878  20 736 468 578 651 274 351 694 285 120   1 211 802 762 691 810 219 526 108 292 107
 640 707 472 522  76 247 897 896 412 855 676 659 539 282 728 421 618 496 188 136  67 547  23  21 207 259 174 875 406 469
 770 387 370 633 569 226 109 323 204 405 368 305 599 478  52  32 716 584 551 275 877 846 262 649 749 711 491 113 807  54
 648 669 318 144 856 163 554 593 307 222 797 847 705  71 451 449 777 100 238 373 670 322 295  24 190 756 844 579 389 164
 296 460 454 751 335 410 444 457 186 537  34 166 458 394 523 438 767 391 475 441 420 422 723 452 803 402 692 437 470 277
 769 102 674 792 627 608 435 272 519 418  26 232 122 812 358 744  87 143 385 424 401 487 101 621 349 606 873 709 269 550
 280 611 245 613 176 301  16 361 509 297 719  97 383 829 758 560  19 404 223 848 541 229 549 626 766 533 742 556 365 359
 601 171 192 863 596 208  33 170  84 314 845 646  83 298 892  41 128 382 337 595 851 367 665 505 598 727 362 635 788 538
  48 288 817 328 374 230 717 821 369 213 356  66 532  98  77 830 754 787 206 340 724 776 545 567 824 566 172  44 544 502
 243 732 603 354 819 868  31 201  75 310 888 346 129 721 604 881 138 524 319 145 542 678 695 180  95 650 497 867  72 308
 416 271 654  13 895 448 772 360 571 673 169 353 388 499 740 643 216 221 768 664 142 503 515  96 563  61 714 315 474 398
 594 228 473 430 471 495 774 235 463 518 455 697  18 392 713 250 857 536 555 512 805 117 195 302  59 214 677 249 423 808
 414 861 605 557 284 231 184 432  81  73 327  56 304 178 215 581 702 636 582 103 765 396  47 771 602 842 620 576 652 838
 372 384 822 434 148 527 393 870 580 390 680 413 290 311 209 699  62 187  86 703 619 199 338 336 899 399 647 350 540 628
 629 753   4 645 158 568 112  70  50 658 889 586 816 653 617  12 894 698 355 683 239 642 371 552 588 114   7 139 507 506
 546 763 577  91 681 866 104  92 333 324 155 882 343 614  60 854 241 587 466 760 294 251 831 858 286 135 134 625 622 140
 684 789 157 141 852 733 480 168 325 730 224 341 481 196 429 799 558 837 494 363 731  93 690 123 312 397 264  36 600 488
 266  64 111 185 244 843 447 486 886 427  35 436 278 887 708 511 498  94  25 516   8 710 508 801 573 853 344 715 879 177
 281 561 704 260  27 521 661 535  88 746 809 233 864 283 826 667 218 660 869 110 411 610 263 833 321 115  80 132 738  89

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 2.70575e+07us (= 27057.5ms, 27.0575s)
Wall-clock time (full program): 2.70901e+07us (= 27090.1ms, 27.0901s)
Satisfaction error: 0
Number of search iterations: 11937
Number of local moves: 9559 (including on plateau: 9499)
Number of local minimum: 112 (including on plateau: 1197)
Number of resets: 0
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 741 899 377 260 140 654 235 645 349  79   3 337 259 789 657 881 694 385 623 815 394 602 492 194 817 174  89 650 261  20
 412 661 548 467 778 839  11  21  84 451 413 374  81 562 275 481 322 463 488 762  33 840 216 609 552 820 390 426 858 278
 228 464 338 746 626 311 629  24  40  70 583 866 149 415 268 873 859  16 847 155 604 560 373 102 217 617 396 610 810 719
 341 111 715 865 754 158 438 732 814 670 119 364 830 607 181 685 164 148 244   8 827   9 213 729 250 588 462 204 709 576
 506 234 843 790 405 472 220 395 656 699   1 497 635 447 542 711 740 207 468 514 487 282 406 528 485 210  93 379 152 511
 459 749 764 370 344 171 577 813 633  57 224 417 289  98 780 850 747 816  85 386  44 496 478 876 178 123  86 410 885 310
 716 769 658 346 521  77 334 239 554 599 868 236 477  10 575 298 100  58 742 110  50 705 262 277 799 458 745 568 712 652
 534 130 516 726 196 540 864 353  27 625 425 132  39  61 466 219 773 811 683 339 456 737 594 777  59 127 893 590 172 651
 821  95 849 572 252 299 126 871 863 668 836 343 319 833 331 407 360 107 306 229 486  28  66  68 806 393 443 785 160 793
 686 538 788  14  22 570 648 565 791 201 860 674 243 371 258  32 853 601 177 567 255 266 232 551 693  64 518 145 624 708
 432 109 358 198 340   5 592   7 717 627 351 841 884 461 490 200 288 151 484 559 634 855 460 452 632 882 544 163 274 525
 550 736  23 139 431  72 106 522 363 269 362 598 867 355 197 665 605 227 825 738 723 305 673 388 725 620 647 103 479 202
 587 225 612 856 891 455 482 509 400  87 475 445  26 618 494 878 170 191 105 883 614 758 231 369 505 697 122 495 117 218
 664 286  99 557  91 897 179 493 696 678 367  83 880 446 689 422 134 108 877 795 519 765 113 301 242 361 744 441  30 558
 297 473 314 347 529 427 834 831 606 303 663 889  52 245 499 638 384 276 756 205 655 372 702 345 112  38 823 365 208 327
 104 273 313 368 797 837 253 382 672  13 768   6 680  36  43 403 420 805 471 707 724 185 569 469  37 786 444 703 423 824
 517 465  17  80 193 416 591  15 595 704  48 543  25 439 677 700 838 571 753 580 563 874 290 457 775 553  96 507  88 545
 846  45 796 184 251 684 280 307 247 666 515 392 832  97 173  34 857 688 419 238 398 621 579 759 691 186 256 342 782 350
   2 900 209 324 761 852 391 169  90 500  78 808  41 321 270 168 733 869 293 433 739 896 619 135 611 404 530  12 512 845
 603 332 750 195 879 230 215 125 566 284 561 159 734 710 690 613 309 662 596 564 302 211 226 317 402 474 389 531 770 116
 192  63 131 812 114 214 138 429 713 283 682 315 267 639 698 586 183 730 300 357 819 470 615 728 476 265 330 671 687 608
 348 722 264 669 118 597 450 539 822 848 133  46 428 199 875 142 316 667 408 630 124 380 641 776 802 449 203 206 129 584
 121 502 161 751 513 720 401 448 628 771  69 498 760 312 585  56 520 285 489 411 787 212 581 101 436 435 649 292 767 254
 329 653 549 434 890 418 886 895  54 826 800 323 414 781 421 480 165 190 399 279 223 294  62 180 304 136 221 779 336 794
 166 748 721  47 792 453 501  73 809 430 359 616 424 828 755  42 318 504  51 147  31 640 642 862  82 120 735 888 356 375
 894 807 233 622 378 333 727 354 237  18 892 287 593 743 249 772 376  19 527 842 644 272 187 675  94 409  76 546 660  49
 578 328 157 695 804 676 291 784  65 692 397  55 483 143 150 325 573 774 257 167  71 326 714 861 508 818 503 176 589 555
  53 582 491  92 526 381 646 763 153 801 263 887 437 541 128 524 523 636 246 752 295  75 872  74 387 681 574 537 454 141
 547 296 854 637   4 222 600 679 115 154 757 718 835 510 659 182 162 844 536  35 631 335 556 189 137 829 783 188 240 281
 241 320  67 352 175 535 870 533 156 442 643 766 532 898 440 248  29 706  60 308 383 144 851 366 701 798 731 803 271 146

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 3.93029e+07us (= 39302.9ms, 39.3029s)
Wall-clock time (full program): 3.93355e+07us (= 39335.5ms, 39.3355s)
Satisfaction error: 0
Number of search iterations: 18526
Number of local moves: 14160 (including on plateau: 14041)
Number of local minimum: 290 (including on plateau: 1696)
Number of resets: 1
Number of restarts: 0

@@@@@@@@@@@@
Variable heuristic: Adaptive Search
Value heuristic: Adaptive Search
Started from a custom variables assignment: false
Search resumed from a previous run: false
Parallel search: false
Number of threads (not used if no parallel search): 16
Number of variable assignments samplings at start (if custom start and resume are set to false): 10
Variables of local minimum are frozen for: 181 local moves
Selected variables are frozen for: 0 local moves
90 variables are reset when 181 variables are frozen
Do a restart each time 900 resets are performed
############
Solution:
 900 647 864 250 170 188 143 892 451 891 187 696 103 654 680 274 744 131 591 463  25 796 350 711   2  12 232 730 161 577
 162 875 526 330 532  79 357 321 782 201 827 768  16 288 863 112 844 780  84 338 192 379  59 245 859 824 721 561 400 190
 397 394  62 417 470 853 294  61 774 296 176 547 888 169 778 650 663  71 428 676 280 110 209  72 530 656 797 310 829 658
 322 114 127  41 695 866 264 777  83 779 639 498 684 191 115 208 763  77 126 144 677 847 356 865 693   7 793 772 836 156
 664 404 503 117 755 137 831  47 304 675 382 328 292 708 308 389 593 408 812 272 380 479 607 688 655 429 153 437 465 293
 116 269 775 703 224 749 508 855  17 540 204  31 633  43 387 399 256 473  42 495 850 482 433 887 491 621 548 837 200 447
 247 898  81 573 385 713 746 407 557 125 849 833 410 136 826 237 150 243  69 550 705 165 701 277 259 627 543 167 402 634
 740 727 215 731 100 529 894 689 883 858 225 249 783 585  32 805 505 160 867 158  89 566 306  94 597 790  45 154  54  85
 105 148 486 856 562 222 706   4 667 189 537  67  37 337 101 427 683 877 512 699 260 679 584  93 881 412 358 807 848 371
  97 828 523 184 383 372 869 538 361 599 119 569 722 596 146 673 332 517 238  66 681  33 220 571 149 724 707 611 574 513
 871 756 253 522 252 687 313 629 567  49 549 809 182 659  27 248 590 223 630 580 606 714 212 420 279 173 506 477 157 575
 767 496 610 726 152 509 124 798 830 424 787 565 626 568 123 735  58 234 365 166 340 527 217 261  22 665  92 174 697 857
 638 533 616 195 494 698 769 111  53 535 524 197 570 514 560 551 466 717 619 139 545 178 376 504 142 556 312 369 164 870
 457  86 130 219 770  87 813 282 588  90 511 221 820 800 582   6 808 531 671 578 873 615 846 108 141 344 501 341 668  28
 834  98  74 268 317 442  96 764 880 446  38 168 214 544 438 441 715 729 409 872 678 132 283 450 554 471 854  55 510 741
 485 434 421 459 483 439 426 395 425 462 443 791 618 449 475 413 414 416 455 368 375 487 464 354 436 406 481 423 415 403
 700  44 265 492 609  73 211 484 718  76 862 159 364 246 690 748 405 384 254 811 842 581 534 343 579 109 113 318 750 751
 603 628 500 339 643 810 692 311 324 186 799 333 348  78 342 646 396 525 435 362 840  56 792 155 299 175 614 326 631 327
 386 694 766 893 899 456 133 636 231 452 273 345 852 469  99 134 885  10 300 539 388 351  34 392 359 314 240 625 572 788
 353 284 120 709  50 307 422 478  46 725 536 183 140 801 515 229 230 251 757 360  26 817 430 747 818 760 803 670  88 860
 244 758 896 177 804 393 315 325 203 291 151 645 686 106 546 838 637 823  21 732 286  19 685 377 602  68 507 502 672 206
 795 474 373 620 786  75 497 239 242 737  14 263 592 185 613 267 196 612 258 642 784 180 710 845 290 821 320 624 398  63
 605 346 270  40 147 235  48 207 216 752 661 890 519 210 886  57 814 489 521 754 488 640 622 349 653 129 765 897  20 285
 347 476 657 228  64 275 691  15 305 194 138 583 802 587 608 712  60 331 841 601 753 303 816 257 255 716 128 739 218 815
  91 418   5 819 876 745 390 702 781 832 761 499 266 467  95 635 104  36 733 776 122 289 652 271 662 329 102 458 236 363
 366 641 794 889 370  23 480 825 107 518 563 728 309 759 666 281   1 879   8  30 163 262 334 762 743 202 644  51 822 295
 528 336 874 181 301 595 172 355 461 789 323  82  65 302 553 785 598 843 617  39  80 868 193 895 198 444  70 594 632 742
 440 121 391 839 227 586 660 589 367 472 431 460  13 884 401 352 118 651 682 241 145 736 520 649 445 555 378 199 411 552
 226 564 734 493 276 490   3 179 623 297 448 432 419 806 773 704 171 233 835 213 723 453 454 738 541 878 468 278  11  52
  29  24 604 205 719 882 648 600 669  35 558 576 542 374 287 559 316 861 335 851 319 771 516 135 381 298 720   9 674  18

SATISFACTION run
Permutation problem: true
Time budget: 6e+07us (= 60000ms, 60s)
Search time: 1.84724e+07us (= 18472.4ms, 18.4724s)
Wall-clock time (full program): 1.85057e+07us (= 18505.7ms, 18.5057s)
Satisfaction error: 0
Number of search iterations: 7504
Number of local moves: 5746 (including on plateau: 5686)
Number of local minimum: 128 (including on plateau: 696)
Number of resets: 0
Number of restarts: 0

